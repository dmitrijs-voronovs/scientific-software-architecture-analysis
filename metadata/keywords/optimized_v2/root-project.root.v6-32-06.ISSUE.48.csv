quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Safety,[rootcling] Drop redundant function parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4545:17,redund,redundant,17,https://root.cern,https://github.com/root-project/root/pull/4545,1,['redund'],['redundant']
Safety,[rootcling] Remove redundant flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4270:19,redund,redundant,19,https://root.cern,https://github.com/root-project/root/pull/4270,1,['redund'],['redundant']
Safety,[rpdutils] Avoid linux macro redefinition warning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3874:11,Avoid,Avoid,11,https://root.cern,https://github.com/root-project/root/pull/3874,1,['Avoid'],['Avoid']
Safety,"[skip-ci]. # This Pull request:. Makes the CI load OpenStack object-store credentials from files on runners instead of using GitHub secrets. When `pull_request` is a workflow trigger, the job can't access secrets, which means that the S3 secret token is unavailable. Adding S3 credentials to the runners themselves solves this issue. The OpenStack credentials are defined [here](https://gitlab.cern.ch/ai/it-puppet-hostgroup-lcgapp/-/blob/rootci_test/code/manifests/build/root.pp#L43) (using [teigi](https://configdocs.web.cern.ch/secrets/adding.html)). If a malicious actor makes a PR with a job to print the credentials, or to upload a malicious artifact, it would still have to be approved by a maintainer. A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201:712,safe,safer,712,https://root.cern,https://github.com/root-project/root/pull/12201,1,['safe'],['safer']
Safety,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15296:58,detect,detection,58,https://root.cern,https://github.com/root-project/root/pull/15296,1,['detect'],['detection']
Safety,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15297:58,detect,detection,58,https://root.cern,https://github.com/root-project/root/pull/15297,1,['detect'],['detection']
Safety,[tmva] Avoid calling TMVA::Python_Executable() when Pymva is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10253:7,Avoid,Avoid,7,https://root.cern,https://github.com/root-project/root/pull/10253,1,['Avoid'],['Avoid']
Safety,"[tmva] Impose correct test dependencies, avoid multiple invocations of Declare, avoid races when writing model files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16711:41,avoid,avoid,41,https://root.cern,https://github.com/root-project/root/pull/16711,2,['avoid'],['avoid']
Safety,[tmva] More fixes to avoid timeout in TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12041:21,avoid,avoid,21,https://root.cern,https://github.com/root-project/root/pull/12041,2,"['avoid', 'timeout']","['avoid', 'timeout']"
Safety,[tmva][pymva] Avoid creating the output file tmva.root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14125:14,Avoid,Avoid,14,https://root.cern,https://github.com/root-project/root/pull/14125,1,['Avoid'],['Avoid']
Safety,[tmva][pymva] Backport in 6.28 the fix to avoid creating output file tmva.root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14996:42,avoid,avoid,42,https://root.cern,https://github.com/root-project/root/pull/14996,1,['avoid'],['avoid']
Safety,[tree] Avoid buffer overflow in TBranch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15620:7,Avoid,Avoid,7,https://root.cern,https://github.com/root-project/root/pull/15620,1,['Avoid'],['Avoid']
Safety,[tree] Avoid odr-using TTree::kMaxEntries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12352:7,Avoid,Avoid,7,https://root.cern,https://github.com/root-project/root/pull/12352,1,['Avoid'],['Avoid']
Safety,[tree] Avoid odr-using TTree::kMaxEntries (v6.28),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12369:7,Avoid,Avoid,7,https://root.cern,https://github.com/root-project/root/pull/12369,1,['Avoid'],['Avoid']
Safety,[tree] avoid dependency from TreePlayer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5246:7,avoid,avoid,7,https://root.cern,https://github.com/root-project/root/pull/5246,2,['avoid'],['avoid']
Safety,[tree] public method should be safe against fImpl = null,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15324:31,safe,safe,31,https://root.cern,https://github.com/root-project/root/pull/15324,1,['safe'],['safe']
Safety,"[tutorial,pythia8] Try to work around timeout on Fed28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2359:38,timeout,timeout,38,https://root.cern,https://github.com/root-project/root/pull/2359,1,['timeout'],['timeout']
Safety,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15295:43,detect,detection,43,https://root.cern,https://github.com/root-project/root/pull/15295,1,['detect'],['detection']
Safety,[tutorials] safer version of CPUMeter.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14379:12,safe,safer,12,https://root.cern,https://github.com/root-project/root/pull/14379,1,['safe'],['safer']
Safety,[v6-28] Add a safety check on `std::multimap::empty()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14240:14,safe,safety,14,https://root.cern,https://github.com/root-project/root/pull/14240,1,['safe'],['safety']
Safety,[v6-28] Qualify calls to llvm::format that have ::std:: types as parameters to avoid ambiguity in overload resolution when ADL finds `std::format`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12732:79,avoid,avoid,79,https://root.cern,https://github.com/root-project/root/pull/12732,1,['avoid'],['avoid']
Safety,[v6-30] Add a safety check on `std::multimap::empty()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14239:14,safe,safety,14,https://root.cern,https://github.com/root-project/root/pull/14239,1,['safe'],['safety']
Safety,[v6-32][cmake] Avoid warning when building from tar file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16231:15,Avoid,Avoid,15,https://root.cern,https://github.com/root-project/root/pull/16231,1,['Avoid'],['Avoid']
Safety,[v6.28][backport][windows] Make `OpenDirectory` and `GetDirEntry` thread safe (#13472),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13500:73,safe,safe,73,https://root.cern,https://github.com/root-project/root/pull/13500,1,['safe'],['safe']
Safety,[v628] io: Avoid infinite recursion in TFile::Open,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15625:11,Avoid,Avoid,11,https://root.cern,https://github.com/root-project/root/pull/15625,1,['Avoid'],['Avoid']
Safety,[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15305:44,avoid,avoid,44,https://root.cern,https://github.com/root-project/root/pull/15305,1,['avoid'],['avoid']
Safety,[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15303:44,avoid,avoid,44,https://root.cern,https://github.com/root-project/root/pull/15303,1,['avoid'],['avoid']
Safety,[v630][DF][backport] Avoid usage of Mathmore/gsl in df106 tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13994:21,Avoid,Avoid,21,https://root.cern,https://github.com/root-project/root/pull/13994,1,['Avoid'],['Avoid']
Safety,[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15304:44,avoid,avoid,44,https://root.cern,https://github.com/root-project/root/pull/15304,1,['avoid'],['avoid']
Safety,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15298:49,detect,detection,49,https://root.cern,https://github.com/root-project/root/pull/15298,1,['detect'],['detection']
Safety,"[web geom] avoid binary data transfer, use JSON_base64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4146:11,avoid,avoid,11,https://root.cern,https://github.com/root-project/root/pull/4146,1,['avoid'],['avoid']
Safety,[webgui] detect available browser when producing image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13097:9,detect,detect,9,https://root.cern,https://github.com/root-project/root/pull/13097,1,['detect'],['detect']
Safety,[windows] Make `OpenDirectory` and `GetDirEntry` thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13472:56,safe,safe,56,https://root.cern,https://github.com/root-project/root/pull/13472,1,['safe'],['safe']
Safety,"\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288; #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c); #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void); Shadow bytes around the buggy address:; 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00; 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa; =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa; 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==13496==ABORTING; C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5; 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]; ```; Now I don't know how ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2370893163:13462,ABORT,ABORTING,13462,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2370893163,1,['ABORT'],['ABORTING']
Safety,"\n"";. // The model can now be applied in different scenarios:; // 1) Event-by-event inference; // 2) Batch inference on data of multiple events; // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference; // The event-by-event inference takes the values of the variables as a std::vector<float>.; // Note that the return value is as well a std::vector<float> since the reader; // is also capable to process models with multiple outputs.; auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});; std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events; // For batch inference, the data needs to be structured as a matrix. For this; // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame; // and the AsTensor utility to make the read-out from the ROOT file.; ROOT::RDataFrame df(""TreeS"", filename);; auto df2 = df.Range(3); // Read only 10 events; auto x = AsTensor<float>(df2, variables);; std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);; std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph; // We write a small lambda function that performs for us the inference on; // a dataframe to omit code duplication.; auto make_histo = [&](const std::string &treename) {; ROOT::RDataFrame df(treename, filename);; auto df2 = df.Define(""y"", Predict<4, float>(model), variables);; return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");; };. auto sig = make_histo(""TreeS"");; auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);; auto c = new TCanvas("""", """", 800, 800);; sig->SetLineColor(kRed);; bkg->SetLineColor(kBlue);; bkg->GetXaxis()->SetTitle(""Model response"");; bkg->Draw(""HIST"");; sig->Draw(""HIST SAME"");; c->SaveAs(""bdt_response.pdf"");; }; ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:1956,Predict,Predict,1956,https://root.cern,https://github.com/root-project/root/pull/3321,3,['Predict'],"['Predict', 'Prediction']"
Safety,"_local i8** @__cudaRegisterFatBinary(i8*); > ; > define dso_local void @__cuda_module_ctor_cling_module_6(i8*) {; > %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); > store i8** %2, i8*** @__cuda_gpubin_handle, align 8; > call void @__cuda_register_globals(i8** %2); > call void @__cudaRegisterFatBinaryEnd(i8** %2); > %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor_cling_module_6); > ret void; > }; > ; > declare dso_local void @__cudaRegisterFatBinaryEnd(i8**); > ; > declare dso_local void @__cudaUnregisterFatBinary(i8**); > ; > define dso_local void @__cuda_module_dtor_cling_module_6(i8*) {; > %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8; > call void @__cudaUnregisterFatBinary(i8** %2); > ret void; > }; > ; > declare dso_local i32 @atexit(void (i8*)*); > ; > ; Function Attrs: nounwind; > declare void @llvm.stackprotector(i8*, i8**) #2; > ; > attributes #0 = { noinline uwtable ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-frame-pointer-elim-non-leaf"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""x86-64"" ""target-features""=""+cx8,+fxsr,+mmx,+sse,+sse2,+x87"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; > attributes #1 = { argmemonly nounwind }; > attributes #2 = { nounwind }; > ; > !llvm.module.flags = !{!0, !1}; > !llvm.ident = !{!2}; > ; > !0 = !{i32 2, !""SDK Version"", [2 x i32] [i32 10, i32 1]}; > !1 = !{i32 1, !""wchar_size"", i32 4}; > !2 = !{!""clang version 9.0.1 (http://root.cern.ch/git/clang.git 535acc218f73a05f5602c950898dafda8a45feb7) (http://root.cern.ch/git/llvm.git c41338c59334340ee4d85a7c9bbdf49a4f59f76b)""}; > ```. @hahnjo, I had the impression you fixed a similar issue in llvm mainline? Could you help with this here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:23993,unsafe,unsafe-fp-math,23993,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,1,['unsafe'],['unsafe-fp-math']
Safety,"_renderer, ; GLX_MESA_swap_control, GLX_OML_swap_method, GLX_OML_sync_control, ; GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, ; GLX_SGIX_visual_select_group, GLX_SGI_make_current_read, ; GLX_SGI_swap_control, GLX_SGI_video_sync; GLX version: 1.2; GLX extensions:; GLX_ARB_get_proc_address, GLX_ARB_multisample, GLX_EXT_import_context, ; GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_MESA_query_renderer, ; GLX_OML_swap_method, GLX_SGIS_multisample, GLX_SGIX_fbconfig, ; GLX_SGI_make_current_read; Extended renderer info (GLX_MESA_query_renderer):; Vendor: VMware, Inc. (0xffffffff); Device: llvmpipe (LLVM 10.0.0, 256 bits) (0xffffffff); Version: 20.0.8; Accelerated: no; Video memory: 7279MB; Unified memory: no; Preferred profile: core (0x1); Max core profile version: 3.3; Max compat profile version: 3.1; Max GLES1 profile version: 1.1; Max GLES[23] profile version: 3.1; ... Full error:; Error in <TEveViewer::SpawnGLViewer>: Insufficient support from the graphics hardware. Aborting.; *** Break *** segmentation violation; Generating stack trace...; 0x00007fd360487563 in TEveViewer::SpawnGLViewer(TGedEditor*, bool, bool) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveViewer.cxx:182 from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360430693 in TEveManager::SpawnNewViewer(char const*, char const*, bool) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveManager.cxx:327 (discriminator 4) from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360433458 in TEveManager::TEveManager(unsigned int, unsigned int, bool, char const*) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveManager.cxx:175 (discriminator 1) from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360433885 in TEveManager::Create(bool, char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6774:2298,Abort,Aborting,2298,https://root.cern,https://github.com/root-project/root/issues/6774,1,['Abort'],['Aborting']
Safety,_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3658,recover,recover,3658,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['recover'],['recover']
Safety,_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/); - [projectroot.roottest.root.tree.chain.roottest_root_tree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396933089:1170,recover,recover,1170,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396933089,1,['recover'],['recover']
Safety,"` is still empty. So the `diagrams.size() > 0` check will never be true and the if-block can be removed, no?; - [x] The [`_nonInterferig`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/inc/RooLagrangianMorphFunc.h#L266) data member is used in a few member functions, but it is never filled so always an empty vector. How meaningful is that? Can `_nonInterfering` be removed? ; - [x] It's annoying to have all these explicit usage of `this`, just to access a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2621) returns an owning raw pointer too, while it should return a `std::unique_ptr<TH1>` in this case. Can this interface still be changed without disrupting users too much? **No, this can break usercode, so this suggestion was not implemented!**. All these flaws above have been addressed by @rahulgrit in #9912. Some more flaws were fixed in #11023. - [x] The `getCache` function takes a unused argument. It is a private function, so to signature can simply be changed and the argument removed; - [x] The unused `_ownsParameters` member should be removed. However, that's not all! There are more issues with this class that have to be resolved in a followup PR:. - [x] Various memory leaks (search for `new ` in the file and you will fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:1800,avoid,avoid,1800,https://root.cern,https://github.com/root-project/root/issues/9845,1,['avoid'],['avoid']
Safety,` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:9200,Avoid,Avoid,9200,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['Avoid'],['Avoid']
Safety,"`DistancetoPrimitive` is the base method to be overridden by visual primitives attached to the pad. In `geom` we attach several different objects. Among these, shapes implement this function directly, while for volumes there is some traversal logic in the geometry painter, dispatching eventually to the shapes methods. Composite Boolean shapes are special and need an extra internal specialized dispatching for union, intersection, and subtraction. The intention was to do this dispatching by avoiding the TObject interface (Boolean nodes are never added directly to the pad), and this is why the upper case `T`. However, due to the complexity, these functions are not implemented, so now they are not even connected to `TGeoCompositeShape::DistancetoPrimitive`. . Sorry for this long explanation, this is only to say there is nothing to worry about, the functions are placeholders to remember that this functionality could be added at some point. I would close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087#issuecomment-2255333723:494,avoid,avoiding,494,https://root.cern,https://github.com/root-project/root/issues/16087#issuecomment-2255333723,1,['avoid'],['avoiding']
Safety,`EnableThreadSafety()` is called in `_batchgenerator.py` making another call for it redundant and `class RBatchGenerator` depends to Internal namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14860:84,redund,redundant,84,https://root.cern,https://github.com/root-project/root/pull/14860,1,['redund'],['redundant']
Safety,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-504644265:16,abort,abort,16,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-504644265,1,['abort'],['abort']
Safety,`Error` is a bit of a middle ground. It indicates it is bad but recoverable and more important offer the framework that have their own error handler to mark those (and only those) as fatal if they want.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1601284481:64,recover,recoverable,64,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1601284481,1,['recover'],['recoverable']
Safety,"`FunctionScopesStart` and `InventedParameterInfosStart` were introduced by upstream commit https://github.com/llvm/llvm-project/commit/5c845c1c50ac89a6f12557d1571678f3d1432478 and are handled in `ContextRAII`, but not our `ContextAndScopeRAII`. The second commit reuses `ContextRAII` and should avoid this kind of problem in the future. Could fix https://github.com/root-project/root/issues/14230, to be confirmed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15004:295,avoid,avoid,295,https://root.cern,https://github.com/root-project/root/pull/15004,1,['avoid'],['avoid']
Safety,"`GetEntriesFast` is not as fast as it could be: it constructs and; destructs a `TReadLockGuard`, and might need to modify `TObjArray::fLast`.; This PR introduced `GetEntriesUnsafe`, a thread-unsafe version of `GetEntriesFast`; that side-steps these operations when possible. Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository:. With `GetEntriesFast`:; ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; TreeGetEntryOneBranch 192943 ns 192939 ns 3664; TreeGetEntryTwoBranchesAndAllStatusFalse 110524 ns 110521 ns 6433; TreeGetEntryTwoBranches 195864 ns 195859 ns 3430; TreeGetEntryTwoBranchesWithoutSetStatus 317772 ns 317761 ns 2095; BranchGetEntryOneBranch 103652 ns 103650 ns 6730; BranchGetEntryTwoBranches 104072 ns 104070 ns 6707; ```. With `GetEntriesUnsafe`:; ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; TreeGetEntryOneBranch 152708 ns 152690 ns 4579; TreeGetEntryTwoBranchesAndAllStatusFalse 91277 ns 91274 ns 7731; TreeGetEntryTwoBranches 173940 ns 173922 ns 4024; TreeGetEntryTwoBranchesWithoutSetStatus 279271 ns 279261 ns 2514; BranchGetEntryOneBranch 104515 ns 104503 ns 6721; BranchGetEntryTwoBranches 104180 ns 104177 ns 6652; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3603:191,unsafe,unsafe,191,https://root.cern,https://github.com/root-project/root/pull/3603,1,['unsafe'],['unsafe']
Safety,"`RColumnRegister` has a copy-on-write policy, introduced by https://github.com/root-project/root/pull/10899 and further explained at https://github.com/root-project/root/pull/11297 . For very large computation graphs (e.g. O(10K) `Define` calls) this means that we are allocating/deallocating `std::shared_ptr<std::unordered_map<std::string, std::shared_ptr<RDefinesWithReaders>>>` of thousands of nodes, with an increasing size at each Define call. While keeping the map with *all* the defined columns is necessary in order to avoid losing information about the computation graph itself, I wonder if we can move away from the copy-on-write policy without too many problems, given the situation presented by the large computation graphs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14490:528,avoid,avoid,528,https://root.cern,https://github.com/root-project/root/pull/14490,1,['avoid'],['avoid']
Safety,`TDirectory::RegisterGDirectory` is MT unsafe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:39,unsafe,unsafe,39,https://root.cern,https://github.com/root-project/root/issues/8931,1,['unsafe'],['unsafe']
Safety,"```; /Users/couet/git/zevis/ZevLib/src/ZCanvas.cxx:361:17: error: member access into incomplete type 'TCanvasImp'; fCanvasImp->GetWindowGeometry(fWindowTopX, fWindowTopY,. ```; I am on MacOS. `cmake` gives me:; ```; % cmake ../zevis; -- The CXX compiler identification is AppleClang 11.0.3.11030032; -- The C compiler identification is AppleClang 11.0.3.11030032; -- The Fortran compiler identification is GNU 8.2.0; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Checking whether Fortran compiler has -isysroot; -- Checking whether Fortran compiler has -isysroot - yes; -- Checking whether Fortran compiler supports OSX deployment target flag; -- Checking whether Fortran compiler supports OSX deployment target flag - yes; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Performing Test COMPILER_SUPPORTS_-O1; -- Performing Test COMPILER_SUPPORTS_-O1 - Success; -- Performing Test COMPILER_SUPPORTS_-pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692657827:683,Detect,Detecting,683,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692657827,4,['Detect'],['Detecting']
Safety,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11071:150,Detect,DetectorConstruction,150,https://root.cern,https://github.com/root-project/root/issues/11071,1,['Detect'],['DetectorConstruction']
Safety,"```; The following tests FAILED:; 1312 - roottest-python-basic-basic (Failed); 1313 - roottest-python-basic-datatype (Failed); 1315 - roottest-python-basic-overload (Failed); 1409 - roottest-python-pythonizations-pythonizations (Failed); 1410 - roottest-python-pythonizations-smartptr (Failed); 1413 - roottest-python-stl-stl (Failed); 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed); ```. All tests have the following issue:. ```; Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:540,timeout,timeout,540,https://root.cern,https://github.com/root-project/root/issues/6597,1,['timeout'],['timeout']
Safety,"```; root -l 'openTree.C(0)' -b -q; Processing openTree.C(0)...; 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q; Processing openTree.C(1)...; 20.2826ºC; ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:; ```; t4->SetBranchAddress(""fTemperature"", &temp);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14583#issuecomment-2048287133:634,detect,detect,634,https://root.cern,https://github.com/root-project/root/issues/14583#issuecomment-2048287133,1,['detect'],['detect']
Safety,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:902,detect,detector,902,https://root.cern,https://github.com/root-project/root/issues/11385,1,['detect'],['detector']
Safety,"`double par[] = {1};` does instead of `double par[0] = {1};` does not avoid the warning, because the compiler can still figure out the size of the array. In the case of multiple parameters, one can use a `std::vector`, in which case the compiler doesn't know the size at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12763#issuecomment-1536069548:70,avoid,avoid,70,https://root.cern,https://github.com/root-project/root/pull/12763#issuecomment-1536069548,1,['avoid'],['avoid']
Safety,"`fork()`-ing a multi-thread program typically ends up badly. In ROOT, TBB spawns threads when RTaskArena is constructed, and Cocoa spawns threads, on Mac, when graphics are activated. We would like to employ a similar mechanism to what is used to loop over threads to print their stacktraces on a crash in order to detect whether `TTreeProcessorMP::Process` is called from a multi-thread program, and warn users if so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7167:315,detect,detect,315,https://root.cern,https://github.com/root-project/root/issues/7167,1,['detect'],['detect']
Safety,"`gPluginManagerMutex` is protecting (mainly but not only) the (shared) container `fHandlers`. As used, it is recursive because we can not tell what we be the side effects of `SetupCallEnv` (if I remember correctly, it calls `TClass::GetClass` which might load a shared library which might run arbitrary code including something using the `PluginManager`. > A shared lock could solve this. . I am not sure what you mean (i.e a straight replacement would not have 'large' performance improvement). One of the thing that we might be able to do is to set the `fHandlers's TList` to be thread safe (by calling `UseRWLock` on it). If we do so, the locking will be move from global to down to the internal operation of the `TList`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631#issuecomment-1293675942:588,safe,safe,588,https://root.cern,https://github.com/root-project/root/pull/11631#issuecomment-1293675942,1,['safe'],['safe']
Safety,`rootcling` does not properly detect the class doc when using a `ClassDefOverride`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9900:30,detect,detect,30,https://root.cern,https://github.com/root-project/root/issues/9900,1,['detect'],['detect']
Safety,"`roottest-python-JupyROOT-tpython_notebook` fails with `nbconvert-7.14`:; ```diff; --- tpython.ipynb; +++ tpython_out.ipynb; @@ -16,7 +16,14 @@; ""name"": ""stdout"",; ""output_type"": ""stream"",; ""text"": [; - ""1\n""; + ""1""; + ]; + },; + {; + ""name"": ""stdout"",; + ""output_type"": ""stream"",; + ""text"": [; + ""\n""; ]; }; ],; ```. For now, we avoid that version since https://github.com/root-project/roottest/pull/1041 / commit https://github.com/root-project/roottest/commit/a68af407d9577a055f44c58e42c42b1244b484cc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14303:330,avoid,avoid,330,https://root.cern,https://github.com/root-project/root/issues/14303,1,['avoid'],['avoid']
Safety,"`std::vector<T,Allocator>::operator[]` with unsafe assignment break pretty printer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9166:44,unsafe,unsafe,44,https://root.cern,https://github.com/root-project/root/issues/9166,1,['unsafe'],['unsafe']
Safety,"`vector<char>` is a more common choice as a byte buffer than `unique_ptr<char[]>`, so if it's possible to use it it's still memory-safe and it does not require `make_unique<char[]>`. as per the backport...it's a different jira ticket, but it's broken, so i think it's desirable to have a working version",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2420#issuecomment-409949555:131,safe,safe,131,https://root.cern,https://github.com/root-project/root/pull/2420#issuecomment-409949555,1,['safe'],['safe']
Safety,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:1880,avoid,avoid,1880,https://root.cern,https://github.com/root-project/root/issues/8745,2,['avoid'],['avoid']
Safety,"a-prefix`. You can use `set substitute-path` in `gdb` to map the paths to local copy of the sources. ```bash; $ EXTRA_CLING_ARGS='-O1' gdb --args root.exe -l -b -q -x test.cpp++; GNU gdb (GDB) 11.1; Copyright (C) 2021 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-conda-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root.exe...; (gdb) set auto-load safe-path /; (gdb) break CXXABICtxSwapper::SwapCtx; Function ""CXXABICtxSwapper::SwapCtx"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (CXXABICtxSwapper::SwapCtx) pending.; (gdb) run; Starting program: /home/cburr/mambaforge/envs/root-debug/bin/root.exe -l -b -q -x test.cpp++; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after fork from child process 151706]; [Detaching after fork from child process 151708]; [Detaching after fork from child process 151713]; [Detaching after fork from child process 151715]; [Detaching after fork from child process 151803]; [Detaching after fork from child process 151807]. Breakpoint 1, (anonymous namespace)::CXXABICtxSwapper::SwapCtx (other=..., this=0x55555600d260) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:35; 35	/usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp: No such file or directory.; (gdb) set substitute-path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021571360:1145,safe,safe-path,1145,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021571360,1,['safe'],['safe-path']
Safety,"able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTTP or XRootD. This is perhaps something to keep in mind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:1783,avoid,avoid,1783,https://root.cern,https://github.com/root-project/root/pull/2322,1,['avoid'],['avoid']
Safety,"ace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:4337,Detect,Detectors,4337,https://root.cern,https://github.com/root-project/root/issues/8931,3,['Detect'],"['Detector', 'Detectors', 'DetectorsBase']"
Safety,"acters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. // Plot 3; // Broken .C macro again because special charecters are not filtered from ""Name""; RooPlot* frame3 = x.frame();; data->plotOn(frame3);; gaus.plotOn(frame3, Name(""a+b""));; frame3->Draw();; c->SaveAs(""./plot3.png"");; c->SaveAs(""./plot3.C"");; }; ```. ### ROOT version. 6.24.06. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15887:1811,safe,safe,1811,https://root.cern,https://github.com/root-project/root/issues/15887,1,['safe'],['safe']
Safety,"age(ROOT 6.30 CONFIG REQUIRED); ```. succeeds. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Vdt: /mnt/hdd1/krasznaa/projects/root/install/include (found version ""0.4"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/hdd1/krasznaa/projects/root/buildtest; [bash][pcadp04]:buildtest >; ```. Wile previously it failed. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Warning (dev) at /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.; Run ""cmake --help-policy CMP0074"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. CMake variable Vdt_ROOT is set to:. /mnt/hdd1/krasznaa/projects/root/install/cmake/.. For compatibility, CMake is ignoring the variable.; Call Stack (most recent call first):; /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:140 (find_dependency); CMakeLists.txt:5 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840829056:1092,Detect,Detecting,1092,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840829056,4,['Detect'],['Detecting']
Safety,"ake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```; cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/; -- The C compiler identification is Clang 11.0.0; -- The CXX compiler identification is Clang 11.0.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building xeus-cling v0.12.0; -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config; -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") ; -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so ; -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") ;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-784497193:1072,Detect,Detecting,1072,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-784497193,4,['Detect'],['Detecting']
Safety,all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:2297,avoid,avoid,2297,https://root.cern,https://github.com/root-project/root/pull/13783,3,['avoid'],['avoid']
Safety,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16543#issuecomment-2380720821:57,timeout,timeouts,57,https://root.cern,https://github.com/root-project/root/pull/16543#issuecomment-2380720821,1,['timeout'],['timeouts']
Safety,"ally overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; > I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that.; > ; > > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; > All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But again, if there is a better way, I am also in favor of avoiding -fPIC-; > ; > > This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here:; > > https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302; > > ; > > The challenge is to come up with a consistent symbol resolution :); > > Just as a comment, two other possibilities would be to:; > ; > * put the llvm / clang which are embedded in ROOT into a namespace, so the symbols do not collide with system LLVM symbols. This likely would not fix the global statics. > ; > * If the clang changes are upstreamed eventually, this shouldn't be necessary anymore, since cling could use system LLVM / Clang. We are in the versioning hell, as the version of the system LLVM might differ from the ones the `libgandiva` ships with. There we are facing a similar issue -- to make sure the JIT does not pick the wrong ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564024419:2088,avoid,avoiding,2088,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564024419,1,['avoid'],['avoiding']
Safety,"am Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:; 972: -- END TEST OUTPUT --; 972: -- BEGIN TEST ERROR --; 972: Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; 972: Execution of your code was aborted.; 972: ROOT_cli_1:1:2: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; 972: *p; 972: ^; 972:; 972: -- END TEST ERROR --; 1/1 Test #972: roottest-cling-exception-nullderef-e ... Passed 0.44 sec. The following tests passed:; roottest-cling-exception-nullderef-e. 100% tests passed, 0 tests failed out of 1. Label Time Summary:; cling = 0.44 sec*proc (1 test); regression = 0.44 sec*proc (1 test); roottest = 0.44 sec*proc (1 test). Total Test time (real) = 2.93 sec; ```; And BTW, no need to report the test failures, we are aware of some tests filing with some versions of Visual Studio and architecture (e.g. with VS 2022 x64). And since we run al the tests in our CI, we see immediately if something fails. Note that we are aware of some failing tests, some due to incompatibilities between VS a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:2224,abort,aborted,2224,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,1,['abort'],['aborted']
Safety,"an01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>> CApath: none; >>>>>>> * Server certificate:; >>>>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:5088,safe,safelinks,5088,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['safe'],['safelinks']
Safety,and a test.; This PR includes also #3363 just to avoid conflicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3364:49,avoid,avoid,49,https://root.cern,https://github.com/root-project/root/pull/3364,1,['avoid'],['avoid']
Safety,"and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3635,Avoid,Avoid,3635,https://root.cern,https://github.com/root-project/root/pull/12905,1,['Avoid'],['Avoid']
Safety,and templates in the context of private methods to avoid doc squeezed to the right.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2744:51,avoid,avoid,51,https://root.cern,https://github.com/root-project/root/pull/2744,1,['avoid'],['avoid']
Safety,"and therewith notebooks.; This was necessary to work around fakemodule, which has been removed; from ipython a long time ago.; The invocation to TPython triggers the loading of the TPyClassGenerator; TClassGenerator. Such generator acquires the GIL from within C++ code; unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3262:319,safe,safety,319,https://root.cern,https://github.com/root-project/root/pull/3262,1,['safe'],['safety']
Safety,"andleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPad::Resize, e.g. ```; // Compute new pad positions in the NDC space of parent; fXlowNDC = Double_t(apx1 - parentpx1)/Double_t(parentpx2 - parentpx1);; fYlowNDC = Double_t(apy1 - parentpy1)/Double_t(parentpy2 - parentpy1);; fWNDC = Double_t(apx2 - apx1)/Double_t(parentpx2 - parentpx1);; fHNDC = Double_t(apy2 - apy1)/Double_t(parentpy2 - parentpy1);; ```. Would someone from developers be interested to look there ?. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344:2189,unsafe,unsafe,2189,https://root.cern,https://github.com/root-project/root/issues/6344,1,['unsafe'],['unsafe']
Safety,"angSerialization.a interpreter/llvm-project/llvm/lib/libclangSema.a interpreter/llvm-project/llvm/lib/libclangAnalysis.a interpreter/llvm-project/llvm/lib/libclangASTMatchers.a interpreter/llvm-project/llvm/lib/libclangEdit.a interpreter/llvm-project/llvm/lib/libclangSupport.a interpreter/llvm-project/llvm/lib/libclangAST.a interpreter/llvm-project/llvm/lib/libclangLex.a interpreter/llvm-project/llvm/lib/libclangBasic.a /usr/lib/llvm-16/lib/libLLVM-16.so.1 && :; ```. However, calling rootcling fails with `Option 'W' registered more than once!`:; ```; Reading symbols from core/rootcling_stage1/src/rootcling_stage1...; (gdb) run; Starting program: /home/stephan/Projects/ROOT/builddir/core/rootcling_stage1/src/rootcling_stage1 ; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44; #1 0x00007ffff049b15f in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 0x00007ffff044d472 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff04374b2 in __GI_abort () at ./stdlib/abort.c:79; #4 0x00007ffff18856e5 in llvm::report_fatal_error(llvm::Twine const&, bool) () from /usr/lib/llvm-16/lib/libLLVM-16.so.1; #5 0x00007ffff1885526 in llvm::report_fatal_error(char const*, bool) () from /usr/lib/llvm-16/lib/libLLVM-16.so.1; #6 0x00007ffff1871251 in ?? () from /usr/lib/llvm-16/lib/libLLVM-16.so.1; #7 0x00007ffff18626cb in llvm::cl::Option::addArgument() () from /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1658967214:5867,Abort,Aborted,5867,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1658967214,1,['Abort'],['Aborted']
Safety,"anks in advance for fixing that issue, ; Romain. ### Reproducer. ```C++; #include ""TFileMerger.h""; #include ""TSystem.h""; #include ""TUUID.h""; #include ""TFile.h""; #include ""TH1F.h"". #include <iostream>; #include <string> . // Function defined after the main function ; void createFileWithHists(const std::string &fileName);. int main(){. // Choose the number of the test; // 0 or 1 ; int numTest = 0;. createFileWithHists(""myFileWithHists.root"");. TFileMerger fileMerger(false);; fileMerger.SetMsgPrefix(""selectiveHadd"");; fileMerger.SetPrintLevel(1);. // Set a selective list of objects to hadd ; // The rest of objects will not be considered in the input files ; fileMerger.AddObjectNames(""hist1"");; fileMerger.AddObjectNames(""hist2"");. // Set output file ; fileMerger.OutputFile(""myExclusiveFile.root"",""recreate"");. // Set input file(s) ; fileMerger.AddFile(""myFileWithHists.root"");. if (numTest == 1){; ; // In that case add a dummy file i.e. empty file ; // In order to avoid the bug in in the TFileMerger class ; // if there is only one input file used. std::string tmpDir = gSystem->TempDirectory();; // create a unique empty file ; std::string dummyFileName = tmpDir +""/dummyEmptyFile-"" + std::string(TUUID().AsString()) + "".root"";. std::cout << ""Creating a dummy empty file to avoid a bug in TFileMerger class: "" << dummyFileName << std::endl;; // Just create dummy file ; TFile *file = TFile::Open(dummyFileName.c_str(),""recreate"");; delete file;; fileMerger.AddFile(dummyFileName.c_str());; }; ; // Will only merge in the output files ; // the list of objects specified ; Int_t mode = (TFileMerger::kAll | TFileMerger::kRegular | TFileMerger::kOnlyListed);; ; fileMerger.PartialMerge(mode);; ; return 0;; }. void createFileWithHists(const std::string &fileName){; TFile *file = TFile::Open(fileName.c_str(), ""recreate""); . TH1F *hist1 = new TH1F(""hist1"", ""hist1"", 1 , 0 , 2);; TH1F *hist2 = new TH1F(""hist2"", ""hist2"", 1 , 0 , 2);; TH1F *hist3 = new TH1F(""hist3"", ""hist3"", 1 , 0 , 2);; TH1F *h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:3178,avoid,avoid,3178,https://root.cern,https://github.com/root-project/root/issues/13359,1,['avoid'],['avoid']
Safety,"aps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cxx; index fc93cc8b82..0e77517729 100644; --- a/geom/geompainter/src/TGeoChecker.cxx; +++ b/geom/geompainter/src/TGeoChecker.cxx; @@ -1193,7 +1193,7 @@ TGeoOverlap *TGeoChecker::MakeCheckOverlap(const char *name, TGeoVolume *vol1, T; /// Check illegal overlaps for volume VOL within a limit OVLP by sampling npoints; /// inside the volume shape. -void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t /* ovlp */, Int_t npoints) const; +void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t ovlp, Int_t npoints) const; {; Int_t nd = vol->GetNdaughters();; if (nd < 2); @@ -1268,7 +1268,7 @@ void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t /* ovlp */,; }; // The point is inside 2 or more daughters, check safety; safe = shape->Safety(local, kTRUE);; - // if (safe < ovlp) continue;; + if (safe < ovlp) continue;; // We really have found an overlap -> store the point in a container; iovlp++;; if (!novlps) {; ```. 3. Recompile/Reinstall and Re-run: big overlaps unchanged as expected, known overlaps of size ~0.4 still there with low threshold but masked with sufficient threshold, overlap of size ~10^-8 cut in all cases as expected. ### ROOT version. Original observation with `v6.22` to `v6.26`; Cross-check with current master, given source commit probably present from `v5-19-04` until current master. ### Installation method. Built from source within Fairsoft, built from source standalone. ### Operating system. Ubuntu 20.04, Debian 10 and 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:4473,safe,safety,4473,https://root.cern,https://github.com/root-project/root/issues/14675,5,"['Safe', 'safe']","['Safety', 'safe', 'safety']"
Safety,"ar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:1870,Avoid,Avoid,1870,https://root.cern,https://github.com/root-project/root/pull/12681,4,['Avoid'],['Avoid']
Safety,"arch order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special behavior is if you called ; `DynamicLibrary::addPermanentLibrary(handle)`. So you should be safe there.; >; > And even worse than that is that in your scheme there is no way of ; > hiding symbols from the global scope, in fact it promotes everything ; > that the user reasonably expected to be private (via RTLD_LOCAL) to ; > take dominance over anything else.; >; I understand that and I am totally fine for fixing this the right way ; after the llvm release.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/744#issuecomment-313799028>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuU_J817GPmYooZ_jUyw85N6Y9ayBUks5sLqTrgaJpZM4OO5d2>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:3335,safe,safe,3335,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['safe'],['safe']
Safety,"ard for unknown arguments. ; * `TRint` crashes when instantiated with `*argc = nullptr` and / or `argv = nullptr` which are the default values for `TApplication` and hence may be used by existing users of the `TRint` constructor. . ### Affected use cases; Applications may do something like:; ```cpp; TRint *app = new TRint(""app"", 0, NULL);; ...; app->Run(kTRUE);; ```; Applications may also use `TRint` during operation. One existing model some applications I use are employing is:; * Create a `TRint` shortly after startup, passing in `argc` and `argv`. ; * Allow the user to drop to a ROOT interpreter prompt. This is then done by calling `app->Run(kTRUE);`. A user can use the interpreter to inspect state of the analysis software, and exit it again to let the software continue. . The latter approach is extremely useful for example to shell out after analysis software startup, or inside an event, such that the user can interactively analyze objects right from a ROOT interpreter shell. . ### Questions; * Is the use case ""use TRint as class to drop into the interpreter"" supported? ; The changelog of 6.26.00 reads like `TRint` is meant for internal use by `root.exe` only, but there seems to be no easy alternative. ; Depending on the reply, this could be a separate bug report, or a ""wontfix"". ; * If the use case is / should be supported, It would be useful to be able to allow unsupported arguments to pass through, for use in applications which are not `root.exe`. ; * For improved backwards compatibility and safety, not crashing when being passed `*argc = nullptr` and / or `argv = nullptr` would be nice. . In case somebody else is hit by this, I am right now using this hack as workaround:; ```cpp; int dargc = 1;; char** dargv = &argv[0];; myApp = new TRint(""myApp"", &dargc, dargv, nullptr, 0, kTRUE);; myApp->GetOptions(&argc, (argv));; gSystem->SetProgname(argv[0]);; ```; This allows to re-use the `TApplication` functionality as before, without triggering one of the two issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090:1775,safe,safety,1775,https://root.cern,https://github.com/root-project/root/issues/10090,1,['safe'],['safety']
Safety,"are probably missing the definition of class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cling::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to be: 1500; 893: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 893: error code: -529697949; 893:; 893:; 16/16 Test #893: tutorial-dataframe-df031_Stats-py ........................***Failed 4.47 sec. 0% tests passed, 16 tests failed out of 16. Label Time Summary:; tutorial = 85.86 sec*proc (16 tests). Total Test time (real) = 94.38 sec. The following tests FAILED:; 878 - tutorial-dataframe-df001_introduction-py (Failed); 879 - tutorial-dataframe-df002_dataModel-py (Failed); 880 - tutorial-dataframe-df003_profiles-py (Failed); 881 - tutorial-dataframe-df004_cutFlowReport-py (Failed); 882 - tutorial-dataframe-df006_ranges-py (Failed); 883 - tutorial-dataframe-df007_snapshot-py (Failed); 884 - tutorial-dataframe-df008_createDataSetFromScratch-py (Failed); 885 - tutorial-dataframe-df010_trivialDataSource-py (Failed); 886 - tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py (Failed); 887 - tutorial-dataframe-df014_CSVDataSource-py (Failed); 888 - t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:16196,timeout,timeout,16196,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,article. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenParticle); TClass::GetClass: Header Parsing - The representation of HepMC::GenParticle was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting HepMC::GenParticle in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenParticle); Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::Flow; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::Flow. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::Flow; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::Flow. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::Flow; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::Flow. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::Flow; Info ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:6233,avoid,avoided,6233,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['avoid'],['avoided']
Safety,"as it turnes out the `...class.C` files generated by the TMVA MLP are not thread safe (`fWeights` is a constant array of contant pointers to beginnings of double arrays, and the contents therein vary at runtime inside the GetMvaValue__ method). So the quick hack here is to replace the class member of dynamically allocated arrays by fixed sized arrays in the function scope. # QUASICODE OLD. ```; class mlp {; private:; double *fweights[3]; mlp() {; fweights[0] = new double[5];; fweights[1] = new double[10];; fweights[2] = new double[1];; }; ~mlp() {; delete fweights[0];; delete fweights[1];; delete fweights[2];; }; getmvavalue( std::vector<double> input) const {; fweights[0] = input;; fweights[1] = some_function(fweights[0]);; fweights[2] = some_other_function(fweights[1]);; return fweights[2][0];; }; ```. # QUASICODE NEW. ```; class mlp {; private:; mlp() {; }; ~mlp() {; }; getmvavalue( std::vector<double> input) const {. double fweights0[5];; double fweights1[10];; double fweights2[1];; fweights0 = input;; fweights1 = some_function(fweights0);; fweights2 = some_other_function(fweights1);; return fweights2[0];; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/572:81,safe,safe,81,https://root.cern,https://github.com/root-project/root/pull/572,1,['safe'],['safe']
Safety,"assInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:1463,Abort,Aborted,1463,https://root.cern,https://github.com/root-project/root/pull/5462,1,['Abort'],['Aborted']
Safety,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:2796,abort,aborted,2796,https://root.cern,https://github.com/root-project/root/issues/12426,1,['abort'],['aborted']
Safety,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:2163,detect,detected,2163,https://root.cern,https://github.com/root-project/root/issues/11494,1,['detect'],['detected']
Safety,"ativity) and I also took the liberty and modified `root://eospublic.cern.ch//eos/root-eos/xrootd.test` so it is in line with `http://root.cern.ch/files/davix.test`. ```; ctest -I 164,165; Test project /home/simonm/git/root-my/buildtmp; Start 164: gtest-net-davix-test-RRawFileDavix; 1/2 Test #164: gtest-net-davix-test-RRawFileDavix ..... Passed 0.20 sec; Start 165: gtest-net-netxng-test-RRawFileNetXNG; 2/2 Test #165: gtest-net-netxng-test-RRawFileNetXNG ... Passed 0.05 sec; ```. However running the full test suite yielded some failures:. ```; 99% tests passed, 18 tests failed out of 2101. Label Time Summary:; cling = 69.10 sec; longtest = 1541.18 sec; matrix = 0.22 sec; multithreaded = 206.29 sec; python_runtime_deps = 27.45 sec; regression = 68.69 sec; roottest = 69.32 sec; tutorial = 1559.92 sec. Total Test time (real) = 5594.32 sec. The following tests FAILED:; 	 3 - pyunittests-pyroot-dependency-versions (Failed); 	 56 - pyunittests-pyroot-numbadeclare (Failed); 	 57 - test-import-numba (Failed); 	918 - tutorial-dataframe-df026_AsNumpyArrays-py (Failed); 	920 - test-import-pandas (Failed); 	961 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Failed); 	962 - test-import-numba (Failed); 	1219 - roottest-python-JupyROOT-cppcompleter_doctest (Failed); 	1220 - roottest-python-JupyROOT-handlers_doctest (Failed); 	1221 - roottest-python-JupyROOT-utils_doctest (Failed); 	1222 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1223 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1224 - roottest-python-JupyROOT-thread_local_notebook (Failed); 	1225 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 	1226 - roottest-python-JupyROOT-tpython_notebook (Failed); 	1227 - roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook (Failed); 	1444 - roottest-root-html-runMakeIndex (Failed); 	1627 - roottest-root-meta-execTypedefList-auto (Failed); ```. I don't think it's related to the PR but to be on the safe side I'm reporting it. P. S.; Again, sorry for the delay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-948823698:2020,safe,safe,2020,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-948823698,1,['safe'],['safe']
Safety,"ator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1285:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:11:26.424Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:11:26.424Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:11:26.424Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 32 more. ### Warnings:; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-05-04T11:11:27.359Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-831862141:4186,avoid,avoid,4186,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-831862141,2,['avoid'],['avoid']
Safety,"attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinput_2.root; Fill: Switching to new file: filemergeroutput_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0) at waitpid.c:38; #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:2232,abort,aborting,2232,https://root.cern,https://github.com/root-project/root/issues/6640,1,['abort'],['aborting']
Safety,avoid error bar clipping,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6697:0,avoid,avoid,0,https://root.cern,https://github.com/root-project/root/pull/6697,1,['avoid'],['avoid']
Safety,avoid error when copy&pasting code from doxygen,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/268:0,avoid,avoid,0,https://root.cern,https://github.com/root-project/root/pull/268,1,['avoid'],['avoid']
Safety,avoid memory copy in TDecompChol::TDecompChol,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15284:0,avoid,avoid,0,https://root.cern,https://github.com/root-project/root/pull/15284,1,['avoid'],['avoid']
Safety,"b.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a href=""https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94""><code>63e7ed0</code></a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/minimistjs/minimist/commit/c590d75b741a12b5423e2b299f38a7f7c7d25a18""><code>c590d75</code></a> v1.2.7</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83c3c""><code>0ebf4eb</code></a> [meta] add <code>auto-changelog</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/e115b63fa9d3909f33b00a2db647ff79068388de""><code>e115b63</code></a> [actions] add reusable workflows</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a> [meta] add <code>safe-publish-latest</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/f58745b9bb84348e1be72af7dbba5840c7c13013""><code>f58745b</code></a> [eslint] add eslint; rules to enable later are warnings</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a> [Tests] add <code>aud</code> in <code>posttest</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/236f4a07e4ebe5ee44f1496ec6974991ab293ffd""><code>236f4a0</code></a> [readme] rename and add badges</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65""><code>ab03356</code></a> [Dev Deps] switch from <code>covert</code> to <code>nyc</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a> [Dev Deps] update <code>covert</code>, <code>tape</code>; remove unnecessary <code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:5960,safe,safe-publish-latest,5960,https://root.cern,https://github.com/root-project/root/pull/11865,1,['safe'],['safe-publish-latest']
Safety,"b293ffd""><code>236f4a0</code></a></li>; <li>[meta] create FUNDING.yml; add <code>funding</code> in package.json <a href=""https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a""><code>783a49b</code></a></li>; <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <a href=""https://github.com/minimistjs/minimist/commit/f81ece6aaec2fa14e69ff4f1e0407a8c4e2635a2""><code>f81ece6</code></a></li>; <li>Only apps should have lockfiles <a href=""https://github.com/minimistjs/minimist/commit/56cad44c7f879b9bb5ec18fcc349308024a89bfc""><code>56cad44</code></a></li>; <li>[Dev Deps] update <code>covert</code>, <code>tape</code>; remove unnecessary <code>tap</code> <a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a></li>; <li>[Tests] add <code>aud</code> in <code>posttest</code> <a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a></li>; <li>[meta] add <code>safe-publish-latest</code> <a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a></li>; <li>[meta] update repo URLs <a href=""https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd""><code>6b164c7</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6"">v1.2.6</a> - 2022-03-21</h2>; <h3>Commits</h3>; <ul>; <li>test from prototype pollution PR <a href=""https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a></li>; <li>isConstructorOrProto adapted from PR <a href=""https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:2394,safe,safe-publish-latest,2394,https://root.cern,https://github.com/root-project/root/pull/11865,1,['safe'],['safe-publish-latest']
Safety,"bCore.so; #12 0x00007f682e411d18 in TScopeAdapter::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) () from /sw/atlas/Athena/22.0.60/InstallArea/x86_64-centos7-gcc11-opt/lib/libDataModelRoot.so; ```. The place in the code where it's crashing in GetSplit after it calls; to StdLen:. ```; if ( mode & kDropStd) {; unsigned int offset = (0==strncmp(""const "",full.c_str(),6)) ? 6 : 0;; RemoveStd( full, offset );; }; ```. where RemoveStd is inlined:. ```; static void RemoveStd(std::string &name, size_t pos = 0); {; size_t len = StdLen({name.data()+pos,name.length()-pos});; if (len) {; ```. So, it calls to StdLen, which apparently then crashes by branching to 0.; It's unfortunately difficult to then tell exactly why that happened.; FWIW, the registers at the crash were:. ```; rip: 0033:0000000000000000 eflags: 0000000000010202; rax: 00000000ffffffeb rbx: 0000000000000220; rcx: 0000000000000078 rdx: 0000000000000000; r08: ffffffffffffffff r09: 00007f68354af4d0; r10: 72543a3a444f4178 r11: 0000000000000006; r12: 00000000961170c0 r13: 00007f67e4395a90; r14: 0000000000000000 r15: 00007f683459fb22; rsi: 00000000961170c0 rdi: 000000000000001f; rbp: 00007f67e4395c28 rsp: 00007f67e4395a48; ```. However, the reason i'm writing this up here is that StdLen contains; a mutable, static std::set instance:. ```; static ShuttingDownSignaler<std::set<std::string>> gInlined;; ```. So this appears to be a thread-safety issue, regardless of whether; this is actually reponsible for the observed crash. There is no lock protecting this in either StdLen or in the TClass; methods that call it. There is a lock (gCoreMutex) taken in TClass::GetClass,; so we should be safe against other code that's using GetClass.; However, ATLAS code also directly uses TClassEdit in a number of places,; so i think we do have a potential race. (Though we don't use it from so many places, so it may be feasible; to wrap our uses of TClassEdit with taking gCoreMutex.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10353:3016,safe,safety,3016,https://root.cern,https://github.com/root-project/root/issues/10353,2,['safe'],"['safe', 'safety']"
Safety,"back port of https://github.com/root-project/root/pull/12863. This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12914:867,avoid,avoid,867,https://root.cern,https://github.com/root-project/root/pull/12914,1,['avoid'],['avoid']
Safety,"better but:; ```; % cmake /Users/couet/git/couet-root/documentation/doxygen/CMakeLists.txt -DDOCU_INPUT=""./mainpage.md;../../core/base/"" -DDOCU_LOCATION=/tmp/docoutput -DDOCU_THREADS=8 -DDOCU_LOGFILE=/tmp/warnings.txt; -- The C compiler identification is AppleClang 12.0.5.12050022; -- The CXX compiler identification is AppleClang 12.0.5.12050022; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Users/couet/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Users/couet/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Doxygen: /Users/couet/bin/doxygen (found version ""1.9.4 (a85850bf5b32843d6cde6b9a25b147c9a40bbc8a)"") found components: doxygen dot ; -- Found Python: /usr/local/Frameworks/Python.framework/Versions/3.9/bin/python3.9 (found version ""3.9.7"") found components: Interpreter ; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/couet/git/couet-root/documentation/doxygen; % make; make: *** No targets specified and no makefile found. Stop.; ```; I guess we need to go back to `/Users/couet/git/couet-root/documentation/doxygen/` before typing `make` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1076504876:352,Detect,Detecting,352,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1076504876,8,['Detect'],['Detecting']
Safety,"bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1260,detect,detect,1260,https://root.cern,https://github.com/root-project/root/issues/11330,1,['detect'],['detect']
Safety,"bject: CN=dpool46.lcg.triumf.ca ; >>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>> * start date: Apr 08 16:29:03 2021 GMT; >>>> * expire date: May 08 16:29:03 2022 GMT; >>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>> * Peer's Certificate issuer is not recognized.; >>>> * Closing connection 0; >>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>; >>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>  of Certificate Authority (CA) public keys (CA certs). If the default; >>>>  bundle file isn't adequate, you can specify an alternate file; >>>>  using the --cacert option.; >>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>  the bundle, the certificate verification probably failed due to a; >>>>  problem with the certificate (it might be expired, or the name might; >>>>  not match the domain name in the URL).; >>>> If you'd like to turn off curl's verification of the certificate, use; >>>>  the -k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:4618,safe,safelinks,4618,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['safe'],['safelinks']
Safety,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:2206,Abort,Aborted,2206,https://root.cern,https://github.com/root-project/root/issues/7704,1,['Abort'],['Aborted']
Safety,"bviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1201,detect,detect,1201,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['detect'],['detect']
Safety,"by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/interpreter/llvm/src/include/llvm/Support/Error.h:782!. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; 44	 return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;; (gdb) . ```; I will try with dwarf-5 for everything, let's see if that helps. At least GDB didn't crash this time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:3088,Abort,Aborted,3088,https://root.cern,https://github.com/root-project/root/pull/11882,1,['Abort'],['Aborted']
Safety,c/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fNodes' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 2: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2892; 10: Assuming 'i' is < 'ncells' in /opt/root_src/geom/geom/src/TG,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:75764,safe,safe,75764,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,c/TProof.cxx:10517; 2: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:10517; 3: Assuming 'sl' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:10522; 4: Left side of '||' is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 5: Assuming the condition is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 6: Left side of '||' is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 7: Assuming 's' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:10522; 8: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:10522; 9: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:10527; 10: Left side of '||' is true in /opt/root_src/proof/proof/src/TProof.cxx:10527; 11: 'shutdown' is true in /opt/root_src/proof/proof/src/TProof.cxx:10530; 12: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:10530; 13: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:10530; 14: Assuming 'timeout' is <= 20 in /opt/root_src/proof/proof/src/TProof.cxx:10535; 15: '?' condition is false in /opt/root_src/proof/proof/src/TProof.cxx:10535; 16: Calling 'TProof::Collect' in /opt/root_src/proof/proof/src/TProof.cxx:10539; 17: 'list' is not equal to kAll in /opt/root_src/proof/proof/src/TProof.cxx:2728; 18: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2728; 19: 'list' is equal to kActive in /opt/root_src/proof/proof/src/TProof.cxx:2729; 20: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:2729; 21: Value assigned to 'mon' in /opt/root_src/proof/proof/src/TProof.cxx:2729; 22: 'list' is not equal to kUnique in /opt/root_src/proof/proof/src/TProof.cxx:2730; 23: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2730; 24: 'list' is not equal to kAllUnique in /opt/root_src/proof/proof/src/TProof.cxx:2731; 25: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2731; 26: Assuming 'mon' is equal to field 'fCurrentMonitor' in /opt/root_src/proof/pr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7534:13477,timeout,timeout,13477,https://root.cern,https://github.com/root-project/root/issues/7534,1,['timeout'],['timeout']
Safety,c/geom/geom/src/TGeoSphere.cxx:994; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoSphere.cxx:999; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1000; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158:32: warning: Value stored to 'nbPnts' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163:4: warning: Value stored to 'nbSegs' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbSegs' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168:4: warning: Value stored to 'nbPols' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPols' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533; /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745:15: warning: Missing reference in range-for with non trivial type (std::__cxx11::basic_string<char>) [clazy-range-loop]; 1: const in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; 2: & in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; /opt/root_src/geom/geom/src/TGeoTorus.cxx:297:13: warning: Value stored to 'snext' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:297; /opt/root_src/geom/geom/src/TGeoTorus.cxx:305:13: warning: Value stored to 'dphi' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dphi' during its initialization is never read in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:63679,safe,safe,63679,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"cale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. ... Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================; ...; ```; This PR fixes #14302",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:3661,abort,abort,3661,https://root.cern,https://github.com/root-project/root/pull/14335,1,['abort'],['abort']
Safety,"call zeroext i1 %9(%class.TSystem* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); %11 = zext i1 %10 to i64; tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283832976 to i8*), i8 signext 1, i64 %11); ret void; }. declare void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8*, i8*, i8*, i8 signext, i64) local_unnamed_addr #1. declare i8* @cling_runtime_internal_throwIfInvalidPointer(i8*, i8*, i8*) local_unnamed_addr #1. ; Function Attrs: nounwind; declare void @llvm.stackprotector(i8*, i8**) #2. attributes #0 = { ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""ppc64le"" ""target-features""=""+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+power8-vector,+vsx,-power9-vector,-qpx"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #1 = { ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""no-frame-pointer-elim""=""false"" ""no-infs-fp-math""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""ppc64le"" ""target-features""=""+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+power8-vector,+vsx,-power9-vector,-qpx"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #2 = { nounwind }. !llvm.module.flags = !{!0}; !llvm.ident = !{!1}. !0 = !{i32 1, !""wchar_size"", i32 4}; !1 = !{!""clang version 9.0.1 ""}; !2 = !{!3, !3, i64 0}; !3 = !{!""any pointer"", !4, i64 0}; !4 = !{!""omnipotent char"", !5, i64 0}; !5 = !{!""Simple C++ TBAA""}; !6 = !{!7, !7, i64 0}; !7 = !{!""vtable pointer"", !5, i64 0}; $5 = void; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:78993,unsafe,unsafe-fp-math,78993,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,['unsafe'],['unsafe-fp-math']
Safety,"cation of the certificate, use; >>>>> the -k (or --insecure) option.; >>>>> ***@***.*** t5]$ ; >>>> ; >>>> ; >>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>> or; >>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>> ; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>> ; >>>>> ; >>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:6757,safe,safelinks,6757,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['safe'],['safelinks']
Safety,"cc8-opt/lib/libCore.so; #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so; #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so; #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so; #22 0x00007efd5517d829 in RootClingMain(int, char**, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so; #23 0x00007efd55181f15 in ROOT_rootcling_Driver () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so; #24 0x0000000000400c45 in main (); Aborted (core dumped); [bash][pcadp02]:ATLASG-1596 >; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387#issuecomment-858702680:5438,Abort,Aborted,5438,https://root.cern,https://github.com/root-project/root/issues/8387#issuecomment-858702680,1,['Abort'],['Aborted']
Safety,"cd root-build.foo; [bellenot@lxplus803 root-build.foo]$ cmake ../root; -- The C compiler identification is GNU 8.5.0; -- The CXX compiler identification is GNU 8.5.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.39.3""); -- Building ROOT version 6.31.01; -- Checking internet connectivity; -- Checking internet connectivity - found; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.17"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Found GCC. Major version 8, minor version 5; -- The default C++ standard in use by the detected compiler (/usr/bin/c++) is lower than C++17. Setting C++17 as the minimum standard.; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 8.5.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:1732,detect,detected,1732,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['detect'],['detected']
Safety,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2078#issuecomment-393687586:70,timeout,timeout,70,https://root.cern,https://github.com/root-project/root/pull/2078#issuecomment-393687586,1,['timeout'],['timeout']
Safety,"cert.pem; >>>> or; >>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>> ; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>> ; >>>>> ; >>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>>>> ; >>>>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> fixed and then we re-visit this one: either i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:7606,safe,safelinks,7606,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['safe'],['safelinks']
Safety,"cg.triumf.ca/>,OU=triumf.ca ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=6x%2BvqAwaP4JatJuGaFF%2FDau8refUUubCF0W9oyCbdgg%3D&reserved=0>,O=Grid,C=CA; >>>>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>>>> * common name: dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>; >>>>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>>> * Closing connection 0; >>>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909257351%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=u7Y%2FanQwDppeiiawxeAhNcTy09JgTzHSTAvPUZDe3c4%3D&reserved=0>; >>>>>>>>; >>>>>>>> curl performs SSL certificate verification by default, using a ; >>>>>>>> ""bundle""; >>>>>>>>  of Certificate Authority (CA) public keys (CA certs). If the ; >>>>>>>> default; >>>>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>>>  using the --cacert option.; >>>>>>>> If this HTTPS server uses a certificate signed by a CA ; >>>>>>>> represented in; >>>>>>>>  the bundle, the certificate verification probably failed due to a; >>>>>>>>  problem with the certificate (it might be expired, or the name ; >>>>>>>> might; >>>>>>>>  not match the domain name in the URL).; >>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:7326,safe,safelinks,7326,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3454,avoid,avoided,3454,https://root.cern,https://github.com/root-project/root/issues/7936,1,['avoid'],['avoided']
Safety,"cided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:1558,risk,risk,1558,https://root.cern,https://github.com/root-project/root/pull/5934,1,['risk'],['risk']
Safety,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:207,avoid,avoid,207,https://root.cern,https://github.com/root-project/root/pull/13542,1,['avoid'],['avoid']
Safety,"ck (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:8486,abort,abort,8486,https://root.cern,https://github.com/root-project/root/issues/12429,1,['abort'],['abort']
Safety,"cked for duplicates. ### Description. When using Python in interactive mode, the web window does not launch properly (see screenshot). It works from a C++ macro. One can also save canvas contents in ROOT batch mode. ![image](https://github.com/root-project/root/assets/1557360/2181f05e-27bd-4473-9151-b28a90773900). ### Reproducer. ```python; import ROOT; import numpy as np. def main():; voltages = np.array([1,2,3], dtype=np.uint32); capacitances = np.array([4,5,6], dtype=np.float32). #ROOT.gROOT.SetBatch(True); df = ROOT.RDF.FromNumpy({'voltages': voltages, 'capacitances': capacitances}); df = df.Define('inv', '1/(capacitances*capacitances)'). c = ROOT.TCanvas(); graph = df.Graph('voltages', 'inv'); graph.Draw('APL'). c.SaveAs(""graph.pdf""). if __name__ == ""__main__"":; main(); ```; Output:; ```bash; $ python3 -i repro.py ; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9449; Opening in existing browser session.; [102887:102898:0312/160727.268507:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.Properties.Get: object_path= /org/freedesktop/portal/desktop: org.freedesktop.DBus.Error.InvalidArgs: No such interface “org.freedesktop.portal.FileChooser”; [102887:102898:0312/160727.268546:ERROR:select_file_dialog_linux_portal.cc(285)] Failed to read portal version property; [102887:102887:0312/160727.306050:ERROR:policy_logger.cc(156)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.; 13986 bytes written to file /home/jakob/Documents/CERN/ROOT/demo/graph.pdf; Info in <ProduceImage>: PDF file graph.pdf with 1 pages has been created; >>> ; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14943:1568,abort,aborted,1568,https://root.cern,https://github.com/root-project/root/issues/14943,1,['abort'],['aborted']
Safety,"clang-tidy with `modernize-use-bool-literals` complains about the fact that 0 is used in place of false. Given I assume there is no particular reason for using `0` rather than `false`, I suggest to change it to avoid the false positives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/472:211,avoid,avoid,211,https://root.cern,https://github.com/root-project/root/pull/472,1,['avoid'],['avoid']
Safety,cling error recovery issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:12,recover,recovery,12,https://root.cern,https://github.com/root-project/root/issues/7970,1,['recover'],['recovery']
Safety,cling: changes needed on MacOS to avoid G__Core.cxx generation failures complaining about time_point,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494:34,avoid,avoid,34,https://root.cern,https://github.com/root-project/root/pull/16494,1,['avoid'],['avoid']
Safety,"code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone); For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:; ```; 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection; 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer; 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator; ```; for `-O0`, while for `-O1`:; ```; 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator; 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection; 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions; 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer; 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer; 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler; 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots; 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instruc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:1071,redund,redundant,1071,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,"code.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:939; /opt/root_src/geom/geom/src/TGeoXtru.cxx:943:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:943; /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351:22: warning: Value stored to 'rmin' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rmin' is never read in /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239:17: warning: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' in /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:317:17: warning: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:80405,safe,safe,80405,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"control.cpp#L50. It just opens a web browser with the following [link](https://gitlab.com/kicad/code/kicad/-/issues/new?issue[description]=%3C%21--%20Before%20Creating%20a%20New%20Issue%3A%0A%2A%20Search%20the%20issue%20tracker%20to%20verify%20the%20issue%20has%20not%20already%20been%20reported.%0A%2A%20Only%20report%20one%20problem%20per%20issue.%20--%3E%0A%0A%23%20Description%0A%3C%21--%20What%20is%20the%20current%20behavior%20and%20what%20is%20the%20expected%20behavior%3F%20--%3E%0A%3C%21--%20Please%20attach%20screenshots%20if%20they%20will%20help%20explain%20the%20problem.%20--%3E%0A%0A%23%20Steps%20to%20reproduce%0A%3C%21--%20Please%20include%20a%20screen%20recording%20if%20it%20will%20help%20explain%20how%20to%20reproduce.%20--%3E%0A%3C%21--%20If%20this%20issue%20is%20specific%20to%20a%20project%2C%20please%20attach%20it.%20--%3E%0A1.%0A2.%0A%23%20KiCad%20Version%0A%0A%60%60%60%0AApplication%3A%20KiCad%20PCB%20Editor%0A%0AVersion%3A%205.99.0-unknown-baf6798695~131~ubuntu18.04.1%2C%20release%20build%0A%0ALibraries%3A%0A%09wxWidgets%203.0.4%0A%0APlatform%3A%20Linux%205.4.0-77-generic%20x86_64%2C%2064%20bit%2C%20Little%20endian%2C%20wxGTK%2C%20mate%2C%20x11%0A%0A%09wxWidgets%3A%203.0.4%20%28wchar_t%2Cwx%20containers%2Ccompatible%20with%202.8%29%20GTK%2B%203.22%0A%09Boost%3A%201.65.1%0A%09OCC%3A%207.5.1%0A%09Curl%3A%207.58.0%0A%09ngspice%3A%2033%0A%09Compiler%3A%20GCC%207.5.0%20with%20C%2B%2B%20ABI%201011%0A%0ABuild%20settings%3A%0A%09KICAD_USE_OCC%3DON%0A%09KICAD_SPICE%3DON%0A%0A%60%60%60), that looks like this:. ![image](https://user-images.githubusercontent.com/10653970/128146364-f40a992b-1730-40d8-996a-7d51a262aec7.png). This homogenizes bug reports and saves time of the dev's asking what their current settings and versions are. The KiCad gitlab bot also warns the user if it detects that no version info was added to the issue. And they have a very nice webpage to aid users in reporting issues at the right repository: https://www.kicad.org/help/report-an-issue/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8795:2863,detect,detects,2863,https://root.cern,https://github.com/root-project/root/issues/8795,1,['detect'],['detects']
Safety,"cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that the values are rounded... perhaps casted to double? Is there any way to avoid it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:2966,avoid,avoid,2966,https://root.cern,https://github.com/root-project/root/issues/7844,1,['avoid'],['avoid']
Safety,coverity 94012: removed redundant unreachable return statement			89a4a67; coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137; coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/384:24,redund,redundant,24,https://root.cern,https://github.com/root-project/root/pull/384,1,['redund'],['redundant']
Safety,critical bugfix in RooFit to avoid last bin getting lost in histogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1916:29,avoid,avoid,29,https://root.cern,https://github.com/root-project/root/pull/1916,1,['avoid'],['avoid']
Safety,"ct %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT._",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12452:1164,avoid,avoid,1164,https://root.cern,https://github.com/root-project/root/issues/12452,1,['avoid'],['avoid']
Safety,"cumentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root/multicore/processExecutorH1Test...; (gdb) run; Starting program: /srv/root/roottest-build/root/multicore/processExecutorH1Test ; warning: File ""/usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py; line to your configuration file ""/home/amadio/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; +++ Executing tProcessExecutorH1Test ......................................... +++; [Detaching after vfork from child process 340387]; [Detaching after vfork from child process 340389]; [Detaching after vfork from child process 340391]; [Detaching after vfork from child process 340393]; [Detaching after vfork from child process 341564]; [Detaching after vfork from child process 341566]; [Detaching after vfork from child process 341606]; [Detaching after fork from child process 341608]; [Detaching after fork from child process 341609]; [Detaching after fork from child process 341610]; [Detaching after vfork from child process 341705]; +++ Processing the H1 dataset with a lambda .................................. OK ; [Detaching after fork from child process 341711]; [Detaching after fork from child process 341712]; [Detaching after fork from child process 341713]; +++ Processing the H1 dataset with h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:1622,safe,safe,1622,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['safe'],['safe']
Safety,"cxxmodules-ON/bin/root.exe...; Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b; warning: Could not trace the inferior process.; warning: ptrace: Function not implemented; During startup program exited with code 127.; ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:; ```console; # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b; ^C^\; ```; but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:; ```console; $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'; Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe...; The target architecture is set to ""aarch64"".; Remote debugging using 172.17.0.3:1234; warning: remote target does not support file transfer, attempting to access files from local filesystem.; Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:; <https://debuginfod.ubuntu.com>; Enable debuginfod for this session? (y or [n]) n; Debuginfod has been disabled.; To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.; (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1); 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1; Continuing. Program received signal SIGINT, Interrupt.; 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:5345,safe,safe-path,5345,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['safe'],['safe-path']
Safety,"d ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 1453]; [Detaching after vfork from child process 1455]; [Detaching after vfork from child process 1457]; [Detaching after vfork from child process 1459]; [Detaching after vfork from child process 1461]; [Detaching after vfork from child process 1465]; [Detaching after vfork from child process 1467]; [New Thread 0x7fb1af5b6640 (LWP 1469)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007fb1cb2a1201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDeref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:1718,safe,safe-path,1718,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['safe'],['safe-path']
Safety,"d ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 2333]; [Detaching after vfork from child process 2335]; [Detaching after vfork from child process 2337]; [Detaching after vfork from child process 2339]; [Detaching after vfork from child process 2341]; [Detaching after vfork from child process 2345]; [Detaching after vfork from child process 2347]; [New Thread 0x7f05f42cb640 (LWP 2349)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007f060ffb6201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDeref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:1694,safe,safe-path,1694,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['safe'],['safe-path']
Safety,"d final part of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] refactor member names: underscore suffix; - [x] remove commented out code and TODOs and other junk; - [x] clang-tidy up; - [ ] rebase into two commits (one for `KahanSum` and one for the rest); - [x] make Readme.md for developers with some exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:1559,avoid,avoid,1559,https://root.cern,https://github.com/root-project/root/pull/9349,1,['avoid'],['avoid']
Safety,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:4330,abort,aborted,4330,https://root.cern,https://github.com/root-project/root/issues/7936,1,['abort'],['aborted']
Safety,"dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with; the implicit `const char*` conversion we get a dangling pointer to the; TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10581:2281,avoid,avoid,2281,https://root.cern,https://github.com/root-project/root/pull/10581,2,['avoid'],['avoid']
Safety,"dant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:; ```; 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:; ```; 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions; 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator; 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis; 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing; 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3; 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2; 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6; 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5; 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:3154,redund,redundant,3154,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,"dataset with a lambda .................................. OK ; [Detaching after fork from child process 341711]; [Detaching after fork from child process 341712]; [Detaching after fork from child process 341713]; +++ Processing the H1 dataset with h1analysisTreeReader ...................... OK ; [Detaching after fork from child process 341899]; [Detaching after fork from child process 341900]; [Detaching after fork from child process 341901]; +++ Processing the H1 dataset to create list ................................. OK ; [Detaching after fork from child process 341976]; [Detaching after fork from child process 341977]; [Detaching after fork from child process 341978]; +++ Processing the H1 dataset with a lambda from entry list .................. OK . Program received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:49; 49	 return ret;; (gdb) bt; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:49; #1 0x00007ffff633054a in __GI_abort () at abort.c:79; #2 0x00007ffff633042c in __assert_fail_base (fmt=0x7ffff64a3018 ""%s%s%s:%u: %s%sAssertion `%s' failed.\n%n"", ; assertion=0x7ffff4783308 ""!T.getTopmostParent()->getNext() && \""Can not revert previous transactions\"""", ; file=0x7ffff4782c68 ""/var/tmp/portage/sci-physics/root-9999/work/root-9999/interpreter/cling/lib/Interpreter/Interpreter.cpp"", line=1513, ; function=<optimized out>) at assert.c:92; #3 0x00007ffff633eda3 in __GI___assert_fail (; assertion=assertion@entry=0x7ffff4783308 ""!T.getTopmostParent()->getNext() && \""Can not revert previous transactions\"""", ; file=file@entry=0x7ffff4782c68 ""/var/tmp/portage/sci-physics/root-9999/work/root-9999/interpreter/cling/lib/Interpreter/Interpreter.cpp"", ; line=line@entry=1513, function=function@entry=0x7ffff47832d0 ""void cling::Interpreter::unload(cling::Transaction&)"") at assert.c:101; #4 0x00007ffff194bdca in cling::Interpreter::unload (this=this@entry=0x555555594760, T=...); at /usr/src/debug/sci-physics/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:3427,abort,abort,3427,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['abort'],['abort']
Safety,"de810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>>>> ; >>>>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> fixed and then we re-visit this one: either it's fixed, too, or we need to call in help from the Davix (?) folks.; >>>>> ; >>>>> —; >>>>> You are receiving this because you authored the thread.; >>>>> Reply to this email directly, view it on GitHub <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8092%23issuecomment-839953723&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428548436%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=f8%2FLHZugBV9iTxE9qpnhPNwfwgv2PIrB5lm3xqBvZDk%3D&reserved=0>, or unsubscribe <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAK3WHVSCH3RYO2YJNPNMVNTTNKZ6VANCNFSM44DEPE6Q&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428558426%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Z3MlzHXKpd4AkC3X6nUMCVVnpLED4hS6AhA%2B2UOPBHE%3D&reserved=0>.; >>>>> ; >>>> ; >>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:8830,safe,safelinks,8830,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,2,['safe'],['safelinks']
Safety,"derArray<o2::trd::Tracklet64>* tracklets = new TTreeReaderArray<o2::trd::Tracklet64>(*dataReader, ""Tracklet"");. dataTree->AddFriend(""o2sim"", ""trddigits.root"");; TTreeReaderArray<o2::trd::Digit>* digits = new TTreeReaderArray<o2::trd::Digit>(*dataReader, ""TRDDigit"");. int tfno = 0;; while(dataReader->Next()) {; cout << ""Next TF: "" << tfno << endl;. for (auto tracklet : *tracklets) {; cout << tracklet << endl;; }; cout << dec << ""Start to sort "" << std::distance(tracklets->begin(), tracklets->end()) << "" tracklets..."" << endl;; std::stable_sort(tracklets->begin(), tracklets->end(), comp_tracklet);; cout << ""Start to sort "" << std::distance(digits->begin(), digits->end()) << "" digits..."" << endl;; std::stable_sort(digits->begin(), digits->end(), comp_digit);; }. }; ```. The code creates the following stack trace:; ```; Fatal: fArray && ""invalid iterator!"" violated at line 118 of `/scratch/tdietel/alisw/slc7_x86-64/ROOT/v6-28-04-14/include/TTreeReaderArray.h'; aborting; #0 0x00007fa77058860c in waitpid () from /lib64/libc.so.6; #1 0x00007fa770505f62 in do_system () from /lib64/libc.so.6; #2 0x00007fa7712b7b8c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fa771198e69 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TErrorDefaultHandler.cxx:177; #5 0x00007fa77124a7d5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fa750f2eabe """", fmt=<optimized out>, ap=0x7fff0771d888) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:4108,abort,aborting,4108,https://root.cern,https://github.com/root-project/root/issues/13314,1,['abort'],['aborting']
Safety,dexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /bld6/root/src/core/base/inc/LinkDef.h; Subprocess aborted; ```. I understand thought that a special version of clang is needed (at least that's what a warning in one of the CMakelists.txt states). Are there any instructions on how to build it or what patches need to be applied?. I've been using v6-30-03 for this. ### Reproducer. . ### ROOT version. v6-30-03. ### Installation method. source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250:8461,abort,aborted,8461,https://root.cern,https://github.com/root-project/root/issues/14250,1,['abort'],['aborted']
Safety,"double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:235:10: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:235:17: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:241:13: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:241:20: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' . ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:94:40: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:102:39: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:96:9: warning: variable declaration in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:97:7: warning: use of this statement in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:104:25: warning: variable declaration in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:105:7: warning: use of th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775#issuecomment-489975352:1979,avoid,avoid,1979,https://root.cern,https://github.com/root-project/root/pull/3775#issuecomment-489975352,1,['avoid'],['avoid']
Safety,"e ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx; +++ b/core/dictgen/src/rootcling_impl.cxx; @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,; if (!gOptCxxModule) {; headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,; detectedUmbrella,; - true);; + false);; if (!gDriverConfig->fBuildingROOTStage1) {; if (!gOptWriteEmptyRootPCM); fwdDeclsString = GenerateFwdDeclString(scan, interp);; ```; This introduces the following diff in the generated dictionary:; ```; rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx ; *** dict.cxx 2023-06-15 15:55:39.818476668 -0500; --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500; ***************; *** 187,192 ****; )DICTPAYLOAD"";; static const char* classesHeaders[] = {; ! ""A"", payloadCode, ""@"",; ! ""B"", payloadCode, ""@"",; nullptr; };; --- 187,192 ----; )DICTPAYLOAD"";; static const char* classesHeaders[] = {; ! ""A"", ""A.h"", ""@"",; ! ""B"", ""B.h"", ""@"",; nullptr; };; ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):; * Process the `A.h` and then start declaring class `A`:; * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`; * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:2200,detect,detectedUmbrella,2200,https://root.cern,https://github.com/root-project/root/issues/13034,1,['detect'],['detectedUmbrella']
Safety,"e '\s'; m = re.match('\s*(const\s+)?(RVec\w+|RVec<[\w\s]+>)', t); ```. Then, upon ROOT import, the system crashes:; ```; ~>python -c ""import ROOT""; [/foo/build/lib/libcppyy_backend3_12.so] (anonymous namespace)::do_trace(int) /foo/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:184; [/foo/build/lib/libcppyy_backend3_12.so] (anonymous namespace)::TExceptionHandlerImp::HandleException(int) /foo/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; [/foo/build/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /foo/root/core/unix/src/TUnixSystem.cxx:3626; [/foo/build/lib/libCore.so] SigHandler(ESignals) /foo/root/core/unix/src/TUnixSystem.cxx:402; [/foo/build/lib/libCore.so] sighandler(int) /foo/root/core/unix/src/TUnixSystem.cxx:3603; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/usr/lib/system/libsystem_pthread.dylib] pthread_kill (no debug info); [/usr/lib/system/libsystem_c.dylib] abort (no debug info); [/usr/lib/system/libsystem_c.dylib] err (no debug info); [/foo/build/lib/libcppyy3_12.so] PyMethod_GET_SELF(_object*) /Library/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/classobject.h:40; [/foo/build/lib/libcppyy3_12.so] CPyCppyy::im_descr_get(_object*, _object*, _object*) /foo/root/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:215; [/Library/Frameworks/Python.framework/Versions/3.12/Python] _Py_type_getattro_impl (no debug info); [/foo/build/lib/libcppyy3_12.so] CPyCppyy::meta_getattro(_object*, _object*) /foo/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:308; [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyObject_LookupAttr (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] builtin_getattr (no debug info); [/Library/Frameworks/Python.framework/Versions/3.12/Python] _PyEval_EvalFrameDefault (no debug info); [/foo/build/lib/libcppyy3_12.so] CPyCppyy::Pythonize(_object*, std::__1::basic_string<char, std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13864:1713,abort,abort,1713,https://root.cern,https://github.com/root-project/root/issues/13864,1,['abort'],['abort']
Safety,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15730:2350,timeout,timeout,2350,https://root.cern,https://github.com/root-project/root/issues/15730,1,['timeout'],['timeout']
Safety,"e = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::List",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4214,avoid,avoided,4214,https://root.cern,https://github.com/root-project/root/issues/11602,1,['avoid'],['avoided']
Safety,"e configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:1339,Detect,Detecting,1339,https://root.cern,https://github.com/root-project/root/issues/14163,8,['Detect'],['Detecting']
Safety,"e file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:32:30.248Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:35:57.183Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.183Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::Legacy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617654:2126,redund,redundant,2126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617654,1,['redund'],['redundant']
Safety,"e file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:43:01.497Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:48:24.113Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:48:24.113Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::Legacy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618970:2126,redund,redundant,2126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618970,1,['redund'],['redundant']
Safety,"e in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid contai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1369,Safe,Safety,1369,https://root.cern,https://github.com/root-project/root/pull/16442,1,['Safe'],['Safety']
Safety,e llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN4llvm3sys15PrintStackTraceERNS_11raw_ostreamEi+0x3c)[0x55e9492a6288]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x17fb34b)[0x55e9492a634b]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN4llvm3sys17RunSignalHandlersEv+0x88)[0x55e9492a3eac]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x17fabfe)[0x55e9492a5bfe]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN9textinput18TerminalConfigUnix12HandleSignalEi+0x76)[0x55e9492f41a8]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x1848ed8)[0x55e9492f3ed8]; /usr/lib/libc.so.6(+0x3e8e0)[0x7f264623e8e0]; /usr/lib/libc.so.6(+0x8e36c)[0x7f264628e36c]; /usr/lib/libc.so.6(raise+0x18)[0x7f264623e838]; /usr/lib/libc.so.6(abort+0xcf)[0x7f2646228535]; /usr/lib/libc.so.6(+0x2845c)[0x7f264622845c]; /usr/lib/libc.so.6(+0x37366)[0x7f2646237366]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction11forceAppendENS0_13DelayCallInfoE+0x14f)[0x55e9491826bb]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction6appendENS0_13DelayCallInfoE+0xaa)[0x55e949182568]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling13DeclCollector18HandleTopLevelDeclEN5clang12DeclGroupRefE+0xc4)[0x55e948f99f2e]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang17MultiplexConsumer18HandleTopLevelDeclENS_12DeclGroupRefE+0x89)[0x55e94b42f5bf]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang4Sema23InstantiateClassMembersENS_14SourceLocationEPNS_13CXXRecordDeclERKNS_30MultiLevelTemplateArgumentListENS_26TemplateSpecializationKindE+0x2dc)[0x55e94c7a0f84]; ./cling-build/cling-Arch Lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192175843:5479,abort,abort,5479,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192175843,1,['abort'],['abort']
Safety,"e redundant instructions; 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer; 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer; 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler; 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots; 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5; 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:; ```; 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:2061,redund,redundant,2061,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,e vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % . TEST PASSED Hurray!!!! 0 failures detected.; ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9212397/test_material_units.C.txt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198355345:5259,detect,detected,5259,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345,2,['detect'],['detected']
Safety,"e/ROOT/RVec.hxx:193:19: error: constexpr function's return type 'void' is not a literal type ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1281:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 11 more. ### Warnings:; - [2021-04-16T12:15:32.321Z] /build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-821132938:2374,avoid,avoid,2374,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-821132938,1,['avoid'],['avoid']
Safety,e/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 41 more. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.roottest.cling/other/roottest_cling_other_runsprintfselect/); - [projectroot.roottest.cling.printf.roottest_cling_printf_star](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.roottest.cling/printf/roottest_cling_printf_star/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.treeformula.ntuple.roottest_root_treeformula_ntuple_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.roottest.root.treeformula/ntuple/roottest_root_treeformula_ntuple_make/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vary](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vary/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1386638532:3898,recover,recover,3898,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1386638532,2,['recover'],['recover']
Safety,e/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:61:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:62:32: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-867532806:1539,avoid,avoid,1539,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-867532806,1,['avoid'],['avoid']
Safety,e/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:61:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:62:32: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-867532806:1820,avoid,avoid,1820,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-867532806,1,['avoid'],['avoid']
Safety,e/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:61:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:62:32: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-867532806:2101,avoid,avoid,2101,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-867532806,1,['avoid'],['avoid']
Safety,"e; >>>>  the -k (or --insecure) option.; >>>> ***@***.*** t5]$; >>>; >>>; >>> I am unfamiliar with how to use curl with X509 and everything I ; >>> tried so far has not worked. eg; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> ; >>> --key ~/.globus/userkey.pem  --cert ~/.globus/usercert.pem; >>> or; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> ; >>> --key ~/.globus/userkey.pem  --cert ~/.globus/usercert.pem --capath ; >>> /etc/grid-security/certificates; >>>; >>>; >>> regards,; >>> Asoka; >>>; >>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>> ***@***.*** ***@***.***>> wrote:; >>>>; >>>>; >>>> Right - without authentication I cannot see what's happening. /If/ ; >>>> this is due to a redirect it would be a dupe of #8155 ; >>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:6603,safe,safelinks,6603,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['safe'],['safelinks']
Safety,"eSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:1900,Avoid,Avoid,1900,https://root.cern,https://github.com/root-project/root/pull/12723,5,['Avoid'],['Avoid']
Safety,"eTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:56:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:57:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:60:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:61:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? . And 230 more. ### Warnings:; - CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:277 (MESSAGE): ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201#issuecomment-521161432:1781,detect,detected,1781,https://root.cern,https://github.com/root-project/root/pull/4201#issuecomment-521161432,1,['detect'],['detected']
Safety,"eady----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context; This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:4355,detect,detector,4355,https://root.cern,https://github.com/root-project/root/issues/11784,1,['detect'],['detector']
Safety,"ecome tricky, even LLVM upstream is unable to handle exceptions during JIT: I tested the most basic; ```c++; int main() {; try {; throw 1;; } catch (...) { }; }; ```; compiled with `./bin/clang++ -S -emit-llvm throw.cc` and interpreted using `./bin/lli throw.ll`, resulting in; ```; libc++abi.dylib: terminating with uncaught exception of type int; PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: ./bin/lli throw.ll; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 lli 0x000000010104824c llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 lli 0x00000001010471b4 llvm::sys::RunSignalHandlers() + 128; 2 lli 0x00000001010488c4 SignalHandler(int) + 304; 3 libsystem_platform.dylib 0x00000001826b1c44 _sigtramp + 56; 4 libsystem_pthread.dylib 0x0000000182669c24 pthread_kill + 292; 5 libsystem_c.dylib 0x00000001825b1864 abort + 104; 6 libc++abi.dylib 0x0000000182629cf8 __cxxabiv1::__aligned_malloc_with_fallback(unsigned long) + 0; 7 libc++abi.dylib 0x000000018261ae4c demangling_unexpected_handler() + 0; 8 libobjc.A.dylib 0x00000001825136d8 _objc_terminate() + 160; 9 libc++abi.dylib 0x00000001826290e0 std::__terminate(void (*)()) + 20; 10 libc++abi.dylib 0x000000018262beb0 __cxa_get_exception_ptr + 0; 11 libc++abi.dylib 0x000000018262be5c __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) + 0; 12 libc++abi.dylib 0x000000010224003c __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) + 18446744071557956064; 13 lli 0x0000000100c8f680 llvm::MCJIT::runFunction(llvm::Function*, llvm::ArrayRef<llvm::GenericValue>) + 768; 14 lli 0x0000000100bd574c llvm::ExecutionEngine::runFunctionAsMain(llvm::Function*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-801803930:1021,abort,abort,1021,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-801803930,1,['abort'],['abort']
Safety,"ected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:1149,detect,detected,1149,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,ed on ROOT-fedora31/noimt.; Running on root-fedora-31-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97071/console).; ### Errors:; - [2020-09-28T08:13:35.720Z] /build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:12:20.858Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699854008:980,redund,redundant,980,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699854008,1,['redund'],['redundant']
Safety,edy Register Allocator; 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection; 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions; 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer; 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer; 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler; 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots; 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5; 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:; ```; 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:1871,redund,redundant,1871,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,"ee/ntuple/v7/inc/ROOT/RField.hxx; @@ -570,7 +570,7 @@ public:; RFieldBase(RFieldBase&&) = default;; RFieldBase& operator =(const RFieldBase&) = delete;; RFieldBase& operator =(RFieldBase&&) = default;; - virtual ~RFieldBase() = default;; + virtual ~RFieldBase();; ; /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns; std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;; diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx; index ef04fec76c..41d4962ac5 100644; --- a/tree/ntuple/v7/src/RField.cxx; +++ b/tree/ntuple/v7/src/RField.cxx; @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi; {; }; ; +ROOT::Experimental::RFieldBase::~RFieldBase(); +{; +}; +; std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const; {; std::string result = GetFieldName();; ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx; index 1f3ec47095..b7b70b24cb 100644; --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx; +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx; @@ -124,12 +124,11 @@ public:; if (v.GetField().GetFieldName() != fieldName); continue;; ; - if constexpr (std::is_void_v<T>); - return v.GetPtr<void>();; -; - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {; - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +; - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));; + if constexpr (!std::is_void_v<T>) {; + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {; + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +; + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));; + }; }; return std::static_pointer_cast<T>(v.GetPtr<void>());; }; ```. Finally we can either disable `CreateValue` in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14468#issuecomment-1916371964:1785,avoid,avoid,1785,https://root.cern,https://github.com/root-project/root/pull/14468#issuecomment-1916371964,2,['avoid'],['avoid']
Safety,"eeds to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:1449,Detect,Detecting,1449,https://root.cern,https://github.com/root-project/root/issues/8633,4,['Detect'],['Detecting']
Safety,"efinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. ... Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================; ...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14346:3661,abort,abort,3661,https://root.cern,https://github.com/root-project/root/pull/14346,1,['abort'],['abort']
Safety,"elease"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 887: Environment variables:; 887: ROOT_HIST=0; 887: Test timeout computed to be: 1500; [TFile::Cp] Total 14.46 MB |====================| 100.00 % [57.6 MB/s]; 887: Traceback (most recent call last):; 887: File ""C:/Users/sftnight/git/master/tutorials/launcher.py"", line 33, in <module>; 887: spec.loader.exec_module(module); 887: File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; 887: File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed; 887: File ""C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"", line 43, in <module>; 887: invMass = filteredEvents.Histo1D((""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110), ""m""); 887: File ""C:\Users\sftnight\build\release\bin\ROOT\pythonization\_rdataframe.py"", line 114, in _histo_profile; 887: res = original_method(model, *args[1:]); 887: TypeError: Template method resolution failed:; 887: none of the 4 overloaded methods succeeded. Full details:; 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:8494,timeout,timeout,8494,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,"elease/RootTestDriver.cmake:237 (message):; 891: error code: -529697949; 891:; 891:; 14/16 Test #891: tutorial-dataframe-df021_createTGraph-py .................***Failed Error regular expression found in output. Regex=[: error:] 4.85 sec; test 892; Start 892: tutorial-dataframe-df024_Display-py. 892: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction: symbol '?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_K@Z' unresolved while linking [cling interface function]!; 892: You are probably missing the definition of class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cling::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:14975,timeout,timeout,14975,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,"election; (Pdb) s; --Call--; > /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/lib/cppyy/__init__.py(143)_standard_pythonizations(); -> def _standard_pythonizations(pyclass, name):; (Pdb) w; /home/cdelort/git/cool/x86_64-centos7-gcc8-dbg/test.py(6)<module>(); -> cool.FieldSelection; > /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/lib/cppyy/__init__.py(143)_standard_pythonizations(); -> def _standard_pythonizations(pyclass, name):; (Pdb) s; > /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/lib/cppyy/__init__.py(145)_standard_pythonizations(); -> if name.find('std::tuple<', 0, 11) == 0 or name.find('tuple<', 0, 6) == 0:; (Pdb) pp name; 'cool::IRecordSelection'; (Pdb) pp name.find('std::tuple<', 0, 11); -1; (Pdb) pp name.find('tuple<', 0, 6); -1; (Pdb) list; 140 	from . import _pythonization as py; 141 	py._set_backend(_backend); 142 	; 143 	def _standard_pythonizations(pyclass, name):; 144 	 # pythonization of tuple; TODO: placed here for convenience, but verify that decision; 145 ->	 if name.find('std::tuple<', 0, 11) == 0 or name.find('tuple<', 0, 6) == 0:; 146 	 import cppyy; 147 	 pyclass._tuple_len = cppyy.gbl.std.tuple_size(pyclass).value; 148 	 def tuple_len(self):; 149 	 return self.__class__._tuple_len; 150 	 pyclass.__len__ = tuple_len; (Pdb) step; --Return--; > /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/lib/cppyy/__init__.py(145)_standard_pythonizations()->None; -> if name.find('std::tuple<', 0, 11) == 0 or name.find('tuple<', 0, 6) == 0:; (Pdb) step; python: /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::UsingDecl; From = clang::Decl]: Assertion `Val && ""isa<> used on a null pointer""' failed.; *** Break *** abort; __boot(); import os; *** Break *** abort; __boot(); import os. ```; Let me know what I can do to help",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359#issuecomment-694103261:2215,abort,abort,2215,https://root.cern,https://github.com/root-project/root/issues/6359#issuecomment-694103261,2,['abort'],['abort']
Safety,"em --cert ~/.globus/usercert.pem; >> or; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643157499%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >> ; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>> ; >>> ; >>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643367382%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sks%2FDd3rFaTWUbAotHxdTG7EQfZWLHeVrkmSb4E5PhU%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>> ; >>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643377374%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Z2XrbS0rRc1sDI3e%2FjB8nbNngwpbzvPPsLFp9suKyUc%3D&reserved=0> fixed and then we re-visit this one: either it's fixed, too, or w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:6913,safe,safelinks,6913,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['safe'],['safelinks']
Safety,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1667,recover,recover,1667,https://root.cern,https://github.com/root-project/root/issues/8518,1,['recover'],['recover']
Safety,"endencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; [RF] Further refactor RooJSONFactoryWSTool; [RF][HS3] Avoid catching without re-throwing; [RF][HS3] Write out bin counts as `int` and other small improvements; [RF] Correctly support constants in RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:7305,Avoid,Avoid,7305,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['Avoid'],['Avoid']
Safety,"entalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; > You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; > Maybe you need to load the corresponding shared library?; > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); > terminate called after throwing an instance of 'cling::InvalidDerefException'; > what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; > ==22765== ; > ==22765== Process terminating with default action of signal 6 (SIGABRT); > ==22765== at 0x546E18B: raise (raise.c:51); > ==22765== by 0x544D92D: abort (abort.c:100); > ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); > ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); > ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); > ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); > ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x4DFF3CC: ???; > ==22765== by 0x1FFEFFBB3F: ???; > ==22765== by 0xB60A6A5548AF56FF: ???; > ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x4DEB03F: ???; > ==22765== ; > ==22765== HEAP SUMMARY:; > ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; > ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; > ==22765== ; > ==22765== LEAK SUMMARY:; > ==22765== definitely l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250619567:7233,abort,abort,7233,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250619567,2,['abort'],['abort']
Safety,"er takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detect",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1464,safe,safety,1464,https://root.cern,https://github.com/root-project/root/pull/16442,1,['safe'],['safety']
Safety,"er.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConstants.h""; #include ""TGeoPhysicalNode.h""; #include ""TGeoPolygon.h""; #include ""TGeoRCPtr.h""; #include ""TGeoRegion.h""; #include ""TGeoScaledShape.h""; #include ""TGeoShape.h""; #include ""TGeoShapeAssembly.h""; #include ""TGeoSphere.h""; #include ""TGeoStateInfo.h""; #include ""TGeoSystemOfUnits.h""; #include ""TGeoTorus.h""; #include ""TGeoTrd1.h""; #include ""TGeoTrd2.h""; #include ""TGeoTube.h""; #include ""TGeoUniformMagField.h""; #include ""TGeoVolume.h""; #include ""TGeoVoxelFinder.h""; #include ""TGeoXtru.h""; #include ""TGeoTessellated.h""; #include ""TGeoVector3.h""; #include ""TVirtualGeoConverter.h""; #include ""TVirtualGeoPainter.h""; #include ""TVirtualGeoTrack.h""; #include ""TVirtualMagField.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\build\ws\BUILDTYPE\Release\LABEL\windows64\V\6-30\root\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; libcppyy_backend3_8!??; libCore!TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!get_wpgmptr(); ucrtbase!get_wpgmptr(); ucrtbase!wassert(); libCling!TClingValue::ToTypeAndValueString(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TCling::LoadEnums(); libCore!TListOfEnums::Load(); libCore!TClass::GetListOfEnums(); libCling!TCling::InvalidateCachedDecl(); libCling!TCling::UpdateListsOnUnloaded(); libCling!TCling::UpdateListsOnUnloaded(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingTypedefInfo::Init(); libCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:4965,abort,abort,4965,https://root.cern,https://github.com/root-project/root/issues/14302,1,['abort'],['abort']
Safety,"er/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.183Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617654:2546,redund,redundant,2546,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617654,1,['redund'],['redundant']
Safety,"er/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:48:24.113Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:48:54.025Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618970:2546,redund,redundant,2546,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618970,1,['redund'],['redundant']
Safety,"er/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:00.548Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-28T08:12:01.067Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699853926:1743,redund,redundant,1743,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699853926,1,['redund'],['redundant']
Safety,"er` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750:1700,avoid,avoid,1700,https://root.cern,https://github.com/root-project/root/pull/15750,1,['avoid'],['avoid']
Safety,"eractive line includer >>>:1:1: error: expected '}'; 884: input_line_40:1:43: note: to match this '{'; 884: void __cling_Un1Qu315(void* vpClingValue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py. 886: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_Def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:6896,timeout,timeout,6896,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,ere are the git information I can extract in case it helps.; ```; [16:38:14] marcomeyer@MarcoMacBook-Pro:~/Software/root/20240914-src $ ; $ git status; On branch v6-32-00-patches; Your branch is up to date with 'origin/v6-32-00-patches'.; ```; I use a MacBook Pro Apple M1 Max with XCode SDK 15.0; ```; $ ls -ls /Library/Developer/CommandLineTools/SDKs/ ; total 0; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk; [...]; ```. Here is the result of the cmake command.; ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; -- The C compiler identification is AppleClang 16.0.0.16000022; -- The CXX compiler identification is AppleClang 16.0.0.16000022; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building ROOT version 6.32.04; -- Checking internet connectivity; -- Checking internet connectivity - found; -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard.; -- Performing Test HAS_LIBCXX11; -- Performing Test HAS_LIBCXX11 - Success; -- Found a macOS system 15.0; -- Found an AArch64 system; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled.; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for Python; -- Found Python3: /opt/homebrew/bin/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:846,Detect,Detecting,846,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,8,['Detect'],['Detecting']
Safety,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173:2040,predict,prediction,2040,https://root.cern,https://github.com/root-project/root/pull/15173,1,['predict'],['prediction']
Safety,ern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive_py/); - [projectroot.runtutorials.tutorial_roofit_rf513_wsfactory_tools_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf513_wsfactory_tools_py/); - [projectroot.runtutorials.tutorial_roofit_rf903_numintcache_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf903_numintcache_py/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_df002_dataModel](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_dataframe_df002_dataModel/); - [projectroot.runtutorials.tutorial_dataframe_df004_cutFlowReport](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7660,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579477135:1838,recover,recover,1838,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579477135,1,['recover'],['recover']
Safety,ern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive_py/); - [projectroot.runtutorials.tutorial_roofit_rf513_wsfactory_tools_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf513_wsfactory_tools_py/); - [projectroot.runtutorials.tutorial_roofit_rf903_numintcache_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf903_numintcache_py/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_roostats_StandardFrequentistDiscovery](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roostats_StandardFrequentistDiscovery/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_roofit_rf511_wsfactory_basic_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf511_wsfactory_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579668392:1436,recover,recover,1436,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579668392,1,['recover'],['recover']
Safety,"ertificate, use; >>>>>>> the -k (or --insecure) option.; >>>>>>> ***@***.*** t5]$ ; >>>>>> ; >>>>>> ; >>>>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>> or; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>>>> ; >>>>>> ; >>>>>> regards,; >>>>>> Asoka; >>>>>> ; >>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>>>> ; >>>>>>> ; >>>>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:8001,safe,safelinks,8001,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['safe'],['safelinks']
Safety,"es.cern.ch/root-jenkins/job/root-pullrequests-build/120236/console).; ### Errors:; - [2021-06-15T16:11:07.469Z] C:\build\workspace\root-pullrequests-build\build\test\Release\stressRooFit.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\test\stressRooFit.vcxproj] ; - [2021-06-15T16:11:36.563Z] C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\test\Release\testRooAbsPdf.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\test\testRooAbsPdf.vcxproj] ; - [2021-06-15T16:12:03.470Z] C:\build\workspace\root-pullrequests-build\build\bin\libRooStats.dll : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] . ### Warnings:; - [2021-06-15T15:20:25.342Z] ghprbPullLongDescription=* replace wrong `dynamic_cast&lt;RooAbsReal*&gt;` with\r\n `dynamic_cast&lt;RooAbsPdf*&gt;` (presumably a copy-paste error)\r\n\r\n* use `TIter` and range-based loop instead of `TIterator*`\r\n\r\n* avoid C-style casts\r\n\r\n* replace `assert(0)` with `std::runtime_error`, as asserts only work in\r\n debug buils\r\n\r\n* replace one orrurence of `coef-&gt;GetName()` with `pdf-&gt;GetName()`,\r\n which was probably also a copy-paste error\r\n\r\nThis fixes the following warning in gcc11:\r\n\r\n```\r\n../roofit/roofitcore/src/RooAddModel.cxx: In constructor 'RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)':\r\n../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: 'this' pointer is null [-Wnonnull]\r\n 125 | coutE(InputArguments) &lt;&lt; \""RooAddModel::RooAddModel(\"" &lt;&lt; GetName() &lt;&lt; \"") pdf \"" &lt;&lt; pdf-&gt;GetName() &lt;&lt; \"" is not of type RooAbsPdf, ignored\"" &lt;&lt; endl ;\r\n```\r\n\r\nThis PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8434#issuecomment-861634132:1221,avoid,avoid,1221,https://root.cern,https://github.com/root-project/root/pull/8434#issuecomment-861634132,1,['avoid'],['avoid']
Safety,"ess `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:6913,Avoid,Avoid,6913,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['Avoid'],['Avoid']
Safety,"est ; GNU gdb (Gentoo 10.1 vanilla) 10.1; Copyright (C) 2020 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root/multicore/processExecutorH1Test...; (gdb) run; Starting program: /srv/root/roottest-build/root/multicore/processExecutorH1Test ; warning: File ""/usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py; line to your configuration file ""/home/amadio/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; +++ Executing tProcessExecutorH1Test ......................................... +++; [Detaching after vfork from child process 340387]; [Detaching after vfork from child process 340389]; [Detaching after vfork from child process 340391]; [Detaching after vfork from child process 340393]; [Detaching after vfork from child process 341564]; [Detaching aft",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:1097,safe,safe-path,1097,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['safe'],['safe-path']
Safety,"est/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9737,abort,aborting,9737,https://root.cern,https://github.com/root-project/root/issues/12426,1,['abort'],['aborting']
Safety,"evert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improveme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:1727,Avoid,Avoid,1727,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['Avoid'],['Avoid']
Safety,"ext; hadd Target file: ../merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: ../merged.root:/; Fatal in <TFileMerger::MergeRecursive>: Merging objects that don't inherit from TObject is unimplemented (key: ntuple in file ntuple2.root); aborting; grep: warning: GREP_OPTIONS is deprecated; please use an alias or script; #0 0x00007f2dfd7ec07a in __GI___waitpid (pid=20605, stat_loc=stat_loc; entry=0x7fffc72e6c90, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f2dfd764fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f2dfe92beb6 in TUnixSystem::StackTrace() () from /home/max/projects/root/new-errors/lib/libCore.so; #3 0x00007f2dfe7fe1aa in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/max/projects/root/new-errors/lib/libCore.so; #4 0x00007f2dfe8b9be8 in ErrorHandler () from /home/max/projects/root/new-errors/lib/libCore.so; #5 0x00007f2dfe810e29 in TObject::Fatal(char const*, char const*, ...) const () from /home/max/projects/root/new-errors/lib/libCore.so; #6 0x00007f2dfeed49e3 in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #7 0x00007f2dfeed2e41 in TFileMerger::PartialMerge(int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #8 0x0000000000406c8d in main::{lambda(TFileMerger&, int, int)#2}::operator()(TFileMerger&, int, int) const [clone .constprop.0] (); #9 0x0000000000404ccd in main (); #10 0x00007f2dfd740830 in __libc_start_main (main=0x403fa0 <main>, argc=5, argv=0x7fffc72ea358, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffc72ea348) at ../csu/libc-start.c:291; #11 0x0000000000406199 in _start (); zsh: abort (core dumped) ../bin/hadd -f ../merged.root ntuple1.root ntuple2.root; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008#issuecomment-662581836:2208,abort,abort,2208,https://root.cern,https://github.com/root-project/root/pull/6008#issuecomment-662581836,1,['abort'],['abort']
Safety,"f.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ; >>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath ; >>>>> /etc/grid-security/certificates; >>>>>; >>>>>; >>>>> regards,; >>>>> Asoka; >>>>>; >>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>; >>>>>>; >>>>>> Right - without authentication I cannot see what's happening. ; >>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> ; >>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>> whether it's a redirect. Do you?; >>>>>>; >>>>>> If not let's get #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> ; >>>>>> fixed and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:8239,safe,safelinks,8239,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['safe'],['safelinks']
Safety,"f/dl-error-skeleton.c:208; #22 0x00007f7901b74973 in __GI__dl_catch_error (objname=0x7ffeb2a74918, errstring=0x7ffeb2a74920, mallocedp=0x7ffeb2a74917, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f7901a9012e in _dlerror_run (operate=operate; entry=0x7f7901a905e0 <dlopen_doit>, args=args; entry=0x7ffeb2a74960) at ./dlfcn/dlerror.c:138; #24 0x00007f7901a906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f7902a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f7902a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x00007f79029ae41d in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #29 0x00005572a86f2327 in main ; Aborted (core dumped); ```. *****************************************************************************************************************************; run the demo macro of TMapFile, similar error appears,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f1de22ea3ea in __GI___wait4 (pid=10442, stat_loc=stat_loc; entry=0x7ffc77af3ad8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f1de22ea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc77af3ad8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f1de2250bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1de3b13034 in TUnixSystem::StackTrace() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #4 0x00007f1de39d0702 in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #5 0x00007f1de3a96fe9 in E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:4531,Abort,Aborted,4531,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['Abort'],['Aborted']
Safety,"f7ce9d04875 ""<string>"", mod=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1385; #33 PyRun_StringFlags (str=str; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", start=start; entry=257, globals=0x7f7cea140168, locals=0x7f7cea140168, flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1348; #34 0x00007f7ce9cd8a9b in PyRun_SimpleStringFlags (command=command; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:983; #35 0x00007f7ce9cebe0f in Py_Main (argc=3, argv=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Modules/main.c:589; #36 0x00007f7ce8ee1555 in __libc_start_main () from /lib64/libc.so.6; #37 0x00000000004006be in _start (); ===========================================================. *** Break *** abort. ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7ce8f8446c in waitpid () from /lib64/libc.so.6; #1 0x00007f7ce8f01f62 in do_system () from /lib64/libc.so.6; #2 0x00007f7ce1c6d484 in TUnixSystem::Exec (this=0x1d21040, shellcmd=0x11c2f7d0 ""/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-gcc8-dbg/etc/gdb-backtrace.sh 27438 1>&2"") at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f7ce1c6dce0 in TUnixSystem::StackTrace (this=0x1d21040) at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f7ce216f258 in (anonymous namespace)::do_trace (sig=5) at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00007f7ce216f2e5 in (ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359#issuecomment-694290624:13160,abort,abort,13160,https://root.cern,https://github.com/root-project/root/issues/6359#issuecomment-694290624,1,['abort'],['abort']
Safety,"far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:; ```c++; #ifndef WIN32; // To avoid ambiguities.; inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }; inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }; #endif; ```; fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked .; I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479606106:1193,avoid,avoid,1193,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479606106,1,['avoid'],['avoid']
Safety,"fc57/x86_64-centos7/bin/gcc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Could NOT find Python module pygments; -- Could NOT find Python module pygments.lexers.c_cpp; -- Could NOT find Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0:/cvmfs/sft.ce; rn.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc; 57/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:16865,detect,detection,16865,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['detect'],['detection']
Safety,"find_package(Python) seems to have the following unsexpected behavior:; if Python_EXECUTABLE is specified to e.g. /usr/bin/python3 and; DEVELOPMENT is required but not found, then CMake looks for the; development package of python2. If it succeeds, Python_INCLUDE_DIRS and; Python_LIBRARIES are set as a consequently. This brings to a mismatch; between the variables set, since they refer to different python; versions.; ; To avoid this, we use find_package(PythonX) also for the build with one; version of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5579:426,avoid,avoid,426,https://root.cern,https://github.com/root-project/root/pull/5579,1,['avoid'],['avoid']
Safety,"for all builds since it is subject to timeouts when the build happens from scratch. This is of course a temporary measure, until we find a future proof solution for this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16355:38,timeout,timeouts,38,https://root.cern,https://github.com/root-project/root/pull/16355,1,['timeout'],['timeouts']
Safety,"force-pushed just to fix a clang-format issue, the previous build was green, merging (EDIT: and I aborted the latest jenkins build)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10894#issuecomment-1175920956:98,abort,aborted,98,https://root.cern,https://github.com/root-project/root/pull/10894#issuecomment-1175920956,1,['abort'],['aborted']
Safety,"forming download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; -- Downloading... done; -- extracting...; src='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/BUILTIN_cppzmq'; -- extracting... [tar xfz]; -- extracting... [analysis]; -- extracting... [rename]; -- extracting... [clean up]; -- extracting... done; [287/527] Generating G__ROOTHist.cxx, ../../lib/ROOTHist.pcm. ... [106/527] Performing download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; -- Downloading... done; -- extracting...; src='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/BUILTIN_cppzmq'; -- extracting... [tar xfz]; -- extracting... [analysis]; -- extracting... [rename]; -- extracting... [clean up]; -- extracting... done; [526/527] Generating lib/modules.idx. [527/527] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.10 seconds Cpu Time = 0.10 seconds; (TFile *) 0x562048c754d0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227#issuecomment-2288847307:1804,timeout,timeout,1804,https://root.cern,https://github.com/root-project/root/issues/16227#issuecomment-2288847307,2,['timeout'],['timeout']
Safety,"from one entry to another.; It can happen that the size of C arrays stored in branches varies a lot; from event to event. It can happen also that a very small array becomes; suddently very big. This triggers a reallocation of the buffer ROOT; uses internally to hold the read content.; When snapshotting, RDataFrame, was setting the addresses of the output; tree only once at the 1st event processed (per slot). This of course could; lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly; handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the; future. Nota bene: this **does also** fix ROOT-9860",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3153:650,avoid,avoid,650,https://root.cern,https://github.com/root-project/root/pull/3153,1,['avoid'],['avoid']
Safety,g interactive line includer &gt;&gt;&gt;: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:46:13.218Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699619048:1436,redund,redundant,1436,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699619048,1,['redund'],['redundant']
Safety,"g webdav.lcg.triumf.ca ; > <http://webdav.lcg.triumf.ca>; > PING (137.138.28.175) 56(124) bytes of data.; >; > --- ping statistics ---; > 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >; > ***@***.*** ~]$; >; > Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >; > regards,; > Asoka; >; >> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Maybe the connections were from commodity network? Are you able to ; >> ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca>?; >>; >> Thanks,; >>; >> Di; >>; >>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ; >>> ***@***.***>> wrote:; >>>; >>> ﻿ Hi Axel,; >>>; >>> I don't know but I'll add Simon and Di who are the Tier-1 experts ; >>> and may have ideas.; >>>; >>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>; >>>; >>>>; >>>>> s I crosscheck (to see whether it's related to the Davix redirect ; >>>>> issue #8155 ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uCliumeh1X0KTsDzvHcojQm9qfvqZ96DsLCqoTBDdgs%3D&reserved=0> ) ; >>>>> I tried with curl but I get; >>>>>; >>>>> |$ curl -v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=10rGCkpmGr%2B9fH%2B",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:1281,safe,safelinks,1281,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['safe'],['safelinks']
Safety,g::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. TClass::GetClass: Header Parsing - The representation of TObjectEditor was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting TObjectEditor in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; TEnum::GetEnum: Header Parsing - The enumerator TObjectEditor is not known to the typesystem: an interpreter lookup will be performed. This can imply parsing of headers. This can be avoided selecting the numerator in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TGWin32; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for kMaxEntries; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for kMaxEntries; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15963#issuecomment-2200648481:30286,avoid,avoided,30286,https://root.cern,https://github.com/root-project/root/issues/15963#issuecomment-2200648481,1,['avoid'],['avoided']
Safety,"g; `RNTupleView` advertises a defaulted move constructor, but unconditionally frees state in it's destructor causing a double free in the destructor of the second instance. This is caused by the call to `fField.DestroyValue(fValue);` in the dtor. `fValue` is copyable and moveable since the copy special member functions are not deleted, but contains pointers to allocated memory which are not duplicated during copies or transferred during a move (with leaving the moved from pointer `nullptr`) and thus shared between two instances of `RNTupleView`. Although the documentation of `RFieldValue`, the type of `fValue`, claims that the class owns no memory, the class receives a heap allocated value during the call chain of the constructor initialization list of `RNTupleView`: `fValue(fField.GenerateValue())`. Since the ownership model is convoluted to me, I cannot propose an easy fix. From the perspective of `RNTupleView`, `RFieldValue` would need a user-defined move ctor transferrign ownership of the heap-allocated pointer and `RNTupleView`'s dtor needs to be able to detect and handle a moved-from state. But the former is against the documented intent of the class, so I need to leave this to the designers of those classes :). ### Expected behavior; The move ctor of `RNTupleView` should let the dtors of both `RNTupleView` instances finish correctly. ### To Reproduce. Example:; ```c++; auto ntuple = RE::RNTupleReader::Open(RE::RNTupleModel::Create(), ""DecayTree"", ""B2HHH~none.ntuple"");; {; auto viewH1IsMuon = ntuple->GetView<int>(""H1_isMuon"");; {; auto copy{std::move(viewH1IsMuon)};; } // dtor for copy, frees shared state; } // dtor for viewH1IsMuon, double free; ```. I assume the problem does not depend on the input file, so it can probably be reproduced in a smaller setup. ### Setup; ```; bgruber@graviola:$ root --version; ROOT Version: 6.29/01; Built for linuxx8664gcc on Jan 16 2023, 14:47:00; From remotes/origin/HEAD@v6-29-01-212-gc8ad008463; ```; Built with g++-12 on Ubunt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12136:1095,detect,detect,1095,https://root.cern,https://github.com/root-project/root/issues/12136,1,['detect'],['detect']
Safety,"gDirectory is now backed by an atomic thread local pointer so that the thread deleting a TFile can update other thread's gDirectory.; TDirectory now has a `std::vector<std::atomic<TDirectory*>*>` to keep track of the gDirectory's thread local pointing to the TDirectory.; TDirectory::TContext was already thread safe.; gDirectory is a macro that now actualy 'return' a TDirectoryAtomicAdapter which provides an adaption from std::atomic<TDirectory*> to the; outstanding usage (i.e. behave somewhat like a TDirectory*).; TDirectory::CurrentDirectory now returns a reference to a `std::atomic<TDirectory*>`. Note: due to the actual (but intended to be unnoticeable) change in the type of gDirectory, there is no plan to backport this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6952:312,safe,safe,312,https://root.cern,https://github.com/root-project/root/pull/6952,1,['safe'],['safe']
Safety,"g]$ if(true) {auto h1 = new int(any_undeclared_variable_here);}; input_line_4:2:30: error: use of undeclared identifier 'any_undeclared_variable_here'; if(true) {auto h1 = new int(any_undeclared_variable_here);}; ^; ```. In root, the first example gives a syntax error instead (which is already wrong). This is because `ROOT` tries to resolve `any_undeclared_variable_here` at runtime:; ```; root [0] auto h1 = new int(any_undeclared_variable_here);; ROOT_prompt_0:1:1: error: Syntax error; auto h1 = new int(any_undeclared_variable_here);; ^; FunctionDecl 0x55555714b7c8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x55555714b710 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x555557161e30 <col:42, ROOT_prompt_0:3:1>; | |-DeclStmt 0x555557161e10 <line:1:1, col:48>; | | `-VarDecl 0x55555714b918 <col:1, col:47> col:6 h1 'int *':'int *' cinit; | | `-CXXNewExpr 0x555557161ce8 <col:11, col:47> 'int *' Function 0x55555714bb40 'operator new' 'void *(std::size_t)'; | | `-ParenListExpr 0x55555714bad0 <col:18, col:47> 'NULL TYPE'; | | `-DeclRefExpr 0x55555714ba90 <col:19> '<dependent type>' lvalue Var 0x55555714b988 'any_undeclared_variable_here' '<dependent type>'; | `-NullStmt 0x555557161e28 <line:2:1>; `-AnnotateAttr 0x55555714b9f0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [1] ; ```. And we get a segfault when added inside an if clause: ; ```; root [1] if(true) {auto h1 = new int(any_undeclared_variable_here);}; root.exe: /home/dvalapar/work/root/dev.bug-fixes/interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: Assertion `!isNull() && ""Cannot retrieve a NULL type pointer""' failed. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737352911424) at ./nptl/pthread_kill.c:44; 44 ./nptl/pthread_kill.c: No such file or directory.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-2082487744:2103,Abort,Aborted,2103,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-2082487744,1,['Abort'],['Aborted']
Safety,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7950:2130,abort,abort,2130,https://root.cern,https://github.com/root-project/root/issues/7950,2,"['abort', 'avoid']","['abort', 'avoided']"
Safety,"ge the setting of the property together with the ones in the protoclass (see above)? I am thinking to state transitions.; > ; > How is the state transition for the properties covered by fASTProperty differs from that of the properties covered by fClassProperty?. The difference is in the classes which are not associated to ROOT pcms. For those, fClassProperty is filled via an interpreter lookup.; ; > >> Should fASTProperty be set via TProtoClass? (for consistency); > > This leaves out the classes in the libraries with an empty pcm such as Core, RIO and Thread.; > ; > Sorta, this would also mean a second path to setting (as it is already the case for fProperty and fClassProperty). See above: the worry here is to avoid the lookup, i.e. one of these two paths. > >> Shouldn't this multiple-inheritance flag be set via/in TClass::Property (via ClassInfo_ClassProperty for example)?; > > I think I do not fully understand. ; > ; > This PR introduces a completely different paths/pattern for setting the ASTProperties and all the other properties. Technically the 'nature' of the information is similar to that of stored in ClassInfo_ClassProperty). This question was one of the way to explore why/if the ASTProperties should be treated differently. I now understand. To be checked, I do not have an answer now.; ; > >> Should fProperty and fClassProperty be set through the TClass constructor? (to benefit from the same ""all classes"" speed-up?; > > I do not understand this question :(; > ; > Similarly to the above, this question is asking *if* the fASTProperties is 'better' than the old one then shouldn't the other two be moved towards the same pattern (and the speed-up that this PR introduced would, possibly, benefit the Property and fClassProperty usage too). From this last comments and the above (which may need a few other iterations) I distil that we agree on trying to avoid a 3rd place where properties are stored, accommodating the upgrade in the existing system: is this accurate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-412846950:1971,avoid,avoid,1971,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-412846950,1,['avoid'],['avoid']
Safety,"ge_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-891036930): I didn't generalize TRangeDynCast and TRangeStaticCast. They are tied to TCollection and fulfill a different purpose because of that. They are also part of `ROOT::Internal`, while my new functions are supposed to be also used by the RooFit users. I would suggest we leave them as they are, but if you think the new `static_range_cast` and `dynamic_range_cast` are useful for everyone we can move the new file if you want. But where?. I was already expecting that it would be difficult to adapt those, but there will be ways to adapt them. I think it would be *better* if there's one good solution for all, but you have to decide how much time you want to invest. > 2. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#discussion_r680892053): I didn't add the `assert(dynamic_cast)` to the `static_range_cast` because the performance penalty it introduces in debug mode is not probably not expected by non-RooFit developers. There's not many loops out there in the world that will depend on this. If somebody uses it, they might be glad to have the extra safety. About the performance:; - When you run from the interpreter, you don't care about the performance of your loop as much.; - When you compile, you probably know what `NDEBUG` is.; - When you ACLIC-compile, I would have hoped that you get an automatic `NDEBUG` in release builds of ROOT, or when you `+O` a file. You don't, unfortunately. My preferred solution would have been to fix that and use the asserts, but it's your project now. > 3. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-890998817): I stuck with the detection of `dynamic_cast` vs. `static_cast` at compile time to also support non-polymorphic types.; > . Sounds good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891155267:1473,safe,safety,1473,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891155267,2,"['detect', 'safe']","['detection', 'safety']"
Safety,"ge`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:1758,Detect,Detecting,1758,https://root.cern,https://github.com/root-project/root/issues/8633,2,['Detect'],['Detecting']
Safety,"get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. private:; std::vector< Hit > m_hits;. };; ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp; class Track { /* particle trajectory */. private:; std::vector< Hit* > m_hits;. };; ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp; class Track { /* particle trajectory */. private:; unsigned int m_Nhits;; Hit* m_hits; //[m_Nhits]. };; ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:1575,detect,detector,1575,https://root.cern,https://github.com/root-project/root/issues/14540,1,['detect'],['detector']
Safety,"ght/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 890: error code: -529697949; 890:; 890:; 13/16 Test #890: tutorial-dataframe-df019_Cache-py ........................***Failed Error regular expression found in output. Regex=[Error in] 4.65 sec; test 891; Start 891: tutorial-dataframe-df021_createTGraph-py. 891: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df021_createTGraph.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 891: Environment variables:; 891: ROOT_HIST=0; 891: Test timeout computed to be: 1500; 891: input_line_39:2:28: error: use of u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:12943,timeout,timeout,12943,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,"gle AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEntriesRange(); // we trust TTreeProcessorMT to call SetEntriesRange; const auto nEntries = entryRange.second - entryRange.first;; auto count = entryCount.fetch_add(nEntries);; + // TDirectory::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:1823,avoid,avoid,1823,https://root.cern,https://github.com/root-project/root/issues/12761,1,['avoid'],['avoid']
Safety,"gleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root; hadd Target file: Run2012B_SingleMu10x.root; hadd compression setting for all output: 1; hadd Source file 1: Run2012B_SingleMu.root; hadd Source file 2: Run2012B_SingleMu.root; hadd Source file 3: Run2012B_SingleMu.root; hadd Source file 4: Run2012B_SingleMu.root; hadd Source file 5: Run2012B_SingleMu.root; hadd Source file 6: Run2012B_SingleMu.root; hadd Source file 7: Run2012B_SingleMu.root; hadd Source file 8: Run2012B_SingleMu.root; hadd Source file 9: Run2012B_SingleMu.root; hadd Source file 10: Run2012B_SingleMu.root; hadd Target path: Run2012B_SingleMu10x.root:/; Fill: Switching to new file: Run2012B_SingleMu10x_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting Run2012B_SingleMu10x.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fea7e19b48a in wait4 () from /usr/lib/libc.so.6; #1 0x00007fea7e10d09b in do_system () from /usr/lib/libc.so.6; #2 0x00007fea7ea7fdac in TUnixSystem::Exec (this=0x5593666eb200, shellcmd=0x559368e19160 ""/home/blue/ROOT/master/cmake-build-foo/etc/gdb-backtrace.sh 538334 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2108; #3 0x00007fea7ea8069e in TUnixSystem::StackTrace (this=0x5593666eb200) at ../core/unix/src/TUnixSystem.cxx:2399; #4 0x00007fea7e911bc1 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fea7d7ab1b5 ""TFileMerger::RecursiveRemove"", msg=0x55936842c8a0 ""Output file of the TFile Merger (targeting Run2012B_SingleMu10x.root) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TErrorDefaultHandler.cxx:174; #5 0x00007fea7e9ee212 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fea7d7ab1b5 ""TFileMerger::RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:1560,abort,aborting,1560,https://root.cern,https://github.com/root-project/root/issues/10102,1,['abort'],['aborting']
Safety,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591:356,unsafe,unsafe,356,https://root.cern,https://github.com/root-project/root/pull/5591,2,"['Safe', 'unsafe']","['Safe', 'unsafe']"
Safety,"har> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001); ==270704== by 0x1979847F: ???; ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418); ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761); ==270704== by 0x2F3C1107: ???; ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846); ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78); ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367); ==270704== ; ==270704== ; ==270704== HEAP SUMMARY:; ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks; ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated; ==270704== ; ==270704== LEAK SUMMARY:; ==270704== definitely lost: 18 bytes in 3 blocks; ==270704== indirectly lost: 0 bytes in 0 blocks; ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks; ==270704== still reachable: 10,654,285 bytes in 57,037 blocks; ==270704== of which reachable via heuristic:; ==270704== newarray : 8,616 bytes in 18 blocks; ==270704== multipleinheritance: 14,904 bytes in 3 blocks; ==270704== suppressed: 115,183,139 bytes in 52,672 blocks; ==270704== Rerun with --leak-check=full to see details of leaked memory; ==270704== ; ==270704== Use --track-origins=yes to see where uninitialised values come from; ==270704== For lists of detected and suppressed errors, rerun with: -s; ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25); ```; </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:256213,detect,detected,256213,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['detect'],['detected']
Safety,"he Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [ ] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [ ] listLibs pass ROOT_CMD as variable; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966:1353,safe,safe,1353,https://root.cern,https://github.com/root-project/root/pull/9966,1,['safe'],['safe']
Safety,"he explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```; 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 126 tests from 3 test suites.; 76: [----------] Global test environment set-up.; 76: [----------] 6 tests from InterpreterLock; 76: [ RUN ] InterpreterLock.ConcurrentCalc; 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms); 76: [ RUN ] InterpreterLock.ReadLocks; 76: [ OK ] InterpreterLock.ReadLocks (78 ms); 76: [ RUN ] InterpreterLock.BalancedUserReadLock; 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms); 76: [ RUN ] InterpreterLock.BalancedUserWriteLock; 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms); 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock; 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms); 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock; 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms); 76: [----------] 6 tests from InterpreterLock (725 ms total); 76: ; 76: [----------] 110 tests from RWLock; 76: [ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:1502,timeout,timeout,1502,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['timeout'],['timeout']
Safety,"hen trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or it crashes. https://github.com/root-project/root/blob/95307116ca3dd811ac1b5e496ad7f9828402dc51/tree/ntuple/v7/doc/specifications.md?plain=1#L780",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534:1149,abort,aborting,1149,https://root.cern,https://github.com/root-project/root/issues/15534,1,['abort'],['aborting']
Safety,"hi Bertrand, thank you for fixing this!; It's certainly safer in general that different test cases write on different output files.; I don't understand however why we need to delete the files if they already exist. Does that mean that Windows does not support `TFile(""f.root"", ""recreate"")` (i.e. recreating an existing file)? I think i'm missing something :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2416#issuecomment-409849546:56,safe,safer,56,https://root.cern,https://github.com/root-project/root/pull/2416#issuecomment-409849546,1,['safe'],['safer']
Safety,"hi, i don't have a strong opinion about the naming, just some comments:; - only tangentially related, but does RVec has a standard Sort? It seems weird to have more elaborate index operations and no Sort; - the name Take is used for a similar operation in other libraries (that I know, mxnet in python and ranges-v3 in c++) so in principle it's appropriate; - it's very common to also have the signature Take(v, 3) which takes the first 3 elements. Since one of the most common operations in HEP is ""take best"" or ""take best 2"" and that translates to Sort + Take, I think there is value in adding the overload; - @dpiparo: we already have Filter both in RVec and RDataFrame, I don't think there is a risk to confuse the two, but if we don't want overlap we should change that too. Sorry if these things have already bee. discussed/solved, my laptop broke and github is not mobile friendly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2329#issuecomment-406161111:700,risk,risk,700,https://root.cern,https://github.com/root-project/root/pull/2329#issuecomment-406161111,1,['risk'],['risk']
Safety,"his=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:4054,Detect,Detectors,4054,https://root.cern,https://github.com/root-project/root/issues/8931,3,['Detect'],"['Detector', 'Detectors', 'DetectorsBase']"
Safety,"hmm ... that was really unexpected for me for lxplus ... ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca; PING (137.138.28.175) 56(124) bytes of data. --- ping statistics ---; 10 packets transmitted, 0 received, 100% packet loss, time 8999ms. ***@***.*** ~]$ . Vitaliy, shouldn't we expect that to be accessible from lxplus ?. regards,; Asoka. > On May 12, 2021, at 10:37 AM, Di Qing ***@***.***> wrote:; > ; > Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca?; > ; > Thanks,; > ; > Di; > ; >> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.***> wrote:; >> ; >> ﻿ Hi Axel,; >> ; >> I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; >> ; >> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >> ; >> ; >>> ; >>>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643127522%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=ieWzynOWVK%2BPOmP4TMbx4CxPX%2FiVAcbvEM8tjOw7c2k%3D&reserved=0> ) I tried with curl but I get; >>>> ; >>>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>>> * Trying 206.12.9.197:2880...; >>>> * TCP_NODELAY se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:916,safe,safelinks,916,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['safe'],['safelinks']
Safety,http: increase websocket timeout to 300 s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/503:25,timeout,timeout,25,https://root.cern,https://github.com/root-project/root/pull/503,1,['timeout'],['timeout']
Safety,http: try to avoid civetweb warnings on clang/mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1966:13,avoid,avoid,13,https://root.cern,https://github.com/root-project/root/pull/1966,1,['avoid'],['avoid']
Safety,"https://github.com/root-project/root/pull/11874 ; (I had seen this same error last week in cmssw while just picking up the stl.modulemap changes - I had assumed the rest of the PR would avoid this error, but seems not)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1420544238:186,avoid,avoid,186,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1420544238,1,['avoid'],['avoid']
Safety,"ib\IR\Module.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\LLVMContextImpl.cpp(252,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Metadata.h(50,31): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\Statepoint.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(460,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\SafepointIRVerifier.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\PassManager.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/PointerUnion.h(51,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\TypeFinder.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8113#issuecomment-836826947:2364,Safe,SafepointIRVerifier,2364,https://root.cern,https://github.com/root-project/root/pull/8113#issuecomment-836826947,1,['Safe'],['SafepointIRVerifier']
Safety,"ication (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2568,abort,abort,2568,https://root.cern,https://github.com/root-project/root/issues/16242,1,['abort'],['abort']
Safety,"identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Wove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:3499,Detect,Detecting,3499,https://root.cern,https://github.com/root-project/root/issues/8193,2,['Detect'],['Detecting']
Safety,"if ""[skip ci]"" is detected in the PR title, the CI does not start. This is done to have at least one string in common with the ones the GH CI uses for commits.; The test of this PR is that the CI does not start given its title.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15524:18,detect,detected,18,https://root.cern,https://github.com/root-project/root/pull/15524,1,['detect'],['detected']
Safety,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13712:90,Avoid,Avoids,90,https://root.cern,https://github.com/root-project/root/pull/13712,1,['Avoid'],['Avoids']
Safety,"ify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:3421,detect,detection,3421,https://root.cern,https://github.com/root-project/root/issues/7654,1,['detect'],['detection']
Safety,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9880,abort,aborted,9880,https://root.cern,https://github.com/root-project/root/issues/12426,1,['abort'],['aborted']
Safety,iled on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45228/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/libc.modulemap:82:35: error: header 'bits/assert.h' not found ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/x86_64-pc-linux-gnu/bits/os_defines.h:44:5: error: function-like macro '__GLIBC_PREREQ' is not defined ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/libc.modulemap:82:35: error: header 'bits/assert.h' not found ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/x86_64-pc-linux-gnu/bits/os_defines.h:44:5: error: function-like macro '__GLIBC_PREREQ' is not defined ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/libc.modulemap:82:35: error: header 'bits/assert.h' not found ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/x86_64-pc-linux-gnu/bits/os_defines.h:44:5: error: function-like macro '__GLIBC_PREREQ' is not defined ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/libc.modulemap:82:35: error: header 'bits/assert.h' not found ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/cstdlib:124:11: error: no member named 'div_t' in the global namespace ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/cstdlib:125:11: error: no member named 'ldiv_t' in the global namespace ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/cstdlib:127:11: error: no member named 'abort' in the global namespace . And 22 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2838#issuecomment-432562543:1964,abort,abort,1964,https://root.cern,https://github.com/root-project/root/pull/2838#issuecomment-432562543,1,['abort'],['abort']
Safety,iler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Found LZMA includes at /usr/include; -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Downloading and building GSL version 2.1; -- Looking for python; -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so; -- Targeting X86; -- Clang version: 5.0.0; -- Cling version (from VERSION file): ROOT_0.6~dev; -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-7'; Recording the git revision now; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Failed; -- 315/786 tutorials have been vetoed for various reasons; -- Using directly ROOTSYS for roottest.git is und,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:1610,detect,detection,1610,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['detect'],['detection']
Safety,"ilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>> * Trying 2607:f8f0:660:3::36...; >>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>> CApath: none; >>> * Server certificate:; >>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:3284,safe,safelinks,3284,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['safe'],['safelinks']
Safety,"in /usr/home/erik/devel/resources/root/build; 1 error. make: stopped in /usr/home/erik/devel/resources/root/build; ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell; -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4; Processor 8 core 0 MHz (amd64); Build type RelWithDebInfo; Install path /usr/local; Compiler Clang 14.0.5; Compiler flags:; C -pipe -Wall -W -pthread -O2 -g -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell; cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b; ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:4312,Abort,Abort,4312,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['Abort'],['Abort']
Safety,"in case keys could not be recovered, the file was made a Zombie; and caused the system to crash.; Relates to https://github.com/root-project/roottest/pull/217",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2583:26,recover,recovered,26,https://root.cern,https://github.com/root-project/root/pull/2583,1,['recover'],['recovered']
Safety,"in(){. // Choose the number of the test; // 0 or 1 ; int numTest = 0;. createFileWithHists(""myFileWithHists.root"");. TFileMerger fileMerger(false);; fileMerger.SetMsgPrefix(""selectiveHadd"");; fileMerger.SetPrintLevel(1);. // Set a selective list of objects to hadd ; // The rest of objects will not be considered in the input files ; fileMerger.AddObjectNames(""hist1"");; fileMerger.AddObjectNames(""hist2"");. // Set output file ; fileMerger.OutputFile(""myExclusiveFile.root"",""recreate"");. // Set input file(s) ; fileMerger.AddFile(""myFileWithHists.root"");. if (numTest == 1){; ; // In that case add a dummy file i.e. empty file ; // In order to avoid the bug in in the TFileMerger class ; // if there is only one input file used. std::string tmpDir = gSystem->TempDirectory();; // create a unique empty file ; std::string dummyFileName = tmpDir +""/dummyEmptyFile-"" + std::string(TUUID().AsString()) + "".root"";. std::cout << ""Creating a dummy empty file to avoid a bug in TFileMerger class: "" << dummyFileName << std::endl;; // Just create dummy file ; TFile *file = TFile::Open(dummyFileName.c_str(),""recreate"");; delete file;; fileMerger.AddFile(dummyFileName.c_str());; }; ; // Will only merge in the output files ; // the list of objects specified ; Int_t mode = (TFileMerger::kAll | TFileMerger::kRegular | TFileMerger::kOnlyListed);; ; fileMerger.PartialMerge(mode);; ; return 0;; }. void createFileWithHists(const std::string &fileName){; TFile *file = TFile::Open(fileName.c_str(), ""recreate""); . TH1F *hist1 = new TH1F(""hist1"", ""hist1"", 1 , 0 , 2);; TH1F *hist2 = new TH1F(""hist2"", ""hist2"", 1 , 0 , 2);; TH1F *hist3 = new TH1F(""hist3"", ""hist3"", 1 , 0 , 2);; TH1F *hist4 = new TH1F(""hist4"", ""hist4"", 1 , 0 , 2);. hist1->Fill(1);. hist2->Fill(1);; hist2->Fill(2);. hist3->Fill(1);; hist3->Fill(1);; hist3->Fill(1);. hist4->Fill(1);; hist4->Fill(1);; hist4->Fill(1);; hist4->Fill(1);. // Write and close file; file->Write();; delete file;; }; ```. ### ROOT version. Tested with ROOT Version: 6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:3489,avoid,avoid,3489,https://root.cern,https://github.com/root-project/root/issues/13359,1,['avoid'],['avoid']
Safety,"include(s).; #include <memory>. // Forward declaration(s).; class ROpaqueTaskArena;. class RTaskArena {; public:; /// Default constructor; RTaskArena();. private:; /// Task arena object; std::unique_ptr<ROpaqueTaskArena> fTaskArena;; };. #endif // TEST_RTASKARENA_HXX; [bash][Legolas]:build > more ../ROpaqueTaskArena/RTaskArena.cxx. // Local include(s).; #include ""RTaskArena.hxx""; #include ""ROpaqueTaskArena.hxx"". RTaskArena::RTaskArena(); : fTaskArena( new ROpaqueTaskArena() ) {}; [bash][Legolas]:build > more ../ROpaqueTaskArena/test.cxx . // Local include(s).; #include ""RTaskArena.hxx"". int main() {. RTaskArena arena;; return 0;; }; [bash][Legolas]:build > cmake ../ROpaqueTaskArena/; -- The CXX compiler identification is GNU 9.3.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done; -- Generating done; -- Build files have been written to: /home/krasznaa/development/ropaquetaskarena/build; [bash][Legolas]:build > make; Scanning dependencies of target TaskArenaLib; [ 25%] Building CXX object CMakeFiles/TaskArenaLib.dir/RTaskArena.cxx.o; [ 50%] Linking CXX shared library libTaskArenaLib.so; [ 50%] Built target TaskArenaLib; Scanning dependencies of target TaskArenaTest; [ 75%] Building CXX object CMakeFiles/TaskArenaTest.dir/test.cxx.o; In file included from /usr/include/c++/9/memory:80,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:5,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/test.cxx:3:; /usr/include/c++/9/bits/unique_ptr.h: In instantiation of ‘void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = ROpaqueTaskArena]’:; /usr/include/c++/9/bits/unique_ptr.h:292:17: required from ‘std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = ROpaqueTaskArena; _Dp = std::default_d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:2507,Detect,Detecting,2507,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,4,['Detect'],['Detecting']
Safety,"ing after fork from child process 341608]; [Detaching after fork from child process 341609]; [Detaching after fork from child process 341610]; [Detaching after vfork from child process 341705]; +++ Processing the H1 dataset with a lambda .................................. OK ; [Detaching after fork from child process 341711]; [Detaching after fork from child process 341712]; [Detaching after fork from child process 341713]; +++ Processing the H1 dataset with h1analysisTreeReader ...................... OK ; [Detaching after fork from child process 341899]; [Detaching after fork from child process 341900]; [Detaching after fork from child process 341901]; +++ Processing the H1 dataset to create list ................................. OK ; [Detaching after fork from child process 341976]; [Detaching after fork from child process 341977]; [Detaching after fork from child process 341978]; +++ Processing the H1 dataset with a lambda from entry list .................. OK . Program received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:49; 49	 return ret;; (gdb) bt; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:49; #1 0x00007ffff633054a in __GI_abort () at abort.c:79; #2 0x00007ffff633042c in __assert_fail_base (fmt=0x7ffff64a3018 ""%s%s%s:%u: %s%sAssertion `%s' failed.\n%n"", ; assertion=0x7ffff4783308 ""!T.getTopmostParent()->getNext() && \""Can not revert previous transactions\"""", ; file=0x7ffff4782c68 ""/var/tmp/portage/sci-physics/root-9999/work/root-9999/interpreter/cling/lib/Interpreter/Interpreter.cpp"", line=1513, ; function=<optimized out>) at assert.c:92; #3 0x00007ffff633eda3 in __GI___assert_fail (; assertion=assertion@entry=0x7ffff4783308 ""!T.getTopmostParent()->getNext() && \""Can not revert previous transactions\"""", ; file=file@entry=0x7ffff4782c68 ""/var/tmp/portage/sci-physics/root-9999/work/root-9999/interpreter/cling/lib/Interpreter/Interpreter.cpp"", ; line=line@entry=1513, function=function@e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:3203,Abort,Aborted,3203,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['Abort'],['Aborted']
Safety,ing autoparse for HepMC::GenEvent. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenEvent; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenEvent. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenEvent; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenEvent. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenEvent; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenEvent. Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenEvent); TClass::GetClass: Header Parsing - The representation of HepMC::GenEvent was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting HepMC::GenEvent in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenEvent); Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenEvent); Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenEvent); Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenEvent); dynpath = /home/jun/dev/root/Debug/lib:.:/home/jun/dev/root/Debug/lib:/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v3:/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v2:/lib/x86_64-linux-gnu/tls/haswell/x86_64:/lib/x86_64-linux-gnu/tls/haswell:/lib/x86_64-linux-gnu/tls/x86_64:/lib/x86_64-linux-gnu/tls:/lib/x86_64-linux-gnu/haswell/x86_64:/lib/x86_64-linux-gnu/haswell:/lib/x86_64-linux-gnu/x86_64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v3:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v2:/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64:/usr/lib/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:9880,avoid,avoided,9880,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['avoid'],['avoided']
Safety,"ing boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checkli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1943,Safe,Safety,1943,https://root.cern,https://github.com/root-project/root/pull/16442,1,['Safe'],['Safety']
Safety,ing declarator [-Wredundant-parens] ; - [2021-06-28T12:58:41.023Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.877Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:45.528Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:59:31.741Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:12.046Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:22.838Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] . And 3 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execInitOrder](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execInitOrder/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555#issuecomment-869689634:1645,redund,redundant,1645,https://root.cern,https://github.com/root-project/root/pull/8555#issuecomment-869689634,3,['redund'],['redundant']
Safety,ing: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:74944,safe,safe,74944,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"ing::IsLoaded(const char* filename) const; llvm::StringRef(filesStr).split(files, ""\n"");. std::set<std::string> fileMap;; + llvm::StringRef file_name_ref(file_name);; // Fill fileMap; return early on exact match.; for (llvm::SmallVector<llvm::StringRef, 100>::const_iterator; iF = files.begin(), iE = files.end(); iF != iE; ++iF) {; - if ((*iF) == file_name.c_str()) return kTRUE; // exact match; + if ((*iF) == file_name_ref) return kTRUE; // exact match; fileMap.insert(iF->str());; }. @@ -7116,9 +7117,12 @@ static std::string GetSharedLibImmediateDepsSlow(std::string lib,; // FIXME: It is unclear whether we can ignore all weak undefined; // symbols:; // http://lists.llvm.org/pipermail/llvm-dev/2017-October/118177.html; - if (SymName == ""_Jv_RegisterClasses"" ||; - SymName == ""_ITM_deregisterTMCloneTable"" ||; - SymName == ""_ITM_registerTMCloneTable""); + static constexpr llvm::StringRef RegisterClasses(""_Jv_RegisterClasses"");; + static constexpr llvm::StringRef RegisterCloneTable(""_ITM_registerTMCloneTable"");; + static constexpr llvm::StringRef DeregisterCloneTable(""_ITM_deregisterTMCloneTable"");; + if (SymName == RegisterClasses ||; + SymName == RegisterCloneTable ||; + SymName == DeregisterCloneTable); continue;; }. ```. Do you want me to submit this separately, outside this PR?. > > On the performance side, the current state seems to veery slow: `ctest -j12 -R dataframe .` used to take in the order of 2m30s, now I aborted it after 13 minutes. A lot of time seems to be spent in `sys`, are you aware of changes that could explain this?; > ; > Can you paste the stack trace? I fear that the DynamicLibraryManagerSymbol.cpp stopped inlining functions due to some recent calls of ::StringRef::str()... `perf` says a number of kernel functions and indeed `cling::Dyld::ContainsSymbol` are the largest contenders. I don't understand why though, the annotations inside the functions make no sense to me (showing more than 50% on a ` mov %ebx,%r8d` without something obvious around it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1088604187:2216,abort,aborted,2216,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1088604187,1,['abort'],['aborted']
Safety,instructions; 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator; 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis; 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing; 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3; 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2; 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6; 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5; 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4; 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7; 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination; 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare; 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting; 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation; 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation; 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass; 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization; 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis; 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup; 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:4156,redund,redundant,4156,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,"int-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 972; Start 972: roottest-cling-exception-nullderef-e. 972: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:; 972: -- END TEST OUTPUT --; 972: -- BEGIN TEST ERROR --; 972: Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; 972: Execution of your code was aborted.; 972: ROOT_cli_1:1:2: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; 972: *p; 972: ^; 972:; 972: -- END TEST ERROR --; 1/1 Test #972: roottest-cling-exception-nullderef-e ... Passed 0.44 sec. The following tests passed:; roottest-cling-exception-nullderef-e. 100% tests passed, 0 tests failed out of 1. Label Time Summary:; cling = 0.44 sec*proc (1 test); regression = 0.44 sec*proc (1 test); roottest = 0.44 sec*proc (1 test). Total Test time (real) = 2.93 sec; ```; And BTW, no need to report the tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:1713,timeout,timeout,1713,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,1,['timeout'],['timeout']
Safety,io: Avoid infinite recursion in TFile::Open,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15591:4,Avoid,Avoid,4,https://root.cern,https://github.com/root-project/root/pull/15591,3,['Avoid'],['Avoid']
Safety,ion ; //--------------------------------------------------------------------------; // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN); // All rights reserved.; //; // For the licensing terms see $DD4hepINSTALL/LICENSE.; // For the list of contributors see $DD4hepINSTALL/doc/CREDITS.; //; //====================================================================; //; // Define the ROOT dictionaries for all data classes to be saved ; // which are created by the DDG4 examples.; //; // Author : M.Frank; //; //====================================================================. // Framework include files; #include <DDG4/DDG4Dict.h>; #include <DDG4/Geant4Config.h>; #include <DDG4/Geant4Primary.h>; #include <DDG4/Geant4Random.h>; #include <DDG4/Geant4DataDump.h>; #include <DDG4/Geant4InputAction.h>; #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit; namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit; namespace sim {. #define ACTIONHANDLE(x) \; struct x##Handle { \; Geant4##x* action; \; explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \; x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \; ~x##Handle() { if ( action) action->release(); } \; Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \; operator dd4hep::sim::Geant4##x* () const { return action; } \; Geant4##x* operator->() const { return action; } \; Geant4##x* get() const { return action; } \; }. ACTIONHANDLE(Filter);; ACTIONHANDLE(Action);; ACTIONHANDLE(PhaseAction);; ACTIONHANDLE(RunAction);; ACTIONHANDLE(EventAction);; ACTIONHANDLE(GeneratorAction);; ACTIONHANDLE(PhysicsList);; ACTIONHANDLE(TrackingAction);; ACTIONHANDLE(SteppingAction);; ACTIONHANDLE(StackingAction);; ACTIONHANDLE(DetectorConstruction);; ACTIONHANDLE(Sensitive);; ACTIONHANDLE(ParticleHandler);; ACTIONHANDLE(UserInitialization);. A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:3016,detect,detector,3016,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,3,['detect'],['detector']
Safety,"ion(GeneratorActionHandle f) { return f.action; }; static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }; static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }; static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }; static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }; static PropertyResult getProperty(Geant4Action* action, const std::string& name) {; if ( action->hasProperty(name) ) {; return PropertyResult(action->property(name).str(),1);; }; return PropertyResult("""",0);; }; static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {; if ( action->hasProperty(name) ) {; action->property(name).str(value);; return 1;; }; return 0;; }; static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {; if ( kernel->hasProperty(name) ) {; return PropertyResult(kernel->property(name).str(),1);; }; return PropertyResult("""",0);; }; static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {; if ( kernel->hasProperty(name) ) {; kernel->property(name).str(value);; return 1;; }; return 0;; }; };. /// Container definitions for Geant4Vertex; typedef std::vector<Geant4Vertex*> Geant4VertexVector;; typedef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:11022,Detect,DetectorConstructionSequenceHandle,11022,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,3,['Detect'],['DetectorConstructionSequenceHandle']
Safety,"ion, const std::string& name, const std::string& value) {; if ( action->hasProperty(name) ) {; action->property(name).str(value);; return 1;; }; return 0;; }; static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {; if ( kernel->hasProperty(name) ) {; return PropertyResult(kernel->property(name).str(),1);; }; return PropertyResult("""",0);; }; static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {; if ( kernel->hasProperty(name) ) {; kernel->property(name).str(value);; return 1;; }; return 0;; }; };. /// Container definitions for Geant4Vertex; typedef std::vector<Geant4Vertex*> Geant4VertexVector;; typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle; typedef std::vector<Geant4Particle*> Geant4ParticleVector;; typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;; }; }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>; #include <DDG4/Geant4UIManager.h>. // CINT configuration; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries; #pragma link C++ class dd4hep::sim::VertexExtension+;; #pragma link C++ class dd4hep::sim::Geant4Vertex+;; #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;; #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;; #pragma link C++ class dd4hep::sim::PrimaryExtension+;; #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;; #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;; #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;; #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;; #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:12338,Detect,DetectorInterna,12338,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,3,['Detect'],['DetectorInterna']
Safety,"ion; TString operator+(const char *cs, const TString &s);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:117:15: note: candidate function; TEveException operator+(const TEveException &s1, const TString &s2);; ^; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```. When running with gdb, I get:. ```; (gdb) run; Starting program: /home/user/builds/build-root_src-Desktop-Debug/bin/root.exe -b /tmp/test.cpp+; warning: File ""/home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py; line to your configuration file ""/home/user/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:2765,safe,safe-path,2765,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['safe'],['safe-path']
Safety,"ionEb+0x18c)[0x55e9490e2204]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling13MetaProcessor7processEN4llvm9StringRefERNS_11Interpreter17CompilationResultEPNS_5ValueEb+0x2e8)[0x55e9491af26c]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling13UserInterface16runInteractivelyEb+0x350)[0x55e9492e7de2]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(main+0x662)[0x55e948db547f]; /usr/lib/libc.so.6(+0x29290)[0x7f2646229290]; /usr/lib/libc.so.6(__libc_start_main+0x8a)[0x7f264622934a]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_start+0x25)[0x55e948db4c55]; PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0.	Program arguments: ""./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling"" -std=c++17; 1.	/usr/lib/gcc/x86_64-pc-linux-gnu/12.1.0/../../../../include/c++/12.1.0/bits/fs_dir.h:43:1: parsing namespace 'std'; Aborted (core dumped); ```. I did have some failing tests, so perhaps they culminate into this issue. ```; Failed Tests (14):; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTables.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: CodeUnloading/RunAgainstClangTestSuite/RunAgainstClangTestSuite.C; Cling :: DynamicLibraryManager/cached_realpath.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_abs.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; Cling :: ErrorRecovery/Lamda.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; Cling :: Pragmas/opt.C; Cling :: Prompt/MetaProcessor/DotO.C; Cling :: Prompt/ValuePrinter/Collections.C. Testing Time: 158.54s; Unsupported : 14; Passed : 144; Expectedly Failed: 13; Failed : 14; make[3]: *** [tools/cling/test/CMakeFiles/check-cling.dir/build.make:71: tools/cling/test/CMakeFiles/check-cling] Error 1; make[2]: *** [CMakeFiles/Makefi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192175843:11083,Abort,Aborted,11083,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192175843,1,['Abort'],['Aborted']
Safety,"is PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```; Usage:; ttree2rntuple (--ttree|-t) name; (--infile|-i) path; (--outfile|-o) path; [(--rntuple|-r) name]; [(--compression|-c) compression]; [--unzipped-page-size size]; [--zipped-cluster-size size]; [--max-unzipped-cluster-size size]; [--convert-dots]; [(--verbose|-v)]; ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:; --ttree, -t name; The name of the source TTree to convert to RNTuple.; --infile, -i path; The path to the ROOT file that contains the source TTree.; --outfile, -o path; The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet.; This may be the same file as the input file. Note that in this case the name of the target RNTuple should; be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:; --rntuple, -r name; The name of the target RNTuple.; This argument is optional. When not provided, the name of the source TTree will be used.; --compression, -c compression; The compression settings of the target RNTuple, provided as an integer.; This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),; where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} ; and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression).; If not specified, the default zstd (505) compression is used.; --unzipped-page-size size; The desired approximate unzipped (in-memory) page size in bytes, provided as an integer.; If not specified, the default size of 64 * 1024 bytes is used.; --zipped-cluster-size size; The desired approximate zipped cluster size in bytes, provided as an integer.; If not specified, the default",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14038:1062,avoid,avoid,1062,https://root.cern,https://github.com/root-project/root/pull/14038,1,['avoid'],['avoid']
Safety,"is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:680; 17: 'is_seg' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 19: 'is_tube' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 20: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 21: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:690; 22: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoPcon.cxx:691; /opt/root_src/geom/geom/src/TGeoPcon.cxx:857:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:857; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174:7: warning: Value stored to 'iplane' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'iplane' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175:7: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200:7: warning: Value stored to 'dz' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dz' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:52194,safe,safe,52194,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type.; With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3829#issuecomment-493469099:88,unsafe,unsafe,88,https://root.cern,https://github.com/root-project/root/pull/3829#issuecomment-493469099,2,"['safe', 'unsafe']","['safety', 'unsafe']"
Safety,it gets in this condition:. https://github.com/AIDASoft/DD4hep/blob/9bbe12b080ce52615251facc6f6ff5dd58a60e69/DDCore/src/DetectorImp.cpp#L205-L208. which changes the value to ; https://github.com/AIDASoft/DD4hep/blob/9bbe12b080ce52615251facc6f6ff5dd58a60e69/DDCore/src/DetectorImp.cpp#L207. DD4HEP_USE_GEANT4_UNITS if DD4Hep is built with DD4HEP_USE_GEANT4_UNITS. should we build DD4Hep with DD4HEP_USE_GEANT4_UNITS=OFF then ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8955#issuecomment-914123141:120,Detect,DetectorImp,120,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-914123141,2,['Detect'],['DetectorImp']
Safety,"ition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case woul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:3377,detect,detector,3377,https://root.cern,https://github.com/root-project/root/pull/11049,1,['detect'],['detector']
Safety,ixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ . And 24 more. ### Warnings:; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ . And 4 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1932#issuecomment-384663627:1760,detect,detected,1760,https://root.cern,https://github.com/root-project/root/pull/1932#issuecomment-384663627,8,['detect'],['detected']
Safety,"ject/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and N",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160:1874,safe,safe,1874,https://root.cern,https://github.com/root-project/root/pull/15160,1,['safe'],['safe']
Safety,"jenkins/workspace/lc; g_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg;-Dbuiltin_nlohmannjson=OFF;-Droofit_multiprocess=OFF;-GUnix Makefiles;/build/jenkins/workspace/lcg_nightly_pipe; line/build/projects/ROOT-HEAD/src/ROOT/HEAD""); ```; And this is the corresponding log:; ```; -- The C compiler identification is GNU 9.2.0; -- The CXX compiler identification is GNU 9.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""1.8.3.1""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6"") found components: Interpreter Develop; ment NumPy Development.Module Development.Embed; -- Looking for a Fortran compiler; -- Looking for a Fortran compiler - /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran; -- The Fortran compiler identification is GNU 9.2.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran - skipped; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90 - yes; -- Found GCC. Maj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:2461,Detect,Detected,2461,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['Detect'],['Detected']
Safety,"k: 3 Time/ms: 150; Chunk: 4 Time/ms: 200; Chunk: 5 Time/ms: 250; Chunk: 6 Time/ms: 301; Chunk: 7 Time/ms: 352; Chunk: 8 Time/ms: 402; Chunk: 9 Time/ms: 453; ```; (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms.; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 107; Chunk: 2 Time/ms: 167; Chunk: 3 Time/ms: 226; Chunk: 4 Time/ms: 287; Chunk: 5 Time/ms: 347; Chunk: 6 Time/ms: 409; Chunk: 7 Time/ms: 470; Chunk: 8 Time/ms: 531; Chunk: 9 Time/ms: 592; ```; (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:2479,timeout,timeout,2479,https://root.cern,https://github.com/root-project/root/issues/8582,1,['timeout'],['timeout']
Safety,"ked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; and finally, one with the code moved to the place you suggested (using `expandedUrl`):; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffccf746158 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 25; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch/"", 25) = 25; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 12; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; It is a bit puzzling (doesn't always happen), but as you can see, in the case using `expandedUrl`, sometimes the URL returned is only the base management URL, and the file may be opened via FUSE. This doesn't always happen, but I thought I'd be on the safe side and avoid potential problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:4678,safe,safe,4678,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,2,"['avoid', 'safe']","['avoid', 'safe']"
Safety,"l but I get; >>>> ; >>>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>>> * Trying 206.12.9.197:2880...; >>>> * TCP_NODELAY set; >>>> * Trying 2607:f8f0:660:3::36:2880...; >>>> * TCP_NODELAY set; >>>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>>> Is that expected?; >>>> ; >> ; >>> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>> * Trying 2607:f8f0:660:3::36...; >>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>> CApath: none; >>> * Server certificate:; >>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:2329,safe,safelinks,2329,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['safe'],['safelinks']
Safety,"l>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-31",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1537,safe,safe-path,1537,https://root.cern,https://github.com/root-project/root/pull/11882,1,['safe'],['safe-path']
Safety,lang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:577; /opt/root_src/geom/geom/src/TGeoTorus.cxx:646:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:646; /opt/root_src/geom/geom/src/TGeoTorus.cxx:661:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:661; /opt/root_src/geom/geom/src/TGeoTorus.cxx:697:7: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:697; /opt/root_src/geom/geom/src/TGeoTorus.cxx:741:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:741; /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:317:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:317; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:456:31: warning: Called C++ object pointer is null [clang-analyzer-cor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:66313,safe,safe,66313,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"lapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior; There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:; ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce; ```console; auto* geo = TGeoManager::Import(""overlap_issue.gdml""); geo->CheckOverlaps(); geo->PrintOverlaps(); auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); TGeoChecker ch(geo); overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); overlap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placem",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:1296,detect,detectors,1296,https://root.cern,https://github.com/root-project/root/issues/11784,1,['detect'],['detectors']
Safety,"lar expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/string_view:88:41: note: previous initialization is here; static constexpr size_type npos = size_type(-1);; ^; terminate called after throwing an instance of 'std::runtime_error'; what(): ; An error occurred while jitting in Snapshot. The lines above might indicate the cause of the crash. CMake Error at /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/RootTestDriver.cmake:238 (message):; error code: Child aborted. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:2432,abort,aborted,2432,https://root.cern,https://github.com/root-project/root/pull/4437,1,['abort'],['aborted']
Safety,"lbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131193/console).; ### Warnings:; - [2021-11-30T07:25:41.000Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:25:41.000Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:10.411Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:10.411Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:1076,detect,detected,1076,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['detect'],['detected']
Safety,lbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/133990/console).; ### Warnings:; - [2022-01-13T12:28:46.446Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2022-01-13T12:28:46.446Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2022-01-13T12:36:24.625Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2022-01-13T12:36:24.625Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=] ; - [2022-01-13T12:36:30.262Z] /data/sftnight/workspace/root-pullrequests-build/build/include/RooAddPdf.h:43:20: warning: 'clone' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2022-01-13T12:36:30.262Z] /data/sftnight/workspace/root-pullrequests-build/build/include/RooAddPdf.h:46:18: warning: 'checkObservables' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2022-01-13T12:36:30.262Z] /data/sftnight/workspace/root-pullrequests-build/build/include/RooAddPdf.h:48:18: warning: 'forceAnalyticalInt' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2022-01-13T12:36:30.262Z] /data/sftnight/workspace/root-pullrequests-build/build/include/RooAddPdf.h:52:9: warning: 'getAnalyticalIntegralWN' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2022-01-13T12:36:30.262Z] /data/sftnight,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9560#issuecomment-1012109052:1076,detect,detected,1076,https://root.cern,https://github.com/root-project/root/pull/9560#issuecomment-1012109052,1,['detect'],['detected']
Safety,"lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460976298%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=YgqiD9GIPDhABbE6mxc9%2BtWy8Q8red4Pa6zme6lmNgs%3D&reserved=0> ; >>>>>>> * Trying 206.12.9.197:2880... * TCP_NODELAY set * Trying ; >>>>>>> 2607:f8f0:660:3::36:2880... * TCP_NODELAY set * Immediate ; >>>>>>> connect fail for 2607:f8f0:660:3::36: Network is unreachable |; >>>>>>>; >>>>>>> Is that expected?; >>>>>>>; >>>>>; >>>>>> ***@***.*** t5]$ curl -v ; >>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>> CApath: none; >>>>>> * Server certificate:; >>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>> <ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:3372,safe,safelinks,3372,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['safe'],['safelinks']
Safety,"ld/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:509:21: error: static_assert expression is not an integral constant expression ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:37: error: no matching function for call to 'GetNthElement' ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:119:75: error: cannot pass object of non-trivial type 'ROOT::VecOps::RVec&lt;int&gt;' through variadic method; call will abort at runtime [-Wnon-pod-varargs] ; - [2022-08-05T23:31:09.494Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:529:7: error: static_assert failed due to requirement 'sizeof(TH1D) &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-08-05T23:31:09.494Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:29: error: constexpr variable 'colidx' must be initialized by a constant expression ; - [2022-08-05T23:31:09.495Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:509:21: error: static_assert expression is not an integral constant expression ; - [2022-08-05T23:31:09.495Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:37: error: no matching function for call to 'GetNthElement' ; - [2022-08-05T23:31:09.495Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:119:75: error: cannot pass object of non-trivial type 'ROOT::VecOps::RVec&lt;int&gt;' through variadic method; call will abort at runtime [-Wnon-pod-varargs] . And 25 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207087616:2583,abort,abort,2583,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207087616,1,['abort'],['abort']
Safety,le '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 00; 1148: 0x0fefe1c23d70: 03 f9 f9 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9; 1148: 0x0fefe1c23d80: 00 00 00 00 00 04 f9 f9 f9 f9 f9 f9 03 f9 f9 f9; 1148: 0x0fefe1c23d90: 02 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00; 1148: Shadow byte legend (one shadow byte represents 8 application bytes):; 1148: Addressable: 00; 1148: Partially addressable: 01 02 03 04 05 06 07; 1148: Heap left redzone: fa; 1148: Freed heap region: fd; 1148: Stack left redzone: f1; 1148: Stack mid redzone: f2; 1148: Stack right redzone: f3; 1148: Stack after return: f5; 1148: Stack use after scope: f8; 1148: Global redzone: f9; 1148: Global init order: f6; 1148: Poisoned by user: f7; 1148: Container overflow: fc; 1148: Array cookie: ac; 1148: Intra object redzone: bb; 1148: ASan internal: fe; 1148: Left alloca redzone: ca; 1148: Right alloca redzone: cb; 1148: ==4075620==ABORTING; ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629:17961,ABORT,ABORTING,17961,https://root.cern,https://github.com/root-project/root/issues/11629,1,['ABORT'],['ABORTING']
Safety,"le C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 890: error code: -529697949; 890:; 890:; 13/16 Test #890: tutorial-dataframe-df019_Cache-py ........................***Failed Error regular expression found in output. Regex=[Error in] 4.65 sec; test 891; Start 891: tutorial-dataframe-df021_createTGraph-py. 891: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df021_createTGraph.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 891: Environment variables:; 891: ROOT_HIST=0; 891: Test timeout computed to be: 1500; 891: input_line_39:2:28: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: input_line_39:2:30: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 891: error code: -529697949; 891:; 891:; 14/16 Test #891: tutorial-dataframe-df021_createTGraph-py .................***Failed Error regular expression found in output. Regex=[: error:] 4.85 sec; test 892; Start 892: tutorial-dataframe-df024_Display-py. 892: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:13919,timeout,timeout,13919,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,"le features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1482,detect,detection,1482,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['detect'],['detection']
Safety,le output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/console).; ### Warnings:; - [2021-06-28T12:57:59.922Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:37.332Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:41.023Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.877Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:45.528Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:59:31.741Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:12.046Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:22.838Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] . And 3 more. ### Failing tests:; - [projectroot.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555#issuecomment-869689634:1096,redund,redundant,1096,https://root.cern,https://github.com/root-project/root/pull/8555#issuecomment-869689634,1,['redund'],['redundant']
Safety,"le::Open fixes this behaviour. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context; Stacktrace; ```; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50; #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79; #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181; #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341; #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306; #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362; #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998; #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542; #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792; #9 0x00007ffff6841802 in TTree::Fill (this=0x7ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6527:1298,abort,abort,1298,https://root.cern,https://github.com/root-project/root/issues/6527,1,['abort'],['abort']
Safety,"le=OFF;-Dgfal=OFF;-DCMAKE_CXX_STANDARD=17;-Ddcache=ON;-Dgfal=ON;-DGFAL_DIR=/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-cento; s7-gcc9-dbg;-DSRM_IFCE_DIR=/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/srm-ifce/1.13.0-0/x86_64-centos7-gcc9-dbg;-Doracle=ON;-DORACLE_HOME=/build/jenkins/workspace/lc; g_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg;-Dbuiltin_nlohmannjson=OFF;-Droofit_multiprocess=OFF;-GUnix Makefiles;/build/jenkins/workspace/lcg_nightly_pipe; line/build/projects/ROOT-HEAD/src/ROOT/HEAD""); ```; And this is the corresponding log:; ```; -- The C compiler identification is GNU 9.2.0; -- The CXX compiler identification is GNU 9.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""1.8.3.1""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6"") found components: Interpreter Develop; ment NumPy Development.Module Development.Embed; -- Looking for a Fortran compiler; -- Looking for a Fortran compiler - /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran; -- The Fortran compiler identification is GNU 9.2.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /cvmfs/sft.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:2061,Detect,Detecting,2061,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,4,['Detect'],['Detecting']
Safety,le>) [clazy-range-loop]; 1: const in /opt/root_src/geom/gdml/src/TGDMLParse.cxx:819; 2: & in /opt/root_src/geom/gdml/src/TGDMLParse.cxx:819; /opt/root_src/geom/geom/src/TGeoArb8.cxx:594:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:594; /opt/root_src/geom/geom/src/TGeoArb8.cxx:918:13: warning: Value stored to 'ddmin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ddmin' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:918; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549:4: warning: Value stored to 'snxt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-co,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:1156,safe,safe,1156,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"lease#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py. 886: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 887: Environment variables:; 887: ROOT_HIST=0; 887: Test timeout computed to be: 1500; [TFile::Cp] Total 14.46 MB |====================| 100.00 % [57.6 MB/s]; 887: Traceback (most recent call last):; 887: File ""C:/Users/sftnight/git/master/tutorials/launcher.py"", line 33, in <module>; 8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:7708,timeout,timeout,7708,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['timeout'],['timeout']
Safety,"ling::Transaction::forceAppend(DelayCallInfo): Assertion `oldDCI != DCI && ""Duplicates?!""' failed.; > #0 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb34b; > #1 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17f8eac ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fabfe; > #2 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x18491a8 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x1848ed8; > #3 0x000055e9492a6288 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb288); > #4 0x000055e9492a634b (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb34b); > #5 0x000055e9492a3eac gsignal (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17f8eac); > #6 0x000055e9492a5bfe abort (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fabfe); > #7 0x000055e9492f41a8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x18491a8); > #8 0x000055e9492f3ed8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x1848ed8); > #9 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x16d76bb ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x16d7568; > #10 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x14eef2e ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x39845bf; > #11 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x4cf5f84 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x4cf690d; > #12 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192249515:1703,abort,abort,1703,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192249515,1,['abort'],['abort']
Safety,"lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Could NOT find Python module pygments; -- Could NOT find Python module pygments.lexers.c_cpp; -- Could NOT find Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3.8 (found suitable version ""3.8.17"", minimum required is ""3.0"") found components: Interpreter; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:9494,detect,detection,9494,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['detect'],['detection']
Safety,llrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:44:11: error: ‘LikelihoodGradientMode’ has not been declared . And 2038 more. ### Warnings:; - [2023-01-06T12:13:58.100Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:3:32: warning: declaration of ‘G__RooFitCoreInit290’ shadows a global declaration [-Wshadow] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:46: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:15: warning: invalid use of incomplete type ‘class RooMinimizer’ ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19971:49: warning: possible problem detected in invocation of delete [] operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19971:18: warning: invalid use of incomplete type ‘class RooMinimizer’ ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:20260:47: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:20260:15: warning: invalid use of incomplete type ‘class RooNumConvPdf’ ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:20263:50: warning: possible problem detected in invocation of delete [] operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:3363,detect,detected,3363,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['detect'],['detected']
Safety,"loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: ; ```cpp; //subroutine.C. // my_subroutines.C; void my_subroutine(unique_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here; vector<unique_ptr<TH1>> retvec(3); // and here, as intended.; for (int i=0; i<3; i++) {; my_subroutine(retvec[i]);; }; return retvec;; }; ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:6736,safe,safer,6736,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['safe'],['safer']
Safety,"loper/CommandLineTools/SDKs/ ; total 0; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk; [...]; ```. Here is the result of the cmake command.; ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; -- The C compiler identification is AppleClang 16.0.0.16000022; -- The CXX compiler identification is AppleClang 16.0.0.16000022; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building ROOT version 6.32.04; -- Checking internet connectivity; -- Checking internet connectivity - found; -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard.; -- Performing Test HAS_LIBCXX11; -- Performing Test HAS_LIBCXX11 - Success; -- Found a macOS system 15.0; -- Found an AArch64 system; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled.; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for Python; -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Looking for OpenGL; -- Looking for LibXml2; -- Looking for SQLite; -- Looking for XROOTD; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.7; -- Looking",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:1423,detect,detected,1423,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,1,['detect'],['detected']
Safety,"lp, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 1453]; [Detaching after vfork from child process 1455]; [Detaching after vfork from child process 1457]; [Detaching after vfork from child process 1459]; [Detaching after vfork from child process 1461]; [Detaching after vfork from child process 1465]; [Detaching after vfork from child process 1467]; [New Thread 0x7fb1af5b6640 (LWP 1469)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007fb1cb2a1201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7fb1c5732850; (gdb) continue; Continuing.; instantiating template; [Thread 0x7fb1af5b6640 (LWP 1469) exited]. Thread 1 ""python"" hit Breakpoint 1, 0x00007fb1c5732850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:2086,safe,safe,2086,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['safe'],['safe']
Safety,"lp, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 2333]; [Detaching after vfork from child process 2335]; [Detaching after vfork from child process 2337]; [Detaching after vfork from child process 2339]; [Detaching after vfork from child process 2341]; [Detaching after vfork from child process 2345]; [Detaching after vfork from child process 2347]; [New Thread 0x7f05f42cb640 (LWP 2349)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007f060ffb6201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7f060a447850; (gdb) continue; Continuing.; instantiating template. Thread 1 ""python"" hit Breakpoint 1, 0x00007f060a447850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gdb) bt; #0 0x00007f060a447850 in cling::Null",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:2062,safe,safe,2062,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['safe'],['safe']
Safety,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:2364,Avoid,Avoid,2364,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,8,"['Avoid', 'redund']","['Avoid', 'redundantly']"
Safety,ltercount=1&field1=buildname/string&compare1=65&value1=PR-5530-ROOT-fedora30-cxx14&date=2020-05-04).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/80231/console).; ### Warnings:; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:51:07.368Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return stat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623553898:1159,redund,redundant,1159,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623553898,1,['redund'],['redundant']
Safety,lude/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ . And 24 more. ### Warnings:; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1932#issuecomment-384663627:1499,detect,detected,1499,https://root.cern,https://github.com/root-project/root/pull/1932#issuecomment-384663627,2,['detect'],['detected']
Safety,"lude/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1281:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:19:56.872Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:19:56.872Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1524:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 10 more. ### Warnings:; - [2021-04-16T11:19:56.871Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-821106191:2486,avoid,avoid,2486,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-821106191,1,['avoid'],['avoid']
Safety,"lude/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:38:57.204Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:38:57.204Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:38:57.204Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:38:57.204Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1285:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:38:57.205Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:38:57.205Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:38:57.205Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:38:57.205Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1528:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 10 more. ### Warnings:; - [2021-05-04T11:38:57.204Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-831876091:2486,avoid,avoid,2486,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-831876091,1,['avoid'],['avoid']
Safety,"lvm13/src/core/meta/inc/TInterpreter.h:25,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.h:27,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:20:; > /home/jhahnfel/ROOT/llvm13/src/core/base/inc/TString.h:844:15: note: candidate: ‘Bool_t operator==(const string_view&, const char*)’; > inline Bool_t operator==(const std::string_view &s1, const char *s2); > ^~~~~~~~; > In file included from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/Basic/DiagnosticIDs.h:19,; > from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:17,; > from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/AST/NestedNameSpecifier.h:18,; > from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/AST/Type.h:21,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingDeclInfo.h:20,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingClassInfo.h:28,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingBaseClassInfo.h:29,; > from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:24:; > /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ADT/StringRef.h:919:15: note: candidate: ‘bool llvm::operator==(llvm::StringRef, llvm::StringRef)’; > inline bool operator==(StringRef LHS, StringRef RHS) {; > ^~~~~~~~; > ```. I do not understand why. Calling `.str()` is often too expensive but we may need to do it here. . > This happens with a C++17 build in general, C++14 is fine.; > ; > On the performance side, the current state seems to veery slow: `ctest -j12 -R dataframe .` used to take in the order of 2m30s, now I aborted it after 13 minutes. A lot of time seems to be spent in `sys`, are you aware of changes that could explain this?. Can you paste the stack trace? I fear that the DynamicLibraryManagerSymbol.cpp stopped inlining functions due to some recent calls of ::StringRef::str()...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1088544588:2516,abort,aborted,2516,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1088544588,1,['abort'],['aborted']
Safety,"ly, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from https://root.cern/reference/ with the pull request update test; - [ ] https://github.com/root-project/jenkins-pipelines/issues/10 jenkins parsing log fine-tune. ### Additional context; See https://root.cern/for_developers/doxygen/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:1942,avoid,avoid,1942,https://root.cern,https://github.com/root-project/root/issues/9953,1,['avoid'],['avoid']
Safety,"mIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:2986,Avoid,Avoid,2986,https://root.cern,https://github.com/root-project/root/pull/13295,2,"['Avoid', 'safe']","['Avoid', 'safe']"
Safety,"mbly Printer; 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer; 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler; 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots; 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5; 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:; ```; 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:; ```; 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:2156,redund,redundant,2156,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,"me/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:1884,timeout,timeout,1884,https://root.cern,https://github.com/root-project/root/issues/6597,1,['timeout'],['timeout']
Safety,"me_type, bool shared); { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }; static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) ; { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }; static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type); { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }; static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }; static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }; static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }; static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }; static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }; ; static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }; ; static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type); { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }; ; static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type); {	return UserInitializationHandle(Setup::Initialization(*kernel.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:6761,Detect,DetectorConstructionHandle,6761,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,9,['Detect'],"['DetectorConstruction', 'DetectorConstructionHandle']"
Safety,ml/src/TGDMLParse.cxx:819; /opt/root_src/geom/geom/src/TGeoArb8.cxx:594:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:594; /opt/root_src/geom/geom/src/TGeoArb8.cxx:918:13: warning: Value stored to 'ddmin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ddmin' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:918; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549:4: warning: Value stored to 'snxt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 1:' at line 298 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:297; 2: E,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:1260,safe,safe,1260,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,n /opt/root_src/geom/geom/src/TGeoTube.cxx:1841; 8: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1842; 9: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1843; /opt/root_src/geom/geom/src/TGeoTube.cxx:1857:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:74668,safe,safe,74668,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"n Mac (11 or 12) on ARM. Here is an example stacktrace (up until the calls to cling). ```; -- TEST COMMAND -- ; cd /Users/sftnight/build/workspace/roottest-pullrequests-build/build/roottest/python/distrdf/dask; /usr/bin/python3 /Users/sftnight/build/workspace/roottest-pullrequests-build/roottest/python/distrdf/dask/test_backend.py --fixcling; -- BEGIN TEST OUTPUT --; Assertion failed: (isInt<33>(Addend) && ""Invalid page reloc value.""), function encodeAddend, file /Users/sftnight/build/workspace/roottest-pullrequests-build/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/Targets/RuntimeDyldMachOAArch64.h, line 210.; *** Break *** abort; [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCore.6.27.01.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/usr/lib/system/libsystem_pthread.dylib] pthread_kill (no debug info); [/usr/lib/system/libsystem_c.dylib] abort (no debug info); [/usr/lib/system/libsystem_c.dylib] err (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::RuntimeDyldMachOAArch64::encodeAddend(unsigned char*, unsigned int, llvm::MachO::RelocationInfoType, long long) const (.cold.6) (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::RuntimeDyldMachOAArch64::encodeAddend(unsigned char*, unsigned int, llvm::MachO::RelocationInfoType, long long) const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::RuntimeDyldImpl::resolveLocalRelocations() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::RuntimeDyldImpl::resolveRelocations() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (no debug ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10061:1062,abort,abort,1062,https://root.cern,https://github.com/root-project/root/issues/10061,1,['abort'],['abort']
Safety,"n RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:8304,Avoid,Avoid,8304,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,4,"['Avoid', 'safe']","['Avoid', 'safe']"
Safety,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:1614,recover,recover,1614,https://root.cern,https://github.com/root-project/root/issues/8444,1,['recover'],['recover']
Safety,"n the 2nd run). The issue here (well there https://github.com/root-project/root/issues/10743) does not seems to be the 2nd running of EndOfProcessCleanups but rather that there is a bad interaction between the 'early' running of the cleanups and that something in RDataFrame is not properly informed that something is delete early. The early cleanups is necessary because of the following issue. * The python code (directly or indirectly) can load libraries (Ls); * The python code (directly or indirectly) can open TFile (Fs) and can elect to never delete them; * The python code (directly or indirectly) can attach objects based on the Libraries on to the TFile. Then the order of execution at tear down will be. (1) tear down python; (2) unload the loaded libraries (Ls); (3) execute the atexit registered by TROOT, ; (4) this includes EndOfProcessCleanups; (5) this includes flushing and closing the TFiles. During (5) the object attached the TFile (usually just histogram and `TTree` but can also be object from the user libraries. However if the libraries for the user objects are already unloaded, their code (including a Streamer function or even their dictionary) are gone and this result in crash at best or worse in data loss. In order to prevent that we introduced (in https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a and friends), running the `EndOfProcessCleanups` of cleanups as soon as possible (i.e. as soon as we can detect the process is starting to tear down). (i.e. make it part of (1)). More likely that not this means than rather than removing early this call to `EndOfProcessCleanups`, the solution is to inform `RDataFrame` of those early deletion (depending whether the things that are deleted that are annoying `RDataFrame`, they may or may not be having the trouble described above, so another solution might be to insure that the things that bother `RDataFrame` are not included in the list of things deleted by `EndOfProcessCleanups`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155610874:1596,detect,detect,1596,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155610874,1,['detect'],['detect']
Safety,"n version of `setuptools` (specifically [`setuptools` v0.60.0+](https://pypi.org/project/setuptools/60.0.0/)) there will be build warnings from `setuptools` and an atypical install path given a dependence on the now deprecated `easy-install.pth`. (c.f. https://github.com/xrootd/xrootd/issues/1579 for lots more details.). At the moment, this does not affect ROOT at all as ROOT's builtin XRootD explicitly disables the Python bindings. https://github.com/root-project/root/blob/a940bdbc40d9a0cdac8975c287e1cb7ada0d0c65/builtins/xrootd/CMakeLists.txt#L43. given 2c23502137acd9276fc21da300ab3d562278d57f (from @peremato in 2015). I am unclear on the specifics of explicitly disabling the Python bindings from being built as there is no associated PR for the commit. If there is not a modern reason for this to stay disabled (my assumption is that there is and I am missing it), updating to XRootD `v5.4.1` would allow for the Python bindings to be optionally enabled and to be build safely with the improvements to the Python bindings build process (and also bring along new features and bug fixes). If there are reasons to keep XRootD below `v5.4.X` then this Issue can get closed. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Make a PR similar to PR #7335 that would update the builtin to XRootD [`v5.4.1`](https://github.com/xrootd/xrootd/releases/tag/v5.4.1). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. There isn't a bug explicitly here, but for a discussion on the Python 3 binding and modern `setuptools` issue that was resolved in XRootD `v5.4.1` see the links in additional context. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:1555,safe,safely,1555,https://root.cern,https://github.com/root-project/root/issues/9967,1,['safe'],['safely']
Safety,"n't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_type. This cleans up some code duplication in LikelihoodSerial and LikelihoodJob, which previously used the type only in their ctors, and avoids dynamic_casts later, e.g. on when calculating offsets.; * A RooSubsidiaryL can now also be computed with LikelihoodSerial and LikelihoodJob; this case was still missing in their evaluation functions.; * The LikelihoodSerial, LikelihoodJob and LikelihoodGradientJob ""ConstrainedAndOffset"" test cases used the wrong argument for the constrained parameter. These are now corrected from alpha_bkg_obs_A to become alpha_bkg_A.; * In LikelihoodJobTest, the added test case ""UnbinnedGaussian1DSelectedParameterValues"" shows where splitting over events can lead to bit-wise differences. This test will be useful in the future if further precision enhancements are made. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:3890,avoid,avoids,3890,https://root.cern,https://github.com/root-project/root/pull/12202,1,['avoid'],['avoids']
Safety,"nHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }; ; static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }; ; static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type); { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }; ; static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type); {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}; ; static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared); {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }; ; static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type); {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }; ; static Geant4Action* toAction(Geant4Filter* f) { return f; }; static Geant4Action* toAction(Geant4Action* f) { return f; }; static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }; static Geant4Action* toAction(Geant4Sensitive* f) { return f; }; static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }; static Geant4Action* toAction(Geant4RunAction* f) { return f; }; static Geant4Action* toAction(Geant4EventAction* f) { return f; }; static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }; static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }; static Geant4Action* toAction(Geant4StackingAction* f) { return f; }; static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }; static Geant4Action* toAction(Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:7375,detect,detector,7375,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,2,['detect'],['detector']
Safety,"nHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }; ; static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }; ; static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type); { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }; ; static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type); {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}; ; static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared); {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }; ; static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type); {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }; ; static Geant4Action* toAction(Geant4Filter* f) { return f; }; static Geant4Action* toAction(Geant4Action* f) { return f; }; static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }; static Geant4Action* toAction(Geant4Sensitive* f) { return f; }; static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }; static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }; static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }; static Geant4Action* toAction(SensitiveHandle f) { return f.action; }; static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }; static Geant4Action* toAction(RunActionHandle f) { return f.action; }; static Geant4Action* toAction(EventActionHandle f) { return f.action; }; static Geant",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:26180,detect,detector,26180,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['detect'],['detector']
Safety,"nResult&, cling::Value*) (MetaParser.cpp:315); ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119); ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96); ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317); ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437); ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581); ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511); ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591); ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463); ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436); ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783); ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434); ==92602== by 0x100011EB: main (rmain.cxx:83); client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90; valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution.; It contains workarounds to several common problems.; In particular, if Valgrind aborted or crashed after; identifying problems in your program, there's a good chance; that fixing those problems will prevent Valgrind aborting or; crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind; version, and what OS and version you are using. Thanks.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:42693,abort,aborted,42693,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,2,['abort'],"['aborted', 'aborting']"
Safety,"n_codeset in libpython3.10.a(_localemodule.o); ""_libintl_bindtextdomain"", referenced from:; __locale_bindtextdomain in libpython3.10.a(_localemodule.o); ""_libintl_dcgettext"", referenced from:; __locale_dcgettext in libpython3.10.a(_localemodule.o); ""_libintl_dgettext"", referenced from:; __locale_dgettext in libpython3.10.a(_localemodule.o); ""_libintl_gettext"", referenced from:; __locale_gettext in libpython3.10.a(_localemodule.o); ""_libintl_setlocale"", referenced from:; __locale_setlocale in libpython3.10.a(_localemodule.o); __locale_localeconv in libpython3.10.a(_localemodule.o); ""_libintl_textdomain"", referenced from:; __locale_textdomain in libpython3.10.a(_localemodule.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libPyMVA.so] Error 1; make[1]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make: *** [all] Error 2; ```. ### Reproducer. `cmake --build mybuild --target install -j4 -v`. ### ROOT version. master branch from 12.02.2024:. ```; root -b -q ; ------------------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 13 2024, 09:47:07 |; | From heads/ianna/call_to_implicitly-deleted_copy_constructor_fix@5d76922a0f |; | With Apple clang version 13.0.0 (clang-1300.0.29.30) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------------------. ```. ### Installation method. fixation step-by-step instructions. ### Operating system. MacOS 11.6. ### Additional context. Python's build is detecting `libintl` but not using necessary linker flags when compiling. For example, fix for my local build is to add `-L/usr/local/lib -lintl`. ```; Python 3.10.1 (main, Jan 10 2022, 12:04:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14672:2013,detect,detecting,2013,https://root.cern,https://github.com/root-project/root/issues/14672,1,['detect'],['detecting']
Safety,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:8599,detect,detected,8599,https://root.cern,https://github.com/root-project/root/issues/11385,2,"['Abort', 'detect']","['Aborted', 'detected']"
Safety,"nclude <DDG4/Geant4InputAction.h>; #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit; namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit; namespace sim {. #define ACTIONHANDLE(x) \; struct x##Handle { \; Geant4##x* action; \; explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \; x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \; ~x##Handle() { if ( action) action->release(); } \; Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \; operator dd4hep::sim::Geant4##x* () const { return action; } \; Geant4##x* operator->() const { return action; } \; Geant4##x* get() const { return action; } \; }. ACTIONHANDLE(Filter);; ACTIONHANDLE(Action);; ACTIONHANDLE(PhaseAction);; ACTIONHANDLE(RunAction);; ACTIONHANDLE(EventAction);; ACTIONHANDLE(GeneratorAction);; ACTIONHANDLE(PhysicsList);; ACTIONHANDLE(TrackingAction);; ACTIONHANDLE(SteppingAction);; ACTIONHANDLE(StackingAction);; ACTIONHANDLE(DetectorConstruction);; ACTIONHANDLE(Sensitive);; ACTIONHANDLE(ParticleHandler);; ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);; ACTIONHANDLE(RunActionSequence);; ACTIONHANDLE(EventActionSequence);; ACTIONHANDLE(TrackingActionSequence);; ACTIONHANDLE(SteppingActionSequence);; ACTIONHANDLE(StackingActionSequence);; ACTIONHANDLE(DetectorConstructionSequence);; ACTIONHANDLE(PhysicsListActionSequence);; ACTIONHANDLE(SensDetActionSequence);; ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {; std::string data;; int status;; PropertyResult() : status(0) {}; PropertyResult(const std::string& d, int s) : data(d), status(s) {}; PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}; ~PropertyResult() {}; };. struct Geant4ActionCreation {; template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:3889,Detect,DetectorConstruction,3889,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,3,['Detect'],['DetectorConstruction']
Safety,"ndef COMMA; #endif // PREFIX. /////////; // Prefix Union. #ifdef PREFIX_UNION; #define COMMA ,; PREFIX_UNION({; llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}); #undef COMMA; #endif // PREFIX_UNION. /////////; // ValuesCode. #ifdef OPTTABLE_VALUES_CODE; #endif; /////////; // Groups. #ifdef OPTION. //////////; // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr); OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Do not recover from input errors"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print this help text"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Add directory to library search path"", ""<directory>"", nullptr); OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Load a library before prompt"", ""<library>"", nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Do not show startup-banner"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1933795392:1915,recover,recover,1915,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1933795392,1,['recover'],['recover']
Safety,"ne=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471; #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751; #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612; #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132; #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124; #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322; #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077; #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404; #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354; #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623; #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463; #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30; Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address..; Execution of your code was aborted.; ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:; strlen(cs); ^~; root [7] cs; (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779844279:4837,abort,aborted,4837,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779844279,1,['abort'],['aborted']
Safety,nevermind ... this was against work-in-progress code attempting to improve the detection of the underlying type of an enum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12953#issuecomment-1577645571:79,detect,detection,79,https://root.cern,https://github.com/root-project/root/issues/12953#issuecomment-1577645571,1,['detect'],['detection']
Safety,new branch to avoid warning about missing roottest PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760:14,avoid,avoid,14,https://root.cern,https://github.com/root-project/root/pull/3760,1,['avoid'],['avoid']
Safety,"nfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/green",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:1553,abort,abort,1553,https://root.cern,https://github.com/root-project/root/pull/5462,1,['abort'],['abort']
Safety,"ng GetSharedLibImmediateDepsSlow(std::string lib,; > // FIXME: It is unclear whether we can ignore all weak undefined; > // symbols:; > // http://lists.llvm.org/pipermail/llvm-dev/2017-October/118177.html; > - if (SymName == ""_Jv_RegisterClasses"" ||; > - SymName == ""_ITM_deregisterTMCloneTable"" ||; > - SymName == ""_ITM_registerTMCloneTable""); > + static constexpr llvm::StringRef RegisterClasses(""_Jv_RegisterClasses"");; > + static constexpr llvm::StringRef RegisterCloneTable(""_ITM_registerTMCloneTable"");; > + static constexpr llvm::StringRef DeregisterCloneTable(""_ITM_deregisterTMCloneTable"");; > + if (SymName == RegisterClasses ||; > + SymName == RegisterCloneTable ||; > + SymName == DeregisterCloneTable); > continue;; > }; > ```; > ; > Do you want me to submit this separately, outside this PR?. I think you should be able to submit as part of this PR. > ; > > > On the performance side, the current state seems to veery slow: `ctest -j12 -R dataframe .` used to take in the order of 2m30s, now I aborted it after 13 minutes. A lot of time seems to be spent in `sys`, are you aware of changes that could explain this?; > > ; > > ; > > Can you paste the stack trace? I fear that the DynamicLibraryManagerSymbol.cpp stopped inlining functions due to some recent calls of ::StringRef::str()...; > ; > `perf` says a number of kernel functions and indeed `cling::Dyld::ContainsSymbol` are the largest contenders. I don't understand why though, the annotations inside the functions make no sense to me (showing more than 50% on a ` mov %ebx,%r8d` without something obvious around it). yeah, this is a bit tricky, the profiler is useful if you built in debug mode. What usually works is removing the `DynamicLibraryManagerSymbol.cpp.o` and copying the build command, changing it to clang and adding [a variation of] `-Rpass=inline -Rpass-missed=.*` (https://godbolt.org/z/xGEsGhf97). Then you can compare old and the new version for missed optimization opportunities. My feeling is that I mechani",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1089931729:2377,abort,aborted,2377,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1089931729,1,['abort'],['aborted']
Safety,ng::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. TClass::GetClass: Header Parsing - The representation of TObjectEditor was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting TObjectEditor in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; TEnum::GetEnum: Header Parsing - The enumerator TObjectEditor is not known to the typesystem: an interpreter lookup will be performed. This can imply parsing of headers. This can be avoided selecting the numerator in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15963#issuecomment-2200648481:29634,avoid,avoided,29634,https://root.cern,https://github.com/root-project/root/issues/15963#issuecomment-2200648481,1,['avoid'],['avoided']
Safety,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:22260,ABORT,ABORTING,22260,https://root.cern,https://github.com/root-project/root/issues/12715,1,['ABORT'],['ABORTING']
Safety,nstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:61:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:62:32: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] . And 362 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-867532806:2382,avoid,avoid,2382,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-867532806,4,['avoid'],['avoid']
Safety,nterpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T08:08:03.343Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:06.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T08:08:06.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T08:08:09.694Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:20.537Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:20.537Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:20.537Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:20.537Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:20.537Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] . And 185 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699602087:1605,redund,redundant,1605,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699602087,3,['redund'],['redundant']
Safety,nterpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:10:00.219Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T10:10:05.030Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:10:05.030Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:10:08.344Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T10:10:17.991Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:17.991Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:17.991Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:18.818Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T10:10:19.767Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] . And 185 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699615010:2500,redund,redundant,2500,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699615010,3,['redund'],['redundant']
Safety,nterpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:30.018Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T08:08:40.231Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T08:08:40.231Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:46.643Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:55.641Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:57.622Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] . And 185 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699602154:1566,redund,redundant,1566,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699602154,2,['redund'],['redundant']
Safety,"o it existed, to the value set on its initialization. ```cpp; //We initialize the scheduler with 4 threads; ROOT::EnableIMT(4);; { ; //The scheduler is active, so the value passed to TThreadExecutor; //is overriden with the number of threads the scheduler has been; //initialized with (4); TThreadExecutor executor(9);; }; ROOT::DisableIMT();. //The scheduler is not alive at this point, ; //so we initialize it with 2 threads; ROOT::EnableIMT(2);; ROOT::TThreadExecutor executor(8);; ROOT::DisableIMT();. executor.MapReduce(...); //Runs on two threads!. ROOT::EnableIMT(3);; //Still two threads! TThreadExecutor instance was keeping the scheduler alive; ```; This also implies that given two co-existent instances of TThreadExecutor initialized with a different number of threads, the first one to be initialized forces on the second one the number of threads to work with. ```cpp; ROOT::TThreadExecutor executor(4);; ROOT::TThreadExecutor executor2(8); //will run limited to two threads!!; ```; This setup was useful [to avoid undefined behaviours between the implicit and explicit parallelism modes of ROOT](https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf). . # New behaviour; With this PR, we can separate this two modes of execution. We support the co-existance of several TThreadExecutors, each handling a different number of threads, by initializing the scheduler with the [default number of threads](tbb::task_scheduler_init::default_num_threads) and using a ```tbb::task_arena``` per TThreadExecutor to work with a subset of them instead. ```cpp. //Each of the executor manages its own tbb::task_arena,; //which allows the co-existance of TThreadExecutors; //handling different number of threads.; TThreadExecutor executor1(8); //will run on 8 threads; TThreadExecutor executor2(4); //will run on 4 threads. //IMT keeps a different task Arena too!; ROOT::EnableIMT(4); //4 threads will be used in IMT operations; //executor3 will be initi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389:1924,avoid,avoid,1924,https://root.cern,https://github.com/root-project/root/pull/2389,1,['avoid'],['avoid']
Safety,"oPcon.cxx:681; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 19: 'is_tube' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 20: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 21: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:690; 22: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoPcon.cxx:691; /opt/root_src/geom/geom/src/TGeoPcon.cxx:857:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:857; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174:7: warning: Value stored to 'iplane' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'iplane' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175:7: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200:7: warning: Value stored to 'dz' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dz' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205; /opt/root_src/geom/geom/src/TGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:52298,safe,safe,52298,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"oRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. RooRealVar mean2(mean);. gauss.replaceServer(mean, mean2, true, false);; gauss.Print(""v"");. std::cout << ""x : "" << &gauss.getX() << std::endl;; std::cout << ""mean : "" << &gauss.getMean() << std::endl;; std::cout << ""sigma: "" << &gauss.getSigma() << std::endl;; ```. Here, the proxy for `mean` will still point to the original `mean`, but; the server was redirected to the copy `mean2`. This is dangerous, and; desyncing of the proxy and server list are actually the underlying; reason for a set of RooFit problems. The safter `RooAbsArg::redirectServers()` should always be used,; becauese that one is also updating the proxies. Therefore, the; `replaceServer()` interface is now marked as dangerous everywhere; possible: in a printout when you use it, in the docs, and with the; `R__SUGGEST_ALTERNATIVE` macro. Internally, the `replaceServer()` was also used in `redirectServers()`.; But this was also causing problems: `replaceServer()` always adds the; new server at the end of the server list, which means the list gets; reordered. This can confuse usercode that rely on the server list being; ordered (yes, that's not a good idea anyway, but there are many codes; that do this). This reordering can also be seein in the example code; above. Therefore, the `redirectServers()` function is now rewritten to replace; the server without changing its position in the server list. This also; means that the original server list doesn't need to be copied, as not; iterators are invalidated. Furthermore, the `redirectServers()` is more optimized now. Before, it; redundantly figured out whether a server was a value and/or shape; server. Now, this is figured out only once when removing the original; server from the client. In summary: this PR makes RooFit code safer and faster by changing; `RooAbsArg::redirectServers()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12040:1941,redund,redundantly,1941,https://root.cern,https://github.com/root-project/root/pull/12040,2,"['redund', 'safe']","['redundantly', 'safer']"
Safety,"ocked` memory. . I say a hard limit because we probably don't want our users to have to adjust these settings, and we can batch submit calls when the number of files is larger than the ring size. From the liburing [readme](https://github.com/axboe/liburing/blob/332a17f3d9e4a34e9dacc42f11ba5bc3fcf4cc0b/README#L22-L25): . > io_uring accounts memory it needs under the rlimit memlocked option, which; > can be quite low on some setups (64K). The default is usually enough for; > most use cases, but bigger rings or things like registered buffers deplete; > it quickly. root isn't under this restriction, but regular users are. Going. If I run this code:; ```c; #include <stdio.h>; #include ""liburing.h""; #include ""liburing/io_uring.h"". int main(int argc, char* argv[]) {. int num_files = 1;; struct io_uring ring;; while(!io_uring_queue_init(num_files, &ring, 0)) {; io_uring_queue_exit(&ring);; num_files++;; }; perror("""");; printf(""queue init failed at %d files\n"", num_files);; return 0;; }. ```; we can see this in action: ; ```shell; $ ./ring_size ; Cannot allocate memory; queue init failed at 1079 files; $ ./ring_size ; Cannot allocate memory; queue init failed at 851 files; $ ./ring_size ; Cannot allocate memory; queue init failed at 992 files ; ```. ```shell; sudo ./ring_size; Cannot allocate memory; queue init failed at 9343 files; ```; These are all being rounded up to the next power of two. . By default the completion queue size is twice that of the submission queue (what we specify in the setup call). Before kernel 5.5., this means we run the risk of overflowing the completion queue buffer if we keep submitting events without handling them! (see io_uring section of this [article](https://ndportmann.com/io_uring-foundation/)). After 5.5 the kernel maintains an overflow list for us. . I don't know how many files we're typically opening, but based on everything else I'd suggest a ring size of 512 as a default? ; We can measure whether different ring sizes make a difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-658821831:1934,risk,risk,1934,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-658821831,1,['risk'],['risk']
Safety,"oducer that doesn't depend on Marcs workspace:. ```c++; #include <RooGenContext.h>; #include <RooRealVar.h>; #include <RooExponential.h>; #include <RooUniform.h>; #include <RooMsgService.h>. #include <TFile.h>; #include <TSystem.h>. #include <iostream>. void repro(); {; using namespace RooFit;. ProcInfo_t procinfo;; const float toMB = 1.f / 1024.f;. RooRealVar x{""x"", ""x"", 0.1, 5.1};; RooRealVar c{""c"", ""c"", -1.8, -5, 5};. RooExponential expo{""expo"", ""expo"", x, c};; RooAbsPdf *pdf = &expo;. // With the uniform distribution, there is no leak!; // RooUniform uni{""uni"", ""uni"", x};; // RooAbsPdf * pdf = &uni;. std::size_t nToys = 5000;. for (std::size_t index_toy = 1; index_toy <= nToys; index_toy++) {. if (index_toy % 500 == 0) {; gSystem->GetProcInfo(&procinfo);; std::cout << index_toy << "": "" << procinfo.fMemResident * toMB << "" "" << procinfo.fMemVirtual * toMB; << std::endl;; }. if (index_toy == nToys) {; RooMsgService::instance().addStream(DEBUG, Topic(Generation));; }. RooGenContext{*pdf, x};; }; }; ```. The output:. ```; 500: 209.504 345.379; 1000: 209.762 345.77; 1500: 209.762 345.77; 2000: 210.535 346.551; 2500: 210.535 346.551; 3000: 210.535 346.551; 3500: 210.535 346.551; 4000: 212.082 348.117; 4500: 212.082 348.117; 5000: 212.082 348.117; [#3] INFO:Generation -- RooGenContext::ctor() setting up event generator context for p.d.f. expo for generation of observable(s) (x); [#3] DEBUG:Generation -- RooGenContext::ctor() observables (x) are safe for internal generator (if supported by p.d.f); [#3] DEBUG:Generation -- RooGenContext::ctor() Model indicates that it can internally generate observables () with configuration identifier 0; [#3] INFO:Generation -- RooGenContext::ctor() Context will generate variables (x) with accept/reject sampling; [#3] INFO:Generation -- RooGenContext::ctor() accept/reject sampling function is expo_AccRej; [#3] DEBUG:Generation -- RooGenContext::ctor() creating MC sampling generator RooFoamGenerator from function for observables (x); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1396133152:1670,safe,safe,1670,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1396133152,1,['safe'],['safe']
Safety,"of course not xD it can't be, because the standard allows the implementation to pack the bits together. that's where all the evilness comes from. we have a few places in RDF where we SFINAE away from vector<bool> because of the thread-safety issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3135#issuecomment-446357707:235,safe,safety,235,https://root.cern,https://github.com/root-project/root/pull/3135#issuecomment-446357707,1,['safe'],['safety']
Safety,"of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. I did this only when two messages printed the same information in succession.; * In a few cases, I changed debug output so that variables are printed in one line that were printed in several lines. A log is easier to grep and scroll through when variables are on the same line as the prefix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:1981,redund,redundant,1981,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,1,['redund'],['redundant']
Safety,"oftware/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 1453]; [Detaching after vfork from child process 1455]; [Detaching after vfork from child process 1457]; [Detaching after vfork from child process 1459]; [Detaching after vfork from child process 1461]; [Detaching after vfork from child process 1465]; [Detaching after vfork from child process 1467]; [New Thread 0x7fb1af5b6640 (LWP 1469)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007fb1cb2a1201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7fb1c5732850; (gdb) continue; Continuing.; instantiating template; [Thread 0x7fb1af5b6640 (LWP 1469) exited]. Thread 1 ""python"" hit Breakpoint 1, 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:1925,safe,safe-path,1925,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['safe'],['safe-path']
Safety,"oftware/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 2333]; [Detaching after vfork from child process 2335]; [Detaching after vfork from child process 2337]; [Detaching after vfork from child process 2339]; [Detaching after vfork from child process 2341]; [Detaching after vfork from child process 2345]; [Detaching after vfork from child process 2347]; [New Thread 0x7f05f42cb640 (LWP 2349)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007f060ffb6201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7f060a447850; (gdb) continue; Continuing.; instantiating template. Thread 1 ""python"" hit Breakpoint 1, 0x00007f060a447850 in cling::NullDerefProtection",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:1901,safe,safe-path,1901,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['safe'],['safe-path']
Safety,"oid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01; Built for linuxx8664gcc on Jul 03 2023, 09:06:02; From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:1877,abort,aborted,1877,https://root.cern,https://github.com/root-project/root/issues/13155,1,['abort'],['aborted']
Safety,"oject %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT def",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:1172,Detect,Detected,1172,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Detect'],['Detected']
Safety,"ok, i think i finally understand what you meant in the other thread. Ciao,; Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>; wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return; > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is; > that doing the swapping at the usage site will avoid one scan through the; > buffer and ""may"" results in better performance.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9331#issuecomment-978143097:356,avoid,avoid,356,https://root.cern,https://github.com/root-project/root/issues/9331#issuecomment-978143097,1,['avoid'],['avoid']
Safety,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885#issuecomment-1770996104:178,risk,risk,178,https://root.cern,https://github.com/root-project/root/pull/13885#issuecomment-1770996104,1,['risk'],['risk']
Safety,ole).; ### Errors:; - [2020-09-28T08:13:35.720Z] /build/workspace/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:12:20.858Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699854008:1190,redund,redundant,1190,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699854008,1,['redund'],['redundant']
Safety,"ole).; ### Errors:; - [2022-08-05T23:31:08.230Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:29: error: constexpr variable 'colidx' must be initialized by a constant expression ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:509:21: error: static_assert expression is not an integral constant expression ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:37: error: no matching function for call to 'GetNthElement' ; - [2022-08-05T23:31:09.233Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:119:75: error: cannot pass object of non-trivial type 'ROOT::VecOps::RVec&lt;int&gt;' through variadic method; call will abort at runtime [-Wnon-pod-varargs] ; - [2022-08-05T23:31:09.494Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:529:7: error: static_assert failed due to requirement 'sizeof(TH1D) &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-08-05T23:31:09.494Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:29: error: constexpr variable 'colidx' must be initialized by a constant expression ; - [2022-08-05T23:31:09.495Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:509:21: error: static_assert expression is not an integral constant expression ; - [2022-08-05T23:31:09.495Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207087616:1261,abort,abort,1261,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207087616,1,['abort'],['abort']
Safety,"on `lxplus8`:; ```; [bellenot@lxplus803 ~/temp]$ git clone https://github.com/root-project/root.git; Cloning into 'root'...; remote: Enumerating objects: 886380, done.; remote: Counting objects: 100% (40490/40490), done.; remote: Compressing objects: 100% (3412/3412), done.; remote: Total 886380 (delta 38265), reused 37097 (delta 37076), pack-reused 845890; Receiving objects: 100% (886380/886380), 973.60 MiB | 7.50 MiB/s, done.; Resolving deltas: 100% (645163/645163), done.; Updating files: 100% (22793/22793), done.; [bellenot@lxplus803 ~/temp]$ mkdir root-build.foo; [bellenot@lxplus803 ~/temp]$ cd root-build.foo; [bellenot@lxplus803 root-build.foo]$ cmake ../root; -- The C compiler identification is GNU 8.5.0; -- The CXX compiler identification is GNU 8.5.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.39.3""); -- Building ROOT version 6.31.01; -- Checking internet connectivity; -- Checking internet connectivity - found; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.17"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Found GCC. Major version 8, minor version 5; -- The default C++ standard in use by the detected compiler (/usr/bin/c++) is lower than C++17. Setting C++17 as the minimum standard.; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:890,Detect,Detecting,890,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,8,['Detect'],['Detecting']
Safety,on root-fedora-31-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97055/console).; ### Errors:; - [2020-09-27T10:51:21.589Z] input_line_1:1:2: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found ; - [2020-09-27T10:51:21.589Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:46:13.218Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699619048:1016,redund,redundant,1016,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699619048,1,['redund'],['redundant']
Safety,"on* toAction(StackingActionHandle f) { return f.action; }; static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }; static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }; static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }; static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }; static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }; static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }; static PropertyResult getProperty(Geant4Action* action, const std::string& name) {; if ( action->hasProperty(name) ) {; return PropertyResult(action->property(name).str(),1);; }; return PropertyResult("""",0);; }; static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {; if ( action->hasProperty(name) ) {; action->property(name).str(value);; return 1;; }; return 0;; }; static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {; if ( kernel->hasProperty(name) ) {; return PropertyResult(kernel->property(name).str(),1);; }; return PropertyResult("""",0);; }; static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {; if ( kernel->hasProperty(name) ) {; kernel->property(name).str(value);; return 1;; }; return 0;; }; };. /// Container definit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:10940,Detect,DetectorConstructionHandle,10940,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,3,['Detect'],['DetectorConstructionHandle']
Safety,"on.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements ........................................................ OK; 338: ****************************************************************************; 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds; 338: ****************************************************************************; 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:; test-stressinterpreter. 100% tests p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:3891,timeout,timeout,3891,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['timeout'],['timeout']
Safety,"ool shared); { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }; static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }; ; static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }; ; static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type); { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }; ; static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type); {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}; ; static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared); {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }; ; static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type); {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }; ; static Geant4Action* toAction(Geant4Filter* f) { return f; }; static Geant4Action* toAction(Geant4Action* f) { return f; }; static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }; static Geant4Action* toAction(Geant4Sensitive* f) { return f; }; static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }; static Geant4Action* toAction(Geant4RunAction* f) { return f; }; static Geant4Action* toAction(Geant4EventAction* f) { return f; }; static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }; static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }; static Geant4Action* toAction(Geant4StackingAction* f) { ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:7285,detect,detector,7285,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,2,['detect'],['detector']
Safety,"ool shared); { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }; static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }; ; static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared); { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }; ; static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type); { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }; ; static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type); {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}; ; static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared); {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }; ; static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type); {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }; ; static Geant4Action* toAction(Geant4Filter* f) { return f; }; static Geant4Action* toAction(Geant4Action* f) { return f; }; static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }; static Geant4Action* toAction(Geant4Sensitive* f) { return f; }; static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }; static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }; static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }; static Geant4Action* toAction(SensitiveHandle f) { return f.action; }; static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }; static Geant4Action* toAction(RunActionHa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:26090,detect,detector,26090,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['detect'],['detector']
Safety,oot-fedora-31-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97047/console).; ### Errors:; - [2020-09-27T10:38:37.433Z] input_line_1:1:2: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found ; - [2020-09-27T10:38:37.433Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:35:17.800Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:18.058Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:18.058Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:22.960Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:36:57.561Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:36:57.562Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:36:57.827Z] /build/workspace/root-pullrequests-build/root/int,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617774:1020,redund,redundant,1020,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617774,1,['redund'],['redundant']
Safety,"oot-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/pull/11986; - [x] https://github.com/root-project/root/pull/11841; - [x] https://github.com/root-project/root/pull/11985; - [x] https://github.com/root-project/root/pull/11988; - [x] https://github.com/root-project/root/pull/11995; - [x] https://github.com/root-project/root/pull/11999; - [x] https://github.com/root-project/root/pull/12000; - [x] https://github.com/root-project/root/pull/12010; - [x] https://github.com/root-project/root/pull/12011; - [x] https://github.com/root-project/root/pull/12017; - [x] https://github.com/root-project/root/pull/12022; All commits except for the last one for `RooAbsArg`, which might be a bit too unsafe...; - [x] https://github.com/root-project/root/pull/12024; - [x] https://github.com/root-project/root/pull/12029; - [x] https://github.com/root-project/root/pull/12030; - [x] https://github.com/root-project/root/pull/12033; - [x] https://github.com/root-project/root/pull/12039; - [x] https://github.com/root-project/root/pull/12046; - [x] https://github.com/root-project/root/pull/12051; - [x] https://github.com/root-project/root/pull/12048; - [x] https://github.com/root-project/root/pull/12061; - [x] https://github.com/root-project/root/pull/12071; Only the first commit that is not a fixup to a recent typo is `master`; - [x] https://github.com/root-project/root/pull/12089; - [x] https://github.com/root-project/root/pull/12079; - [x] https://github.com/root-project/root/pull/12040; - [x] https://github.com/root-project/root/pull/12064; - [x] https://github.com/root-project/root/pull/12114; - [x] https://github.com/root-project/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11856:2640,unsafe,unsafe,2640,https://root.cern,https://github.com/root-project/root/issues/11856,1,['unsafe'],['unsafe']
Safety,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758:1190,redund,redundantly,1190,https://root.cern,https://github.com/root-project/root/issues/8758,1,['redund'],['redundantly']
Safety,oot/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:44:11: error: ‘LikelihoodGradientMode’ has not been declared . And 2038 more. ### Warnings:; - [2023-01-06T12:13:58.100Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:3:32: warning: declaration of ‘G__RooFitCoreInit290’ shadows a global declaration [-Wshadow] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:46: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:15: warning: invalid use of incomplete type ‘class RooMinimizer’ ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19971:49: warning: possible problem detected in invocation of delete [] operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19971:18: warning: invalid use of incomplete type ‘class RooMinimizer’ ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:20260:47: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.936Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:202,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:2947,detect,detected,2947,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['detect'],['detected']
Safety,"or validity of the existing `FileEntry` was removed:. ```; - if (UFE.isValid() &&; - llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE.ModTime) {; + if (llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE->ModTime) {; ```. In praticed this resulted in the usage of the zero-initialized `FileEntry` for files with mtime equal zero. The check for the mod time is a ROOT specific patch introduced by commit 8d492b6b9ca359294d018995d097736f762866c8 we the commit log:. Make sure the inode did not get updated since we read it. During the upgrade to LLVM svn revision 214630, the code was sub-optimally merged with the new related code:. ```; + if (UFE.isValid()) { // Already have an entry with this inode, return it.; +; + // FIXME: this hack ensures that if we look up a file by a virtual path in; + // the VFS that the getDir() will have the virtual path, even if we found; + // the file by a 'real' path first. This is required in order to find a; + // module's structure when its headers/module map are mapped in the VFS.; + // We should remove this as soon as we can properly support a file having; + // multiple names.; + if (DirInfo != UFE.Dir && Data.IsVFSMapped); + UFE.Dir = DirInfo;; + }; if (UFE.isValid() && Data.ModTime == UFE.ModTime) {; - // Already have an entry with this inode, return it.; - // If the stat process opened the file, close it to avoid a FD leak.; - if (F); - delete F;; -; return &UFE;; }; ```. where the new code (top part) should also have not been executed unless the UFE was actually returned. This also made meger the LLVM code more challenged were one the change was:; ```; - if (UFE.isValid()) { // Already have an entry with this inode, return it.; + if (ReusingEntry) { // Already have an entry with this inode, return it. ```; this lead to the inadvertent removal of `UFE.isValid() conditional` in the patched part (and the forgetting of adding `ReusingEntry conditional`). This patch remerge the two section under the a single if statement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14373:1438,avoid,avoid,1438,https://root.cern,https://github.com/root-project/root/pull/14373,1,['avoid'],['avoid']
Safety,"or_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _N",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:6656,detect,detected,6656,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,ored-qualifiers] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:46:16.716Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:49:19.928Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:35.454Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:49:47.052Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] . And 259 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699619048:2126,redund,redundant,2126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699619048,4,['redund'],['redundant']
Safety,ored-qualifiers] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:21.117Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:28.744Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.296Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:29.822Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] . And 258 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699854008:1880,redund,redundant,1880,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699854008,4,['redund'],['redundant']
Safety,"otd/5.5.0/lib/libXrdUtils.dylib;/Users/marcomeyer/Software/xrootd/5.5.0/lib/libXrdCl.dylib; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.4; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool; -- Native target ARM is not selected; lli will not JIT code; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm-apple-darwin23.2.0; -- LLVM default target triple: arm-apple-darwin23.2.0; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.1500010",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:3239,detect,detection,3239,https://root.cern,https://github.com/root-project/root/issues/14337,1,['detect'],['detection']
Safety,"other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:1803,risk,risk,1803,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,2,['risk'],['risk']
Safety,otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3661:21,risk,risk,21,https://root.cern,https://github.com/root-project/root/pull/3661,1,['risk'],['risk']
Safety,ottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_roofit_rf511_wsfactory_basic_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot/runtutorials/tutorial_roofit_rf511_wsfactory_basic_py/); - [projectroot.roottest.python.pickle.roottest_python_pickle_read](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_read/); - [projectroot.runtutorials.tutorial_roostats_StandardFrequentistDiscovery](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot/runtutorials/tutorial_roostats_StandardFrequentistDiscovery/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.io.webfile.roottest_root_io_webfile_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot.roottest.root.io/webfile/roottest_root_io_webfile_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76637/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest2/). And 17 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579623104:1909,recover,recover,1909,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579623104,2,['recover'],['recover']
Safety,"oupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=MrLsQ1shn0qv2itSXIVUc3da2Y5VUnltiBnYwHs6YjE%3D&reserved=0> ; >>>>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem ; >>>>>>> --capath /etc/grid-security/certificates; >>>>>>>; >>>>>>>; >>>>>>> regards,; >>>>>>> Asoka; >>>>>>>; >>>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>>>; >>>>>>>>; >>>>>>>> Right - without authentication I cannot see what's happening. ; >>>>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>>>> whether it's a redirect. Do you?; >>>>>>>>; >>>>>>>> If not let's get #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> fixed ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:10386,safe,safelinks,10386,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,"p:173: void cling::Transaction::forceAppend(DelayCallInfo): Assertion `oldDCI != DCI && ""Duplicates?!""' failed.; #0 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb34b; #1 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17f8eac ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fabfe; #2 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x18491a8 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x1848ed8; #3 0x000055e9492a6288 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb288); #4 0x000055e9492a634b (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb34b); #5 0x000055e9492a3eac gsignal (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17f8eac); #6 0x000055e9492a5bfe abort (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fabfe); #7 0x000055e9492f41a8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x18491a8); #8 0x000055e9492f3ed8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x1848ed8); #9 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x16d76bb ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x16d7568; #10 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x14eef2e ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x39845bf; #11 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x4cf5f84 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x4cf690d; #12 0x00007f264623e8e0 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x4b10de0 ./",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192175843:1661,abort,abort,1661,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192175843,1,['abort'],['abort']
Safety,"pand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build; *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make: stopped in /usr/home/erik/devel/resources/root/build; ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell; -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4; Processor 8 core 0 MHz (amd64); Build type RelWithDebInfo; Install path /usr/local; Compiler Clang 14.0.5; Compiler flags:; C -pipe -Wall -W -pthread -O2 -g -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wcond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:1960,Abort,Abort,1960,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['Abort'],['Abort']
Safety,"pcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FPrototypePollution/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1313"">JSRoot.core.js:1313</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FCodeInjection/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Use binary mode in open (current mode is w) to avoid encoding-related issues for written file, on Windows or with Python 3. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/interpreter/llvm/src/utils/benchmark/mingw.py#L122"">mingw.py:122</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Finterpreter%2Fllvm%2Fsrc%2Futils%2Fbenchmark%2Fmingw.py/python%2Fdc_interfile_project%2FBinaryWrite/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; </tbody>; </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2F/code/?utm_source=gh_review&c=5&w=24&i=22&) | [_Configure the bot_](https://www.deepcode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-898501733:2215,avoid,avoid,2215,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-898501733,1,['avoid'],['avoid']
Safety,"ping, we need to imperatively test this asap because if the failures persist, we must take immediate action upstream to avoid releasing a broken Clang 18! @ktf can you help with this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1880547480:120,avoid,avoid,120,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1880547480,1,['avoid'],['avoid']
Safety,"pipeline/install/dev3/Grid/srm-ifce/1.13.0-0/x86_64-centos7-gcc9-dbg;-Doracle=ON;-DORACLE_HOME=/build/jenkins/workspace/lc; g_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg;-Dbuiltin_nlohmannjson=OFF;-Droofit_multiprocess=OFF;-GUnix Makefiles;/build/jenkins/workspace/lcg_nightly_pipe; line/build/projects/ROOT-HEAD/src/ROOT/HEAD""); ```; And this is the corresponding log:; ```; -- The C compiler identification is GNU 9.2.0; -- The CXX compiler identification is GNU 9.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""1.8.3.1""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6"") found components: Interpreter Develop; ment NumPy Development.Module Development.Embed; -- Looking for a Fortran compiler; -- Looking for a Fortran compiler - /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran; -- The Fortran compiler identification is GNU 9.2.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran - skipped; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90; -- Checking whether /cvmfs/sft.cern.ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:2330,Detect,Detecting,2330,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,2,['Detect'],['Detecting']
Safety,plex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_checkRealData](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_checkRealData/); - [projectroot.roottest.root.html.roottest_root_html_runClassInModule_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root/html/roottest_root_html_runClassInModule_WILL_FAIL/); - [projectroot.roottest.root.io.ignoretobject.roottest_root_io_ignoretobject_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/ignoretobject/roottest_root_io_ignoretobject_make/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.io.tree.roottest_root_io_tree_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/tree/roottest_root_io_tree_make/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36627/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/). And 22 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2464#issuecomment-411733284:1755,recover,recover,1755,https://root.cern,https://github.com/root-project/root/pull/2464#issuecomment-411733284,2,['recover'],['recover']
Safety,"preter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:35:57.183Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.183Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617654:2336,redund,redundant,2336,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617654,1,['redund'],['redundant']
Safety,"preter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:48:24.113Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:48:24.113Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618970:2336,redund,redundant,2336,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618970,1,['redund'],['redundant']
Safety,"preter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-28T08:12:00.548Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:00.548Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699853926:1533,redund,redundant,1533,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699853926,1,['redund'],['redundant']
Safety,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:2566,detect,detecting,2566,https://root.cern,https://github.com/root-project/root/issues/8952,2,"['avoid', 'detect']","['avoiding', 'detecting']"
Safety,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559#issuecomment-726209980:163,timeout,timeout,163,https://root.cern,https://github.com/root-project/root/pull/6559#issuecomment-726209980,1,['timeout'],['timeout']
Safety,"pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Casting.h(498,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ModuleFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-12-16T12:20:06.977Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/DenseMap.h(98,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ASTCommon.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-12-16T12:20:07.283Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/Lex/ModuleMap.h(275,3): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\GlobalModuleIndex.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-12-16T12:20:07.283Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\algorithm(5790,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Analysis\UnsafeBufferUsage.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] . And 56 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249#issuecomment-1858805611:4794,Unsafe,UnsafeBufferUsage,4794,https://root.cern,https://github.com/root-project/root/pull/14249#issuecomment-1858805611,1,['Unsafe'],['UnsafeBufferUsage']
Safety,"py `hist1`, `hist2`. ; But instead the full file is copied and `myExclusiveFile.root` contains all histograms. ; ```; selectiveHadd Source file 1: myFileWithHists.root; [TFile::Cp] Total 0.00 MB	|====================| 100.00 % [6.7 MB/s]. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x562d3abbe360; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; KEY: TH1F	hist3;1	hist3; KEY: TH1F	hist4;1	hist4; root [2] ; ```. The case `numTest=1` is a way to avoid this bug. ; One can create a dummy empty file and add it as input file of the `TFileMerger` so that there is 2 input files the one of interest + the dummy empty one . ; In that case as requested only `hist1` and `hist2` are found in the `myExclusiveFile.root` file.; ```; selectiveHadd Source file 1: myFileWithHists.root; Creating a dummy empty file to avoid a bug in TFileMerger class: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Source file 2: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Target path: myExclusiveFile.root:/. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x55932d5cd940; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; root [2] ; ```. Many thanks in advance for fixing that issue, ; Romain. ### Reproducer. ```C++; #include ""TFileMerger.h""; #include ""TSystem.h""; #include ""TUUID.h""; #include ""TFile.h""; #include ""TH1F.h"". #include <iostream>; #include <string> . // Function defined after the main function ; void createFileWithHists(const std::string &fileName);. int main(){. // Choose the number of the test; // 0 or 1 ; int numTest = 0;. createFileWithHists(""myFileWithHists.root"");. TFileMerger fileMerger(false);; fileMerger.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:1667,avoid,avoid,1667,https://root.cern,https://github.com/root-project/root/issues/13359,1,['avoid'],['avoid']
Safety,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13630:474,timeout,timeout,474,https://root.cern,https://github.com/root-project/root/pull/13630,3,['timeout'],['timeout']
Safety,"py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/); > ; > * [projectroot.runtutorials.tutorial_dataframe_distrdf002_dask_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf002_dask_connection_py/); > ; > * [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification_py/); > ; > * [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); > ; > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); > ; > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); > ; > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173155/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/). These failures are timeouts and are also seen in other PRs. @Axel-Naumann @vgvassilev In principle, I think merging this PR for the release should be safe; it's on `master` already and we saw no relevant issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12703#issuecomment-1523326456:2131,timeout,timeouts,2131,https://root.cern,https://github.com/root-project/root/pull/12703#issuecomment-1523326456,2,"['safe', 'timeout']","['safe', 'timeouts']"
Safety,quests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:30.018Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T08:08:40.231Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T08:08:40.231Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:41.268Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T08:08:46.643Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:55.641Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T08:08:57.622Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699602154:1356,redund,redundant,1356,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699602154,1,['redund'],['redundant']
Safety,quests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5530-ROOT-fedora31-noimt&date=2020-05-04).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/80232/console).; ### Warnings:; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] uild/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:3268:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-05-04T15:52:04.960Z] /build/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623552894:1074,redund,redundant,1074,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623552894,1,['redund'],['redundant']
Safety,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:; ```c++; constexpr auto synth-three-way =; []<class T, class U>(const T& t, const U& u); requires requires {; { t < u } -> bool;; { u < t } -> bool;; }; {; if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident; return t <=> u; // compares pointers; } else {; if (t < u) return weak_ordering::less;; if (u < t) return weak_ordering::greater;; return weak_ordering::equivalent;; }; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1486507821:1117,avoid,avoid,1117,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1486507821,1,['avoid'],['avoid']
Safety,"r (level=32048, location=0x7fffab271828 """", fmt=0x0, ap=0x7fa7e57aacbe <__GI___waitpid+46>) at /home/amadio/src/root/core/base/src/TError.cxx:251; #5 0x00007fa7e668fb04 in Fatal (location=0x7d30 <error: Cannot access memory at address 0x7d30>, fmt=0x7fffab271828 """") at /home/amadio/src/root/core/base/src/TError.cxx:350; #6 0x00007fa7e67058b2 in TClassTable::Add (cname=0x7d30 <error: Cannot access memory at address 0x7d30>, id=6184, info=..., dict=0x7fa7e57aacbe <__GI___waitpid+46>, pragmabits=-441829952) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:350; #7 0x00007fa7e6704da5 in ROOT::AddClass (cname=0x7d30 <error: Cannot access memory at address 0x7d30>, id=6184, info=..., dict=0x7fa7e57aacbe <__GI___waitpid+46>, pragmabits=-441829952) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:761; #8 0x00007fa7e6704b94 in TClassTable::TClassTable (this=0x7d30) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:236; #9 0x00007fa7e6588e34 in TROOT::InitInterpreter (this=0x7d30) at /home/amadio/src/root/core/base/src/TROOT.cxx:2020; #10 0x00007fa7e6587ffc in ROOT::Internal::GetROOT2 () at /home/amadio/src/root/core/base/src/TROOT.cxx:385; #11 0x00007fa7e7f86986 in TCling__GetInterpreter () at /home/amadio/src/root/core/metacling/src/rootclingTCling.cxx:48; #12 0x00007fa7e7ea51d5 in RootClingMain (argc=98, argv=0x7fffab271828, isDeep=false, isGenreflex=190) at /home/amadio/src/root/core/dictgen/src/rootcling_impl.cxx:4333; #13 0x00007fa7e7e9dd43 in ROOT_rootcling_Driver (argc=32048, argv=0x7fffab271828, config=...) at /home/amadio/src/root/core/dictgen/src/rootcling_impl.cxx:6091; #14 0x00000000004027a8 in main (argc=32048, argv=0x7fffab271828) at /home/amadio/src/root/main/src/rootcling.cxx:44; Child aborted; gmake[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:213: math/mathcore/G__MathCore.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:19283: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; gmake: *** [Makefile:163: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347619862:3363,abort,aborted,3363,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347619862,1,['abort'],['aborted']
Safety,"r and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,-warnings-as-errors]; TEST(RunGraphs, EmptyListOfHandles); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2332:3: note: expanded from macro 'GTEST_TEST'; GTEST_TEST_(test_suite_name, test_name, ::testing::Test, \; ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-internal.h:1355:9: note: expanded from macro 'GTEST_TEST_'; class GTEST_TEST_CLASS_NAME_(test_suite_name, test_name) \; ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-internal.h:1347:3: note: expanded from macro 'GTEST_TEST_CLASS_NAME_'; test_suite_name##_##test_name##_Test; ^; note: expanded from here; /home/blue/ROOT/master/tree/dataframe/test/dataframe_helpers.cxx:418:1: error: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables,-warnings-as-errors]; TEST(RunGraphs, AlreadyRun); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; ```. What can we do to silence these? Maybe running on tests needs a slightly different conf? Or do we just not want to run on directories containing tests? . My command:. ```; clang-tidy (fd --type file --extension 'cxx' --extension 'hxx' . tree/dataframe/); ```. The output:; [clang-tidy.log](https://github.com/root-project/root/files/6908796/clang-tidy.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8773#issuecomment-889998560:2668,avoid,avoid-non-const-global-variables,2668,https://root.cern,https://github.com/root-project/root/pull/8773#issuecomment-889998560,1,['avoid'],['avoid-non-const-global-variables']
Safety,r is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1843; /opt/root_src/geom/geom/src/TGeoTube.cxx:1857:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:30,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:74840,safe,safe,74840,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In a `RooAddPdf`, the coefficients are tied to the normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:1340,avoid,avoid,1340,https://root.cern,https://github.com/root-project/root/issues/12645,1,['avoid'],['avoid']
Safety,"r-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++; - C++ (built type specific): -O3 -DNDEBUG; Linker flags:; - Executable: -mmacosx-version-min=15.0; - Module: ; - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd; -- Configuring done (17.6s); -- Generating done (3.7s); -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build; -- Building ROOT version 6.32.04; -- Checking internet connectivity; -- Checking internet connectivity - found; -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard.; -- Found a macOS system 15.0; -- Found an AArch64 system; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled.; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for Python; -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Looking for OpenGL; -- Looking for LibXml2; -- Looking for SQLite; -- Looking for XROOTD; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.7; -- Looking for BLAS for optional parts of TMVA; -- PyROOT: development package found. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:6073,detect,detected,6073,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,1,['detect'],['detected']
Safety,"r/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:57.629Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:09.553Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617654:2775,redund,redundant,2775,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617654,1,['redund'],['redundant']
Safety,"r/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:41.699Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:54.024Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:48:54.025Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:48:55.090Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618970:2775,redund,redundant,2775,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618970,1,['redund'],['redundant']
Safety,"r/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-28T08:12:01.067Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:277:33: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.067Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699853926:1972,redund,redundant,1972,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699853926,1,['redund'],['redundant']
Safety,"r/src/TFile.cxx.o: In function `TFile::GetFileBytesRead()':; TFile.cxx:(.text+0xb370): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesWritten()':; TFile.cxx:(.text+0xb390): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesRead(long long)':; TFile.cxx:(.text+0xb430): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesWritten(long long)':; TFile.cxx:(.text+0xb470): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileCounter()':; TFile.cxx:(.text+0xb4c0): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::IncrementFileCounter()':; TFile.cxx:(.text+0xb4f4): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; io/io/CMakeFiles/RIO.dir/build.make:599: recipe for target 'lib/libRIO.so' failed; make[3]: *** [lib/libRIO.so] Error 1; CMakeFiles/Makefile2:21040: recipe for target 'io/io/CMakeFiles/RIO.dir/all' failed; make[2]: *** [io/io/CMakeFiles/RIO.dir/all] Error 2; CMakeFiles/Makefile2:21052: recipe for target 'io/io/CMakeFiles/RIO.dir/rule' failed; make[1]: *** [io/io/CMakeFiles/RIO.dir/rule] Error 2; Makefile:5971: recipe for target 'RIO' failed; make: *** [RIO] Error 2; ```. Note that I had to add `${ROOT_ATOMIC_LIBS}` in a few more places than I would've liked. Ideally the linking against `libatomic` should've trickled down to almost all ROOT libraries from `libRIO`. I'm not sure why it didn't. :confused:. I was also wondering about possibly adding a platform / CPU check to the code, but in the end this seemed the safest. That if `libatomic` is available for the build, then the code would explicitly use it independent of what platform it is being built on. Though of course I have not tried the build of this branch of mine on every possible platform...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561:3436,safe,safest,3436,https://root.cern,https://github.com/root-project/root/pull/4561,1,['safe'],['safest']
Safety,"r/work/root/builddir/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Test project /home/dvalapar/work/root/builddir; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements ........................................................ OK; 338: ****************************************************************************; 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds; 338: ****************************************************************************; 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:; test-stressinterpreter. 100% tests p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:1374,timeout,timeout,1374,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['timeout'],['timeout']
Safety,"ration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root/multicore/processExecutorH1Test...; (gdb) run; Starting program: /srv/root/roottest-build/root/multicore/processExecutorH1Test ; warning: File ""/usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py; line to your configuration file ""/home/amadio/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; +++ Executing tProcessExecutorH1Test ......................................... +++; [Detaching after vfork from child process 340387]; [Detaching after vfork from child process 340389]; [Detaching after vfork from child process 340391]; [Detaching after vfork from child process 340393]; [Detaching after vfork from child process 341564]; [Detaching after vfork from child process 341566]; [Detaching after vfork from child process 341606]; [Detaching after fork from child process 341608]; [Detaching after fork from child process 341609]; [Detaching after fork from child process 341610]; [Detaching after vfork from child process 341705]; +++ Processing the H1 dataset with a lambda .................................. OK ; [Detaching after fork from child process 341",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:1532,safe,safe,1532,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['safe'],['safe']
Safety,"rc/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007facdc599248 in (anonymous namespace)::do_trace(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00007facdc5992c1 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #6 0x00007facdfe8f519 in TUnixSystem::DispatchSignals(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:3644; #7 0x00007facdfe876c8 in SigHandler(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:407; #8 0x00007facdfe8f474 in sighandler(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:3620; #9 <signal handler called>; #10 0x00007facdea2e4f5 in raise () from /lib64/libc.so.6; #11 0x00007facdea2fcd5 in abort () from /lib64/libc.so.6; #12 0x00007facdea2766e in __assert_fail_base () from /lib64/libc.so.6; #13 0x00007facdea27730 in __assert_fail () from /lib64/libc.so.6; #14 0x00007facd7a7438f in llvm::isa_impl_cl<clang::UsingDecl, clang::Decl const*>::doit(clang::Decl const*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:106; #15 0x00007facd7a74211 in llvm::isa_impl_wrap<clang::UsingDecl, clang::Decl const*, clang::Decl const*>::doit(clang::Decl const* const&) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:133; #16 0x00007facd7a7407a in llvm::isa_impl_wrap<clang::UsingDecl, clang::Decl const* const, clang::Decl const*>::doit(clang::Decl const* const&) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:124; #17 0x00007facd7a73d65 in bool llvm::isa<clang::UsingDecl, clang::Decl const*>(clang::Decl const* const",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359:2361,abort,abort,2361,https://root.cern,https://github.com/root-project/root/issues/6359,1,['abort'],['abort']
Safety,re-assigning from me to danilo as there are a few design decisions that I can't take:; * which safety checks to put in place and for what debug levels; * overloads of Take vs several functions with different names,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2351#issuecomment-409829058:95,safe,safety,95,https://root.cern,https://github.com/root-project/root/pull/2351#issuecomment-409829058,1,['safe'],['safety']
Safety,recovering cmake option descriptions when forcing values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:0,recover,recovering,0,https://root.cern,https://github.com/root-project/root/pull/2056,1,['recover'],['recovering']
Safety,ression found in output. Regex=[: error:] 16.59 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive_py/); - [projectroot.runtutorials.tutorial_roofit_rf513_wsfactory_tools_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf513_wsfactory_tools_py/); - [projectroot.runtutorials.tutorial_roofit_rf903_numintcache_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roofit_rf903_numintcache_py/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_roostats_StandardFrequentistDiscovery](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roostats_StandardFrequentistDiscovery/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76639/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579668392:1293,recover,recover,1293,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579668392,1,['recover'],['recover']
Safety,ression found in output. Regex=[: error:] 17.99 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive_py/); - [projectroot.runtutorials.tutorial_roofit_rf513_wsfactory_tools_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf513_wsfactory_tools_py/); - [projectroot.runtutorials.tutorial_roofit_rf903_numintcache_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tutorial_roofit_rf903_numintcache_py/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_df002_dataModel](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76607/testReport/projectroot/runtutorials/tu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579477135:1695,recover,recover,1695,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579477135,1,['recover'],['recover']
Safety,reter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. TClass::GetClass: Header Parsing - The representation of TNamedEditor was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting TNamedEditor in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; TEnum::GetEnum: Header Parsing - The enumerator TNamedEditor is not known to the typesystem: an interpreter lookup will be performed. This can imply parsing of headers. This can be avoided selecting the numerator in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15963#issuecomment-2200648481:27039,avoid,avoided,27039,https://root.cern,https://github.com/root-project/root/issues/15963#issuecomment-2200648481,1,['avoid'],['avoided']
Safety,ring its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fNodes' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 2: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:75660,safe,safe,75660,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22; #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1; #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20; #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1; #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20); #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f); #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65); #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39); #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86); #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65; #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79; #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2332005936:1737,abort,abort,1737,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2332005936,1,['abort'],['abort']
Safety,"root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: error: constexpr function's return type 'void' is not a literal type ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1281:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 11 more. ### Warnings:; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-821105657:4186,avoid,avoid,4186,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-821105657,1,['avoid'],['avoid']
Safety,"root.cern marked as ""unsafe"" by Google",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6539:21,unsafe,unsafe,21,https://root.cern,https://github.com/root-project/root/issues/6539,1,['unsafe'],['unsafe']
Safety,rors:; - [2020-09-27T10:12:28.485Z] input_line_1:1:2: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found ; - [2020-09-27T10:12:28.485Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;: fatal error: module file '/build/workspace/root-pullrequests-build/build/tree/tree/test/libc.pcm' not found: module file not found . ### Warnings:; - [2020-09-27T10:10:37.750Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclOpenMP.h:97:1: warning: multi-line comment [-Wcomment] ; - [2020-09-27T10:10:39.335Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:10:45.642Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:45.642Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:45.642Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:10:46.173Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:10:46.173Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverload[ 61%] Copying /build/workspace/root-pullrequests-build/root/tutorials/roofit/rf107_plot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699615114:1203,redund,redundant,1203,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699615114,1,['redund'],['redundant']
Safety,rors:; - [2021-06-24T10:41:54.262Z] FAILED: roottest/root/roofitstats/vectorisedPDFs/testGaussBinned ; - [2021-06-24T10:41:54.519Z] clang: error: linker command failed with exit code 1 (use -v to see invocation) . ### Warnings:; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:30:31: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:41:22: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:59:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:60:34: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:61:33: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/batchcompute/inc/Batches.h:62:32: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-06-24T10:39:06.701Z] /build/jenkins/workspace/root-pullrequests-build/root/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-867532806:1258,avoid,avoid,1258,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-867532806,1,['avoid'],['avoid']
Safety,"rrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side. > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that. > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But again, if there is a better way, I am also in favor of avoiding -fPIC-. > This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here:; > ; > https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302; > ; > The challenge is to come up with a consistent symbol resolution :); Just as a comment, two other possibilities would be to:; - put the llvm / clang which are embedded in ROOT into a namespace, so the symbols do not collide with system LLVM symbols.; - If the clang changes are upstreamed eventually, this shouldn't be necessary anymore, since cling could use system LLVM / Clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564020905:2054,avoid,avoiding,2054,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564020905,1,['avoid'],['avoiding']
Safety,rse for HepMC::GenVertex. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenVertex; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenVertex. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenVertex; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenVertex. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenVertex; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenVertex. Info in <TInterpreter::TCling::AutoLoad>: Explicitly disabled (the class name is HepMC::GenVertex); TClass::GetClass: Header Parsing - The representation of HepMC::GenVertex was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting HepMC::GenVertex in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for HepMC::GenParticle. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for HepMC::GenParticle; Info in <TInterpreter::TCling::AutoParse>: Starting autopar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:4389,avoid,avoided,4389,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['avoid'],['avoided']
Safety,"rt; terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '; what(): what(): vector::_M_fill_insert; vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; '; '; what(): vector::_M_fill_insert what(): ; vector::_M_fill_insert; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of ' what(): vector::_M_fill_insert; std::length_error'; terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''; terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error; '; std::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8; ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9406:3193,avoid,avoid,3193,https://root.cern,https://github.com/root-project/root/issues/9406,2,['avoid'],['avoid']
Safety,"rts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetParametersOfInterest(muvals); mc_cnt.SetPdf(extmvg.GetName()); ; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet())",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7967:1600,Detect,Detected,1600,https://root.cern,https://github.com/root-project/root/issues/7967,1,['Detect'],['Detected']
Safety,"running rootdrawtree without arguments leads to a crash; ```; [user@host]$ rootdrawtree ; /usr/include/c++/8/bits/stl_vector.h:932: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::reference = std::__cxx11::basic_string<char>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.; *** Break *** abort; ```; root 6.22.08 from EPEL on CentOS8 x86_64 . Sorry if that is a duplicate. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8778:557,abort,abort,557,https://root.cern,https://github.com/root-project/root/issues/8778,1,['abort'],['abort']
Safety,"runtest_protocol; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 350 in pytest_runtestloop; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 325 in _main; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 271 in wrap_session; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/main.py"", line 318 in pytest_cmdline_main; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_callers.py"", line 77 in _multicall; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_manager.py"", line 115 in _hookexec; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/pluggy/_hooks.py"", line 493 in __call__; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/config/__init__.py"", line 169 in main; File ""/github/home/ROOT-CI/src/roottest/python/common.py"", line 46 in run_pytest; File ""/github/home/ROOT-CI/src/roottest/python/basic/PyROOT_basictests.py"", line 446 in <module>. Extension modules: libcppyy3_12, libcppyy, libROOTPythonizations3_12, libROOTPythonizations (total: 4); *** Break *** segmentation violation; /usr/bin/timeout: the monitored command dumped core. -- END TEST OUTPUT --; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:186 (message):; got exit code Segmentation fault but expected 0; ```. It's not exactly the same test that fails, but it's interesting to know anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1837114968:4591,timeout,timeout,4591,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1837114968,1,['timeout'],['timeout']
Safety,"ry::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::Ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:3405,Avoid,Avoid,3405,https://root.cern,https://github.com/root-project/root/issues/12761,1,['Avoid'],['Avoid']
Safety,"s);; 	; 	// background used in model; 	RooRealVar fitargpar(""shape"", ""fit argus shape parameter"", -6.5, -8, -6);; 	RooRealVar fitpower(""power"", ""fit argus power parameter"", 0.5, 0, 1);; 	RooArgusBG fitbkg(""fitbkg"", ""Fit Background ARGUS"", x, RooConst(m0), fitargpar, fitpower);; 	RooRealVar fitnsig(""nsig"", ""signal number"", 0.6 * nevents, 0, 1.2 * nevents);; 	RooRealVar fitnbg(""nbg"", ""bg number"", 0.4 * nevents, 0, 1.2 * nevents);. 	// fitting model; 	RooAddPdf model(""model"", ""BW+a fitted"", RooArgList(fitsig, fitbkg), RooArgList(fitnsig, fitnbg));. 	RooMCStudy* mcstudy =; 		new RooMCStudy(mcdist, x, FitModel(model), Binned(kFALSE), Silence(), Extended(kFALSE),; 			FitOptions(Extended(kFALSE), PrintEvalErrors(-1), Save(kTRUE)));. 	RooDLLSignificanceMCSModule sigModule(""nsig"", 0);; 	mcstudy->addModule(sigModule);. 	mcstudy->generateAndFit(100, nevents, kTRUE);. 	std::cout << mcstudy->fitParDataSet() << std::endl;; }; ```. which results in . ```; [#0] ERROR:InputArguments -- RooDataSet::merge(fitParData_model_distribution) ERROR: datasets have different size; RooDataSet::fitParData_model_distribution[#mean_{gauss},#sigma_{gauss},nbg,nsig,power,shape,NLL,ngen,#mean_{gauss}err,#mean_{gauss}pull,#sigma_{gauss}err,#sigma_{gauss}pull,nbgerr,nbgpull,nsigerr,nsigpull,powererr,powerpull,shapeerr,shapepull] = 84 entries; ```. ### Setup; ROOT 6.22/02; WSL v2 with Ubuntu 20.04 ; Binay download (built for linuxx8664gcc). ### Additional context; RooDLLSignificanceMCSModule::finalizeRun() states that ` If a RooDataSet is returned, it must have a length equal to the number of toy experiments performed and will merged with the fitpar dataset of RooMCStudy. `, however that is not true.; If some of the toy experiments performed did not converge, the RooMCStudy dataset size is lower than the number of experiments. At the same time, there is no way (that i could find) to access the fit result status of current run from RooAbsMCStudyModule, making it hard to consistently avoid the merge error",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6949:3801,avoid,avoid,3801,https://root.cern,https://github.com/root-project/root/issues/6949,1,['avoid'],['avoid']
Safety,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:3425,detect,detect,3425,https://root.cern,https://github.com/root-project/root/issues/10704,1,['detect'],['detect']
Safety,s-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:37.332Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:41.023Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.877Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:45.528Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:59:31.741Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:12.046Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:22.838Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] . And 3 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/testReport/projectroot.roottest.root/meta/roottest_root_meta_d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555#issuecomment-869689634:1279,redund,redundant,1279,https://root.cern,https://github.com/root-project/root/pull/8555#issuecomment-869689634,1,['redund'],['redundant']
Safety,s-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:41.023Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.361Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:42.877Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:58:45.528Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T12:59:31.741Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:12.046Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] ; - [2021-06-28T13:00:22.838Z] /mnt/build/workspace/root-pullrequests-build/build/include/TSystem.h:238:14: warning: redundant parentheses surrounding declarator [-Wredundant-parens] . And 3 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execInitOrder](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121132/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555#issuecomment-869689634:1462,redund,redundant,1462,https://root.cern,https://github.com/root-project/root/pull/8555#issuecomment-869689634,1,['redund'],['redundant']
Safety,"s-build/root/roofit/roofit/src/RooChebychev.cxx:235:17: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:241:13: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:241:20: error: cannot increment value of type 'ChebychevIterator&lt;double, Kind::First&gt;' . ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:94:40: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:102:39: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:96:9: warning: variable declaration in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:97:7: warning: use of this statement in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:104:25: warning: variable declaration in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:105:7: warning: use of this statement in a constexpr function is a C++14 extension [-Wc++14-extensions] ; - /build/jenkins/workspace/root-pullrequests-build/root/roofit/roofit/src/RooChebychev.cxx:182:28: warning: variables 'iend' and 'i' used in loop condition not modified in lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775#issuecomment-489975352:2235,avoid,avoid,2235,https://root.cern,https://github.com/root-project/root/pull/3775#issuecomment-489975352,1,['avoid'],['avoid']
Safety,"s/userkey.pem --cert ~/.globus/usercert.pem --capath ; >>>>> /etc/grid-security/certificates; >>>>>; >>>>>; >>>>> regards,; >>>>> Asoka; >>>>>; >>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>; >>>>>>; >>>>>> Right - without authentication I cannot see what's happening. ; >>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> ; >>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>> whether it's a redirect. Do you?; >>>>>>; >>>>>> If not let's get #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> ; >>>>>> fixed and then we re-visit this one: either it's fixed, too, or ; >>>>>> we need to call in help from the Davix (?) folks.; >>>>>>; >>>>>> —; >>>>>> You are receiving this because you authored the thread.; >>>>>> Reply to this email directly, view it on GitHub ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8092%23issuecomment-839953723&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461026272%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:8820,safe,safelinks,8820,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['safe'],['safelinks']
Safety,"s://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download); 2. Operating System: Ubuntu 18.04. ### Additional context; <!--; Add any other context about the problem here.; -->; None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:1587,abort,aborts,1587,https://root.cern,https://github.com/root-project/root/issues/10240,1,['abort'],['aborts']
Safety,"sClass` is from https://github.com/root-project/root/blob/master/core/meta/inc/TDictionary.h#L64 , but if I try the below cases, it told me that _this enum type `EProperty`_ from https://github.com/root-project/root/blob/master/core/cont/inc/TVirtualCollectionProxy.h#L49 ???; > ; > That may said, the compiler got confused about these two types that have same name?. That's interesting: `TGenCollectionStreamer` inherits from `TVirtualCollectionProxy` (via `TGenCollectionProxy`), so that `EProperty` is indeed ""closer"" than `::EProperty`. > > ""case value is not a constant expression"".; > ; > Humm ... either I don't understand the meaning or Clang is 'wrong' on this part. Both; > ; > ```; > EProperty(kIsPointer | kBIT_ISSTRING); > and; > kIsPointer | kBIT_ISSTRING; > ```; > ; > are ""constant"" (i.e calculatable at compile time). As discussed post-commit in https://reviews.llvm.org/D130058, the check is indeed questionable in a few corner cases. But that shouldn't stop us from finding a portable solution that avoids the problems altogether. > > ""note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type""; > > That may said, the compiler got confused about these two types that have same name?; > ; > That is likely the cause of the complaints albeit it is the developer (and possibly Coverity too) that got confused here as it was meant to be written as:; > ; > ```; > case ::EProperty(kBIT_ISSTRING):; > ```. The range checks of that new warning are also known bad for some cases, not sure if that is one of them... > > > ""note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type""; > > > That may said, the compiler got confused about these two types that have same name?; > > ; > > ; > > That is likely the cause of the complaints albeit it is the developer (and possibly Coverity too) that got confused here as it was meant to be written as:; > > ```; > > case ::EProperty(kBIT_ISSTRING):; > > ```; > ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148#issuecomment-1208992073:1471,avoid,avoids,1471,https://root.cern,https://github.com/root-project/root/pull/11148#issuecomment-1208992073,1,['avoid'],['avoids']
Safety,"sable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:642,timeout,timeout,642,https://root.cern,https://github.com/root-project/root/pull/9035,1,['timeout'],['timeout']
Safety,"says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module maps provided by the standard library in those case""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:1973,avoid,avoiding,1973,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,2,['avoid'],['avoiding']
Safety,"secure) option.; >>>>>> ***@***.*** t5]$; >>>>>; >>>>>; >>>>> I am unfamiliar with how to use curl with X509 and everything I ; >>>>> tried so far has not worked. eg; >>>>> *curl*-v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ; >>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>> or; >>>>> *curl*-v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ; >>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath ; >>>>> /etc/grid-security/certificates; >>>>>; >>>>>; >>>>> regards,; >>>>> Asoka; >>>>>; >>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>; >>>>>>; >>>>>> Right - without authentication I cannot see what's happening. ; >>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:7342,safe,safelinks,7342,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['safe'],['safelinks']
Safety,"see https://sft.its.cern.ch/jira/browse/ROOT-10300. If sub-class of TObject uses `=default` specifier for default constructor, all members (including from TObject) are initialized. By this special logic for TObject::kIsOnHeap bit is corrupted. The only solution for now - avoid such `= default` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4320:272,avoid,avoid,272,https://root.cern,https://github.com/root-project/root/pull/4320,1,['avoid'],['avoid']
Safety,"self. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove comment",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:1320,safe,safety,1320,https://root.cern,https://github.com/root-project/root/pull/9078,1,['safe'],['safety']
Safety,"sercert.pem ; >>>>>>> --capath /etc/grid-security/certificates; >>>>>>>; >>>>>>>; >>>>>>> regards,; >>>>>>> Asoka; >>>>>>>; >>>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>>>; >>>>>>>>; >>>>>>>> Right - without authentication I cannot see what's happening. ; >>>>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>>>> whether it's a redirect. Do you?; >>>>>>>>; >>>>>>>> If not let's get #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> fixed and then we re-visit this one: either it's fixed, too, or ; >>>>>>>> we need to call in help from the Davix (?) folks.; >>>>>>>>; >>>>>>>> —; >>>>>>>> You are receiving this because you authored the thread.; >>>>>>>> Reply to this email directly, view it on GitHub ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8092%23issuecomment-839953723&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909287326%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:10973,safe,safelinks,10973,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,"sid). **command line used**: ; ```fish; clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#; ```; (where `# = 0,1,2,3`). **clang version**: ; ```; Debian clang version 16.0.6 (27); Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:; ```; ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:; #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83); #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s).; ```. ROOT Debug:; ```; ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:; #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b); #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s).; ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818#issuecomment-2162394965:1412,detect,detected,1412,https://root.cern,https://github.com/root-project/root/issues/15818#issuecomment-2162394965,1,['detect'],['detected']
Safety,slc6/gcc62 error is:; ```; 19:29:14 Unknown option: -c; 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]; 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]; 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]; 19:29:14 [--help] COMMAND [ARGS]; 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2959#issuecomment-438388117:332,abort,abort,332,https://root.cern,https://github.com/root-project/root/pull/2959#issuecomment-438388117,1,['abort'],['abort']
Safety,"so after a quick git grep _REENTRANT through the system sources I see that nothing noteworthy is defining/using this macro, so i guess libc and other guts are thread safe by default (unless you count ncurses as guts ;) ). Now the interpreter thing: the build defs seem to be set by interpreter/llvm/src/tools/clang/lib/Basic/Targets/OSTargets.h for interpreted code - and that can rely on _REENTRANT being defined. Maybe there is some other place I don't know about.; Now the following patch also works, at least for TThread...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13069#issuecomment-1602565889:166,safe,safe,166,https://root.cern,https://github.com/root-project/root/pull/13069#issuecomment-1602565889,1,['safe'],['safe']
Safety,"sor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:3000,detect,detected,3000,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,"space/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/include/xrootd;/build/jenkins/workspace/lcg_nightly_pipeline; /build/projects/ROOT-HEAD/src/ROOT/HEAD/proof/xrdinc; -- libraries: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdUtils.so;/build/jenkins/workspace/lcg_nightly_pipel; ine/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdCl.so; -- Found GFAL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-centos7-gcc9-dbg/include/.; -- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Detected Compiler: GCC 9.2.0; -- Performing Test check_cxx_compiler_flag__Wabi; -- Performing Test check_cxx_compiler_flag__Wabi - Success; -- Performing Test check_cxx_compiler_flag__fabi_version_0; -- Performing Test check_cxx_compiler_flag__fabi_version_0 - Success; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0 - Success; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast - Success; -- target changed from """" to ""auto""; -- Detected CPU: broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell - Success; -- Performing Test check_cxx_compiler_flag__msse2; -- Performing Test check_cxx_compiler_flag__msse2 - Success; -- Performing Test check_cxx_compiler_flag__msse3; -- Performing Test check_cxx_compiler_f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:11405,Detect,Detected,11405,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['Detect'],['Detected']
Safety,"space/root-pullrequests-build/build/include/TF3.h:145:11: error: call to member function 'GetRange' is ambiguous . ### Warnings:; - [2020-09-28T08:11:55.604Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-28T08:12:00.548Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-28T08:12:00.548Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-28T08:12:01.066Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::Legacy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699853926:1323,redund,redundant,1323,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699853926,1,['redund'],['redundant']
Safety,"ssions.; SetCTestConfiguration:CMakeCommand:/usr/bin/cmake; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Test project /scratchnvme/bendavid/rootdev2/build; Constructing a list of tests; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 76; Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 104 tests from 3 test suites.; 76: [----------] Global test environment set-up.; 76: [----------] 6 tests from InterpreterLock; 76: [ RUN ] InterpreterLock.ConcurrentCalc; 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms); 76: [ RUN ] InterpreterLock.ReadLocks; 76: [ OK ] InterpreterLock.ReadLocks (95 ms); 76: [ RUN ] InterpreterLock.BalancedUserReadLock; 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms); 76: [ RUN ] InterpreterLock.BalancedUserWriteLock; 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms); 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock; 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms); 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock; 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms); 76: [----------] 6 tests from InterpreterLock (857 ms total); 76: ; 76: [----------] 88 tests from RWLock; 76: [ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:1748,timeout,timeout,1748,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['timeout'],['timeout']
Safety,"st):; File ""/Users/vpadulan/Programs/rootproject/rootsrc/tmva/tmva/test/rbdt_xgboost.py"", line 77, in test_XGBBinary_branchless; _test_XGBBinary(""TMVA::Experimental::BranchlessForest<float>"", ""branchlessForest""); File ""/Users/vpadulan/Programs/rootproject/rootsrc/tmva/tmva/test/rbdt_xgboost.py"", line 29, in _test_XGBBinary; np.testing.assert_array_almost_equal(y_xgb, y_bdt); File ""/opt/homebrew/Cellar/python@3.12/3.12.2_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py"", line 81, in inner; return func(*args, **kwds); ^^^^^^^^^^^^^^^^^^^; File ""/Users/vpadulan/Programs/python-venvs/root-dev/lib/python3.12/site-packages/numpy/testing/_private/utils.py"", line 1034, in assert_array_almost_equal; assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,; File ""/opt/homebrew/Cellar/python@3.12/3.12.2_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py"", line 81, in inner; return func(*args, **kwds); ^^^^^^^^^^^^^^^^^^^; File ""/Users/vpadulan/Programs/python-venvs/root-dev/lib/python3.12/site-packages/numpy/testing/_private/utils.py"", line 797, in assert_array_compare; raise AssertionError(msg); AssertionError:; Arrays are not almost equal to 6 decimals. Mismatched elements: 1000 / 1000 (100%); Max absolute difference: 0.34220904; Max relative difference: 0.78311133; x: array([0.698255, 0.875646, 0.785947, 0.813333, 0.254368, 0.882497,; 0.74103 , 0.150452, 0.859295, 0.71447 , 0.637931, 0.218663,; 0.338688, 0.2761 , 0.488564, 0.569222, 0.849197, 0.854105,...; y: array([0.697412, 0.87521 , 0.785273, 0.812725, 0.26237 , 0.882081,; 0.740262, 0.149942, 0.817386, 0.713653, 0.637007, 0.555826,; 0.326997, 0.275301, 0.487565, 0.568241, 0.848684, 0.853606,...; ```. Which is a further demonstration that this test was never run. I propose we disable the test, to avoid having the CI needlessly red. The test should be re-enabled then by https://github.com/root-project/root/pull/15173 which is the actual fix for this buggy behaviour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183#issuecomment-2046134260:3339,avoid,avoid,3339,https://root.cern,https://github.com/root-project/root/pull/15183#issuecomment-2046134260,1,['avoid'],['avoid']
Safety,stReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.root.html.roottest_root_html_runClassInModule_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root/html/roottest_root_html_runClassInModule_WILL_FAIL/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_checkRealData](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_checkRealData/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.root.io.tree.roottest_root_io_tree_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projectroot.roottest.root.io/tree/roottest_root_io_tree_make/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36513/testReport/projec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2464#issuecomment-411491918:1277,recover,recover,1277,https://root.cern,https://github.com/root-project/root/pull/2464#issuecomment-411491918,1,['recover'],['recover']
Safety,"std::set was not good because it sorted libraries by alphabetical order; and didn't preserve LD_LIBRARY_PATH order information. We can use; std::vector instead. (Erasing rarely happens and doesn't cost so much). Path prefix like ""/home/yuka/modules/lib/"" costs memory, I; think it makes sense to avoid path duplication in sLibraries and make sPaths; vector for this prefix. With this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.14 seconds Cpu Time = 0.14 seconds; (TFile *) 0x31eb0d0; Processing memory.C...; cpu time = 0.861813 seconds; sys time = 0.155326 seconds; res memory = 178.988 Mbytes; vir memory = 435.332 Mbytes; ```. w/o; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.21 seconds Cpu Time = 0.20 seconds; (TFile *) 0x30db6e0; Processing memory.C...; cpu time = 1.266833 seconds; sys time = 0.227562 seconds; res memory = 178.965 Mbytes; vir memory = 435.301 Mbytes; ```. Actually cpu time improved",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2137:296,avoid,avoid,296,https://root.cern,https://github.com/root-project/root/pull/2137,1,['avoid'],['avoid']
Safety,"std::string &s2);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TString.h:51:9: note: candidate function; TString operator+(const char *cs, const TString &s);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:117:15: note: candidate function; TEveException operator+(const TEveException &s1, const TString &s2);; ^; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```. When running with gdb, I get:. ```; (gdb) run; Starting program: /home/user/builds/build-root_src-Desktop-Debug/bin/root.exe -b /tmp/test.cpp+; warning: File ""/home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py; line to your configuration file ""/home/user/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:2661,safe,safe-path,2661,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['safe'],['safe-path']
Safety,"sterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```. When running with gdb, I get:. ```; (gdb) run; Starting program: /home/user/builds/build-root_src-Desktop-Debug/bin/root.exe -b /tmp/test.cpp+; warning: File ""/home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py; line to your configuration file ""/home/user/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing /tmp/test.cpp+...; In file included from test_cpp_ACLiC_dict dictionary payload:8:; /tmp/test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types 'TString' and 'std::__cxx11::string' (aka 'basic_string<char>')); TString tryit = other + ""h"" + std::to_string(2);; ~~~~~~~~~~~ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:3112,safe,safe,3112,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['safe'],['safe']
Safety,"structing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 2338; Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake""; 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462; 2338: Environment variables:; 2338: ROOT_HIST=0; 2338: Test timeout computed to be: 1500; 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; 2338: [==========] Running 1 test from 1 test suite.; 2338: [----------] Global test environment set-up.; 2338: [----------] 1 test from ReadRules; 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace; 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist; 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms); 2338: [----------] 1 test from ReadRules (317 ms total); 2338:; 2338: [----------] Global test environment tear-down; 2338: [==========] 1 test from 1 test suite ran. (317 ms total); 2338: [ PASSED ] 1 test.; 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:; gtestC--root-dev-git-roottest-root-tree-readrul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2370611327:1574,timeout,timeout,1574,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2370611327,1,['timeout'],['timeout']
Safety,"sure, but I am now thinking of the user's perspective, if someone's default browser is ""safari"" and they are not aware that chrome, and hence always running ""root --web=chrome"" instead of just ""root"", provides the best functionality, they would also run into some issues like I did. I'm just thinking of how to communicate this well so that user issues are avoided (and I don't think this is explained anywhere yet, unless I am wrong, but then where is it explained?) . I now also tried doing the same but with firefox and I also run into issues . ![Screenshot 2023-11-14 at 14 20 05](https://github.com/root-project/root/assets/80402204/02710082-1104-4cf4-9a08-1aec4575aa21); <img width=""1275"" alt=""Screenshot 2023-11-14 at 14 20 15"" src=""https://github.com/root-project/root/assets/80402204/7b55511e-ed78-4321-b279-7abd2d278f3d"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14051#issuecomment-1810197357:357,avoid,avoided,357,https://root.cern,https://github.com/root-project/root/issues/14051#issuecomment-1810197357,1,['avoid'],['avoided']
Safety,"t TEveException &s1, const TString &s2);; ^; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```. When running with gdb, I get:. ```; (gdb) run; Starting program: /home/user/builds/build-root_src-Desktop-Debug/bin/root.exe -b /tmp/test.cpp+; warning: File ""/home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so-gdb.py; line to your configuration file ""/home/user/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing /tmp/test.cpp+...; In file included from test_cpp_ACLiC_dict dictionary payload:8:; /tmp/test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:2968,safe,safe-path,2968,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['safe'],['safe-path']
Safety,"t TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDesc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:4007,detect,detected,4007,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,t [-Wredundant-move] ; - [2020-09-27T10:35:18.058Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:18.058Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:35:22.960Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformPosix.cpp:73:44: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers] ; - [2020-09-27T10:36:57.561Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Pass.h:105:16: warning: ‘virtual bool llvm::Pass::doInitialization(llvm::Module&)’ was hidden [-Woverloaded-virtual] ; - [2020-09-27T10:36:57.562Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Transforms/IPO/Inliner.h:39:8: warning: by ‘virtual bool llvm::LegacyInlinerBase::doInitialization(llvm::CallGraph&)’ [-Woverloaded-virtual] ; - [2020-09-27T10:36:57.827Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:212:23: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:57.827Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:427:27: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:57.827Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Bitstream/BitstreamReader.h:450:25: warning: redundant move in return statement [-Wredundant-move] ; - [2020-09-27T10:36:58.773Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:431:25: warning: redundant move in return statement [-Wredundant-move] . And 259 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699617774:2126,redund,redundant,2126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699617774,4,['redund'],['redundant']
Safety,"t-roofit-roofitcore-test-testSumW2Error (Failed); 	294 - gtest-roofit-roofitcore-test-testLikelihoodGradientJob (Failed); 	295 - gtest-roofit-roofitcore-test-testLikelihoodJob (Failed); 	298 - gtest-roofit-roostats-test-testSPlot (Failed). Here is an example failure:; ```; 331/1268 Test #292: gtest-roofit-roofitcore-test-testSumW2Error ...............................***Failed 0.58 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 2 tests from SumW2Error; [ RUN ] SumW2Error.BatchMode; /builddir/build/BUILD/root-6.30.02/core/testsupport/src/TestSupport.cxx:77: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RooNaNPacker' reading 'Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] SumW2Error.BatchMode (408 ms); [ RUN ] SumW2Error.ExtendedFit; [ OK ] SumW2Error.ExtendedFit (112 ms); [----------] 2 tests from SumW2Error (521 ms total); [----------] Global test environment tear-down; [==========] 2 tests from 1 test suite ran. (521 ms total); [ PASSED ] 1 test.; [ FAILED ] 1 test, listed below:; [ FAILED ] SumW2Error.BatchMode; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```; Normally, when root issues a warning it is not fatal, and program execution continues. However, this is a test, and the ROOT::TestSupport installs a custum error handler that captures warnings and rethrow them as GTest failures. So it this contaext a warning is expected to generate a fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1837156931:2275,recover,recovery,2275,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1837156931,1,['recover'],['recovery']
Safety,t.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/). And 5 mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3801,recover,recover,3801,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['recover'],['recover']
Safety,t.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30063/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/). And 5 mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396933089:1313,recover,recover,1313,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396933089,1,['recover'],['recover']
Safety,"t/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:2167,timeout,timeout,2167,https://root.cern,https://github.com/root-project/root/issues/6597,1,['timeout'],['timeout']
Safety,"t;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1285:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 32 more. ### Warnings:; - [2021-05-04T11:52:39.407Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const] ; - [2021-05-04T11:52:40.545Z] /Volumes/HD2/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-831882989:2421,avoid,avoid,2421,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-831882989,2,['avoid'],['avoid']
Safety,"t>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:1936,detect,detected,1936,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,"tStats=<optimized out>, SkipFunctionBodies=<optimized out>) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:159; #4 0x00007ffff1d67996 in clang::FrontendAction::Execute (this=this@entry=0x7fffeb7f9c00) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896; #5 0x00007ffff1d302f4 in clang::CompilerInstance::ExecuteAction (this=0x7fffebff7ed0, Act=...) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984; #6 0x00007ffff1d309af in <lambda()>::operator() (__closure=0x7fffebff7db0) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154; #7 llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737152777648) at /usr/include/llvm/ADT/STLExtras.h:98; #8 0x00007ffff43bffb3 in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) () from /home/yuka/module-relwithdeb/lib/libCling.so; #9 0x00007ffff43c00a5 in RunSafelyOnThread_Dispatch(void*) () from /home/yuka/module-relwithdeb/lib/libCling.so; #10 0x00007ffff44360ad in ExecuteOnThread_Dispatch(void*) () from /home/yuka/module-relwithdeb/lib/libCling.so; #11 0x00007ffff6e3d08c in start_thread () from /usr/lib/libpthread.so.0; #12 0x00007ffff6b74e7f in clone () from /usr/lib/libc.so.6; ```; My point is; 1. In user's machine, I think it is unlikely that LD_LIBRARY_PATH and DYLD_LIBRARY_PATH is unset because if ROOT is successfully installed in the machine, they should be set. Thus I'm not 100% sure that we should add DynamicPath to search because it causes overhead in the lookup.; 2. Instead, I think we can change Clang code to abort when it generates implicit modules on-demand and emit error messages. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761#issuecomment-377492896:5941,abort,abort,5941,https://root.cern,https://github.com/root-project/root/pull/1761#issuecomment-377492896,1,['abort'],['abort']
Safety,"t_src/proof/proof/src/TDataSetManager.cxx:1267; 32: Assuming 'newStagedFiles' is equal to 'flist' in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 33: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 34: Assuming 'mss' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 35: Left side of '&&' is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 36: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 37: '?' condition is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 38: Loop condition is false. Execution continues on line 1304 in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1280; 39: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 40: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 41: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 42: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 43: 'getlistonly' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 44: Taking true branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 45: Assuming 'dbg' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 46: Left side of '&&' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 47: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774:4: warning: Value stored to 'rc' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rc' is never read in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774; /opt/root_src/proof/proof/src/TDataSetManagerFile.cxx:1553:12: warning: Although the value stored to 'rc' is used in the enclosing expression, the value is never actually read from 'rc' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'rc' is use",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7534:8462,Safe,SafeDelete,8462,https://root.cern,https://github.com/root-project/root/issues/7534,1,['Safe'],['SafeDelete']
Safety,"taframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2670,abort,abort,2670,https://root.cern,https://github.com/root-project/root/issues/16242,1,['abort'],['abort']
Safety,"tal::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.LargeFile1 (34858 ms); [ RUN ] RNTuple.LargeFile2; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 82 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx'; aborting; Thread 6 (Thread 0xe26ffb40 (LWP 117258) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 5 (Thread 0xe2afeb40 (LWP 117257) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 4 (Thread 0xe2cffb40 (LWP 117256) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:7167,abort,aborting,7167,https://root.cern,https://github.com/root-project/root/issues/12427,1,['abort'],['aborting']
Safety,"tall precompiled ROOT 6.30.04, downloaded from root.cern, on RHEL8 or 9.; - Run `thisroot.sh` to set up the runtime environment; - Type rootn.exe; - Hard crash. Transcript of session on RHEL8:; ```; % source /apps/ROOT/6.30.04/bin/thisroot.sh; % root-config --version; 6.30.04; % root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_davix builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xrootd builtin_xxhash builtin_zeromq builtin_zlib builtin_zstd clad dataframe davix fftw3 fitsio fortran gdml http imt mathmore mlp minuit2 mysql opengl pgsql proof pyroot roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore x11 xml xrootd; % which rootn.exe; /apps/ROOT/6.30.04/bin/rootn.exe; % rootn.exe; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; ... longish stack trace ...; ```; This works without error with ROOT 6.26.14 and 6.28.12 on the exact same machine. Running plain `root` 6.30.04 also works, of course. Only `rootn.exe` seems affected. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 31 2024, 09:46:18 |; | From heads/master@tags/v6-30-04 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-21) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binary, downloaded from root.cern. ### Operating system. Linux RHEL8 or 9. ### Additional context. Tried several different Linux hosts running RHEL8/CentOS 8, all with same result.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14767:1346,abort,aborting,1346,https://root.cern,https://github.com/root-project/root/issues/14767,1,['abort'],['aborting']
Safety,"tead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""tryi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:2471,avoid,avoided,2471,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,2,['avoid'],['avoided']
Safety,"ted during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:4803,detect,detected,4803,https://root.cern,https://github.com/root-project/root/issues/15413,1,['detect'],['detected']
Safety,ter/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/base/v7/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/base/inc -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/ginclude -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/io/v7/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/io/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/clib/res TBufferXML.h TKeyXML.h TXMLEngine.h TXMLFile.h TXMLPlayer.h TXMLSetup.h E:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc/LinkDef.h; #0 0x00007ffefe214d7b HandleAbort E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\interpreter\llvm\src\lib\Support\Windows\Signals.inc:408:0; #1 0x00007fff6c0690ed (C:\Windows\SYSTEM32\ucrtbased.dll+0xa90ed); #2 0x00007fff6c06ae49 (C:\Windows\SYSTEM32\ucrtbased.dll+0xaae49); #3 0x00007fff20c79818 TWinNTSystem::Abort(int) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:3902:0; #4 0x00007fff20c7897c TWinNTSystem::DispatchSignals(enum ESignals) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:1781:0; #5 0x00007fff20c81f52 `anonymous namespace'::SigHandler E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:456:0; #6 0x00007fff20c81d8e `anonymous namespace'::sighandler E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:398:0; #7 0x00007fff6c067ade (C:\Windows\SYSTEM32\ucrtbased.dll+0xa7ade); #8 0x00007ff6481b6f38 `__scrt_common_main_seh'::`1'::filt$0 D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:304:0; #9 0x00007fffaa5bc96b (C:\Windows\SYSTEM32\VCRUNTIME140D.dll+0x1c96b); #10 0x00007fffb6e323df (C:\Windows\SYSTEM32\ntdll.dll+0xa23df); #11 0x00007fffb6de14a4 (C:\Windows\SYSTEM32\ntdll.dll+0x514a4); #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738:13953,Abort,Abort,13953,https://root.cern,https://github.com/root-project/root/issues/12738,1,['Abort'],['Abort']
Safety,ter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. TClass::GetClass: Header Parsing - The representation of TNamedEditor was not found in the type system. A lookup in the interpreter is about to be tried: this can cause parsing. This can be avoided selecting TNamedEditor in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; TEnum::GetEnum: Header Parsing - The enumerator TNamedEditor is not known to the typesystem: an interpreter lookup will be performed. This can imply parsing of headers. This can be avoided selecting the numerator in the linkdef/selection file.; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TNamedEditor; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for TNamedEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TNamedEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEditor; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TObjectEditor. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TObjectEdit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15963#issuecomment-2200648481:27684,avoid,avoided,27684,https://root.cern,https://github.com/root-project/root/issues/15963#issuecomment-2200648481,1,['avoid'],['avoided']
Safety,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:2703,Detect,Detecting,2703,https://root.cern,https://github.com/root-project/root/issues/8193,8,['Detect'],['Detecting']
Safety,"th weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF][HS3] Don't assume that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:5778,avoid,avoid,5778,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,4,['avoid'],['avoid']
Safety,"thanks @pcanal . If I understand correctly, this PR makes half of 3110 redundant, i.e. only the test is needed: is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3115#issuecomment-445021777:71,redund,redundant,71,https://root.cern,https://github.com/root-project/root/pull/3115#issuecomment-445021777,1,['redund'],['redundant']
Safety,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15898:49,safe,safe,49,https://root.cern,https://github.com/root-project/root/pull/15898,1,['safe'],['safe']
Safety,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-502762392:130,avoid,avoid,130,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-502762392,1,['avoid'],['avoid']
Safety,"the first two weeks of December I've not run my tests very often.; Actually all my GitHub actions tests started to fail to due to timeout from the Friday.; And inspecting the overall CPU time for all tests, I do not see large steps/peaks ; around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1357415192:130,timeout,timeout,130,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1357415192,1,['timeout'],['timeout']
Safety,"the goal of this commit is to avoid too many allocations/deallocations in two cases:; 1. sophisticated expressions manipulating RVec<T> instances: churn kicks in due to temporaries; 2. RDataFrame runs with Defines returning RVec<T>s which are saved within custom columns via a copy. For every event, the old value is deallocated and the new one allocated. This change implements a thread local stack of buffers in the RAdoptAllocator.; If the allocation is smaller than RAdoptAllocator<T>::fgBuffersSize, before allocating; a fresh region of memory through the stl allocator, a pop from the aforementioned stack is tried.; At deallocation time, the memory taken from the stak, is put back in the stack.; In some sense, this is an optimisation for short (defined by RAdoptAllocator<T>::fgBuffersSize) RVec<T>s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3467:30,avoid,avoid,30,https://root.cern,https://github.com/root-project/root/pull/3467,1,['avoid'],['avoid']
Safety,"the implementation of histo models has been simplified avoiding code duplication.; The creation of the shared_pointer containing the histogram has been moved to; the model classes, in order to simplify the TDFInterface.; Test coverage has been significantly increased.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1770:55,avoid,avoiding,55,https://root.cern,https://github.com/root-project/root/pull/1770,1,['avoid'],['avoiding']
Safety,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug; https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14915#issuecomment-1985321215:134,detect,detect,134,https://root.cern,https://github.com/root-project/root/pull/14915#issuecomment-1985321215,1,['detect'],['detect']
Safety,"theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:13092,abort,abort,13092,https://root.cern,https://github.com/root-project/root/issues/12429,1,['abort'],['abort']
Safety,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16198:10,avoid,avoiding,10,https://root.cern,https://github.com/root-project/root/pull/16198,1,['avoid'],['avoiding']
Safety,thread-safe gSystem list of timers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8562:7,safe,safe,7,https://root.cern,https://github.com/root-project/root/pull/8562,1,['safe'],['safe']
Safety,threadsh1: Avoid heap-use-after-free.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10068:11,Avoid,Avoid,11,https://root.cern,https://github.com/root-project/root/pull/10068,1,['Avoid'],['Avoid']
Safety,"ting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""1.8.3.1""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6"") found components: Interpreter Develop; ment NumPy Development.Module Development.Embed; -- Looking for a Fortran compiler; -- Looking for a Fortran compiler - /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran; -- The Fortran compiler identification is GNU 9.2.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran - skipped; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90 - yes; -- Found GCC. Major version 9, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:3002,Detect,Detecting,3002,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,2,['Detect'],['Detecting']
Safety,tion Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator; 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis; 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing; 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3; 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2; 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6; 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5; 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4; 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7; 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination; 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare; 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting; 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation; 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation; 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass; 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization; 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis; 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup; 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass; 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.1052 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:4251,redund,redundant,4251,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['redund'],['redundant']
Safety,tion is AppleClang 11.0.3.11030032; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test COMPILER_SUPPORTS_-O1; -- Performing Test COMPILER_SUPPORTS_-O1 - Success; -- Performing Test COMPILER_SUPPORTS_-pipe; -- Performing Test COMPILER_SUPPORTS_-pipe - Success; -- Performing Test COMPILER_SUPPORTS_-g; -- Performing Test COMPILER_SUPPORTS_-g - Success; -- Performing Test COMPILER_SUPPORTS_-Wall; -- Performing Test COMPILER_SUPPORTS_-Wall - Success; -- ROOT_FOUND: 1; -- ROOT_USE_FILE /Users/couet/git/couet-root-bin/ROOTUseFile.cmake; -- ROOT includes: /Users/couet/git/couet-root-bin/include; -- ROOT libraries: /Users/couet/git/couet-root-bin/lib/libCore.so;/Users/couet/git/couet-root-bin/lib/libImt.so;/Users/couet/git/couet-root-bin/lib/libRIO.so;/Users/couet/git/couet-root-bin/lib/libNet.so;/Users/couet/git/couet-root-bin/lib/libHist.so;/Users/couet/git/couet-root-bin/lib/libGraf.so;/Users/couet/git/couet-root-bin/lib/libGraf3d.so;/Users/couet/git/couet-root-bin/lib/libGpad.so;/Users/couet/git/couet-root-bin/lib/libROOTDataFrame.so;/Users/couet/git/couet-root-bin/lib/libTree.so;/Users/couet/git/couet-root-bin/lib/libTreePlayer.so;/Users/couet/git/couet-root-bin/lib/libRint.so;/Users/couet/git,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693277452:1292,Detect,Detecting,1292,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693277452,4,['Detect'],['Detecting']
Safety,"tion with authention files ; specified. Here is an example, check file existing. curl --verbose -I --head https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root. For your case, it's more like an authencation issue, this is curl SSL ; verification trick, error code 35, here is a way I figured out long time ; ago,specify cacert and capath to verify host. To download a file that needs redirection, use -L. curl --silent --show-error --cacert /tmp/x509up_u501  --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u501 --key /tmp/x509up_u501 -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root  -o /tmp/ddddd-https. Hope it helps. Simon. On 5/12/2021 11:51 AM, Asoka De Silva wrote:; > Hi Simon,; >; >>>>>>>>> |curl -v ; >>>>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422908647699%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=DKbH3DJgHqWR8O0YknLB85pID2Q2zwz0CqqB18vukA4%3D&reserved=0>|; >; > How do I use curl to download on lxplus ?; >; > regards,; > Asoka; >; >> On May 12, 2021, at 11:47 AM, Simon Liu ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Hi, Asoka; >>; >> I'm not sure which exactly problem you are chasing for, as far as I ; >> can tell, there is no problem access webdav.lcg.triumf.ca ; >> <http://webdav.lcg.triumf.ca> from lxplus, and downloading files from ; >> there works fine.; >>; >> thanks; >>; >> Simon; >>; >> On 5/12/2021 11:13 AM, Asoka De Silva wrote:; >>> ah ... thanks, I missed that.  So ping works f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:1122,safe,safelinks,1122,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,tlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422908657695%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=doCS6vzi0f487jtyrDrWCV9imCF8mwraGfSQOgAoR4s%3D&reserved=0> ; >>>>>>>>> * Trying 206.12.9.197:2880... * TCP_NODELAY set * Trying ; >>>>>>>>> 2607:f8f0:660:3::36:2880... * TCP_NODELAY set * Immediate ; >>>>>>>>> connect fail for 2607:f8f0:660:3::36: Network is unreachable |; >>>>>>>>>; >>>>>>>>> Is that expected?; >>>>>>>>>; >>>>>>>; >>>>>>>> ***@***.*** t5]$ curl -v ; >>>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=lnK7F9PwtLyhMgfW1BGV%2F3jGJQ2O5M9uq%2F4p66Y5ihI%3D&reserved=0>; >>>>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>>> *   Trying 2607:f8f0:660:3::36...; >>>>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>>>   CApath: none; >>>>>>>> * Server certificate:; >>>>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:5338,safe,safelinks,5338,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,to avoid an odd namespace to appear in the doc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3145:3,avoid,avoid,3,https://root.cern,https://github.com/root-project/root/pull/3145,1,['avoid'],['avoid']
Safety,"to avoid excessive memory usage, which can lead to issues on machines with a low memory per core. - [v] tested changes locally; - [v] updated the docs (if necessary). Fixes #16252",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16262:3,avoid,avoid,3,https://root.cern,https://github.com/root-project/root/pull/16262,1,['avoid'],['avoid']
Safety,to avoid malformed names in the string passed to CPack for the creation of the binary archive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15800:3,avoid,avoid,3,https://root.cern,https://github.com/root-project/root/pull/15800,1,['avoid'],['avoid']
Safety,to avoid warnings about unused variable. This is possible because in master c++17 is enforced.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13835:3,avoid,avoid,3,https://root.cern,https://github.com/root-project/root/pull/13835,1,['avoid'],['avoid']
Safety,to avoid warnings when building docu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15446:3,avoid,avoid,3,https://root.cern,https://github.com/root-project/root/pull/15446,1,['avoid'],['avoid']
Safety,"tor' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:17:53.120Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:17:53.120Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:17:53.120Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:17:53.120Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1281:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:17:53.121Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:17:53.121Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:17:53.121Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1523:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-04-16T11:17:53.121Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1524:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 10 more. ### Warnings:; - [2021-04-16T11:17:53.120Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-821105357:2543,avoid,avoid,2543,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-821105357,1,['avoid'],['avoid']
Safety,"tor' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1285:27: error: no type named 'pointer' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1527:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' ; - [2021-05-04T11:09:43.403Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1528:1: error: no member named 'begin' in 'ROOT::VecOps::RVec&lt;int&gt;' . And 10 more. ### Warnings:; - [2021-05-04T11:09:43.133Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: warning: 'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior [-Wconstexpr-not-const]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-831861333:2543,avoid,avoid,2543,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-831861333,1,['avoid'],['avoid']
Safety,"tps://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460976298%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=YgqiD9GIPDhABbE6mxc9%2BtWy8Q8red4Pa6zme6lmNgs%3D&reserved=0>; >>>>>>>> * Trying 206.12.9.197:2880...; >>>>>>>> * TCP_NODELAY set; >>>>>>>> * Trying 2607:f8f0:660:3::36:2880...; >>>>>>>> * TCP_NODELAY set; >>>>>>>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>>>>>>> Is that expected?; >>>>>>>> ; >>>>>> ; >>>>>>> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>> CApath: none; >>>>>>> * Server certificate:; >>>>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.prote",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:4098,safe,safelinks,4098,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['safe'],['safelinks']
Safety,"trace (sig=5) at /home/vpadulan/programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00007f4d2f866644 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x55bd15d7d000, sig=5) at /home/vpadulan/programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00007f4d2f5255f9 in TUnixSystem::DispatchSignals (this=0x55bd15241770, sig=kSigAbort) at /home/vpadulan/programs/rootproject/rootsrc/core/unix/src/TUnixSystem.cxx:3610; #7 0x00007f4d2f51d544 in SigHandler (sig=kSigAbort) at /home/vpadulan/programs/rootproject/rootsrc/core/unix/src/TUnixSystem.cxx:395; #8 0x00007f4d2f52554f in sighandler (sig=6) at /home/vpadulan/programs/rootproject/rootsrc/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00007f4d6813bc4c in __pthread_kill_implementation () from /lib64/libc.so.6; #11 0x00007f4d680eb9c6 in raise () from /lib64/libc.so.6; #12 0x00007f4d680d57f4 in abort () from /lib64/libc.so.6; #13 0x00007f4d683a3f3d in _Py_FatalErrorFormat () from /lib64/libpython3.10.so.1.0; #14 0x00007f4d683532d8 in _enter_buffered_busy.cold () from /lib64/libpython3.10.so.1.0; #15 0x00007f4d6846b95e in buffered_flush () from /lib64/libpython3.10.so.1.0; #16 0x00007f4d683d0c24 in method_vectorcall_NOARGS () from /lib64/libpython3.10.so.1.0; #17 0x00007f4d683dfdae in PyObject_VectorcallMethod () from /lib64/libpython3.10.so.1.0; #18 0x00007f4d6846b70e in _io_TextIOWrapper_flush () from /lib64/libpython3.10.so.1.0; #19 0x00007f4d683d0c24 in method_vectorcall_NOARGS () from /lib64/libpython3.10.so.1.0; #20 0x00007f4d683dfdae in PyObject_VectorcallMethod () from /lib64/libpython3.10.so.1.0; #21 0x00007f4d6846e605 in flush_std_files () from /lib64/libpython3.10.so.1.0; #22 0x00007f4d6837f800 in fatal_error.lto_priv () from /lib64/libpython3.10.so.1.0; #23 0x00007f4d683a3ffa in _Py_FatalErrorFormat () from /lib64/libpython3.10.so.1.0; #24 0x00007f4d683532d8 in _e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515#issuecomment-1271819714:2193,abort,abort,2193,https://root.cern,https://github.com/root-project/root/issues/11515#issuecomment-1271819714,1,['abort'],['abort']
Safety,"train a model with TMVA.; const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";; train(filename);. // Next, we load the model from the TMVA XML file.; RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during; // training, you can ask the model for it.; auto variables = model.GetVariableNames();; std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:; // 1) Event-by-event inference; // 2) Batch inference on data of multiple events; // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference; // The event-by-event inference takes the values of the variables as a std::vector<float>.; // Note that the return value is as well a std::vector<float> since the reader; // is also capable to process models with multiple outputs.; auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});; std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events; // For batch inference, the data needs to be structured as a matrix. For this; // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame; // and the AsTensor utility to make the read-out from the ROOT file.; ROOT::RDataFrame df(""TreeS"", filename);; auto df2 = df.Range(3); // Read only 10 events; auto x = AsTensor<float>(df2, variables);; std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);; std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph; // We write a small lambda function that performs for us the inference on; // a dataframe to omit code duplication.; auto make_histo = [&](const std::string &treename) {; ROOT::RDataFrame df(treename, filename);; auto df2 = df.Define(""y"", Pred",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:1336,Predict,Predict,1336,https://root.cern,https://github.com/root-project/root/pull/3321,1,['Predict'],['Predict']
Safety,"tringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2227: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda.cu.o] Error 1; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooJeffreysPrior.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooKeysPdf.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLandau.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLognormal.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:4784,detect,detected,4784,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,1,['detect'],['detected']
Safety,"tringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2253: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda/CudaMatrix.cu.o] Error 1; make[2]: *** Waiting for unfinished jobs....; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooDecay.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooDstD0BG.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooExponential.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctor1DBinding.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctorBinding.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of typ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:1162,detect,detected,1162,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,1,['detect'],['detected']
Safety,"tringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda/CudaTensor.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2266: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda/CudaTensor.cu.o] Error 1; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGamma.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGaussian.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGaussModel.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGExpModel.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooHistConstraint.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooIntegralMorph.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:2954,detect,detected,2954,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,1,['detect'],['detected']
Safety,"try *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3290,avoid,avoids,3290,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['avoid'],['avoids']
Safety,"ttp://root.cern.ch/files/tmva_class_example.root"";; train(filename);. // Next, we load the model from the TMVA XML file.; RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during; // training, you can ask the model for it.; auto variables = model.GetVariableNames();; std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:; // 1) Event-by-event inference; // 2) Batch inference on data of multiple events; // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference; // The event-by-event inference takes the values of the variables as a std::vector<float>.; // Note that the return value is as well a std::vector<float> since the reader; // is also capable to process models with multiple outputs.; auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});; std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events; // For batch inference, the data needs to be structured as a matrix. For this; // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame; // and the AsTensor utility to make the read-out from the ROOT file.; ROOT::RDataFrame df(""TreeS"", filename);; auto df2 = df.Range(3); // Read only 10 events; auto x = AsTensor<float>(df2, variables);; std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);; std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph; // We write a small lambda function that performs for us the inference on; // a dataframe to omit code duplication.; auto make_histo = [&](const std::string &treename) {; ROOT::RDataFrame df(treename, filename);; auto df2 = df.Define(""y"", Predict<4, float>(model), variables);; return df2.Histo1D({""""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:1412,predict,prediction,1412,https://root.cern,https://github.com/root-project/root/pull/3321,1,['predict'],['prediction']
Safety,ty checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:15352,safe,safeBuffer,15352,https://root.cern,https://github.com/root-project/root/issues/7411,1,['safe'],['safeBuffer']
Safety,"ubuntu@root-cmake-devel:~/git/root/builddir$ cmake -DCMAKE_PREFIX_PATH=~/temp/install -Dminimal=ON -Dbuiltin_xrootd=OFF -Dxrootd=ON -Dfail-on-missing=ON -Dbuiltin_nlohmannjson=ON -Dbuiltin_lzma=ON -Dbuiltin_xxhash=ON -Dbuiltin_zstd=ON -Dbuiltin_lz4=ON -Dbuiltin_afterimage=ON -Dbuiltin_gl2ps=ON -DCMAKE_VERBOSE_MAKEFILE=ON ../; -- The C compiler identification is GNU 9.4.0; -- The CXX compiler identification is GNU 9.4.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.25.1""); -- Detected ROOT_VERSION 6.29.01; -- Checking internet connectivity; -- Checking internet connectivity - found; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 9, minor version 4; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.4.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:1050,Detect,Detected,1050,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['Detect'],['Detected']
Safety,"uild\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/OpenMPKinds.def(303,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ConstructionContext.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegAllocPBQP.cpp(943,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/PointerUnion.h(205,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RenameIndependentSubregs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ArrayRef.h(137,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegisterUsageInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3986,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SafeStackColoring.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] . And 52 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11350#issuecomment-1245043134:4316,Safe,SafeStackColoring,4316,https://root.cern,https://github.com/root-project/root/pull/11350#issuecomment-1245043134,1,['Safe'],['SafeStackColoring']
Safety,"ull pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped). ```. @hahnjo, do you have a clue what to do here?. PS: It seems similar to RadeonOpenCompute/ROCm#1179",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:8651,detect,detected,8651,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,2,"['Abort', 'detect']","['Aborted', 'detected']"
Safety,"unction not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libEGPythia898309100d9_dictUmbrella.h); ```. ### Expected behavior; The build should succeed. ### To Reproduce; Configure current `master` with `cmake -DCMAKE_CXX_STANDARD=14` (or on a platform where this is detected as the default) and then switch to `CMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:10091,detect,detected,10091,https://root.cern,https://github.com/root-project/root/issues/8642,1,['detect'],['detected']
Safety,"utlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>> CApath: none; >>>>>> * Server certificate:; >>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>> * Peer's Certificate issuer is not recognized.; >>>>>> * Closing connection 0; >>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:4389,safe,safelinks,4389,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['safe'],['safelinks']
Safety,"v.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>; >> PING (137.138.28.175) 56(124) bytes of data.; >> ; >> --- ping statistics ---; >> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >> ; >> ***@***.*** ~]$ ; >> ; >> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>> ; >>> Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>?; >>> ; >>> Thanks,; >>> ; >>> Di; >>> ; >>>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ***@***.***>> wrote:; >>>> ; >>>> ﻿ Hi Axel,; >>>> ; >>>> I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; >>>> ; >>>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>> ; >>>> ; >>>>> ; >>>>>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uCliumeh1X0KTsDzvHcojQm9qfvqZ96DsLCqoTBDdgs%3D&reserved=0> ) I tried with curl but I get; >>>>>> ; >>>>>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=10rGCkpmGr%2B9fH%2Bkia72pl3SABkka%2Bj5DwU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:1501,safe,safelinks,1501,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['safe'],['safelinks']
Safety,v6-22: Fix issue #6670. Avoid infinite recursion from TClass::InheritsFrom.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6732:24,Avoid,Avoid,24,https://root.cern,https://github.com/root-project/root/pull/6732,1,['Avoid'],['Avoid']
Safety,v6-26: Avoid TPad::fFrame double delete when read from file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11849:7,Avoid,Avoid,7,https://root.cern,https://github.com/root-project/root/pull/11849,1,['Avoid'],['Avoid']
Safety,v6-28 Core: Avoid (indirect) memory hoarding in TPluginManager.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14375:12,Avoid,Avoid,12,https://root.cern,https://github.com/root-project/root/pull/14375,1,['Avoid'],['Avoid']
Safety,v6-30 Core: Avoid (indirect) memory hoarding in TPluginManager.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14374:12,Avoid,Avoid,12,https://root.cern,https://github.com/root-project/root/pull/14374,1,['Avoid'],['Avoid']
Safety,v616 Avoid crash in IO and Prevent split in presence of Streamer free function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4194:5,Avoid,Avoid,5,https://root.cern,https://github.com/root-project/root/pull/4194,1,['Avoid'],['Avoid']
Safety,v618 Avoid crash in IO and Prevent split in presence of Streamer free function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4193:5,Avoid,Avoid,5,https://root.cern,https://github.com/root-project/root/pull/4193,1,['Avoid'],['Avoid']
Safety,v620: Avoid streaming a copy of the TPaveStats parent during the TH1 cloning process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5635:6,Avoid,Avoid,6,https://root.cern,https://github.com/root-project/root/pull/5635,1,['Avoid'],['Avoid']
Safety,v620: Avoid template instantiation during tear down.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5463:6,Avoid,Avoid,6,https://root.cern,https://github.com/root-project/root/pull/5463,1,['Avoid'],['Avoid']
Safety,"vc++ -DCMAKE_C_COMPILER=nvc -DCMAKE_CXX_FLAGS=-std=c++17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF -Dwebgui=OFF -Dsqlite=OFF -Dssl=OFF -Dmysql=OFF -Doracle=OFF -Dpgsql=OFF -Ddavix=OFF -Dgfal=OFF -Dimt=OFF -Dbuiltin_llvm=OFF -DC_SUPPORTS_FPIC=true -DCXX_SUPPORTS_FPIC=true -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"" -DCMAKE_INSTALL_PREFIX=/opt/root/v6-30-03_nvhpc239 ../src; ```. However this results in the following error:; ```; rootcling_stage1: /bld6/root/bld_nvhpc/interpreter/llvm-project/clang/include/clang/Driver/Options.inc:7564: lambda []()->auto::operator()()->auto: Assertion `ValuesWereAdded && ""Couldn't add values to OptTable!""' failed.; #0 0x000000000cb9e5b1 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x000000000cb9bf7e SignalHandler(int) Signals.cpp:0:0; #2 0x00007ffb0ce97630 __restore_rt sigaction.c:0:0; #3 0x00007ffb0a4f4387 raise (/lib64/libc.so.6+0x36387); #4 0x00007ffb0a4f5a78 abort (/lib64/libc.so.6+0x37a78); #5 0x00007ffb0a4ed1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #6 0x00007ffb0a4ed252 (/lib64/libc.so.6+0x2f252); #7 0x000000000628a2f0 clang::driver::getDriverOptTable()::'lambda'()::operator()() const /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:7569:1; #8 0x000000000628a22a clang::driver::getDriverOptTable() /bld6/root/src/interpreter/llvm-project/clang/lib/Driver/DriverOptions.cpp:43:1; #9 0x0000000004324c6c cling::CompilerOptions::Parse(int, char const* const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) /bld6/root/src/interpreter/cling/lib/Interpreter/InvocationOptions.cpp:152:1; #10 0x00000000043257e4 cling::InvocationOptions::InvocationOptions(int, char const* const*) /bld6/root/src/interpreter/cling/lib/Interpreter/InvocationOptions.cpp:265:1; #11 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250:1826,abort,abort,1826,https://root.cern,https://github.com/root-project/root/issues/14250,1,['abort'],['abort']
Safety,"w users can register a drawing of a result histogram in the same way in single- and multi-thread analysis, like this:. ```c++; // Draw partial result on canvas every 500 events; TCanvas c(""c"", ""Running event loop..."");; h.OnPartialResult(100, [&c](TH1D &h_) {; c.cd();; h_.Draw();; c.Update();; });; ```; @Axel-Naumann users can open a `TBrowser` and check result updates while the event loop is running quite easily:; ```c++; // create ""TDFResults"" directory in TBrowser; TBrowser b(""b"", ""event loop peeper"");; TMemFile m(""TDFResults"", ""RECREATE"");. // add partial result to the ""TDFResults""; m.Browse(&b); // it would be cool if we could change the current directory in the TBrowser to `TDFResults` here; h.OnPartialResult(decltype(h)::kOnce, [&m](TH1D &h_) { m.Add(&h_); });. // call ProcessEvents every once in a while during the event loop to allow users to navigate the TBrowser; h.OnPartialResult(50, [](TH1D &hist) { gSystem->ProcessEvents(); });; ```; @peremato here is how one would implement a thread-safe progress bar for a TDF multi-thread analysis; ```c++; // Update progress bar every 100 events; std::string progress;; std::mutex bar_mutex;; c.OnPartialResultSlot(nEvents / 100, [&progress, &bar_mutex](unsigned int, ULong64_t &c_) {; std::lock_guard<std::mutex> lg(bar_mutex);; progress.push_back('#');; std::cout << ""\r["" << std::left << std::setw(100) << progress << ']' << std::flush;; });; ```. Here are the corresponding self-contained, fully working code examples:; [draw_partial_result.txt](https://github.com/root-project/root/files/1327464/draw_partial_result.txt); [inspect_analysis.txt](https://github.com/root-project/root/files/1327466/inspect_analysis.txt); [progress_bar.txt](https://github.com/root-project/root/files/1327469/progress_bar.txt); (for some reason github does not allow files with `.cpp` extension :man_shrugging: ). For common-enough callbacks one can always imagine to provide helper functions of course.; I like this feature a lot. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331722007:1022,safe,safe,1022,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331722007,2,['safe'],['safe']
Safety,"ware Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1433,safe,safe-path,1433,https://root.cern,https://github.com/root-project/root/pull/11882,1,['safe'],['safe-path']
Safety,"we get; Result from TTree:Scan(""x:treefriend.y""):; ```; Error in <TTreeFormula::Compile>: Bad numerical expression : ""treefriend.y""; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * *; * 1 * 1 * *; * 2 * 2 * *; * 3 * 3 * *; * 4 * 4 * *; * 5 * 5 * *; * 6 * 6 * *; * 7 * 7 * *; * 8 * 8 * *; ************************************; ```; Result from rdf.Display()->Print():; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch treefriend.y is contained in a Friend TTree that is not directly attached to the main.; This is not yet supported by TTreeReader.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; Aborted (core dumped); ```; Which are both somewhat unexpected since the friend chain has a name and it should be easy to distinguish its entries from the main tree. I do like better the RDataFrame (TTreeReader) error here though since it gives me somewhat of an hint that I need to do something about my friend chain. ## Sub-case 3.2; Somehow inconsistently, calling the friend variable just ""y"" works for TTree::Scan; Result from TTree:Scan(""x:y""):; ```; ************************************; * Row * x * y *; ************************************; * 0 * 0 * 0 *; * 1 * 1 * 1 *; * 2 * 2 * 2 *; * 3 * 3 * 0 *; * 4 * 4 * 1 *; * 5 * 5 * 2 *; * 6 * 6 * 0 *; * 7 * 7 * 1 *; * 8 * 8 * 2 *; ************************************; ```; But fortunately RDataFrame(TTreeReader) still gives the same error; Result from rdf.Display()->Print():; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch treefriend.y is contained in a Friend TTree that is not directly attached to the main.; This is not yet supported by TTreeReader.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:16059,Abort,Aborted,16059,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['Abort'],['Aborted']
Safety,"webdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=lnK7F9PwtLyhMgfW1BGV%2F3jGJQ2O5M9uq%2F4p66Y5ihI%3D&reserved=0>; >>>>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>>> *   Trying 2607:f8f0:660:3::36...; >>>>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>>>   CApath: none; >>>>>>>> * Server certificate:; >>>>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=6x%2BvqAwaP4JatJuGaFF%2FDau8refUUubCF0W9oyCbdgg%3D&reserved=0>,O=Grid,C=CA; >>>>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>>>> * common name: dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>; >>>>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>>> * Closing connection 0; >>>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:6385,safe,safelinks,6385,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,"webdav.lcg.triumf.ca?; > ; > Thanks,; > ; > Di; > ; >> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.***> wrote:; >> ; >> ﻿ Hi Axel,; >> ; >> I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; >> ; >> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >> ; >> ; >>> ; >>>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643127522%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=ieWzynOWVK%2BPOmP4TMbx4CxPX%2FiVAcbvEM8tjOw7c2k%3D&reserved=0> ) I tried with curl but I get; >>>> ; >>>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>>> * Trying 206.12.9.197:2880...; >>>> * TCP_NODELAY set; >>>> * Trying 2607:f8f0:660:3::36:2880...; >>>> * TCP_NODELAY set; >>>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>>> Is that expected?; >>>> ; >> ; >>> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:1483,safe,safelinks,1483,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['safe'],['safelinks']
Safety,webgui: avoid compiler warnings when Qt5 and/or CEF are not used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1964:8,avoid,avoid,8,https://root.cern,https://github.com/root-project/root/pull/1964,1,['avoid'],['avoid']
Safety,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there?. Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14728#issuecomment-2002542194:498,recover,recover,498,https://root.cern,https://github.com/root-project/root/pull/14728#issuecomment-2002542194,1,['recover'],['recover']
Safety,x(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyEval_EvalCodeWithName(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyEval_EvalCodeWithName(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyEval_GetFuncDesc(); python38!PyEval_EvalFrameDefault(); python38!PyObject_Call(); python38!PyFunction_Vectorcall(); python38!PyMethod_Self(); python38!PyVectorcall_Call(); python38!PyOS_SigintEvent(); python38!PyThread_init_thread(); ucrtbase!recalloc(); KERNEL32!BaseThreadInitThunk(); ntdll!RtlUserThreadStart(). ==========================================; ============= END STACKTRACE =============; ==========================================. *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; libcppyy_backend3_8!??; libCore!TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!get_wpgmptr(); ucrtbase!get_wpgmptr(); ucrtbase!wassert(); libCling!TClingValue::ToTypeAndValueString(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TCling::LoadEnums(); libCore!TListOfEnums::Load(); libCore!TClass::GetListOfEnums(); libCling!TCling::InvalidateCachedDecl(); libCling!TCling::UpdateListsOnUnloaded(); libCling!TCling::UpdateListsOnUnloaded(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::runtime::internal::EvaluateDynamicExpression(); libCling!cling::Value::print(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingValue::ToTypeAndValueString(); libCling!TClingTypedefInfo::Init(); libCling!TCli,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:23573,abort,abort,23573,https://root.cern,https://github.com/root-project/root/issues/14302,1,['abort'],['abort']
Safety,"xaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>> ; >>>>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>> bundle file isn't adequate, you can specify an alternate file; >>>>>>> using the --cacert option.; >>>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>> the bundle, the certificate verification probably failed due to a; >>>>>>> problem with the certificate (it might be expired, or the name might; >>>>>>> not match the domain name in the URL).; >>>>>>> If you'd like to turn off curl's verification of the certificate, use; >>>>>>> the -k (or --insecure) option.; >>>>>>> ***@***.*** t5]$ ; >>>>>> ; >>>>>> ; >>>>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>> or; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:7341,safe,safelinks,7341,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['safe'],['safelinks']
Safety,"xx:3189; #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923; #10 TBranch::FillImpl (this=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:3791,Detect,Detector,3791,https://root.cern,https://github.com/root-project/root/issues/8931,1,['Detect'],['Detector']
Safety,xx:999; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1000; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158:32: warning: Value stored to 'nbPnts' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163:4: warning: Value stored to 'nbSegs' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbSegs' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168:4: warning: Value stored to 'nbPols' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPols' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533; /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745:15: warning: Missing reference in range-for with non trivial type (std::__cxx11::basic_string<char>) [clazy-range-loop]; 1: const in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; 2: & in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; /opt/root_src/geom/geom/src/TGeoTorus.cxx:297:13: warning: Value stored to 'snext' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:297; /opt/root_src/geom/geom/src/TGeoTorus.cxx:305:13: warning: Value stored to 'dphi' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dphi' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:305; /opt/root_src/geom/geom/src/TGeoTorus.cxx:378:13: warning: Value stored to 'd,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:63783,safe,safe,63783,https://root.cern,https://github.com/root-project/root/issues/7428,1,['safe'],['safe']
Safety,"y default, using a ; >>>>>>>> ""bundle""; >>>>>>>>  of Certificate Authority (CA) public keys (CA certs). If the ; >>>>>>>> default; >>>>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>>>  using the --cacert option.; >>>>>>>> If this HTTPS server uses a certificate signed by a CA ; >>>>>>>> represented in; >>>>>>>>  the bundle, the certificate verification probably failed due to a; >>>>>>>>  problem with the certificate (it might be expired, or the name ; >>>>>>>> might; >>>>>>>>  not match the domain name in the URL).; >>>>>>>> If you'd like to turn off curl's verification of the ; >>>>>>>> certificate, use; >>>>>>>>  the -k (or --insecure) option.; >>>>>>>> ***@***.*** t5]$; >>>>>>>; >>>>>>>; >>>>>>> I am unfamiliar with how to use curl with X509 and everything I ; >>>>>>> tried so far has not worked. eg; >>>>>>> *curl*-v ; >>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=MrLsQ1shn0qv2itSXIVUc3da2Y5VUnltiBnYwHs6YjE%3D&reserved=0> ; >>>>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>>> or; >>>>>>> *curl*-v ; >>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:8772,safe,safelinks,8772,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['safe'],['safelinks']
Safety,"y law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root/multicore/processExecutorH1Test...; (gdb) run; Starting program: /srv/root/roottest-build/root/multicore/processExecutorH1Test ; warning: File ""/usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py; line to your configuration file ""/home/amadio/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; +++ Executing tProcessExecutorH1Test ......................................... +++; [Detaching after vfork from child process 340387]; [Detaching after vfork from child process 340389]; [Detaching after vfork from child process 340391]; [Detaching after vfork from child process 340393]; [Detaching after vfork from child process 341564]; [Detaching after vfork from child process 341566]; [Detaching after vfork from child process 341606]; [Detaching after fork from child process 341608]; [Detaching after fork from child process 341609]; [Detaching after fork from child process 341610]; [Detaching after vfork from child process 341705]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:1386,safe,safe-path,1386,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,1,['safe'],['safe-path']
Safety,"yDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:4286,safe,safe,4286,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,2,['safe'],['safe']
Safety,"yFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428508454%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=nfxduy6kAYVqAb9Y561kDpg578YKts2gajMGy3hd9fo%3D&reserved=0>; >>>>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>> * Trying 2607:f8f0:660:3::36...; >>>>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>> CApath: none; >>>>> * Server certificate:; >>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>> * Peer's Certificate issuer is not recognized.; >>>>> * Closing connection 0; >>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:3901,safe,safelinks,3901,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['safe'],['safelinks']
Safety,"yle) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2118,Redund,Redundant,2118,https://root.cern,https://github.com/root-project/root/pull/1343,1,['Redund'],['Redundant']
Safety,your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN4llvm3sys15PrintStackTraceERNS_11raw_ostreamEi+0x3c)[0x55e9492a6288]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x17fb34b)[0x55e9492a634b]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN4llvm3sys17RunSignalHandlersEv+0x88)[0x55e9492a3eac]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x17fabfe)[0x55e9492a5bfe]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN9textinput18TerminalConfigUnix12HandleSignalEi+0x76)[0x55e9492f41a8]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x1848ed8)[0x55e9492f3ed8]; > /usr/lib/libc.so.6(+0x3e8e0)[0x7f264623e8e0]; > /usr/lib/libc.so.6(+0x8e36c)[0x7f264628e36c]; > /usr/lib/libc.so.6(raise+0x18)[0x7f264623e838]; > /usr/lib/libc.so.6(abort+0xcf)[0x7f2646228535]; > /usr/lib/libc.so.6(+0x2845c)[0x7f264622845c]; > /usr/lib/libc.so.6(+0x37366)[0x7f2646237366]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction11forceAppendENS0_13DelayCallInfoE+0x14f)[0x55e9491826bb]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction6appendENS0_13DelayCallInfoE+0xaa)[0x55e949182568]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling13DeclCollector18HandleTopLevelDeclEN5clang12DeclGroupRefE+0xc4)[0x55e948f99f2e]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang17MultiplexConsumer18HandleTopLevelDeclENS_12DeclGroupRefE+0x89)[0x55e94b42f5bf]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang4Sema23InstantiateClassMembersENS_14SourceLocationEPNS_13CXXRecordDeclERKNS_30MultiLevelTemplateArgumentListENS_26TemplateSpecializationKindE+0x2dc)[0x55e94c7a0f84]; > ./cling-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192249515:5577,abort,abort,5577,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192249515,1,['abort'],['abort']
Safety,"your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:914,recover,recovered,914,https://root.cern,https://github.com/root-project/root/issues/8952,2,['recover'],['recovered']
Safety,"zeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:2653,abort,aborting,2653,https://root.cern,https://github.com/root-project/root/issues/12426,1,['abort'],['aborting']
Safety,"| Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now doe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644:1641,avoid,avoid,1641,https://root.cern,https://github.com/root-project/root/pull/11644,1,['avoid'],['avoid']
Safety,"}. declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*). declare dso_local i32 @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i32, i32, i32). declare dso_local i8** @__cudaRegisterFatBinary(i8*). define dso_local void @__cuda_module_ctor_cling_module_6(i8*) {; %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); store i8** %2, i8*** @__cuda_gpubin_handle, align 8; call void @__cuda_register_globals(i8** %2); call void @__cudaRegisterFatBinaryEnd(i8** %2); %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor_cling_module_6); ret void; }. declare dso_local void @__cudaRegisterFatBinaryEnd(i8**). declare dso_local void @__cudaUnregisterFatBinary(i8**). define dso_local void @__cuda_module_dtor_cling_module_6(i8*) {; %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8; call void @__cudaUnregisterFatBinary(i8** %2); ret void; }. declare dso_local i32 @atexit(void (i8*)*). ; Function Attrs: nounwind; declare void @llvm.stackprotector(i8*, i8**) #2. attributes #0 = { noinline uwtable ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-frame-pointer-elim-non-leaf"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""x86-64"" ""target-features""=""+cx8,+fxsr,+mmx,+sse,+sse2,+x87"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #1 = { argmemonly nounwind }; attributes #2 = { nounwind }. !llvm.module.flags = !{!0, !1}; !llvm.ident = !{!2}. !0 = !{i32 2, !""SDK Version"", [2 x i32] [i32 10, i32 1]}; !1 = !{i32 1, !""wchar_size"", i32 4}; !2 = !{!""clang version 9.0.1 (http://root.cern.ch/git/clang.git 535acc218f73a05f5602c950898dafda8a45feb7) (http://root.cern.ch/git/llvm.git c41338c59334340ee4d85a7c9bbdf49a4f59f76b)""}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:22930,unsafe,unsafe-fp-math,22930,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,1,['unsafe'],['unsafe-fp-math']
Safety,"~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8129:4402,Safe,SafeDelete,4402,https://root.cern,https://github.com/root-project/root/issues/8129,1,['Safe'],['SafeDelete']
Safety,"¡De nada, @ferdymercury!. Ooops, sorry! To be honest, I was expecting far less changes. The generated diff is impossible to review by the corresponding maintainers of each area. :-(. Also, as already discussed in the PR, to avoid diverging too much from upstream LLVM, we avoid patching the ROOT's fork unless strictly required to make Cling work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-794387737:224,avoid,avoid,224,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-794387737,2,['avoid'],['avoid']
Safety,"… separate files containing different volumes. (Markus Frank). This patch provides the method TGDMLWrite::WriteGDMLfile allowing to write the gdml corresponding to a volume hierarchy (like a detector). A geometry can be therefore exported in pieces, and the gdml parser was modified to avoid duplication of materials and other components upon reading.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1434:191,detect,detector,191,https://root.cern,https://github.com/root-project/root/pull/1434,2,"['avoid', 'detect']","['avoid', 'detector']"
Safety,"…akeLists.txt. This commit reverts some of the changes introduced in c9cedcc.; ROOT_LINKER_LIBRARY insures that the shared library is generated with; the suffix '.so', avoiding troubles in MacOS where it would be generated; with '.dylib' otherwise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5478:168,avoid,avoiding,168,https://root.cern,https://github.com/root-project/root/pull/5478,1,['avoid'],['avoiding']
Safety,"…alizing. When we deserialize a function with noexcept(constant_expression) qualifier the; constant_expression itself might trigger deserialization. Triggering nested; deserializations is not supported in clang. Currently we just removed the assert but this shows problems when we go to; higher version of stl's (such as the one in ubuntu19) which more heavily; rely on constexpr. We segfault in cases where we do equivalent of:; ```; cling::Interpreter *interp = ((TCling*)gCling)->GetInterpreterImpl();; auto& lh = interp->getLookupHelper();; auto diag = cling::LookupHelper::WithDiagnostics;; auto S = lh.findScope(""ROOT::Internal::RDF"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<float>"", diag);; lh.findAnyFunction(S, ""RDataFrameTake<std::vector<float>>"", diag);; ```. This patch delays the unsafe computation of type of the deserialized function; and thus the evaluation of the exception qualifier. This should fix the failing; pyunittests-pyroot-rdataframe-asnumpy nightly on ubuntu 19. The red pill is applying llvm-mirror/clang@5d50602a8de220e1f0bbdd136e9a7be21a1b63c0. This will happen after releasing v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4656:799,unsafe,unsafe,799,https://root.cern,https://github.com/root-project/root/pull/4656,1,['unsafe'],['unsafe']
Safety,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15558:1,avoid,avoid,1,https://root.cern,https://github.com/root-project/root/pull/15558,1,['avoid'],['avoid']
Safety,"…ent and NumPy. As found out after investigating this failure:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84131/console. PythonX_EXECUTABLE, if set when find_package(PythonX) is called one; first time, is unset if find_package(PythonX) fails when called the; second time (i.e. whether Developmnet or NumPy are not found). To avoid that, as a consequence, PYTHON_EXECUTABLE is not set at all, we; set it (along with other variables) right after the first call to; find_package(PythonX).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5764:356,avoid,avoid,356,https://root.cern,https://github.com/root-project/root/pull/5764,1,['avoid'],['avoid']
Safety,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4944:18,avoid,avoids,18,https://root.cern,https://github.com/root-project/root/pull/4944,1,['avoid'],['avoids']
Safety,"…hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which; is currently loaded and gives a definition of current module (say, stl); and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps; and prebuilt pcms to other directory. stl and libc pcms should be; prebuilt, installed and used from installed directory, so this check is; redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3180:514,redund,redundant,514,https://root.cern,https://github.com/root-project/root/pull/3180,1,['redund'],['redundant']
Safety,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:1383,avoid,avoid,1383,https://root.cern,https://github.com/root-project/root/pull/5001,1,['avoid'],['avoid']
Safety,…ndows. Comment out part of the code to try to prevent false positive detection from several anti-virus engines on Windows (and multiproc is not supported on Windows anyway),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7006:70,detect,detection,70,https://root.cern,https://github.com/root-project/root/pull/7006,2,['detect'],['detection']
Safety,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2703#issuecomment-425405473:51,unsafe,unsafe,51,https://root.cern,https://github.com/root-project/root/pull/2703#issuecomment-425405473,1,['unsafe'],['unsafe']
Security," &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56: error: '__bucket_type' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:220:54: error: '__node_base' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1412#issuecomment-361415584:1450,hash,hasher,1450,https://root.cern,https://github.com/root-project/root/pull/1412#issuecomment-361415584,2,['hash'],"['hash', 'hasher']"
Security, '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15011,secur,security,15011,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/95b96af1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58700,secur,security,58700,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:41988,secur,security,41988,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16230,secur,security,16230,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-securi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:27533,secur,security,27533,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46928,secur,security,46928,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49572,secur,security,49572,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TFolder.cxx:331; /opt/root_src/core/base/src/TPRegexp.cxx:416:10: warning: Value stored to 'nrMatch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:115; /opt/root_src/core/base/src/TQConnection.cxx:186:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:110130,secur,security,110130,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security, 'z' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'z' is never read in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370:19: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:94825,secur,security,94825,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security, '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Null pointer value stored to field 'typevec' in /opt/root_src/core/clib/src/Demangle.c:505; 6: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 7: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:507; 8: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:519; 9: expanded from macro 'AUTO_DEMANGLING' in /opt/root_src/core/clib/res/Demangle.h:56; 10: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:519; 11: expanded from macro 'AUTO_DEMANGLING' in /opt/root_src/core/clib/res/Demangle.h:56; 12: Assuming the condition ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:13468,access,access,13468,https://root.cern,https://github.com/root-project/root/issues/7422,1,['access'],['access']
Security, (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176; 11: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1146:25: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:12778,Access,Access,12778,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,2,['Access'],['Access']
Security," (this=0x1ab6a80, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #12 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1ab6a80, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/unordered_map.h:102; #13 std::_Destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__pointer=0x1ab6a80) at /usr/include/c++/12/bits/stl_construct.h:151; #14 std::allocator_traits<std::allocator<void> >::destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__p=0x1ab6a80) at /usr/include/c++/12/bits/alloc_traits.h:648; #15 std::_Sp_counted_ptr_inplace<std::unordered_map<std::__cxx11::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:7470,hash,hash,7470,https://root.cern,https://github.com/root-project/root/issues/12023,1,['hash'],['hash']
Security," (this=0x1cf6570, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #19 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1cf6570, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/unordered_map.h:102; #20 std::_Destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__pointer=0x1cf6570) at /usr/include/c++/12/bits/stl_construct.h:151; #21 std::allocator_traits<std::allocator<void> >::destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__p=0x1cf6570) at /usr/include/c++/12/bits/alloc_traits.h:648; #22 std::_Sp_counted_ptr_inplace<std::unordered_map<std::__cxx11::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:18323,hash,hash,18323,https://root.cern,https://github.com/root-project/root/issues/12023,2,['hash'],['hash']
Security," * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>> CApath: none; >>>>> * Server certificate:; >>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>> * Peer's Certificate issuer is not recognized.; >>>>> * Closing connection 0; >>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>> ; >>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>> bundle file isn't adequate, you can specify an alternate file; >>>>> using the --cacert option.; >>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>> the bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:4483,Certificate,Certificate,4483,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,2,['Certificate'],['Certificate']
Security, * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2437,secur,security,2437,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2930,secur,security,2930,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23923,secur,security,23923,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11317,secur,security,11317,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2341,secur,security,2341,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security," - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:220:54: error: '__node_base' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56: error: '__bucket_type' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1412#issuecomment-361415584:1166,hash,hash,1166,https://root.cern,https://github.com/root-project/root/pull/1412#issuecomment-361415584,1,['hash'],['hash']
Security, -u` -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root -o /dev/null; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:1244,secur,security,1244,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security," /Users/sftnight/build/workspace/root-pullrequests-build/root/core/clingutils/src/TClingUtils.cxx:4003; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] TClingDataMemberInfo::TypeTrueName(ROOT::TMetaUtils::TNormalizedCtxt const&) const /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingDataMemberInfo.cxx:609; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] TCling::DataMemberInfo_TypeTrueName(DataMemberInfo_t*) const /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:8611; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] TCling::DeepAutoLoadImpl(char const*, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, bool) /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:6181; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] TCling::AutoLoad(char const*, bool) /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:6260; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.6.29.01.so] TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) /Users/sftnight/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:3104; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.6.29.01.so] TClass::GetClass(char const*, bool, bool) /Users/sftnight/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:2970; [/Users/sftn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13290:4054,hash,hash,4054,https://root.cern,https://github.com/root-project/root/pull/13290,1,['hash'],['hash']
Security, /opt/root_src/build/rmkdepend/main.c:403; 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495; 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495; 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498; 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498; 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659; 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659; 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567; /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:35010,secur,security,35010,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security, /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:14367,secur,security,14367,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47670,Access,Access,47670,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49365,Access,Access,49365,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it d,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:73427,secur,security,73427,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security," 0x0000000000408271 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #26 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #29 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:30996,hash,hash,30996,https://root.cern,https://github.com/root-project/root/issues/12023,1,['hash'],['hash']
Security," 0x000000010d95af83 clang::Sema::diagnoseTypo(clang::TypoCorrection const&, clang::PartialDiagnostic const&, bool) + 51; 10 rootcling_stage1 0x000000010d6f0a39 clang::Sema::DiagnoseUnknownTypeName(clang::IdentifierInfo*&, clang::SourceLocation, clang::Scope*, clang::CXXScopeSpec*, clang::OpaquePtr<clang::QualType>&, bool) + 985; 11 rootcling_stage1 0x000000010d57ef20 clang::Parser::ParseImplicitInt(clang::DeclSpec&, clang::CXXScopeSpec*, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::ParsedAttributesWithRange&) + 2288; 12 rootcling_stage1 0x000000010d579427 clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) + 6855; 13 rootcling_stage1 0x000000010d5f8a6a clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) + 138; 14 rootcling_stage1 0x000000010d5f8725 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) + 373; 15 rootcling_stage1 0x000000010d5f7477 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 2423; 16 rootcling_stage1 0x000000010d5f641c clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) + 588; 17 rootcling_stage1 0x000000010cd68a90 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 2704; 18 rootcling_stage1 0x000000010cd6ca91 cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) + 81; 19 rootcling_stage1 0x000000010cd94044 cling::Interpreter::DeclareInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const + 884; 20 rootcling_stage1 0x000000010cd9110e cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3586:2176,Access,AccessSpecifier,2176,https://root.cern,https://github.com/root-project/root/pull/3586,1,['Access'],['AccessSpecifier']
Security," 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x753BA23: std::_Hashtab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:70216,hash,hash,70216,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31655/testReport/projectroot.m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401785227:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401785227,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31664/testReport/projectroot.m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401790307:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401790307,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394339120:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394339120,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-410833810:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-410833810,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393586302:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393586302,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393644259:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393644259,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_semaphore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-394741633:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-394741633,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28469/testReport/projectroo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2125#issuecomment-393740963:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2125#issuecomment-393740963,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28709/testReport/projectroo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394293761:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394293761,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29705/testReport/projectroot.roottest.pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396066340:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396066340,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29736/testReport/projectroot.roottest.pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396162096:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396162096,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37832/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414965082:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414965082,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30090/testReport/projectroot.io.io/test/gtest_io_io_test_te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396975222:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396975222,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30136/testReport/projectroot.t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2192#issuecomment-397195445:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2192#issuecomment-397195445,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/testReport/projectroot.bindings.p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398086881:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398086881,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.math",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31418/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400455069:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400455069,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31484/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400820416:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400820416,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36568/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-411685113:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-411685113,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36577/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411689618:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411689618,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36743/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411882917:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411882917,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36752/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411900558:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411900558,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36864/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412084096:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412084096,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36873/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412090993:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412090993,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37080/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412985127:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412985127,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37513/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414352157:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414352157,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30217/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397357824:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397357824,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411401046:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411401046,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411478809:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411478809,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30614/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398742839:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398742839,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30623/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220#issuecomment-398762202:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2220#issuecomment-398762202,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30632/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2221#issuecomment-398776137:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2221#issuecomment-398776137,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30650/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398788089:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398788089,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execNamingMatchesNoHeader_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-409268102:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-409268102,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30389/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398001738:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398001738,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.treeformula.formulaio.roottest_root_treeformula_formulaio_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36530/testReport/p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411495922:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411495922,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34984/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-409881305:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-409881305,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35889/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Optimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33809/testReport/projectroot.tmva.tmva.te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408399396:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408399396,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-409967337:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-409967337,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410083254:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410083254,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410090281:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410090281,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,2,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38691/testReport/projectroot.tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2523#issuecomment-416212209:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2523#issuecomment-416212209,2,['access'],['accessing']
Security," 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | wc -l; 402; ```. ## This PR. ```; time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)""; -1; 3000. real	0m0.805s; user	0m0.612s; sys	0m0.191s; ```. ```; nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l; 1; nm -C $ROOTSYS/lib/*.so | grep kError | wc -l; 27; ```. ```; strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 1 -1; 1 3000; 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | wc -l; 402; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867398677:2944,access,access,2944,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867398677,1,['access'],['access']
Security, 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:30738,secur,security,30738,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:26842,Access,Access,26842,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security," <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that ROOT 6.26.10+python3.9 does not have this issue, so maybe some change in the python binding fixed this. Unfortunately I don't have access to python3.9 right now to test it myself. But I tested ROOT 6.26.10+python3.8 and the issue persists there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:2268,access,access,2268,https://root.cern,https://github.com/root-project/root/issues/12182,1,['access'],['access']
Security, <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:16223,secur,security,16223,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security," <TUnixSystem::Load>: loaded library /home/jun/dev/root/Debug/lib/libMathCore.so, status 0; Module 'Core' already loaded for 'TSignalHandler'; Module 'Core' already loaded for 'TSignalHandler'; Module 'Core' already loaded for 'TSignalHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TSignalHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TSignalHandler. Module 'Core' already loaded for 'TSysEvtHandler'; Module 'Core' already loaded for 'TSysEvtHandler'; Module 'Core' already loaded for 'TSysEvtHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TSysEvtHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TSysEvtHandler. Module 'Core' already loaded for 'TQObject'; Module 'MathCore' already loaded for 'Hash'; Module 'Core' already loaded for 'Hash'; Module 'MathCore' already loaded for 'Hash'; Module 'Core' already loaded for 'Hash'; Module 'MathCore' already loaded for 'Hash'; Module 'Core' already loaded for 'Hash'; Module 'Core' already loaded for 'TQObject'; Module 'Core' already loaded for 'TQObject'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TQObject; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TQObject. Module 'Core' already loaded for 'TFileHandler'; Module 'Core' already loaded for 'TFileHandler'; Module 'Core' already loaded for 'TFileHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TFileHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TFileHandler. Processing Demo.C...; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for Demo; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for Demo; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for Demo. Loading 'Minuit2' on demand for 'vec'; Module 'Minuit2' already loaded for 'vec'; Module 'Minuit2' already loaded for 'vec'; Info in <TInterpreter::TCling::AutoParse>: Trying to au",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:14799,Hash,Hash,14799,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,6,['Hash'],['Hash']
Security," <details>; <summary>Output when running ROOT</summary>; <div class=""snippet-clipboard-content notranslate position-relative overflow-auto""><pre class=""notranslate"">; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL18make_ROperator_AddERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Add(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL18make_ROperator_GRUERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_GRU(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:935,hash,hash,935,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security," = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:3458,Hash,HashValue,3458,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,9,"['Hash', 'hash']","['HashValue', 'hash']"
Security," >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793); ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589); ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:252776,hash,hash,252776,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security," >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793); ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589); ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:208668,hash,hash,208668,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,14,['hash'],"['hash', 'hashtable']"
Security, Assuming 'hp' is non-null in /opt/root_src/net/auth/src/rsalib.cxx:394; 11: Taking true branch in /opt/root_src/net/auth/src/rsalib.cxx:394; 12: Assuming 'ab' is < rsa_MAXBIT in /opt/root_src/net/auth/src/rsalib.cxx:406; 13: Loop condition is false. Execution continues on line 393 in /opt/root_src/net/auth/src/rsalib.cxx:406; 14: Assuming 'bi' is > 0 in /opt/root_src/net/auth/src/rsalib.cxx:393; 15: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 16: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:21697,secur,security,21697,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support leng,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:26788,secur,security,26788,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:4923,secur,security,4923,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7994,secur,security,7994,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:13829,secur,security,13829,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:12004,secur,security,12004,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51276,secur,security,51276,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25079,secur,security,25079,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetwe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:22352,secur,security,22352,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:44264,secur,security,44264,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:27529,secur,security,27529,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:33282,secur,security,33282,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:33937,secur,security,33937,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:35906,secur,security,35906,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:39184,secur,security,39184,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:39839,secur,security,39839,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:40494,secur,security,40494,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:43609,secur,security,43609,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:44919,secur,security,44919,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:45574,secur,security,45574,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security," Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:46229,secur,security,46229,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:38529,secur,security,38529,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:42954,secur,security,42954,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47457,Access,Access,47457,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:61019,Access,Access,61019,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62712,Access,Access,62712,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:67800,Access,Access,67800,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security," If no other means are used to avoid problems, and the compilation is successful, directly adding the same name to the std will potentially lead to many surprises. . If I understand correctly, the same is true for `std::string_view`. See `RStringView.hxx`:. ```C++; #if defined(R__HAS_STD_STRING_VIEW) || R__MSVC_LANG >= 201703L || __cplusplus >= 201703L. #include <string_view>. #else. # if defined(R__HAS_STD_EXPERIMENTAL_STRING_VIEW); # include <experimental/string_view>; # else; # include ""RWrap_libcpp_string_view.h""; # endif; ```. There is also a feature test macro. If someone uses C++17 and links to the ROOT compiled by C++14, they might encounter the same issue. I think it is a better practice to change a namespace (such as `cxx20::span`, `cxx17::string_view`, etc.) and provide the corresponding implicit conversion when the standard matches. In this way, users will not be disturbed to use normally, and these features are also available inside ROOT. The only symmetry break is in the API. Because the features exposed are not those of the standard library, users may need to manually convert them in some cases, so implicit conversion should be provided. . For example:. ```C++; #if __cplusplus >= 202002L; # include <span>; #endif. namespace cxx20 {. constexpr std::size_t dynamic_extent =; #if __cplusplus >= 202002L; std::dynamic_extent;; #else; /* something */;; #endif. template<class T, std::size_t Extent = dynamic_extent>; class span {. // ... here is the normal implementation. #if __cplusplus >= 202002L; public:; constexpr operator std::span<T, Extent>() noexcept;; constexpr span(const std::span<T, Extent>& other) noexcept;; constexpr span& operator=(const std::span<T, Extent>& other) noexcept;; #endif. // ... here is the normal implementation, too. };. }; ```. It seems that sometimes ROOT programming does not strictly follow the C++ standard... For me, it is not reassuring to rely on the well-defined situation of undefined behaviors. It is really tricky to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1253349273:1285,expose,exposed,1285,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1253349273,1,['expose'],['exposed']
Security," Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; ```.sh-session; [root@csresearch00 /scratch/root]# patch --verbose -p0 < ../tmp-products/root/v6_27_99f2/patch/fermi_root_6_27_99.patch ; [root@csresearch00 /scratch]# cd ../; [root@csresearch00 /scratch]# rm -rf build; [root@csresearch00 /scratch]# mkdir build; [root@csresearch00 /scratch]# setup -z ../tmp-products/root/v6_27_99f2/fakedb -z /products root v6_27_99f2 -q+c14:p3913:debug; [root@csresearch00 /scratch]# unsetup -j root; [root@csresearch00 /scratch]# setup ninja; [root@csresearch00 /scratch]# setup cmake v3_23_1; [root@csresearch00 /scratch]# cd build; [root@csresearch00 /scratch/build]# cmake -GNinja -DCMAKE_BUILD_TYPE=Debug '-DCMAKE_IGNORE_PATH=/usr/local/lib;/usr/local/include;/usr/local/bin' -DCMAKE_INSTALL_PREFIX=/scratch/install/root/v6_27_99f2/Linux64bit+3.10-2.17-c14-p3913-debug -Dall:BOOL=OFF -Dasan:BOOL=OFF -Dasserts:BOOL=ON -Dccache:BOOL=OFF -Dclingtest:BOOL=OFF -Dcoverage:BOOL=OFF -Dcxxmodules:BOOL=OFF -D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1403723179:2846,inject,injected,2846,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1403723179,1,['inject'],['injected']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:2632,secur,security,2632,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:3198,secur,security,3198,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:3764,secur,security,3764,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:4330,secur,security,4330,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:4896,secur,security,4896,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:5462,secur,security,5462,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:6028,secur,security,6028,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:6594,secur,security,6594,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security," ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312:1119,checksum,checksum,1119,https://root.cern,https://github.com/root-project/root/issues/16312,1,['checksum'],['checksum']
Security," access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 116 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142088/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roottest.root.tree.index.roottest_root_tree_index_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142088/testReport/projectroot.roottest.root.tree/index/roottest_root_tree_index_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10358#issuecomment-1092810286:2936,access,access,2936,https://root.cern,https://github.com/root-project/root/pull/10358#issuecomment-1092810286,1,['access'],['access']
Security," and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,2,['access'],['accessing']
Security," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:4331,secur,security,4331,https://root.cern,https://github.com/root-project/root/issues/10191,2,['secur'],['security']
Security, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:61515,secur,security,61515,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:39550,secur,security,39550,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:40194,secur,security,40194,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:23861,secur,security,23861,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Calling 'R__Inflate_block' in /opt/root_src/core/zip/src/ZInflate.c:1075; 2: Loop condition is true. Entering loop body in /opt/root_src/core/zip/src/ZInflate.c:1019; 3: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 4: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:1019; 5: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 6: Taking false branch in /opt/root_src/core/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:8332,secur,security,8332,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security, arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:27715,secur,security,27715,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276:4: warning: Value stored to 'height1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277:4: warning: Value stored to 'width1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'width1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673:9: warning: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') [clang-analyzer-core.NullDereference]; 1: Calling 'TSessionQueryFrame::Progress' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2739; 2: Assuming field 'fProof' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 3: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 4: Assuming 'sender' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 5: Left side of '||' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 6: Assuming 'sender' is equal to field 'fProof' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 7: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 8: Assuming field 'fActQuery' is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 9: Assuming pointer value is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:96873,Access,Access,96873,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security, as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:3498,secur,security,3498,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security, boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:40809,secur,security,40809,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:10817,secur,security,10817,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null po,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:13963,secur,security,13963,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security," certpath: sql:/etc/pki/nssdb; >>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>> CApath: none; >>>>> * Server certificate:; >>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>> * Peer's Certificate issuer is not recognized.; >>>>> * Closing connection 0; >>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>> ; >>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>> bundle file isn't adequate, you can specify an alternate file; >>>>> using the --cacert option.; >>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>> the bundle, the certificate verification probably failed due to a; >>>>> problem with the certificate (it might be expired, or the name might",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:4678,Certificate,Certificate,4678,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['Certificate'],['Certificate']
Security, checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:6522,secur,security,6522,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security, checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:57660,secur,security,57660,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17916; /opt/root_src/net/http/civetweb/civetweb.c:17939:29: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'master_thread_run' in /opt/root_src/net/http/civetweb/civetweb.c:18156; 2: Assuming 'ctx' is non-null in /opt/root_src/net/http/civetweb/civetweb.c:18021; 3: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18021; 4: Assuming field 'init_thread' is null in /opt/root_src/net/http/civetweb/civetweb.c:18049; 5: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18049; 6: Assuming field 'stop,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:70151,secur,security,70151,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security," commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/root-project/root/network/alerts). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863:2604,secur,security,2604,https://root.cern,https://github.com/root-project/root/pull/11863,6,"['Secur', 'secur']","['Security', 'security']"
Security," const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:613; #16 0x0000000000409c77 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #17 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #18 0x0000000000408271 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #19 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #20 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #21 ROOT::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:9846,hash,hash,9846,https://root.cern,https://github.com/root-project/root/issues/12023,1,['hash'],['hash']
Security," const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:613; #23 0x0000000000409c77 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #24 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #25 0x0000000000408271 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #26 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:20699,hash,hash,20699,https://root.cern,https://github.com/root-project/root/issues/12023,2,['hash'],['hash']
Security, copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:47237,secur,security,47237,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security, copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Return,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:47812,secur,security,47812,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security," curl -v ; >>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428508454%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=nfxduy6kAYVqAb9Y561kDpg578YKts2gajMGy3hd9fo%3D&reserved=0>; >>>> * About to connect() to webdav.lcg.triumf.ca ; >>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>> *   Trying 2607:f8f0:660:3::36...; >>>> * Connected to webdav.lcg.triumf.ca ; >>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>   CApath: none; >>>> * Server certificate:; >>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>> * start date: Apr 08 16:29:03 2021 GMT; >>>> * expire date: May 08 16:29:03 2022 GMT; >>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>> * Peer's Certificate issuer is not recognized.; >>>> * Closing connection 0; >>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:3600,certificate,certificate,3600,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['certificate'],['certificate']
Security," duplicate issues. - [X] Checked for duplicates. ### Description. In reference to https://github.com/root-project/root/pull/14287#issuecomment-1867435765 . > > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from.; >; > These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with -Druntime_cxxmodules=Off and see if we still get them at such high numbers... And indeed, a ROOT build with `-Druntime_cxxmodules=OFF` leads to the following results. ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 172 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 73 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 329 newfstatat(3, ; 29 newfstatat(4, ; 3482 newfstatat(AT_FDCWD, ; 480 openat(AT_FDCWD, ; 243 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95832, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95834, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95838, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95840, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; ```; time python -c ""import ROOT"". real	0m0.447s; user	0m0.317s; sys	0m0.130s; ```. Compared with current master which shows; ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:684,access,access,684,https://root.cern,https://github.com/root-project/root/issues/14296,1,['access'],['access']
Security," errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:3070,access,accessed,3070,https://root.cern,https://github.com/root-project/root/pull/8294,1,['access'],['accessed']
Security, failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49107,secur,security,49107,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' fr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36518,secur,security,36518,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28427,secur,security,28427,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security," false branch in /opt/root_src/core/clib/src/Demangle.c:1810; 67: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:19797,secur,security,19797,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security," for copyright info; ==774799== Command: python breaks.py; ==774799== ; 0; 0.9989327176093981; -0.43476438941434026; 0.7817962561955079; 0; 0.9989327176093981; ==774799== Invalid read of size 8; ==774799== at 0x13851E15: ??? (in /usr/lib64/root/libcppyy3_8.so.6.22.02); ==774799== by 0x4B9AD26: _PyObject_GenericGetAttrWithDict (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8E712: _PyEval_EvalFrameDefault (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8CD53: _PyEval_EvalCodeWithName (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C07E78: PyEval_EvalCodeEx (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C07E3A: PyEval_EvalCode (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C29067: ??? (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C28782: ??? (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B149CD: PyRun_FileExFlags (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B14185: PyRun_SimpleFileExFlags (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B0B350: ??? (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4BFB968: Py_BytesMain (in /usr/lib64/libpython3.8.so.1.0); ==774799== Address 0xbfad0a0da4191a40 is not stack'd, malloc'd or (recently) free'd; ==774799== ; *** Break *** segmentation violation; ```. ## Setup; ROOT 6.22/02 , Python 3.8.5 ; Fedora 32, all installed via dnf. (Can also reproduce on Centos 7 with same ROOT version self-compiled with gcc10/python3.7. Haven't tried other platforms.) . ## Additional context. This used to work fine before. We have a lot of data in a format similar to this, so changing the format to use a std::array< > is a bit annoying because I'm not 100% sure the automatic schema migration would work and would prefer not to find out the hard way (even though it should be binary compatible). Maybe it would but either way this seems like a regression. . And yes, there are other ways to access the data that probably work better... but it would be nice not to have to update old scripts!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:6578,access,access,6578,https://root.cern,https://github.com/root-project/root/issues/6468,1,['access'],['access']
Security," for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml; -- Configuring done; -- Generating done; -- Build files have been written to: /reproducer/build; + cmake --build build; (...skip...); ```; ```; [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm; cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:3128,hash,hash-style,3128,https://root.cern,https://github.com/root-project/root/issues/10478,1,['hash'],['hash-style']
Security," found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/ubuntu/git/root/build/unix/compiledata.sh; Making /home/ubuntu/git/root/builddir/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.4.0-139-generic; Processor 16 core Intel Core Processor (Broadwell, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 9.4.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: builtin_afterimage builtin_clang builtin_cling builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_xxhash builtin_zstd shared xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /home/ubuntu/git/root/builddir; ```; and after `make -j16`:; ```; [...]; [100%] Generating tutorials/hsimple.root; cd /home/ubuntu/git/root/builddir/tutorials && LD_LIBRARY_PATH=/home/ubuntu/git/root/builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/ubuntu/git/root/builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.09 seconds; (TFile *) 0x561956cbacf0; make[2]: Leaving directory '/home/ubuntu/git/root/builddir'; [100%] Built target hsimple; make[1]: Leaving directory '/home/ubuntu/git/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:8047,hash,hash-style,8047,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['hash'],['hash-style']
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19663,secur,security,19663,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:13345,secur,security,13345,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/et,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14021,secur,security,14021,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24299,secur,security,24299,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26046,secur,security,26046,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53082,secur,security,53082,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security," function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/MemoryRegulator.cxx:69:80: warning: cast between incompatible function types from ‘int (*)(PyObject*)’ {aka ‘int (*)(_object*)’} to ‘hashfunc’ {aka ‘long int (*)(_object*)’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPInstance.cxx:115:42: warning: cast between incompatible function types from ‘PyObject* (*)(CPyCppyy::CPPInstance*)’ {aka ‘_object* (*)(CPyCppyy::CPPInstance*)’} to ‘PyCFunction’ {aka ‘_object* (*)(_object*, _object*)’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPInstance.cxx:116:42: warning: cast between incompatible function types from ‘PyObject* (*)(CPyCppyy::CPPInstance*)’ {aka ‘_object* (*)(CPyCppyy::CPPInstance*)’} to ‘PyCFunction’ {aka ‘_object* (*)(_object*, _object*)’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPInstance.cxx:117:42: warning: cast between incompatible function types from ‘PyObject* (*)(CPyCppyy::CPPInstance*)’ {aka ‘_object* (*)(CPyCppyy::CPPInstance*)’} to ‘PyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3282#issuecomment-455587601:1841,hash,hashfunc,1841,https://root.cern,https://github.com/root-project/root/pull/3282#issuecomment-455587601,1,['hash'],['hashfunc']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:16519,secur,security,16519,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:17109,secur,security,17109,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:17699,secur,security,17699,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:18289,secur,security,18289,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:18879,secur,security,18879,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:19469,secur,security,19469,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:20059,secur,security,20059,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:20649,secur,security,20649,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:21239,secur,security,21239,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:21829,secur,security,21829,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:22419,secur,security,22419,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:23009,secur,security,23009,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:23599,secur,security,23599,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:24189,secur,security,24189,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:24779,secur,security,24779,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:25369,secur,security,25369,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:25959,secur,security,25959,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:26549,secur,security,26549,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:27139,secur,security,27139,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:27729,secur,security,27729,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:28319,secur,security,28319,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:28909,secur,security,28909,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3688:18: warning: Called C++ object pointer is null [,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:29499,secur,security,29499,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3688:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the object is a 'TemplateTypeParmDecl' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3609; 2: 'ttpdPtr' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3610; 3: Taking false branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3610; 4: Calling 'TemplateTypeParmDecl::hasDefaultArgument' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3611; 5: Calling 'DefaultArgStorage::isSet' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1282; 6: Calling 'PointerUnion::isNull' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:30089,secur,security,30089,https://root.cern,https://github.com/root-project/root/issues/7423,1,['secur'],['security']
Security," guess SrvAuthenticate is defined in DaemonUtils.[h|cxx] and refers to the libSrvAuth !; ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. Additionally, https://root.cern/doc/master/authserv_8C.html is not working due to this. Knowing that there are all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006 . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. ### Reproducer. https://root.cern/doc/master/authserv_8C.html; https://root.cern/doc/master/authclient_8C.html. ### ROOT version. 2023/08/01. ### Installation method. build form source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:2006,Authenticat,Authenticate,2006,https://root.cern,https://github.com/root-project/root/issues/13387,1,['Authenticat'],['Authenticate']
Security," https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not match the domain name in the URL).; >> If you'd like to turn off curl's verification of the certificate, use; >> the -k (or --insecure) option.; >> ***@***.*** t5]$ ; > ; > ; > I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; > or; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:1822,certificate,certificate,1822,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:42697,Access,Access,42697,https://root.cern,https://github.com/root-project/root/issues/7410,1,['Access'],['Access']
Security, in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:1777,secur,security,1777,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:2565,secur,security,2565,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:6497,secur,security,6497,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:7284,secur,security,7284,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:8071,secur,security,8071,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:8858,secur,security,8858,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:9645,secur,security,9645,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:10433,secur,security,10433,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:12006,secur,security,12006,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52755,Access,Access,52755,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security, in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:32973,secur,security,32973,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:13175,secur,security,13175,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:5309,secur,security,5309,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:61899,secur,security,61899,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security," in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; [ 69%] Built target rootcling_stage1; [ 69%] Generating G__Core.cxx, ../lib/libCore.rootmap; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; Subprocess aborted; ```; Any thoughts, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:19902,access,access,19902,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,1,['access'],['access']
Security," in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();. // make sure that each key has a distinct timestamp to maximally; // provoke different hashes for streamer info in each file; std::this_thread::sleep_for(1100ms);; }. }; ```. Test event loop:; ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threads:. + Baseline:; Percent of CPU this job got: 391%; Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix; Percent of CPU this job got: 453%; Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):; Percent of CPU this job got: 1639%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):; Percent of CPU this job got: 19861%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486:1633,hash,hashes,1633,https://root.cern,https://github.com/root-project/root/pull/9486,4,['hash'],"['hashes', 'hashing']"
Security, is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:28172,secur,security,28172,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security, is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:115; /opt/root_src/core/base/src/TQConnection.cxx:186:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:183; /opt/root_src/core/base/src/TQObject.cxx:240:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding o,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:110708,secur,security,110708,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security," is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-09-27T12:02:35.267Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:00.421Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:00.421Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:47.057Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:05:29.337Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/testReport/projectroot.roottest.root.meta/evolution/roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439#issuecomment-1259609519:1390,secur,security,1390,https://root.cern,https://github.com/root-project/root/pull/11439#issuecomment-1259609519,1,['secur'],['security']
Security," is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-03T10:30:31.377Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:02.129Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:02.129Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:46.812Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:32:56.935Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1265283847:1390,secur,security,1390,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1265283847,1,['secur'],['security']
Security," is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-04T08:57:28.121Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:34.687Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:35.220Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:47.448Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:04.228Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1266661576:1390,secur,security,1390,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1266661576,1,['secur'],['security']
Security," is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-10T10:45:41.694Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:45:50.062Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:45:50.062Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:46:38.182Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:47:55.262Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1273169240:1390,secur,security,1390,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1273169240,1,['secur'],['security']
Security," is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:2020,access,access,2020,https://root.cern,https://github.com/root-project/root/issues/11867,2,['access'],['access']
Security," layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to provide an entry range for a certain dataset or just forgot how many datasets were there. How would you address this part?. > To take all this and mutate your original suggestion. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3622,expose,expose,3622,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,2,['expose'],['expose']
Security, load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48932,secur,security,48932,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:42076,secur,security,42076,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16532,secur,security,16532,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22172,secur,security,22172,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certif,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21956,secur,security,21956,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certifica,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:27636,secur,security,27636,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.names,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:27932,secur,security,27932,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:42640,secur,security,42640,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28331,secur,security,28331,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security," no name when real name is N4ROOT8Internal34TCheckHashRecurveRemoveConsistencyE; Fatal in <TClassTable::Add>: Trying to add class with empty name to TClassTable; aborting; #0 0x00007f888f092cbe in __GI___waitpid (pid=32497, stat_loc=stat_loc; entry=0x7ffea63dbc28, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f888f00938f in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f88900a1c0f in TUnixSystem::StackTrace (this=0x7ef1) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412; #3 0x00007f888ff780e8 in DefaultErrorHandler (level=32497, abort_bool=40, location=0x0, msg=0x7f888f092cbe <__GI___waitpid+46> ""H="") at /home/amadio/src/root/core/base/src/TError.cxx:192; #4 0x00007f888ff77f16 in ErrorHandler (level=32497, location=0x7ffea63dbc28 """", fmt=0x0, ap=0x7f888f092cbe <__GI___waitpid+46>) at /home/amadio/src/root/core/base/src/TError.cxx:251; #5 0x00007f888ff77b04 in Fatal (location=0x7ef1 <error: Cannot access memory at address 0x7ef1>, fmt=0x7ffea63dbc28 """") at /home/amadio/src/root/core/base/src/TError.cxx:350; #6 0x00007f888ffed889 in TClassTable::Add (cname=0x7ef1 <error: Cannot access memory at address 0x7ef1>, id=-17368, info=..., dict=0x7f888f092cbe <__GI___waitpid+46>, pragmabits=-1892108864) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:347; #7 0x00007f888ffecd91 in ROOT::AddClass (cname=0x7ef1 <error: Cannot access memory at address 0x7ef1>, id=-17368, info=..., dict=0x7f888f092cbe <__GI___waitpid+46>, pragmabits=-1892108864) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:751; #8 0x00007f888ffecb94 in TClassTable::TClassTable (this=0x7ef1) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:236; #9 0x00007f888fe70e34 in TROOT::InitInterpreter (this=0x7ef1) at /home/amadio/src/root/core/base/src/TROOT.cxx:2020; #10 0x00007f888fe6fffc in ROOT::Internal::GetROOT2 () at /home/amadio/src/root/core/base/src/TROOT.cxx:385; #11 0x00007f889186eab6 in TCling__GetInterpreter () at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347620537:1056,access,access,1056,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347620537,1,['access'],['access']
Security," not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Success; -- Distributed RDataFrame enabled; -- Looking for RapidYAML (used by RooFit); -- Could NOT find ryml (missing: RYML_LIBRARY RYML_INCLUDE_DIR); -- RapidYAML not found, only compiling RooFit with nlohmann-json parser; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /afs/cern.ch/user/b/bellenot/temp/root/build/unix/compiledata.sh; Making /afs/cern.ch/user/b/bellenot/temp/root-build.foo/ginclude/compiledata.h; -- ROOT Configuration. System Linux-4.18.0-513.5.1.el8_9.x86_64; Processor 10 core Intel Core Processor (Broadwell, no TSX, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 8.5.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_davix builtin_ftgl builtin_gl2ps builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xxhash clad dataframe davix gdml http imt opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /afs/cern.ch/user/b/bellenot/temp/root-build.foo; [bellenot@lxplus803 root-build.foo]$; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:11902,hash,hash-style,11902,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['hash'],['hash-style']
Security, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:48266,secur,security,48266,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security," not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460996291%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=s%2FTzkvNzM41e0GBRqYtbxaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>> ; >>>>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>> bundle file isn't adequate, you can specify an alternate file; >>>>>>> using the --cacert option.; >>>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>> the bundle, the certificate verification probably failed due to a; >>>>>>> problem with the certificate (it might be expired, or the name might; >>>>>>> not match the domain name in the URL).; >>>>>>> If you'd like to turn off curl's verification of the certificate, use; >>>>>>> the -k (or --insecure) option.; >>>>>>> ***@***.*** t5]$ ; >>>>>> ; >>>>>> ; >>>>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:6700,certificate,certificate,6700,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,3,['certificate'],['certificate']
Security, read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ok' is never read in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208; /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394:13: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469:33: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498:19: warning: Value stored to 'descent2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'descent2' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498; /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:77891,secur,security,77891,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1963,access,accessing-entry-information-using-rdataframe,1963,https://root.cern,https://github.com/root-project/root/issues/12190,1,['access'],['accessing-entry-information-using-rdataframe']
Security," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:1721,hash,hashtable,1721,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['hash'],['hashtable']
Security," sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not match the domain name in the URL).; >> If you'd like to turn off curl's verification of the certificate, use; >> the -k (or --insecure) option.; >> ***@***.*** t5]$ ; > ; > ; > I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; > or; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; > ; > ; > regards,; > Asoka; > ; >> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.***> wrote:; >> ; >> ; >> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 - if not then i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:2078,certificate,certificate,2078,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,3,['certificate'],['certificate']
Security," std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:189453,hash,hash,189453,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security," std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:193647,hash,hash,193647,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3258,certificate,certificates,3258,https://root.cern,https://github.com/root-project/root/issues/10291,1,['certificate'],['certificates']
Security, support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:38383,secur,security,38383,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:24207,secur,security,24207,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security, that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:3036,secur,security,3036,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security, the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks su,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:31781,secur,security,31781,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2439,access,access,2439,https://root.cern,https://github.com/root-project/root/pull/5502,2,['access'],['access']
Security," the class are arrays (c-style). Accessing the array members works for the first time the GetEntry() is called, but subsequent accesses result in segmentation faults. I am using the ""old"" way of reading the tree (with SetBranchAddress). . One possible workaround might be to use std::array instead of c-style arrays, although I have not fully tested if this works. . ## Expected behavior; Array members of objects in TTrees are accessible via PyROOT as was the case before 6.22. . ## To Reproduce. I attached a MWE (really a minimal failing example), including a script to build/generate a tree/run the offending python scripts (faiing.sh): [mwe.tar.gz](https://github.com/root-project/root/files/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (ev.foo[1]). ```. This results in . ```; python breaks.py ; 0; 0.9989327176093981 ; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:1068,access,access,1068,https://root.cern,https://github.com/root-project/root/issues/6468,1,['access'],['access']
Security, to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:7647,secur,security,7647,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security," to generally work, user-provided types are necessary to cover corner cases, e.g. by handing template arguments to std::make_tuple. Python's three-way comparison operator is only syntax, not semantics, so the spaceship would simply be broken down in Python's richcompare and the only real issue again is ROOT/meta giving wrong overloads. That said, I'm moving away from operator lookups: not only are the overloads often wrong, so I'm doing my own ADL, but also TClingCallFunc generates broken code on Mac and Windows. Rather, I want to use a generic comparison template and let SFINAE deal with it. The difference between removing std::, giving wrong overloads, etc. and string <-> decl is that the former is a problem b/c ROOT/meta gives the _wrong_ results. Strings are sometimes clunky, but perfectly fine if they are correct. Yes, letting clang parse names (as done for function template lookups already) is exactly what should happen. But the next step is to funnel the results to the Python mappings, not expose cppyy to decls or their intricate details. E.g. the converters and executor lookups should be a combination of strings and categories, just like it is now (except that the categories are derived from string parsing, like looking for ends_in('*')). Doing that selection based on decls as suggested here and in the e-mail thread with Gerhard makes no sense whatsoever: you'd have to maintain three times the same functionality. I would want something like this:. ```; opaque_handle h = what_is(parent, name); type_category t = what_type(h); qual_category q = what_qualifiers(h); true_name = unqualified_true(h); opaque_handle p = true_parent(h); etc.; ```. with opaque_handle possibly the decl, and with t and q some enums or flags, and that would get rid of the name parsing in converters/executors, but NOT the string-based name lookups there. I do not need listings per se, not even for classes, but see GetAllCppNames(): something to feed to dir(), tab-completion, and help() rema",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478718847:1482,expose,expose,1482,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478718847,2,['expose'],['expose']
Security, to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11428,secur,security,11428,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22062,secur,security,22062,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security, to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:1865,Access,Access,1865,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Access'],['Access']
Security, unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1431; /opt/root_src/core/rint/src/TTabCom.cxx:1452:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1459; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93:5: warning: Value stored to 'sSignalHandlerActive' is never read,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:1425,secur,security,1425,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security, unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1459; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93:5: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102:11: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102; /opt/root_src/core/unix/src/TUnixSystem.cxx:689:19: warning: Call to function 'strcat' is insecure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:1995,secur,security,1995,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security," unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x753BA23: std::_Hashtab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:82021,hash,hash,82021,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:42409,secur,security,42409,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:54585,secur,security,54585,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:55231,secur,security,55231,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:55877,secur,security,55877,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:56523,secur,security,56523,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:57169,secur,security,57169,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:57815,secur,security,57815,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:58461,secur,security,58461,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:59107,secur,security,59107,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:59753,secur,security,59753,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:60399,secur,security,60399,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1682,secur,security,1682,https://root.cern,https://github.com/root-project/root/pull/11882,1,['secur'],['security']
Security, weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different transla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:12436,access,access,12436,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security, which participates in a condition later in /opt/root_src/io/io/src/TMapFile.cxx:727; 23: Assuming 'mr' is equal to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:728; 24: Taking true branch in /opt/root_src/io/io/src/TMapFile.cxx:728; 25: Null pointer value stored to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:729; 26: Execution continues on line 743 in /opt/root_src/io/io/src/TMapFile.cxx:737; 27: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:743; 28: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:743; 29: Returning from 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 30: Assuming the condition is false in /opt/root_src/io/io/src/TMapFile.cxx:614; 31: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:614; 32: Assuming field 'fFirst' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:619; 33: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:619; 34: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') in /opt/root_src/io/io/src/TMapFile.cxx:623; /opt/root_src/io/io/src/TMemFile.cxx:181:40: warning: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'mode' is never read in /opt/root_src/io/io/src/TMemFile.cxx:181; /opt/root_src/io/io/src/TStreamerInfo.cxx:1116:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fClass' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 2: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 3: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 4: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 5: Assuming field 'fIsSyntheticPair' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 6: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 7: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:793;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:95158,Access,Access,95158,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security," with chained fixups ; - [2022-09-27T12:03:00.421Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:47.057Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:05:29.337Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439#issuecomment-1259609519:1770,secur,security,1770,https://root.cern,https://github.com/root-project/root/pull/11439#issuecomment-1259609519,1,['secur'],['security']
Security," with chained fixups ; - [2022-10-03T10:31:02.129Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:46.812Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:32:56.935Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_rdf_define_pyz](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_rdf_define_pyz/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_rdf_filter_pyz](https://lc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1265283847:1770,secur,security,1770,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1265283847,1,['secur'],['security']
Security," with chained fixups ; - [2022-10-04T08:57:35.220Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:47.448Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:04.228Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1266661576:1770,secur,security,1770,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1266661576,1,['secur'],['security']
Security," with chained fixups ; - [2022-10-10T10:45:50.062Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:46:38.182Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:47:55.262Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1273169240:1770,secur,security,1770,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1273169240,1,['secur'],['security']
Security," you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is tryin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:1212,access,access,1212,https://root.cern,https://github.com/root-project/root/issues/7788,1,['access'],['access']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:2994,secur,security-and-quality,2994,https://root.cern,https://github.com/root-project/root/pull/11808,1,['secur'],['security-and-quality']
Security,"""streamer checksum"" this seems to be a new spelling for the concept. We have historically used variation of the term ""checksum of the class layout"". [There is indeed a direct correlation between the class layout and the ""transformation"" from in memory layout to platform independent binary format (this transformation can be thought as a 'streamer') but the checksum is literally derived from the class layout (using the ordered list of type name and name of all the direct members (including base class) of the class)]. The secondary name has been ""checksum of the StreamerInfo (which is a description of a class layout)"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16060#issuecomment-2239370921:10,checksum,checksum,10,https://root.cern,https://github.com/root-project/root/pull/16060#issuecomment-2239370921,4,['checksum'],['checksum']
Security,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11856:526,validat,validated,526,https://root.cern,https://github.com/root-project/root/issues/11856,1,['validat'],['validated']
Security,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10822:99,validat,validate,99,https://root.cern,https://github.com/root-project/root/pull/10822,1,['validat'],['validate']
Security,# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11033:86,validat,validate,86,https://root.cern,https://github.com/root-project/root/pull/11033,1,['validat'],['validate']
Security,# This Pull request: Adds the Neg ONNX Operator with the corresponding unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10946:85,validat,validate,85,https://root.cern,https://github.com/root-project/root/pull/10946,1,['validat'],['validate']
Security,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10913:191,validat,validate,191,https://root.cern,https://github.com/root-project/root/pull/10913,1,['validat'],['validate']
Security,# This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing.; That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9303:148,access,access,148,https://root.cern,https://github.com/root-project/root/pull/9303,1,['access'],['access']
Security,# This Pull request: Pow ONNX Operator implemented with the corresponding unit tests to validate the written code. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10971:88,validat,validate,88,https://root.cern,https://github.com/root-project/root/pull/10971,1,['validat'],['validate']
Security,# This Pull request: [RNTuple] Addition of the evil storage layer. ## Changes or fixes:; - Add modifications to `RRawFile` to enable failures (bit flips and short reads) to be injected into the `ReadAt` and `ReadV` methods.; - Add I/O error unit test file `ntuple_ioerrors`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13434:176,inject,injected,176,https://root.cern,https://github.com/root-project/root/pull/13434,1,['inject'],['injected']
Security,# This Pull request:. ## Changes or fixes:. Absence of safety in public methods resulting in nullptr access if ftraininfo was undefined by constructor. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14569,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14859:101,access,access,101,https://root.cern,https://github.com/root-project/root/pull/14859,1,['access'],['access']
Security,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10703:154,access,access,154,https://root.cern,https://github.com/root-project/root/pull/10703,1,['access'],['access']
Security,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15094:58,access,access,58,https://root.cern,https://github.com/root-project/root/pull/15094,1,['access'],['access']
Security,# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8051. Solution copy-pasted from JIRA issue (V Gonzalez). And adds some security to function arguments. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15022:158,secur,security,158,https://root.cern,https://github.com/root-project/root/pull/15022,1,['secur'],['security']
Security,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15798:485,access,accessed,485,https://root.cern,https://github.com/root-project/root/pull/15798,1,['access'],['accessed']
Security,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627:214,access,access,214,https://root.cern,https://github.com/root-project/root/pull/11627,1,['access'],['access']
Security,"# This Pull request:. ## Changes or fixes:. In some corner cases, there might be some nullptr access problems. This solves the warnings found by clang-tidy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443:94,access,access,94,https://root.cern,https://github.com/root-project/root/pull/11443,1,['access'],['access']
Security,# This Pull request:. ## Changes or fixes:. Prevent infinite loops and add more security for overflows; ; Fixes in part https://github.com/root-project/root/issues/14770. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14820:80,secur,security,80,https://root.cern,https://github.com/root-project/root/pull/14820,1,['secur'],['security']
Security,# This Pull request:. ## Changes or fixes:. Prevents some null ptr access. Detected by clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11441:67,access,access,67,https://root.cern,https://github.com/root-project/root/pull/11441,1,['access'],['access']
Security,"# This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:; https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10424:519,secur,security,519,https://root.cern,https://github.com/root-project/root/pull/10424,1,['secur'],['security']
Security,"# This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9563:202,expose,exposed,202,https://root.cern,https://github.com/root-project/root/pull/9563,1,['expose'],['exposed']
Security,"# This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```; 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 ; 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 ; 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 ; 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 ; 5 reader                                                       reader.C                 30  0x7f62b6563004 ; 6 ??                                                                                        0x7f62b7e280bc ; 7 ??                                                                                        0x7ffda58c2b60 ; 8 ??                                                                                        0x7ffda58c2b28 ; 9 ??                                                                                                       ; ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15929:52,access,access,52,https://root.cern,https://github.com/root-project/root/pull/15929,1,['access'],['access']
Security,"# This Pull request:. ## Changes or fixes:; Commit 23d861273f56c28a6bad45028115f80228816b6f removed `get_wgt`, but this is used in RooFitExtensions, which in turn is used for Higgs combination fits. This commit adds `get_wgt` back in. It also adds it in places where it was missing before; some new additions since `get_wgt` was added (about 6 years ago) did not use `get_wgt`, but rather directly accessed the `_wgt` array, which again breaks the usecase within RooFitExtensions (`RooExpandedDataHist`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11736:398,access,accessed,398,https://root.cern,https://github.com/root-project/root/pull/11736,1,['access'],['accessed']
Security,# This Pull request:. ## Changes or fixes:; Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9629:292,expose,exposes,292,https://root.cern,https://github.com/root-project/root/pull/9629,1,['expose'],['exposes']
Security,"# This Pull request:. ## Changes or fixes:; This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9409:96,access,accessible,96,https://root.cern,https://github.com/root-project/root/pull/9409,2,"['access', 'expose']","['accessible', 'expose']"
Security,# This Pull request:. ## Changes or fixes:; segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10181:87,access,access,87,https://root.cern,https://github.com/root-project/root/pull/10181,1,['access'],['access']
Security,# This Pull request:. Adds `FromRNTuple` for vectors of file names. Gives easy access to the RNTuple chains in RDF through PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14196:79,access,access,79,https://root.cern,https://github.com/root-project/root/pull/14196,1,['access'],['access']
Security,"# This Pull request:. Fixes to TDavixFile documentation when accessing files on Amazon S3. The options suggested do not work. Instead the options must be used without the underscore. e.g. . ""S3_SECKEY"" -> ""S3SECKEY""; ""S3_ACCKEY"" -> ""S3ACCKEY""; ""S3_TOKEN"" -> ""S3TOKEN""; etc. You can see the source code here: https://github.com/root-project/root/blob/4e8c577dfd6a19d7c38a74e3074b406a598bf76a/net/davix/src/TDavixFile.cxx#L69. where they are defined without the underscore. ```c; const char* s3_seckey_opt = ""s3seckey="";; const char* s3_acckey_opt = ""s3acckey="";; const char* s3_region_opt = ""s3region="";; const char* s3_token_opt = ""s3token="";; const char* s3_alternate_opt = ""s3alternate="";; ```. For example, this works:. ```; const std::string options(""S3SECKEY="" + aws_secret_access_key + "" "" ; + ""S3ACCKEY="" + aws_access_key_id + "" ""; + ""S3TOKEN="" + aws_session_token);. TFile::Open(input_filename.c_str(), (options + "" READ"").c_str()) );; ```. ## Changes or fixes:. TDavixFile documentation. ## Checklist:. - [y] tested changes locally; - [y] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13499:61,access,accessing,61,https://root.cern,https://github.com/root-project/root/pull/13499,1,['access'],['accessing']
Security,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15789:46,checksum,checksums,46,https://root.cern,https://github.com/root-project/root/pull/15789,4,['checksum'],"['checksum', 'checksums']"
Security,"# This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists; anymore, since hash-assisted finding by name hash can be ambiguous: a; RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert; it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for; RooArgSets, most notably the RooArgSet that contains all the components; of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16102:105,hash,hash-assisted,105,https://root.cern,https://github.com/root-project/root/pull/16102,2,['hash'],"['hash', 'hash-assisted']"
Security,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704:88,access,access,88,https://root.cern,https://github.com/root-project/root/pull/11704,1,['access'],['access']
Security,# This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the; validation of private modulemaps fails due to a change in layout. This; change disables the check when DisablePCHValidation is active. See these bug reports:; * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5; * https://github.com/conda-forge/root-feedstock/issues/149; * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10555:147,validat,validation,147,https://root.cern,https://github.com/root-project/root/pull/10555,1,['validat'],['validation']
Security,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779:1133,checksum,checksums,1133,https://root.cern,https://github.com/root-project/root/pull/13779,1,['checksum'],['checksums']
Security,# This Pull request:; * Add server status info; * Corrections in accessing table expression for derived classes; * Enable navigation to Lego view,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9005:65,access,accessing,65,https://root.cern,https://github.com/root-project/root/pull/9005,1,['access'],['accessing']
Security,"# This Pull request:; - Allows users to set/access the floating point precision when writing GDML.; Setter/Getter was already present, but was moved to public visibility. ## Changes or fixes:; More flexibility writing GDML files. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11890:44,access,access,44,https://root.cern,https://github.com/root-project/root/pull/11890,1,['access'],['access']
Security,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8530:410,hash,hash,410,https://root.cern,https://github.com/root-project/root/pull/8530,1,['hash'],['hash']
Security,"# This Pull request:; Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:; This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14067:191,hash,hash,191,https://root.cern,https://github.com/root-project/root/pull/14067,1,['hash'],['hash']
Security,# This Pull request:; Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11198:85,validat,validate,85,https://root.cern,https://github.com/root-project/root/pull/11198,1,['validat'],['validate']
Security,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348:218,access,accessibility,218,https://root.cern,https://github.com/root-project/root/pull/16348,2,['access'],"['accessibility', 'accessible-color-cycles']"
Security,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249:180,access,accessing,180,https://root.cern,https://github.com/root-project/root/pull/14249,1,['access'],['accessing']
Security,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10720:652,hash,hashed,652,https://root.cern,https://github.com/root-project/root/pull/10720,1,['hash'],['hashed']
Security,"# This Pull request:; The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. ; This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:; - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up ; - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes; - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9717:1010,access,access,1010,https://root.cern,https://github.com/root-project/root/pull/9717,2,['access'],"['access', 'accessible']"
Security,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16516:351,expose,exposed,351,https://root.cern,https://github.com/root-project/root/pull/16516,1,['expose'],['exposed']
Security,# This Pull request:; implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13128,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13129:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/13129,1,['access'],['access']
Security,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16080:870,expose,exposed,870,https://root.cern,https://github.com/root-project/root/pull/16080,1,['expose'],['exposed']
Security,"# Updates . ## Baseline: master before #14261 and #14276 . ```; time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000. real	0m1.198s; user	0m0.706s; sys	0m0.475s; ```. ```; nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l; 0; nm -C $ROOTSYS/lib/*.so | grep kError | wc -l; 27; ```. ```; strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 1 -1; 1 3000; 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 10455 newfstatat(3, ; 3997 newfstatat(4, ; 31461 newfstatat(AT_FDCWD, ; 19903 openat(AT_FDCWD, ; 28769 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; grep openat openat.log | wc -l; 19759; ```. ## Master after the two hotfixes. ```; time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)""; -1; 3000. real	0m0.807s; user	0m0.620s; sys	0m0.183s; ```. ```; nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l; 1; nm -C $ROOTSYS/lib/*.so | grep kError | wc -l; 34; ```. ```; strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 1 -1; 1 3000; 219 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 184 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867398677:486,access,access,486,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867398677,1,['access'],['access']
Security,"## DeepCode's analysis on [#51516a](https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2F/code/?utm_source=gh_review&c=5&w=24&i=22&) found:. - :x: **5** critical issues, :warning: **24** warnings, :information_source: **22** minor issues. :point_down:; - :heavy_check_mark: **34** issues were fixed.; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into a member access and is used to access a property of a field assignment by name. This may allow a malicious user to access methods (e.g. toString) as opposed to regular properties of objects and cause a crash, remote code execution or more serious problems. This is known as a Prototype Pollution vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1123"">JSRoot.core.js:1123</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FPrototypePollution/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1313"">JSRoot.core.js:1313</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-898501733:629,access,access,629,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-898501733,3,['access'],['access']
Security,"## Describe the bug; I store a custom event class in a TTree. Some of the members of the class are arrays (c-style). Accessing the array members works for the first time the GetEntry() is called, but subsequent accesses result in segmentation faults. I am using the ""old"" way of reading the tree (with SetBranchAddress). . One possible workaround might be to use std::array instead of c-style arrays, although I have not fully tested if this works. . ## Expected behavior; Array members of objects in TTrees are accessible via PyROOT as was the case before 6.22. . ## To Reproduce. I attached a MWE (really a minimal failing example), including a script to build/generate a tree/run the offending python scripts (faiing.sh): [mwe.tar.gz](https://github.com/root-project/root/files/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:117,Access,Accessing,117,https://root.cern,https://github.com/root-project/root/issues/6468,3,"['Access', 'access']","['Accessing', 'accesses', 'accessible']"
Security,"## Profiler for inspecting C++ models generated with SOFIE; Added a new class called `RModelProfiler` that allows to generate an hardcoded C++ header that automatically measures the time that each operator took during one or more runs of the `infer` function. In other words it profiles the model by means of _code instrumentation_. ### Under the hood; `RModelProfiler` is a friend class of `RModel` that initializes a private reference to an existing `RModel` object.; When the code is generated through `RModelProfiler::Generate()` (rewritten to inject profiling code in between operators), the latter access the private member `fGC`, thus generating the model directly into the `RModel` object.; In the generated code, profiling info such as time (microseconds) are saved in `::profiler_results`. ### Affine changes; - Added public member `std::string name` in `ROperator` (e.g. Gemm_1, ..).; - Changed `make_ROperator()` so that is assigns `name` of the operator with the one it had within the original ONNX model.; - Added an example of how to use the profiler in `README.md`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8957:548,inject,inject,548,https://root.cern,https://github.com/root-project/root/pull/8957,2,"['access', 'inject']","['access', 'inject']"
Security,## This Pull request:; * Add server status info; * Corrections in accessing table expression for derived classes; * Enable navigation to Lego view. It is a correction to #9005,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9013:66,access,accessing,66,https://root.cern,https://github.com/root-project/root/pull/9013,1,['access'],['accessing']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:497,inject,inject,497,https://root.cern,https://github.com/root-project/root/issues/13042,1,['inject'],['inject']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:304,access,access,304,https://root.cern,https://github.com/root-project/root/issues/15212,1,['access'],['access']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15919:167,access,access,167,https://root.cern,https://github.com/root-project/root/issues/15919,1,['access'],['access']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp; void test() {}; int nbins = 500;;  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){;     int bin = h->GetBin(500);;     for(int i = bin; i < bin + 100; i++){;       h->AddBinContent(i, 1);;     };   }; ```; ```; $ root; root [0] .L test.C; root [1] for(int i = 0; i < 100; i++) test();; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed.; Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575:1403,checksum,checksum,1403,https://root.cern,https://github.com/root-project/root/issues/14575,1,['checksum'],['checksum']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15479:468,access,access,468,https://root.cern,https://github.com/root-project/root/issues/15479,1,['access'],['access']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi,. starting the webgui (`new TBrowser`) opens a chromium window which complains:; ```; Your file couldn’t be accessed; It may have been moved, edited, or deleted.; ERR_FILE_NOT_FOUND; ```; I guess this corresponds to the following process:; ```; axel 17508 3604 4 15:51 pts/0 00:00:01 /snap/chromium/2950/usr/lib/chromium-browser/chrome --password-store --disable-features=TFLiteLanguageDetectionEnabled --window-size=1200,700 --new-window --app=file:///tmp/root_start_t9pNYd.html; ```. Note that this is a snap package; the browser might not be allowed to access files in `/tmp` as per https://forum.snapcraft.io/t/can-browsers-open-local-files/3016. (*I* can work around this, but I thought it'd still be worthwhile to report this.). Cheers, Axel. ### Reproducer. `new TBrowser` with web gui. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16488:186,access,accessed,186,https://root.cern,https://github.com/root-project/root/issues/16488,3,"['access', 'password']","['access', 'accessed', 'password-store']"
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15442:132,access,accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called,132,https://root.cern,https://github.com/root-project/root/issues/15442,1,['access'],['accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15744:943,access,access,943,https://root.cern,https://github.com/root-project/root/issues/15744,1,['access'],['access']
Security,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16502:162,access,access,162,https://root.cern,https://github.com/root-project/root/issues/16502,2,['access'],['access']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a class is schema evoled (see reproducer) using a renaming rules. At least on line 1258 of `StreamerInfoReadBuffer.cxx`:; ```; subinfo = (TStreamerInfo*)newProxy->GetValueClass()->GetConversionStreamerInfo( oldProxy->GetValueClass(), vClVersion );; ```. is not properly handling the case whether the classes are unversion and thus the search ought to be done using the checksum rather than the class version. ### Reproducer. ```; template <typename T>; struct Wrapper; {; bool present = true;; T obj;; };. struct MatchedCSCSegment; {; float someValue = 0.0;. MatchedCSCSegment(float in = 0.0) : someValue{in} {}. // The simeple update fails if the class version is not set.; ClassDef(MatchedCSCSegment, 5);; };. struct CSCSegment; {; float someValue;. operator MatchedCSCSegment(); {; return MatchedCSCSegment{someValue};; }. #ifdef OLD_VERSION; std::vector<CSCSegment> theDuplicateSegments;; ClassDef(CSCSegment, 3);; #else; std::vector<MatchedCSCSegment> theDuplicateSegments;. ClassDef(CSCSegment, 4);; #endif; };; ```; and rule:; ```; #pragma read sourceClass=""CSCSegment"" targetClass=""MatchedCSCSegment""; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14491:449,checksum,checksum,449,https://root.cern,https://github.com/root-project/root/issues/14491,1,['checksum'],['checksum']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When accessed after the generating RNTupleReader is gone, the RNTupleView segfaults. It should fail more gracefully. ### Reproducer. ```; TEST(RNTuple, ViewPastLifetime); {; FileRaii fileGuard(""test_ntuple_view_pastlifetime.root"");. auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto writer = RNTupleWriter::Recreate(std::move(model), ""ntpl"", fileGuard.GetPath());; writer->Fill();; }. auto reader = RNTupleReader::Open(""ntpl"", fileGuard.GetPath());; EXPECT_EQ(1u, reader->GetNEntries());; auto viewPt = reader->GetView<float>(""pt"");; reader.reset();; EXPECT_FLOAT_EQ(42.0, viewPt(0));; }; ```. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16489:80,access,accessed,80,https://root.cern,https://github.com/root-project/root/issues/16489,1,['access'],['accessed']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `TTreeFormula` (and thus by extend `TTree::Scan` and `TTree::Draw`) does not handle well (under-statement) cases of schema evolution that involves renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **********************************************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:748,access,accessing,748,https://root.cern,https://github.com/root-project/root/issues/14493,1,['access'],['accessing']
Security,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:915,HasH,HasHessian,915,https://root.cern,https://github.com/root-project/root/issues/15091,1,['HasH'],['HasHessian']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{; ""samples"": {; ""B"": {; ""trees"": [""subTree""],; ""files"": [""TestFileB.root""]; },; ""A"": {; ""trees"": [""subTree""],; ""files"": [""TestFileA.root""]; }; }; }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour?. The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce?. [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT?. source. ### Which operating system are you using?. MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13037:418,access,accessed,418,https://root.cern,https://github.com/root-project/root/issues/13037,2,['access'],['accessed']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour?. I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce?. On lxplus9.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh ; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <source_location>; root [1] auto loc = std::source_location::current();; ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration; auto loc = std::source_location::current();; ^; ROOT_prompt_1:1:17: note: 'source_location' declared here; root [2] ; ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12993:129,expose,exposed,129,https://root.cern,https://github.com/root-project/root/issues/12993,1,['expose'],['exposed']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code; ```cpp; #ifdef __has_include; #if __has_include(<span>); #include <span>; #endif; #endif; ```; (found in `range/v3/range/access.hpp`) causes an error in the interpreter:; ```; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'; module ""span"" {; ```; Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:; ```; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] std::span<int> s; (std::span<int> &) {}; root [1] ; ```; which looks wrong to me. ### What is the expected behaviour?. `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce?. from lxplus.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032:295,access,access,295,https://root.cern,https://github.com/root-project/root/issues/13032,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A pyroot python program crashes when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16725:213,access,accesses,213,https://root.cern,https://github.com/root-project/root/issues/16725,2,['access'],"['accesses', 'accessing']"
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13543:703,checksum,checksum,703,https://root.cern,https://github.com/root-project/root/issues/13543,1,['checksum'],['checksum']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159:1215,access,access,1215,https://root.cern,https://github.com/root-project/root/issues/14159,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Calling `Show` on an RNTupleReader that contains friends raises the following exception:; ```; no type name specified for Field ntpl1 (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&) [/home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:493]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:485]; ```. The reason for this is that RNTuple friends are (virtually) represented as untyped record fields. One solution could be to create an artificial `RRecordField` to bind the fields to, in a similar fashion to what is done here: https://github.com/root-project/root/blob/f3fc75b2078cec442c0f6060d2bfd4e86cf83b06/tree/ntuple/v7/src/RNTupleDescriptor.cxx#L65-L77. With the reproducer below this would result in the following:; ``` ; // Show; {; ""ntpl1"": {; ""foo"": 3.14; },; ""ntpl2"": {; ""bar"": 2.72; }; }. // PrintInfo; ************************************ NTUPLE ************************************; * N-Tuple : _friends *; * Entries : 10 *; ********************************************************************************; * Field 1 : ntuple1 *; * Field 1.1 : x (std::int32_t) *; * Field 2 : ntuple2 *; * Field 2.1 : y (std::int32_t) *; ********************************************************************************; ```; As a quick fix this is fine, but it might be nicer to have a representation that better respects the meaning of befriended RNTuples. ### Reproducer. ```cpp; void show_friends() {; {; auto model = RNTupleModel::Create();; auto foo = model->MakeField<float>(""foo"");; auto writer = RNTupleWriter::Recreate(std::move(model), ""ntpl1"", ""ntpl1.root"");; *foo = 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14748:228,access,access,228,https://root.cern,https://github.com/root-project/root/issues/14748,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context); 448 | elem[""x""] << pdf->x().GetName();; | ^; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:508,access,accessible,508,https://root.cern,https://github.com/root-project/root/issues/13101,2,['access'],['accessible']
Security,### Check duplicate issues. - [X] Checked for duplicates. ### Description. During https://github.com/root-project/root/pull/14669 a new test was added which tests `std::set` in PyROOT. This exposed an issue where creating a set in PyROOT on the windows builds fails. A conditional windows test skip was added in `bindings/pyroot/pythonizations/test/CMakeLists.txt` to fix this (where the `stl_set.py` is added). Whenever this issue is resolved this test skip should also be removed. - [ ] Remove windows test skip for `stl_set.py`. ### Reproducer. `s = ROOT.std.set['int']()` (in windows). ### ROOT version. 6.31/01 (dev). ### Installation method. Build from source. ### Operating system. Windows. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14710:190,expose,exposed,190,https://root.cern,https://github.com/root-project/root/issues/14710,1,['expose'],['exposed']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15877:385,checksum,checksum,385,https://root.cern,https://github.com/root-project/root/issues/15877,1,['checksum'],['checksum']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096:633,Access,AccessPathName,633,https://root.cern,https://github.com/root-project/root/issues/14096,1,['Access'],['AccessPathName']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program.; All tests in the CI are failing because of this. ### Reproducer. ```python; import ROOT; ROOT.TH1F(); ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13769:105,access,accessing,105,https://root.cern,https://github.com/root-project/root/issues/13769,1,['access'],['accessing']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In `tmva/tmva/inc/TMVA/RTensor.hxx`, line 217 and line 231.; With and empty vector, `vector::begin() == vector::end()` and one cannot dereference end(), [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior.; A possible fix is in the PR #13322 . ### Reproducer. Run the TMVA tests in debug mode with /RTC1 flag on Windows. ### ROOT version. master. ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13498:452,access,access,452,https://root.cern,https://github.com/root-project/root/issues/13498,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:497,certificate,certificate,497,https://root.cern,https://github.com/root-project/root/issues/15474,1,['certificate'],['certificate']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16134:807,checksum,checksum,807,https://root.cern,https://github.com/root-project/root/issues/16134,1,['checksum'],['checksum']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380:728,access,access,728,https://root.cern,https://github.com/root-project/root/issues/16380,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16135:384,access,access,384,https://root.cern,https://github.com/root-project/root/issues/16135,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:549,access,access,549,https://root.cern,https://github.com/root-project/root/issues/13568,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This bug can be triggered only on MacOS 12 for the x86 architecture.; PyROOT freezes if:; - A `TCanvas` is instantiated in a script or at the prompt; - The `name ROOT.TCanvas` is accessed at the prompt. ### Reproducer. ```python; import ROOT. ROOT.TCanvas # Enough to freeze the prompt; c = ROOT.TCanvas() # Triggers freeze in a script; ```. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13770:254,access,accessed,254,https://root.cern,https://github.com/root-project/root/issues/13770,1,['access'],['accessed']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This code in [RTensor.hxx](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RTensor.hxx#L460):; ```; shape.insert(shape.end() + 1 + idx, 1);; ```; generates a debug assertion failure ""cannot seek vector iterator after end"".; As explained [in the standard](https://en.cppreference.com/w/cpp/container/vector/end): end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. ### Reproducer. Compile ROOT in Debug mode on Windows with the `/RTC1` compiler flag and run the TMVA tests/tutorials. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13325:540,access,access,540,https://root.cern,https://github.com/root-project/root/issues/13325,1,['access'],['access']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15107:234,hash,hash,234,https://root.cern,https://github.com/root-project/root/issues/15107,2,['hash'],['hash']
Security,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:; 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue.; 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15267:400,access,accessible,400,https://root.cern,https://github.com/root-project/root/issues/15267,1,['access'],['accessible']
Security,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A commit (https://github.com/root-project/root/commit/b327dd8fd159494666842607708140c429fa4055) deleted an important feature about authentication using local accounts from TServerSocket. I think it is wrong that the file is not used. I guess SrvAuthenticate is defined in DaemonUtils.[h|cxx] and refers to the libSrvAuth !; ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. Additionally, https://root.cern/doc/master/authserv_8C.html is not working due to this. Knowing that there are all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006 . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:206,authenticat,authentication,206,https://root.cern,https://github.com/root-project/root/issues/13387,2,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,; I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```; <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>; <variable name=""testVariable"" value=""someNumbers[1]""/>; ```. ROOT complains when parsing the GDML, with the following error:. ```; input_line_155:2:81: error: subscripted value is not an array, pointer, or vector; Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }; ~~~~^~; Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'; aborting; ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,; Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```; root -l; TGeoManager::Import(""geometry_test.gdml""); ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:1069,access,access,1069,https://root.cern,https://github.com/root-project/root/issues/13074,1,['access'],['access']
Security,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:1023,hash,hash,1023,https://root.cern,https://github.com/root-project/root/issues/15336,1,['hash'],['hash']
Security,"### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type!. ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8051:732,access,access,732,https://root.cern,https://github.com/root-project/root/issues/8051,1,['access'],['access']
Security,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:477,access,access,477,https://root.cern,https://github.com/root-project/root/issues/8745,1,['access'],['access']
Security,"### Describe the bug. In pyROOT, if one defines a function that returns a RooArgSet object that contains cloned RooAbsArg objects, the returned RooArgSet object will crash if accessed. This is likely due to some garbage collection within the function that removes reference to the cloned object. This behavior occurs only in pyROOT and is not restricted to functions that return a RooArgSet object. Any object that is associated with the RooArgSet object, e.g. RooAbsPdf with ownedComponents being the RooArgSet object defined in the function, will also crash when the underlying RooArgSet object is accessed. . ### Expected behavior; The returned RooArgSet object should contain the reference to the cloned RooAbsArg object. . ### To Reproduce; ```; import ROOT. macro = \; """"""; RooArgSet make_argset(const RooRealVar& v){; 	RooArgSet argset(*(RooRealVar*)v.Clone(""new_x""));; 	return argset;; }; """""". def reproducer_ROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10); 	ROOT.gInterpreter.Declare(macro); 	output = ROOT.make_argset(x); 	print(output[0] == x); 	# True; 	print(output[0] is x); 	# False; 	return output[0]. def reproducer_pyROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10). 	def make_argset(v):; 		argset = ROOT.RooArgSet(v.Clone(""new_x"")); 		return argset. 	output = make_argset(x); 	return output[0]; 	# these also crashes; 	#return output.first(); 	#return [i for i in output]. # this does not crash; reproducer_ROOT(). # this crash; reproducer_pyROOT(); ```; ### Setup. 1. ROOT version: 6.22/06; 2. Operating system: lxplus; 3. How you obtained ROOT: conda install -c conda-forge ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8845:175,access,accessed,175,https://root.cern,https://github.com/root-project/root/issues/8845,2,['access'],['accessed']
Security,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:682,sanitiz,sanitizer,682,https://root.cern,https://github.com/root-project/root/issues/8027,1,['sanitiz'],['sanitizer']
Security,"### Describe the bug. Using:; [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); we get:; ```; . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec; Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder!; ```; which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading).; ```; #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970; ...; #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310; #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225; #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949; ....; #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439; ....; #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour?. properly loading of the dictionary. ### How to reproduce?. Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT?. local build. ### Which operating system are you using?. alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12953:182,checksum,checksum,182,https://root.cern,https://github.com/root-project/root/issues/12953,1,['checksum'],['checksum']
Security,"### Describe the bug; 1) The TTree::Scan() can't properly display a vector<vector<vector<>>>. It always shows a single element of value 0.; 2) The TBrowser shows such vectors as having 0 elements.; 3) 1D and 2D vectors work OK. ### Expected behaviour; 1) TTree::Scan() showing all the elements of the 3D vector like for 2D and 1D vector; 2) TBrowser being able to show all the values and proper number of elements of the 3D vector, like for 2D and 1D vectors. ### To Reproduce; Please run the attached macro or store a 3D vector in a TTree.; [ttree_vector_bug.zip](https://github.com/root-project/root/files/11268478/ttree_vector_bug.zip). ### Setup; self-compiled ROOT 6.28.00, Fedora 37. ### Additional context; This bug is quite important for 2 reasons:; 1) For users trying to access the TTree with TBrowser the vector seems empty and they think they have the wrong data files; 2) There is no easy way to check the vector contents with Scan() quickly not working, which makes debugging experiment much harder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12680:781,access,access,781,https://root.cern,https://github.com/root-project/root/issues/12680,1,['access'],['access']
Security,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11338:62,secur,security,62,https://root.cern,https://github.com/root-project/root/issues/11338,2,['secur'],['security']
Security,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12779:143,Hash,Hashable,143,https://root.cern,https://github.com/root-project/root/issues/12779,2,"['Hash', 'hash']","['Hashable', 'hash']"
Security,"### Describe the bug; Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot!. (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error); Error:; ```; CustomBuild:; ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel.""; Generating etc/allDict.cxx.pch; ; Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer; ; =================================================================; ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes; #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141); #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:171,sanitiz,sanitizer,171,https://root.cern,https://github.com/root-project/root/issues/9445,1,['sanitiz'],['sanitizer']
Security,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9072:158,password,passwords,158,https://root.cern,https://github.com/root-project/root/issues/9072,6,"['access', 'authenticat', 'password']","['access', 'authentication', 'password', 'passwords']"
Security,"### Describe the bug; Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior; Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce; Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:; ```; {; TFile *f = new TFile(""bar.root"", ""RECREATE"");; TTree *foobar = new TTree(""t"", ""t"");; foobar->Write();; TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);; new TBrowser();; }; ```; reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):; ```; root [1] .ls; TFile** bar.root; TFile* bar.root; OBJ: TTree t t : 0 at: 0x5617aee19b60; OBJ: TH1D foo foo : 0 at: 0x5617afef9650; KEY: TTree t;1 t; ```; The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. ; (arguably, users should care about the `TDirectory` context...). ### Setup; 1. ROOT version: 6.26.00; 2. Operating system: Gentoo Linux; 3. ROOT built via package manager :wink:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10389:189,access,accessible,189,https://root.cern,https://github.com/root-project/root/issues/10389,2,['access'],"['accessed', 'accessible']"
Security,"### Describe the bug; ROOT master (c8ad00846344c090c3a6f653e0decf38ad324d65) fails to build with g++ 12.2 with `cmake -DCMAKE_CXX_STANDARD=20`. The reported error is:; ```; In file included from /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamReader.h:16,; from /home/bgruber/dev/root/interpreter/llvm/src/lib/Support/BinaryStreamReader.cpp:9:; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected unqualified-id before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ^~~~~; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected ‘)’ before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ~^~~~~; | ); ```. Checking out the offending file:; ```c++; template <typename T>; class FixedStreamArrayIterator; : public iterator_facade_base<FixedStreamArrayIterator<T>,; std::random_access_iterator_tag, const T> {. public:; FixedStreamArrayIterator(const FixedStreamArray<T> &Array, uint32_t Index); : Array(Array), Index(Index) {}. FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other) // ERROR HERE; : Array(Other.Array), Index(Other.Index) {}; ...; ```; indeed looks like wrong C++ syntax (the constructor shall only be named via an id-expression referring to the injected class name, see [here](https://eel.is/c++draft/class.ctor#general-1)). The `<T>` should be removed. The issue was fixed in upstream LLVM with [this commit](https://github.com/llvm/llvm-project/commit/2ccf0b76bcaf0895e04f14e3ff53c59dd96f9f0f). Please consider cherry-picking this commit. ### To Reproduce; 1. git clone ROOT master; 2. `cmake -DCMAKE_CXX_STANDARD=20`; 3. `make`. ### Setup. * gcc 12.2; * Ubuntu 22.10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12037:1396,inject,injected,1396,https://root.cern,https://github.com/root-project/root/issues/12037,1,['inject'],['injected']
Security,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:367,hash,hashtable,367,https://root.cern,https://github.com/root-project/root/issues/8642,3,['hash'],"['hash', 'hashtable']"
Security,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11712:27,access,accessing,27,https://root.cern,https://github.com/root-project/root/issues/11712,2,['access'],"['access', 'accessing']"
Security,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968:295,Sanitiz,Sanitizer,295,https://root.cern,https://github.com/root-project/root/issues/7968,1,['Sanitiz'],['Sanitizer']
Security,"### Description. Using a conditional RooProdPdf in a RooSimultaneous spawns too many integrals with new CPU evaluation backend. This is a deal breaker for fitting the open likelihood of the CMS Run 1 Higgs analysis with the new CPU evaluation backend, because evaluating these unnecessary integrals takes too much time (although the result is correct). Since the RooFit AD backend uses the same ""`compileForNormSet`"" method to sanitize the computation graph, it's also a blocker for minimizing the CMS Higgs Run 1 likelihood with AD. ### Reproducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calcula",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15751:427,sanitiz,sanitize,427,https://root.cern,https://github.com/root-project/root/issues/15751,1,['sanitiz'],['sanitize']
Security,"### Explain what you would like to see improved and how. There are many useful operations such as `GetColumnType` that is trivial to be included in the operation list of distributed RDF. I suggest to expose these operations to users. The `GetColumnType` method is useful when someone tries to save columns based on the column type, e.g. I only want to save columns that are standard supported types for numpy arrays when I try to do `AsNumpy`. . The very easy way to implement this would be to add it similar to how `GetColumnNames` is added [here](https://github.com/root-project/root/blob/a29e81cb1cd217ca2096a44d01fb273e085b4e8b/bindings/experimental/distrdf/python/DistRDF/HeadNode.py#L246). A workaround for now would be to do; ```; rdf._headnode._localdf.GetColumnType; ```. ### ROOT version. 6.30/04. ### Installation method. LCG (Swan). ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15039:200,expose,expose,200,https://root.cern,https://github.com/root-project/root/issues/15039,1,['expose'],['expose']
Security,### Explain what you would like to see improved and how. We can speed up the builds significantly by using the github actions cache system. More can be read here: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows . Essentially we need a `actions/cache/restore@v3`. This is done in the clad CI here: https://github.com/vgvassilev/clad/blob/d2df9008e071f7f78d1606a040b21149ade66eea/.github/workflows/ci.yml#L637-L678. The idea is to cache the builds of ROOT up to cling and make a hash that will invalidate the cache only if something in cling is touched. In that case the system will regenerate the caches. We need to figure out if the 10GB storage is enough per project or we can store these things locally. For the Clad project it has been working flawlessly for ~1 year now. . ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987:523,hash,hash,523,https://root.cern,https://github.com/root-project/root/issues/14987,1,['hash'],['hash']
Security,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15285:661,access,access,661,https://root.cern,https://github.com/root-project/root/issues/15285,1,['access'],['access']
Security,"### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp; auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:; TVector2 const vec = func_that_returns_TVector2();; auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);; assert(y == b);; ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11806:568,access,accessing,568,https://root.cern,https://github.com/root-project/root/issues/11806,1,['access'],['accessing']
Security,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:; ```cpp; // works ; auto ulong_field = RField<unsigned long>(""ulong""); ; EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());; // throws runtime exception; auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();; ```; ```; C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; Typedef / type alias fields are also an issue:; ```cpp; // works; auto str_size_field = RField<std::string::size_type>(""str_size"");; // throws exception; auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();; ```; ```; C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:; ```cpp; struct CustomStruct {; unsigned long ul;; };; // ... ; auto class_field = RField<CustomStruct>(""custom_struct"");; ```; ```; C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7875:591,access,access,591,https://root.cern,https://github.com/root-project/root/issues/7875,1,['access'],['access']
Security,"### Explain what you would like to see improved; Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved; We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7853:358,expose,expose,358,https://root.cern,https://github.com/root-project/root/issues/7853,1,['expose'],['expose']
Security,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781:509,secur,secure,509,https://root.cern,https://github.com/root-project/root/issues/8781,1,['secur'],['secure']
Security,"### Explain what you would like to see improved; Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10739:92,access,access,92,https://root.cern,https://github.com/root-project/root/issues/10739,1,['access'],['access']
Security,"### Explain what you would like to see improved; Support the storage of user-defined classes that behave as collections of elements. Such classes provide access to the collection via a class that overrides member functions in the `TVirtualCollectionProxy` class. . The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In later stages, RNTuple might provide this functionality through an interface different from the legacy `TVirtualCollectionProxy`. . ### Additional context; This is required for ATLAS data model, more specifically the `DataVector<T>` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11523:154,access,access,154,https://root.cern,https://github.com/root-project/root/issues/11523,1,['access'],['access']
Security,"### Explain what you would like to see improved; Users should be allowed to customize the underlying object class of DAOS objects,; depending on their particular scenario. Unless the user specifies otherwise, we will; probably default to `OC_SX`. ### Optional: share how it could be improved; These kind of backend-specific parameters should be exposed via a subclass of; `RNTupleWriteOptions`, e.g. `RNTupleDaosWriteOptions`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8205:345,expose,exposed,345,https://root.cern,https://github.com/root-project/root/issues/8205,1,['expose'],['exposed']
Security,"### Feature description. As requested by the user on the forum (https://root-forum.cern.ch/t/rdataframe-feature-request-per-sample-histo-graph-fill-and-filter/), a FilterPerSample feature would improve and simplify physics analysis when a single RDataFrame with multiple samples is used. . There is an additional suggestion from the user concerning ""an option to expose the RSampleInfo object as a default RDataFrame column (in the same way as rdfentry_ and rdfslot_), maybe “rdfsample_” "". . ### Alternatives considered. The current workaround is by using a DefinePerSample in an additional column, where weights are set to 0 for all but the sample of interest. . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13422:363,expose,expose,363,https://root.cern,https://github.com/root-project/root/issues/13422,1,['expose'],['expose']
Security,"### Feature description. It would be good to have a script to update the [PDG table in ROOT](https://github.com/root-project/root/blob/master/etc/pdg_table.txt) from various sources. As a first step, the recent [mcdata from the Particle Data Group](https://pdg.lbl.gov/2023/mcdata/mass_width_2023.txt) could be parsed. As a second step, corresponding [web/database APIs](https://pdg.lbl.gov/2023/html/computer_read.html) could be accessed. . _Originally suggested by @vkucera in https://github.com/root-project/root/issues/12968#issuecomment-1592966409_. ### Alternatives considered. _No response_. ### Additional context. This was conceived as a traineeship task by @Axel-Naumann for @DenizCiger.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13323:430,access,accessed,430,https://root.cern,https://github.com/root-project/root/issues/13323,1,['access'],['accessed']
Security,"### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python; ROOT.SetFont(""MyCustomFont.otf""); ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14065:135,expose,expose,135,https://root.cern,https://github.com/root-project/root/issues/14065,1,['expose'],['expose']
Security,"### Is your feature request related to a problem? Please describe. Hello, as described in [ROOT-7859](https://sft.its.cern.ch/jira/browse/ROOT-7859), ROOT does not handle UTF8 encoding for characters in the current ROOT version (6.22). ### Describe the solution you'd like; It would be really nice to have such support since as shown on the sreenshot [here](https://sft.its.cern.ch/jira/secure/attachment/18752/TBrowser.png), characters with diacritics (here is the ""é"" character) are not correctly displayed.; It already exists some workarounds for the graphics (see the forum post) but it does not work in the case of the TBrowser for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6681:387,secur,secure,387,https://root.cern,https://github.com/root-project/root/issues/6681,1,['secur'],['secure']
Security,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:321,validat,validated,321,https://root.cern,https://github.com/root-project/root/issues/7361,2,"['expose', 'validat']","['expose', 'validated']"
Security,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603:1451,checksum,checksum,1451,https://root.cern,https://github.com/root-project/root/issues/11603,1,['checksum'],['checksum']
Security,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:351,access,access,351,https://root.cern,https://github.com/root-project/root/issues/11875,1,['access'],['access']
Security,"### Is your feature request related to a problem? Please describe.; Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like; It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:; - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path); - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other.; ; The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: ; `root -l my/full/path/to/folder/my_macro.C+t`; should give:; `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered; Using; `gSystem->SetBuildDir(""/tmp/"");`; in my `rootlogon.C`.; But this does not solve the overwrite problem. ### Additional context; https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10147:755,hash,hash-generated,755,https://root.cern,https://github.com/root-project/root/issues/10147,1,['hash'],['hash-generated']
Security,"### Is your feature request related to a problem? Please describe.; I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example; ```cxx; truth = df.Filter(has_truth, ...).; Define(""truth_computation"", expensive_computation_truth, ...);; reco = df.Filter(has_reco, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; ```; I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like; Ideally, one could then write something like; ```cxx; both = ROOT::RDF::Intersection(truth, reco);; both.Histo2D(..., {""truth_computation"", ""reco_computation""});; ```; Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered; I can calculate both quantities in the beginning; ```cxx; pre = df.Filter(has_truth || has_reco, ...).; Define(""truth_computation"", expensive_computation_truth, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; truth = pre.Filter(has_truth, ...);; reco = pre.Filter(has_reco, ...);; both = reco.Filter(has_truth, ...);; ```; but this will; 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive; 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10620:886,access,access,886,https://root.cern,https://github.com/root-project/root/issues/10620,1,['access'],['access']
Security,"### Is your feature request related to a problem? Please describe.; I want to create a frame for a _RooFormulaVar_. Unfortunately, it doesn't have a method _frame()_, so I wanted to use a _RooPlot_ constructor to create the frame, and later use the existing _plotOn()_ method of _RooFormulaVar_. However, it seems that [RooPlot](https://root.cern.ch/doc/master/classRooPlot.html) allows setting the number of bins only for _RooAbsRealLValue_, which is inconsistent. No method to set the number of bins is available. The underlying access to _nbins_ is private. ### Describe the solution you'd like; Allow to set the number of bins in all constructors. Maybe there should be a separate method for that, but it may be dangerous if someone tries to change the number of bins in the middle of processing. ### Describe alternatives you've considered; I already decided to use a new _RooRealVar_ instead of _RooFormulaVar_, but I think that a plot should allow to set the number of bins. UPD: no, there are no arguments to change the number of bins in _plotOn_. It seems it can be set only for the Plot.; _It looks like I can set the number of bins during _plotOn_ of _RooFormulaVar_. This is great. However, I think that in this case the number of bins in the constructor should be removed, to reduce code duplication. At least it should be made consistent in all constructors (see no reason for the otherwise, but I don't understand RooFit well yet)._. P.S. There is also a typo in the _RooPlot_ class description, ""settting"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7782:531,access,access,531,https://root.cern,https://github.com/root-project/root/issues/7782,1,['access'],['access']
Security,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11653:694,access,access,694,https://root.cern,https://github.com/root-project/root/issues/11653,2,['access'],['access']
Security,"### Is your feature request related to a problem? Please describe.; When TMVA training is run with k-fold cross validation, the variable importances (both method unspecific and method specific) are not printed out by TMVA. ### Describe the solution you'd like; It would be nice if TMVA could print out the variable importances for each fold, as evaluated on the training set for that fold. ### Additional context; I see this issue with ROOT 6.22.06 on lxplus, run by invoking . ```source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh```. I have tried training both with and without ```FoldFileOutput=True``` in the CrossValidation constructor, and don't see the variable importances in either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092:112,validat,validation,112,https://root.cern,https://github.com/root-project/root/issues/7092,1,['validat'],['validation']
Security,### This Pull request:; * Fix axis labels ; * CaloTower selection in context of REveDataCollection when collection filter is applied; * Fix client's duplicate error messages from server; * Minor correction in Summary view layout; * Add expression validator for new column expression in table; * Review log messages; * Introduce HttpPublic option which disable usage of RFileDialog; * Updates REnderCore with fixes in font renderin. From verion 1.5 to 1.6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16829:247,validat,validator,247,https://root.cern,https://github.com/root-project/root/pull/16829,1,['validat'],['validator']
Security,"%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NTi7%2BFO82QY6dKBp1en9fAODpFl%2FzZ0cHCZ3DsJzOIM%3D&reserved=0>; >>> ; >>> curl performs SSL certificate verification by default, using a ""bundle""; >>> of Certificate Authority (CA) public keys (CA certs). If the default; >>> bundle file isn't adequate, you can specify an alternate file; >>> using the --cacert option.; >>> If this HTTPS server uses a certificate signed by a CA represented in; >>> the bundle, the certificate verification probably failed due to a; >>> problem with the certificate (it might be expired, or the name might; >>> not match the domain name in the URL).; >>> If you'd like to turn off curl's verification of the certificate, use; >>> the -k (or --insecure) option.; >>> ***@***.*** t5]$ ; >> ; >> ; >> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:4572,certificate,certificate,4572,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32398,secur,security,32398,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53750,secur,security,53750,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57845,Access,Access,57845,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 13: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2422; 14: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48; 15: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54; 16: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2425; 17: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 18: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2463; 19: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2467; 20: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; /opt/root_src/core/base/src/TString.cxx:2515:11: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TString.cxx:2515; /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407; 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008; 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008; 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008; 7: Taking false branch in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:161795,secur,security,161795,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security,' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:19328,access,access,19328,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:5939,access,access,5939,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:6521,access,access,6521,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by differen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:17587,access,access,17587,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,'&&' is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 17: Assuming the condition is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 18: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18072; 19: Calling 'accept_new_connection' in /opt/root_src/net/http/civetweb/civetweb.c:18073; 20: Assuming the condition is false in /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:73079,secur,security,73079,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,'/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46277,secur,security,46277,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46736,secur,security,46736,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/Hel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35263,secur,security,35263,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d3376,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23530,secur,security,23530,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:47934,secur,security,47934,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58794,secur,security,58794,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48569,secur,security,48569,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58323,secur,security,58323,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:1787,secur,security,1787,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 st,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:4730,secur,security,4730,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,"(another alternative is calling `reader.Restart()` after you perform non-read-only operations on the object returned by `reader.GetTree()`, before `TTreeReader` itself accesses the object).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6641#issuecomment-775097287:168,access,accesses,168,https://root.cern,https://github.com/root-project/root/issues/6641#issuecomment-775097287,1,['access'],['accesses']
Security,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1549,checksum,checksum,1549,https://root.cern,https://github.com/root-project/root/issues/8268,1,['checksum'],['checksum']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393586302:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393586302,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393644259:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393644259,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28469/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2125#issuecomment-393740963:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2125#issuecomment-393740963,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28539/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-393862245:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-393862245,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28629/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394076468:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394076468,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28639/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2134#issuecomment-394078799:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2134#issuecomment-394078799,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28649/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394125476:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394125476,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28659/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-394158267:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-394158267,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28669/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-394166550:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-394166550,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28679/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394193738:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394193738,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28699/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-394286909:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-394286909,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394293761:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394293761,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28739/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2137#issuecomment-394298798:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2137#issuecomment-394298798,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394339120:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394339120,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28769/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138#issuecomment-394339523:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2138#issuecomment-394339523,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28789/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1971#issuecomment-394340120:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/1971#issuecomment-394340120,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28809/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394348659:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394348659,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28839/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2139#issuecomment-394372250:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2139#issuecomment-394372250,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28869/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394385534:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394385534,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28879/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2140#issuecomment-394386078:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2140#issuecomment-394386078,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28899/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394409589:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394409589,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28909/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2142#issuecomment-394456063:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2142#issuecomment-394456063,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28929/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394601269:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394601269,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28939/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394610671:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394610671,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-394741633:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-394741633,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29705/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396066340:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396066340,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29736/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396162096:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396162096,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30090/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396975222:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396975222,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30136/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2192#issuecomment-397195445:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2192#issuecomment-397195445,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30217/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397357824:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397357824,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30389/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398001738:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398001738,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398086881:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398086881,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30614/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398742839:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398742839,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30623/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220#issuecomment-398762202:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2220#issuecomment-398762202,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30632/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2221#issuecomment-398776137:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2221#issuecomment-398776137,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30650/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398788089:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398788089,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31418/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400455069:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400455069,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31484/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400820416:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400820416,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31655/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401785227:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401785227,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31664/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401790307:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401790307,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32483/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405239017:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405239017,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33773/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371#issuecomment-408384332:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2371#issuecomment-408384332,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33809/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408399396:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408399396,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-409268102:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-409268102,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34984/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-409881305:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-409881305,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-409967337:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-409967337,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410083254:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410083254,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410090281:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410090281,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35889/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-410833810:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-410833810,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36249/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411324665:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411324665,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36276/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411329443:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411329443,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411401046:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411401046,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411478809:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411478809,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36530/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411495922:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411495922,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36568/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-411685113:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-411685113,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36577/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411689618:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411689618,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36743/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411882917:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411882917,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36752/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411900558:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411900558,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36864/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412084096:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412084096,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36873/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412090993:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412090993,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37080/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412985127:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412985127,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37513/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414352157:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414352157,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37612/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2491#issuecomment-414596245:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2491#issuecomment-414596245,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37621/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414605121:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414605121,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37832/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414965082:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414965082,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38691/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2523#issuecomment-416212209:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2523#issuecomment-416212209,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/39704/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2584#issuecomment-418345810:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2584#issuecomment-418345810,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/39713/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2585#issuecomment-418349718:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2585#issuecomment-418349718,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/39795/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-418506284:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-418506284,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40023/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608#issuecomment-419816590:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2608#issuecomment-419816590,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40032/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608#issuecomment-419830701:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2608#issuecomment-419830701,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40041/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2598#issuecomment-420200226:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2598#issuecomment-420200226,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40050/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608#issuecomment-420202128:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2608#issuecomment-420202128,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40104/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2616#issuecomment-421290715:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2616#issuecomment-421290715,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40248/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2615#issuecomment-421923950:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2615#issuecomment-421923950,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40384/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2625#issuecomment-422049047:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2625#issuecomment-422049047,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40393/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2631#issuecomment-422137409:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2631#issuecomment-422137409,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40537/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2635#issuecomment-422413357:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2635#issuecomment-422413357,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40764/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2640#issuecomment-422784661:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2640#issuecomment-422784661,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40773/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2641#issuecomment-422790171:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2641#issuecomment-422790171,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40872/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2640#issuecomment-422946716:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2640#issuecomment-422946716,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40881/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-422949474:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-422949474,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40901/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2645#issuecomment-423104255:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2645#issuecomment-423104255,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40957/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-423160931:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-423160931,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41020/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncatio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423234786:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423234786,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41029/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2636#issuecomment-423240084:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2636#issuecomment-423240084,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41083/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncatio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423470178:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423470178,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41119/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncatio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423484950:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423484950,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41573/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-424009117:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-424009117,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42551/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425565118:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425565118,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42560/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425580897:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425580897,2,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42769/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725#issuecomment-426024920:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2725#issuecomment-426024920,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43386/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2762#issuecomment-427502005:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2762#issuecomment-427502005,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43454/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2766#issuecomment-427757639:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2766#issuecomment-427757639,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43504/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2769#issuecomment-427875819:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2769#issuecomment-427875819,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43646/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776#issuecomment-428371819:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2776#issuecomment-428371819,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43765/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776#issuecomment-428692178:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2776#issuecomment-428692178,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44100/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2787#issuecomment-429154715:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2787#issuecomment-429154715,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44276/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2798#issuecomment-429803787:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2798#issuecomment-429803787,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44566/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2810#issuecomment-430546746:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2810#issuecomment-430546746,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45192/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2835#issuecomment-432436436:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2835#issuecomment-432436436,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45780/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867#issuecomment-433448265:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2867#issuecomment-433448265,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46234/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2887#issuecomment-434646682:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2887#issuecomment-434646682,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46274/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2890#issuecomment-434730099:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2890#issuecomment-434730099,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46345/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2893#issuecomment-434792948:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2893#issuecomment-434792948,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52448/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3329#issuecomment-458181971:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3329#issuecomment-458181971,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52691/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3329#issuecomment-459060396:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3329#issuecomment-459060396,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54944/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470944676:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470944676,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55077/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3524#issuecomment-471684694:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3524#issuecomment-471684694,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56004/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3609#issuecomment-477227559:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3609#issuecomment-477227559,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58166/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-487243497:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-487243497,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58304/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-487550444:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-487550444,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66634/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4312#issuecomment-526392027:980,access,accessing,980,https://root.cern,https://github.com/root-project/root/pull/4312#issuecomment-526392027,1,['access'],['accessing']
Security,") src/core/base/src/TApplication.cxx:1480:11; #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14; #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11; #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22; #24 0x4ff96d in main src/main/src/rmain.cxx:30:12; #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16; #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame; #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):; [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable; [96, 104) 'R__guard2471' (line 2471); [128, 136) 'R__guard2488' (line 2488); [160, 176) 'interpreterFlagsRAII' (line 2491); [192, 240) 'result' (line 2511); [272, 276) 'compRes' (line 2512); [288, 312) 'mod_line' (line 2517); [352, 376) 'aclicMode' (line 2518); [416, 440) 'arguments' (line 2519); [480, 504) 'io' (line 2520); [544, 568) 'fname' (line 2521); [608, 632) 'ref.tmp' (line 2547); [672, 696) 'ref.tmp145' (line 2547); [736, 768) 'code' (line 2555); [800, 832) 'codeline' (line 2556); [864, 1384) 'in' (line 2559); [1520, 1552) 'ref.tmp176' (line 2562); [1584, 1600) 'agg.tmp'; [1616, 1624) 'ref.tmp198' (line 2568); [1648, 1664) 'agg.tmp207'; [1680, 1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:4670,access,access,4670,https://root.cern,https://github.com/root-project/root/pull/8041,1,['access'],['access']
Security,) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes; (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member; (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type; (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type; (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects; (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:5531,inject,injected,5531,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['inject'],['injected']
Security,)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:10070,access,access,10070,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::DumpLookupTables>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(ClangInternalState.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:10652,access,access,10652,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,"). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:2665,access,accessed,2665,https://root.cern,https://github.com/root-project/root/pull/9128,1,['access'],['accessed']
Security,"); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:168326,hash,hash,168326,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"* 49 vars */) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 4; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; one with the redirection enabled:; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffe7c400bd8 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:1367,access,access,1367,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,1,['access'],['access']
Security,"* Implement scene subscription in order to add and remove views dynamically on client; * Add toolbar in a view to directly access control to expand, swap, and destroy; * Change 'View'manu in the menubar to 'Subscribe' menu to create views on the client that are not yet subscribed; * Fix possible deadlock on client disconnect while the client is updating",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12383:123,access,access,123,https://root.cern,https://github.com/root-project/root/pull/12383,1,['access'],['access']
Security,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13572:255,validat,validates,255,https://root.cern,https://github.com/root-project/root/pull/13572,1,['validat'],['validates']
Security,* Rename function access a channel from EveLog() to REveLog(); * Make logger stored messages thred local,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8191:18,access,access,18,https://root.cern,https://github.com/root-project/root/pull/8191,1,['access'],['access']
Security,* failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26931,secur,security,26931,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,* failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18805,secur,security,18805,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,* failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-securi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22935,secur,security,22935,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,* failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25762,secur,security,25762,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"* fix invalid memory access in RooFuncWrapper by getting observables and parameters of the original function, and not the one that is compiled for a normalization set, which is temporary. What matters are the names of the parameters and observables, and they are the same anyway. * new `CodeSquashContext::buildCall()` function to avoid code duplication. * add support for `RooExponential`, including unit test. Followup to #12529.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12554:21,access,access,21,https://root.cern,https://github.com/root-project/root/pull/12554,1,['access'],['access']
Security,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15163:131,access,accessors,131,https://root.cern,https://github.com/root-project/root/pull/15163,1,['access'],['accessors']
Security,"* t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>> CApath: none; >>>>>>> * Server certificate:; >>>>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:4969,certificate,certificate,4969,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['certificate'],['certificate']
Security,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10699:298,access,access,298,https://root.cern,https://github.com/root-project/root/pull/10699,2,['access'],"['access', 'accesses']"
Security,"**For reviewers**:; The most important commit is the first, and specifically the files; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at on",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:500,access,access,500,https://root.cern,https://github.com/root-project/root/pull/5502,1,['access'],['access']
Security,"*Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python?; ```python; ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""); ROOT.l; ```; I get:; ```txt; /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)""; attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ); ```; I see on the contrary that it is possibile to use std::function; ```python; ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""); ROOT.f(); ```; the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16168:485,Expose,ExposeCppMacros,485,https://root.cern,https://github.com/root-project/root/issues/16168,1,['Expose'],['ExposeCppMacros']
Security,"*Shrug*. If people want to provide their own llvm I count on them knowing what they do; they get what they pay for. They *can* still build the external llvm correctly for libCling to not expose symbols. I.e. ""do we have a builtin llvm"" isn't the relevant question to ask. For me, for that case, this PR is good enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-571746305:187,expose,expose,187,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-571746305,1,['expose'],['expose']
Security,"+-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary downl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4883,hash,hash-style,4883,https://root.cern,https://github.com/root-project/root/issues/7654,1,['hash'],['hash-style']
Security,"+1. Since ROOT requires that downstream projects be compiled with the same C++ standard that was used for ROOT, ROOT should expose that standard as `ROOT_CXX_STANDARD`. Many projects have to extract that information by regex-matching, e.g. https://gitlab.cern.ch/hepmc/HepMC3/-/blob/master/CMakeLists.txt#L153-171 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1728568914:124,expose,expose,124,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1728568914,1,['expose'],['expose']
Security,", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024); at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960; --Type <RET> for more, q to quit, c to continue without paging--; #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0); at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839; #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249; #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262; #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20); at eventhandling/hades.cc:956; #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512; #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547; (gdb); ```. ### To Reproduce; Custom code requires whole framework, hard to regenerate. ### Setup; 1. root@v5-34-00-patches (sorry that I still need to use root-5); 2. Operating system; ```; $ lsb_release -a; LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch; Distributor ID: Debian; Description: Debian GNU/Linux 8.11 (jessie); Release: 8.11; Codename: jessie; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:7203,secur,security-,7203,https://root.cern,https://github.com/root-project/root/issues/9564,4,['secur'],['security-']
Security,", but works only for polymorphic classes, while TClass::DynamicCast and exception-based cast also work for non-polymorphic ones.; > If you want TDirectory to work for all kinds of classes you should consider not dynamic_cast algorithm [1], but exception handler matching one [2].; > Unfortunately, [2] says:; >> Since the RTTI related exception handling routines are ""personality specific"", no interfaces need to be specified in this document (beyond the layout of the RTTI data).; > ; > In libstdc++/libsupc++, handler matching algorithm is easily accessible directly through std::type_info from standard <typeinfo> header, using __do_catch() member function [3].; > The situation with libcxxabi is a bit more complicated. std::type_info in libcxx <typeinfo> header [4] doesn't have any non-standard member functions, instead it has additional hidden __shim_type_info class [5] between std::type_info and other Itanium C++ ABI type_info derived types. And this __shim_type_info class, in turn, provides access to the handler matching algorithm [6].; > ; > So, if we want this exception hander matching algorithm, there are a couple of options:; > 1) Stick to libsupc++ with its ""public"" __do_catch() member function; > 2) Implement independent handler matching algorithm ([7] might help), I think it doesn't require anything except standardised list of type_info-derived types [8]; > 3) Take a closer look at noop1() and noop2() virtual methods above [6]. I suspect they were added to make libcxxabi type_info's vtable compatible with one of type_info from libsupc++, because libsupc++'s type_info also has a couple of virtual methods before the method which does catching check (see above [3]). The only difference is that __do_catch() has additional third argument whilst libcxxabi's can_catch() has only two. I think it won't cause problems if one calls two-argument method with three arguments, but doing the opposite might be troublesome. So, finally, if I'm right, we may try to call the method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/463:1901,access,access,1901,https://root.cern,https://github.com/root-project/root/pull/463,1,['access'],['access']
Security,", long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659); ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:13876,Access,AccessSpecifier,13876,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Access'],['AccessSpecifier']
Security,", long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659); ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:16502,Access,AccessSpecifier,16502,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Access'],['AccessSpecifier']
Security,", std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614); ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819); ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:212982,hash,hash,212982,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,12,['hash'],"['hash', 'hashtable']"
Security,", std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587); ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:164060,hash,hash,164060,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,8,['hash'],"['hash', 'hashtable']"
Security,"- Add a couple of missing symbols into the export list; - Fix several test failing on Windows, mostly due to files staying open (creates file access issues on Windows); - Filter-out several unsupported tests (will add them back once the underlying issues are fixed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4805:142,access,access,142,https://root.cern,https://github.com/root-project/root/pull/4805,1,['access'],['access']
Security,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066:48,sanitiz,sanitizer,48,https://root.cern,https://github.com/root-project/root/pull/5066,2,['sanitiz'],['sanitizer']
Security,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5237:48,sanitiz,sanitizer,48,https://root.cern,https://github.com/root-project/root/pull/5237,5,['sanitiz'],['sanitizer']
Security,"- Change implementation of next event. Simplify updates. Update summary tree on scene changes. - Optimize streaming. - Detect web-socket close and warn user (red rectangle in topbar). - Standalone THREE renderer:; - ortho camera, compositing, camera reset, key and mouse handling (own copy of OrbitController needed); - picking, highlight and tooltips; - selection and multiple selection. - Don't execute user input from main toolbar while scene changes are processing. - Add virtual function LocalModelChanges to controll model changes in the proxy builder. - Major cleanup of several JS classes. - New class REveEllipsod (error ellipse). - Support changing of outline colors for selection/highlight. - Review / improve REveData classes, esp. for selection and projections. - REveSelection, allow a list of selection upward propagation modes, not just a single one. - Validate expressions for table views, also, check TROOT::ProcessLine staus. - Cleanup some TEve-stlye change propagation / update functions. - Merge REveElement GetMaster() and ForwardSelection() through fSelectionMaster member. - Use REveAuntAsList in REveDataItem to communicate selection between proxy builders and REveDataItem. - Improve selection handling for compounds and multi-Objec3D representations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:869,Validat,Validate,869,https://root.cern,https://github.com/root-project/root/pull/4617,1,['Validat'],['Validate']
Security,- Modify the examples: no need to return the TCanvas.; - Make an index to ease access to the various sections.; - Resize and reformat the pictures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11809:79,access,access,79,https://root.cern,https://github.com/root-project/root/pull/11809,1,['access'],['access']
Security,- Two important things: Dramatically speed up hash-assisted finds in `RooArgSet`; - Reduce `dynamic_cast` in RooAbsArg::setProxyNormSet. Here are some timings on a random machine with a dummy ATLAS Higgs->gamma gamma workspace:; | | Build | Fit |; | ------------------------------ | ----- | ---- |; | HGam old | 3:33 | 3:30 |; | HGam new | 0:40 | 2:12 |,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9411:46,hash,hash-assisted,46,https://root.cern,https://github.com/root-project/root/pull/9411,1,['hash'],['hash-assisted']
Security,"- [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on; https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:; 1. git clone http://root.cern.ch/git/root.git; 2. rootvers=""6-26-06""; git checkout v$rootvers; 3. mkdir ../root-build; cd ../root-build; 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06; 2. Operating system Linux Fedora 36; 3. git clone http://root.cern.ch/git/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11160:119,hash,hash,119,https://root.cern,https://github.com/root-project/root/issues/11160,1,['hash'],['hash']
Security,"- [ ] Checked for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8791:429,checksum,checksum,429,https://root.cern,https://github.com/root-project/root/issues/8791,1,['checksum'],['checksum']
Security,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A reproducer:. ```python; import ROOT; print(ROOT.gSystem.GetIncludePath()); ROOT.vector('int')(); print(ROOT.gSystem.GetIncludePath()); ```. prints . ```; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7"" -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""; ```. Note that the second line contains ` -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""`, which wasn't there before a `ROOT.vector` was instantiated. That's problematic because the user might not have permissions to access the build directory (while it can access the install directory) leading to cling errors. This is with ROOT master@028fcca0fa , compiling ROOT with `cmake -DCMAKE_BUILD_TYPE=Debug -Dccache=ON -Ddev=ON -Droofit=OFF -Dtmva=OFF -Dtesting=ON -Droottest=ON ../root`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108:1332,access,access,1332,https://root.cern,https://github.com/root-project/root/issues/7108,2,['access'],['access']
Security,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409:107,access,accessible,107,https://root.cern,https://github.com/root-project/root/issues/12409,1,['access'],['accessible']
Security,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:528,inject,inject,528,https://root.cern,https://github.com/root-project/root/issues/8633,1,['inject'],['inject']
Security,"- [x] Checked for duplicates. ### Describe the bug; Hi, may I discuss possible solutions of the incorrect work of the 'TPgSQLStatement::SetBinary' function.; In our experiment, we've used 'TPgSQLStatement::SetLargeObject' with PostgreSQL 8, but now we've moved to PostgreSQL 12 and discover that since PostgreSQL 9 the developers limited access to pg_largeobject, which leads to some problems.; So now we are using TPgSQLStatement::SetBinary' instead and i've found some bugs.; The original 'SetBinary' function includes the following main lines:; ```; unsigned char* escape_ptr = PQescapeBytea((const unsigned char*)mem, sz, &mxsz);; unsigned char* binary_ptr = PQunescapeBytea((const unsigned char*)escape_ptr, &mxsz);; ```; 1. 'PQunescapeBytea' conversion is not exactly the inverse of 'PQescapeBytea': 'PQescapeBytea' doubles quotes, but 'PQunescapeBytea' doesn't change quotes (doesn't remove added quotes).; So double quotes should be reduced to single ones after the conversion. Otherwise, a bytea field stored in the database has two quotes instead of original single ones.; 2. The solution works for PostgreSQL 8 (except 1. cases), because it escapes special characters with two backslashes, but since PostgreSQL 9.3 the special characters are escaped with one backslash. It means that PQunescapeBytea returns the special characters to original symbols refused by database encoding (UTF8 by default).; e.g. for CREATE TABLE test ( d bytea NOT NULL );; ```; TSQLStatement* stmt = my_db->Statement(""insert into test(d) values ($1)"");; int d = 8332;; stmt->NextIteration();; stmt->SetBinary(0, &d, sizeof(int));; stmt->Process();; ...; stmt = my_db->Statement(""select d from test"");; stmt->Process();; stmt->StoreResult();; while (stmt->NextResultRow()) {; void* mem = 0; Long_t size_mem = 0;; stmt->GetBinary(0, mem, size_mem);; int* val = new int;; memcpy(val, mem, size_mem);; cout<<""Binary size: ""<<size_mem<<"". Int value: ""<<*val<<endl;; }; ```; PostgreSQL 8 works well:. > 8c2000 // before",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127:338,access,access,338,https://root.cern,https://github.com/root-project/root/issues/7127,1,['access'],['access']
Security,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11651:194,access,access,194,https://root.cern,https://github.com/root-project/root/issues/11651,2,['access'],"['access', 'accessed']"
Security,"- [x] Checked for duplicates. ### Describe the bug; TClassEdit reads behind the end of a static string to find the type of an STL container.; This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior; It shouldn't read after the end of the string. ### To Reproduce; Apply this patch:; ```; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -13,6 +13,7 @@; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ; +#include <array>; #include <cstdio>; #include <cstdlib>; #include <cassert>; @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type); ; int TClassEdit::STLArgs(int kind); {; - static const char stln[] =// min number of container arguments; + constexpr int nKind = 14;; + assert(kind < nKind);; + static constexpr std::array<char, nKind> stln = // min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup; master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903:162,sanitiz,sanitizer,162,https://root.cern,https://github.com/root-project/root/issues/7903,1,['sanitiz'],['sanitizer']
Security,- [x] Checked for duplicates. ### Describe the bug; The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47.; This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior; The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce; Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9334:61,validat,validation,61,https://root.cern,https://github.com/root-project/root/issues/9334,1,['validat'],['validation']
Security,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387:253,access,accessed,253,https://root.cern,https://github.com/root-project/root/issues/8387,1,['access'],['accessed']
Security,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8946:219,sanitiz,sanitizer,219,https://root.cern,https://github.com/root-project/root/issues/8946,1,['sanitiz'],['sanitizer']
Security,"- [x] Checked for duplicates. ### Describe the bug; When using ROOT::RFile in my projects, I get some compiler warnings:. ```; In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,; from /opt/root_bld/include/ROOT/RFile.hxx:19,; from zdt-daq/gui/MainWindow.cpp:49:; /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]; switch (severity) {; ^; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]; /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:; /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]; class RLogManager : public RLogChannel, public RLogHandler {; ^~~~~~~~~~~; ```. ### Expected behavior; No warnings are found. ### Setup; 1. ROOT master; 2. Ubuntu 19; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8458:978,access,accessible,978,https://root.cern,https://github.com/root-project/root/issues/8458,1,['access'],['accessible']
Security,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11135:609,HasH,HasHungOffUses,609,https://root.cern,https://github.com/root-project/root/issues/11135,2,['HasH'],['HasHungOffUses']
Security,"- [x] Checked for duplicates. `TCling::UpdateListOfLoadedSharedLibraries()` iterates through the linked list of dynamic libraries maintained by glibc and saves a pointer into the middle of the list:. https://github.com/root-project/root/blob/49c45b3291c71ffc7f603ae4267f112fdaf77ac4/core/metacling/src/TCling.cxx#L3285-L3290. This is a linked list that can be modified by the activity of other threads, so access to it needs to be protected by a glibc internal `dl_load_write_lock`. glibc provides an interface for this purpose, `dl_iterate_phdr(3)`:. https://linux.die.net/man/3/dl_iterate_phdr. which should be used instead of iterating through the list without the appropriate locking. This bug is not trivial to reproduce, but is believed to be responsible for crashes observed in CMS relval tests https://github.com/cms-sw/cmssw/issues/30359",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6797:406,access,access,406,https://root.cern,https://github.com/root-project/root/issues/6797,1,['access'],['access']
Security,"- [x] Checked for duplicates. ```; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h: In member function 'llvm::Error cling::IncrementalJIT::RemovableObjectLinkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146:597,Access,AccessSymbolTable,597,https://root.cern,https://github.com/root-project/root/issues/11146,1,['Access'],['AccessSymbolTable']
Security,"- [x] Checked for duplicates; ### Describe the bug; If I try to build a TTreeIndex using a specific element of a (pointer to) vector stored in the tree (like `BuildIndex(""values[5]"")`) the expression is always evalued as 0. This happens both with `BuildIndex` and with the `TTreeIndex` constructor.; ### Expected behavior; The expression used in the creation of the index should access correctly the given element of the vector (as it does when using the same expression in the `TTree::Scan` function); ### To Reproduce; I have prepared a small macro that creates a tree with a minimal structure and show how the indexing fails: https://cernbox.cern.ch/s/JXlFpygmNVVrbjP; ### Setup; Tested with both root 6.26/08 and 5.34/25",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11883:379,access,access,379,https://root.cern,https://github.com/root-project/root/issues/11883,1,['access'],['access']
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:712,access,accessed,712,https://root.cern,https://github.com/root-project/root/issues/9744,1,['access'],['accessed']
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:; ```; root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""); Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot ; Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18); Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data.; (TFile *) nullptr; ```; Leaving behind only a file with size 0. ### Expected behavior; I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - MinIO s3 object storage. - `~/.rootrc` file:; ```; Davix.Debug: 2; Davix.GSI.CACheck: y; Davix.GSI.CAdir: /etc/ssl/certs; Davix.S3.Alternate: y; ```; - and then interactively:; ```; $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |; | From tag , 1 September 2021 |; | With |; | Try '.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9584:702,Access,AccessKey,702,https://root.cern,https://github.com/root-project/root/issues/9584,2,['Access'],"['Access', 'AccessKey']"
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) ; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1; =================================================================; ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18; READ of size 8 at 0x6020001549e0 thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8021:434,sanitiz,sanitizer,434,https://root.cern,https://github.com/root-project/root/issues/8021,1,['sanitiz'],['sanitizer']
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. This is still the case if an external constraint is used:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490:529,access,access-roomcstudy-genpardataset,529,https://root.cern,https://github.com/root-project/root/issues/9490,1,['access'],['access-roomcstudy-genpardataset']
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:543,checksum,checksum,543,https://root.cern,https://github.com/root-project/root/issues/10503,3,['checksum'],['checksum']
Security,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```; input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found; #include ""ROOT/TPyDispatcher.h""; ^~~~~~~~~~~~~~~~~~~~~~; Traceback (most recent call last):; File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>; m = ROOT.TPyDispatcher( MyDraw ); File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute TPyDispatcher from ROOT; ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02; 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04); 3. Python version: Python3.8; 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6579:397,access,access,397,https://root.cern,https://github.com/root-project/root/issues/6579,1,['access'],['access']
Security,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502:131,expose,expose,131,https://root.cern,https://github.com/root-project/root/pull/7502,1,['expose'],['expose']
Security,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/166:53,access,accessors,53,https://root.cern,https://github.com/root-project/root/pull/166,3,['access'],"['access', 'accessing', 'accessors']"
Security,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3). This merge request is result of profiling work in the AliRoot framework where simple accesses to the mentioned objects are considerable (on the 2% level).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:53,access,accessors,53,https://root.cern,https://github.com/root-project/root/pull/165,4,['access'],"['access', 'accesses', 'accessing', 'accessors']"
Security,"-------===//; ; +#include <iostream>; #include ""RuntimeDyldELF.h""; #include ""RuntimeDyldCheckerImpl.h""; #include ""Targets/RuntimeDyldELFMips.h""; @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,; ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);; ; // Check that -2^32 <= X < 2^32; + if (! isInt<33>(Result)) {; + outs() << ""resolveAArch64Relocation, LocalAddress: 0x""; + << format(""%llx"", Section.getAddressWithOffset(Offset)); + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress); + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x""; + << format(""%x"", Type) << "" Addend: 0x""; + << format(""%llx"", Addend) << ""\n"";; + }; assert(isInt<33>(Result) && ""overflow check failed for relocation"");; ; // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken; ```. Using gdb proved to be fruitless in this environment.; - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:; ```console; # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b; GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""aarch64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe...; Starting program: /data/root-build-runtime_cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:3406,secur,security-opt,3406,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['secur'],['security-opt']
Security,"-I""/<<PKGBUILDDIR>>/core/base/inc"" -I""/<<PKGBUILDDIR>>/core/clib/inc"" -I""/<<PKGBUILDDIR>>/core/meta/inc"" -I""/<<PKGBUILDDIR>>/core/foundation/inc"" -I""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/ginclude"" -I""/<<PKGBUILDDIR>>/interpreter/cling/include"" -isystem ""/<<PKGBUILDDIR>>/interpreter/llvm/src/tools/clang/include"" -isystem ""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/interpreter/llvm/src/tools/clang/include"" -isystem /usr/lib/llvm-13/include -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o.d -o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -c '/<<PKGBUILDDIR>>/core/dictgen/src/rootcling_impl.cxx'; <<snip>>; [6107/8663] : && /usr/lib/ccache/c++ -fPIC -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.27 -o lib/libCling.so.6.27.99 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:1591,secur,security,1591,https://root.cern,https://github.com/root-project/root/issues/12152,1,['secur'],['security']
Security,-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFontDialog.cxx:631:7: warning: Value stored to 'n1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'n1' is never read in /opt/root_src/gui/gui/src/TGFontDialog.cxx:631; /opt/root_src/gui/gui/src/TGFontDialog.cxx:884:4: warning: Value stored to 'n1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'n1' is never read in /opt/root_src/gui/gui/src/TGFontDialog.cxx:884; /opt/root_src/gui/gui/src/TGInputDialog.cxx:82:4: warning: Value stored to 'height' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height' is never read in /opt/root_src/gui/gui/src/TGInputDialog.cxx:82; /opt/root_src/gui/gui/src/TGInputDialog.cxx:154:22: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:154; /opt/root_src/gui/gui/src/TGInputDialog.cxx:180:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:180; /opt/root_src/gui/gui/src/TGLayout.cxx:286:16: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:39539,secur,security,39539,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security,-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32666,secur,security,32666,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:55365,secur,security,55365,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"-reflex was deprecated because the flag was parsed but nothing was done after. Rootcling works in two modes. The first mode is when it is called directly. The second mode is when it was called from genreflex. Genreflex is essentially calling rootcling with the appropriate flag translation and it sets the isGenReflex variable to true. The argument translation mechanism of genreflex has a nice feature which can print the underlying rootcling invocation. This is helpful if we want to move away from reflex to rootcling. This might be reasonable to get access to the finer grained arguments and options rootcling provides. However, we should still call rootcling and set the isGenReflex to true as the variable alters the content of the dictionaries. In cmssw C++ modules IB we use rootcling instead of genreflex to have better control on the module generation provided by the rootcling option set. This patch implements a flag which can turn the rootcling invocation completely to genreflex. Using rootcling -reflex should fix the DataFormats/Provenance dictionary generation for cmssw. cc: @oshadura, @smuzaffar, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4547:554,access,access,554,https://root.cern,https://github.com/root-project/root/pull/4547,1,['access'],['access']
Security,-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50404,secur,security,50404,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:62701,secur,security,62701,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-secur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16628,secur,security,16628,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48480,secur,security,48480,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:63717,secur,security,63717,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34607,secur,security,34607,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45828,secur,security,45828,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:2029,secur,security,2029,https://root.cern,https://github.com/root-project/root/pull/11808,1,['secur'],['security']
Security,". Install it as the current scope.; + if (!IsTemporary) {; assert(getCurScope() == nullptr && ""A scope is already active?"");; EnterScope(Scope::DeclScope);; Actions.ActOnTranslationUnitScope(getCurScope());; -; + }; // Initialization for Objective-C context sensitive keywords recognition.; // Referenced in Parser::ParseObjCTypeQualifierList.; if (getLangOpts().ObjC) {; @@ -535,10 +536,12 @@ void Parser::Initialize() {; Ident_module = PP.getIdentifierInfo(""module"");; }; ; + if (!IsTemporary) {; Actions.Initialize();; ; // Prime the lexer look-ahead.; ConsumeToken();; + }; }; ; void Parser::LateTemplateParserCleanupCallback(void *P) {; ```. I think the JIT is really overwriting the stack:; ```; ==20514== Invalid read of size 1; ==20514== at 0x4500198: TUrl::SetUrl(char const*, bool) (TUrl.cxx:115); ==20514== by 0x44FFDD7: TUrl::TUrl(char const*, bool) (TUrl.cxx:78); ==20514== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760); ==20514== by 0x46853BF: TUnixSystem::AccessPathName(char const*, EAccessMode) (TUnixSystem.cxx:1532); ==20514== by 0x1BDF028F: ???; ==20514== by 0x1BDF003B: ???; ==20514== by 0x11881103: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:381); ==20514== by 0x116B01EF: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162); ==20514== by 0x116B103B: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414); ==20514== by 0x116AF7EF: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064); ==20514== by 0x11A291F3: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-980788230:2305,Access,AccessPathName,2305,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-980788230,1,['Access'],['AccessPathName']
Security,. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer-core.NullDereference]; 1: Assuming 'ptrClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1586; 2: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:1586; 3: Assuming 'addr' is null in /opt/root_src/tree/tree/src/TTree.cxx:1592; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1592; 5: 'actualClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1605; 6: Left side of '&&' is true in /opt/root_src/tree/tree/src/TTree.cxx:1605; 7: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 8: Left,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:70789,secur,security,70789,https://root.cern,https://github.com/root-project/root/issues/7429,1,['secur'],['security']
Security,".... well. > Copy the line of the ""required dependencies"". I am not sure what line you mean. > Open a Terminal. ok . > sudo apt update. ask me for a password I do not know ...; Never mind ..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026945835:149,password,password,149,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026945835,1,['password'],['password']
Security,".........................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1747,Access,Access,1747,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['Access'],['Access']
Security,............................... OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; [TFile::Cp] Total 0.95 MB	|====================| 100.00 % [77.1 MB/s]; Test 50: TH2Poly.(DrawClone() and remote file access).............. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Darwin imaccouet.dyndns.cern.ch 21.3.0 Darwin Kernel Version; * SYS: 12.2.1 Mac OS X ; **********************************************************************; * stressGraphics: Real Time = 24.67 seconds Cpu Time = 22.65 seconds; **********************************************************************; * ROOTMARKS =1789.1 * Root 6.27/01 20220105/1238; **********************************************************************; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1060686671:19874,access,access,19874,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1060686671,1,['access'],['access']
Security,............................................. OK; PNG output................................................ OK; C file result............................................. OK; Test 47: Parallel Coordinates...................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; Test 48: Draw a pad and clone it................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 49: Ntuple drawing with alphanumeric variables................ OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; [TFile::Cp] Total -0.00 MB |====================| -0.00 % Cannot access usa.root. Is internet working ?; **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux debian-20220509 5.10.0-14-amd64 #1 SMP Debian 5.10.113; * SYS: Debian GNU/Linux 11 (bullseye); **********************************************************************; * stressGraphics: Real Time = 183.60 seconds Cpu Time = 23.17 seconds; **********************************************************************; * ROOTMARKS =1749.0 * Root 6.27/01 20220105/1238; **********************************************************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1128447944:20008,access,access,20008,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1128447944,1,['access'],['access']
Security,"...............................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2541,Access,Access,2541,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['Access'],['Access']
Security,...; Error in <TList::Clear>: A list is accessing an object (0x558b19a500b0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b74080) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b76bf0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80a80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80df0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81320) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b817c0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81b90) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82030) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82260) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bacc50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6580) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6f70) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb73d0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bbad50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5b80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5eb0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc8710) already deleted (list name = TList); (TFile *) 0x558b199f9480; ```. ##,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793:966,access,accessing,966,https://root.cern,https://github.com/root-project/root/issues/14793,18,['access'],['accessing']
Security,"...since it not used anywhere in Cppyy's code. It used to be used; in TPyClassGenerator.cxx, but the code in that file was completely; commented out. This will prevent a conflict with a class of the same name that; exists in TPython, as reported by the address sanitizer. Thanks to @hageboeck for the heads up!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6160:261,sanitiz,sanitizer,261,https://root.cern,https://github.com/root-project/root/pull/6160,1,['sanitiz'],['sanitizer']
Security,"../../../../include/c++/8.4.0/x86_64-pc-linux-gnu -internal-isystem /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../include/c++/8.4.0/backward -internal-isystem /bld4/opt/clang/13.0.1-gcc84/lib/clang/13.0.1/include -internal-isystem /usr/local/include -internal-isystem /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/include -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -fdebug-compilation-dir=/tmp -ferror-limit 19 -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -fcolor-diagnostics -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o /tmp/a-410af6.o -x c++ a.cpp; clang -cc1 version 13.0.1 based upon LLVM 13.0.1 default target x86_64-unknown-linux-gnu; ignoring nonexistent directory ""/opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/include""; ignoring nonexistent directory ""/include""; #include ""..."" search starts here:; #include <...> search starts here:; /opt/clang/13.0.1-gcc84/include; /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../include/c++/8.4.0; /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../include/c++/8.4.0/x86_64-pc-linux-gnu; /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../include/c++/8.4.0/backward; /bld4/opt/clang/13.0.1-gcc84/lib/clang/13.0.1/include; /usr/local/include; /usr/include; End of search list.; ""/usr/bin/ld"" --hash-style=gnu --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o a.out /lib/../lib64/crt1.o /lib/../lib64/crti.o /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/crtbegin.o -L/opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0 -L/opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/bld4/opt/clang/13.0.1-gcc84/bin/../lib -L/lib -L/usr/lib -L/opt/clang/13.0.1-gcc84/lib /tmp/a-410af6.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /opt/gcc/8.4.0/lib/gcc/x86_64-pc-linux-gnu/8.4.0/crtend.o /lib/../lib64/crtn.o; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046#issuecomment-1059298227:2541,hash,hash-style,2541,https://root.cern,https://github.com/root-project/root/issues/10046#issuecomment-1059298227,1,['hash'],['hash-style']
Security,".0,; dual-stack: false, private IPv4: false, private IPv6: false; [2021-01-14 04:10:07.046851 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Wrote a message: (0x3cc60ff0), 134; bytes; [2021-01-14 04:10:07.052644 -0500][Dump ][XRootDTransport ] [msg:; 0x3cbf39a0] Expecting 49 bytes of message body; [2021-01-14 04:10:07.053325 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received message header, size: 8; [2021-01-14 04:10:07.053800 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received a message of 57 bytes; [2021-01-14 04:10:07.058654 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Logged in, session:; 7b7dbbd4cfaff647f020363a59db1b5c; [2021-01-14 04:10:07.059797 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Authentication is required:; &P=gsi,v:10400,c:ssl,ca:f5f0dfc2; ==2495== Can't extend stack to 0x414a7fc8 during signal delivery for thread 2:; ==2495== no stack segment; ==2495==; ==2495== Process terminating with default action of signal 11; (SIGSEGV): dumping core; ==2495== Access not within mapped region at address 0x414A7FC8; ==2495== at 0x6703DF7: vfprintf (in /usr/lib64/libc-2.17.so); ==2495== If you believe this happened as a result of a stack; ==2495== overflow in your program's main thread (unlikely but; ==2495== possible), you can try to increase the size of the; ==2495== main thread stack using the --main-stacksize= flag.; ==2495== The main thread stack size used in this run was 16777216.; ==2495==; ==2495== Process terminating with default action of signal 11 (SIGSEGV); ==2495== Bad permissions for mapped region at address 0x414A8E90; ==2495== at 0x4A245E5: _vgnU_freeres (vg_preloaded.c:59). Without suppress, this is not there at all so I still don`t understand much. Cheers,. Rod. On Thu, 14 Jan 2021 at 09:23, rdschaffer <notifications@github.com> wrote:. > The output from the job should have just BEFORE the section:; >; > === stderr ===; >; > H4lAnalRun2 INFO p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760074314:1316,Authenticat,Authentication,1316,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760074314,2,"['Access', 'Authenticat']","['Access', 'Authentication']"
Security,".1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; [desilva@lxplus7107 rootTest]$ echo $?; 0; [desilva@lxplus7107 rootTest]$ ; ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:2839,access,access,2839,https://root.cern,https://github.com/root-project/root/issues/8092,1,['access'],['access']
Security,.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Math/IFunctionfwd.h:32:13: error: typedef redefinition with different types ('IMultiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:93:9: error: no viable overloaded '=' ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:95:16: error: member access into incomplete type 'ROOT::Math::IMultiGenFunction' ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:151:23: error: member access into incomplete type 'ROOT::Math::IMultiGenFunction' ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:152:23: error: member access into incomplete type 'ROOT::Math::IMultiGenFunction' ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:156:30: error: member access into incomplete type 'ROOT::Math::IMultiGenFunction' ; - [2023-01-06T12:11:43.748Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:177:28: error: member access into incomplete type 'ROOT::Math::IMultiGenFunction' ; - [2023-01-06T12:11:43.748Z] /Library/De,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373552963:1366,access,access,1366,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373552963,1,['access'],['access']
Security,".; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<(anonymous namespace)::PointerCheckInjector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(NullDerefProtectionTransformer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; [ 69%] Built target rootcling_stage1; [ 69%] Generating G__Core.cxx, ../lib/libCore.rootmap; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; Subprocess aborted; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1674125810:19883,access,access,19883,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1674125810,1,['access'],['access']
Security,.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:48287,secur,security,48287,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:63247,secur,security,63247,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,".ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>>>   CApath: none; >>>>>>>> * Server certificate:; >>>>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=6x%2BvqAwaP4JatJuGaFF%2FDau8refUUubCF0W9oyCbdgg%3D&reserved=0>,O=Grid,C=CA; >>>>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>>>> * common name: dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>; >>>>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>>> * Closing connection 0; >>>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909257351%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=u7Y%2FanQwDppeiiawxeAhNcTy09JgTzHSTAvPUZDe3c4%3D&reserved=0>; >>>>>>>>; >>>>>>>> curl performs SSL certificate verification by default, using a ; >>>>>>>> ""bundle""; >>>>>>>>  of Certificate Authority (CA) public keys (CA certs). If the ; >>>>>>>> default; >>>>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>>>  using the --cacert option.; >>>>>>>> If this HTTP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:6987,Certificate,Certificate,6987,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,2,['Certificate'],['Certificate']
Security,".cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Operating system: Pop!OS; Obtained root through git clone of master branch. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:1571,checksum,checksum,1571,https://root.cern,https://github.com/root-project/root/issues/10503,2,['checksum'],['checksum']
Security,".cern.ch/root-jenkins/job/root-pullrequests-build/169638/console).; ### Warnings:; - [2023-03-03T11:38:15.591Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-03-03T11:38:17.551Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-03-03T11:45:17.562Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.390Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12417#issuecomment-1453453200:1123,secur,security,1123,https://root.cern,https://github.com/root-project/root/pull/12417#issuecomment-1453453200,1,['secur'],['security']
Security,".cern.ch/root-jenkins/job/root-pullrequests-build/169701/console).; ### Warnings:; - [2023-03-03T13:53:35.964Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-03-03T13:53:35.964Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-03-03T13:58:07.386Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T13:58:07.387Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T13:58:07.387Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T13:58:07.387Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12417#issuecomment-1453600764:1123,secur,security,1123,https://root.cern,https://github.com/root-project/root/pull/12417#issuecomment-1453600764,1,['secur'],['security']
Security,".cern.ch/root-jenkins/job/root-pullrequests-build/172011/console).; ### Warnings:; - [2023-04-03T17:25:34.007Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-03T17:25:35.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-03T17:37:16.467Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.401Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1494767891:1123,secur,security,1123,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1494767891,1,['secur'],['security']
Security,".cern.ch/root-jenkins/job/root-pullrequests-build/172992/console).; ### Warnings:; - [2023-04-21T21:32:41.113Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-21T21:32:43.935Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-21T21:35:07.684Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.018Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.018Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.275Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1518381673:1123,secur,security,1123,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1518381673,1,['secur'],['security']
Security,.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51073,secur,security,51073,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36125,secur,security,36125,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,".cxx#L965-L967. <details>; <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp; offset += key.GetHeaderSize();; ReadBuffer(&name, 1, offset);; ReadBuffer(&name, name.GetSize(), offset);; std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";; auto className = std::string(std::string_view(name.fData, name.fLName));; std::cout << ""got class name: "" << className << ""\n"";; //if (className != ""ROOT::Experimental::RNTuple"") {; // continue;; //}; ```. commented out: ; ```; root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""); got class name size: 11; got class name: TObjString; got name: tag; got class name size: 28; got class name: ROOT::Experimental::RNTuple; got name: ParameterSets; got class name size: 28; got class name: ROOT::Experimental::RNTuple; got name: MetaData; got class name size: 28; got class name: ROOT::Experimental::RNTuple; got name: Events; ```. uncommented:; ```; root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""); got class name size: 11; got class name: TObjString; got class name size: 33; got class name: class�:iyK�Qqc�d; got class name size: 80; ParameterSetse: OT::Experimental::RNTuple; object title�:iyK�Lqjd; got class name size: 102; got class name: rSets; object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData; object title�; got class name size: 77; got class name: qjdROOT::Experimental::RNTuplMetaData; object title�:iyK�J; got class name size: 85; got class name: uplMetaData; object title�:iyK�J�AdROOT::Experimental::RNTupleEve; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!); At:; ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]; ```; </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8285#issuecomment-851691365:2047,access,access,2047,https://root.cern,https://github.com/root-project/root/pull/8285#issuecomment-851691365,1,['access'],['access']
Security,.cxx:155:21: 'newpytc' initialized here; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Assuming the condition is true; /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Taking true branch; /usr/include/python2.7/object.h:773:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Loop condition is false. Exiting loop; /usr/include/python2.7/object.h:772:5: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:157:21: Value assigned to 'pytc'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:25: Assuming 'pytc' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:21: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc'); /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: Assuming 'nArgs' is not equal to 0 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 3: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 4: Assuming 'i' is < 'nArgs' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 5: Loop condition is true. Entering loop body in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 6: Assuming 'pytc' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:137; 7: Taking false branch in /opt/root_src/bindin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:24428,Access,Access,24428,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['Access'],['Access']
Security,.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/xml/src/TXMLFile.cxx:203; /opt/root_src/io/xml/src/TXMLPlayer.cxx:394:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:394; /opt/root_src/io/xml/src/TXMLPlayer.cxx:404:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:404; /opt/root_src/io/io/src/TBufferFile.cxx; /opt/root_src/io/io/src/TBufferJSON.cxx; /opt/root_src/io/io/src/TEmulatedCollectionProxy.cxx; /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:133570,secur,security,133570,https://root.cern,https://github.com/root-project/root/issues/7431,1,['secur'],['security']
Security,".cxx:3619; #6 0x00003fff9ad71294 in SigHandler (sig=kSigSegmentationViolation) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:395; #7 0x00003fff9ad7caec in sighandler (sig=11) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:3590; #8 0x00003fff9ad658f4 in textinput::TerminalConfigUnix::HandleSignal (this=0x3fff9b0fa9d0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00003fff9ad653f8 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 0x00003fff9abf0198 in TUrl::SetUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:115; #12 0x00003fff9abefdd8 in TUrl::TUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:78; #13 0x00003fff9abc6360 in TSystem::FindHelper (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, dirptr=0x0) at /scratch/cmsbuild/vvasilev/root/core/base/src/TSystem.cxx:760; #14 0x00003fff9ad753c0 in TUnixSystem::AccessPathName (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, mode=kFileExists) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:1532; #15 0x00003fff8a9902a8 in ?? (); #16 0x00003fff8a99003c in ?? (); #17 0x00003fff8f5d1124 in cling::IncrementalExecutor::executeWrapper (this=0x10020d74f50, function=..., returnValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:385; #18 0x00003fff8f4001f0 in cling::Interpreter::RunFunction (this=0x10020b946b0, FD=0x10022a3a210, res=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:64877,access,access,64877,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['access'],['access']
Security,.cxx:986:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:986; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:990:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:990; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:994:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:994; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:998:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:998; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370:16: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 11: Assuming field 'fInhiDiv' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:314; 12: Taking false br,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:94340,access,access,94340,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:1826,access,accessed,1826,https://root.cern,https://github.com/root-project/root/issues/7169,1,['access'],['accessed']
Security,".html ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>; >>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>  of Certificate Authority (CA) public keys (CA certs). If the default; >>>>  bundle file isn't adequate, you can specify an alternate file; >>>>  using the --cacert option.; >>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>  the bundle, the certificate verification probably failed due to a; >>>>  problem with the certificate (it might be expired, or the name might; >>>>  not match the domain name in the URL).; >>>> If you'd like to turn off curl's verification of the certificate, use; >>>>  the -k (or --insecure) option.; >>>> ***@***.*** t5]$; >>>; >>>; >>> I am unfamiliar with how to use curl with X509 and everything I ; >>> tried so far has not worked. eg; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> ; >>> --key ~/.globus/userkey.pem  --cert ~/.globus/usercert.pem; >>> or; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:5593,certificate,certificate,5593,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['certificate'],['certificate']
Security,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15350,secur,security,15350,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:54792,secur,security,54792,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35935,secur,security,35935,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30390,secur,security,30390,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"// ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:2879,access,access,2879,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['access'],['access']
Security,"//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174875/console).; ### Errors:; - [2023-05-18T18:15:30.152Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:15:30.152Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:1063,Hash,HashValue,1063,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174896/console).; ### Errors:; - [2023-05-18T18:49:54.137Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:49:54.137Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:1063,Hash,HashValue,1063,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174903/console).; ### Errors:; - [2023-05-18T18:56:29.933Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:56:29.933Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:56:29.933Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:56:29.933Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:1063,Hash,HashValue,1063,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,/10030/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module forward_listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340282832:1061,access,access,1061,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340282832,1,['access'],['access']
Security,/10032/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340282981:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340282981,1,['access'],['access']
Security,/10033/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340283365:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340283365,1,['access'],['access']
Security,/10034/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in th,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340282609:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340282609,1,['access'],['access']
Security,/10320/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following spe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341080004:1061,access,access,1061,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341080004,1,['access'],['access']
Security,/10324/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module forward_listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341079504:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341079504,1,['access'],['access']
Security,/10326/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341079139:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341079139,1,['access'],['access']
Security,/10328/console).; ### Errors:; - libRIO dictionary payload:7:2: error: file '/mnt/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341079525:1058,access,access,1058,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341079525,1,['access'],['access']
Security,/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8836,secur,security,8836,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:41555,secur,security,41555,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/TSystem.cxx:1008; 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011; 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011; 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014; 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015; 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020; /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243; /opt/root_src/core/base/src/TSystem.cxx:2874:65: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'opt' is null in /opt/root_src/core/base/src/TSystem.cxx:2849; 2: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:2849; 3: Assuming 'mode' is not equal to kDefault in /opt/root_src/core/base/src/TSystem.cxx:2865; 4: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:2865; 5: 'verbose' is false in /opt/root_src/core/base/src/TSystem.cxx:2873; 6: '?' condition is false in /opt/root_src/core/base/src/TSystem.cxx:2873; 7: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:2874; 8: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:163814,secur,security,163814,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security,/TSystem.cxx:1008; 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011; 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011; 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014; 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015; 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020; /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243; /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/core/base/inc/TString.h; /opt/root_src/core/base/src/TDatime.cxx; /opt/root_src/core/base/src/TDirectory.cxx; /opt/root_src/core/base/src/TROOT.cxx; /opt/root_src/core/base/src/TRegexp.cxx; /opt/root_src/core/base/src/TStorage.cxx; /opt/root_src/core/base/src/TString.cxx; /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-796268286:53832,secur,security,53832,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-796268286,1,['secur'],['security']
Security,"/builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/376:1769,secur,security,1769,https://root.cern,https://github.com/root-project/root/pull/376,1,['secur'],['security']
Security,/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60099,secur,security,60099,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45183,secur,security,45183,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64277,secur,security,64277,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35631,secur,security,35631,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61309,secur,security,61309,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40335,secur,security,40335,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60571,secur,security,60571,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33689,secur,security,33689,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4047,secur,security,4047,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61123,secur,security,61123,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:63170,secur,security,63170,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 15: Calling 'TBtLeafNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:1365; 16: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:314; /opt/root_src/core/cont/src/TArrayC.cxx:114:13: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Null pointer value stored to field 'fArray' in /opt/root_src/core/cont/src/TArrayC.cxx:36; 2: Assuming 'n' is > 0 in /opt/root_src/core/cont/src/TArrayC.cxx:37; 3: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:37; 4: Calling 'TArrayC::Set' in /opt/root_src/core/cont/src/TArrayC.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayC.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayC.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayC.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayC.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayC.cxx:110;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:3291,Access,Access,3291,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Access'],['Access']
Security,/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16da7552.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:65034,secur,security,65034,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5231,secur,security,5231,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:38562,secur,security,38562,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34984,secur,security,34984,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17337,secur,security,17337,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49668,secur,security,49668,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17429,secur,security,17429,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4143,secur,security,4143,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:38658,secur,security,38658,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:41900,secur,security,41900,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48661,secur,security,48661,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34888,secur,security,34888,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:47565,secur,security,47565,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namesp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50033,secur,security,50033,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19232,secur,security,19232,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58982,secur,security,58982,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,/io/io/src/TGenCollectionStreamer.cxx:378; 24: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 25: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; 26: 'i' initialized to a null pointer value in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 27: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; 28: Called C++ object pointer is null in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 29: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; /opt/root_src/io/io/src/TKey.cxx:82:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TMakeProject.cxx:39:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/io/io/src/TMakeProject.cxx:39; /opt/root_src/io/io/src/TMapFile.cxx:293:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TMapFile.cxx:293; /opt/root_src/io/io/src/TMapFile.cxx:623:20: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:599; 2: Left side of '||' is false in /opt/root_src/io/io/src/TMapFile.cxx:599; 3: Assuming field 'fMmallocDesc' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:599; 4: Taking false branch in /opt/root_src/io/io/s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:91862,secur,security,91862,https://root.cern,https://github.com/root-project/root/issues/7431,1,['secur'],['security']
Security,/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:16627,secur,security,16627,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support leng,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:20768,secur,security,20768,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:26148,secur,security,26148,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:12195,secur,security,12195,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:33583,secur,security,33583,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:34384,secur,security,34384,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:35185,secur,security,35185,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:64556,secur,security,64556,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"/opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:20106,secur,security,20106,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54450,Access,Access,54450,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:51063,Access,Access,51063,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62924,Access,Access,62924,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"/pki/nssdb; >>>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>> CApath: none; >>>>>>> * Server certificate:; >>>>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460996291%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=s%2FTzkvNzM41e0GBRqYtbxaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>> ; >>>>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>> bundle file isn't adequate, you can specify an alternate file; >>>>>>> using the --cacert option.; >>>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>> the bundle, the certificate verification probably failed due to a; >>>>>>> problem with the certificate (it might be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:5878,Certificate,Certificate,5878,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['Certificate'],['Certificate']
Security,"/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:4602,Access,AccessSpecifier,4602,https://root.cern,https://github.com/root-project/root/issues/12673,2,['Access'],['AccessSpecifier']
Security,/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341080813:1165,access,access,1165,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341080813,1,['access'],['access']
Security,/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimapDic,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340281929:1165,access,access,1165,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340281929,1,['access'],['access']
Security,/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Di,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1246#issuecomment-340282648:1165,access,access,1165,https://root.cern,https://github.com/root-project/root/pull/1246#issuecomment-340282648,1,['access'],['access']
Security,/root-pullrequests-build/root/interpreter/cling/include/cling/module.modulemap' from the precompiled header has been overridden ; - Error in &lt;TInterpreter::AutoParse&gt;: Error parsing payload code for class TKey with content: ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' . And 10 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1262#issuecomment-341079397:1165,access,access,1165,https://root.cern,https://github.com/root-project/root/pull/1262#issuecomment-341079397,1,['access'],['access']
Security,/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:38907,secur,security,38907,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:69718,Access,Access,69718,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:29386,secur,security,29386,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,/rootx/src/rootx.cxx:328; 7: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:358; 8: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:358; 9: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:362; 10: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:362; 11: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:364; 12: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:364; 13: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:369; 14: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:369; 15: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:370; 16: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:370; 17: Assuming 'gNoLogo' is true in /opt/root_src/rootx/src/rootx.cxx:374; 18: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:374; 19: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:420; 20: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:420; 21: Assuming 'gChildpid' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:423; 22: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:423; 23: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:443; 24: Loop condition is false. Execution continues on line 457 in /opt/root_src/rootx/src/rootx.cxx:455; 25: Potential leak of memory pointed to by 'argvv' in /opt/root_src/rootx/src/rootx.cxx:468; /opt/root_src/rootx/src/rootxx.cxx:783:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/rootx/src/rootxx.cxx:783; /opt/root_src/rootx/src/rootx.cxx; /opt/root_src/rootx/src/rootxx.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7527:7772,secur,security,7772,https://root.cern,https://github.com/root-project/root/issues/7527,1,['secur'],['security']
Security,"/scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:3590; #8 0x00003fff9ad658f4 in textinput::TerminalConfigUnix::HandleSignal (this=0x3fff9b0fa9d0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00003fff9ad653f8 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 0x00003fff9abf0198 in TUrl::SetUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:115; #12 0x00003fff9abefdd8 in TUrl::TUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:78; #13 0x00003fff9abc6360 in TSystem::FindHelper (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, dirptr=0x0) at /scratch/cmsbuild/vvasilev/root/core/base/src/TSystem.cxx:760; #14 0x00003fff9ad753c0 in TUnixSystem::AccessPathName (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, mode=kFileExists) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:1532; #15 0x00003fff8a9902a8 in ?? (); #16 0x00003fff8a99003c in ?? (); #17 0x00003fff8f5d1124 in cling::IncrementalExecutor::executeWrapper (this=0x10020d74f50, function=..., returnValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:385; #18 0x00003fff8f4001f0 in cling::Interpreter::RunFunction (this=0x10020b946b0, FD=0x10022a3a210, res=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1161; #19 0x00003fff8f40103c in cling::Interpreter::EvaluateInternal (this=0x10020b946b0, input=..., CO=..., V=0x3fffeacc4a60, wrapPoint=44) at /scratch/cmsbuild/vvasilev/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:65081,access,access,65081,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['access'],['access']
Security,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #46 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #47 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #48 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #49 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #50 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #51 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #52 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #53 0x00000000044b0710 clang::Parser::ParseDecl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:37758,Access,AccessSpecifier,37758,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Access'],['AccessSpecifier']
Security,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #50 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #51 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #52 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #53 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #54 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #55 0x00000000044ae43b clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #56 0x00000000044adce3 clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:601:8; #57 0x00000000043aeb42 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:38814,Access,AccessSpecifier,38814,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Access'],['AccessSpecifier']
Security,/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 11: Assuming 'total' is >= 0 in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 12: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 13: Assuming 'processed' is not equal to field 'fPrevProcessed' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 14: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 15: Assuming 'total' is equal to field 'fEntries' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 16: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 17: Assuming the condition is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 18: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 19: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841; /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:337:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:280; 2: Left side of '&&' is true in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 3: Assuming 'version' is <= 0 in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 4: '?' condition is false i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:98785,Access,Access,98785,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 18: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 19: Assuming 'pyname' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 20: '?' condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 21: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 22: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 23: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276; 24: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176:9: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:2889,Access,Access,2889,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['Access'],['Access']
Security,"/src/lib/libclingInterpreter.a interpreter/llvm/src/lib/libclingUtils.a interpreter/llvm/src/lib/libclangCodeGen.a interpreter/llvm/src/lib/libclangRewriteFrontend.a interpreter/llvm/src/lib/libclangFrontend.a interpreter/llvm/src/lib/libclangDriver.a interpreter/llvm/src/lib/libclangParse.a interpreter/llvm/src/lib/libclangRewrite.a interpreter/llvm/src/lib/libclangSerialization.a interpreter/llvm/src/lib/libclangSema.a interpreter/llvm/src/lib/libclangAnalysis.a interpreter/llvm/src/lib/libclangASTMatchers.a interpreter/llvm/src/lib/libclangEdit.a -ldl interpreter/llvm/src/lib/libclangAST.a interpreter/llvm/src/lib/libclangLex.a interpreter/llvm/src/lib/libclangBasic.a /usr/lib/llvm-13/lib/libLLVM-13.so.1 && :; FAILED: lib/libCling.so.6.27.99 ; : && /usr/lib/ccache/c++ -fPIC -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.27 -o lib/libCling.so.6.27.99 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:5604,secur,security,5604,https://root.cern,https://github.com/root-project/root/issues/12152,2,"['hash', 'secur']","['hash-style', 'security']"
Security,/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 5: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 6: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 7: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 8: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 12: Array access (via field 'fCutMin') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:455:45: warning: Array access (via field 'fCutMax') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Value assigned to field 'fCutMax' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is not equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fCutMax' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 5: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 6: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 8: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 10: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 11: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:76371,access,access,76371,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,/tmva/src/MethodCuts.cxx:438; 5: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 6: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 8: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 10: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 11: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 12: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 14: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; 16: Array access (via field 'fCutMax') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:455; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fEffMethod' is not equal to kUsePDFs in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:580; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:580; 3: Assuming field 'fBinaryTreeS' is equal to null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:583; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:583; 5: Assuming field 'fBinaryTreeB' is equal to null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:584; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:584; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:595; 8: Loop condition is false. Execution continues on line 620 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:595; 9: Assuming 'ibin' is > field 'fNbins' in /opt/root_src/tmva/tmva/s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:77767,access,access,77767,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:8819,hash,hash-protocols,8819,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['hash'],['hash-protocols']
Security,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:4193,hash,hash-protocols,4193,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['hash'],['hash-protocols']
Security,"0 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/testReport/proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,2,['access'],['accessing']
Security,"0 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42560/testReport/proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425580897:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425580897,2,['access'],['accessing']
Security,"0,; ""Do not recover from input errors"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print this help text"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Add directory to library search path"", ""<directory>"", nullptr); OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Load a library before prompt"", ""<library>"", nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Do not show startup-banner"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable injection of pointer validity checks"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print the compiler version"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable verbose output"", nullptr, nullptr); #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {; const char *Name;; unsigned Value;; };. struct SimpleEnumValueTable {; const SimpleEnumValue *Table;; unsigned Size;; };; static const SimpleEnumValueTable SimpleEnumValueTables[] = {};; static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);; #endif // SIMPLE_ENUM_VALUE_TABLE; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1933795392:3182,inject,injection,3182,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1933795392,1,['inject'],['injection']
Security,"012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; and finally, one with the code moved to the place you suggested (using `expandedUrl`):; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffccf746158 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 25; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch/"", 25) = 25; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 12; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; It is a bit puzzling (doesn't always happen), but as you can see, in the case us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:3486,access,access,3486,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,1,['access'],['access']
Security,013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43124,secur,security,43124,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:3287,Hash,HashValue,3287,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 11 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:3341,Hash,HashValue,3341,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:3287,Hash,HashValue,3287,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:3287,Hash,HashValue,3287,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:49:54.138Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 11 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:3341,Hash,HashValue,3341,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:3287,Hash,HashValue,3287,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ . And 11 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:3341,Hash,HashValue,3341,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,10,"['Hash', 'hash']","['HashValue', 'hash']"
Security,05; 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311; 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:52826,secur,security,52826,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,07:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:1647,secur,security,1647,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"07fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:4605,hash,hash,4605,https://root.cern,https://github.com/root-project/root/issues/7657,1,['hash'],['hash']
Security,"08:13:18.526Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-25T08:13:18.526Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-25T08:13:18.526Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-25T08:13:58.266Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-25T08:13:58.266Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-25T08:13:58.526Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-25T08:13:59.099Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12709#issuecomment-1521424923:2095,secur,security,2095,https://root.cern,https://github.com/root-project/root/pull/12709#issuecomment-1521424923,1,['secur'],['security']
Security,"08:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/functional_hash.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:3173,Hash,HashValue,3173,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,4,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"08:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/functional_hash.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:3173,Hash,HashValue,3173,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,4,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"08:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/functional_hash.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:3173,Hash,HashValue,3173,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,4,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"08:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper&lt;_Nm, _Tp, true&gt;::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1106:7: error: use of deleted function ‘std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;::hash()’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum&lt;ROOT::Internal::RConcurrentHashColl::HashValue, false&gt;::__hash_enum()’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/functional_hash.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:3173,Hash,HashValue,3173,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,4,"['Hash', 'hash']","['HashValue', 'hash']"
Security,0: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3166; /opt/root_src/graf3d/x3d/src/x3d.c:3170:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3170; /opt/root_src/graf3d/x3d/src/x3d.c:3174:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3174; /opt/root_src/graf3d/x3d/src/x3d.c:3175:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Repla,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:59663,secur,security,59663,https://root.cern,https://github.com/root-project/root/issues/7531,1,['secur'],['security']
Security,"0:660:3::36) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * CAfile: /etc/pki/tls/certs/ca-bundle.crt; CApath: none; * Server certificate:; * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; * 	start date: Apr 08 16:29:03 2021 GMT; * 	expire date: May 08 16:29:03 2022 GMT; * 	common name: dpool46.lcg.triumf.ca; * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); * Peer's Certificate issuer is not recognized.; * Closing connection 0; curl: (60) Peer's Certificate issuer is not recognized.; More details here: http://curl.haxx.se/docs/sslcerts.html. curl performs SSL certificate verification by default, using a ""bundle""; of Certificate Authority (CA) public keys (CA certs). If the default; bundle file isn't adequate, you can specify an alternate file; using the --cacert option.; If this HTTPS server uses a certificate signed by a CA represented in; the bundle, the certificate verification probably failed due to a; problem with the certificate (it might be expired, or the name might; not match the domain name in the URL).; If you'd like to turn off curl's verification of the certificate, use; the -k (or --insecure) option.; ***@***.*** t5]$ . regards,; Asoka. > On May 12, 2021, at 1:05 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > As I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://github.com/root-project/root/issues/8155> ) I tried with curl but I get; > ; > $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; > * Trying 206.12.9.197:2880...; > * TCP_NODELAY set; > * Trying 2607:f8f0:660:3::36:2880...; > * TCP_NODELAY set; > * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; > Is that expected?; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/8092#iss",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839939902:1227,certificate,certificate,1227,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839939902,3,['certificate'],['certificate']
Security,"0E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:70884,hash,hash,70884,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L645) only in the `.cxx` source (e.g. `get()`, the other overload of `get()`, and `addCouplings()`). If they are unused in the remaining file and not part of the public interface, why not remove them?; - [x] There is an [unreachable code branch here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L1905). The `setup()` function is called in the class constructor when `_diagrams` is still empty. So the `diagrams.size() > 0` check will never be true and the if-block can be removed, no?; - [x] The [`_nonInterferig`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/inc/RooLagrangianMorphFunc.h#L266) data member is used in a few member functions, but it is never filled so always an empty vector. How meaningful is that? Can `_nonInterfering` be removed? ; - [x] It's annoying to have all these explicit usage of `this`, just to access a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2621) returns an owning raw pointer too, while it should return a `std::unique_ptr<TH1>` in this case. Can this interface still be changed without disrupting users too much? **No, this can break usercode, so this suggestio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:1301,access,access,1301,https://root.cern,https://github.com/root-project/root/issues/9845,1,['access'],['access']
Security,0c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31527,secur,security,31527,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,1 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:12791,secur,security,12791,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,1 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:62301,secur,security,62301,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,1) Do not put the non-copiable ds in a header. It's very cumbersome; at runtime to expose it to the interpreter. The code is now in a string. 2) Make the test a death test. The static assert causes a non-recoverable; failure which should be handled by this kind of test and not with a try/catch; block.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1134:83,expose,expose,83,https://root.cern,https://github.com/root-project/root/pull/1134,1,['expose'],['expose']
Security,"1) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00003fff9ad653f8 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /scratch/cmsbuild/vvasilev/root/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 0x00003fff9abf0198 in TUrl::SetUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:115; #12 0x00003fff9abefdd8 in TUrl::TUrl (this=0x3fffeacc31e0, url=0x1 <error: Cannot access memory at address 0x1>, defaultIsFile=true) at /scratch/cmsbuild/vvasilev/root/core/base/src/TUrl.cxx:78; #13 0x00003fff9abc6360 in TSystem::FindHelper (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, dirptr=0x0) at /scratch/cmsbuild/vvasilev/root/core/base/src/TSystem.cxx:760; #14 0x00003fff9ad753c0 in TUnixSystem::AccessPathName (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, mode=kFileExists) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:1532; #15 0x00003fff8a9902a8 in ?? (); #16 0x00003fff8a99003c in ?? (); #17 0x00003fff8f5d1124 in cling::IncrementalExecutor::executeWrapper (this=0x10020d74f50, function=..., returnValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:385; #18 0x00003fff8f4001f0 in cling::Interpreter::RunFunction (this=0x10020b946b0, FD=0x10022a3a210, res=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1161; #19 0x00003fff8f40103c in cling::Interpreter::EvaluateInternal (this=0x10020b946b0, input=..., CO=..., V=0x3fffeacc4a60, wrapPoint=44) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1413; #20 0x00003fff8f3ff7f0 in cling::Interpreter::echo (this=0x10020b946b0, input=..., V=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:65229,Access,AccessPathName,65229,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,"['Access', 'access']","['AccessPathName', 'access']"
Security,"1. Avoid referencing RooFuncWrapper inside code generation context; 2. Take out RooFit code generation context outside of Detail namespace; 3. Get rid of the `Experimental::RooFuncWrapper` class and make the code generation and AD with Clad accessible with the `RooFit::Evaluator`. The goal is to have one entry point for the user to do any kind of evaluation of RooFit computation graphs. Point number 3 still has to be done, which is why this is a draft PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16772:241,access,accessible,241,https://root.cern,https://github.com/root-project/root/pull/16772,1,['access'],['accessible']
Security,1. Do not expose special parameters to URL string - now in default HTML file special attributes can be inserted together with `JSROOT.ConnectWebWindow` call; 2. Correctly handle `#` in WebWindow URL. Such symbol used for routing inside webpage and will be often used with openui5; 3. Unify handling of URL options with RWebDisplayArgs. For now only `key` and `batch_mode` parameters are exposed to web window URL; 4. Update/extend doxygen docu; 5. Fix error in v7 CanvasPainter - v616 already fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3561:10,expose,expose,10,https://root.cern,https://github.com/root-project/root/pull/3561,2,['expose'],"['expose', 'exposed']"
Security,"1. Do not use `gSystem->AccessPath` from CEF handler, may block because of mutex usage; 2. Remove debug output from THttpServer and TWebCanvas; 3. Properly handle `local` connection in auth check",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15521:24,Access,AccessPath,24,https://root.cern,https://github.com/root-project/root/pull/15521,1,['Access'],['AccessPath']
Security,"1. Equip TCanvas::Streamer to provide data members information for TBufferJSON/TBufferXML/TBufferSQL2 classes; 2. Fix problem with streamer infos reading from TXMLFile; 3. Fix error in TBufferXML/TBufferJSON/TBufferSQL2 when equipted streamers are used; Reported also here: http://root.cern.ch/phpBB3/viewtopic.php?f=3&t=18802; Error was introduced by modifications in I/O between 5-34/19 and 5-34/20; 4. Implement TBufferJSON::CheckObject(), enable correct storage of colors palete in JSON with TCanvas; 5. Provide missing documentation for some methods in TBufferXML/TBufferSQL2/TBufferJSON; 6. Modification in THttpServer class - one could now access any objects memeber; 7. Significant redesign of JSROOT - now everything can be redrawn and resize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/37:647,access,access,647,https://root.cern,https://github.com/root-project/root/pull/37,1,['access'],['access']
Security,1. Fix - handle reordering of fragments in multipart reply https://github.com/root-project/jsroot/issues/319; 2. Fix - properly show non-zero entries https://github.com/root-project/jsroot/issues/320; 3. Fix - display empty hist bin if fSumw2 not zero; 4. Fix - let use batch_mode script injection in interactive session,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16792:288,inject,injection,288,https://root.cern,https://github.com/root-project/root/pull/16792,1,['inject'],['injection']
Security,1. Let access histogram from TF1 on the client; 2. Histogram used as axes attributes storage; 3. Always convert TF1 into histogram on client; 4. Fix several problems in function calculation; 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured; 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13138:7,access,access,7,https://root.cern,https://github.com/root-project/root/pull/13138,1,['access'],['access']
Security,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:306,secur,secure,306,https://root.cern,https://github.com/root-project/root/pull/14119,1,['secur'],['secure']
Security,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484:58,access,accessed,58,https://root.cern,https://github.com/root-project/root/pull/12484,1,['access'],['accessed']
Security,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16416:426,inject,inject,426,https://root.cern,https://github.com/root-project/root/pull/16416,2,['inject'],['inject']
Security,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11810:496,secur,security,496,https://root.cern,https://github.com/root-project/root/pull/11810,1,['secur'],['security']
Security,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8274:69,access,access,69,https://root.cern,https://github.com/root-project/root/pull/8274,1,['access'],['access']
Security,"1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client.; 2. Interactive changes of draw options or histogram status bits send directly to server; 3. Small adjust of CEF build, tested with latest code; 4. Syntax adjusting of hist tutorials; 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11775:7,hash,hash,7,https://root.cern,https://github.com/root-project/root/pull/11775,1,['hash'],['hash']
Security,1. Using latest libpng; 2. Redefine Hash in image plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12797:36,Hash,Hash,36,https://root.cern,https://github.com/root-project/root/pull/12797,1,['Hash'],['Hash']
Security,"1.043Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:113:43: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:114:46: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437393:2538,hash,hash,2538,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437393,15,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"1.043Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437393:1734,hash,hash,1734,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437393,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"100 % agreed. So I'll open a PR to always use our ""hacked"" zmq (and yes we expose neither headers nor symbols). When it's release we can change it back",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981765712:75,expose,expose,75,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981765712,1,['expose'],['expose']
Security,11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:32369,secur,security,32369,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:13577,secur,security,13577,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:5710,secur,security,5710,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/graf2d/graf/src/TCandle.cxx; /opt/root_src/graf2d/graf/src/TCurlyLine.cxx; /opt/root_src/graf2d/graf/src/TGaxis.cxx; /opt/root_src/graf2d/graf/src/TLegend.cxx; /opt/root_src/graf2d/graf/src/TPaveStats.cxx; /opt/root_src/graf2d/graf/src/TPaveText.cxx; /opt/root_src/graf2d/graf/src/TPie.cxx; /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:96648,secur,security,96648,https://root.cern,https://github.com/root-project/root/issues/7432,1,['secur'],['security']
Security,"11b4edb19b45dd98eda76de0""><code>55dda29</code></a> fix: treat nocase:true as always having magic</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5e1fb8dd2bb78c0ae22101b9229fac4c76ef039e""><code>5e1fb8d</code></a> 3.1.0</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/f8145c54f34075069f4a23cb214d871da4cd4006""><code>f8145c5</code></a> Add 'allowWindowsEscape' option</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/570e8b1aef6c9e823a824aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:1612,expose,expose,1612,https://root.cern,https://github.com/root-project/root/pull/11864,1,['expose'],['expose']
Security,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:95500,Access,Access,95500,https://root.cern,https://github.com/root-project/root/issues/7432,1,['Access'],['Access']
Security,13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:39670,secur,security,39670,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7601,secur,security,7601,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:75771,secur,security,75771,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,1: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223; 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242; /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141; /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242; /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176; 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176; 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176; 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176; 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179; 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577; 7: '?' condition is true in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-796268286:2784,secur,security,2784,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-796268286,1,['secur'],['security']
Security,"2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6811,access,access,6811,https://root.cern,https://github.com/root-project/root/issues/12429,1,['access'],['access']
Security,2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7894,secur,security,7894,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c); #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void); Shadow bytes around the buggy address:; 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd; 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00; 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa; =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa; 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==13496==ABORTING; C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5; 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]; ```; Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2370893163:13902,sanitiz,sanitizer,13902,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2370893163,1,['sanitiz'],['sanitizer']
Security,"23-05-18T18:23:23.216Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:23:23.216Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:23:23.216Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:1180,Hash,HashValue,1180,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=lnK7F9PwtLyhMgfW1BGV%2F3jGJQ2O5M9uq%2F4p66Y5ihI%3D&reserved=0>; >>>>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>>>> *   Trying 2607:f8f0:660:3::36...; >>>>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>>>>   CApath: none; >>>>>>>> * Server certificate:; >>>>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909247358%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=6x%2BvqAwaP4JatJuGaFF%2FDau8refUUubCF0W9oyCbdgg%3D&reserved=0>,O=Grid,C=CA; >>>>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>>>> * common name: dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>; >>>>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>>> * Closing connection 0; >>>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:6244,certificate,certificate,6244,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['certificate'],['certificate']
Security,29ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32194,secur,security,32194,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>> or; >>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>> ; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>> ; >>>>> ; >>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>>>> ; >>>>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:7296,secur,security,7296,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,2,"['certificate', 'secur']","['certificates', 'security']"
Security,3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28791,secur,security,28791,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43312,secur,security,43312,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context); 448 | elem[""x""] << pdf->x().GetName();; | ^; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:1360,access,accessible,1360,https://root.cern,https://github.com/root-project/root/issues/13101,1,['access'],['accessible']
Security,32; 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732; 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737; 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737; 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738; 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738; 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:39409,secur,security,39409,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30290,secur,security,30290,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:24399,secur,security,24399,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"36:2880...; >>> * TCP_NODELAY set; >>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>> Is that expected?; >>> ; > ; >> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not match the domain name in the URL).; >> If you'd like to turn off curl's verification of the certificate, use; >> the -k (or --insecure) option.; >> ***@***.*** t5]$ ; > ; > ; > I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:1695,Certificate,Certificate,1695,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,1,['Certificate'],['Certificate']
Security,"37564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> ; >>> --key ~/.globus/userkey.pem  --cert ~/.globus/usercert.pem; >>> or; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> ; >>> --key ~/.globus/userkey.pem  --cert ~/.globus/usercert.pem --capath ; >>> /etc/grid-security/certificates; >>>; >>>; >>> regards,; >>> Asoka; >>>; >>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>> ***@***.*** ***@***.***>> wrote:; >>>>; >>>>; >>>> Right - without authentication I cannot see what's happening. /If/ ; >>>> this is due to a redirect it would be a dupe of #8155 ; >>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> ; >>>> - if not then it's different :-) But I don't know how to tell ; >>>> whether it's a redirect. Do you?; >>>>; >>>> If not let's get #8155 ; >>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:7155,secur,security,7155,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,2,"['certificate', 'secur']","['certificates', 'security']"
Security,388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:33772,secur,security,33772,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:34573,secur,security,34573,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provid,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:25906,secur,security,25906,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,3: Assuming 'i' is < 'nMethods' in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:164; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:164; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:175; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:175; 7: 'i' is equal to 0 in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:189; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:189; 9: 'meth' initialized here in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:197; 10: Assuming 'meth' is equal to null in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:199; 11: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:199; 12: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:204; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454:45: warning: Array access (via field 'fCutMin') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Value assigned to field 'fCutMin' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 5: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 6: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 7: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 8: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:75141,access,access,75141,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:39027,secur,security,39027,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Calling 'R__Inflate_block' in /opt/root_src/core/zip/src/ZInflate.c:1075; 2: Loop condition is true. Entering loop body in /opt/root_src/core/zip/src/ZInflate.c:1019; 3: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 4: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:1019; 5: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 6: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:1019; 7: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 8: Loop condition is false. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:8452,secur,security,8452,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,"3:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:17.945Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.320Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.320Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.320Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12780#issuecomment-1537456868:1466,secur,security,1466,https://root.cern,https://github.com/root-project/root/pull/12780#issuecomment-1537456868,1,['secur'],['security']
Security,3ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30578,secur,security,30578,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/Slova,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52499,secur,security,52499,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:220:54: error: '__node_base' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56: error: '__bucket_type' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1412#issuecomment-361415584:2412,hash,hash,2412,https://root.cern,https://github.com/root-project/root/pull/1412#issuecomment-361415584,1,['hash'],['hash']
Security,"4.826Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:113:43: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.827Z] /usr/include/c++/7/bits/unordered_map.h:114:46: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553498683:2538,hash,hash,2538,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553498683,15,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"4.826Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553498683:1734,hash,hash,1734,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553498683,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:14557,secur,security,14557,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:53015,secur,security,53015,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>> or; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>>>> ; >>>>>> ; >>>>>> regards,; >>>>>> Asoka; >>>>>> ; >>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>>>> ; >>>>>>> ; >>>>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>>>>>> ; >>>>>>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:8539,secur,security,8539,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,2,"['certificate', 'secur']","['certificates', 'security']"
Security,444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:35374,secur,security,35374,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,44:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:38263,secur,security,38263,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"47483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFuncti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:1471,access,accessing,1471,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,2,['access'],['accessing']
Security,"4: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:178700,hash,hash,178700,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"4:15:43.837Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-02-15T14:15:43.837Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-02-15T14:15:43.837Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-02-15T14:16:31.187Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-02-15T14:16:36.921Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-02-15T14:16:36.921Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-02-15T14:16:37.178Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12322#issuecomment-1431494862:2096,secur,security,2096,https://root.cern,https://github.com/root-project/root/pull/12322#issuecomment-1431494862,1,['secur'],['security']
Security,4:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:26548,secur,security,26548,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,"4:42:44.893Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-05T14:42:44.893Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-05T14:42:44.893Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-05T14:42:44.893Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-05T14:42:44.894Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-05T14:42:44.894Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-05T14:42:44.894Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12774#issuecomment-1536412592:2096,secur,security,2096,https://root.cern,https://github.com/root-project/root/pull/12774#issuecomment-1536412592,1,['secur'],['security']
Security,"535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643157499%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >> or; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643157499%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >> ; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>> ; >>> ; >>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643367382%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sks%2FDd3rFaTWUbAotHxdTG7EQfZWLHeVrkmSb4E5PhU%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>> ; >>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:6621,secur,security,6621,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,2,"['certificate', 'secur']","['certificates', 'security']"
Security,57:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:32971,secur,security,32971,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"5: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 16: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 17: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 18: Returning from 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 19: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 20: Assuming the condition is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 21: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:237; /opt/root_src/tree/tree/src/TLeaf.cxx:270:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:69095,secur,security,69095,https://root.cern,https://github.com/root-project/root/issues/7429,1,['secur'],['security']
Security,"6); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:163184,hash,hash,163184,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,6.22 PyROOT seg faults when accessing array members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:28,access,accessing,28,https://root.cern,https://github.com/root-project/root/issues/6468,1,['access'],['accessing']
Security,"6015/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2448#issuecomment-411004184:1034,access,accessing,1034,https://root.cern,https://github.com/root-project/root/pull/2448#issuecomment-411004184,2,['access'],['accessing']
Security,609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:36818,secur,security,36818,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"6280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ; >>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>> or; >>>>> *curl*-v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461006280%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=9rNIbI2R5ESPtOLXdPFPq%2FjbCNRptjBM1fTLrmOZgEI%3D&reserved=0> ; >>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath ; >>>>> /etc/grid-security/certificates; >>>>>; >>>>>; >>>>> regards,; >>>>> Asoka; >>>>>; >>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>; >>>>>>; >>>>>> Right - without authentication I cannot see what's happening. ; >>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400461016279%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sfm43%2BJmWVsFVHOn7Tob%2BXe4STr003%2FgQQiBpBRgur0%3D&reserved=0> ; >>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>> whether it's a redirect. Do you?; >>>>>>; >>>>>> If not let's get #8155 ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:7896,secur,security,7896,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,2,"['certificate', 'secur']","['certificates', 'security']"
Security,6: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace wi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:22232,secur,security,22232,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52544,Access,Access,52544,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:652; 27: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:84720,secur,security,84720,https://root.cern,https://github.com/root-project/root/issues/7526,1,['secur'],['security']
Security,"6:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:38.652Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.474Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.474Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.731Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1535115664:1466,secur,security,1466,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1535115664,1,['secur'],['security']
Security,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:1251,hash,hashing,1251,https://root.cern,https://github.com/root-project/root/pull/13842,1,['hash'],['hashing']
Security,"7 0.0003111300 3.31E-04; 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04; 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04; 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04; 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3097,validat,validation,3097,https://root.cern,https://github.com/root-project/root/pull/13067,1,['validat'],['validation']
Security,"7.334Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:113:43: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:114:46: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553490953:2538,hash,hash,2538,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553490953,15,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"7.334Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553490953:1734,hash,hash,1734,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553490953,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31811,secur,security,31811,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2846,Access,Access,2846,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['Access'],['Access']
Security,781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:33162,secur,security,33162,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:23338,secur,security,23338,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:27835,secur,security,27835,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,7:27:50.506Z] /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Headers/gl3ext.h:187:77: error: expected function body after function declarator ; - [2020-04-24T07:27:50.506Z] /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Headers/gl3ext.h:195:128: error: expected function body after function declarator ; - [2020-04-24T07:27:50.506Z] /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Headers/gl3ext.h:203:60: error: expected function body after function declarator ; - [2020-04-24T07:27:50.506Z] /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Headers/gl3ext.h:211:126: error: expected function body after function declarator . And 17 more. ### Warnings:; - [2020-04-24T07:27:49.473Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/macosx/inc/CocoaUtils.h:39:29: warning: instance method '-retain' not found (return type defaults to 'id') [-Wobjc-method-access] ; - [2020-04-24T07:27:49.473Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/macosx/inc/CocoaUtils.h:87:32: warning: instance method '-retain' not found (return type defaults to 'id') [-Wobjc-method-access] ; - [2020-04-24T07:27:49.731Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/macosx/inc/CocoaUtils.h:101:34: warning: instance method '-retain' not found (return type defaults to 'id') [-Wobjc-method-access] ; - [2020-04-24T07:27:49.731Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/macosx/src/CocoaUtils.mm:27:11: warning: instance method '-release' not found (return type defaults to 'id') [-Wobjc-method-access] ; - [2020-04-24T07:27:49.731Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/macosx/src/CocoaUtils.mm:34:14: warning: instance method '-release' not found (return type defaults to 'id') [-Wobjc-method-access],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5445#issuecomment-618852276:2764,access,access,2764,https://root.cern,https://github.com/root-project/root/pull/5445#issuecomment-618852276,5,['access'],['access']
Security,"7:33: error: expected primary-expression before ‘&gt;’ token . And 62 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401591340:2409,access,accessing,2409,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401591340,2,['access'],['accessing']
Security,"7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>> or; >>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428528444%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=kixSR3Oc%2B0Kwn0yq8EDl%2FAgeDJDmM%2Bvkvzsc5wxLvcE%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >>>> ; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>>>> ; >>>>> ; >>>>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NSH3DFaDuhyR%2FbU8u99%2BhMt%2F%2Bl%2BPFoyMoNKO2CIFrZM%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>>>> ; >>>>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428538437%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:7488,authenticat,authentication,7488,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['authenticat'],['authentication']
Security,8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:12564,secur,security,12564,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,80; 40: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 41: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:681; 42: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:681; 43: Assuming 'k' is >= 'e' in /opt/root_src/core/zip/src/ZInflate.c:690; 44: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 45: Loop condition is false. Execution continues on line 691 in /opt/root_src/core/zip/src/ZInflate.c:690; 46: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 47: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 48: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 49: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 50: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 51: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:698; 52: Assigned value is garbage or undefined in /opt/root_src/core/zip/src/ZInflate.c:707; /opt/root_src/core/zip/src/ZInflate.c:1117:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:1117; /opt/root_src/core/rint/src/TTabCom.cxx; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp; /opt/root_src/core/unix/src/TUnixSystem.cxx; /opt/root_src/core/zip/src/Bits.c; /opt/root_src/core/zip/src/RZip.cxx; /opt/root_src/core/zip/src/ZDeflate.c; /opt/root_src/core/zip/src/ZInflate.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:13179,secur,security,13179,https://root.cern,https://github.com/root-project/root/issues/7427,3,['secur'],['security']
Security,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:18696,Access,Access,18696,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,"863; 64: Calling 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 65: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1810; 66: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1810; 67: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:19565,access,access,19565,https://root.cern,https://github.com/root-project/root/issues/7422,1,['access'],['access']
Security,86:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:25265,secur,security,25265,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:39199,Access,Access,39199,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"8:00:04.234Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-03T08:00:04.234Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-03T08:00:04.234Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-03T08:00:44.849Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T08:00:50.402Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T08:00:50.402Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T08:00:50.663Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12596#issuecomment-1493909845:2096,secur,security,2096,https://root.cern,https://github.com/root-project/root/pull/12596#issuecomment-1493909845,1,['secur'],['security']
Security,"8:20:17.470Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-01-21T18:20:17.470Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-01-21T18:20:17.470Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-01-21T18:20:27.406Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-21T18:20:56.939Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-21T18:20:56.939Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-21T18:20:57.201Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12081#issuecomment-1399311487:2096,secur,security,2096,https://root.cern,https://github.com/root-project/root/pull/12081#issuecomment-1399311487,1,['secur'],['security']
Security,8b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_po,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7798,secur,security,7798,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"9.549Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553447487:1734,hash,hash,1734,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553447487,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"9.806Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:111:47: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:112:48: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:113:43: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:114:46: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553447487:2538,hash,hash,2538,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553447487,15,"['Hash', 'hash']","['HashValue', 'hash']"
Security,9214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32001,secur,security,32001,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,952:10: warning: Value stored to 'rg1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg1' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:29399,secur,security,29399,https://root.cern,https://github.com/root-project/root/issues/7458,1,['secur'],['security']
Security,"993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RCanvas&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RCanvas, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RBox&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RBox, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: Traceback (most recent call last):\r\n993: File \""C:\Users\bellenot\git\master\tutorials\launcher.py\"", line 34, in &lt;module&gt;\r\n993: spec.loader.exec_module(module)\r\n993: File \""&lt;frozen importlib._bootstrap_external&gt;\"", line 850, in exec_module\r\n993: File \""&lt;frozen importlib._bootstrap&gt;\"", line 228, in _call_with_frames_removed\r\n993: File \""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"", line 24, in &lt;module&gt;\r\n993: box1.border.color = RColor.kBlue\r\n993: AttributeError: &lt;class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98&gt; has no attribute 'kBlue'. Full details:\r\n993: attribute access requires an instance\r\n993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class\r\n993: 'kBlue' is not a known C++ template\r\n993: 'kBlue' is not a known C++ enum\r\n993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):\r\n993: error code: 1\r\n993:\r\n993:\r\n1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec\r\n\r\n0% tests passed, 1 tests failed out of 1\r\n\r\nLabel Time Summary:\r\ntutorial = 3.69 sec*proc (1 test)\r\n\r\nTotal Test time (real) = 6.60 sec\r\n\r\nThe following tests FAILED:\r\n 993 - tutorial-rcanvas-rbox-py (Failed)\r\nErrors while running CTest\r\n```\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927923183:2323,access,access,2323,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927923183,1,['access'],['access']
Security,"9:17:57.338Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-23T19:17:57.338Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-23T19:17:57.338Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-23T19:17:57.339Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T19:17:57.339Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T19:17:57.339Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T19:17:57.339Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12867#issuecomment-1560028088:2096,secur,security,2096,https://root.cern,https://github.com/root-project/root/pull/12867#issuecomment-1560028088,1,['secur'],['security']
Security,"9e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1343,hash,hashRooProduct,1343,https://root.cern,https://github.com/root-project/root/issues/12430,1,['hash'],['hashRooProduct']
Security,"9f</code></a></li>; <li>[Tests] add <code>aud</code> in <code>posttest</code> <a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a></li>; <li>[meta] add <code>safe-publish-latest</code> <a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a></li>; <li>[meta] update repo URLs <a href=""https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd""><code>6b164c7</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6"">v1.2.6</a> - 2022-03-21</h2>; <h3>Commits</h3>; <ul>; <li>test from prototype pollution PR <a href=""https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a></li>; <li>isConstructorOrProto adapted from PR <a href=""https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:3181,secur,security,3181,https://root.cern,https://github.com/root-project/root/pull/11865,1,['secur'],['security']
Security,"9fb8e713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0; #9 0x00007fd99fb8cd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0; #10 0x00007fd99fc07e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0; #11 0x00007fd99fc07e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0 ; #12 0x00007fd99fc29068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0; #13 0x00007fd99fc28783 in run_mod () from /lib64/libpython3.8.so.1.0; #14 0x00007fd99fb149ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0; #15 0x00007fd99fb14186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0; #16 0x00007fd99fb0b351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0; #17 0x00007fd99fbfb969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0; #18 0x00007fd99fde1042 in __libc_start_main () from /lib64/libc.so.6; #19 0x0000564fd09cf07e in _start (); ===========================================================; ```; This not only segfaults, but it reprints values from the first entry before doing that instead of the second entry, suggesting the array access results in some sort of memory corruption. . Running valgrind (with ROOT suppressions) suggests that cppyy is reading some unallocated memory:; ```$ valgrind --suppressions=/usr/share/root/valgrind-root.supp python breaks.py ; ==774799== Memcheck, a memory error detector; ==774799== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==774799== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info; ==774799== Command: python breaks.py; ==774799== ; 0; 0.9989327176093981; -0.43476438941434026; 0.7817962561955079; 0; 0.9989327176093981; ==774799== Invalid read of size 8; ==774799== at 0x13851E15: ??? (in /usr/lib64/root/libcppyy3_8.so.6.22.02); ==774799== by 0x4B9AD26: _PyObject_GenericGetAttrWithDict (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8E712: _PyEval_EvalFrameDefault (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8CD53: _PyEval_Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:4264,access,access,4264,https://root.cern,https://github.com/root-project/root/issues/6468,1,['access'],['access']
Security,: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:3157,secur,security,3157,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318; /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:3809,secur,security,3809,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49153,Access,Access,49153,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57636,Access,Access,57636,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54238,Access,Access,54238,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:66105,Access,Access,66105,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659; 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567; /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716; /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 5: Loop condition is false. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:35633,secur,security,35633,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:26097,secur,security,26097,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:41763,secur,security,41763,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403; 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405; 8: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:43054,secur,security,43054,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403; 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405; 8: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:48407,secur,security,48407,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:24624,secur,security,24624,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:962,secur,security,962,https://root.cern,https://github.com/root-project/root/pull/11808,1,['secur'],['security']
Security,"://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=5bPVTg%2FPGN9TjNPlZWD4xVs43NW32MwdifaSj7PR%2FEc%3D&reserved=0>; >>>>>> * About to connect() to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>>> * Trying 2607:f8f0:660:3::36...; >>>>>> * Connected to webdav.lcg.triumf.ca ; >>>>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>>> CApath: none; >>>>>> * Server certificate:; >>>>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460986294%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>> * Peer's Certificate issuer is not recognized.; >>>>>> * Closing connection 0; >>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>> More details here: http://curl.haxx.se/doc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:4254,certificate,certificate,4254,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['certificate'],['certificate']
Security,:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/g,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:96339,secur,security,96339,https://root.cern,https://github.com/root-project/root/issues/7432,1,['secur'],['security']
Security,":12: warning: Although the value stored to 'gnorm' is used in the enclosing expression, the value is never actually read from 'gnorm' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'gnorm' is used in the enclosing expression, the value is never actually read from 'gnorm' in /opt/root_src/core/base/src/TColor.cxx:1611; /opt/root_src/core/base/src/TColor.cxx:1611:20: warning: Although the value stored to 'bnorm' is used in the enclosing expression, the value is never actually read from 'bnorm' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'bnorm' is used in the enclosing expression, the value is never actually read from 'bnorm' in /opt/root_src/core/base/src/TColor.cxx:1611; /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141; /opt/root_src/core/base/src/TDirectory.cxx:1071:20: warning: Value stored to 'newdir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'newdir' is never read in /opt/root_src/core/base/src/TDirectory.cxx:1071; /opt/root_src/core/base/src/TDirectory.cxx:1246:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:105414,secur,security,105414,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security,:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:26909,secur,security,26909,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,":1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:19986,secur,security,19986,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:23982,secur,security,23982,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:111749,Access,Access,111749,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Access'],['Access']
Security,:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177175/testReport/projectroot.roottest.root.meta/tuple/roottest_root_meta_tuple_exec_configtype_unload_auto/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177175/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1592464351:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1592464351,1,['access'],['access']
Security,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:7165,secur,security,7165,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:40998,secur,security,40998,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:53819,secur,security,53819,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not p,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:27191,secur,security,27191,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,":8; #40 0x0000000008b4686f clang::Preprocessor::Lex(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:931:21; #41 0x00000000043ce55a clang::Parser::TryConsumeToken(clang::tok::TokenKind) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:532:5; #42 0x00000000044ab797 clang::Parser::ExpectAndConsumeSemi(unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:162:7; #43 0x00000000043be923 clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:2151:7; #44 0x00000000044b103f clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1146:10; #45 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #46 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #47 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #48 0x00000000044b0ff7 clang::Parser::ParseDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:36414,Access,AccessSpecifier,36414,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Access'],['AccessSpecifier']
Security,:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:7808,secur,security,7808,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,"::ActOnStartOfFunctionDef(clang::Scope*, clang::Declarator&, llvm::MutableArrayRef<clang::TemplateParameterList*>, clang::Sema::SkipBodyInfo*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #14 0x00002b8fcf5e98cb in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #15 0x00002b8fcf566f2e in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, unsigned int, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #16 0x00002b8fcf5e5fa1 in clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #17 0x00002b8fcf5ec950 in clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #18 0x00002b8fcf57b004 in clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, unsigned int) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #19 0x00002b8fcf5e611e in clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:7231,Access,AccessSpecifier,7231,https://root.cern,https://github.com/root-project/root/issues/7093,1,['Access'],['AccessSpecifier']
Security,"::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:220:54: error: '__node_base' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56: error: '__bucket_type' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1412#issuecomment-361415584:2650,hash,hashtable,2650,https://root.cern,https://github.com/root-project/root/pull/1412#issuecomment-361415584,4,['hash'],"['hash', 'hasher', 'hashtable']"
Security,"::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793); ==270704== by 0x271E9DE4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589); ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:185581,hash,hash,185581,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security,"::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:167787,hash,hash,167787,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:189556,hash,hash,189556,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:193750,hash,hash,193750,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614); ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:218660,hash,hash,218660,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,5,['hash'],['hash']
Security,"::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587); ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:71813,hash,hash,71813,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,8,['hash'],"['hash', 'hashtable']"
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:12:58.148Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:2307,hash,hashtable,2307,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:2361,hash,hashtable,2361,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:2307,hash,hashtable,2307,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:2193,hash,hashtable,2193,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:2478,hash,hashtable,2478,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:2193,hash,hashtable,2193,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:2307,hash,hashtable,2307,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:2361,hash,hashtable,2361,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:2307,hash,hashtable,2307,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:2361,hash,hashtable,2361,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:2193,hash,hashtable,2193,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,1,['hash'],['hashtable']
Security,"::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:2193,hash,hashtable,2193,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,1,['hash'],['hashtable']
Security,":; > * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <http://triumf.ca/>,O=Grid,C=CA; > * 	start date: Apr 08 16:29:03 2021 GMT; > * 	expire date: May 08 16:29:03 2022 GMT; > * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; > * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; > * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); > * Peer's Certificate issuer is not recognized.; > * Closing connection 0; > curl: (60) Peer's Certificate issuer is not recognized.; > More details here: http://curl.haxx.se/docs/sslcerts.html <http://curl.haxx.se/docs/sslcerts.html>; > ; > curl performs SSL certificate verification by default, using a ""bundle""; > of Certificate Authority (CA) public keys (CA certs). If the default; > bundle file isn't adequate, you can specify an alternate file; > using the --cacert option.; > If this HTTPS server uses a certificate signed by a CA represented in; > the bundle, the certificate verification probably failed due to a; > problem with the certificate (it might be expired, or the name might; > not match the domain name in the URL).; > If you'd like to turn off curl's verification of the certificate, use; > the -k (or --insecure) option.; > ***@***.*** t5]$ . I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; or; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates. regards,; Asoka. > On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://github.com/root-project/root/issues/8155> - if ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839961058:2279,certificate,certificate,2279,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839961058,3,['certificate'],['certificate']
Security,":AutoLoad&gt;: failure loading library libHistPainter.so for THistPainter . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395489730:1401,access,accessing,1401,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395489730,2,['access'],['accessing']
Security,":Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659); ==92602== by 0x116F260B: clang::FunctionDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:13676,Access,AccessSpecifier,13676,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Access'],['AccessSpecifier']
Security,":Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659); ==92602== by 0x116F260B: clang::FunctionDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:16302,Access,AccessSpecifier,16302,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Access'],['AccessSpecifier']
Security,":DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) (this=0x8eb600, this@entry=0xbcb8b0, K=K@entry=llvm::orc::LookupKind::Static, SearchOrder=std::vector of length 1, capacity 1 = {...}, Symbols=..., RequiredState=llvm::orc::SymbolState::Ready, NotifyComplete=..., RegisterDependencies=...); at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:1974; #53 0x00007fffefd9cdaa in llvm::orc::ExecutionSession::lookup(std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet const&, llvm::orc::LookupKind, llvm::orc::SymbolState, std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) (this=this@entry=0xbcb8b0, SearchOrder=<error reading variable: Cannot access memory at address 0x8>, ; Symbols=..., K=K@entry=llvm::orc::LookupKind::Static, RequiredState=llvm::orc::SymbolState::Ready, RegisterDependencies=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2011; #54 0x00007fffefd9d0c5 in llvm::orc::ExecutionSession::lookup (this=0xbcb8b0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=llvm::orc::SymbolState::Ready) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2036; #55 0x00007fffefdbe05c in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /home/j",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:13180,access,access,13180,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['access'],['access']
Security,":Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589); ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772); ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:253721,hash,hash,253721,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,":Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:1784,secur,security,1784,https://root.cern,https://github.com/root-project/root/issues/15091,1,['secur'],['security']
Security,":RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587); ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880); ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:191507,hash,hash,191507,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,4,['hash'],['hash']
Security,":RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589); ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880); ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:209219,hash,hash,209219,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,7,['hash'],['hash']
Security,":\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\; Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:; \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer; enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c; lang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:3709,sanitiz,sanitizer,3709,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,":basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812); ==270704== by 0x753C38B: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793); ==270704== by 0x753BA56: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:87428,hash,hash,87428,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security,":basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Use of uninitialised value of size 8; ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812); ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:206714,hash,hash,206714,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security,":f8f0:660:3::36...; >>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>> CApath: none; >>> * Server certificate:; >>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NTi7%2BFO82QY6dKBp1en9fAODpFl%2FzZ0cHCZ3DsJzOIM%3D&reserved=0>; >>> ; >>> curl performs SSL certificate verification by default, using a ""bundle""; >>> of Certificate Authority (CA) public keys (CA certs). If the default; >>> bundle file isn't adequate, you can specify an alternate file; >>> using the --cacert option.; >>> If this HTTPS server uses a certificate signed by a CA represented in; >>> the bundle, the certifica",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:3854,Certificate,Certificate,3854,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,2,['Certificate'],['Certificate']
Security,":thinking: My approach here may be wrong... Looking more at the `CMakeCache.txt` file generated for my build on ARM, I see these values when I set up the build of ROOT 6.18/04 with the system's GCC 6.3:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; ```. While in my GCC 8 build of the master branch I see this:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=; //Test HAVE_CXX_ATOMICS64_WITH_LIB; HAVE_CXX_ATOMICS64_WITH_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; //Have library atomic; HAVE_CXX_LIBATOMICS64:INTERNAL=1; ```. The number of internal CMake variables actually differs between the two cases. In the first case, with the system's GCC 6.3 it does seem to detect things correctly. Since there is no `libatomic.so` file anywhere under `/usr/lib`. But in the second case, with GCC 8, CMake seems to falter. It seems that since only for the 64-bit atomic operations is a library needed, CMake gets confused about how to compile the code. Mind you, I'm pretty sure that the Raspberry Pi has a 32-bit ARM CPU. So I have no clue what the 64-bit atomic operations are doing. :confused:. I also tried to google these cache variables, but surprisingly I didn't find much useful. Still, I can't help but think now that this linking issue in ROOT should rather be attacked by fixing CMake somehow, and not by linking against `libatomic` ourselves. Then again, doing this is definitely getting the job done...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-544677066:1481,attack,attacked,1481,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-544677066,1,['attack'],['attacked']
Security,; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8301,secur,security,8301,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18121,secur,security,18121,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f2388,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11812,secur,security,11812,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28519,secur,security,28519,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16332,secur,security,16332,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11620,secur,security,11620,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11716,secur,security,11716,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:4103,Access,Access,4103,https://root.cern,https://github.com/root-project/root/issues/12761,1,['Access'],['Access']
Security,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:108223,Access,Access,108223,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Access'],['Access']
Security,; 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 22: Assuming 'gDebug' is not equal to 0 in /opt/root_src/core/base/src/TDirectory.cxx:662; 23: Taking true branch in /opt/root_src/core/base/src/TDirectory.cxx:662; 24: Assuming 'namecycle' is null in /opt/root_src/core/base/src/TDirectory.cxx:664; 25: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:664; 26: Passing null pointer value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669; 27: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1260; /opt/root_src/core/base/src/TFolder.cxx:331:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TFolder.cxx:331; /opt/root_src/core/base/src/TPRegexp.cxx:416:10: warning: Value stored to 'nrMatch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:109329,secur,security,109329,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security,; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 9: Assuming field 'fFirst' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 10: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 11: Assuming field 'fSecond' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 12: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 13: Field 'fFrame' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 14: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 15: 'w' is <= 0 in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:457; 16: '?' condition is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:457; 17: Calling default constructor for 'TGSplitFrame' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:461; 18: Access to field 'fSplitTool' results in a dereference of a null pointer in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260; /opt/root_src/gui/gui/src/TGTable.cxx:1387:10: warning: Value stored to 'ncolumns' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ncolumns' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1387; /opt/root_src/gui/gui/src/TGTable.cxx:1399:10: warning: Value stored to 'nrows' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrows' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1399; /opt/root_src/gui/gui/src/TGTable.cxx:1508:4: warning: Value stored to 'pos' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pos' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1508; /opt/root_src/gui/gui/src/TGText.cxx:171:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:52367,Access,Access,52367,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,"; <!--; A clear and concise description of what the wrong behavior is.; -->. Building master (+ fix for #12151) with `builtin_llvm=OFF` results in this build error:. ```; [5940/8663] /usr/lib/ccache/c++ -I""/<<PKGBUILDDIR>>/core/dictgen/res"" -I""/<<PKGBUILDDIR>>/core/dictgen/src"" -I""/<<PKGBUILDDIR>>/core/foundation/res"" -I""/<<PKGBUILDDIR>>/core/clingutils/res"" -I""/<<PKGBUILDDIR>>/core/base/inc"" -I""/<<PKGBUILDDIR>>/core/clib/inc"" -I""/<<PKGBUILDDIR>>/core/meta/inc"" -I""/<<PKGBUILDDIR>>/core/foundation/inc"" -I""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/ginclude"" -I""/<<PKGBUILDDIR>>/interpreter/cling/include"" -isystem ""/<<PKGBUILDDIR>>/interpreter/llvm/src/tools/clang/include"" -isystem ""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/interpreter/llvm/src/tools/clang/include"" -isystem /usr/lib/llvm-13/include -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o.d -o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -c '/<<PKGBUILDDIR>>/core/dictgen/src/rootcling_impl.cxx'; <<snip>>; [6107/8663] : && /usr/lib/ccache/c++ -fPIC -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:1272,secur,security,1272,https://root.cern,https://github.com/root-project/root/issues/12152,1,['secur'],['security']
Security,"<>(char const*, int) (TQObject.h:137). This conflicts with a previous write of size 4 by thread #3; Locks held: 1, at address 0x167C9B50; at 0x52005E4: TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:70); by 0x5200785: TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); by 0x5201C2D: TSeqCollection::Add(TObject*) (TSeqCollection.h:38); by 0x519E68B: TSystem::AddTimer(TTimer*) (TSystem.cxx:476); by 0x52CDC32: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); by 0x64AC1E3: TThreadTimer::TThreadTimer(long) (TThread.cxx:1200); by 0x64AB943: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1037); by 0x64AB448: TThread::Printf(char const*, ...) (TThread.cxx:950); ```. 1); ```; TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1058); TThreadTimer::Notify() (TThread.cxx:1208); ```; ![image](https://user-images.githubusercontent.com/10653970/121098991-0584b500-c7c5-11eb-8a4a-2c07f74d1486.png). --> TThread::fgXact is accessed unprotected, it could have been changed at the same time by XARequest:. ![image](https://user-images.githubusercontent.com/10653970/121099097-3664ea00-c7c5-11eb-86e7-41daed97a959.png). 2); ```; TApplication::IsRunning() const (TApplication.h:148); TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029); This conflicts with a previous write of size 1 by thread #1; TApplication::Run(bool) (TApplication.cxx:1622); ```; ![image](https://user-images.githubusercontent.com/10653970/121100197-4f6e9a80-c7c7-11eb-883b-0f7aec2059d2.png); ![image](https://user-images.githubusercontent.com/10653970/121100214-58f80280-c7c7-11eb-80b8-cdbc68dd1efe.png). 3); ```; Possible data race during read of size 4 at 0x7F25098 by thread #3; Locks held: 1, at address 0x167C9B50; TCollection::GetSize() const (TCollection.h:182); TOrdCollectionIter::Next() (TOrdCollection.cxx:506); TIter::Next() (TCollection.h:249); TIter::operator()() (TCollection.h:248); TCollection::FindObject(TObject const*) const (TCollection.cxx:34",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365:2037,access,accessed,2037,https://root.cern,https://github.com/root-project/root/issues/8365,1,['access'],['accessed']
Security,"<G__G__ANALYSIS_215_0_109(G__value*, char const*, G__param*, int)>, result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/Api.cxx:393; #10 0x00007fba3322b094 in G__execute_call (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2408; #11 0x00007fba3322b38b in G__call_cppfunc (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2612; #12 0x00007fba33212c9f in G__interpret_func (result7=result7; entry=0x7ffcac8c2c90, funcname=0xfa4210 ""InitAnalysis"", libp=libp; entry=0x7ffcac8c2cd0, hash=1240, p_ifunc=0x249df80, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:5791; #13 0x00007fba33204f55 in G__getfunction (item=item; entry=0xe73375 ""InitAnalysis()"", known3=known3; entry=0x7ffcac8ce1a4, memfunc_flag=<optimized out>, memfunc_flag; entry=1) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2660; #14 0x00007fba332cc07c in G__getstructmem (store_var_type=store_var_type; entry=112, varname=..., membername=membername; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:3123,hash,hash,3123,https://root.cern,https://github.com/root-project/root/issues/6977,1,['hash'],['hash']
Security,"<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== ; ==270704== Use of uninitialised value of size 8; ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812); ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:250822,hash,hash,250822,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security,"<https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1836,secur,security,1836,https://root.cern,https://github.com/root-project/root/pull/11882,1,['secur'],['security']
Security,"= by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:74789,hash,hash,74789,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to desc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:10922,access,access,10922,https://root.cern,https://github.com/root-project/root/issues/8578,1,['access'],['access']
Security,"=270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614); ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:211862,hash,hash,211862,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Use of uninitialised value of size 8; ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55); ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:173502,hash,hash,173502,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"> (again note that future usually means asynchronous execution in c++. Right .... this is a major difference. > Can you give an example of how that would look from the user perspective?. Did not really think about it in details. I suppose.; ```; Auto filter = tdf.something( filter_lamba, branches ); // Guarantee 'fast'; auto histo = filter.GetResult(); // access the disk ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381110819:358,access,access,358,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381110819,1,['access'],['access']
Security,> (some thing similar to export CLING_LDSYSPATH=cling print_ld_syspath();`. I actually meant: ``` CLING_LDSYSPATH=`cling print_ld_syspath();` ``` (missing the execution request).; And would require the cling runtime to have access to a function named `print_ld_syspath` which you actually print the value of `LDSYSPATH` that cling calculates and uses when `CLING_LDSYSPATH` is not set.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1523535227:224,access,access,224,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1523535227,1,['access'],['access']
Security,"> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not match the domain name in the URL).; >> If you'd like to turn off curl's verification of the certificate, use; >> the -k (or --insecure) option.; >> ***@***.*** t5]$ ; > ; > ; > I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; > or; > curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; > ; > ; > regards,; > Asoka; > ; >> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.***> wrote:; >> ; >> ; >> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >> ; >> If not let's get #8155 fixed and then we re-visit this one: either it's fixed, too, or we need to call in help from the Davix (?) folks.; >> ; >> —; >> You are receiving this because you authored the thread.; >> Reply to this email directly, view it on GitHub, or unsubscribe.; >> ; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:2905,secur,security,2905,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,3,"['authenticat', 'certificate', 'secur']","['authentication', 'certificates', 'security']"
Security,> * warning: format string is not a string literal (potentially insecure) [-Wformat-security]. I will fix warnings with next PR - they didn't appears when I was submitting my last PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3480#issuecomment-468244044:84,secur,security,84,https://root.cern,https://github.com/root-project/root/pull/3480#issuecomment-468244044,1,['secur'],['security']
Security,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393877626:241,Hash,Hash,241,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393877626,1,['Hash'],['Hash']
Security,"> ... I claim nobody looked at these tutorials in a very long time. The programming model as well as the description are somehow indicators. Yes, they need to be updated/replaced. > we have this JIRA item about thread safety of canvases: https://sft.its.cern.ch/jira/browse/ROOT-9177. These 2 tutorials are not about construction/destruction but about access pattern and insuring that the canvas are refreshed. Thanks.; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-358960384:352,access,access,352,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-358960384,1,['access'],['access']
Security,"> ; > ; > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have...; > ; > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if; > ; > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option.; > ; > Is that an acceptable approach?. Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863959906:56,access,access,56,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863959906,2,['access'],['access']
Security,"> ; > ; > The covariance matrix quality is not set in the `RooFitResult` if the SumW2 or Asymptotic correction is implemented in [RooAbsPdf::FitTo](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). This has been reported in the [ROOT forum](https://root-forum.cern.ch/t/how-to-get-the-covariance-quality-of-a-fit-when-using-sumw2error/44162/3).; > ; > This PR suggests to set the covariance matrix quality according to the following prescriptions:; > ; > * **SumW2Error** correction: take the minimum of the quality of the original covariance matrix and the covariance matrix obtained with squared weights that was used in the correction; > ; > * **AsymptoticError** correction: take the quality of the original covariance matrix. (Thank you very much for this update following my topic in the ROOT forum, it's very helpful; now, the covariance quality is accessible even when using `SumW2Error` and seems to work as intended.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7711#issuecomment-828359313:894,access,accessible,894,https://root.cern,https://github.com/root-project/root/pull/7711#issuecomment-828359313,1,['access'],['accessible']
Security,"> ; >>>>> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428508454%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=nfxduy6kAYVqAb9Y561kDpg578YKts2gajMGy3hd9fo%3D&reserved=0>; >>>>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>>>> * Trying 2607:f8f0:660:3::36...; >>>>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>> CApath: none; >>>>> * Server certificate:; >>>>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>> * Peer's Certificate issuer is not recognized.; >>>>> * Closing connection 0; >>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:3784,certificate,certificate,3784,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['certificate'],['certificate']
Security,"> > > > @vgvassilev Great!; > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > > > ; > > > ; > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?; > > ; > > ; > > Yes; > ; > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?. Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1979007390:217,Hash,Hash,217,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1979007390,2,"['Hash', 'access']","['Hash', 'accesses']"
Security,"> > > @vgvassilev Great!; > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > > ; > > ; > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?; > ; > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978995469:213,Hash,Hash,213,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978995469,1,['Hash'],['Hash']
Security,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193095859:965,expose,expose,965,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859,2,['expose'],['expose']
Security,"> > @Axel-Naumann is a backport of #12153 and this PR possible for a 6.28.xx release?; > ; > I think that's a good idea. Can you prepare a backport PR against `v6-28-00-patches`? If not I can also do it. Then up to Axel if we include it already in the next patch release that is expected ~now or later. I was hoping I would be able to do so before I leave, but unfortunately I had to move and don't have access to my computer for a while... So I wouldn't mind if you give it a go, but it's also not super high priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13420#issuecomment-1676359312:404,access,access,404,https://root.cern,https://github.com/root-project/root/pull/13420#issuecomment-1676359312,1,['access'],['access']
Security,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org?; > ; > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7446#issuecomment-796556844:636,hash,hash,636,https://root.cern,https://github.com/root-project/root/pull/7446#issuecomment-796556844,2,['hash'],['hash']
Security,"> > @ferdymercury please let me know if it's OK with you (you can maybe try to add your review and approve it); > ; > Thanks! I added my review. It says though: 'only reviews from users with write access count towards mergeability'. It's what I thought, thanks anyway, I'll ask someone else 🙂",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170#issuecomment-777399205:197,access,access,197,https://root.cern,https://github.com/root-project/root/pull/7170#issuecomment-777399205,1,['access'],['access']
Security,"> > @ktf can you please not debug in Jenkins? This should be investigated offline!; > ; > Sorry, but I cannot replicate it offline, I have tried mac, ubuntu and centos with a number of combinations of the various `-D*ASSERT*=ON`, `-DCMAKE_BUILD_TYPE=*` I can possibly think of. If you have a failing environment could you provide me access to it?. I can quite easily reproduce it on EL8 with the exact `cmake` command from the Jenkins log. The important piece seems to be `-DCMAKE_CXX_STANDARD=14`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1722289138:333,access,access,333,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1722289138,1,['access'],['access']
Security,"> > @vgvassilev Great!; > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > ; > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?. Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978582934:209,Hash,Hash,209,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978582934,1,['Hash'],['Hash']
Security,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works.; > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?; > ; > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794110806:144,access,access,144,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794110806,1,['access'],['access']
Security,"> > Copy the line of the ""required dependencies"". ![image](https://user-images.githubusercontent.com/10653970/151994837-3b55785f-dc11-4776-bcfa-a1e8796ffd19.png); . > ask me for a password I do not know ... Never mind .. pwd is 123456",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026948805:180,password,password,180,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026948805,1,['password'],['password']
Security,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms...; > ; > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1919228195:348,hash,hash,348,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1919228195,1,['hash'],['hash']
Security,"> > I do not have access to a gcc12 platform; > ; > The new CI now includes ubuntu2210 with GCC12. Thanks, which machine is that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519#issuecomment-1484589906:18,access,access,18,https://root.cern,https://github.com/root-project/root/pull/12519#issuecomment-1484589906,1,['access'],['access']
Security,"> > In the example from the bug report that would be spec_func_C.so; > ; > The intent is for this library to be hard linked to its dependencies. What does ""hard linked"" mean? Using explicit linking?. > To do so rootcling needs a mapping ""symbols to library"" (previously provided by rootmap) and output a list of used library. Previously, if I am not mistaken, rootcling will list all loaded libraries in the existing session and then replay them when loading the ACLiC library. That seems suboptimal as may redundant things can be loaded, especially when the `.L ...++` is not the first command to execute. > ; > hence my question "" Doesn't rootcling have access to the information (connection symbol to library) through the pcm files?"". I has it, but it is lazily obtained by the visiting the undefined symbols when the library is loaded as intended avoid loading of libraries which existed in the session but are irrelevant to the ACLiC-produced library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605494767:656,access,access,656,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605494767,1,['access'],['access']
Security,"> > OK, so `-Dbuiltin_ssl=ON` doesn't work on Windows...; > ; > But is there any SSL library provided by Windows itself?. Yes, but it's not compatible with OpenSSL. See for example:; https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-secure-socket-extensions?redirectedfrom=MSDN; https://docs.microsoft.com/en-us/windows/win32/winsock/using-secure-socket-extensions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1134309866:246,secur,secure-socket-extensions,246,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1134309866,2,['secur'],['secure-socket-extensions']
Security,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060988:944,expose,expose,944,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988,2,['expose'],['expose']
Security,"> > TClassEdit reads behind the end of a static string to find the type of an STL container.; > ; > Do you mean that it **does** read behind the end of that the address sanitizer ""fears"" the code ""might""? If it is the earlier then I am missing how the patch (which it self seem fine) would change anything. Address sanitizer doesn't fear, the algorithm cannot create false positives according to their paper. Here, we indeed read at index 14 in a string of 14 chars.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821334702:169,sanitiz,sanitizer,169,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821334702,2,['sanitiz'],['sanitizer']
Security,"> > The problem was that the exapandedUrl sometimes contained only the base EOS management URL, which broke it.; > ; > Can you give a concrete illustration?. Here is a session with `strace` with the redirection disabled:; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffd2e39de38 /* 49 vars */) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 4; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; one wit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:411,access,access,411,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,4,['access'],['access']
Security,"> > Would it be useful to add one, for example, if possible, a mock of the code of CMS that exposed the bug?; > ; > Not really. The related problem (missing list of function in some rare runs) is not explicitly understood. Also in CMS' testing the occurrence rate is in the range of 1e-4 ... 1e-6, i.e. rare enough to make debugging very impractical, but frequent enough to be a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15113#issuecomment-2056982955:92,expose,exposed,92,https://root.cern,https://github.com/root-project/root/pull/15113#issuecomment-2056982955,1,['expose'],['exposed']
Security,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/; > ; > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!); > ; > Can you elaborate?. https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1849671963:40,hash,hashes,40,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1849671963,1,['hash'],['hashes']
Security,> > if it is easy to backport this to root 6.26 then I can test it.; > ; > How difficult is to move to 6.30?. change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1940892944:194,validat,validation,194,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1940892944,1,['validat'],['validation']
Security,> > to add a non-const accessor to the TGraph interface; > ; > I don't understand what you are considering here?; > ; > TGraph was designed to own the data; changing this is likely not worth the cost as virtually all use cases will not make use of the shared ownership. A non-const accessor to allow TGraph to own the data and allow a user to access and modify the data without making a copy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1057000000:23,access,accessor,23,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1057000000,3,['access'],"['access', 'accessor']"
Security,"> > we don't want to link libLLVM then; > ; > Indeed: if we link the static libraries we don[t want to _also_ link the shared library. And we prefer static libs, because that allows us to hide symbols more effectively, and e.g. some NVidia driver famously exposed all LLVM symbols - of its own LLVM libraries! - to the process, causing conflicts, so we do want to hide those LLVM symbols. Apologies for not being explicit enough on this, caused by me transitioning from vacation to work :-); > ; > Could you see whether not applying the commit you mention fixes this?. Unfortunately, it seems like #12154 is unrelated. libLLVM is linked whether or not I add https://github.com/root-project/root/commit/8929db8b390ccd2aaf4ab41d6e28f61ad81510e0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1662480716:256,expose,exposed,256,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1662480716,1,['expose'],['exposed']
Security,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:; > ; > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5); > user time:	0.53s	0.50s	0.49s; > rss:	309436	310196	310192; > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > ; > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1980600340:601,hash,hash,601,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1980600340,1,['hash'],['hash']
Security,"> @aaronj0 @dpiparo, this PR is now ready for review. It would be great if it can make it into `master` before branching, becuase this concerns a deprecation that I would like to be in effect as of 6.34. lgtm! As far as my understanding goes, using `std::any` in this case is helpful, providing type-safe access to the result and no longer requires explicit `void *` casts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16175#issuecomment-2313034321:305,access,access,305,https://root.cern,https://github.com/root-project/root/pull/16175#issuecomment-2313034321,1,['access'],['access']
Security,> @bluehood You think this is good to go?. As per my second review comment: is the comment that I report below hovering over the correct line?. ```c++; // Accessing the information like this ensures that we get the correct; // filenames and treenames if the treename is given as part of the filename; // via chain.AddFile(file.root/myTree).; ```; I thought it referred to this trick:; ```c++; static_cast<TChain*>(frTree)->GetListOfFiles()->First()->GetName();; ```; but instead it's put over this line:; ```c++; for (auto f : *chainFiles) {; fileNames.emplace_back(f->GetTitle());; ```; _but this line was already there before your commit_. EDIT:; sorry about the nitpicking but it's a very tricky piece of code and we need to get it right and document it right for posterity :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4879#issuecomment-582153546:155,Access,Accessing,155,https://root.cern,https://github.com/root-project/root/pull/4879#issuecomment-582153546,1,['Access'],['Accessing']
Security,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here?. They are; ```; 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660); a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658); 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24; 94239712eb17 Fix typos in comments of ExecutionEngine (NFC); b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink; d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target; 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64; 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le; ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34; 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object; 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC.; 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC; 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment.; 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC.; 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64; 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph; 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC; 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend.; ```; `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1864265043:59,hash,hashes,59,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1864265043,1,['hash'],['hashes']
Security,"> @couet; > In the CMake build log I see:; > ; > ```; > -- Checking internet connectivity...; > -- Yes; > ```; > ; > does this mean an internet connection is required? (would not be nice when just building the documentation).; > . No, it's just disabling the external packages requiring internet access if there is no internet connection",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887575337:296,access,access,296,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887575337,1,['access'],['access']
Security,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14613#issuecomment-1932130842:481,secur,security,481,https://root.cern,https://github.com/root-project/root/pull/14613#issuecomment-1932130842,1,['secur'],['security']
Security,> @ferdymercury please let me know if it's OK with you (you can maybe try to add your review and approve it). Thanks! I added my review. It says though: 'only reviews from users with write access count towards mergeability'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7170#issuecomment-777349181:189,access,access,189,https://root.cern,https://github.com/root-project/root/pull/7170#issuecomment-777349181,1,['access'],['access']
Security,"> @hageboeck : your suggestions work, except for:; > ; > ```; > RooAbsData.cxx:2591:45: error: passing ‘const TNamed’ as ‘this’ argument discards qualifiers [-fpermissive]; > 2591 | _namePtr->SetBit(RooNameReg::kRenamedArg);; > ```; > ; > Any suggestion ? should I `const_cast` only on this line ?. Yes, you could, but I would be more radical and get rid of it. It seems to be a thing only for RooLinkedList's hash table find. It presumably does the same as our new renamecounter that we introduced during the hackathon.; I suggest to invalidate the hash tables the moment something gets renamed, as we do for RooAbsCollection. I can look into this tomorrow @guitargeek @gartrog if you want. For now, just `const_cast`. Removal can come later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9684#issuecomment-1021114709:410,hash,hash,410,https://root.cern,https://github.com/root-project/root/pull/9684#issuecomment-1021114709,2,['hash'],['hash']
Security,"> @ktf can you please not debug in Jenkins? This should be investigated offline!. Sorry, but I cannot replicate it offline, I have tried mac, ubuntu and centos with a number of combinations of the various `-D*ASSERT*=ON`, `-DCMAKE_BUILD_TYPE=*` I can possibly think of. If you have a failing environment could you provide me access to it?. Alternatively, could you either provide me access to the the builder that is failing or let me know how I (i.e. the ALICE experiment) can loan you a machine to be hooked up in the same way as the other builders and use that one for testing (in case your concern is about resource usage)?. Alternatively, I am happy to keep testing adding debug statements and triggering new builds to find out why this fails in the ROOT jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1721573427:325,access,access,325,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1721573427,2,['access'],['access']
Security,"> @olemorud the last rebase seems to have gone wrong... You need to rebase your branch on `master`, not the other way around. There should never be commits from `master` with a different commit hashes in a PR. Yeah I will fix it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1413323599:194,hash,hashes,194,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1413323599,1,['hash'],['hashes']
Security,"> @phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. It seems that Jenkins failed, but I cannot access the logs, so I do not know what to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021#issuecomment-2041031336:103,access,access,103,https://root.cern,https://github.com/root-project/root/pull/15021#issuecomment-2041031336,1,['access'],['access']
Security,"> @rdschaffer : does this problem apply only to this analysis job, or also it happens with other jobs? (I'm asking because the `GenerateLogIn` is called for every xroot connection that is being established); > ; > It is another desperate one, but have you guys tried to run your analysis job under `valgrind`?. Hi @simonmichal,. This is happening to a colleague's job, different 'client' code, but does the same thing - TFile::Open. Just to note that we have been running these two sets of code on the grid for all of Run2. And it seems only in October, was it?, that we started having problems. We normally just submit on the ATLAS panda grid without any special request about the access to the files. I have not followed the history, but I assume that xrootd access has been used for some time now - Rod can comment. But at this time, which occurred with a change in the release of our grid sw - Rod can comment again - we starting having problems on only certain grid sites for the xrootd access. The only thing that works is to run with a request to fetch a copy of the files locally and then read them with TFile::Open. I can run valgrind, but I don't think that the problem is on our side. But if Rod says that no one else is having problems with xrootd access on the grid, then it may well be something peculiar with how we do things...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758512872:682,access,access,682,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758512872,4,['access'],['access']
Security,"> @vgvassilev Do we actually have any tests that checks that things still work if the files used to produce the pcm (or the pch) are gone and/or not longer accessible? (i.e. the test framework would have to explicitly hides/move/removes some files to achieve this). We seem to have builders that use the PCH (nortcxxmod). Then, we have cmssw that has the hybrid model, forward declarations and modules, including relocating the ROOT build - I doubt we would not catch the failure of this patch. I suspect what saves us here is several optimizations we did over the years where rootcling does not produce a lot of virtual file entries and basically pch/pcm files have less (but not 0) virtual files. @Axel-Naumann, I think you should know better - you created the patch long time ago ;) My memory is that we were trying to fix something with cms/atlas and PCH?. > * for this PR to be correctly validated we need to have tested a setup where the build directory is not available anymore at runtime. Does CMS test this, @smuzaffar @vgvassilev ?. Oh, yes, they do :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1139459615:156,access,accessible,156,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1139459615,2,"['access', 'validat']","['accessible', 'validated']"
Security,"> @vgvassilev Great!; > ; > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978581313:209,Hash,Hash,209,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978581313,1,['Hash'],['Hash']
Security,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-973325971:64,expose,exposed,64,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971,2,['expose'],['exposed']
Security,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?. If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-722648289:231,access,access,231,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-722648289,2,['access'],['access']
Security,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,; Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio?; ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1018356508:320,Sanitiz,Sanitizer,320,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1018356508,1,['Sanitiz'],['Sanitizer']
Security,"> Actually the issue seems stranger than expected. At the moment, I can not reproduce the problem. It seems to reproduce reasonably well when compiling with Clang (on EL8 and, according to the nightlies, also on Ubuntu 20.04). That said, in my local ASan build the test hangs and runs into a timeout (0% CPU usage after a few seconds), so no sanitizer output unfortunately... > Rerun the test with ASAN and a single thread [...]. This crashes with the same stack trace in the ""regular"" build (without sanitizer turned on).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715#issuecomment-1554204757:342,sanitiz,sanitizer,342,https://root.cern,https://github.com/root-project/root/issues/12715#issuecomment-1554204757,2,['sanitiz'],['sanitizer']
Security,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works.; > ; > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?. Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794106136:144,access,access,144,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794106136,1,['access'],['access']
Security,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later.; For instance TFrame object always must be first in list of primitives.; Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162863196:315,access,access,315,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162863196,3,['access'],['access']
Security,"> Also, there is no Issues section on the GitHub. Where is the discussion taking place? Is it only here, where people submit changes?. it is at https://sft.its.cern.ch/jira/projects/ROOT/issues; or for creating a new issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510#issuecomment-370566381:253,secur,secure,253,https://root.cern,https://github.com/root-project/root/pull/1510#issuecomment-370566381,1,['secur'],['secure']
Security,"> Although the ProgressBar won't be a progress bar when we don't know the number of events ... You're right, better name pending (`AddProgressIndicator`?). > It would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using RLoopManager::RegisterCallback. Yes that's a great idea, there are actually several advantages:. - as you mention, in the callback you wouldn't have to discard a partially evaluated result anymore; - `AddProgressIndicator` wouldn't need to return anything, it can just do what it says without users having to deal with the returned object; - probably the biggest: we wouldn't have to do any magic to make sure that the method is called _on the head node_ (because if you call it on a `Filter`, now you are updating the progress bar every N _filtered_ entries) . Now -- of course we don't just expose the `RLoopManager` to _anyone_, but we trust you, so you can add a `ROOT::Internal::ExtractLoopManager` function as a friend of `RInterface` that just returns `interface.fLoopManager`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880538021:202,access,access,202,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880538021,4,"['access', 'expose']","['access', 'expose']"
Security,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249#issuecomment-248249682:329,secur,secure,329,https://root.cern,https://github.com/root-project/root/pull/249#issuecomment-248249682,1,['secur'],['secure']
Security,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393872659:230,Hash,Hashing,230,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393872659,1,['Hash'],['Hashing']
Security,"> And we prefer static libs, because that allows us to hide symbols more effectively, and e.g. some NVidia driver famously exposed all LLVM symbols - of its own LLVM libraries! - to the process, causing conflicts, so we do want to hide those LLVM symbols. Some quick tests with `bin/root` show me that I don't have any llvm symbols available. I haven't done a proper check by reading the symbols though / CMake transitive link libraries though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1662518682:123,expose,exposed,123,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1662518682,1,['expose'],['exposed']
Security,"> As a **quick & dirty** solution it is ok, but we need much more advanced methods to work with ROOT structures. There are many global lists in ROOT, which should be accessed properly via RBrowser. In ROOT6 there is `TObject::Browse(TBrowser*)` method, which is implemented for many sub-classes. We need similar logic, but for arbitrary c++ classes - not only TObject.; > ; > One possible solution is implemented for THttpServer - it is so called TRootSniffer. It provides methods to scan many different classes without need to implement specialized `Browse()` method in the class itself.; > ; > I hope, we can discuss this topic next week. This is indeed more a proof of concept than a final solution. I propose to merge it as it is now and then review the whole concept (as several others, like directory navigation) when you'll be around next week. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4468#issuecomment-537861902:166,access,accessed,166,https://root.cern,https://github.com/root-project/root/pull/4468#issuecomment-537861902,1,['access'],['accessed']
Security,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:685,expose,expose,685,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,2,['expose'],['expose']
Security,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):; > ; > ```; > >>> import cppyy; > >>> cppyy.gbl.TPython.Eval(""1+1""); > ```; > ; > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806076456:683,access,accessing,683,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806076456,1,['access'],['accessing']
Security,"> Before we can merge (or even test) this, the version needs to be uploaded at https://lcgpackages.web.cern.ch/tarFiles/sources/. I assume that @simonmichal or @abh3 can do this?. > The checksum of the github files are not stable (somehow the files are 'routinely' regenerated sometimes with different version of tar or gzip), so we can not rely on downloading it directly from github. Ah that's interesting. Good to know for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1151363501:186,checksum,checksum,186,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1151363501,1,['checksum'],['checksum']
Security,"> Book is good-ish, it would fill the dataset one-by-one, but RF can do better. Uhm, `Book` exposes the exact same mechanics that RDF uses for its own actions like `rdf.RooDataSet`, so anything you would like to do in there, you can do in the helper type you pass to `Book`. Then it's a small step to go from `df.Book(RooDataSetMaker(...), {""x"", ""y"", ""z""})` to `df.MakeRooDataSet`, basically just syntactic sugar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7223#issuecomment-779881872:92,expose,exposes,92,https://root.cern,https://github.com/root-project/root/issues/7223#issuecomment-779881872,1,['expose'],['exposes']
Security,"> Btw, I also found weird that the TDirectory destructor, by getting gROOT .... ends up calling . This is because it is the very first access to `gROOT` in this process and thus it triggers the initialization of the global `TROOT` object including the loading of various library related information (for all loaded library).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691#issuecomment-1728650146:135,access,access,135,https://root.cern,https://github.com/root-project/root/issues/13691#issuecomment-1728650146,1,['access'],['access']
Security,"> Build failed on ROOT-ubuntu2004-clang/default. Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/138532/console).; > ### Failing tests:; > [...]. Yes, as expected many tests are failing now, so we have to decide on a strategy here: Do we want to fix all issues first or merge this one first to make it easier to debug things? I'm definitely in favor of the latter, it's a waste of time to check the verbose output of 30+ tests by hand because they're not failing if the Address Sanitizer found something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1057797101:617,Sanitiz,Sanitizer,617,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1057797101,1,['Sanitiz'],['Sanitizer']
Security,"> Can we simply add const TROOT *&GetROOTPtrRef(), in the source file of where gROOT is injected in the list of globals?. Question - should this function be public? ; And that about other gInterpreter and gClient?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457718764:88,inject,injected,88,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457718764,2,['inject'],['injected']
Security,"> Could you give some hints in the commit log of the kind of layout issue being addressed?. Well, in some cases, the GUI layout is wrong. Do you want me to take screenshots?. > What is the ""value"" of keeping the old code (behind `#if 0`) in this case?. Form my own purpose, I want to test on a machine with dual screens once I can access it (and I'll remove it once tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6077#issuecomment-663557542:331,access,access,331,https://root.cern,https://github.com/root-project/root/pull/6077#issuecomment-663557542,1,['access'],['access']
Security,"> David - what's the _second_ llvm that you are dealing with? There's that of libCling, but there must be a second one that was linked against your binary or else you'd not see the warning. You did you link against libCling?!. My ROOT was linked to an external LLVM 5, but then I also linked to arrow, which is itself linked to an LLVM 7 (and that LLVM7 doesn't have hidden symbols). That caused the collision. My point with keeping the warning in case of an external LLVM is:; - #4689 is basically ineffective for an external LLVM, since it changes the internal LLVM build files, which are not used.; - By default, people with an external LLVM will not hide the symbols in the external LLVM, so they will end up in the same situation as before #4689 ; - Hence we could either:; - Check if an external LLVM was build with hidden symbols like in #4689, then we would be safe. Otherwise we could reject this external LLVM as improperly built.; - Or, disable the warning in this PR only for builtin_llvm. Then, the warning is gone in the default case. And when people use an external LLVM, they will get the same warning as before, as they are threatened by the same problem as before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572094187:1141,threat,threatened,1141,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572094187,1,['threat'],['threatened']
Security,"> Do you have access to a machine where you can test this?. Nope. Some of our unit tests are simulating the scenario expected on a big-endian machine. It would be helpful to test this on a real machine, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402#issuecomment-1122862180:14,access,access,14,https://root.cern,https://github.com/root-project/root/pull/10402#issuecomment-1122862180,1,['access'],['access']
Security,"> Do you mean short term while we fix the issue or do you mean just ignore the issue?; > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2051101896:471,inject,inject,471,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2051101896,1,['inject'],['inject']
Security,"> Does the Python translation also need to be updated?. Yes, if you have the time.; - It also accesses the global RNGs from an MT context.; - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352#issuecomment-982680071:94,access,accesses,94,https://root.cern,https://github.com/root-project/root/pull/9352#issuecomment-982680071,1,['access'],['accesses']
Security,"> Does the Python translation need to be updated?. Yes, if you have the time.; - It also accesses the global RNGs from an MT context.; - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9360:89,access,accesses,89,https://root.cern,https://github.com/root-project/root/issues/9360,1,['access'],['accesses']
Security,"> Fantastic, thanks, @jalopezg-git ! Is the mac11 failure in stressInterpreter caused by this PR?. Apparently, yes. Ugghh, that wasn't expected; all the other platforms seem to be happy now. Any chance that I can still access one of these machines to debug the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565#issuecomment-1708698177:219,access,access,219,https://root.cern,https://github.com/root-project/root/pull/13565#issuecomment-1708698177,1,['access'],['access']
Security,"> Here's the culprit: [llvm/llvm-project@bb79b06](https://github.com/llvm/llvm-project/commit/bb79b06f4e40d85d6c1b0ff2098e9aa5d6afce5d). Sigh. That's even older than the commit linked above, but the documentation for [LSan flags](https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer#flags) hasn't been updated since...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056714352:256,sanitiz,sanitizers,256,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056714352,1,['sanitiz'],['sanitizers']
Security,"> Hi @DenizCiger, @bernhardmgruber , thanks a lot for materialising this idea and for keeping me in the loop. Unfortunately, I cannot help much with the API as I never used it but I hope that the someone from PDG will help. We are in touch with the PDG on their python API, so we would no longer need to parse the text file. However, they currently only offer access to the masses. widths are not supported yet. so for now, we need to rely on the text file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13354#issuecomment-1665147240:360,access,access,360,https://root.cern,https://github.com/root-project/root/pull/13354#issuecomment-1665147240,1,['access'],['access']
Security,"> Hi @jblomer, the new test `RNTuple.SmallClusters` seems a bit flaky, sometimes [running into timeouts](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac13arm,SPEC=cxx17,V=master/3502/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/), sometimes [throwing exceptions](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac13arm,SPEC=cxx17,V=master/3500/testReport/junit/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/) (both `mac13arm`), and one time [crashing on Linux](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/3501/testReport/junit/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/) (how does it get to `llvm::LazyMachineBlockFrequencyInfoPass::ID()` though?). An address-sanitized build doesn't show anything when executing the test, any idea where we could start looking?. Hi @hahnjo, @jblomer is off the rest of the week, but I did take a look :-). Apparently, on an IMT build, some TBB tasks might still be running when the `RPageSink` object (a member of a `RNTupleWriter`) is destructed. A PR is coming... (**EDIT:** that's now https://github.com/root-project/root/pull/12824).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12665#issuecomment-1549328320:886,sanitiz,sanitized,886,https://root.cern,https://github.com/root-project/root/pull/12665#issuecomment-1549328320,1,['sanitiz'],['sanitized']
Security,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`.; But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear.; And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2177936944:216,access,access,216,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2177936944,2,['access'],['access']
Security,> How about remembering the number of methods in TClassRef? I don't know if this will solve the performance problem but at least we don't have to iterate on same classes. I am a bit lost .... What performance problem are we addressing here? [i.e. as far as I can tell most time the number of methods is accessed this is followed by an iteration over all methods]. Can you be more specific on which (part of which) benchmark you are optimizing and how much this change would improve the run-time of this benchmark?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373170242:303,access,accessed,303,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373170242,1,['access'],['accessed']
Security,"> How does the new cache handle the typical cache of a file being edited and then reloaded?. While being loaded by the same path and when being matched against itself, it should hit the strncmp logic and exit the function. The race condition causing false positives or false negatives can only be triggered by accessing via different paths to what was or should now be the same file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010#issuecomment-921304029:310,access,accessing,310,https://root.cern,https://github.com/root-project/root/pull/9010#issuecomment-921304029,1,['access'],['accessing']
Security,"> How shall I proceed with this PR ?. As you changed some TMVA code it is up to @lmoneta, as code owner, to validate this PR and merge it when he'll think it is fine. As I said the documentation part is fine for me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9651#issuecomment-1074849197:108,validat,validate,108,https://root.cern,https://github.com/root-project/root/pull/9651#issuecomment-1074849197,1,['validat'],['validate']
Security,"> However, having the static in an inline accessor is probably a mistake. Should I submit a PR; > with a proper function ?; Yes please",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7165#issuecomment-777642874:42,access,accessor,42,https://root.cern,https://github.com/root-project/root/pull/7165#issuecomment-777642874,1,['access'],['accessor']
Security,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray!; > ; > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171#issuecomment-524868233:372,access,access,372,https://root.cern,https://github.com/root-project/root/pull/4171#issuecomment-524868233,2,['access'],['access']
Security,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?. Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592453596:161,sanitiz,sanitizer,161,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592453596,2,['sanitiz'],['sanitizer']
Security,> I can't upload a Windows package right now because I have to be at CERN to access my OpenStack instance. You can always ssh into lxplus and log into your CERN machines from there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369511647:77,access,access,77,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369511647,1,['access'],['access']
Security,> I do not have access to a gcc12 platform. The new CI now includes ubuntu2210 with GCC12,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519#issuecomment-1484581251:16,access,access,16,https://root.cern,https://github.com/root-project/root/pull/12519#issuecomment-1484581251,1,['access'],['access']
Security,"> I don't understand why to keep backwards compatibility we need to silence warnings that were previously not silenced..?. The warning is raised at the first `TFile::Open`. Previously, that happened whenever a `Filter`,`Define` or any operation needed to access a branch of the TTree, i.e. after construction time. With this PR, it happens at construction time. In order to keep backwards compatibility, we discussed that the call to `TFile::Open`, at least for the purposes of this PR, should not let the user know that their file cannot be opened (yet), and that it is deferred to the first `Define` as it currently happens. Thus, we both do not raise an exception and we also have to hide the `Error: TFile cannot be opened` print statements to std::err that `TFile::Open` will trigger. So that's why I used the `RIgnoreErrorLevelRAII`. The fact that the warnings of the `readTotem` test are also silenced is merely a side-effect of having to implement the function in the way we discussed. At this point though, I am quite convinced that this is bringing more confusion than anything else, especially for a temporary quirk that I would have corrected in the next PR anyway. So I think I will just go with the final solution that we decided, i.e. throwing an exception right away at construction time. . Note that I will still need to modify the `.ref` file of the `readTotem` test because the warnings about the missing dictionaries will happen at construction time rather than during the first `Foreach` call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1661649786:255,access,access,255,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1661649786,1,['access'],['access']
Security,> I don’t have access to a laptop right now. @hahnjo can you revert?. https://github.com/root-project/root/pull/11582,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11571#issuecomment-1280502541:15,access,access,15,https://root.cern,https://github.com/root-project/root/pull/11571#issuecomment-1280502541,1,['access'],['access']
Security,"> I find this surprising; it used to affect only lsan when this was implemented. I trust that you verified this, though. Yes, the relevant code is https://github.com/llvm/llvm-project/blob/7f99e1870f776a25e03526e3190105c094750d98/compiler-rt/lib/asan/asan_flags.cpp#L113-L116 which AFAICT has been the case basically since it was introduced by https://github.com/llvm/llvm-project/commit/1b73bde182c5ea5beb2fd9212b3abf3f2557d817. Now it's possible that earlier toolchains on macOS did not have `CAN_SANITIZE_LEAKS`... > The only other thing I can say is that maybe now it's a good idea to verify whether it's possible to switch on leak sanitizer. With llvm 5, this just wasn't possible, and JITted functions also created problems because their memory management escaped asan. That's why the exitcode was hardcoded to 0. Maybe you can switch it on once, and see how much explodes. That's another thing that deviates from the documentation: LSan is supposed to be on-by-default with ASan on Linux x86, but it's not for us...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056646496:636,sanitiz,sanitizer,636,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056646496,1,['sanitiz'],['sanitizer']
Security,"> I guess if libTree_is_loaded would mean calling TInterpreter::IsLibraryLoaded, which might involve a fair amount of string comparisons. It can be reduced to a Hash lookup:. ```; auto islibTreeLoaded = TClassTable::GetDict(""TTree"") != null;; ```. (and once the answer is true, you can cache the result).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2799#issuecomment-431291042:161,Hash,Hash,161,https://root.cern,https://github.com/root-project/root/pull/2799#issuecomment-431291042,1,['Hash'],['Hash']
Security,"> I have run the current version of mlpHiggs.C. It works fine seems to me.; > I do not see why changing it ?. The test falls back to using a remote copy if the local file can not be opened.; If the test is run in an environment without network access (e.g. koji) it fails without the change, because the local copy is not found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5162#issuecomment-600663967:244,access,access,244,https://root.cern,https://github.com/root-project/root/pull/5162#issuecomment-600663967,1,['access'],['access']
Security,"> I have tested the PR with the code used to reproduce #7890 and unfortunately the memory leak is still there. Ok, I think I saw one more in the leak sanitizer logs, I'll rerun with the fixes and check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904#issuecomment-822273459:150,sanitiz,sanitizer,150,https://root.cern,https://github.com/root-project/root/pull/7904#issuecomment-822273459,1,['sanitiz'],['sanitizer']
Security,> I just tried to repair code and make it working as it was designed. The design of moving from CINT to cling was to expose to cling what was hidden for CINT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606528671:117,expose,expose,117,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606528671,1,['expose'],['expose']
Security,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options.; > ; > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1; > ; > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15851#issuecomment-2191787692:194,access,access,194,https://root.cern,https://github.com/root-project/root/issues/15851#issuecomment-2191787692,2,['access'],['access']
Security,"> I still don't understand how multiple threads that are racing to snapshot and restore the mutex state can do so safely, if they happen to restore state in a different order than the one in which snapshots were taken. I can imagine there is a way,. I could not. The may reason is that once there is a restore, that thread has exclusive access and won't yield to another thread until its critical section is done (or does Jitting). And for the state of the mutex all that really matters in that the number of unlocks being done unwinding the critical section matches the counts recorded in the mutex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-688955010:337,access,access,337,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-688955010,1,['access'],['access']
Security,"> I still think that the suffix Ptr is a bit misleading due to the fact that operator-> is/can-be a very heavy operation and as such we may want to consider TResultHandle. I think `TResultHandle` would suffer from the same problems as `TResultProxy`: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a `std::vector` of those, default construct one, assign one, copy.... `operator->` will be heavy for the first time the first result is accessed, and that is _the one thing_ to know about TDataFrame: event loop runs upon first access to one of the results.; Subsequent usages of `operator->` will be fast.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381100053:492,access,accessed,492,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381100053,4,['access'],"['access', 'accessed']"
Security,"> I think TResultHandle would suffer from the same problems as TResultProxy: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a std::vector of those, default construct one, assign one, copy.... One could give the exact same argument against TResultPtr ;) .... One difference with a pointer is the life-time of the pointee. > the average physicist will not know how to use it,. A lot of the frameworks have the concept of 'Handle' already to indicate this kind of delay-loaded accessor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381102689:532,access,accessor,532,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381102689,2,['access'],['accessor']
Security,"> I thought it was a TBrowser vs RBrowser problem. If it's an invalid memory access it should be easy to check where it happens and what's the stacktrace, maybe it's a bug in the tutorial? what's the stacktrace?. I don't have any stack trace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10436#issuecomment-1106123711:77,access,access,77,https://root.cern,https://github.com/root-project/root/pull/10436#issuecomment-1106123711,1,['access'],['access']
Security,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968052222:944,secur,secure,944,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222,2,['secur'],['secure']
Security,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?. We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1864372469:222,hash,hashes,222,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1864372469,1,['hash'],['hashes']
Security,"> I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no?. I guess it could be moved to the `Internal` namespace. It is currently used for the `RNTupleCollectionView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16644#issuecomment-2403324408:66,access,accessible,66,https://root.cern,https://github.com/root-project/root/pull/16644#issuecomment-2403324408,1,['access'],['accessible']
Security,"> I'm very in favour of that, though I'm not sure I'd know how to properly explain the reason to them. If you look a few lines above, there are also many cases where we check if we have disabled modules validation. I guess here the motivation is consistency with the rest when we have disabled the pcm validation...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10555#issuecomment-1125376315:203,validat,validation,203,https://root.cern,https://github.com/root-project/root/pull/10555#issuecomment-1125376315,2,['validat'],['validation']
Security,"> IIUC the patch is not a fix, it's to expose the problem even without using asan.; > ; > I guess we need to update `TClassEdit::STLArgs` to support RVec, we forgot when moving it to the collection proxy mechanism. That's exactly right. I propose to leave the assert in place. It may get ugly if something like this gets forgotten again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821333872:39,expose,expose,39,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821333872,1,['expose'],['expose']
Security,"> IMO it's too heavy to add it to the script producing CITATION.cff. Makes sense. What I would do in the GH Actions workflow would probably be something like:. 1. pip install and run the validation script there (so that it doesn't have to be included in the script, but can still be used to check PRs); 2. Maybe also run `makeCITATION.py` and compare the output to the existing CITATION.cff file, just to make sure both files were updated. But, again, can be added later. I'm not sure how much you want to depend on GitHub Actions anyway, perhaps it makes more sense to automate things elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876322029:187,validat,validation,187,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876322029,1,['validat'],['validation']
Security,"> If RDF relies on the elements of a bulk of RVec being all consecutively in memory. It doesn't really, at the moment. Bulk RDF only expects the RVec objects in the bulk to be consecutive in memory, not their contents. But it's desirable that the elements be consecutive as well: in the future we would like to expose the flattened array elements to computation kernels for performance reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382#issuecomment-1662669363:311,expose,expose,311,https://root.cern,https://github.com/root-project/root/pull/13382#issuecomment-1662669363,1,['expose'],['expose']
Security,"> If the question is if we have multiple duplication due to textual inclusion of header files we have almost none. We have worked very very hard to modularize things bottom up, including libc, libstdc++, libxml, boost, etc. Yes, this is our problem : (. > It feels feasible to me, since there is no need of any of these types unless they were needed. We could possibly store their hash and offset and deserialize them on demand. . I am still confused about the intention. How could you know the necessary types to be loaded ahead of time?. > I can open these issue reports. It would take me some time to put sufficient information to make them actionable though. Thank you for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617565017:381,hash,hash,381,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617565017,1,['hash'],['hash']
Security,"> If you look into MnMigrad.h, you will see that it only allows one to access the ModularFunctionMinimizer as a const reference. @lmoneta @henryiii Is that limitation necessary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384997463:71,access,access,71,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384997463,1,['access'],['access']
Security,"> In ROOT-10637, which is the library that does not have rootmap file nor a modulemap file?. In the example from the bug report that would be `spec_func_C.so`. It has no `spec_func_C.rootmap` nor `spec_func_C.pcm/module.modulemap`. > > In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies; > ; > Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library]. Do you mean this code [here](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L557-L573). The content of `spec_func_C_ACLiC_map.out` and `spec_func_C_ACLiC_map.in` [here](https://paste.ubuntu.com/p/WGcBqPTRwH/). I suspect it worked before because accidentally we had libHist's description stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605463982:572,access,access,572,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605463982,1,['access'],['access']
Security,> In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605269705:332,access,access,332,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605269705,1,['access'],['access']
Security,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:314,sanitiz,sanitized,314,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,4,['sanitiz'],"['sanitized', 'sanitizers']"
Security,"> In the example from the bug report that would be spec_func_C.so. The intent is for this library to be hard linked to its dependencies. To do so rootcling needs a mapping ""symbols to library"" (previously provided by rootmap) and output a list of used library. hence my question "" Doesn't rootcling have access to the information (connection symbol to library) through the pcm files?""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605489169:304,access,access,304,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605489169,1,['access'],['access']
Security,"> Is there a place in our code where we import all the backend modules, independently of whether they are used or not?. We import the [Python module of each backend](https://github.com/root-project/root/blob/f61d5ef82a8851f488318be8eefe06a7d5311744/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py#L18), for example this is the Spark one https://github.com/root-project/root/blob/master/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/__init__.py . Note that there are no exposed `pyspark` or `py4j` in the Python module. They are only written in the `Backend.py` submodule, which is only ever imported if the `RDataFrame` function of that specific module is called. So this should be already more than enough to isolate the different backends",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1050703056:501,expose,exposed,501,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1050703056,1,['expose'],['exposed']
Security,> Is there a plan to introduce testing for this part?. There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15452#issuecomment-2107863360:108,attack,attack,108,https://root.cern,https://github.com/root-project/root/pull/15452#issuecomment-2107863360,1,['attack'],['attack']
Security,"> Is this expected output of this PR or otherwise I recommend to add WIP :). There's some exectuables that are still ignoring the sanitizer setup. I have to look in more detail, so I converted it to a draft.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660#issuecomment-635873653:130,sanitiz,sanitizer,130,https://root.cern,https://github.com/root-project/root/pull/5660#issuecomment-635873653,1,['sanitiz'],['sanitizer']
Security,"> Isn't that part of DynamicPathName?. It looks not, I think `gSystem->AccessPathName(libname, kReadPermission)` is checking read permission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395671771:71,Access,AccessPathName,71,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395671771,1,['Access'],['AccessPathName']
Security,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-597012118:146,access,access,146,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-597012118,2,['access'],['access']
Security,"> It does matter a lot because I'm totally not happy that we are starting to patch the modulemap that we copied from Apple's distribution of libc++. If it's the only possibility, then we _can_ do it but I'm not able to assess that without knowing why it doesn't work in Philippe's while many other installations, including our CI nodes, are completely fine. I am not happy either. However, I do not see what we are after here? He, just like any other random user, installed something from Apple and thing broke. The options here are basically two: a) tell the user he is wrong and not fix it which is silly; b) fix it. The only place we could fix it is the modulemap as that's the only place we have write access to :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2370499488:706,access,access,706,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2370499488,1,['access'],['access']
Security,> It is not a proper place to disable authentication in REve.; > ; > Only in some specific application one should do so - when other protection mechanism is provided.; @linev Why this is not a proper place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14779#issuecomment-1967300448:38,authenticat,authentication,38,https://root.cern,https://github.com/root-project/root/pull/14779#issuecomment-1967300448,1,['authenticat'],['authentication']
Security,"> It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that. Unfortunately I don't have a public instance where you get ssh into. I created a simple example that links against ROOT and a different LLVM version, that worked without issue. While doing that I noticed that by default everything is linked using the static libraries from LLVM. This is probably what we want?. In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666915077:120,access,access,120,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666915077,2,['access'],['access']
Security,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786085845:169,expose,expose,169,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786085845,2,['expose'],['expose']
Security,"> It says: `Jenkins CI build — Build failed ` but I cannot access the details concerning build error. You can click on the link in the comment by @phsft-bot (see quoted below). > Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157660/console). Otherwise, we could just start a new build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11588#issuecomment-1305655005:59,access,access,59,https://root.cern,https://github.com/root-project/root/pull/11588#issuecomment-1305655005,1,['access'],['access']
Security,"> It's off intentionally because of what I wrote previously.; > ; > https://github.com/root-project/root/blob/498ac1dca5c1c30bc9fa3bc2ec722c33ebbd93a8/core/sanitizer/SanitizerSetup.cxx#L19-L23. Ah yes, I only checked `__lsan_options`... Regarding the test failures, I'm currently going through them one-by-one to create issues on GitHub.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056659717:156,sanitiz,sanitizer,156,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056659717,2,"['Sanitiz', 'sanitiz']","['SanitizerSetup', 'sanitizer']"
Security,"> It's on my local computer, but I can give you access to a VM (tomorrow). Yes, let's do that tomorrow! :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9809#issuecomment-1039315928:48,access,access,48,https://root.cern,https://github.com/root-project/root/issues/9809#issuecomment-1039315928,1,['access'],['access']
Security,"> Just had a quick look, and I think that we have too many `#if PY_VERSION_HEX ...` to make ROOT work with more than one Python version. We will need to reduce those or use a different strategy to support multiple Python versions. I think using a single ROOT build from multiple python versions [is already possible to hack in](https://github.com/willsALMANJ/pyroot_link_to_binary). It's harder to support accessing multiple Python versions from C++ (i.e. `TPython`). Could `gSystem->Load(""..."")` be used to replace `libPyROOT.so` with a different version like `libPyROOT37.so`? Or are there differences in the `libPyROOT` ABI for different Python versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462720972:406,access,accessing,406,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462720972,1,['access'],['accessing']
Security,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?. This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443706354:165,access,access,165,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443706354,2,['access'],['access']
Security,"> Maybe it could use a better compression, like .xz or .bz2?. That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787089794:85,access,accessible,85,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787089794,1,['access'],['accessible']
Security,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425180877:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425180877,2,['access'],['access']
Security,"> Now I remembered our chat, and we get the errors because pyspark is always injected in sys.modules in SWAN. So then this PR is not necessary?. Yes indeed, after further digging we discovered that opening a notebook in a SWAN session (with no modifications on the environment from our side) already shows `""pyspark"" in sys.modules == True`. No extra dependency is injected by ROOT, so this PR can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1055433984:77,inject,injected,77,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1055433984,2,['inject'],['injected']
Security,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:1187,access,access,1187,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,4,['access'],['access']
Security,"> Once the tests are green, I think these changes should be merged asap. Yes, I opened it to expose the fix and the result of the debugging session. While I polish it to avoid interfering with existing tests, this can be already tested on SWAN by injecting the custom DistRDF Python package taken from this branch on the PYTHONPATH of the workers, so we will try to get some measurements soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2247088485:93,expose,expose,93,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2247088485,2,"['expose', 'inject']","['expose', 'injecting']"
Security,"> One could give the exact same argument against TResultPtr. I don't get it: all ROOT users are familiar with the concept of a pointer, while not every PhD student is familiar with the concept of a Handle. If it's a pointer, I know that I can access the contents with `*p` or `->`, and I know what happens when I copy it, assign one thing to the other, etc....; If it's a Handle I know none of these things. We might as well stick with `TResultProxy`. [The idea](https://sft.its.cern.ch/jira/browse/ROOT-9350) was to convey _how to use it_, not _how it works_. As stated in the jira issue the problem we are trying to solve is that users do not know what to do with a ""proxy"" -- but they do know what to do with a pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381104324:243,access,access,243,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381104324,1,['access'],['access']
Security,> Only for certain types and it's not exposed by TTreeReader. humm .. isn't it also the case for RNtuple (I guess maybe less so but still). Anyway there is an attempt of it see `tree/tree/test/BulkApi*`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1435038376:38,expose,exposed,38,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1435038376,1,['expose'],['exposed']
Security,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. ; Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14429#issuecomment-1914178309:86,access,access,86,https://root.cern,https://github.com/root-project/root/issues/14429#issuecomment-1914178309,3,['access'],['access']
Security,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?. The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973063708:112,access,access,112,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973063708,2,['access'],['access']
Security,"> TClassEdit reads behind the end of a static string to find the type of an STL container. Do you mean that it **does** read behind the end of that the address sanitizer ""fears"" the code ""might""? If it is the earlier then I am missing how the patch (which it self seem fine) would change anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821324476:160,sanitiz,sanitizer,160,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821324476,1,['sanitiz'],['sanitizer']
Security,"> Tell me though: An RDF (= RNode I think?) doesn't take callbacks. I need a `RResultPtr`, correct? Do I have to attach a dummy result or did I miss something?. OK, I had a look, and it would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using `RLoopManager::RegisterCallback` (cannot link to docs because undocumented functions don't get an anchor in doxygen, any more 🤷‍♂️ ).; I don't see a way to get to the [LoopManager](https://root.cern.ch/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html), though. ... and it would be cool because I wouldn't need to throw away the payload of the resultptr, because I'm not using it anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880524867:227,access,access,227,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880524867,2,['access'],['access']
Security,"> Thank you for fixing this memory access problem. However, for TRandom3, with a state of 624 words, it does not make any sense to return a single seed since there is no guarantee that the other 623 values will be the same. Maybe is better to return a zero value. Hi Lorenzo. No, I believe we should leave the current contract intact, which I am fixing. I am relying in my code on the fact that `GetSeed()` returns some representation of the generator state, even though it is not the same number as SetSeed(seed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135#issuecomment-1829976842:35,access,access,35,https://root.cern,https://github.com/root-project/root/pull/14135#issuecomment-1829976842,1,['access'],['access']
Security,"> Thanks - I bet there are many other missing and outdated particle properties. Do you have a suggestion how to fix ""everything""?. Hi @Axel-Naumann , One can parse the file https://pdg.lbl.gov/2023/mcdata/mass_width_2023.txt to update masses of some particles in a more automated way, but it does not cover other particle properties nor all particle masses (e.g. Xi_cc++ is missing). The page https://pdg.lbl.gov/2023/html/computer_read.html also mentions available APIs and SQLite files for accessing the full database. This could be the best way to systematically compare the two databases and update everything. This kind of access is provided for testing only though so might require manual check of the found differences.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12968#issuecomment-1592966409:492,access,accessing,492,https://root.cern,https://github.com/root-project/root/pull/12968#issuecomment-1592966409,2,['access'],"['access', 'accessing']"
Security,"> Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that. I think that's `gSystem->Exit(0)` that was used before. You can pass a second parameter (called `mode` and effectively undocumented AFAICT) that makes it call `_exit()` instead of `exit()`. However, I'm not sure if we need to close `TFile`s because the workers don't open them, the parent should handle them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764677587:100,inject,injected,100,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764677587,2,['inject'],['injected']
Security,"> That looks correct diagnosis. Can we extend the lifetime of `clang::ExternalASTSource::Deserializing::~Deserializing` eg register a deserialization upon say `findScope` and then delay the odr hash checks after things were fully deserialized?. Very creative idea :sweat_smile: what we can do is create our own `Deserializing` RAII in `findScope` because `ASTReader::FinishedDeserializing` will only do ODR violation checking on the last matching call. However, this also skips a number of other actions. As a result, I end up with an assertion for a cast of `FunctionDecl` - probably because some internal state is not correctly updated. In general, this approach sounds like treating the symptoms instead of the underlying cause, no? If I look at the backtrace for https://github.com/root-project/root/issues/10291, `findScope` is not involved there... (but a `friend` decl is :thinking:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403525168:194,hash,hash,194,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403525168,1,['hash'],['hash']
Security,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787092755:25,access,accessible,25,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787092755,1,['access'],['accessible']
Security,"> That's another thing that deviates from the documentation: LSan is supposed to be on-by-default with ASan on Linux x86, but it's not for us... It's off intentionally because of what I wrote previously.; https://github.com/root-project/root/blob/498ac1dca5c1c30bc9fa3bc2ec722c33ebbd93a8/core/sanitizer/SanitizerSetup.cxx#L19-L23",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056653104:293,sanitiz,sanitizer,293,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056653104,2,"['Sanitiz', 'sanitiz']","['SanitizerSetup', 'sanitizer']"
Security,> The design of moving from CINT to cling was to expose to cling what was hidden for CINT. Means I remove all ifdefs and let `cling` parse sql headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5255#issuecomment-606539183:49,expose,expose,49,https://root.cern,https://github.com/root-project/root/pull/5255#issuecomment-606539183,1,['expose'],['expose']
Security,"> The file has arrived on lcgpackages, with the following name and unchanged hash:; > ; > ```; > $ sha256sum xrootd-5.4.3.tar.gz; > 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c xrootd-5.4.3.tar.gz; > ```. Thanks for the update @Axel-Naumann &mdash; missed this while traveling so just seeing it now. @bellenot Are the test failures expected? Or is this something to be concerned about.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1154669571:77,hash,hash,77,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1154669571,1,['hash'],['hash']
Security,"> The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links, both uplinks and downlinks, for every object. I couldn't find a logical case where a crash would occur if the safeDeleteList logic were to be removed.; > ; > All RooFit tests pass after this patch. No problem for my heavy workspace manipulation worflows either. By now, I think that the breaking of the links came after this destructor magic. You might be right that this is not needed, any more. I suggest to put it in master and see if the address sanitizer build blows up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685#issuecomment-1021007687:581,sanitiz,sanitizer,581,https://root.cern,https://github.com/root-project/root/pull/9685#issuecomment-1021007687,1,['sanitiz'],['sanitizer']
Security,"> The problem I see is that we are not always in control of the order modules are loaded. I may take care that I first configure the pythonizations I need then load the classes I want, but if somebody loads those classes before importing my module, then the code relying on the pythonizations is broken in unpredictable ways. I see, thank you for pointing this out. Then I'll try to do something like this: before the pythonizor is registered, I can check what cppyy has cached in all the namespaces concerned by the pythonizor (cppyy stores class proxies in their namespaces the first time they are accessed). If I find some class proxy that matches the condition of the pythonizor, I run the pythonizor on that proxy. That should detect the classes that were already used before the pythonizor is registered and are concerned by the pythonizor. I'd also like to know your opinion on this discussion: https://github.com/root-project/root/pull/9128#discussion_r751289042 , thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-972801025:600,access,accessed,600,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-972801025,1,['access'],['accessed']
Security,"> The problem is that LCG cannot use builtins. That's only half-true, of course we do have builtins that LGC builds with just fine (libAfterImage, llvm, etc). But then we must not expose it as ""override-able"". So either it's not configurable and we always build our ""hacked"" zmq (exporting neither headers nor symbols, so the world doesn't care), or we wait until it's released.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981750448:180,expose,expose,180,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981750448,1,['expose'],['expose']
Security,"> The reproducer should not crash with these changes. Could you verify that, please?. > OK. Revert the comparisons and leave the assignments? Does that sound reasonable?. Even assignments should be left with double literals (`float x = 1.2;`); as you can see from the CompilerExplorer link I pasted above, clang does generate the exact same assembly whether you assign a float or double literal. Instead, only computations with literals should become floats, as these will otherwise become double precision computations. So based on my current understanding my preference would be:. - leave double literals in comparisons and assignments;; - change to float literals where they appearing in computations (`+ - * /`), if you can validate that this fixes your reproducer. Would that sound reasonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-715218993:728,validat,validate,728,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-715218993,1,['validat'],['validate']
Security,"> The string substitution is not done properly, the % operator needs to be inside the square brackets. @etejedor Can you try this? I do not have system where ipython notebooks runs.; Once server is up, you should have access to JSROOT files via:; http://server.url:port/static/scripts/JSRootCore.js",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4497#issuecomment-543159984:218,access,access,218,https://root.cern,https://github.com/root-project/root/pull/4497#issuecomment-543159984,1,['access'],['access']
Security,"> This means that we should probably no longer rely on TFile::ReadProcessID using its own lock. But we still need to protect the access to the global list of PIDs when using multiple TFiles from multiple threads, right? You mean we need to have a more general lock to protect the access to this list also from other places (not only TFile)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-609663331:129,access,access,129,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-609663331,2,['access'],['access']
Security,"> Three questions from my side (may be naive because I didn't spend a lot of time to fully digest the CI setup):; > ; > 1. Having the secrets stored as a file on the runners means we commit to self-hosted machines? GitHub hosted runners won't have the necessary setup.; > 2. The workflow run ""would still have to be approved by a maintainer."" - how does this work? https://securitylab.github.com/research/github-actions-preventing-pwn-requests/ discusses a label; as far as I understand approval on GitHub itself is limited to first-time contributions. So everybody ""external"" who got one benign PR accepted, can afterwards run potentially malicious code without approval, no?; > 3. ""A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated."" What is the currently intended use case for this? I would have assumed that we don't want to use PR builds to feed back into incremental builds anyhow, we always want to start from a ""known good"" state, ie `master`, no?. 1. Yes I'm not entirely happy with this myself. 2. Current settings require approval every time; ![2023-02-02_09-22](https://user-images.githubusercontent.com/82065181/216270131-1a4086bf-190e-4296-a14a-fa2afa5cfb11.jpg). 3. PR builds first builds the target branch, i.e. master (if changed since last upload), then uploads the build of the target branch (if changed and if release branch), **then** rebases and rebuilds and uploads artifacts to test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1413340461:373,secur,securitylab,373,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1413340461,1,['secur'],['securitylab']
Security,> Usability. The drawing options are the more common entity to be accessed. I will add a DrawAndGetDrawable in a future revision. Yes but it is counter intuitive ... Add a drawable and get back an option ... will have to see in tutorials what it looks like ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249466:66,access,accessed,66,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249466,2,['access'],['accessed']
Security,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:; * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail).; * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14531#issuecomment-1926585729:8,hash,hash,8,https://root.cern,https://github.com/root-project/root/pull/14531#issuecomment-1926585729,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"> We import an empty Python module every time, with a function that only when called would lazily import another Python module that contains the [pyspark, dask] module. But then the imports are already lazy, aren't they (i.e. the changes in this PR should not be necessary)? E.g. the import of pyspark is only triggered when I call [this function](https://github.com/root-project/root/blob/f61d5ef82a8851f488318be8eefe06a7d5311744/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/__init__.py#L13), and that only happens when I am constructing a Spark RDataFrame, not when I'm constructing a Dask RDataFrame. So I still don't see how we get those errors. EDIT: Now I remembered our chat, and we get the errors because pyspark is always injected in sys.modules in SWAN. So then this PR is not necessary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1055413266:746,inject,injected,746,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1055413266,1,['inject'],['injected']
Security,"> We measured that sweeping a dataset with 59 files on eos within CERN network checking entries numbers in trees took ~.3s per file. Isn't this perf hit too large?. I am not 'too' worried about the user side (albeit, some TChain may have 1000s of files) but on the server side (i.e. trying to avoid a denial-of-services attack on the server). I still strongly recommend that we do not open all the files at once we 'stop'/'throttle' once you reach the number of task/threads you are going to have (then take a pause, start the actual tasks/jobs and then restart 'slowly' to get the rest of the information).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442089455:301,denial-of-service,denial-of-services,301,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442089455,4,"['attack', 'denial-of-service']","['attack', 'denial-of-services']"
Security,"> We saw builtin-xrootd as an internal library, not exposed to the users, and as ROOT doesn't need the Python bindings we have disabled them. I'd still prefer that if you need something from xrootd that ROOT doesn't use / need that you built xrootd yourself, and make that build available to ROOT. Thanks. XRootD is very easy to build so that's reasonable. Just seemed strange that it couldn't be a CMake flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967#issuecomment-1055515524:52,expose,exposed,52,https://root.cern,https://github.com/root-project/root/issues/9967#issuecomment-1055515524,1,['expose'],['exposed']
Security,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793966296:289,expose,exposed,289,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793966296,1,['expose'],['exposed']
Security,"> We would also need to support this on Windows for consistency. Can you make sure that patch works on Windows too?. The current patch most likely does not work on Windows (it doesn't touch `core/winnt/*`).; I don't have access to any Windows development machines, so I can't test any possible patches. I could draft up a _suggestion_ on a patch. Maybe we should first get to the point, what needs to be done for this to get accepted for the unix world? So that the windows implementation can take care of all that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-759590333:221,access,access,221,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-759590333,1,['access'],['access']
Security,"> Well, in some cases, the GUI layout is wrong. Do you want me to take screenshots?. No but a short descriptions of the elements used and/or the kind of situation would be helpful. > Form my own purpose, I want to test on a machine with dual screens once I can access it (and I'll remove it once tested). Can you add a comment along this line next to the code? (This would prevent somebody else from (proposing to) removing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6077#issuecomment-663608298:261,access,access,261,https://root.cern,https://github.com/root-project/root/pull/6077#issuecomment-663608298,1,['access'],['access']
Security,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?. Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...); > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968158801:654,secur,secure,654,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968158801,1,['secur'],['secure']
Security,"> While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business... This is how I initially implemented it. Indeed it makes the index itself much more straightforward. However, when I started prototyping the actual join/unaligned friends it really didn't work without making that interface overly complicated so in the end I opted for a non-templated version. Perhaps there's some template trickery to still make it play nice with the foreseen interface (or allow for a slightly different but still simple enough interface), I will think about it for a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2285578132:427,hash,hashing,427,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2285578132,2,['hash'],['hashing']
Security,"> Why did the hash of the file in lcgpackage change even-though the xrootd version did not change? (i.e. Didn't we migrate away from downloading from github to avoid exactly this kind of problem?). That's a good question! I asked some people here, we'll see...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11106#issuecomment-1204870781:14,hash,hash,14,https://root.cern,https://github.com/root-project/root/pull/11106#issuecomment-1204870781,1,['hash'],['hash']
Security,"> Why this is not a proper place?. Why all REve examples and demos will run by default without key authentication.; As result - anybody can try attack and hijack such server. You should put such code in CMS demo.; And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14779#issuecomment-1968386644:99,authenticat,authentication,99,https://root.cern,https://github.com/root-project/root/pull/14779#issuecomment-1968386644,3,"['attack', 'authenticat']","['attack', 'authentication']"
Security,"> With TTree::Draw I am able to write ""friendtree1.x"" or ""friendtree2.x"", but what if I want to access the whole friendchain ""x"" column, i.e. what is called in the above table ""friends_column_x"" ? What should I write in code ?. TTree::Draw can *only* access the ""whole friendchain x"", it can not (at least not easily) access the invidual friendtreeX (at least it should not). `TTree::Draw is able to plot (""x:friendtree1.x"") ... remembers that portions of the same column came from different ""datasets""` that is likely an artifact of the unbalanced construction. In this case TTree::Draw will use all the entries from the main TTree (only 3 entries) and only the corresponding entries from the friends (also only 3, by default the 1st 3 or 3 other entries if there is a TTreeIndex).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-815993065:96,access,access,96,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-815993065,3,['access'],['access']
Security,"> Would it be useful to add one, for example, if possible, a mock of the code of CMS that exposed the bug?. Not really. The related problem (missing list of function in some rare runs) is not explicitly understood. This particular problem was discovered by ""visual"" inspection and thus does not have any good reproducer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15113#issuecomment-2052634277:90,expose,exposed,90,https://root.cern,https://github.com/root-project/root/pull/15113#issuecomment-2052634277,1,['expose'],['exposed']
Security,"> Yes :) Can you add the test you case you had?. That needed valgrind to detect anything. @pcanal can we use `TStreamerInfo::ls()` or something to validate the layout? Like this (output corresponds to `master`)?; ```; root [0] TClass::GetClass(""std::map<int, std::set<float>>"")->GetStreamerInfo()->ls(). StreamerInfo for class: map<int,set<float> >, version=6, checksum=0xbe69c367; map<int,set<float> > This offset= 0 type=300 ,stl=4, ctype=61, <pair<int,set<float> >> Used to call the proper TStreamerInfo case; i= 0, This type=300, offset= 0, len=1, method=0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9750#issuecomment-1025720410:147,validat,validate,147,https://root.cern,https://github.com/root-project/root/pull/9750#issuecomment-1025720410,2,"['checksum', 'validat']","['checksum', 'validate']"
Security,> Yes let's expose to users and we see how this fares. If we run into problems we make it less visible (e.g. only for notebooks). I think that is not the best approach. My general worry is that we are turning by default a feature which messes up with the lookup tables with no tests to improve the less used feature of unloading. I would propose to make this feature configurable and enable it only for ROOT through TCling to gather some usage experience.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532584411:12,expose,expose,12,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532584411,1,['expose'],['expose']
Security,"> Yes. That would be an improvement IMO because then an attacker would need to modify the workflow, which is more visible. Can't think of an elegant solution right now but I guess it could be stored as a variable in python and then deleted/restored at the right moments. (or never restored at all, it runs in a container)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1412514253:56,attack,attacker,56,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1412514253,1,['attack'],['attacker']
Security,"> You mean it makes silently illegal memory overwrite?. Yes, likely so. At least if doing exactly what the tutorial does. > But then one should check `TString::Append()` - I guess. I don't know, the error can be anywhere in the stack trace such as providing insufficient buffer etc. `TString::Append` is just the place that executes the illegal memory read. Also, please keep in mind that more illegal memory accesses may happen afterwards - AddressSanitizer only reports the first problem and then terminates the process. I think it is possible to keep going afterwards and see what else is going belly-up, but IIRC that is not guaranteed to work well due to internal state not being consistent...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629#issuecomment-1308382786:409,access,accesses,409,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1308382786,1,['access'],['accesses']
Security,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1933568756:584,secur,security,584,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1933568756,1,['secur'],['security']
Security,"> _Shrug_. If people want to provide their own llvm I count on them knowing what they do; they get what they pay for. They _can_ still build the external llvm correctly for libCling to not expose symbols. I.e. ""do we have a builtin llvm"" isn't the relevant question to ask. For me, for that case, this PR is good enough. Well, I get the point, but I still think it would be good if this was documented somewhere, since it is not obvious for someone providing his own LLVM. I fooled myself with that setup and took few ours to find out ... :( The relevant question would be ""is our LLVM prone to exposed symbols"", but I have no idea how to check that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-571747649:189,expose,expose,189,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-571747649,2,['expose'],"['expose', 'exposed']"
Security,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?. Per the commit log:; ```; When -Ddev=ON specified, R__LESS_INCLUDES is defined; It will be used to reduce includes which are exposed to the public.; While such changes can have side-effects on user code,; option is off by default.; ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15853#issuecomment-2174030643:343,expose,exposed,343,https://root.cern,https://github.com/root-project/root/pull/15853#issuecomment-2174030643,1,['expose'],['exposed']
Security,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1255476176:922,access,access,922,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176,2,['access'],['access']
Security,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```; root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'; Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }; ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180639835:963,inject,injected,963,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180639835,2,['inject'],['injected']
Security,"> hi @bellenot : would it be hard to expose the standard in a potential new ROOT_CXX_STANDARD variable in your opinion?. No, but that requires quite some changes, also for the projects using ROOT. I'll investigate (I have plenty of changes for CMake on Windows anyway)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1833375824:37,expose,expose,37,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1833375824,1,['expose'],['expose']
Security,"> https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there... Sent an access request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1944137111:188,access,access,188,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1944137111,1,['access'],['access']
Security,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9478#issuecomment-998909863:61,hash,hash,61,https://root.cern,https://github.com/root-project/root/pull/9478#issuecomment-998909863,1,['hash'],['hash']
Security,> is our LLVM prone to exposed symbols. That alone isn't even an issue!. You need to; - link libCling against an external llvm with exposed symbols; - *and* link / dlopen into your process *another* llvm with exposed symbols. That's so much mean intentions that I would - still - argue that we don't need to prevent people from doing it :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-571749994:23,expose,exposed,23,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-571749994,3,['expose'],['exposed']
Security,"> is that it doesn't really have a good use case. . I was thinking the case where indeed there is not enough 'memory' for IoURing (eg. the error message mentioned here) and where we want to 'stop' wasting time for the rest of the process by not even trying to use IoURing. > Client code can implement it themselves without access to RIoUring internals, because it's just a static bool checking whether the constructor threw. In this context, `RRawFile` is the only (likely) client code as RIoURing is in the internal namespace.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824274467:323,access,access,323,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824274467,1,['access'],['access']
Security,"> llvm IR naming of private constants (CodeGenModule::createUnnamedGlobalFrom(), line 1136) will name private symbols without caring about possible name clashes. We will create these name clashes by marking such private symbols as weak ones, re-using previously emitted symbols (e.g. in JITDylib::defineImpl() where they get added to MUDefsOverridden and thus re-used instead of re-emitted).; > ; > Let me see what happens when we keep private symbols private. In principle, the interpreter should have no means fo accessing them from another transaction - private symbols seem to be function-local ones. Not only, private linkage is also used to emit other compile-time constants, e.g. string literals, but the change looks more than reasonable to me: private symbols should not end up in the symbol table.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12183#issuecomment-1410596855:515,access,accessing,515,https://root.cern,https://github.com/root-project/root/pull/12183#issuecomment-1410596855,1,['access'],['accessing']
Security,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1849648331:72,hash,hashes,72,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1849648331,1,['hash'],['hashes']
Security,"> rebuild ROOT without explicit linking. And it looks like this path might be broken in itself (it seems that injecting '-Wl,--no-undefined' is done unconditionally ... and this requires the use of explicit linking)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394487572:110,inject,injecting,110,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394487572,1,['inject'],['injecting']
Security,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`?. To expand a bit on what @Axel-Naumann said:; If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer.; Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:; - Is there a way to have a debug build? I would like to see the test succeed.; - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633#issuecomment-479916770:512,access,access,512,https://root.cern,https://github.com/root-project/root/pull/3633#issuecomment-479916770,1,['access'],['access']
Security,> so i think we do have a potential race. That's seems very plausible indeed. (There is even a comment pointing out that this code is assuming a lock is already taken). It should be sufficient to add a spin lock around the 2 accesses.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10353#issuecomment-1093244773:225,access,accesses,225,https://root.cern,https://github.com/root-project/root/issues/10353#issuecomment-1093244773,1,['access'],['accesses']
Security,> so if you could try to compare before/after by running something simple using data at CERN. CMS currently does not mount CERN's eos through fuse at FNAL and does not export (without grid certificate) any data.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309267711:189,certificate,certificate,189,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309267711,2,['certificate'],['certificate']
Security,"> the algorithm cannot create false positives according to their paper. Except for implementation bugs on their part ... and developer ingenuity to create code that looks and smell wrong but is intentiona (ly evil :) ) :). > IIUC the patch is not a fix, it's to expose the problem even without using asan. hack .. I overlooked the ""title"" ('To reproduce')",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821344661:262,expose,expose,262,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821344661,1,['expose'],['expose']
Security,> to add a non-const accessor to the TGraph interface. I don't understand what you are considering here?. TGraph was designed to own the data; changing this is likely not worth the cost as virtually all use cases will not make use of the shared ownership.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056920194:21,access,accessor,21,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056920194,1,['access'],['accessor']
Security,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory.; http server uses `http://server/currentdir/` alias for files from current directory.; One can use it to load fonts.; The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2175645489:332,secur,security,332,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2175645489,1,['secur'],['security']
Security,"> we don't want to link libLLVM then. Indeed: if we link the static libraries we don[t want to *also* link the shared library. And we prefer static libs, because that allows us to hide symbols more effectively, and e.g. some NVidia driver famously exposed all LLVM symbols - of its own LLVM libraries! - to the process, causing conflicts, so we do want to hide those LLVM symbols. Apologies for not being explicit enough on this, caused by me transitioning from vacation to work :-). Could you see whether not applying the commit you mention fixes this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1662255320:248,expose,exposed,248,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1662255320,1,['expose'],['exposed']
Security,"> why are you silencing these warnings?. This is to implement the changes in the way we discussed. We keep backwards compatibility for this PR, i.e. we don't throw an exception and we delegate the errors regarding non-existing files to the first time a branch is accessed, like it is currently done in RDF. The actual improvement, i.e. early error out, is left for another PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1659140221:263,access,accessed,263,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1659140221,1,['access'],['accessed']
Security,"> why do we need a GetValues? (and if we need it, why does it need to return a const ref?). It's there to keep sort of the same behaviour of other `RMergeableValue` types. The intention is that the user can access a const ref to the final result of the distributed analysis after merging. They can decide what to do with it (ultimately this is to avoid an extra copy which would always happen if `GetValue` returned by value). Maybe there can be another way to do this, in case I would need to change it also for other RMergeableValue types I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061942193:207,access,access,207,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061942193,1,['access'],['access']
Security,"> would a patch that assures all constants in TColor::RGB2HLS are float an acceptable solution? I can do that. Why not, if that provides a more secure version of the method. But that's not the only one to be considered I guess: All the XXX2YYY methods in TColor should be checked, shouldn't they ? If you provide a PR a test going with it would be also appreciated. (in core/base/test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713606991:144,secur,secure,144,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713606991,1,['secur'],['secure']
Security,"> 🤔 Just to understand, is it a known real leak or a false positive?. It is a ""real"" leak that in my understanding we are not urgently planning to fix. Basically it comes from Clang's internal data structures that are ""lost"" during shutdown. With `clang` used as a compiler, the libraries make quite some effort to clean up all data structures and free memory allocations to make sanitizers clean. I think this mode was never implemented in Cling, also because it's not really relevant: after process termination, the OS will clean up all virtual memory anyway. > I initially thought it was something we in any case could not fix on our side and I also suppressed the sanitiser leak as described [here](https://gitlab.ep1.rub.de/fp311online/cern-root/-/tree/v6-22-08-ep1/core/sanitizer?ref_type=heads) (not sure this is an official documentation, but it's something google brought to my attention). Yes, the upstream equivalent to that GitLab instance would be https://github.com/root-project/root/tree/master/core/sanitizer. > Doing so, all the unit tests pass, but I then monitored memory usage over a long run of our application and a linear growth was evident (plot left below). Nothing extreme, sure, but I thought it was worth reporting, especially since in `v6.26.10` the problem does not occur (plot right below). 🤷‍♂️. Ok, good that all unit tests pass, so you're not using uninitialized memory :+1: for the memory leak, do you have a semi-standalone program that shows the growing memory usage on 6.28, but not on 6.26? Does it involve `TChain`s, as reported in https://github.com/root-project/root/issues/13130?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1814808988:380,sanitiz,sanitizers,380,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1814808988,3,['sanitiz'],"['sanitizer', 'sanitizers']"
Security,">, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL24make_ROperator_TransposeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Transpose(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:4084,hash,hash,4084,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,">> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>> CApath: none; >>> * Server certificate:; >>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NTi7%2BFO82QY6dKBp1en9fAODpFl%2FzZ0cHCZ3DsJzOIM%3D&reserved=0>; >>> ; >>> curl performs SSL certificate verification by default, using a ""bundle""; >>> of Certificate Authority (CA) public keys (CA certs). If the default; >>> bundle file isn't adequate, you can specify an alternate file; >>> using the --cacert option.; >>> If this HTTPS server uses a certificate signed by a CA represented in; >>> the bundle, the certificate verification probably failed due to a; >>> problem with the certificate (it might be expired, or the name might; >>> not match ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:4041,Certificate,Certificate,4041,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['Certificate'],['Certificate']
Security,">> as TTree I/O does not provide bulks,; >; > What do you mean? There is a (non-zero copy but still low) bulk i/o interface in TTree already. Only for certain types and it's not exposed by TTreeReader.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1434436351:178,expose,exposed,178,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1434436351,1,['expose'],['exposed']
Security,">>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>>> or; >>>>>>> *curl*-v ; >>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=MrLsQ1shn0qv2itSXIVUc3da2Y5VUnltiBnYwHs6YjE%3D&reserved=0> ; >>>>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem ; >>>>>>> --capath /etc/grid-security/certificates; >>>>>>>; >>>>>>>; >>>>>>> regards,; >>>>>>> Asoka; >>>>>>>; >>>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>>>; >>>>>>>>; >>>>>>>> Right - without authentication I cannot see what's happening. ; >>>>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>>>> whether it's a redirect. Do you?; >>>>>>>>; >>>>>>>> If not let's get #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJW",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:10244,authenticat,authentication,10244,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,1,['authenticat'],['authentication']
Security,">>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909257351%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=u7Y%2FanQwDppeiiawxeAhNcTy09JgTzHSTAvPUZDe3c4%3D&reserved=0>; >>>>>>>>; >>>>>>>> curl performs SSL certificate verification by default, using a ; >>>>>>>> ""bundle""; >>>>>>>>  of Certificate Authority (CA) public keys (CA certs). If the ; >>>>>>>> default; >>>>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>>>  using the --cacert option.; >>>>>>>> If this HTTPS server uses a certificate signed by a CA ; >>>>>>>> represented in; >>>>>>>>  the bundle, the certificate verification probably failed due to a; >>>>>>>>  problem with the certificate (it might be expired, or the name ; >>>>>>>> might; >>>>>>>>  not match the domain name in the URL).; >>>>>>>> If you'd like to turn off curl's verification of the ; >>>>>>>> certificate, use; >>>>>>>>  the -k (or --insecure) option.; >>>>>>>> ***@***.*** t5]$; >>>>>>>; >>>>>>>; >>>>>>> I am unfamiliar with how to use curl with X509 and everything I ; >>>>>>> tried so far has not worked. eg; >>>>>>> *curl*-v ; >>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:8056,certificate,certificate,8056,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,3,['certificate'],['certificate']
Security,">Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version=1, checksum=0xb03d18c2; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365,; [1965517:tpc-tracker]: vector<o2::tpc::PadFlags> mData offset= 32 type=300 ,st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312:1808,checksum,checksum,1808,https://root.cern,https://github.com/root-project/root/issues/16312,1,['checksum'],['checksum']
Security,"?; >>>> ; >> ; >>> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643137511%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=GjymmnKYXiP8M44wA%2FsXFGn3CjwfNf1W8%2BpOLMvcaJg%3D&reserved=0>; >>> * About to connect() to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> port 2880 (#0); >>> * Trying 2607:f8f0:660:3::36...; >>> * Connected to webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>> CApath: none; >>> * Server certificate:; >>> * 	subject: CN=dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.prote",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:3169,certificate,certificate,3169,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['certificate'],['certificate']
Security,"@ArifAhmed1995 We have a problem with Jenkins (some changes to the firewall made it inacessible from GitHub, so builds won't start). Once that's resolved I will trigger another build and we can continue. Sorry for the annoyance. However, I think we are getting much closer to being able to merge your contribution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-454004144:67,firewall,firewall,67,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-454004144,1,['firewall'],['firewall']
Security,"@Axel-Naumann . > > Hm, but you cannot have multiple std::unique_ptr reference the same object on the heap; > ; > I don't see that being the case, neither for master nor for my proposed change. What am I overlooking?. The current `define`s make `fThreadExecutor` and `fProcessExecutor` aliases of `fSequentialExecutor`, ie they access the very same (sequential) executor. You cannot do this with three `std::unique_ptr`s, but maybe that's not needed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760119746:328,access,access,328,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760119746,1,['access'],['access']
Security,"@Axel-Naumann : I have rebuilt ROOT from scratch and attempted my above test case with; ```; LD_PRELOAD=/usr/lib64/libgandiva.so ./test; ```; which still gives me the same error:; ```; Error in <UnknownClass::InitInterpreter()>: LLVM SYMBOLS ARE EXPOSED TO CLING! This will cause problems; please hide them or dlopen() them after the call to TROOT::InitInterpreter()!; : CommandLine Error: Option 'version' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; ```; Perhaps preloading individual LLVM libraries works, but with gandiva it certainly doesn't.; So unfortunately this patch is insufficient to solve my problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-570193874:246,EXPOSE,EXPOSED,246,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-570193874,1,['EXPOSE'],['EXPOSED']
Security,"@Axel-Naumann : I have to admit I have been stupid and my last posts have been wrong.; I did built root without builtin_llvm, so this could not have worked by designed.; I have rebuilt now with builtin_llvm and with your patch, and now I am only getting the warning message; ```; Error in <UnknownClass::InitInterpreter()>: LLVM SYMBOLS ARE EXPOSED TO CLING! This will cause problems; please hide them or dlopen() them after the call to TROOT::InitInterpreter()!; ```; But this is clear, since ROOT just checks for the presence of the LLVM symbols.; I am now rebuilding the ALICE software with this ROOT and checking whether the segfaults are gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-570267436:341,EXPOSE,EXPOSED,341,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-570267436,1,['EXPOSE'],['EXPOSED']
Security,"@Axel-Naumann : I think this patch is correct in any case, since the symbols should be hidden.; Unfortunately, it is not enough to solve our problem. My test case from #4668 still yields:; ```; Error in <UnknownClass::InitInterpreter()>: LLVM SYMBOLS ARE EXPOSED TO CLING! This will cause problems; please hide them or dlopen() them after the call to TROOT::InitInterpreter()!; : CommandLine Error: Option 'version' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; ```; - The first line `LLVM SYMBOLS ARE EXPOSED....` is because the check in core/base/src/TROOT.cxx is not disabled, so this this is irrelevant. In fact, if your patch would work, this check should be removed.; - The second error `... inconsistency in registered....` however is the same problem we saw before, with the 2 LLVM instances clashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-565367712:255,EXPOSE,EXPOSED,255,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-565367712,2,['EXPOSE'],['EXPOSED']
Security,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:845,secur,security,845,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,2,['secur'],['security']
Security,"@Axel-Naumann @pcanal note that if TTree/TChain complained in case of non-existing entry access in friend trees it would have made the situation much better ( #9137 , #7713 ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12260#issuecomment-1424248937:89,access,access,89,https://root.cern,https://github.com/root-project/root/issues/12260#issuecomment-1424248937,1,['access'],['access']
Security,"@Axel-Naumann I reverted most of your suggestions, but the regex is still your updated one. I expect the CI to go as desired now. See what ROOT prints for `ROOT-fedora30/cxx14`:; ```; 13:22:25 System Linux-5.0.9-301.fc30.x86_64; 13:22:25 Processor 16 core Intel Core Processor (Broadwell, IBRS) (x86_64); 13:22:25 Build type Release; 13:22:25 Install path /home/sftnight/build/workspace/root-pullrequests-build/install; 13:22:25 Compiler GNU 9.3.1; 13:22:25 Compiler flags:; 13:22:25 C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 ; 13:22:25 C++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 ; 13:22:25 Linker flags:; 13:22:25 Executable -rdynamic; 13:22:25 Module ; 13:22:25 Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```. Interesting side note:; Does CMake follow the defaults that are used for making packages? fedora and centos8 get `-O2`, I get `-O3` on Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932#issuecomment-823987500:853,hash,hash-style,853,https://root.cern,https://github.com/root-project/root/pull/7932#issuecomment-823987500,1,['hash'],['hash-style']
Security,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9288#issuecomment-972831538:256,access,access,256,https://root.cern,https://github.com/root-project/root/pull/9288#issuecomment-972831538,1,['access'],['access']
Security,"@Axel-Naumann Thank you for looking at this! I thought of your approach also; using move semantics to transfer ownership means TGraph does not need to make a copy either. The idea on this branch is to demonstrate the potential for a significant performance speed-up in the constructor by not making a copy of the data. Additionally, sharing ownership with TGraph means a user can use the data for things apart from in a TGraph and/or update a TGraph after modifying the data. . In either approach, a user would still be able to use the existing TGraph constructors, however the ROOT file writing classes need an update to write `shared_ptr` or `vector` objects to a ROOT file. Thinking about this, another solution would be to use move semantics and to add a non-const accessor to the TGraph interface, which may work better when writing to a ROOT file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056881682:769,access,accessor,769,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056881682,1,['access'],['accessor']
Security,@Axel-Naumann is this because cling injects a `using namespace std`? https://godbolt.org/z/9KPxPcYEr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-856926520:36,inject,injects,36,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-856926520,1,['inject'],['injects']
Security,"@AxelKrypton I'm sorry, I didn't read your initial report closely enough: what you see is a leak report that we turn off due to how ROOT uses the LLVM and Clang libraries:; https://github.com/root-project/root/blob/479d383c1019a2c75b3ca736f3ff0d1ebd3b0d63/core/sanitizer/SanitizerSetup.cxx#L22; I don't remember the details, but it's possible that the method we're using to suppress the leak sanitizer doesn't work with GCC and that's why switching to Clang solved the issue during build. For your own application, you need to pull in that same code, which should happen automatically if you use `ROOT_EXECUTABLE`. Can you check how your application is created?. If it's not possible to use `ROOT_EXECUTABLE`, you can also manually link in `ROOT::ROOTStaticSanitizerConfig`. Alternatively you can try setting the environment variable `ASAN_OPTIONS=""detect_leaks=0""`. Hope this helps, let me know if you have further problems!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1814583869:261,sanitiz,sanitizer,261,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1814583869,3,"['Sanitiz', 'sanitiz']","['SanitizerSetup', 'sanitizer']"
Security,"@Falcort . Please check information from this link:. https://stackoverflow.com/questions/39660161/how-to-access-elements-from-xml-fragment-by-id. Seems to be, one can use IDs in the fragment without bit limitations. Regards,; Sergey",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4613#issuecomment-549331775:105,access,access-elements-from-xml-fragment-by-id,105,https://root.cern,https://github.com/root-project/root/pull/4613#issuecomment-549331775,1,['access'],['access-elements-from-xml-fragment-by-id']
Security,"@albert-github ; That's a nice idea, and could be something to think about. I think we will anyway to build the whole documentation every night because:; - the various modules refer to each other a lot,; - we want to run all the code available in the doc. We have test suites to validate de software but the documentation is surely an extra one.; - now it takes ""only"" a night so it is still doable to build it daily. If at some point the building becomes unmanageable the approach you suggest might be a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-888362590:279,validat,validate,279,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-888362590,1,['validat'],['validate']
Security,@albert-github thanks for trying out the ROOT documentation. You need root installed to make the ROOT documentation because ROOT documentation uses a filter to create on the fly the picture for all code examples we expose and also to generate the graph of libraries needed by a given class. So to make ROOT do:. - `clone https://github.com/root-project/root.git`; - `mkdir rootbuild`; - `cd rootbuild`; - `cmake ../root`; - `make -j8`; - `source bin/thisroot.sh` // this defines the $ROOTSYS environment variables and more...; - cd ../root/documentation/doxygen; - Edit Doxyfile to reduce the number of paths in the `INPUT` variable otherwise it will take a day. Keep `../../io/io` for instance ; - `make -j8` // this will creat `~/rootdoc`. Open `~rootdoc/html/index.html`; ; We have also [this page](https://root.cern/for_developers/doxygen/) on our web site which tells a bit the same. Thanks for pointing the wrong page. I will check.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887506839:215,expose,expose,215,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887506839,1,['expose'],['expose']
Security,"@amadio . 2 cases solved here:. 1. When chunking and fitting the right amount of elements per chunk I may end up with empty chunks at the end. This chunks will still consist of N elements per chunk, but they will not be initialized. Accessing them was a problem. Solved by reducing the number of chunks (not allowing empty chunks). 2. Although the evaluation loop finishes early when, in the last chunk, the iteration reaches the last data element, the partial results vector was of size step. That means we were reducing over elements that may have not been initialized. Solved by changing the size of the partial results vector.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/803#issuecomment-317767860:233,Access,Accessing,233,https://root.cern,https://github.com/root-project/root/pull/803#issuecomment-317767860,1,['Access'],['Accessing']
Security,"@amadio @bbockelm ; Unfortunately, I can't see the console since I do not have access permit.; I think ROOT made some recent changes. Now when I compile the code, it can not find ""tbb/task.h"" header file. Where the TBB library gets compiled without enabling -Dtbb=ON flag?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/785#issuecomment-317841882:79,access,access,79,https://root.cern,https://github.com/root-project/root/pull/785#issuecomment-317841882,1,['access'],['access']
Security,"@amadio Bonjour ok. RFIO ok (but it includes also Rfio, aka UidGid authentication, which is a different thing; I wonder if all authentication options should not be removed as a whole).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-453512245:67,authenticat,authentication,67,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-453512245,2,['authenticat'],['authentication']
Security,"@amadio I see that the Windows 10 build is failing. Unfortunately I am being denied access to the page due to lack of proper credentials. Can you please post the link to error log here, if it's not much trouble ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-453330275:84,access,access,84,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-453330275,1,['access'],['access']
Security,"@amadio Thanks!. I have delved a bit into the recent changes, and I think it's this one:; https://github.com/root-project/root/commit/f45f2c283752de0a3a2fdc278b00d1653e116833; `ROOT_VERSION` appears to use the double-dot notiation, while most other user-exposed places (web page release announcements, banner etc.) use the other notiation. ; For example, the banner / logo uses `ROOT_RELEASE`, which still has the dot-slash notation:; https://github.com/root-project/root/blob/18b789c7ca051f09d84471fc948b410b61670f6e/core/base/src/TROOT.cxx#L699C23-L699C35. So probably, the main question is: Which notation is correct / should be used, and in case it's the double-dot notation, should `root-config` stay backwards-compatible? . In case the actual change linked above was not intended, but was just about dropping the `sed` (which is a good thing to do! :+1: ), maybe defining a CMake variable using the dot-slash notation in https://github.com/root-project/root/blob/18b789c7ca051f09d84471fc948b410b61670f6e/cmake/modules/SetROOTVersion.cmake; and using it in `root-config` would be best.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1815217164:254,expose,exposed,254,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1815217164,1,['expose'],['exposed']
Security,"@amadio thanks for the comments. How this solves the CMS problem is illustrated by the example callback I included. That wraps the merge operation with an `std::promise()`, does a `task_arena::enqueue()` with that functor to the existing CMS framework TBB task arena, and then waits for the promise to complete. `task_arena::enqueue()` guarantees that the functor is executed by an existing member of the arena's thread pool. If the calling thread is not part of the arena, it cannot join it, so it cannot execute the functor itself. AFAICT, `task_arena::enqueue()` is the only interface that guarantees this; with other interfaces like `task_arena::execute()` or `task_group::run()`, the calling thread can temporarily join the arena, which would violate our framework's scheduling assumptions. wrt the interface change, my previous version added a second callback instead of modifying the existing one. From a functionality standpoint, the wrapper callback is a superset of the completion callback, but I do see the virtue of keeping the completion callback safe and having a separate callback for the riskier operation of wrapping the merge. I can certainly make that change if that would be more acceptable. I initially tried to do this with the `TTaskGroup`; unfortunately, with a `TTaskGroup` the calling thread can end up temporarily joining the task arena, which wasn't acceptable to us. It seems we have to use `task_arena::execute()`, which requires access to the framework task arena, which is how I ended using a callback for this. Let me know if separating the merge wrapper into a second callback would be acceptable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706#issuecomment-371486460:1460,access,access,1460,https://root.cern,https://github.com/root-project/root/pull/1706#issuecomment-371486460,1,['access'],['access']
Security,@bellenot : The new executables are signed. ; ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4); But they still present an issue. The certificate used to sign was not issued by a trusted root authority. ; ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147); Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213690136:184,certificate,certificate,184,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213690136,8,['certificate'],"['certificate', 'certificates']"
Security,"@bellenot The new test code contains an include path injection which on Windows ends up being:; ```; ... root.exe ... -e '.include C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/include' ....; ```; which comes from the CMake list:; ```; set(RootExternalIncludes -e "".include ${CMAKE_CURRENT_SOURCE_DIR}/mwe/include""); ```; but it does not work on Windows (it works on Linux); ```; rocessing C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/combined.cxx+(0)...; Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/workspace/root-pullrequests-build/build/roottest/root/io/issue-7754/combined_cxx.dll; In file included from input_line_9:6:; In file included from C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/combined.cxx:2:; C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/src/SpectrometerChannelID.cc:7:10: fatal error: 'SpectrometerChannelID.hh' file not found; #include ""SpectrometerChannelID.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9585#issuecomment-1014551071:53,inject,injection,53,https://root.cern,https://github.com/root-project/root/pull/9585#issuecomment-1014551071,1,['inject'],['injection']
Security,"@bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64; Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64); Build type Release; Install path /usr/local; Compiler GNU 8.3.1; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872475067:493,hash,hash-style,493,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872475067,1,['hash'],['hash-style']
Security,@bzEq can you please prepare the list of upstream commit hashes that you are backporting here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1864186357:57,hash,hashes,57,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1864186357,1,['hash'],['hashes']
Security,"@couet, @bellenot I need approval for this one, validated in #11272",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11293#issuecomment-1232650962:48,validat,validated,48,https://root.cern,https://github.com/root-project/root/pull/11293#issuecomment-1232650962,1,['validat'],['validated']
Security,@dciangot Can you try please meanwhile access file exporting `BEARER_TOKEN` environment variable?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802#issuecomment-776820430:39,access,access,39,https://root.cern,https://github.com/root-project/root/issues/6802#issuecomment-776820430,1,['access'],['access']
Security,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer?; (I am going to try to test it @ UNL but I wanted to ask anyway); ```;  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]; Attaching file https://212.189.205.141:31094//W.root as _file0...; Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403); Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403); (TFile *) nullptr; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802#issuecomment-776812312:49,access,access,49,https://root.cern,https://github.com/root-project/root/issues/6802#issuecomment-776812312,1,['access'],['access']
Security,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):; ```; root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 ; Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6); root [0]; Attaching file https://212.189.205.141:31094//W.root as _file0...; Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6); (TFile *) nullptr; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802#issuecomment-777501087:121,certificate,certificate,121,https://root.cern,https://github.com/root-project/root/issues/6802#issuecomment-777501087,3,['certificate'],['certificate']
Security,"@dpiparo , we could start some simple APIs and I hope we could validate that ~3% does be caused by TTaskGroup.Run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-330704409:63,validat,validate,63,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-330704409,2,['validat'],['validate']
Security,"@dpiparo for perf validation, see https://sft.its.cern.ch/jira/browse/ROOT-9470",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397392126:18,validat,validation,18,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397392126,1,['validat'],['validation']
Security,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870358974:1014,hash,hash,1014,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870358974,1,['hash'],['hash']
Security,"@eguiraud I was indeed confused between TParTreeProcessingRAII and TParBranchProcessingRAII ... but my point still stand with word exchange (i.e. that lock (seems) to be only needed for the use case where the TFile can be access by multiple thread via the TTreeProcessMT, and even though it might be useful/necessary in other cases (like IMT GetEntry) it is definitively not need in the regular case and thus should be optional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608587801:222,access,access,222,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608587801,1,['access'],['access']
Security,"@ellert thanks for the report, I'll need to see if I can get access to a AArch64 system to test. In the meantime, could you see if the symbols appear in the executables or one of the shared libraries? Then they would be in the process and Cling *should* automatically find them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12294#issuecomment-1429274004:61,access,access,61,https://root.cern,https://github.com/root-project/root/issues/12294#issuecomment-1429274004,1,['access'],['access']
Security,"@etejedor ; As I see, `c.NotebookApp.ip = '*'` was introduced in 6.16 version for those who wants have external access to the notebook. Maybe, it is not a good idea to have it by default.; This that PR one could just do it explicitly. ; I rather prefer to remove such option from default settings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4597#issuecomment-548273614:112,access,access,112,https://root.cern,https://github.com/root-project/root/pull/4597#issuecomment-548273614,1,['access'],['access']
Security,@ferdymercury I agree that we should make the *first* crash backtrace accessible through `gROOT`. Rationale: a crash can trigger follow-up crashes; what we care about is the first one. @pcanal objections against me implementing this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122792807:70,access,accessible,70,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122792807,1,['access'],['accessible']
Security,"@ferdymercury I look through the messages and did not found critical errors. ; Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. ; But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800017654:95,access,access,95,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800017654,1,['access'],['access']
Security,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-879249668:99,access,access,99,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-879249668,1,['access'],['access']
Security,"@guitargeek ; Maybe one should revert changes in civetweb, while at that place SSL is not used - it just calculates some special checksum for websocket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1134314949:129,checksum,checksum,129,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1134314949,1,['checksum'],['checksum']
Security,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845925405:281,inject,inject,281,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845925405,1,['inject'],['inject']
Security,"@hahnjo for `vector<char>` it's all fine, there is actually a test for it [here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/stl_vector.py#L18) and it succeeds, meaning that our pythonization for `std::vector` runs fine. The fact that `value_type` for `vector<char>` in Python is the Python string `""char""` is due to another pythonization injected by cppyy itself [here](https://github.com/root-project/root/blob/07932d78211d0ac5fdb198ac2260c35530cb9647/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1159). Simple test:. ```python; >>> import ROOT; >>> a = ROOT.std.vector['char'].value_type; >>> a; 'char'; >>> type(a); <class 'str'>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11592#issuecomment-1282453903:380,inject,injected,380,https://root.cern,https://github.com/root-project/root/pull/11592#issuecomment-1282453903,1,['inject'],['injected']
Security,"@henryiii I guess I can work around this problem with a `const_cast`, but `const_casts` are evil and should not be necessary to access a basic feature of the public interface. In my understanding this is an interface bug. I agree that my solution is not optimal either, so if you want to take a deeper look please do. In `iminuit`, we run MIGRAD with the class `MnMigrad`. If you look into `MnMigrad.h`, you will see that it only allows one to access the `ModularFunctionMinimizer` as a const reference. The `ModularFunctionMinimizer` allows us to access the `MinimumBuilder` as a const and non-const reference, but the latter is non available, because `ModularFunctionMinimizer` is already const. The only way to set the print level for `MnMigrad` that I can see is via; `MnMigrad.Minimizer().Builder().SetPrintLevel(...)`, and that only works when `SetPrintLevel(...)` is const. As far as I can see, it makes sense that `MnMigrad` only hands out a const reference. Otherwise, it would also be a (possibly cleaner) solution if `MnApplication` and its children offer a `Minimizer()` method which returns a non-const reference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384667376:128,access,access,128,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384667376,3,['access'],['access']
Security,"@imaxoi windows fails with these kind of errors (can you access the jenkins logs?):; ```; 14:28:11 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->; 14:28:11 ""C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_vecops.vcxproj"" (default target) (390) ->; 14:28:11 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RDFInterfaceUtils.hxx(305): error C2466: cannot allocate an array of constant size 0 [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_vecops.vcxproj]; ```. Can you please check what it does not like at `RDFInterfaceUtils.hxx:305`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-401342291:57,access,access,57,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-401342291,1,['access'],['access']
Security,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:313,access,access,313,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,2,['access'],['access']
Security,"@jpivarski Many thanks for sharing, that's very helpful! The cluster and page sizes should be addressed in #7853 ; For bulk access with views, I was considering an interface like this; ```; const T *RNTupleView<T>::MapV(IndexType index, unsigned int &nItems);; ```. The `nItems` parameter would return the number of elements one can use in the `T*` output buffer. So `T*` would point into the page buffer and return the number of elements until the end of the page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7112#issuecomment-825654164:124,access,access,124,https://root.cern,https://github.com/root-project/root/pull/7112#issuecomment-825654164,1,['access'],['access']
Security,@ktf could an extra layer of inheritance help circumventing the `protected` access in your case?; See https://godbolt.org/z/o5X_r-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-463615794:76,access,access,76,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-463615794,1,['access'],['access']
Security,"@ktf, here is how to get the fedora38 debug build failure according to the bot:. ```; Grab the image:; $ docker run --shm-size=1g -m 16g --security-opt label=disable -it registry.cern.ch/root-ci/fedora38:buildready; Then:; ; ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/fedora38/master/Debug/c8bf26fbd62398395855e8d992e7688980a1d318/2023-10-05.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin refs/pull/13808/head:reduce-memory-usage; git checkout reduce-memory-usage; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'Debug' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; )```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1791153635:139,secur,security-opt,139,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1791153635,1,['secur'],['security-opt']
Security,"@linev can you please validate with files doesn't need (I removed from TGCocoa.mm) this:; `#ifdef WIN32; #include ""Windows4Root.h""; #endif`. Can we try find some agreement and move forward with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-600595519:22,validat,validate,22,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-600595519,1,['validat'],['validate']
Security,"@linev, I do not have access to a gcc12 platform. I tried a blind fix, could you check if this PR fixes the build for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519#issuecomment-1484169646:22,access,access,22,https://root.cern,https://github.com/root-project/root/pull/12519#issuecomment-1484169646,1,['access'],['access']
Security,"@mpatrascoiu is this a known deficiency in Davix, or are we not using the library correctly for authenticated file creation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9584#issuecomment-1058934495:96,authenticat,authenticated,96,https://root.cern,https://github.com/root-project/root/issues/9584#issuecomment-1058934495,1,['authenticat'],['authenticated']
Security,"@olemorud the last rebase seems to have gone wrong... You need to rebase your branch on `master`, not the other way around. There should never be commits from `master` with a different commit hashes in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1413320439:192,hash,hashes,192,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1413320439,1,['hash'],['hashes']
Security,"@oshadura :; > Is this some needed security update?. That wasn't the motivation. It's more ""let's use the newest openssl there is"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5352#issuecomment-613975740:35,secur,security,35,https://root.cern,https://github.com/root-project/root/pull/5352#issuecomment-613975740,1,['secur'],['security']
Security,"@oshadura Seems to be, there are still some builtins which are used on your machine and which expose `${CMAKE_BINARY_DIR}/include` to include paths. ; I merging PR and will continue to adjust cmake files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5445#issuecomment-618923006:94,expose,expose,94,https://root.cern,https://github.com/root-project/root/pull/5445#issuecomment-618923006,1,['expose'],['expose']
Security,"@oshadura interpreter/cling/lib/Interpreter/CIFactory.cpp has; ```; #ifdef __FAST_MATH__; Opts.FastMath = 1;; #endif; ```. Shouldn't that work? I'd have expected that to inject the proper preprocessor definition into cling's runtime, just like for `__STRICT_ANSI__` / `Opts.GNUMode`. Could you check whether `Opts.FastMath` is `1` when it should be? Then we'll have to see why `__STRICT_ANSI__` gets set but `__FAST_MATH__` doesn't, looking at cling's calls to clang / the `Preprocessor` setup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-329252529:170,inject,inject,170,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-329252529,1,['inject'],['inject']
Security,"@p-bhagyashree and I have found an issue related to this one, which is hinted at in the last comment on the [forum post](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724/6) that was also linked in the description of this issue.; The comment mentions an error message, which we also observed (although the `prodpdf` is `simpdf` in our case):; ```; [#0] ERROR:InputArguments -- RooDataSet::merge(fitParData_prodpdf) ERROR: datasets have different size; ```; Looking through the source code, this is happening when attempting to merge the `fitParData` and `genParData`.; The reason that they are different sizes seems to be because [`genParData` is added to for every experiment that is generated](https://github.com/root-project/root/blob/v6-28-00/roofit/roofitcore/src/RooMCStudy.cxx#L368), while [`fitParData` is only added to if the fit succeeds](https://github.com/root-project/root/blob/v6-28-00/roofit/roofitcore/src/RooMCStudy.cxx#L683). The bug could presumably be fixed therefore by delaying the append to `genParData` and again only doing so if the fit is successful. This bug means that pull plots of constrained parameters appear completely different between a set of toys where all fits are successful (here they appear essentially Gaussian) and a set where one or more fits fail (here they are a delta function).; Should we open a new issue for this bug or can it be addressed here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490#issuecomment-1433404621:157,access,access-roomcstudy-genpardataset,157,https://root.cern,https://github.com/root-project/root/issues/9490#issuecomment-1433404621,1,['access'],['access-roomcstudy-genpardataset']
Security,"@pcanal ; Do you mean that we should inject ""input_line_<number>"" in IncrementalParser (where this AtlernateTuple ends up in virtual FileID) only when it was from rootcling and it doesn't have modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2615#issuecomment-421014268:37,inject,inject,37,https://root.cern,https://github.com/root-project/root/pull/2615#issuecomment-421014268,1,['inject'],['inject']
Security,"@pcanal ; One could have used TNamed: I did not think about that. That might not have been enough though: see my comment below.; About the speedup: it is indeed not due to the different container! If there is a difference in runtime between the two, it is undetectable. The difference comes from the fact that the graph built with TDF nodes is sophisticated and the same columns end up being inputs of Filters and Defines. As a result a single column, even holding a long-ish array, ends up being read many times. Given that the proxy is not re-used, deserialisation happened N times, with the associated overhead.; @Axel-Naumann ; About the crashes: I am surprised about so many crashes - checked the TDF tests on ubu16 before creating the PR and only the dataframe_friends test failed. I think that one is understood. The problem is that the same proxy is used for branches with the same name even if they come from two different trees which are friends. To solve this case, a possible solution would consist in hashing (with a map or an unordered_set, to be seen) not only the branch name but also some info about the tree to distinguish the two cases.; About the other crashes, working on those to understand where they are coming from.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768#issuecomment-374724166:1014,hash,hashing,1014,https://root.cern,https://github.com/root-project/root/pull/1768#issuecomment-374724166,1,['hash'],['hashing']
Security,"@pcanal @bbockelm . The updates address some issues for random read case and the code should be good now. Some updates after last Friday meeting:. As we discussed last Friday, random read performance is very slow. It technically cannot be improved if we decide to use cache. I also tried random read workload with pthread. The performance was the same with tbb. I think the reason is obvious that reading next random event will invalidate current cache and all baskets need to be reset and cache buffer has to be filled by next cluster of events. Based on current cache replacement policy, the slow performance is reasonable. Philippe pointed out the common use case for ROOT should be mostly sequential reads plus little random reads. I was thinking it would be not helpful if we store decompressed baskets by main thread (when cache miss happens) back to cache. Because for sequential read, they will not be accessed again, neither random reads since the cache will be invalidate and all decompressed baskets in cache should be marked as invalid.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-335354319:910,access,accessed,910,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-335354319,1,['access'],['accessed']
Security,"@pcanal As discussed, the estimator for the compressed cluster size is [now](https://github.com/jblomer/root/pull/8703/commits/806637b8a130e4a5a6b599a0b134e9ea0097aae7) the average compression ratio of all so-far written clusters. I also [added](https://github.com/jblomer/root/pull/8703/commits/5a023346d66b58f4c38044544239b71c7856e0b1) a stub checklist for the future RNTuple validation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8703#issuecomment-922457940:378,validat,validation,378,https://root.cern,https://github.com/root-project/root/pull/8703#issuecomment-922457940,1,['validat'],['validation']
Security,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425173652:62,access,access,62,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425173652,1,['access'],['access']
Security,"@pcanal I use the class `MnMigrad` to minimize a function and I want to set the PrintLevel for that class. Quoting myself from two messages back:; We run MIGRAD with the class `MnMigrad`. If you look into `MnMigrad.h`, you will see that it only allows one to access the `ModularFunctionMinimizer` as a const reference. The `ModularFunctionMinimizer` allows us to access the `MinimumBuilder` as a const and non-const reference, but the latter is not available, because `ModularFunctionMinimizer` is already const. The only way to set the print level for `MnMigrad` that I can see is via; `MnMigrad.Minimizer().Builder().SetPrintLevel(...)`, and that only works when `SetPrintLevel(...)` is const.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384994344:259,access,access,259,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384994344,2,['access'],['access']
Security,"@pcanal This should be ready for review. I think the way to later allow for unaligned friends is through combining friends with another virtual page source that gives access to the underlying page source with an entry list (or another mechanism for shuffling & skimming the original entries). I like @mxxo suggestion of renaming friends to ""joins"" or joined ntuples. @eguiraud @Axel-Naumann what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6979#issuecomment-805079850:167,access,access,167,https://root.cern,https://github.com/root-project/root/pull/6979#issuecomment-805079850,1,['access'],['access']
Security,"@pcanal Unfortunately, I can't see what output of the build. I do not have access permission. What are those failures about?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-360908288:75,access,access,75,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-360908288,1,['access'],['access']
Security,"@pcanal What do you think would be the right place to include VecCore in ROOT? I want to avoid injecting it as a dependency when it's not needed, but that seems to cause problems with the PCH on Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830#issuecomment-320181174:95,inject,injecting,95,https://root.cern,https://github.com/root-project/root/pull/830#issuecomment-320181174,1,['inject'],['injecting']
Security,@pcanal but then we are back to my point that TTreeProcessorMT does not do that kind of access and should not need these special locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608591639:88,access,access,88,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608591639,1,['access'],['access']
Security,"@pcanal can you point me to the part of the code that accesses the same TFile concurrently? Since I'm with ROOT we have been very careful to follow the ""one file per thread"" rule.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608548474:54,access,accesses,54,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608548474,1,['access'],['accesses']
Security,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:; > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:; * this is one of the main reasons why `vector<bool>` was a horrible horrible decision; * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425183688:578,access,access,578,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425183688,1,['access'],['access']
Security,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6852#issuecomment-731445787:196,expose,expose,196,https://root.cern,https://github.com/root-project/root/pull/6852#issuecomment-731445787,1,['expose'],['expose']
Security,"@pcanal, it appears my understanding of the file was incorrect. The on-disk version of the class in the file was 15, which is specified in the XML file. However, the XML file looks like:. ```.xml; <class name=""recob::Track"" ClassVersion=""17"">; <version ClassVersion=""17"" checksum=""738708267""/>; <version ClassVersion=""16"" checksum=""1293628079""/>; <version ClassVersion=""15"" checksum=""2420564911""/>; <version ClassVersion=""14"" checksum=""2345363916""/>; </class>; ...; <ioread; version=""[-14]"" ...>; ...; </ioread>; ```; Am I correct that because no version older than 14 is specified in the version list, the IO rule can be changed to:. ```.diff; <ioread; - version=""[-14]; + version=""[14]""; ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7016#issuecomment-758813637:271,checksum,checksum,271,https://root.cern,https://github.com/root-project/root/issues/7016#issuecomment-758813637,4,['checksum'],['checksum']
Security,"@rdschaffer : my understanding is it is 'reliably' failing at the same sites, right? I can get access to CERN batch node, maybe we could then try together to run the job manually on the node and see if we can reproduce it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758527726:95,access,access,95,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758527726,1,['access'],['access']
