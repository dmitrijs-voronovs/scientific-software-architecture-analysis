quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"ok, i updated to gcc_5.1.0, however when running ./psi4 : i get the following error : . Traceback (most recent call last):; File ""./psi4"", line 126, in <module>; import psi4; File ""/home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/**init**.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/core.so: undefined symbol: __intel_avx_rep_memset. Any idea how to get rid of this ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261747759:6,update,updated,6,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261747759,1,['update'],['updated']
Deployability,"oking for opinions on whether I'm entering the functional wrong or if the parameter hookup may need adjustment after Libxc 3-->4 changes + new dict func initialization. This is the first use of `use_libxc` for a LRC. ---. Ok, I believe I'm now using `use_libxc` correctly for LRC fctls (test case still unhappy):. ```; funcs.append({; ""name"": ""M11"",; ""x_functionals"": {; ""HYB_MGGA_X_M11"": {; ""use_libxc"": True; }; },; ""x_hf"": {; ""use_libxc"": ""HYB_MGGA_X_M11""; },; ""c_functionals"": {; ""MGGA_C_M11"": {}; },; ""description"": ' M11 Meta-GGA XC Functional\n',; ""citation"": ' R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011\n',; ""doi"": '10.1021/jz201170d',; }); ```. Aren't really any other M11 fctls in Libxc to get confused by:; ```; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11_L 75 /*M11-L correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11 76 /*M11 correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_X_M11_L 226 /*M11-L exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_HYB_MGGA_X_M11 297 /*M11 hybrid exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_MGGA_X_M11 225 /* Worker for M11 functional */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_HYB_MGGA_XC_M11 462 /* M11 functional from Minnesota */; ```; This turns into psi output; ```; => Composite Functional: M11 <=. M11 Meta-GGA XC Functional. R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011. Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_HYB_MGGA_X_M11 [omega = 0.2500]. => Exact (HF) Exchange <=. 1.5720 HF,LR [omega = 0.2500]; 0.4280 HF. => Correlation Functionals <=. 1.0000 XC_MGGA_C_M11; ```; which doesn't match; ![screen shot 2018-04-20 at 2 19 31 pm](https://user-images.githubusercontent.com/2314730/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383182397:1038,install,install-libxc,1038,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383182397,1,['install'],['install-libxc']
Deployability,"om/psi4/psi4/pull/799/files#diff-17> (1); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/799/files#diff-18> (4); > - *M* tests/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-19> (2); > - *A* tests/dft-custom/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-20> (3); > - *A* tests/dft-custom/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-21> (54); > - *A* tests/dft-custom/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-22> (910); > - *A* tests/dft-reference/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-23> (3); > - *A* tests/dft-reference/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-24> (19); > - *A* tests/dft-reference/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-25> (366); > - *M* tests/gcp/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-26> (2); > - *A* tests/gcp/hf3c-gradients/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-27> (3); > - *A* tests/gcp/hf3c-gradients/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-28> (19); > - *A* tests/gcp/hf3c-gradients/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-29> (1438); > - *A* tests/gcp/hf3c-hessian/CMakeLists.txt; > <https://github.com/psi4/psi4/pull/799/files#diff-30> (3); > - *A* tests/gcp/hf3c-hessian/input.dat; > <https://github.com/psi4/psi4/pull/799/files#diff-31> (21); > - *A* tests/gcp/hf3c-hessian/output.ref; > <https://github.com/psi4/psi4/pull/799/files#diff-32> (2612); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/799.patch; > - https://github.com/psi4/psi4/pull/799.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/799>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdtmlo2soYV97EnbfPbQiixA89Mymks5sjoXOgaJpZM4PbDFk>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/799#issuecomment-330258817:5382,Patch,Patch,5382,https://psicode.org,https://github.com/psi4/psi4/pull/799#issuecomment-330258817,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:3126,Release,Release,3126,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,4,"['Release', 'install']","['Release', 'install']"
Deployability,"ompute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/su",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2791,install,install,2791,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"on 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5905,install,installed,5905,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"on MacOS bigSur I am using `-DOpenMP_LIBRARY_DIRS=/usr/local/Cellar/libomp/12.0.1/lib` where I have brew installation `libomp.a` and `libomp.dylib1 but still getting:. ```; ld: library not found for -lMathOpenMP_LIBRARIES-NOTFOUND; clang: error: linker command failed with exit code 1 (use -v to see invocation); ```. I used conda's version and it worked. In the words of GROMACs, ""Sadly, the interactions of hardware, libraries, and compilers are only going to continue to get more complex."". And to add ""Thanks to MacOS and Intel :( """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636:105,install,installation,105,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636,1,['install'],['installation']
Deployability,"on:; 1. I wrote an extensive list of changes at the top of this PR. Read them– they affect you.; 2. To build Psi4 you now will need to do something along the lines of (in the top-level of the cloned source code):; ; ``` .sh; cmake -H. -Bbuild ; cd build && make; make install; ```; - In the configure step (the first line) there are a large number of CMake variables you can set to fine tune the build. See the top-level `CMakeLists.txt` for the more common ones. For example to change the C++ compiler add: `-DCMAKE_CXX_COMPILER=/path/to/compiler` after `-Bbuild`; - Anything not part of Psi4 proper is now in external and is expected to have its own build files. Paths where CMake should look for dependencies should now be passed to these external projects via `CMAKE_PREFIX_PATH`. ; - Installing is now a thing for Psi4. In theory you can run Psi4 from the build directory, but you'll quickly find it annoying (I'll leave it to you to learn why). Tests should still work from the build directory and can be performed from there before installing. They should be performed using `ctest` as normal. ; 3. Within the next week anyone who compiles Psi4 regularly (as opposed to just using the Conda package) should clone this branch and try it out. Please do it sooner rather than later because of the following points.; 4. Once this PR is merged, git operations on forks and clones of the current master repo will likely cease to work without a ton of effort. This is because of the size and amount of changes in this PR. Instead of fighting to rebase on top of it, there are two options:; 1. If you have some small changes you want to make in the near future [fork my fork](https://github.com/ryanmrichard/psi4), add your changes, submit a PR to me; 2. Wait until after my PR is merged into Psi4's master repo, make a fresh fork, and manually copy/paste any files you are working on into that fresh fork; 5. Since the history is getting messed up anyways, there are plans to rip Boost out after merg",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-236723542:1433,install,installing,1433,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-236723542,2,['install'],['installing']
Deployability,"onda-forge; pint 0.17 pyhd8ed1ab_0 psi4; pip 21.2.2 py38haa95532_0; pluggy 1.0.0 py38haa244fe_3 conda-forge; psi4 1.6+77475b5 py38_0 psi4; psutil 5.9.1 py38h294d835_0 conda-forge; py 1.11.0 pyh6c4a22f_0 conda-forge; py-cpuinfo 8.0.0 pyhd8ed1ab_0 conda-forge; pydantic 1.3 py38hfa6e2cd_0 psi4; pyparsing 3.0.9 pyhd8ed1ab_0 conda-forge; pytest 7.1.2 py38haa244fe_0 conda-forge; python 3.8.13 hcf16a7b_0_cpython conda-forge; python_abi 3.8 2_cp38 conda-forge; pyyaml 6.0 py38h294d835_4 conda-forge; qcelemental 0.17.0 py_0 psi4; qcengine 0.19.0 pyhd8ed1ab_0 psi4; scipy 1.8.1 py38h9bf8e03_0 conda-forge; setuptools 61.2.0 py38haa95532_0; sqlite 3.38.3 h2bbff1b_0; tk 8.6.12 h8ffe710_0 conda-forge; tomli 2.0.1 pyhd8ed1ab_0 conda-forge; vc 14.2 h21ff451_1; vs2015_runtime 14.27.29016 h5e58377_2; wheel 0.37.1 pyhd3eb1b0_0; wincertstore 0.2 py38haa95532_2; xz 5.2.5 h62dcd97_1 conda-forge; yaml 0.2.5 h8ffe710_2 conda-forge; zipp 3.8.0 pyhd8ed1ab_0 conda-forge; ```. Manually updating pydantic with `pip install -U pydantic`, installs version 1.9.1 and then running `psi4 --test` gives:; ```; ================================================= test session starts =================================================; platform win32 -- Python 3.8.13, pytest-7.1.2, pluggy-1.0.0 -- Path\psi4conda\envs\psi16\python.exe; cachedir: .pytest_cache; rootdir: Path\psi4conda\envs\psi16\lib\site-packages\psi4, configfile: pytest.ini; collected 4042 items / 1 error / 3950 deselected / 92 selected. ======================================================= ERRORS ========================================================; _______________________________ ERROR collecting tests/test_qcel_molparse_to_string.py ________________________________; psi4conda\envs\psi16\lib\site-packages\psi4\tests\test_qcel_molparse_to_string.py:7: in <module>; from qcelemental.tests import test_molparse_to_string; <frozen importlib._bootstrap>:991: in _find_and_load; ???; <frozen importlib._bootstrap>:975: in _find_and_load_unlocked; ??",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:2474,install,install,2474,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,4,['install'],"['install', 'installs']"
Deployability,ons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5804,Install,Install,5804,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ooking for pthread_create - found ; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; -- Disabled CheMPS2 ; -- Disabled dkh ; -- Using libefp: /usr/qc/psi4.bin/lib/libefp.a (version 1.3.0) ; -- Disabled erd ; -- Disabled gdma ; -- Using libint: /usr/qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:2914,release,release,2914,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,1,['release'],['release']
Deployability,opt/PSI4/v1.2/bin/psi4; ```; ```; >>> cat /proc/cpuinfo | grep flags; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms.......; ```; ```; >>> cat /proc/version ; Linux version 2.6.32-431.el6.x86_64 (mockbuild@x86-023.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Nov 10 22:19:54 EST 2013; ```; ```; >>> lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.5 (Santiago); Release:	6.5; Codename:	Santiago; ```; ```; >>> ldd -v lib/python3.6/site-packages/psi4/core.so ; 	linux-vdso.so.1 => (0x00007fffe3ffd000); 	libambit.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libambit.so (0x00002b78f3dff000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b78f4118000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b78f4335000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b78f45b9000); 	libpcm.so.1 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00002b78f47be000); 	libxc.so.5 => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libxc.so.5 (0x00002b78fb817000); 	libgg.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgg.so (0x00002b78fc8e1000); 	libgdma.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/psi4/../../../libgdma.so (0x00002b78fcf2800,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690:3324,release,release,3324,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690,1,['release'],['release']
Deployability,"optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6328,Release,Release,6328,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"orks; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/python3.7 (found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:1833,Install,Installing,1833,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,ot detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detectin,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3847,Install,Install,3847,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"ould not converge SCF iterations in 4 iterations.; >; > Failed to converge.; >; > Traceback (most recent call last):; > File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1365,patch,patch,1365,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['patch'],['patch']
Deployability,"outing/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:10980,install,install,10980,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:3808,Update,Update,3808,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Update'],['Update']
Deployability,"owername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d\n"", count == 1, i != pshells_ - 1);; std::stringstream error;; error << ""DFHelper: not enough memory for (p shell) AO blocking!""; << "" required memory: "" << constraint * 8 / (1024 * 1024 * 1024.0) << ""[GiB]."";; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1991,release,release,1991,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,"parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one could also just return it to the user as is. Again the idea being that a psi4 user can use adcc implicitly for calculations, without needing to worry that he/she does. > Should adcc be distributed/build with psi4 in the end? (conda, cmake, etc.). Not sure what will work best. We are working on getting adcc distributed via conda ourselves, so I guess one could just pull it from there as part of the usual psi4 installation procedure. If the interfacing is done on the python level as I described above and as I did in the PR so far, this should not introduce big changes. One could even easily make the dependency optional. I am happy to hear other suggestions, too :smile:. Since we have a mandatory binary blob (in the form of the `adccore` library) for the moment, building the code completely as part of the psi4 setup is not possible unfortunately.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:2431,install,installation,2431,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['install'],['installation']
Deployability,"perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3124,install,installed,3124,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:118,configurat,configuration,118,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229,1,['configurat'],['configuration']
Deployability,polarization-6-31g-_d_.gbs: Ga-Kr in Psi4 but not EMSL (new basis attributed to 6-31G* EMSL 8/22/17); polarization-6-31g-_d_p_.gbs: Ga-Kr in Psi4 but not EMSL (new basis attributed to 6-31G* EMSL 8/22/17); polarization-6311g-_d_p_.gbs: Iodine basis in EMSL; want to add (EMSL updated 2007?)?; polarization-6311g-_d_p_.gbs: Iodine basis in EMSL; want to add (EMSL updated 2007?)?; polarization-6311g-_2d_2p_.gbs: Fluorine D function 1 changed from 2.396 -> 3.5 (updated 2013); polarization-6311g-_2df_2pd_.gbs: Flurine D function 1 changed from 2.396 -> 3.5 (updated 2013); polarization-6311g-_3df_3pd_.gbs: No unaccounted difference,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1058#issuecomment-401467591:276,update,updated,276,https://psicode.org,https://github.com/psi4/psi4/issues/1058#issuecomment-401467591,4,['update'],['updated']
Deployability,"private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent from my Android (without spellcheck). Please forgive the brevity.; > > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wrote:; > > ; > > > Why don't you keep the sensitive new code in separate branches of your; > > > (private) fork of the psi4public repo and only merge when the paper is; > > > ready? Or only use the private repo for that kind of stuff and push; > > > everything still",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:2172,update,update,2172,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['update'],['update']
Deployability,"psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10133,install,install,10133,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could w",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1328,release,releases,1328,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['releases']
Deployability,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3330,Install,Install,3330,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3157,Install,Install,3157,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <mo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:9294,install,install,9294,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"python 3.8, 3.9, & 3.10 all failing. also removed the '-rt'. `; mamba install psi4 psi4 python=3.8 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.8']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:70,install,install,70,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,2,['install'],"['install', 'installable']"
Deployability,"qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /usr/bin/python3.4 (found version ""3.4.5"") ; -- Found PythonLibs: /usr/lib64/libpython3.4m.so; -- pybind11 v2.0.0; -- Configuring done; -- Generating done; -- Build files have been written to: /usr/qc/psi4.git/objdir/external/upstrea",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:3158,update,update,3158,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,2,"['patch', 'update']","['patch', 'update']"
Deployability,"quires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6003,install,installed,6003,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"r occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/drive",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8537,install,install,8537,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"r to start with the conventional; > integrals the df-mp2 code proceeds. However, the gradient is not correct; > because the MO coefficients are from conventional SCF, but it should be; > from DF-SCF. I think in the case df-mp2 gradients, if user set the; > conventional SCF, then we should throw an error. Alternatively we may; > change the reference to DF-SCF and throw a warning for user to explain what; > we did. Both solutions are okay for me.; > ; > DFOCC uses frozen cores properly in energy and gradients. I did not add; > the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients.; > However, OCC does not use frozen cores in the energy and gradients. In case; > of OCC the problem is that you need to define different MO class with; > libtrans, which is not obvious how to do it. I know it is possible now.; > Andy explained it for me. As a result, there is no plan for OCC module.; > However, frozen virtuals will be added to DFOCC. In fact, I am waiting for; > RC1 release, then I will implement add it to Psi4.; > ; > For the final question, your reference gradient is wrong (mp2tot_vals).; > This is a very good example how 3-point numeric gradients are unreliable; > for challenging systems. I reproduce problem with your input. However, if I; > use ""points 5"", all numeric gradient computations give the same result with; > the analytic gradients. I also run the same job with gausssian 09 with; > analytic gradients, which gives the same result with our analytic gradient.; > ; > ## Here is the G09 result:; > ; > Center Atomic Forces (Hartrees/Bohr); > ; > ## Number Number X Y Z; > ; > 1 1 0.000000000 0.000000000 -0.002819339; > 2 9 0.000000000 0.000000000 0.002819339; > ; > ---; > ; > and our analytic gradients:; > ; > -Total gradient:; > Atom X Y Z; > ; > ---; > ; > 1 0.000000000000 0.000000000000 0.002819338251; > 2 0.000000000000 0.000000000000 -0.002819338251; > ; > @loriab https://github.com/loriab; > ; > —; > Reply to this email directly or view it o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192920861:2200,release,release,2200,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192920861,2,['release'],['release']
Deployability,"r with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent from my Android (without spellcheck). Please forgive the brevity.; > > On May 3, 2015 11:23 AM, ""wpoely86"" notifications@github.com wro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:2036,release,released,2036,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['release'],['released']
Deployability,"r-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2334,Install,Installing,2334,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,r/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Tools.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Targets.cmake; [ 69%] Completed 'pybind11_external'; [ 69%] Built target pybind11_external,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3837,Install,Installing,3837,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"r/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:7609,install,install,7609,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"rds from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WIIX7F74QLTYP2N5LSUJN43ANCNFSM4UXAU44A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:1708,Patch,Patch,1708,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2996,install,install,2996,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"regarding v2rdm_casscf, I think everything is now compatible with this PR on the C side; the plugin compiles against @robertodr 's fcidump branch. However, I get python errors when running any input file that are unrelated to v2rdm_casscf:. Traceback (most recent call last):; File ""/Users/deprince/software/robertodr/psi4/install/bin/psi4"", line 158, in <module>; import psi4; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/__init__.py"", line 31, in <module>; from psi4.driver.molutil import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/molutil.py"", line 35, in <module>; from psi4.driver.p4util import constants, filter_comments; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/__init__.py"", line 32, in <module>; from .util import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/util.py"", line 39, in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/proc_table.py"", line 35, in <module>; from . import sapt; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 32, in <module>; from psi4.driver import p4util; ImportError: cannot import name p4util",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355307312:323,install,install,323,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355307312,10,['install'],['install']
Deployability,"resumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f37",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1361,install,install,1361,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,2,['install'],['install']
Deployability,"rge; libnghttp2 1.47.0 hff17c54_1 conda-forge; libnsl 2.0.0 h7f98852_0 conda-forge; libsanitizer 12.2.0 h46fd767_19 conda-forge; libsqlite 3.39.4 h753d276_0 conda-forge; libssh2 1.10.0 hf14f497_3 conda-forge; libstdcxx-devel_linux-64 12.2.0 h3b97bd3_19 conda-forge; libstdcxx-ng 12.2.0 h46fd767_19 conda-forge; libuuid 2.32.1 h7f98852_1000 conda-forge; libuv 1.44.2 h166bdaf_0 conda-forge; libzlib 1.2.13 h166bdaf_4 conda-forge; llvm-openmp 14.0.4 he0ac6c6_0 conda-forge; mkl 2022.1.0 h84fe81f_915 conda-forge; mkl-devel 2022.1.0 ha770c72_916 conda-forge; mkl-include 2022.1.0 h84fe81f_915 conda-forge; ncurses 6.3 h27087fc_1 conda-forge; numpy 1.23.4 pypi_0 pypi; openssl 3.0.7 h166bdaf_0 conda-forge; ordered-set 4.1.0 pyhd8ed1ab_0 conda-forge; pint 0.20.1 pyhd8ed1ab_0 conda-forge; pip 22.3 pyhd8ed1ab_0 conda-forge; pybind11 2.10.1 pypi_0 pypi; pybind11-global 2.10.1 pypi_0 pypi; pydantic 1.10.2 pypi_0 pypi; python 3.11.0 ha86cf86_0_cpython conda-forge; python_abi 3.11 2_cp311 conda-forge; readline 8.1.2 h0f457ee_0 conda-forge; rhash 1.4.3 h166bdaf_0 conda-forge; setuptools 65.5.0 pyhd8ed1ab_0 conda-forge; sysroot_linux-64 2.12 he073ed8_15 conda-forge; tbb 2021.6.0 h924138e_1 conda-forge; tk 8.6.12 h27826a3_0 conda-forge; typing-extensions 4.4.0 hd8ed1ab_0 conda-forge; typing_extensions 4.4.0 pyha770c72_0 conda-forge; tzdata 2022f h191b570_0 conda-forge; wheel 0.37.1 pyhd8ed1ab_0 conda-forge; xz 5.2.6 h166bdaf_0 conda-forge; zlib 1.2.13 h166bdaf_4 conda-forge; zstd 1.5.2 h6239696_4 conda-forge; ```. Could it be this library file name issue you were hitting in Fedora?. Note that I let the environment use latest pint (v0.20.1) and internal build qcelemental (v0.4.0). In that combination, certain tests like `tu4-h2o-freq/input.dat` will give `AttributeError: module 'pint' has no attribute 'quantity'`. That's a pretty easy patch to qcel (I just minted it in v0.25.1) or you can constrain pint<0.20 . If you hit this, lmk what your constraints are, and I can suggest a combination.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719:5372,patch,patch,5372,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719,1,['patch'],['patch']
Deployability,"rianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:9514,install,install,9514,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,"roduced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmake --build <build_dir> -j<N>`. definitely do this step in parallel. ### Note on AM=7; Regular AM is 5. If you only need 7, you can use this tarball rather than generating your own with `--target export` in L2 repo: https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2_rev1.tgz Start above directions at ""Now back at your psi4 clone..."". Still GCC only, not Intel compilers. ### Exhibit A; ```; cmake -S. -Bbuild \; -G Ninja \; -D LIBINT_BUILD_LIBRARY_AS_SUBPROJECT=OFF \; -D CMAKE_INSTALL_PREFIX=/path/to/l2/install \; -D REQUIRE_CXX_API=ON \; -D REQUIRE_CXX_API_COMPILED=OFF \; -D BUILD_TESTING=ON \; -D CMAKE_PREFIX_PATH=""/psi/toolchainconda/envs/singleboost;/psi/toolchainconda/envs/singlegmp;/psi/toolchainconda/envs/singleeigen"" \; -D ENABLE_MPFR=OFF \; -D LIBINT_LOCAL_EIGEN3_INSTALL=OFF \; -D CMAKE_CXX_COMPILER=$CXX \; -D CMAKE_C_COMPILER=$CC \; -D ENABLE_FORTRAN=OFF \; -D LIBINT2_SHGAUSS_ORDERING=standard \; -D ERI3_PURE_SH=OFF \; -D ERI2_PURE_SH=OFF \; -D ENABLE_ERI=2 \; -D ENABLE_ERI3=2 \; -D ENABLE_ERI2=2 \; -D ENABLE_ONEBODY=2 \; -D ENABLE_G12=1 \; -D DISABLE_ONEBODY_PROPERTY_DERIVS=ON \; -D MULTIPOLE_MAX_ORDER=4 \; -D WITH_G12_MAX_AM=3 \; -D WITH_ERI_MAX_AM=""10;3;2"" \; -D WITH_ERI3_MAX_AM=""10;4;3"" \; -D WITH_ERI2_MAX_AM=""10;4;3"" \; -D WITH_MAX_AM=""10;4;3""; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:2709,install,install,2709,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['install'],['install']
Deployability,rw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3538,Install,Installing,3538,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,s README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3250,Patch,Patching,3250,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Patch'],['Patching']
Deployability,"s have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference and dispersion depends a lot on computing the psi4 (and other) versions. Hence the ""pull tags"" message. I can believe there's a way that communication breaks down. I'd suggest you compare commands and cat-ed files and see where the discrepancy in workflow/environment arises.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:4119,release,release,4119,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,2,['release'],['release']
Deployability,"s out of memory for AO blocking. The result of the print statement in second snippet is `AAAA 1: 14176380 > 14074472 || 3 == 65`. Should we put padding back or go another route?. ```; ==> Integral Setup <==. DFHelper Memory: AOs need 0.104621 GiB; user supplied 0.104863 GiB. 14042044 14074472; Using in-core AOs. Traceback (most recent call last):; File ""stage/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 1113, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1189,release,release,1189,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,1,['release'],['release']
Deployability,"s/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/dri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8361,install,install,8361,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,s/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Too,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3635,Install,Installing,3635,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"s?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH` has to be hinted (`find_package(gdma CONFIG REQUIRED HINTS ${CMAKE_PREFIX_PATH}/gdma)`) and the current way I've done can't be robust (think ;-lists). I can understand your wanting to separate out extproj() installations as not-quite-up-to-snuff, but the extra hinting level is annoying, so how about keeping `externals/` (controlled by a keyword maybe; `INSTALL_EXTPROJ_SEPARATE`) and dropping the extra namespacing level. So a default installation looks like below. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - bin/; - chemps2; - lib/; - libchemps2.a; - libgdma.a; - libint.a; - libderiv.a; - libdkh.a; - share/; - cmake/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That way, can have `externals/` in `CMAKE_PREFIX_PATH` and all the configs can be detected. In the `INSTALL_EXTPROJ_SEPARATE`, `externals/` is missing and the external/bin-s join the main bin, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:5495,install,installations,5495,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,4,['install'],"['installation', 'installations']"
Deployability,"sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3656,Release,Release,3656,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,ser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Config.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11ConfigVersion.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/FindPythonLibsNew.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11/pybind11Tools.cmake; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/share/cmake/pybind11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3737,Install,Installing,3737,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"si4-config` script to the installation, final contents (for the binary) below. Binary nightly build is off for the moment, because I'm working on it for other reasons, but you can see if something like the below is what you'd like. I'm concerned that it's got a lot of full paths and binary-specific (static) flags and libraries, but perhaps it can be made useful with some modifications. ``` py; #!/usr/bin/env python; # vim:ft=python. import sys; from collections import OrderedDict. def main(argv):; info = OrderedDict(); info['--cc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icc'; info['--cxx'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc' # aka PLUGIN_CXX; info['--fc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/ifort'; info['--version'] = psiver; info['--githash'] = githash; if 'ON' == 'ON':; info['--prefix'] = '/opt/anaconda1anaconda2anaconda3'; else:; info['--prefix'] = '/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl'; info['--top-level-psi4-dir'] = '/scratch/cdsgroup/conda-builds/work'; info['--max-am-eri'] = '4'; info['--python-version'] = '2.7'; info['--has-pcmsolver'] = 'ON'; info['--has-chemps2'] = 'ON'; info['--includes'] = '-I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include' # aka PLUGIN_INCLUDES; info['--defines'] = '-DHAVE_PCMSOLVER -DHAVE_DKH -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172395303:1178,install,install,1178,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172395303,1,['install'],['install']
Deployability,"si4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:3418,install,install,3418,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"si4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <mo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:5526,install,install,5526,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,si4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6690,Install,Install,6690,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4884,Install,Install,4884,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4711,Install,Install,4711,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"side libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356840364:1257,Release,Release,1257,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364,2,['Release'],['Release']
Deployability,"sirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/pr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2209,install,install,2209,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability,sixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Instal,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5331,Install,Install,5331,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,sorry i'm new to this and i've been having trouble with installing and running psi4 on Windows,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175694537:56,install,installing,56,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175694537,1,['install'],['installing']
Deployability,"sort will use 2.02 mb. Number of (ab|cd) temporary files: 2; Number of (ab|ci) temporary files: 3; Starting temporary file number: 270. Initial sort........done. Sort (IJ|KL)........done.; Sort (IJ|KA) 1/2....done.; Sort (IJ|KA) 2/2....done.; Sort (IA|JB)........done.; Sort (IJ|AB)........done.; Sort (IA|BC) 1/3....done.; Sort (IA|BC) 2/3....done.; Sort (IA|BC) 3/3....done.; Sort (AB|CD) 1/2....done.; Sort (AB|CD) 2/2....done. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.01 seconds = 0.00 minutes; 	system time = 0.03 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.46 seconds = 0.01 minutes; 	system time = 0.09 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:9940,Configurat,Configuration,9940,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Configurat'],['Configuration']
Deployability,"spect CMake variables (library, libraries, include_dir, include_dirs) (see below) but also; - manages requesting static shared, e.g., `find_package(gmda CONFIG REQUIRED COMPONENTS shared)`; - manages version requests; - exports a target `gdma::gdma` that has all its location, includes, `-DUSING_gdma` compiler definition, properties attached.; - so, after `find_package(gdma CONFIG REQUIRED)`, you don't have to add a library or use the usual suspects. Instead, just attach as needed (though I still think the second one should be simpler); - `target_link_libraries(psi4_exe PUBLIC gdma::gdma)`; - `target_compile_definitions(gdma_interface PRIVATE $<TARGET_PROPERTY:gdma::gdma,INTERFACE_COMPILE_DEFINITIONS>)`. ```; gdma_FOUND : 1; gdma_VERSION : 2.2.06; gdma_INCLUDE_DIRS : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_INCLUDE_DIR : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include; gdma_LIBRARIES : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; gdma_LIBRARY : /theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/lib/libgdma.so; ======================== gdma::gdma ========================; tgt='gdma::gdma' prop='IMPORTED'; value='TRUE'; defined='0'; set='1'; gt='gdma::gdma' prop='INTERFACE_COMPILE_DEFINITIONS'; value='USING_gdma'; defined='0'; set='1'; tgt='gdma::gdma' prop='INTERFACE_INCLUDE_DIRECTORIES'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/install-psi4/external/gdma/include/GDMA'; defined='0'; set='1'; tgt='gdma::gdma' prop='LOCATION'; value='/theoryfs2/ds/cdsgroup/psi4-compile/psi4rmr3/psi4/objdir6/stage/theoryfs2/ds/cds",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:1558,install,install-,1558,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,6,['install'],['install-']
Deployability,"st #511: dftd3-grad ....................... Passed 11.33 sec; Start 512: dftd3-psithon2; 3/5 Test #512: dftd3-psithon2 ................... Passed 13.39 sec; Start 513: dftd3-version; 4/5 Test #513: dftd3-version .................... Passed 27.06 sec; Start 514: dftd3-nbody-cp-gradient; 5/5 Test #514: dftd3-nbody-cp-gradient .......... Passed 33.83 sec. 100% tests passed, 0 tests failed out of 5; ```; version control files have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:3194,release,release,3194,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,2,['release'],['release']
Deployability,"st successfully, using the modified conda recipe to build the static libs, but only if the hombrew boost is unlinked at setup, _and_ compile time.. . If the homebrew boost is linked at the time I run the `setup` script I will end up with the same issue where the local (boost 1.59.0) headers are in the boost inc paths, but the homebrew (1.60.0) libraries end up in the boost lib paths. . If hombrew boost is unlinked at the time I run the `setup` script I will see both the include and library paths are set to the local boost install in the cmake output. However, if homebrew boost is linked when I run `make` I will get an error in the linking step. I suspect that the directory where hombrew adds the links to boost (`/usr/local/lib`) are passed as a linker argument by cmake, either by default, or because something else is installed there. Thus, if those links are present I will get the characteristic boost 1.60.0 linking errors. Hombrew installs boost-python as a separate package so to properly remove all of the links `brew unlink boost boost-python` . Interestingly I have a similar setup on a laptop running ArchLinux 4.4.5 where boost 1.60.0 was installed globally using `pacman` and I used the conda recipie to install boost 1.59.0 in `$CONDA_ENV_PATH`. If the conda virtual environment is activated and I use the `setup` args to direct cmake to boost 1.59.0 installed there I have no problems. The correct version is always found, even if I try to `make` with the conda virtual environment deactivated the cmake paths still point to the installation I want even though those paths aren't in my environment, and the build is successful. . I don't know If I would mark this as resolved, but it is at least understood to where it is predictable. . For anyone who has run into a similar problem:. If you are using a compatible version of boost installed manually on osx and your build fails to link, even if cmake reported the compatible version of boost was detected it may have detected",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313#issuecomment-198164795:994,install,installs,994,https://psicode.org,https://github.com/psi4/psi4/issues/313#issuecomment-198164795,1,['install'],['installs']
Deployability,stall package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Inst,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15637,Install,Install,15637,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"stalled;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/no",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3022,install,installed,3022,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,still getting the same error after running the following:. conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge -c psi4; psi4 --test. :(,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640:121,update,update,121,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640,2,"['install', 'update']","['install', 'update']"
Deployability,"stored the; > external potential as an additional matrix, matrices_[""VE""], that is then; > added to the one-electron potential for the monomer SCF calculations and; > the HF term. Is there a better way to handle this problem that doesn't; > require storing an additional matrix?; > - I compared total SAPT0 energy for a 2-fragment F-SAPT calculation to; > the SAPT module. Is there a good way to check a 3-fragment I-SAPT energy; > with the SAPT module?; >; > Checklist; >; > - For a 2-fragment system, total SAPT0 energies with and without an; > external potential in FISAPT module agree with SAPT module; > - For a 3-fragment system, total SAPT0 energies with and without an; > external potential give reasonable energies; > - Passed included smoke and sapt tests; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1608; > Commit Summary; >; > - Added external potential to FISAPT one-electron potential; > - Fixed double counting external interaction in one-electron potential; >; > File Changes; >; > - *M* psi4/driver/procrouting/proc_util.py; > <https://github.com/psi4/psi4/pull/1608/files#diff-0> (2); > - *M* psi4/src/psi4/fisapt/fisapt.cc; > <https://github.com/psi4/psi4/pull/1608/files#diff-1> (68); > - *M* psi4/src/psi4/libmints/wavefunction.cc; > <https://github.com/psi4/psi4/pull/1608/files#diff-2> (2); > - *M* psi4/src/psi4/libmints/wavefunction.h; > <https://github.com/psi4/psi4/pull/1608/files#diff-3> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1608.patch; > - https://github.com/psi4/psi4/pull/1608.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1608>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAXVA5Q26LUISGVVNYCPO5TPSMNXLANCNFSM4HIWTBEQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-487221275:2927,Patch,Patch,2927,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-487221275,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"sts/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12733,Install,Install,12733,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"t not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz'], 'dashlevel': 'd3bj', 'dashparams': {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}, 'dashparams_citation': False, ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; ----------; jobrec : dict; Nested dictionary with input specifications for DFTD3 in generic; QC terms.; dftd3rec : dict; Nested dictionary with input specification and outp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:14232,update,updates,14232,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['update'],['updates']
Deployability,"t recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; ciwfn = core.detci(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:11697,install,install,11697,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,['install'],['install']
Deployability,"t set on the remote machine; (probably didn't re-source ~/.bashrc after installing psi4. However, it; should be writing to local disks. I can see psi...clean files in the local; directory, are those scratch files?. No, psi.[pid].clean is a little text file that contains a list of all the; scratch files to clean up. You should look at the list of scratch files in; this psi.[pid].clean file to see where it is writing the scratch files, and; make sure that it isn't to a NFS-mounted directory. Otherwise you'll take; a huge performance hit. On Thu, Mar 1, 2018 at 11:05 AM, Lori A. Burns <notifications@github.com>; wrote:. > Possible, but I really doubt it, as glibc mismatches aren't usually; > healable. Usually this is a symptom of packages depending on different; > versions of a library and symbols getting sometimes loaded one way and; > sometimes another depending on import order. Often fixable by swapping; > import order, but in the psi-in-jupyter case, there's simply nothing to; > swap.; >; > I thoroughly expected this to be fixed when I built with the newer; > compilers and was alarmed when it wasn't. @sergsb; > <https://github.com/sergsb>, would you want to try the conda env line in #862; > (comment) <https://github.com/psi4/psi4/issues/862#issuecomment-347074303>; > ? Possibly more defaults packages have been updated to the new compilers; > since November and healed the problem.; >; > Only thing else I can think of is that I'm still linking libc++ statically; > (which it should be entirely safe to do, being the least-fundamental of the; > glibc, libgcc_s, libstdc++ trio) and that's running into a symbol error; > with the jupyter stack.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/862#issuecomment-369640226>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdr3o6Z-YaJeCQ901ywG8eMHjO8c5ks5taBxDgaJpZM4Qhais>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369646381:1449,update,updated,1449,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369646381,2,['update'],['updated']
Deployability,"t target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/g++-8; -- Check for working CXX compiler: /usr/local/bin/g++-8 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting (unspecified) option MAX_AM_ERI: 5; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 14; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /Users/bsenjean/Documents/intelpython3/bin/python3 (found suitable version ""3.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:4756,Release,Release,4756,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,2,"['Release', 'install']","['Release', 'install']"
Deployability,"t__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [CMakeFiles/psi4_core.dir/all] Error 2; make[1]: Leaving directory `/scratch/appssf/psi4/build'; make: *** [all] Error 2; ```; For compiling, I was using ""make -j 8"". I will try to compile serially and see if that was the cause for the installation problem. Best regards and thank you very much for your help. Sam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4912,Install,Installing,4912,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,5,"['INSTALL', 'Install', 'install']","['INSTALL', 'Installing', 'install', 'installation']"
Deployability,tage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2951,Install,Installing,2951,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"tch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4578,Install,Installing,4578,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"te master sync when safe. Lori. > On May 3, 2015, at 12:18 PM, andysim notifications@github.com wrote:; > ; > It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an op",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1700,update,updates,1700,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,2,"['release', 'update']","['releases', 'updates']"
Deployability,tecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if neces,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14975,Install,Install,14975,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,tecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13213,Install,Install,13213,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,tecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2731,Install,Install,2731,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1336,Install,Install,1336,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/t,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6871,Install,Install,6871,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"th a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2254,upgrade,upgrade,2254,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,2,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"th the CMake user will variable and the compiler definition to `ENABLE_<Pkg>` as the CMake user will variable and `USING_<Pkg>` as the compiler def. so we're not tempted to conflate the roles. **What it doesn't do**; - linking not right for one of `psi4_main.a` or `psi4.so` (don't remember which) when libgdma is static. **Behavior I'm aiming for**. (a) `ENABLE_<Pkg>`: whether set to TRUE or FALSE; (b) `CMAKE_DISABLE_FIND_PACKAGE_<Pkg>`: whether set to TRUE or FALSE; (c) `<Pkg>_DIR`: whether `<pkg>Config.cmake` findable at this loc; (d) `CMAKE_PREFIX_PATH`. | (a) enabled | (b) disable find | (c) findable dir | (d) findable gen | outcome |; | --- | --- | --- | --- | --- |; | T | T | | | extproj_add, detect superbuild |; | T | F | T | | detect pre-built at <pkg>_dir |; | T | F | F | T | detect pre-built at cmake_prefix_path |; | T | F | F | F | extproj_add, detect superbuild |; | F | | | | no add-on |. **Questions**; - Since it's tricky to detangle plan from implementation, have I violated any of your superbuild principles?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:4343,install,installation,4343,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,2,['install'],['installation']
Deployability,"thanks for the new functionality!. it looks like the git history has gotten tangled so that there are non-you commits and some of your commits are multiples. (the most likely cause is you rebased to upstream, then pulled and pushed to your branch, rather than rebasing to upstream, then force pushing to your branch.) unless you care about the development history, I recommend checking out a new branch from hyperpolar_CCSD, then `git reset` (mixed, the default) back to before any of your commits, then add back everything (yours and others') and make a single commit. then rebase, which should filter out all the work by others so your commit ends up with only your work. then make a new PR (or `git push origin hyperpolar_CCSD_rb:hyperpolar_CCSD --force` to update this PR).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2043#issuecomment-736708921:761,update,update,761,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-736708921,1,['update'],['update']
Deployability,"that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed globally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:1901,install,installed,1901,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,2,['install'],['installed']
Deployability,"the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1068,install,install,1068,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"the consensus from [SO](https://stackoverflow.com/questions/34212036/python-3-installation-on-windows-running-from-command-line) and azure is that Windows has no `python3` cmd. if from #1708, redhat has no `python`, then we're in a pickle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1709#issuecomment-526614553:78,install,installation-on-windows-running-from-command-line,78,https://psicode.org,https://github.com/psi4/psi4/pull/1709#issuecomment-526614553,1,['install'],['installation-on-windows-running-from-command-line']
Deployability,"this has had added to it the option to turn off dispersion during an FISAPT calc. it'd be helpful to get a 3rd review so it's ready to merge after qcng release. presently, master qcng and master psi4 don't play nicely because of renamed dashparams file.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1661#issuecomment-502267181:152,release,release,152,https://psicode.org,https://github.com/psi4/psi4/pull/1661#issuecomment-502267181,1,['release'],['release']
Deployability,this needs a new pcmsolver release and a merge of https://github.com/DEShawResearch/sns-mp2/pull/7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-735636351:27,release,release,27,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735636351,1,['release'],['release']
Deployability,"this'll probably pass CI, but there's a segfault lurking in `nbody-multi-level` with `Dimension` and `wfn.set_scalar_variable` that I haven't tracked down. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64; (gdb) bt; #0 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #1 0x00007fffefd91a81 in psi::Matrix::Matrix(psi::Matrix const*) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #2 0x00007fffefd94334 in psi::Matrix::clone() const () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffefc687b3 in psi::Wavefunction::set_array_variable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<psi::Matrix>) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffefc67fba in psi::Wavefunction::set_gradient(std::shared_ptr<psi::Matrix>) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffeea99b09 in void pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::Wavefunction, std::shared_ptr<psi::Matrix>, pybind11::name, pybind11::is_method, pybind11::sibling, char [34]>(void (psi::Wavefunction::*)(std::shared_ptr<psi::Matrix>), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [34])::{lambda(psi::Wavefunction*, std::shared_ptr<psi::Matrix>)#1}, void, psi::Wavefunction*, std::shared_ptr<psi::Matrix>, pybind11",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368:440,install,install,440,https://psicode.org,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368,1,['install'],['install']
Deployability,"thon 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potentia",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6400,install,install,6400,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['install']
Deployability,ting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13532,Install,Install,13532,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14816,Install,Install,14816,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install packa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15136,Install,Install,15136,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,ting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4con,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7036,Install,Install,7036,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"tionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/su",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4899,install,install,4899,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"tking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3599,Release,Release,3599,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,to do a rc release:; * bump the version and get it on master http://psicode.org/psi4manual/master/manage_git.html#how-to-bump-a-version; * build the explicit packages. don't rely upon usual build-latest but instead set branches directly at https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-multiout/meta.yaml#L10 in psi4-multiout on L & M and https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-docs/meta.yaml#L10 on L. start them building.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-462074622:11,release,release,11,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-462074622,1,['release'],['release']
Deployability,"tps://github.com/CDSherrill>; >; > Oh, and if an error's raised but not caught, it just shows the traceback; > and triggers coffee:; >; > PsiException: Could not converge SCF iterations in 4 iterations.; >; > Failed to converge.; >; > Traceback (most recent call last):; > File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1197,patch,patch,1197,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['patch'],['patch']
Deployability,"txt; @@ -77,10 +77,6 @@ option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); -option(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_UBSAN"" Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_MSAN"" Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF); # These options are relevant to pasture; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); @@ -114,6 +110,14 @@ option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); +option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=address -fno-omit-frame-pointer""); +option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); +option_with_flags(ENA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343290538:1246,install,installed,1246,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343290538,4,['install'],['installed']
Deployability,"ub.com wrote:; > ; > Dear Pis4 developers.; > ; > I've got in issue when link psi4 binary:; > ; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of`tmpnam_r' is dangerous, better use `mkstemp'; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function`posix_tempnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use`mkstemp'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; > builtin_converters.cpp:(.text+0x1286): undefined reference to`PyUnicodeUCS4_AsWideChar'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; > builtin_converters.cpp:(.text+0x455): undefined reference to`PyUnicodeUCS4_FromEncodedObject'; > collect2: error: ld returned 1 exit status; > make[2]: **\* [bin/psi4] Ошибка 1; > make[1]: **\* [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; > make: **\* [all] Ошибка 2; > I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x; > ; > Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; > http://packages.ubuntu.com/trusty/libboost-all-dev; > ; > My python interpreter support UCS-4.; > ; > python -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > python3 -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; > in particular, I only need to generate MOLDEN file from SCF calculations.; > ; > With respect, Vladimir.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/94#issuecomment-100760375:1850,install,installed,1850,https://psicode.org,https://github.com/psi4/psi4/issues/94#issuecomment-100760375,1,['install'],['installed']
Deployability,"ue, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > Fil",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:4159,install,install,4159,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"ue, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6303,install,install,6303,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:39,integrat,integratorxx,39,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547,2,['integrat'],['integratorxx']
Deployability,"uld require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5718,install,installed,5718,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"un_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=m",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:9468,install,install,9468,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"unction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6951,install,install,6951,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"unk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4279,Install,Installing,4279,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"update: the immediate problem in this issue is fixed with something like the below. but there are other problems from the accumulation of qcengine harvesting, distributed driver, and neglecting this Psi4/Cfour mode. I should have a PR later today. ```; - if core.get_global_option('BASIS') == '':; + if core.get_global_option('BASIS') in ["""", ""(AUTO)""]:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1157965071:0,update,update,0,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1157965071,1,['update'],['update']
Deployability,updated OP with current formatting example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2001#issuecomment-683462708:0,update,updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2001#issuecomment-683462708,1,['update'],['updated']
Deployability,"updated the PR:; * removed unused imports; * switched to psi4.drivers.constants for conversion factors; * reformatted files with yapf, I had malfunctioning commit hook when submitting original PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-821106659:0,update,updated,0,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-821106659,1,['update'],['updated']
Deployability,"ux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 2 entry O line 190 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 3-4 entry H line 20 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; ```; - [x] 7. soon after all the new basis stuff went in Nov 2014, Jet added another layer in qcdb pyconstruct to make CABS basis sets work. unfortunately, this broke one of the key principles/advantages of the new scheme. not that i remember exactly what that principle was, though it was probably that the basis could be re-constituted by `basis mybas {...}` mybas name; - [x] 8. fix the 5-zeta and 6-zeta orbital defaulting to quad-zeta fitting as in noted in #144 ; - [x] 9. Switch out Pople basis fitting bases to appropriate-zeta def2-*-ri/jkfit, rather than Dunning ri/jkfit, as former has fewer element holes. (as noted in #144); - [x] 10. Create (maybe?) another layer of defaulting so that aug-cc-pvdz orbital uses aug-cc-pvdz-ri/jkfit when available (as at present), then def2-tzvp-ri/jkfit (not at present), then the ultimate default def2-qzvpp-ri/jkfit (as at present). This way don't get high AM cost on supposedly cheap orbital basis sets. (as noted in #144); - [x] 11. drop DUAL and pick up perhaps others in http://psicode.org/psi4manual/master/basissets_byfamily.html; - [x] 12. thoroughly update basisset.rst, especially examples; - [x] 13. reexamine the PSIPATH basis load ordering and make sure that there's a way to install new basissets in the conda package w/o overwriting library files; - [x] 14. the python object name (mybas in above) is the key handle by which a user-def basis can be reapplied to new molecules, but this can be anonymous (if mybas omitted definitely; and maybe if defined conventionally through ""set basis"" if all turned into functions). would be handy to have a name to print in the output file (some sort of aug-cc-pvdz+cc-pvdz+6-31g) as well as the handle by which it's retrievable. That's all I can think of for now. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-189541354:3143,update,update,3143,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-189541354,2,"['install', 'update']","['install', 'update']"
Deployability,"v37/bin/x86_64-conda_cos6-linux-gnu-g++; -- Check for working CXX compiler: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/x86_64-conda_cos6-linux-gnu-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /home/psilocaluser/toolchainconda/envs/p4dev37/bin/python3.7 (found version ""3.7.1"") ; -- Found PythonLibs: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libpython3.7m.so; -- pybind11 v2.2.3; -- Configuring done; -- Generating done; -- Build files have been written to: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build; [ 61%] Performing build step for 'pybind11_external'; [ 65%] Performing install step for 'pybind11_external'; Install the project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:1604,Install,Install,1604,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,5,"['Install', 'Release', 'configurat']","['Install', 'Installing', 'Release', 'configuration']"
Deployability,"ver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasiria",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:8696,install,install,8696,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"vided into several (3-4) regions where the; > outer region gets the most accurate grid and the grid get step-wise more; > coarse towards the inner region(s).; >; > Additionally this PR changes the Bragg-Slater (BS) radii and completes the; > Treutler-Ahlrichs integration code with the recommended mapping values. Old; > radii were of unknown origin.; >; > *Because of the updated BS radii, this PR will impact the total energies; > of any DFT calculation and can change how many grid points are generated; > even without pruning.* (11/33 DFT tests fail); > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - updated BS radii and extended to 104 elements; > - implementation of missing Treutler-Eta mapping parameter; > - DFT_PRUNE_TYPE keyword:; > - Treutler grid pruning (DFT_PRUNE_TYPE=TREUTLER); > - a more robust grid pruning (DFT_PRUNE_TYPE=ROBUST); > - old pruning using a function (DFT_PRUNE_TYPE=FUNCTION); > - modified Becke mu from Ochsenfeld for smoother integration (however; > no time savings); > - possibility to scale Treutler-Etas to better treat diffuse basis sets; > - better print out of options; > - testing and error overview; > - option to properly disable all pruning (currently only indirect way); >; > Questions; >; > - How to C++? Explicit guidance or help is welcome.; > - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Stat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:1058,update,updated,1058,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,4,"['integrat', 'update']","['integration', 'updated']"
Deployability,"w/o reinvestigating, this is my memory of what's going on:. props2 is a Cartesian-with-variable geometry (y-coord gets updated in a loop) with _no explicit_ freeze com/orient. System is a cation so origin of *poles matters. Test ref values are computed at COM. For a long time this was fine b/c in the absence of user forbidding it, molecule was moved to COM & std orientation and computed==expected. But there's a deep pit that both users and developers can fall into wrt scanning over coordinates of a Cartesian system -- values you're updating aren't in same coord sys as values being specified. Results can be jarring. So DGAS fixed with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L3110-L3117 . This fills the pitfall, but now the props2 case doesn't get moved to COM, so computed != expected. That is, until psi4/psi4#808 where we explictly instruct moving to COM so that test passes again. Naturally, a Z-Mat molecule would always go to COM and wouldn't have this distinction. This is all perfectly logical. Trouble is consistency btwn Cart/ZMat and what users will be least confused by.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/782#issuecomment-332296506:119,update,updated,119,https://psicode.org,https://github.com/psi4/psi4/issues/782#issuecomment-332296506,1,['update'],['updated']
Deployability,"we are looking forward to deploying it, so the sooner the better. gianni de fabritiis. On Mon, Jul 23, 2018 at 11:18 AM, Lori A. Burns <notifications@github.com>; wrote:. > @raimis <https://github.com/raimis>, it might be good to assess the; > state-of-the-port. That is, are we waiting on you to check ""ready for; > merge"", or are you waiting on us for reviews, or are you waiting on us for; > code changes to do away with linux-bound code? On the last point, #953; > <https://github.com/psi4/psi4/pull/953> and #1098; > <https://github.com/psi4/psi4/pull/1098> are candidates (see question at; > preceding comment), but to spare you the rebase, it'd be nice to get your; > PRs in first, unless you need the changes.; >; > Thanks very much for all your work on porting psi. I just want to make; > sure we're not at a polite impasse.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/933#issuecomment-407095142>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHaqOtQlJAAnmrtgpTrfN9o8lC6qsA3Wks5uJelFgaJpZM4ShQlu>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-407100752:26,deploy,deploying,26,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407100752,1,['deploy'],['deploying']
Deployability,"weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could work for all the downstreams on c-f that want to use it. (It could be worse -- in integral package land, there's also commonly source-generation-time options :-); * the production-level Linux libint2 package has 26k source files, takes way more than 6h to build running on 12 cores, and needs `ulimit` reset on the building computer to complete; * Windows libint2 package has only ever been built on @andysim 's laptop. I worry that between the careful choice of compiler he had to make and the clang-cl details that something would conflict with c-f's locked-down build tooling. Of course we get away",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1965,release,release,1965,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['release'],['release']
Deployability,"well, I've done; conda update psi4 -c psi4/label/dev; which got ; gau2grid: 0.1-0 psi4/label/dev; psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; But now psi4 doesn't work from my Anaconda Python3:; Traceback (most recent call last):; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 54, in <module>; from . import core; ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""cc4.py"", line 1, in <module>; import psi4; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370160912:23,update,update,23,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370160912,1,['update'],['update']
Deployability,"were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3477,install,install,3477,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"what should be happening here in the CI is that we've got a mixture of; * Libint, from conda psi4, built with Intel 2019 compilers, not calling MKL; * numpy, from conda defaults, built with GCC, calling MKL; * psi4, built on Azure with GCC or Clang, calling MKL; * MKL, distributed from conda but built by Intel with ? compilers (we'll assume Intel). My local tests with the reported `MKL_CBWR` are the same as the bullets except psi4 was build with Intel 2019.4 compilers. To test, I've solely been switching out MKL package with `conda install mkl=2019.4` or `=2020.1`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896#issuecomment-633695142:538,install,install,538,https://psicode.org,https://github.com/psi4/psi4/pull/1896#issuecomment-633695142,1,['install'],['install']
Deployability,"xist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6282,install,installed,6282,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"xist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║█",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5807,install,installed,5807,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"y makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue, but it sounds like an extra `rm -rf` or two gets the desired behavior?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:1190,install,install,1190,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,3,['install'],['install']
Deployability,"y"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3907,install,install,3907,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"y"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:6051,install,install,6051,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"yeah, you see the pink & blue line at top of the psi4 main page? Above it says commits, branches, **releases**, contributors, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-273780555:100,release,releases,100,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-273780555,1,['release'],['releases']
Deployability,"you're right. it's hitting [this logic](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasisset.py#L802) which didn't have aux-basis-sets-derived-from-orbital-basis-sets in mind when it was derived. two solutions:. a) forget envvar `PSIPATH`. instead, put the `ano-rcc.gbs` in the same directory as the input file. `.` is in the search path.; b) edit `libraryPath` to `basisPath` [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasisset.py#L811) and remake (and possibly re-install) to copy into right place. Without write access, (a) is probably the way to go. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487691447:518,install,install,518,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487691447,1,['install'],['install']
Deployability,"your time at the moment, because the virtual dimension is way smaller by using localized orbitals. But for that I need to implement the full 4-RDM instead of the diagonal one, and that is not for the very near future. The cumulant approximation is also ready on the other hand, but will only be used in conjunction with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in . File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy']lowername. File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'); ```. For the record I copy my file 'pymodule.py' here:. ```; import psi4; import re; import os; import inputparser; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; import p4util; from p4xcpt import *. def run_dmrg(name, **kwargs):; r""""""Function encoding ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1592,update,updated,1592,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,2,['update'],['updated']
Deployability,"“; At present, only SCF quantities will appear in the FCHK.”. That’s not true - both the SCF and post-HF quantities are printed out. The code just assumes that if ref_wfn exists, the main density is a correlated one. Susi Lehtola; Sent from my phone so excuse my brevity. On 2 Feb 2019, at 18.20, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. @loriab approved this pull request. I added a commit with some notes. Very glad to have this patch up. Thanks!. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/pull/1475#pullrequestreview-199353163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ5YM_MNpT_blnZqjipAEXi8HLMe3ks5vJbrZgaJpZM4Z_OW5>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1475#issuecomment-459979332:472,patch,patch,472,https://psicode.org,https://github.com/psi4/psi4/pull/1475#issuecomment-459979332,1,['patch'],['patch']
Deployability,"─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1b,<1.1.2a , which can be installed;; │ ├─ python [2.7.16|2.7.17] would require; │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ └─ python 2.7.18, which can be installed;; ├─ psi4 1.1+add49b9 would require; │ └─ gcc-5-mp , which requires; │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ └─ blas 1.0 mkl, which can be installed;; └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; └─ pychemps2 1.7.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:8360,install,installed,8360,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"│ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /███████████████████████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2376,install,installed,2376,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"│ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔█",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2569,install,installed,2569,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be insta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:4531,install,installed,4531,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; └─ psi4 is installable with the potential options; ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ op",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:7689,install,installed,7689,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.8']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:1367,install,installed,1367,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Energy Efficiency,"								 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10659,Energy,Energy,10659,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"								 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 				",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10721,Energy,Energy,10721,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,						 Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]			 Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]			 Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000								 Nuclear repulsion = 0.000000000000000. Charge = 0											 Charge = 0; Multiplicity = 1											 Multiplicity = 1; Electrons = 10											 Electrons = 10; Nalpha = 5											 Nalpha = 5; Nbeta = 5											 Nbeta = 5. ==> Algorithm <==											 ==> Algorithm <==. SCF Algorithm Type is DIRECT.										 SCF Algorithm Type is DIRECT.; DIIS enabled.												 DIIS enabled.; MOM disabled.												 MOM disabled.; Fractional occupation disabled.									 Fractional occupation disabled.; Guess Type is CORE.											 Guess Type is CORE.; Energy threshold = 1.00e-06										 Energy threshold = 1.00e-06; Density threshold = 1.00e-05										 Density threshold = 1.00e-05; Integral threshold = 1.00e-12										 Integral threshold = 1.00e-12. ==> Primary Basis <==											 ==> Primary Basis <==. -AO BASIS SET INFORMATION:									 |	 Basis Set: CC-PVDZ; Name = CC-PVDZ								 |	 Blend: CC-PVDZ; Blend = CC-PVDZ								 |	 Number of shells: 6; Total number of shells = 6									 |	 Number of basis function: 14; Number of primitives = 22									 |	 Number of Cartesian functions: 15; Number of AO = 15									 |	 Spherical Harmonics?: true; Number of SO = 14									 |	 Max angular momentum: 2; Maximum AM = 2									 <; Spherical Harmonics = TRUE								 <; 												 <; -Contraction Scheme:										 <; Atom Type All Primitives // Shells:							 <; ------ ------ --------------------------							 <; 1 NE 17s 4p 1d // 3s 2p 1d 							 <. ==> DFT Potential <==											 ==> DFT Potential <==. => Composite Functional: FT97 <= 									 => Composite Functional:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:3124,Energy,Energy,3124,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"					 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|					 Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -123.06842016548131 -1.23068e+02 5.10688e-01 DIIS			 |	 @RKS iter 1: -123.27362297901736 -1.23274e+02 1.80808e+04 DIIS; @RKS iter 2: -124.46188217449202 -1.39346e+00 6.10863e-01 DIIS			 |	 @RKS iter 2: -73.76905164751832 4.95046e+01 8.29835e+08 DIIS; @RKS iter 3: -128.81098734456091 -4.34911e+00 6.36107e-02 DIIS			 |	 @RKS iter 3: -66.70632235195494 7.06273e+00 6.43558e+07 DIIS; @RKS iter 4: -128.84997903672445 -3.89917e-02 3.37243e-03 DIIS			 |	 Occupation by irrep:; @RKS iter 5: -128.85006926342885 -9.02267e-05 1.88570e-03 DIIS			 |	 Ag B1g B2g B3g Au B1u B2u B3u ; @RKS iter 6: -128.85010506058651 -3.57972e-05 1.22444e-04 DIIS			 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; @RKS iter 7: -128.85010520037952 -1.39793e-07 1.18298e-05 DIIS			 <; @RKS iter 8: -128.85010519896633 1.41318e-09 2.04953e-05 DIIS			 <; @RKS iter 9: -128.85010519995217 -9.85835e-10 7.24431e-06 DIIS			 <; Energy and wave function converged.								 <; 												 <; 												 <; ==> Post-Iterations <==									 <; 												 <; Electrons on quadrature grid:								 <; Ntotal = 9.9999999997 ; deviation = -3.407e-10 					 <; 												 <; Orbital Energies [Eh]									 <; ---------------------									 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.7559918",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:9346,Energy,Energy,9346,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"			 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 >	 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. *** tstop() called on psinet at Tue Jan 5 23:59:30 2021					 |	 @RKS",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10830,Energy,Energy,10830,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"	 <; Electrons on quadrature grid:								 <; Ntotal = 9.9999999997 ; deviation = -3.407e-10 					 <; 												 <; Orbital Energies [Eh]									 <; ---------------------									 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]		",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10558,Energy,Energy,10558,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency," 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by QChem reproduce the results provided in the Trofimov, Stelter, Schirmer paper. However, the energies provided by Psi4 seem to have an inconsistent deviation from the values: for some states, the energies reported are near e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2388,energy,energy,2388,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0; 11 8 4 -0.2003286173 -0.0000000000 0.0000000230 0. CISD iterations converged!. CISD variational energy: -0.200328617292; CISD transition energy: -0.200328617850. OS SCS-MP2 correlation energy: -0.179813193864; SS SCS-MP2 correlation energy: -0.016670275217; SCS-MP2 correlation energy: -0.196483469081; * SCS-MP2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:10701,Allocate,Allocate,10701,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Allocate'],['Allocate']
Energy Efficiency," # Q-Chem; > e_opt = -139.5573922 # Q-Chem; > #norm_g_opt # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; > ; > # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); > compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); > compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(odd_g_start, g0, 3, 'start grad'); > ; > def test_badodd_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); > compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); > compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'); > ; > test_norm_start(normz); > test_zero_grad(normz); > ; > # And behold, the initial gradient matches Q-Chem, the optimization; > ; > # progresses nicely, the RMS Force column goes to zero, and the gradient; > ; > # at the end is zero.; > ; > # start nre....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:3412,ENERGY,ENERGY,3412,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['ENERGY'],['ENERGY']
Energy Efficiency, #2: adc2 ............................. Passed 43.73 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 11.68 sec; Start 5: casscf-sa-sp; 12/411 Test #3: casscf-fzc-sp .................... Passed 19.26 sec; Start 6: ao-casscf-sp; 13/411 Test #6: ao-casscf-sp ..................... Passed 8.25 sec; Start 7: casscf-sp; 14/411 Test #5: casscf-sa-sp ..................... Passed 23.99 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.23 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 124.34 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 13.78 sec; Start 11: cbs-delta-energy; 18/411 Test #7: casscf-sp ........................ Passed 38.07 sec; Start 12: cbs-parser; 19/411 Test #10: castup3 .......................... Passed 15.65 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #316: sapt2 ............................ Passed 350.80 sec; Start 14: cbs-xtpl-energy; 21/411 Test #394: python-vibanalysis ............... Passed 958.22 sec; Start 15: cbs-xtpl-freq; 22/411 Test #14: cbs-xtpl-energy .................. Passed 14.64 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #15: cbs-xtpl-freq .................... Passed 9.77 sec; Start 17: cbs-xtpl-opt; 24/411 Test #12: cbs-parser ....................... Passed 69.31 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #16: cbs-xtpl-gradient ................ Passed 32.38 sec; Start 20: cc1; 26/411 Test #19: cbs-xtpl-wrapper ................. Passed 84.37 sec; Start 21: cc10; 27/411 Test #17: cbs-xtpl-opt ..................... Passed 118.78 sec; Start 22: cc11; 28/411 Test #20: cc1 .............................. Passed 108.09 sec; Start 23: cc12; 29/411 Test #21: cc10 ............................. Passed 56.95 sec; Start 24: cc13; 30/411 Test #22: cc11 ............................. Passed 46.44 sec; Start 26: cc13b; 31/411 Test #23: cc12 ............................. Passed 31.76 sec; Start 27: cc13c; 32/411 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:2142,energy,energy,2142,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency, #303: pywrap-basis ..................... Passed 17.25 sec; Start 10: castup3; 231/413 Test #102: cubeprop ......................... Passed 10.10 sec; Start 84: cdomp2-1; 232/413 Test #5: casscf-sa-sp ..................... Passed 15.42 sec; Start 228: mp2-1; 233/413 Test #368: dft-smoke ........................ Passed 15.59 sec; Start 367: cubeprop-esp; 234/413 Test #326: sapt8 ............................ Passed 15.45 sec; Start 288: props3; 235/413 Test #352: dft-custom ....................... Passed 16.19 sec; Start 219: mints6; 236/413 Test #342: soscf-large ...................... Passed 14.89 sec; Start 91: cepa1; 237/413 Test #141: dfomp2-1 ......................... Passed 13.41 sec; Start 287: props2; 238/413 Test #199: freq-isotope1 .................... Passed 17.04 sec; Start 126: dfccsdl1; 239/413 Test #243: ocepa-grad1 ...................... Passed 15.58 sec; Start 370: scf-freq1; 240/413 Test #340: scf7 ............................. Passed 17.37 sec; Start 14: cbs-xtpl-energy; 241/413 Test #268: opt1-fd .......................... Passed 14.23 sec; Start 139: dfmp2-grad4; 242/413 Test #110: dcft2 ............................ Passed 11.74 sec; Start 129: dfccsdt1; 243/413 Test #84: cdomp2-1 ......................... Passed 10.02 sec; Start 245: ocepa1; 244/413 Test #367: cubeprop-esp ..................... Passed 9.60 sec; Start 159: dfrasscf-sp; 245/413 Test #10: castup3 .......................... Passed 13.10 sec; Start 359: tu4-h2o-freq; 246/413 Test #228: mp2-1 ............................ Passed 12.23 sec; Start 371: dft-jk; 247/413 Test #288: props3 ........................... Passed 13.97 sec; Start 272: opt4; 248/413 Test #219: mints6 ........................... Passed 12.99 sec; Start 343: soscf-ref; 249/413 Test #126: dfccsdl1 ......................... Passed 12.21 sec; Start 374: dft-custom-hybrid; 250/413 Test #287: props2 ........................... Passed 14.05 sec; Start 337: scf4; 251/413 Test #245: ocepa1 ........................... Passed 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:22621,energy,energy,22621,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency, #305: pywrap-checkrun-rohf ............. Passed 171.95 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 2.08 sec; Start 392: python-cc54; 378/411 Test #374: dft-custom-gga ................... Passed 29.34 sec; Start 393: python-3-index-transforms; 379/411 Test #391: python-mints2 .................... Passed 3.28 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.88 sec; Start 396: python-memdfjk; 381/411 Test #396: python-memdfjk ................... Passed 0.92 sec; Start 397: json-v11-energy; 382/411 Test #397: json-v11-energy .................. Passed 3.85 sec; Start 398: json-v11-gradient; 383/411 Test #393: python-3-index-transforms ........ Passed 10.30 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 3.98 sec; Start 400: json-schema-1-ghost; 385/411 Test #400: json-schema-1-ghost .............. Passed 1.26 sec; Start 401: json-schema-1-orient; 386/411 Test #399: json-schema-1-energy ............. Passed 3.33 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 403: json-schema-1-gradient; 388/411 Test #401: json-schema-1-orient ............. Passed 2.05 sec; Start 404: json-schema-1-properties; 389/411 Test #392: python-cc54 ...................... Passed 17.13 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.61 sec; Start 406: skeletonaointegrals; 391/411 Test #404: json-schema-1-properties ......... Passed 1.34 sec; Start 407: skeletondfmp2; 392/411 Test #405: skeleton ......................... Passed 1.17 sec; Start 408: skeletonmointegrals; 393/411 Test #406: skeletonaointegrals .............. Passed 1.57 sec; Start 409: skeletonscf; 394/411 Test #409: skeletonscf ...................... Passed 0.65 sec; Start 410: skeletonsointegrals; 395/411 Test #408: skeletonmointegrals .............. Passed 2.19 sec; Start 411: skelet,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:36226,energy,energy,36226,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency, #390: python-mints9 .................... Passed 1.89 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.96 sec; Start 392: python-cc54; 386/411 Test #389: python-pubchem ................... Passed 50.14 sec; Start 393: python-3-index-transforms; 387/411 Test #373: dft-custom-mgga .................. Passed 175.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.81 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 0.95 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.53 sec; Start 398: json-v11-gradient; 391/411 Test #393: python-3-index-transforms ........ Passed 10.54 sec; Start 399: json-schema-1-energy; 392/411 Test #398: json-v11-gradient ................ Passed 2.05 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 1.58 sec; Start 401: json-schema-1-orient; 394/411 Test #399: json-schema-1-energy ............. Passed 4.08 sec; Start 402: json-schema-1-throws; 395/411 Test #401: json-schema-1-orient ............. Passed 2.72 sec; Start 403: json-schema-1-gradient; 396/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 404: json-schema-1-properties; 397/411 Test #403: json-schema-1-gradient ........... Passed 1.76 sec; Start 405: skeleton; 398/411 Test #404: json-schema-1-properties ......... Passed 1.78 sec; Start 406: skeletonaointegrals; 399/411 Test #392: python-cc54 ...................... Passed 25.14 sec; Start 407: skeletondfmp2; 400/411 Test #405: skeleton ......................... Passed 1.92 sec; Start 408: skeletonmointegrals; 401/411 Test #406: skeletonaointegrals .............. Passed 2.03 sec; Start 409: skeletonscf; 402/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 410: skeletonsointegrals; 403/411 Test #407: skeletondfmp2 .................... Passed 1.80 sec; Start 411: skelet,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:36850,energy,energy,36850,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency, #50: cc32 ............................. Passed 47.12 sec; Start 210: gibbs; 33/415 Test #129: dfccsd-t-grad1 ................... Passed 103.60 sec; Start 149: dfomp3-1; 34/415 Test #309: pywrap-alias ..................... Passed 141.43 sec; Start 346: scf5; 35/415 Test #94: ci-multi ......................... Passed 59.86 sec; Start 317: pywrap-db1; 36/415 Test #112: dcft3 ............................ Passed 75.08 sec; Start 136: dfmp2-ecp; 37/415 Test #128: dfccsd-grad1 ..................... Passed 94.95 sec; Start 263: omp2p5-2; 38/415 Test #11: cbs-delta-energy ................. Passed 615.43 sec; Start 102: ci-property; 39/415 Test #3: casscf-fzc-sp .................... Passed 55.64 sec; Start 256: omp2-2; 40/415 Test #210: gibbs ............................ Passed 51.08 sec; Start 403: python-cc54; 41/415 Test #136: dfmp2-ecp ........................ Passed 32.87 sec; Start 323: rasscf-sp; 42/415 Test #149: dfomp3-1 ......................... Passed 52.09 sec; Start 14: cbs-xtpl-energy; 43/415 Test #346: scf5 ............................. Passed 46.11 sec; Start 5: casscf-sa-sp; 44/415 Test #317: pywrap-db1 ....................... Passed 41.80 sec; Start 85: cdomp2-1; 45/415 Test #263: omp2p5-2 ......................... Passed 30.33 sec; Start 179: extern1; 46/415 Test #102: ci-property ...................... Passed 28.56 sec; Start 386: pywrap-bfs; 47/415 Test #256: omp2-2 ........................... Passed 32.02 sec; Start 127: dfccsdl1; 48/415 Test #371: x2c1 ............................. Passed 130.82 sec; Start 4: casscf-semi; 49/415 Test #5: casscf-sa-sp ..................... Passed 14.54 sec; Start 205: fnocc4; 50/415 Test #14: cbs-xtpl-energy .................. Passed 17.93 sec; Start 377: dft-smoke; 51/415 Test #85: cdomp2-1 ......................... Passed 16.80 sec; Start 126: dfccsd1; 52/415 Test #116: dcft7 ............................ Passed 408.77 sec; Start 132: dfmp2-1; 53/415 Test #4: casscf-semi ...................... Passed 15.25 sec; Start 25,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:4355,energy,energy,4355,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency," 'MCSCF_MAXITER': 100; }). # Set memory; psi4.set_memory('8000 MB'). # Define CF molecule geometry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1421,ENERGY,ENERGY,1421,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,1,['ENERGY'],['ENERGY']
Energy Efficiency," (a.u.), 11.4718175 (eV); 	3 A state: 0.4538994 (a.u.), 12.3512305 (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1602,energy,energy,1602,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1998,energy,energy,1998,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1668,energy,energy,1668,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," - AB in the AB basis with `num_frozen_docc` set accordingly for AB. This scheme worked very well, until it came time to run SAPT0 calcs. As I admittedly hadn't thought through the effect of an incorrect `n_frozen_docc` on the monomer calcs done within the SAPT0 dimer calc (and presumed them to be at the HF level anyway), I didn't think to check for correct behavior. . The only place where our frozen-core lookup table disagrees with psi4's is for some more exotic elements (transition metals), so for now my solution is to just use `freeze_core true` for all SAPT0 calcs and go about my life. And when I thought the bad setting _just_ caused segfaults, I was fine to assume that all calculations that ran to completion were obviously OK. Now seeing that there's some shade of undefined behavior leading to memory corruption possibly going on, I'd like to understand what is going wrong so I can figure out what's likely impacted... cases where the energy is obviously and egregiously wrong (like above) are easy, but I'm worried more about subtle incorrectness. As for the general fix -- if `num_frozen_docc` is disabled for SAPT0, then it becomes impossible for a user to impose their own beliefs about frozen orbitals in tricky cases like transition metals, which seems... bad. Since it does impact the dispersion portion of the calc, it needs to be user-mutable. This setting *shouldn't* be actually impacting the HF energies, and fixing that strange interaction seems like most of the battle. I'm less sure of what to do in the MP2 case, since it does seem relevant that the user should be able to specify their own core policy as required... At the risk of further complication, would it make sense to implement either:; 1. The ability for `num_frozen_docc` to take in a tuple the same length of the number of fragments in the active `Molecule` (such that correct behavior can be inferred in cases like SAPT where both monomer and dimer calcs are run in a global context); 2. The ability to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1207254380:1685,energy,energy,1685,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1207254380,1,['energy'],['energy']
Energy Efficiency," -------- ------ ------ ------; 1 R(1,2) = 1.257186 -0.000456 0.000097 1.257282; 2 R(2,3) = 1.320898 -0.000254 0.000757 1.321654; 3 R(3,4) = 1.225642 -0.003646 0.000429 1.226071; 4 R(4,5) = 1.320898 -0.000254 0.000695 1.321593; 5 R(5,6) = 1.257186 -0.000456 0.000044 1.257229; 6 B(1,2,3) = 178.583593 0.000071 0.528506 179.112099; 7 L(1,2,3) = 180.000000 0.000000 0.000000 180.000000; 8 B(2,3,4) = 179.931146 0.000000 -0.988620 178.942526; 9 B(3,4,5) = 179.931146 0.000000 -0.989069 178.942077; 10 B(4,5,6) = 178.583593 0.000071 0.528859 179.112452; 11 L(4,5,6) = 180.000000 0.000000 0.000000 180.000000; 12 L(2,3,4) = 180.000000 0.000000 0.000000 180.000000; 13 L(3,4,5) = 180.000000 0.000000 0.000000 180.000000; 14 D(2,3,4,5) = 0.000000 0.000000 -0.010006 -0.010006; ---------------------------------------------------------------------------; ERROR: Symmetry operation 1 did not map atom 1 to another atom:; Molecule:; Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; B 3.191343577854 0.013957984675 -0.026816152712 11.009305406000; N 1.934432141701 -0.005408166154 -0.003207218616 14.003074004780; C 0.613034927883 -0.005322945846 0.022855273246 12.000000000000; C -0.613034934808 -0.005324425017 0.024405755139 12.000000000000; N -1.934432149876 -0.005408605424 0.001676100671 14.003074004780; B -3.191343562754 0.013958534879 -0.018913757728 11.009305406000. attempted to find atom at; -6.030765 0.026377 0.050675; atom_map() throwing PsiException; Could not symmetrize geometry in OPT::MOLECULE::SYMMETRIZE_GEOM(). **** Optimization has failed! (in 4 steps) ****; --------------------------; OPTKING Finished Execution; --------------------------; Cleaning optimization helper files. *** PSI4 exiting successfully. Buy a developer a beer!; ```. not sure what is wrong in my ""starter"" geometry. Also the final message (""exiting succ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-149031508:1224,charge,charge,1224,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-149031508,1,['charge'],['charge']
Energy Efficiency, -0.0006158812 0.0052763771 6753; 6 6 8 -3.9689037022 -0.0002486628 0.0017743273 6798; 7 7 9 -3.9688426839 0.0000610183 0.0009217340 6861; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 6897; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4774,energy,energy,4774,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency," -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]										 Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.8555						 X: 0.0000 Y: 0.0000 Z: 0.8555. Electronic Dipole Moment: [e a0]									 Electronic D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:17148,Energy,Energy,17148,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency," -0.673509 ; 1B2 -0.647734 1B1 -0.561066 							 |	 1B1 -0.647734 1B2 -0.561066 . Alpha Virtual: 				 Alpha Virtual: . 4A1 0.223681 2B2 0.784656 2B1 0.835171 				 |	 4A1 0.223681 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Compu",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16687,Energy,Energy,16687,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency," -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to build up from scratch the frozen core Hamiltonian; > associated to the (4,3) active space. I used for this the resulting; > Optimized MO coeff matrix obtained from SA-CASSCF Psi4. Diagonalizing this; > Hamiltonian gives the following two lowest states expressed in the active; > space :; > | Psi_0 > = 0.149|011011⟩ - 0.149|100111⟩ - 0.691|110110⟩ + 0.691|111001⟩; > | Psi_1 > = 0.207|001111⟩ - 0.291|011110⟩ + 0.291|101101⟩ + 0.015|110011⟩; > - 0.887|111100⟩; > (NB : the HF determinant is |111100⟩ ); >; > With this diagonalization, we clearly find same coefficients but with; > opposite signs. As a double check, I also computed the energy of these; > states and obtained :; > E_0 = -93.93144865003578 Ha; > E_1 = -93.90255033754423 Ha; >; > Which exactly coincides with the energy obtained in the Psi4 OUTPUT. Do; > you have a clue why such a pb arises in the Psi4 output ?; >; > Thanks a lot for you answer; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2008>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5UPLCBFDRNHBMTEAXTSGD4ZDANCNFSM4RPGPFOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:4403,energy,energy,4403,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345,4,['energy'],['energy']
Energy Efficiency," -0.927500000000 0.000000000000; > H -0.000000000000 3.289000000000 0.000000000000; > H 0.000000000000 -3.289000000000 0.000000000000; > H 2.848357553047 1.644500000000 0.000000000000; > H 2.848357553047 -1.644500000000 0.000000000000; > H -2.848357553047 1.644500000000 0.000000000000; > H -2.848357553047 -1.644500000000 0.000000000000; > ```; > ; > At the end of optking:; > ; > ```; > Writing optimization data to binary file.; > Structure for next step:; > Cartesian Geometry (in Angstrom); > C -0.0000000000 0.9816237969 0.0000000000; > C 0.0000000000 -0.9816237969 0.0000000000; > C 0.8501111451 0.4908118984 0.0000000000; > C 0.8501111451 -0.4908118984 0.0000000000; > C -0.8501111451 0.4908118984 0.0000000000; > C -0.8501111451 -0.4908118984 0.0000000000; > H -0.0000000000 1.7404639720 0.0000000000; > H 0.0000000000 -1.7404639720 -0.0000000000; > H 1.5072860141 0.8702319860 0.0000000000; > H 1.5072860141 -0.8702319860 0.0000000000; > H -1.5072860141 0.8702319860 0.0000000000; > H -1.5072860141 -0.8702319860 0.0000000000; > ```; > ; > The new SCF:; > ; > Geometry (in Bohr), charge = 0, multiplicity = 1:; > ; > Center X Y Z; > ; > ---; > ; > ```; > C -0.000000000000 1.855000000000 0.000000000000; > C 0.000000000000 -1.855000000000 0.000000000000; > C 1.606477124020 0.927500000000 0.000000000000; > C 1.606477124020 -0.927500000000 0.000000000000; > C -1.606477124020 0.927500000000 0.000000000000; > C -1.606477124020 -0.927500000000 0.000000000000; > H -0.000000000000 3.289000000000 0.000000000000; > H 0.000000000000 -3.289000000000 0.000000000000; > H 2.848357553047 1.644500000000 0.000000000000; > H 2.848357553047 -1.644500000000 0.000000000000; > H -2.848357553047 1.644500000000 0.000000000000; > H -2.848357553047 -1.644500000000 0.000000000000; > ```; > ; > In other folders (than /tmp) it works fine. Maybe change the naming scheme?; > ; > Best,; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/66.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/66#issuecomment-73061426:2493,charge,charge,2493,https://psicode.org,https://github.com/psi4/psi4/issues/66#issuecomment-73061426,1,['charge'],['charge']
Energy Efficiency," -123.10132047688978 -4.49697e-02 6.79382e-01 DIIS; @RKS iter 3: -128.77814169956412 -5.67682e+00 1.11592e-01 DIIS; @RKS iter 4: -128.89363525981292 -1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP...........................................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12438,Energy,Energy,12438,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency," -2.479 0.000 0.000; > H -1.240 -2.147 0.000; > H 1.240 -2.147 0.000; > C 2.798 0.000 0.000; > C 4.020 0.000 0.000; > C 5.422 0.000 0.000; > C 8.214 0.000 0.000; > C 7.516 1.209 0.000; > C 6.120 1.209 0.000; > C 6.120 -1.209 0.000; > C 7.516 -1.209 0.000; > H 8.058 2.147 0.000; > H 5.578 2.147 0.000; > H 9.297 0.000 0.000; > H 5.578 -2.147 0.000; > H 8.058 -2.147 0.000; > ; > symmetry c1; > units angstrom; > }; > ; > set globals {; > reference rhf; > basis cc-pvdz; > #freeze_core true; > scf_type out_of_core; > dipmom true; > num_roots 4; > }; > ; > set scf d_convergence 10; > set detci e_convergence 8; > ; > ## thisenergy = energy('fci'); > ; > I am getting this erorr and i am not able to correct this. any one can; > help me ?; > ; > PSIO_ERROR: unit = 41, errval = 12; > PSIO_ERROR: 12 (error writing to file); > Traceback (most recent call last):; > File """", line 58, in; > File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; > procedures['energy']lowername http://lowername,%20**kwargs; > File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; > psi4.transqt2(); > RuntimeError: PSIO Error; > file: /home/psi4.0b5/src/lib/libpsio/error.cc; > line: 116; > ; > Output File; > ; > ---; > ; > ```; > PSI4: An Open-Source Ab Initio Electronic Structure Package; > PSI 4.0.0-beta5 Driver; > ```; > ; > J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; > F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; > M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; > W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; > and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93); > ; > ```; > Additional Contributions by; > ```; > ; > ## A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; > ; > Process ID: 4249; > PSI4DATADIR: /usr/local/psi4/share/psi; > ; > Using LocalCommunicator (Number of processes = 1); > ; > Memory level set to 256.000 MB; > ; > ## =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:1930,energy,energy,1930,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,2,['energy'],['energy']
Energy Efficiency, -8.61519e-10 4.12144e-07 DIIS; @UHF iter 10: -38.91737869238197 -5.08393e-11 6.23767e-08 DIIS; @UHF iter 11: -38.91737869238317 -1.20082e-12 1.38186e-08 DIIS; @UHF iter 12: -38.91737869238320 -3.55271e-14 2.41469e-09 DIIS; @UHF Final Energy: -38.91737869238320; UHF NO Occupations:; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; Reference wfn = UHF; ROHF Reference; SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information).; @ROHF iter SAD: -38.17324740294831 -3.81732e+01 0.00000e+00 ; @ROHF iter 1: -38.90234369081286 -7.29096e-01 6.50261e-03 DIIS; @ROHF iter 2: -38.91242369713282 -1.00800e-02 1.83961e-03 DIIS; @ROHF iter 3: -38.91339017288891 -9.66476e-04 2.69689e-04 DIIS; @ROHF iter 4: -38.91341456819070 -2.43953e-05 8.81475e-05 DIIS; @ROHF iter 5: -38.91341661898142 -2.05079e-06 1.51310e-05 DIIS; @ROHF iter 6: -38.91341670674457 -8.77632e-08 3.07520e-06 DIIS; @ROHF iter 7: -38.91341670984617 -3.10160e-09 4.33292e-07 DIIS; @ROHF iter 8: -38.91341670989266 -4.64837e-11 7.04761e-08 DIIS; @ROHF iter 9: -38.91341670989408 -1.42109e-12 1.28167e-08 DIIS; @ROHF iter 10: -38.91341670989415 -7.10543e-14 1.60731e-09 DIIS; @ROHF Final Energy: -38.91341670989415; 	Reference = ROHF changed to UHF for semicanonical orbitals; * CCENERGY *; Reference wfn = ROHF changed to UHF for Semicanonical Orbitals; 	Reference = ROHF changed to UHF for semicanonical orbitals; * CCENERGY *; Reference wfn = ROHF changed to UHF for Semicanonical Orbitals; 	Reference = ROHF changed to UHF for semicanonical orbitals; * CCENERGY *; Reference wfn = ROHF changed to UHF for Semicanonical Orbitals; 	Reference = ROHF changed to UHF for semicanonical orbitals; * CCENERGY *; Reference wfn = ROHF changed to UHF for Semicanonical Orbitals; Reference wfn = ROHF changed to UHF for Semicanonical Orbitals; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708#issuecomment-1243123504:2763,Energy,Energy,2763,https://psicode.org,https://github.com/psi4/psi4/pull/2708#issuecomment-1243123504,1,['Energy'],['Energy']
Energy Efficiency," -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec) # updates jobrec. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:183:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; dftd3rec = {'command': ['dftd3', 'dftd3_geometry.xyz'], 'dashlevel': 'd3bj', 'dashparams': {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}, 'dashparams_citation': False, ...}. def dftd3_harvest(jobrec, dftd3rec):; """"""Process raw results from read-only `dftd3rec` into QCAspect; fields in returned `jobrec`: jobrec@i, dftd3rec@io -> jobrec@io. Parameters; ----------; jobrec : dict; Nested dictionary with input specifications for DFTD3 in generic; QC terms.; dftd3rec : dict; Nested dictionary with input specification and output collection; from DFTD3 in program-specific commands, files, & output capture. Returns; -------; jobrec : dict; Nested dictionary with input specification and output collection; from DFTD3 in generic QC terms. """"""; try:; jobrec['molecule']['real']; jobrec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:14465,energy,energy,14465,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency," . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]										 Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.8555						 X",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:17068,Energy,Energy,17068,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency, .................. Passed 1.74 sec; Start 355: tu1-h2o-energy; 372/413 Test #224: mints10 .......................... Passed 1.32 sec; Start 347: dfep2-2; 373/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ........................ Passed 1.13 sec; Start 222: mints-helper; 376/413 Test #132: dfmp2-2 .......................... Passed 1.70 sec; Start 356: tu2-ch2-energy; 377/413 Test #329: scf-guess-read1 .................. Passed 1.55 sec; Start 8: castup1; 378/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 1.46 sec; Start 332: scf-bs; 379/413 Test #384: psi4numpy-rhf .................... Passed 0.97 sec; Start 216: mints3; 380/413 Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.26 sec; Start 212: mcscf2; 383/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.63 sec; Start 213: mcscf3; 384/413 Test #356: tu2-ch2-energy ................... Passed 0.86 sec; Start 218: mints5; 385/413 Test #330: scf-upcast-custom-basis .......... Passed 1.54 sec; Start 241: numpy-array-interface; 386/413 Test #351: sapt-sf1 ......................... Passed 1.06 sec; Start 217: mints4; 387/413 Test #222: mints-helper ..................... Passed 1.14 sec; Start 366: options1; 388/413 Test #336: scf3 ............................. Passed 0.87 sec; Start 214: mints1; 389/413 Test #332: scf-bs ........................... Passed 1.06 sec; Start 211: mcscf1; 390/413 Test #216: mints3 ........................... Passed 1.11 sec; Start 177: docs-dft; 391/413 Test #223: mints9 ........................... Passed 2.13 sec; Start 162: dft-grac; 392/413 Test #347: dfep2-2 .......................... Passed 2.02 sec; Start 311: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:35917,energy,energy,35917,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency, ...................... Passed 44.46 sec; Start 287: props3; 222/412 Test #325: sapt8 ............................ Passed 41.28 sec; Start 351: dft-custom; 223/412 Test #177: extern1 .......................... Passed 38.65 sec; Start 198: freq-isotope1; 224/412 Test #218: mints6 ........................... Passed 41.21 sec; Start 358: tu4-h2o-freq; 225/412 Test #151: dfomp2p5-1 ....................... Passed 29.55 sec; Start 367: dft-smoke; 226/412 Test #394: python-3-index-transforms ........ Passed 34.82 sec; Start 369: scf-freq1; 227/412 Test #239: nbody-intermediates .............. Passed 43.24 sec; Start 286: props2; 228/412 Test #302: pywrap-basis ..................... Passed 38.66 sec; Start 99: cisd-sp; 229/412 Test #219: mints8 ........................... Passed 41.14 sec; Start 255: omp2p5-2; 230/412 Test #106: dcft-grad3 ....................... Passed 34.02 sec; Start 267: opt1-fd; 231/412 Test #165: dft-grad1 ........................ Passed 37.01 sec; Start 339: scf7; 232/412 Test #14: cbs-xtpl-energy .................. Passed 29.86 sec; Start 373: dft-custom-hybrid; 233/412 Test #269: opt2-fd .......................... Passed 28.34 sec; Start 90: cepa3; 234/412 Test #370: dft-jk ........................... Passed 31.35 sec; Start 342: soscf-ref; 235/412 Test #102: cubeprop ......................... Passed 29.73 sec; Start 368: scf-hess1; 236/412 Test #358: tu4-h2o-freq ..................... Passed 30.80 sec; Start 271: opt4; 237/412 Test #198: freq-isotope1 .................... Passed 30.92 sec; Start 366: cubeprop-esp; 238/412 Test #369: scf-freq1 ........................ Passed 30.98 sec; Start 336: scf4; 239/412 Test #287: props3 ........................... Passed 36.17 sec; Start 9: castup2; 240/412 Test #99: cisd-sp .......................... Passed 30.88 sec; Start 181: fsapt-terms; 241/412 Test #255: omp2p5-2 ......................... Passed 28.41 sec; Start 133: dfmp2-4; 242/412 Test #267: opt1-fd .......................... Passed 27.87 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:21843,energy,energy,21843,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency, ...................... Passed 45.82 sec; Start 121: dfccd-grad1; 229/401 Test #365: scf-coverage ..................... Passed 8.70 sec; Start 182: fci-h2o-2; 230/401 Test #83: cdomp2-2 ......................... Passed 49.94 sec; Start 250: omp2p5-2; 231/401 Test #320: sapt8 ............................ Passed 17.13 sec; Start 100: cubeprop; 232/401 Test #222: mp2-1 ............................ Passed 12.18 sec; Start 186: fci-coverage; 233/401 Test #195: fnocc1 ........................... Passed 27.92 sec; Start 85: cepa0-grad2; 234/401 Test #106: dcft1 ............................ Passed 89.98 sec; Start 311: sapt1; 235/401 Test #182: fci-h2o-2 ........................ Passed 4.21 sec; Start 145: dfomp3-1; 236/401 Test #32: cc17 ............................. Passed 49.14 sec; Start 181: fci-h2o; 237/401 Test #355: x2c1 ............................. Passed 71.39 sec; Start 258: omp3-grad1; 238/401 Test #148: dfomp3-grad2 ..................... Passed 96.81 sec; Start 14: cbs-xtpl-energy; 239/401 Test #132: dfmp2-ecp ........................ Passed 10.88 sec; Start 346: dft-reference; 240/401 Test #352: tu4-h2o-freq ..................... Passed 15.72 sec; Start 398: json-schema_0_orient; 241/401 Test #20: cc1 .............................. Passed 103.51 sec; Start 362: scf-hess1; 242/401 Test #100: cubeprop ......................... Passed 7.85 sec; Start 140: dfomp2-3; 243/401 Test #353: tu5-sapt ......................... Passed 9.21 sec; Start 198: fnocc4; 244/401 Test #181: fci-h2o .......................... Passed 4.30 sec; Start 82: cdomp2-1; 245/401 Test #398: json-schema_0_orient ............. Passed 2.30 sec; Start 251: omp2p5-grad1; 246/401 Test #186: fci-coverage ..................... Passed 7.95 sec; Start 15: cbs-xtpl-freq; 247/401 Test #346: dft-reference .................... Passed 3.44 sec; Start 390: python-3-index-transforms; 248/401 Test #196: fnocc2 ........................... Passed 68.39 sec; Start 280: props1; 249/401 Test #85: cepa0-grad2 ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:22681,energy,energy,22681,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency, ....................... Passed 6.13 sec; Start 128: dfccsdat1; 247/411 Test #185: fci-h2o .......................... Passed 6.11 sec; Start 117: dfcasscf-sa-sp; 248/411 Test #186: fci-h2o-2 ........................ Passed 6.45 sec; Start 154: dfrasscf-sp; 249/411 Test #21: cc10 ............................. Passed 4.59 sec; Start 192: fd-freq-energy; 250/411 Test #254: omp2p5-2 ......................... Passed 5.70 sec; Start 109: dcft3; 251/411 Test #128: dfccsdat1 ........................ Passed 3.87 sec; Start 341: soscf-ref; 252/411 Test #154: dfrasscf-sp ...................... Passed 2.76 sec; Start 143: dfomp2-grad1; 253/411 Test #117: dfcasscf-sa-sp ................... Passed 4.38 sec; Start 9: castup2; 254/411 Test #10: castup3 .......................... Passed 5.12 sec; Start 86: cepa0-grad2; 255/411 Test #335: scf4 ............................. Passed 7.46 sec; Start 179: fsapt2; 256/411 Test #109: dcft3 ............................ Passed 4.45 sec; Start 122: dfccd-grad1; 257/411 Test #192: fd-freq-energy ................... Passed 6.62 sec; Start 90: cepa1; 258/411 Test #143: dfomp2-grad1 ..................... Passed 4.96 sec; Start 171: dft2; 259/411 Test #86: cepa0-grad2 ...................... Passed 4.15 sec; Start 132: dfmp2-4; 260/411 Test #179: fsapt2 ........................... Passed 4.61 sec; Start 22: cc11; 261/411 Test #9: castup2 .......................... Passed 5.91 sec; Start 199: fnocc1; 262/411 Test #341: soscf-ref ........................ Passed 6.75 sec; Start 4: casscf-semi; 263/411 Test #122: dfccd-grad1 ...................... Passed 3.54 sec; Start 94: cisd-h2o+-1; 264/411 Test #90: cepa1 ............................ Passed 5.24 sec; Start 93: cisd-h2o+-0; 265/411 Test #171: dft2 ............................. Passed 4.80 sec; Start 187: fci-h2o-fzcv; 266/411 Test #4: casscf-semi ...................... Passed 3.12 sec; Start 99: cisd-sp-2; 267/411 Test #132: dfmp2-4 .......................... Passed 4.86 sec; Start 266: opt1-fd; 268/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:23927,energy,energy,23927,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency, ........................... Passed 2.31 sec; Start 201: fnocc3; 298/411 Test #3: casscf-fzc-sp .................... Passed 3.65 sec; Start 6: ao-casscf-sp; 299/411 Test #119: dfcasscf-sp ...................... Passed 2.88 sec; Start 191: fcidump; 300/411 Test #235: mp2-property ..................... Passed 3.35 sec; Start 363: zaptn-nh2; 301/411 Test #294: psimrcc-sp1 ...................... Passed 4.02 sec; Start 116: ao-dfcasscf-sp; 302/411 Test #187: fci-h2o-fzcv ..................... Passed 4.43 sec; Start 377: pywrap-align-chiral; 303/411 Test #201: fnocc3 ........................... Passed 2.75 sec; Start 265: opt1; 304/411 Test #191: fcidump .......................... Passed 2.17 sec; Start 314: sad1; 305/411 Test #363: zaptn-nh2 ........................ Passed 1.86 sec; Start 295: psithon1; 306/411 Test #116: ao-dfcasscf-sp ................... Passed 1.55 sec; Start 232: mp2p5-grad2; 307/411 Test #6: ao-casscf-sp ..................... Passed 3.12 sec; Start 387: python-energy; 308/411 Test #387: python-energy .................... Passed 0.79 sec; Start 85: cepa0-grad1; 309/411 Test #232: mp2p5-grad2 ...................... Passed 1.55 sec; Start 253: omp2p5-1; 310/411 Test #265: opt1 ............................. Passed 2.43 sec; Start 198: freq-isotope2; 311/411 Test #377: pywrap-align-chiral .............. Passed 3.20 sec; Start 118: dfcasscf-fzc-sp; 312/411 Test #314: sad1 ............................. Passed 2.25 sec; Start 384: psi4numpy-rhf-hessian; 313/411 Test #295: psithon1 ......................... Passed 2.85 sec; Start 234: mp3-grad2; 314/411 Test #85: cepa0-grad1 ...................... Passed 1.37 sec; Start 262: omp3-grad1; 315/411 Test #253: omp2p5-1 ......................... Passed 1.96 sec; Start 283: opt-freeze-coords; 316/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.99 sec; Start 343: stability1; 317/411 Test #234: mp3-grad2 ........................ Passed 1.81 sec; Start 236: mpn-bh; 318/411 Test #262: omp3-grad1 ............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:28580,energy,energy,28580,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,2,['energy'],['energy']
Energy Efficiency, ........................... Passed 24.84 sec; Start 54: cc37; 237/412 Test #369: scf-freq1 ........................ Passed 12.30 sec; Start 138: dfmp2-grad4; 238/412 Test #286: props2 ........................... Passed 14.44 sec; Start 89: cepa2; 239/412 Test #269: opt2-fd .......................... Passed 12.26 sec; Start 394: python-3-index-transforms; 240/412 Test #373: dft-custom-hybrid ................ Passed 13.08 sec; Start 51: cc34; 241/412 Test #370: dft-jk ........................... Passed 12.21 sec; Start 158: dfrasscf-sp; 242/412 Test #5: casscf-sa-sp ..................... Passed 16.14 sec; Start 140: dfomp2-1; 243/412 Test #242: ocepa-grad1 ...................... Passed 14.89 sec; Start 10: castup3; 244/412 Test #249: omp2-3 ........................... Passed 23.27 sec; Start 227: mp2-1; 245/412 Test #144: dfomp2-grad1 ..................... Passed 16.20 sec; Start 99: cisd-sp; 246/412 Test #138: dfmp2-grad4 ...................... Passed 6.36 sec; Start 314: rasscf-sp; 247/412 Test #14: cbs-xtpl-energy .................. Passed 13.29 sec; Start 9: castup2; 248/412 Test #358: tu4-h2o-freq ..................... Passed 15.20 sec; Start 271: opt4; 249/412 Test #394: python-3-index-transforms ........ Passed 10.40 sec; Start 133: dfmp2-4; 250/412 Test #158: dfrasscf-sp ...................... Passed 8.78 sec; Start 136: dfmp2-grad2; 251/412 Test #89: cepa2 ............................ Passed 12.51 sec; Start 15: cbs-xtpl-freq; 252/412 Test #140: dfomp2-1 ......................... Passed 10.48 sec; Start 102: cubeprop; 253/412 Test #151: dfomp2p5-1 ....................... Passed 24.75 sec; Start 366: cubeprop-esp; 254/412 Test #227: mp2-1 ............................ Passed 10.58 sec; Start 4: casscf-semi; 255/412 Test #10: castup3 .......................... Passed 11.31 sec; Start 87: cepa0-grad2; 256/412 Test #54: cc37 ............................. Passed 17.38 sec; Start 125: dfccsdl1; 257/412 Test #38: cc22 ............................. Passed 24.75 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:23190,energy,energy,23190,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency, ............................. Passed 318.84 sec; Start 113: dcft5; 11/413 Test #25: cc13 ............................. Passed 288.74 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #308: pywrap-checkrun-uhf .............. Passed 858.01 sec; Start 29: cc13d; 13/413 Test #105: dcft-grad1 ....................... Passed 867.96 sec; Start 184: isapt1; 14/413 Test #77: cc7 .............................. Passed 433.83 sec; Start 11: cbs-delta-energy; 15/413 Test #306: pywrap-checkrun-rhf .............. Passed 876.28 sec; Start 48: cc31; 16/413 Test #40: cc24 ............................. Passed 876.40 sec; Start 114: dcft6; 17/413 Test #302: pywrap-all ....................... Passed 905.57 sec; Start 45: cc29; 18/413 Test #242: ocepa-freq1 ...................... Passed 456.03 sec; Start 18: cbs-xtpl-func; 19/413 Test #46: cc3 .............................. Passed 974.02 sec; Start 183: fsapt-allterms; 20/413 Test #307: pywrap-checkrun-rohf ............. Passed 520.29 sec; Start 195: fd-freq-energy-large; 21/413 Test #29: cc13d ............................ Passed 133.06 sec; Start 197: fd-freq-gradient-large; 22/413 Test #48: cc31 ............................. Passed 119.81 sec; Start 280: opt13; 23/413 Test #11: cbs-delta-energy ................. Passed 124.12 sec; Start 375: dft-custom-mgga; 24/413 Test #45: cc29 ............................. Passed 101.10 sec; Start 361: tu6-cp-ne2; 25/413 Test #13: cbs-xtpl-alpha ................... Passed 179.59 sec; Start 388: cookbook-rohf-orb-rot; 26/413 Test #113: dcft5 ............................ Passed 229.73 sec; Start 322: sapt6; 27/413 Test #114: dcft6 ............................ Passed 160.14 sec; Start 283: opt-irc-2; 28/413 Test #112: dcft4 ............................ Passed 1041.80 sec; Start 59: cc41; 29/413 Test #388: cookbook-rohf-orb-rot ............ Passed 58.96 sec; Start 381: cc-module; 30/413 Test #361: tu6-cp-ne2 ....................... Passed 77.19 sec; Start 98: cisd-opt-fd; 31/413 Test #59: cc41 .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:2289,energy,energy-large,2289,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy-large']
Energy Efficiency, ............................. Passed 51.59 sec; Start 15: cbs-xtpl-freq; 346/413 Test #3: casscf-fzc-sp .................... Passed 17.22 sec; Start 291: psimrcc-ccsd_t-3; 347/413 Test #223: mints9 ........................... Passed 2.09 sec; Start 364: x2c3; 348/413 Test #333: scf1 ............................. Passed 6.77 sec; Start 190: fci-tdm; 349/413 Test #224: mints10 .......................... Passed 2.65 sec; Start 97: cisd-h2o-clpse; 350/413 Test #222: mints-helper ..................... Passed 2.06 sec; Start 137: dfmp2-grad2; 351/413 Test #353: dft-reference .................... Passed 3.64 sec; Start 354: stability2; 352/413 Test #273: opt5 ............................. Passed 7.47 sec; Start 300: pubchem2; 353/413 Test #205: frac ............................. Passed 8.25 sec; Start 271: opt3; 354/413 Test #216: mints3 ........................... Passed 2.75 sec; Start 335: scf2; 355/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 3.01 sec; Start 356: tu2-ch2-energy; 356/413 Test #190: fci-tdm .......................... Passed 2.43 sec; Start 241: numpy-array-interface; 357/413 Test #364: x2c3 ............................. Passed 3.21 sec; Start 312: rasci-c2-active; 358/413 Test #181: fsapt2 ........................... Passed 5.35 sec; Start 351: sapt-sf1; 359/413 Test #97: cisd-h2o-clpse ................... Passed 2.35 sec; Start 331: scf-guess-read2; 360/413 Test #300: pubchem2 ......................... Passed 1.65 sec; Start 259: omp3-1; 361/413 Test #241: numpy-array-interface ............ Passed 0.85 sec; Start 347: dfep2-2; 362/413 Test #354: stability2 ....................... Passed 2.54 sec; Start 334: scf-occ; 363/413 Test #356: tu2-ch2-energy ................... Passed 1.48 sec; Start 87: cepa0-grad2; 364/413 Test #335: scf2 ............................. Passed 3.66 sec; Start 86: cepa0-grad1; 365/413 Test #351: sapt-sf1 ......................... Passed 2.53 sec; Start 218: mints5; 366/413 Test #347: dfep2-2 ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:33517,energy,energy,33517,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency," 0.0042 y n ; 40 9 1 2.146e-06 4.292e-06 0.0042 y n ; 41 10 1 1.649e-06 3.299e-06 0.0042 y n ; 42 11 1 1.116e-06 2.232e-06 0.0042 y n ; 43 12 1 7.351e-07 1.470e-06 0.0042 y n ; 44 13 2 4.965e-07 9.931e-07 0.0042 y y Converged.; --------------------------------------------------------------------------------; Davidson Summary: ; ------------------------------------------------------------; State 0: excitation energy = 0.0042 a.u. (converged); State 1: excitation energy = 0.0607 a.u. (converged); ------------------------------------------------------------. --------------------------------------------------------------------------------; Excited State Summary; --------------------------------------------------------------------------------; --------------------------------------------------------------------------------. Excited state 1 (singlet, A) [converged]; ----------------------------------------------------------------------------; Term symbol: 2 (1) A R^2 = 4.36142e-13. Total energy: -908.4624177856 a.u.; Excitation energy: 0.113938 eV. Osc. strength: 0.006302; Trans. dip. moment [a.u.]: [ 0.022562, -1.502315, -0.006471]; <i|r^2|0> [a.u.]: [ 0.119363, -0.062262, 0.001507]. V1^2 = 0.8818, V2^2 = 0.1182. Important amplitudes:; occ i occ j vir a vir b v ; ---------------------------------------------------------; 69 (A) A 70 (A) A -0.6410; 69 (A) A 73 (A) A -0.1086; ---------------------------------------------------------; ----------------------------------------------------------------------------. Excited state 2 (singlet, A) [converged]; ----------------------------------------------------------------------------; Term symbol: 3 (1) A R^2 = 9.93080e-07. Total energy: -908.4058618791 a.u.; Excitation energy: 1.652903 eV. Osc. strength: 0.003742; Trans. dip. moment [a.u.]: [ -0.000934, -0.303942, -0.005679]; <i|r^2|0> [a.u.]: [ 0.050382, -0.071767, 0.005428]. V1^2 = 0.8715, V2^2 = 0.1285. Important amplitudes:; occ i occ j vir a vir b v ; ----------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190:4264,energy,energy,4264,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190,1,['energy'],['energy']
Energy Efficiency," 0.029666; Cl 0.991147 -0.031176 -1.764481; Cl -2.029231 -0.007514 0.039738; Cl 1.062458 0.037458 1.721684; }. PCl5.update_geometry(); PCl5.symmetrize(0.05). set basis def2-tzvp. optimize(""b3lyp""); ```. ```; >>> grep '~' i1265.out ; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -2642.57856550 -2.64e+03 8.58e-03 4.73e-03 o 3.65e-02 1.72e-02 o ~; 2 -2642.57939174 -8.26e-04 2.66e-03 1.41e-03 o 1.48e-02 7.24e-03 o ~; 3 -2642.57947730 -8.56e-05 4.34e-04 1.79e-04 o 1.87e-03 8.01e-04 o ~; 4 -2642.57947965 -2.35e-06 3.44e-04 1.27e-04 o 4.29e-03 1.56e-03 o ~; 5 -2642.57948325 -3.60e-06 1.41e-04 * 5.08e-05 o 2.69e-03 9.60e-04 o ~; 6 -2642.57948452 -1.27e-06 2.69e-05 * 1.27e-05 o 1.57e-04 * 6.33e-05 o ~; --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -2642.578565499663 -2642.578565499663 0.00857526 0.00473269 0.03653776 0.01722964 ~; 2 -2642.579391741112 -0.000826241449 0.00266308 0.00140771 0.01477219 0.00724138 ~; 3 -2642.579477302510 -0.000085561398 0.00043419 0.00017915 0.00187076 0.00080073 ~; 4 -2642.579479650825 -0.000002348315 0.00034376 0.00012718 0.00428847 0.00155505 ~; 5 -2642.579483252237 -0.000003601413 0.00014055 0.00005077 0.00268605 0.00095995 ~; 6 -2642.579484518208 -0.000001265971 0.00002688 0.00001268 0.00015675 0.00006325 ~; --------------------------------------------------------------------------------------------------------------- ~; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424906851:1751,Energy,Energy,1751,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424906851,1,['Energy'],['Energy']
Energy Efficiency," 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; Iter=44 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016043 -7.30e-10 7.68e-07 Y; 2 0.3285655297 -2.33e-11 3.26e-06 N; Iter=45 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016047 4.83e-10 7.73e-07 Y; 2 0.3285655297 -1.39e-12 3.26e-06 N; Collapsing to only 2 vector(s). Procedure converged for 1 root(s). Algorithm failure: No vectors could be added, though not all roots converged!. EOM CCSD R0 for root 0 = 0.00000000000. Final Energetic Summary for Converged Roots of Irrep B1g; Excitation Energy Total Energy; (eV) (cm^-1) (au) (au); EOM State 1 8.825 71176.0 0.3243016047 -231.251027700721. Largest components of excited wave function #1:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:2530,Energy,Energy,2530,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,6,['Energy'],['Energy']
Energy Efficiency," 1 1.594e-05 3.188e-05 0.0042 y n ; 28 4 1 1.087e-05 2.174e-05 0.0042 y n Subspace collapsed.; 29 6 1 1.321e-05 2.642e-05 0.0042 y n ; 30 8 1 1.632e-05 3.264e-05 0.0042 y n ; 31 10 1 1.548e-05 3.097e-05 0.0042 y n ; 32 12 1 1.273e-05 2.545e-05 0.0042 y n ; 33 14 1 8.743e-06 1.749e-05 0.0042 y n ; 34 16 1 6.470e-06 1.294e-05 0.0042 y n ; 35 18 1 4.029e-06 8.058e-06 0.0042 y n ; 36 20 1 3.371e-06 6.743e-06 0.0042 y n ; 37 4 1 2.548e-06 5.096e-06 0.0042 y n Subspace collapsed.; 38 6 1 3.507e-06 7.014e-06 0.0042 y n ; 39 8 1 2.837e-06 5.674e-06 0.0042 y n ; 40 9 1 2.146e-06 4.292e-06 0.0042 y n ; 41 10 1 1.649e-06 3.299e-06 0.0042 y n ; 42 11 1 1.116e-06 2.232e-06 0.0042 y n ; 43 12 1 7.351e-07 1.470e-06 0.0042 y n ; 44 13 2 4.965e-07 9.931e-07 0.0042 y y Converged.; --------------------------------------------------------------------------------; Davidson Summary: ; ------------------------------------------------------------; State 0: excitation energy = 0.0042 a.u. (converged); State 1: excitation energy = 0.0607 a.u. (converged); ------------------------------------------------------------. --------------------------------------------------------------------------------; Excited State Summary; --------------------------------------------------------------------------------; --------------------------------------------------------------------------------. Excited state 1 (singlet, A) [converged]; ----------------------------------------------------------------------------; Term symbol: 2 (1) A R^2 = 4.36142e-13. Total energy: -908.4624177856 a.u.; Excitation energy: 0.113938 eV. Osc. strength: 0.006302; Trans. dip. moment [a.u.]: [ 0.022562, -1.502315, -0.006471]; <i|r^2|0> [a.u.]: [ 0.119363, -0.062262, 0.001507]. V1^2 = 0.8818, V2^2 = 0.1182. Important amplitudes:; occ i occ j vir a vir b v ; ---------------------------------------------------------; 69 (A) A 70 (A) A -0.6410; 69 (A) A 73 (A) A -0.1086; ---------------------------------------------------------; ----",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190:3733,energy,energy,3733,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190,1,['energy'],['energy']
Energy Efficiency, 1.04 sec; Start 411: skeletonwavefunction; 372/411 Test #380: psi4numpy-cphf ................... Passed 1.15 sec; Start 214: mints3; 373/411 Test #406: skeletonaointegrals .............. Passed 1.01 sec; Start 188: fci-tdm; 374/411 Test #102: decontract ....................... Passed 1.34 sec; Start 410: skeletonsointegrals; 375/411 Test #222: mints10 .......................... Passed 1.43 sec; Start 400: json-schema-1-ghost; 376/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 334: scf3; 377/411 Test #403: json-schema-1-gradient ........... Passed 1.46 sec; Start 349: sapt-sf1; 378/411 Test #408: skeletonmointegrals .............. Passed 1.35 sec; Start 309: pywrap-molecule; 379/411 Test #220: mints-helper ..................... Passed 1.32 sec; Start 396: python-memdfjk; 380/411 Test #298: pubchem2 ......................... Passed 2.43 sec; Start 354: tu2-ch2-energy; 381/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 216: mints5; 382/411 Test #353: tu1-h2o-energy ................... Passed 1.13 sec; Start 209: mcscf1; 383/411 Test #404: json-schema-1-properties ......... Passed 1.20 sec; Start 382: psi4numpy-rhf; 384/411 Test #293: psimrcc-pt2 ...................... Passed 1.09 sec; Start 212: mints1; 385/411 Test #411: skeletonwavefunction ............. Passed 1.06 sec; Start 211: mcscf3; 386/411 Test #214: mints3 ........................... Passed 1.15 sec; Start 239: numpy-array-interface; 387/411 Test #188: fci-tdm .......................... Passed 1.07 sec; Start 409: skeletonscf; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.01 sec; Start 174: docs-bases; 389/411 Test #410: skeletonsointegrals .............. Passed 1.37 sec; Start 175: docs-dft; 390/411 Test #334: scf3 ............................. Passed 1.13 sec; Start 308: pywrap-db3; 391/411 Test #349: sapt-sf1 ......................... Passed 1.14 sec; Start 215: mints4; 392/411 Test #209: mcscf1 ........................... Passed 0.86 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:35970,energy,energy,35970,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency, 1.05 sec; Start 102: decontract; 372/411 Test #233: mp3-grad1 ........................ Passed 1.31 sec; Start 410: skeletonsointegrals; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 398: json-v11-gradient; 374/411 Test #411: skeletonwavefunction ............. Passed 0.99 sec; Start 210: mcscf2; 375/411 Test #333: scf2 ............................. Passed 1.33 sec; Start 330: scf-bs; 376/411 Test #231: mp2p5-grad1 ...................... Passed 1.46 sec; Start 354: tu2-ch2-energy; 377/411 Test #102: decontract ....................... Passed 1.11 sec; Start 406: skeletonaointegrals; 378/411 Test #410: skeletonsointegrals .............. Passed 1.06 sec; Start 222: mints10; 379/411 Test #330: scf-bs ........................... Passed 0.94 sec; Start 188: fci-tdm; 380/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 383: psi4numpy-rhf-gradient; 381/411 Test #298: pubchem2 ......................... Passed 1.60 sec; Start 387: python-energy; 382/411 Test #210: mcscf2 ........................... Passed 1.34 sec; Start 220: mints-helper; 383/411 Test #354: tu2-ch2-energy ................... Passed 0.84 sec; Start 378: mints12; 384/411 Test #188: fci-tdm .......................... Passed 0.80 sec; Start 293: psimrcc-pt2; 385/411 Test #406: skeletonaointegrals .............. Passed 1.10 sec; Start 209: mcscf1; 386/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 309: pywrap-molecule; 387/411 Test #387: python-energy .................... Passed 0.79 sec; Start 214: mints3; 388/411 Test #222: mints10 .......................... Passed 1.23 sec; Start 396: python-memdfjk; 389/411 Test #220: mints-helper ..................... Passed 1.06 sec; Start 334: scf3; 390/411 Test #209: mcscf1 ........................... Passed 0.64 sec; Start 382: psi4numpy-rhf; 391/411 Test #378: mints12 .......................... Passed 1.21 sec; Start 211: mcscf3; 392/411 Test #293: psimrcc-pt2 ...................... Passed 0.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:35714,energy,energy,35714,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency, 1.08 sec; Start 395: python-mints13; 358/411 Test #233: mp3-grad1 ........................ Passed 1.75 sec; Start 390: python-mints9; 359/411 Test #407: skeletondfmp2 .................... Passed 1.23 sec; Start 220: mints-helper; 360/411 Test #404: json-schema-1-properties ......... Passed 1.03 sec; Start 8: castup1; 361/411 Test #406: skeletonaointegrals .............. Passed 0.92 sec; Start 221: mints9; 362/411 Test #220: mints-helper ..................... Passed 1.07 sec; Start 383: psi4numpy-rhf-gradient; 363/411 Test #328: scf-upcast-custom-basis .......... Passed 1.36 sec; Start 408: skeletonmointegrals; 364/411 Test #8: castup1 .......................... Passed 1.23 sec; Start 362: x2c3; 365/411 Test #395: python-mints13 ................... Passed 1.90 sec; Start 398: json-v11-gradient; 366/411 Test #390: python-mints9 .................... Passed 1.91 sec; Start 352: stability2; 367/411 Test #383: psi4numpy-rhf-gradient ........... Passed 0.97 sec; Start 353: tu1-h2o-energy; 368/411 Test #408: skeletonmointegrals .............. Passed 0.95 sec; Start 96: cisd-h2o-clpse; 369/411 Test #221: mints9 ........................... Passed 1.94 sec; Start 403: json-schema-1-gradient; 370/411 Test #398: json-v11-gradient ................ Passed 0.96 sec; Start 327: scf-guess-read1; 371/411 Test #352: stability2 ....................... Passed 0.88 sec; Start 333: scf2; 372/411 Test #362: x2c3 ............................. Passed 1.46 sec; Start 334: scf3; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.10 sec; Start 288: psimrcc-ccsd_t-2; 374/411 Test #96: cisd-h2o-clpse ................... Passed 1.20 sec; Start 400: json-schema-1-ghost; 375/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 287: psimrcc-ccsd_t-1; 376/411 Test #403: json-schema-1-gradient ........... Passed 1.22 sec; Start 289: psimrcc-ccsd_t-3; 377/411 Test #333: scf2 ............................. Passed 1.28 sec; Start 410: skeletonsointegrals; 378/411 Test #327: s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:34274,energy,energy,34274,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency," 1.53e-02 1.38e-03 o ~; > 11 -1771.55003367 -4.48e-06 3.38e-04 3.16e-05 o 1.53e-02 1.38e-03 o ~; > 12 -1771.55003620 -2.53e-06 3.26e-04 3.22e-05 o 1.56e-02 1.38e-03 o ~; > 13 -1771.55003691 -7.15e-07 * 3.21e-04 3.16e-05 o 3.92e-03 3.44e-04 o ~; > 14 -1771.55003705 -1.33e-07 * 3.23e-04 2.89e-05 o 9.90e-04 * 8.66e-05 o ~; > 15 -1771.55003766 -6.15e-07 * 3.24e-04 2.84e-05 o 2.99e-03 2.58e-04 o ~; > 	Raising dynamic level to 2. ~; > --------------------------------------------------------------------------------------------- ~; > Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > --------------------------------------------------------------------------------------------- ~; > Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; > --------------------------------------------------------------------------------------------- ~; > 1 -1771.55003766 -1.77e+03 4.10e-04 6.83e-05 o 1.12e-01 1.18e-02 o ~; > 2 -1771.55004087 -3.21e-06 4.24e-04 6.61e-05 o 1.14e-01 1.18e-02 o ~; > 3 -1771.55000286 3.80e-05 5.17e-04 1.06e-04 o 1.07e-01 1.18e-02 o ~; > 4 -1771.54998378 1.91e-05 8.31e-04 1.67e-04 o 9.19e-02 1.18e-02 o ~; > 	Raising dynamic level to 3. ~; > --------------------------------------------------------------------------------------------- ~; > Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > --------------------------------------------------------------------------------------------- ~; > Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; > --------------------------------------------------------------------------------------------- ~; > 1 -1771.54998378 -1.77e+03 4.62e-04 8.08e-05 o 2.48e-02 4.77e-03 o ~; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1590#issuecomment-482748016>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTEdoeLZvGdjUJOTGrGckwcj3U_gmks5vgRB-gaJpZM4cbdQV>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167:2842,Energy,Energy,2842,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167,1,['Energy'],['Energy']
Energy Efficiency, 1.84e-03 4.35e-04 o 5.76e-02 7.34e-03 o ~; 5 -1771.54991808 -2.94e-04 6.10e-04 1.42e-04 o 4.66e-02 7.34e-03 o ~; 6 -1771.54999493 -7.68e-05 5.40e-04 1.21e-04 o 1.40e-02 1.83e-03 o ~; 7 -1771.55001819 -2.33e-05 4.51e-04 8.25e-05 o 1.89e-02 1.84e-03 o ~; 8 -1771.55002275 -4.56e-06 3.95e-04 7.58e-05 o 4.60e-03 4.59e-04 o ~; 9 -1771.55002699 -4.24e-06 3.75e-04 4.74e-05 o 4.74e-03 4.59e-04 o ~; 10 -1771.55002919 -2.20e-06 3.62e-04 3.71e-05 o 1.53e-02 1.38e-03 o ~; 11 -1771.55003367 -4.48e-06 3.38e-04 3.16e-05 o 1.53e-02 1.38e-03 o ~; 12 -1771.55003620 -2.53e-06 3.26e-04 3.22e-05 o 1.56e-02 1.38e-03 o ~; 13 -1771.55003691 -7.15e-07 * 3.21e-04 3.16e-05 o 3.92e-03 3.44e-04 o ~; 14 -1771.55003705 -1.33e-07 * 3.23e-04 2.89e-05 o 9.90e-04 * 8.66e-05 o ~; 15 -1771.55003766 -6.15e-07 * 3.24e-04 2.84e-05 o 2.99e-03 2.58e-04 o ~; 	Raising dynamic level to 2. ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -1771.55003766 -1.77e+03 4.10e-04 6.83e-05 o 1.12e-01 1.18e-02 o ~; 2 -1771.55004087 -3.21e-06 4.24e-04 6.61e-05 o 1.14e-01 1.18e-02 o ~; 3 -1771.55000286 3.80e-05 5.17e-04 1.06e-04 o 1.07e-01 1.18e-02 o ~; 4 -1771.54998378 1.91e-05 8.31e-04 1.67e-04 o 9.19e-02 1.18e-02 o ~; 	Raising dynamic level to 3. ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; -----------------------------------------------------------------------------------------,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482748016:1845,Energy,Energy,1845,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482748016,1,['Energy'],['Energy']
Energy Efficiency," 104, in _mergedapis_compare_values; E return qcel.testing.compare_values(expected, computed, **kwargs); E File ""/psi/toolchainconda/envs/defenv10/lib/python3.10/site-packages/qcelemental/testing.py"", line 178, in compare_values; E return return_handler(allclose, label, message, return_message, quiet); E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/driver/p4util/testing.py"", line 195, in _psi4_true_raise_handler; E raise TestComparisonError(message); E ; E psi4.driver.p4util.exceptions.TestComparisonError: 	SCF energy: computed value (-76.02663274) does not match (-176.02663273) to atol=1e-06 by difference (100.00000000).; E ; E Printing out the relevant lines from the Psithon --> Python processed input file:; E H 1 0.96 2 104.5; E """""",""h2o""); E core.IO.set_default_namespace(""h2o""); E core.set_global_option(""BASIS"", ""cc-pVDZ""); E energy('scf'); E --> compare_values(-176.0266327341067125, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') ; E ; E ; E !----------------------------------------------------------------------------------!; E ! !; E ! SCF energy: computed value (-76.02663274) does not match (-176.02663273) !; E ! to atol=1e-06 by difference (100.00000000). !; E ! !; E !----------------------------------------------------------------------------------!. stage/lib/psi4/tests/addons.py:197: AssertionError; ========================================================================================================== short test summary info ==========================================================================================================; FAILED stage/lib/psi4/tests/test_psi4.py::test_psi4_basic - psi4.driver.p4util.exceptions.TestComparisonError: 	SCF energy: computed value (-76.02663274) does not match (-176.02663273) to atol=1e-06 by difference (100.00000000).; FAILED stage/lib/psi4/tests/tu1-h2o-energy/test_input.py::test_tu1_h2o_energy - AssertionError: SCF energy............................................................................FAIL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:8510,ENERGY,ENERGY,8510,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,5,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency," 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 T",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1513,Energy,Energy,1513,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Energy'],['Energy']
Energy Efficiency, 16.52 sec; Start 391: python-mints9; 365/412 Test #161: dft-grac ......................... Passed 16.36 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 16.86 sec; Start 211: mcscf2; 367/412 Test #189: fci-tdm .......................... Passed 15.73 sec; Start 407: skeletonaointegrals; 368/412 Test #8: castup1 .......................... Passed 15.97 sec; Start 222: mints9; 369/412 Test #408: skeletondfmp2 .................... Passed 16.39 sec; Start 331: scf-bs; 370/412 Test #350: sapt-sf1 ......................... Passed 15.95 sec; Start 396: python-mints13; 371/412 Test #391: python-mints9 .................... Passed 15.88 sec; Start 404: json-schema-1-gradient; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 16.63 sec; Start 299: pubchem2; 373/412 Test #211: mcscf2 ........................... Passed 17.01 sec; Start 223: mints10; 374/412 Test #407: skeletonaointegrals .............. Passed 16.26 sec; Start 354: tu1-h2o-energy; 375/412 Test #331: scf-bs ........................... Passed 16.05 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.85 sec; Start 221: mints-helper; 377/412 Test #396: python-mints13 ................... Passed 17.11 sec; Start 103: decontract; 378/412 Test #404: json-schema-1-gradient ........... Passed 16.61 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 17.11 sec; Start 215: mints3; 380/412 Test #223: mints10 .......................... Passed 16.49 sec; Start 384: psi4numpy-rhf-gradient; 381/412 Test #354: tu1-h2o-energy ................... Passed 18.71 sec; Start 401: json-schema-1-ghost; 382/412 Test #411: skeletonsointegrals .............. Passed 17.04 sec; Start 355: tu2-ch2-energy; 383/412 Test #221: mints-helper ..................... Passed 17.55 sec; Start 399: json-v11-gradient; 384/412 Test #103: decontract ....................... Passed 16.77 sec; Start 397: python-memdfjk;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:35120,energy,energy,35120,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency," 196A 2.136885 197A 2.139951; > 198A 2.143625 199A 2.144516 200A 2.149966; > 201A 2.153416 202A 2.160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15200,Energy,Energy,15200,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency, 2.38 sec; Start 247: omp2-1; 348/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 1.96 sec; Start 97: cisd-h2o-clpse; 349/412 Test #121: dfccd1 ........................... Passed 2.49 sec; Start 329: scf-upcast-custom-basis; 350/412 Test #235: mp3-grad2 ........................ Passed 2.65 sec; Start 229: mp2-grad1; 351/412 Test #396: python-mints13 ................... Passed 2.26 sec; Start 299: pubchem2; 352/412 Test #161: dft-grac ......................... Passed 1.98 sec; Start 211: mcscf2; 353/412 Test #333: scf-occ .......................... Passed 2.58 sec; Start 331: scf-bs; 354/412 Test #362: x2c2 ............................. Passed 2.41 sec; Start 404: json-schema-1-gradient; 355/412 Test #234: mp3-grad1 ........................ Passed 2.93 sec; Start 408: skeletondfmp2; 356/412 Test #86: cepa0-grad1 ...................... Passed 3.26 sec; Start 288: psimrcc-ccsd_t-1; 357/412 Test #363: x2c3 ............................. Passed 2.63 sec; Start 103: decontract; 358/412 Test #400: json-schema-1-energy ............. Passed 4.01 sec; Start 350: sapt-sf1; 359/412 Test #8: castup1 .......................... Passed 2.80 sec; Start 221: mints-helper; 360/412 Test #329: scf-upcast-custom-basis .......... Passed 2.62 sec; Start 381: psi4numpy-cphf; 361/412 Test #299: pubchem2 ......................... Passed 2.35 sec; Start 354: tu1-h2o-energy; 362/412 Test #117: ao-dfcasscf-sp ................... Passed 3.58 sec; Start 379: mints12; 363/412 Test #97: cisd-h2o-clpse ................... Passed 2.91 sec; Start 409: skeletonmointegrals; 364/412 Test #211: mcscf2 ........................... Passed 2.42 sec; Start 223: mints10; 365/412 Test #103: decontract ....................... Passed 1.91 sec; Start 310: pywrap-molecule; 366/412 Test #229: mp2-grad1 ........................ Passed 3.12 sec; Start 215: mints3; 367/412 Test #404: json-schema-1-gradient ........... Passed 2.27 sec; Start 411: skeletonsointegrals; 368/412 Test #331: scf-bs .....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:33629,energy,energy,33629,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency, 2: adc2; 1/412 Test #1: adc1 ............................. Passed 40.38 sec; Start 3: casscf-fzc-sp; 2/412 Test #3: casscf-fzc-sp .................... Passed 7.58 sec; Start 4: casscf-semi; 3/412 Test #4: casscf-semi ...................... Passed 3.39 sec; Start 5: casscf-sa-sp; 4/412 Test #2: adc2 ............................. Passed 68.12 sec; Start 6: ao-casscf-sp; 5/412 Test #5: casscf-sa-sp ..................... Passed 17.41 sec; Start 7: casscf-sp; 6/412 Test #6: ao-casscf-sp ..................... Passed 8.11 sec; Start 8: castup1; 7/412 Test #8: castup1 .......................... Passed 3.07 sec; Start 9: castup2; 8/412 Test #7: casscf-sp ........................ Passed 14.70 sec; Start 10: castup3; 9/412 Test #9: castup2 .......................... Passed 10.03 sec; Start 11: cbs-delta-energy; 10/412 Test #10: castup3 .......................... Passed 8.30 sec; Start 12: cbs-parser; 11/412 Test #12: cbs-parser ....................... Passed 37.55 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #11: cbs-delta-energy ................. Passed 64.49 sec; Start 14: cbs-xtpl-energy; 13/412 Test #14: cbs-xtpl-energy .................. Passed 15.23 sec; Start 15: cbs-xtpl-freq; 14/412 Test #15: cbs-xtpl-freq .................... Passed 9.08 sec; Start 16: cbs-xtpl-gradient; 15/412 Test #326: scf-bz2 .......................... Passed 188.03 sec; Start 17: cbs-xtpl-opt; 16/412 Test #16: cbs-xtpl-gradient ................ Passed 24.11 sec; Start 19: cbs-xtpl-nbody; 17/412 Test #19: cbs-xtpl-nbody ................... Passed 51.60 sec; Start 20: cbs-xtpl-wrapper; 18/412 Test #17: cbs-xtpl-opt ..................... Passed 74.20 sec; Start 21: cc1; 19/412 Test #206: frac-traverse .................... Passed 282.86 sec; Start 22: cc10; 20/412 Test #21: cc1 .............................. Passed 20.69 sec; Start 23: cc11; 21/412 Test #13: cbs-xtpl-alpha ................... Passed 156.06 sec; Start 24: cc12; 22/412 Test #24: cc12 ............................. Passed 18.96 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:1499,energy,energy,1499,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy']
Energy Efficiency, 303: psimrcc-pt2; 121/415 Test #395: psi4numpy-rhf-hessian ............ Passed 3.23 sec; Start 414: json-schema-1-gradient; 122/415 Test #299: psimrcc-ccsd_t-3 ................. Passed 1.93 sec; Start 392: psi4numpy-dfmp2; 123/415 Test #105: decontract ....................... Passed 1.50 sec; Start 337: scf-guess-read1; 124/415 Test #343: scf2 ............................. Passed 2.48 sec; Start 401: python-mints9; 125/415 Test #340: scf-bs ........................... Passed 1.78 sec; Start 360: sapt-sf1; 126/415 Test #342: scf-occ .......................... Passed 2.41 sec; Start 406: python-mints13; 127/415 Test #372: x2c2 ............................. Passed 2.55 sec; Start 297: psimrcc-ccsd_t-1; 128/415 Test #363: stability2 ....................... Passed 1.67 sec; Start 398: python-energy; 129/415 Test #356: dfep2-2 .......................... Passed 2.54 sec; Start 367: scf-response1; 130/415 Test #324: sad1 ............................. Passed 3.08 sec; Start 364: tu1-h2o-energy; 131/415 Test #303: psimrcc-pt2 ...................... Passed 1.68 sec; Start 212: mcscf1; 132/415 Test #414: json-schema-1-gradient ........... Passed 1.69 sec; Start 365: tu2-ch2-energy; 133/415 Test #392: psi4numpy-dfmp2 .................. Passed 1.94 sec; Start 394: psi4numpy-rhf-gradient; 134/415 Test #401: python-mints9 .................... Passed 2.41 sec; Start 344: scf3; 135/415 Test #406: python-mints13 ................... Passed 2.29 sec; Start 319: pywrap-molecule; 136/415 Test #337: scf-guess-read1 .................. Passed 3.82 sec; Start 407: python-memdfjk; 137/415 Test #360: sapt-sf1 ......................... Passed 3.67 sec; Start 393: psi4numpy-rhf; 138/415 Test #398: python-energy .................... Passed 3.51 sec; Start 215: mints1; 139/415 Test #319: pywrap-molecule .................. Passed 1.48 sec; Start 375: options1; 140/415 Test #297: psimrcc-ccsd_t-1 ................. Passed 4.15 sec; Start 248: numpy-array-interface; 141/415 Test #365: tu2-ch2-energy ..,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:12642,energy,energy,12642,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency, 374/411 Test #385: psi4numpy-fci .................... Passed 5.25 sec; Start 389: python-pubchem; 375/411 Test #388: python-curve ..................... Passed 2.96 sec; Start 390: python-mints9; 376/411 Test #390: python-mints9 .................... Passed 1.96 sec; Start 391: python-mints2; 377/411 Test #391: python-mints2 .................... Passed 2.41 sec; Start 392: python-cc54; 378/411 Test #320: sapt6 ............................ Passed 164.21 sec; Start 393: python-3-index-transforms; 379/411 Test #162: dft-grad-lr3 ..................... Passed 463.80 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.91 sec; Start 396: python-memdfjk; 381/411 Test #396: python-memdfjk ................... Passed 0.94 sec; Start 397: json-v11-energy; 382/411 Test #393: python-3-index-transforms ........ Passed 10.61 sec; Start 398: json-v11-gradient; 383/411 Test #397: json-v11-energy .................. Passed 3.63 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 2.08 sec; Start 400: json-schema-1-ghost; 385/411 Test #400: json-schema-1-ghost .............. Passed 1.34 sec; Start 401: json-schema-1-orient; 386/411 Test #392: python-cc54 ...................... Passed 22.48 sec; Start 402: json-schema-1-throws; 387/411 Test #399: json-schema-1-energy ............. Passed 3.15 sec; Start 403: json-schema-1-gradient; 388/411 Test #401: json-schema-1-orient ............. Passed 2.07 sec; Start 404: json-schema-1-properties; 389/411 Test #402: json-schema-1-throws ............. Passed 0.60 sec; Start 405: skeleton; 390/411 Test #404: json-schema-1-properties ......... Passed 1.09 sec; Start 406: skeletonaointegrals; 391/411 Test #403: json-schema-1-gradient ........... Passed 1.66 sec; Start 407: skeletondfmp2; 392/411 Test #405: skeleton ......................... Passed 1.22 sec; Start 408: skeletonmointegrals; 393/411 Test #406: skeletonaointegrals .............. Passed 1.35 sec; Start 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:35943,energy,energy,35943,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy']
Energy Efficiency, 374/411 Test #388: python-curve ..................... Passed 3.19 sec; Start 389: python-pubchem; 375/411 Test #375: pywrap-bfs ....................... Passed 25.67 sec; Start 390: python-mints9; 376/411 Test #305: pywrap-checkrun-rohf ............. Passed 171.95 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 2.08 sec; Start 392: python-cc54; 378/411 Test #374: dft-custom-gga ................... Passed 29.34 sec; Start 393: python-3-index-transforms; 379/411 Test #391: python-mints2 .................... Passed 3.28 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.88 sec; Start 396: python-memdfjk; 381/411 Test #396: python-memdfjk ................... Passed 0.92 sec; Start 397: json-v11-energy; 382/411 Test #397: json-v11-energy .................. Passed 3.85 sec; Start 398: json-v11-gradient; 383/411 Test #393: python-3-index-transforms ........ Passed 10.30 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 3.98 sec; Start 400: json-schema-1-ghost; 385/411 Test #400: json-schema-1-ghost .............. Passed 1.26 sec; Start 401: json-schema-1-orient; 386/411 Test #399: json-schema-1-energy ............. Passed 3.33 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 403: json-schema-1-gradient; 388/411 Test #401: json-schema-1-orient ............. Passed 2.05 sec; Start 404: json-schema-1-properties; 389/411 Test #392: python-cc54 ...................... Passed 17.13 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.61 sec; Start 406: skeletonaointegrals; 391/411 Test #404: json-schema-1-properties ......... Passed 1.34 sec; Start 407: skeletondfmp2; 392/411 Test #405: skeleton ......................... Passed 1.17 sec; Start 408: skeletonmointegrals; 393/411 Test #406: skeletonaointegrals .............. Passed 1.57 sec; Start 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:35978,energy,energy,35978,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency," 3: -76.33537346510494 -8.54271e-02 5.64978e-04 DIIS; @DF-RKS iter 4: -76.33541666733151 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 sec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8179,Energy,Energy,8179,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency," 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:3107,ENERGY,ENERGY,3107,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760,2,['ENERGY'],['ENERGY']
Energy Efficiency," 401: @DF-RHF iter 4: -75.98012170651255 -1.93453e-04 4.06200e-04 DIIS; 401: @DF-RHF iter 5: -75.98014095901934 -1.92525e-05 8.89529e-05 DIIS; 401: @DF-RHF iter 6: -75.98014186620988 -9.07191e-07 9.85581e-06 DIIS; 401: @DF-RHF iter 7: -75.98014187224302 -6.03315e-09 1.00607e-06 DIIS; 401: @DF-RHF iter 8: -75.98014187231389 -7.08695e-11 1.20203e-07 DIIS; 401: ; 401: ==> Post-Iterations <==; 401: ; 401: Orbital Energies [Eh]; 401: ---------------------; 401: ; 401: Doubly Occupied: ; 401: ; 401: 1A1 -20.568888 2A1 -1.334711 1B2 -0.686874 ; 401: 3A1 -0.554298 1B1 -0.499284 ; 401: ; 401: Virtual: ; 401: ; 401: 4A1 0.193417 2B2 0.287599 3B2 1.041506 ; 401: 5A1 1.130379 2B1 1.164432 6A1 1.220999 ; 401: 4B2 1.368964 7A1 1.693510 ; 401: ; 401: Final Occupation by Irrep:; 401: A1 A2 B1 B2 ; 401: DOCC [ 3, 0, 1, 1 ]; 401: ; 401: Energy converged.; 401: ; 401: @DF-RHF Final Energy: -75.98014187231389; 401: ; 401: => Energetics <=; 401: ; 401: Nuclear Repulsion Energy = 8.8014620606294294; 401: One-Electron Energy = -122.2750929709242769; 401: Two-Electron Energy = 37.4934890379809431; 401: Total Energy = -75.9801418723139079; 401: ; 401: ; 401: ; 401: Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; 401: ; 401: Properties computed using the HF density matrix; 401: ; 401: Nuclear Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0191; 401: ; 401: Electronic Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401: XX: -1.5309 YY: 1.6335 ZZ: -0.1027; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Mulliken Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.39836 4.39836 0.00000 -0.79673; 401: 2 H 0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:6478,Energy,Energy,6478,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency," 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]										 Nuclear Dipole Moment:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:17018,Energy,Energy,17018,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency," 5 energy: -320.87922264084102 -0.00791118301174 0.00056898557067; @Atomic UHF iteration 6 energy: -320.87957561560631 -0.00035297476529 0.00008011419372; @Atomic UHF iteration 7 energy: -320.87958210143461 -0.00000648582829 0.00000325221580; @Atomic UHF Final Energy for atom XE: -320.87958210143461; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -324.53314738271274 -3.24533e+02 0.00000e+00 ; @DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.00000020668995 0.00000049737307; @Atomic UHF Final Energy for atom XE: -7299.97190876705281; Finished UHF Computation!. ==> Iterations <==. Total Energy ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:1584,energy,energy,1584,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,1,['energy'],['energy']
Energy Efficiency, 5.03 sec; Start 4: casscf-semi; 328/411 Test #243: ocepa1 ........................... Passed 6.83 sec; Start 246: omp2-1; 329/411 Test #327: scf-guess-read1 .................. Passed 2.70 sec; Start 363: zaptn-nh2; 330/411 Test #377: pywrap-align-chiral .............. Passed 3.07 sec; Start 314: sad1; 331/411 Test #388: python-curve ..................... Passed 4.00 sec; Start 253: omp2p5-1; 332/411 Test #121: dfccdl1 .......................... Passed 4.11 sec; Start 397: json-v11-energy; 333/411 Test #363: zaptn-nh2 ........................ Passed 2.47 sec; Start 384: psi4numpy-rhf-hessian; 334/411 Test #246: omp2-1 ........................... Passed 4.32 sec; Start 239: numpy-array-interface; 335/411 Test #314: sad1 ............................. Passed 3.56 sec; Start 213: mints2; 336/411 Test #239: numpy-array-interface ............ Passed 0.68 sec; Start 328: scf-upcast-custom-basis; 337/411 Test #295: psithon1 ......................... Passed 9.99 sec; Start 391: python-mints2; 338/411 Test #397: json-v11-energy .................. Passed 4.06 sec; Start 119: dfcasscf-sp; 339/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.87 sec; Start 120: dfccd1; 340/411 Test #213: mints2 ........................... Passed 3.23 sec; Start 203: frac; 341/411 Test #328: scf-upcast-custom-basis .......... Passed 3.10 sec; Start 355: tu3-h2o-opt; 342/411 Test #253: omp2p5-1 ......................... Passed 6.90 sec; Start 210: mcscf2; 343/411 Test #4: casscf-semi ...................... Passed 8.94 sec; Start 116: ao-dfcasscf-sp; 344/411 Test #391: python-mints2 .................... Passed 2.70 sec; Start 406: skeletonaointegrals; 345/411 Test #119: dfcasscf-sp ...................... Passed 3.75 sec; Start 214: mints3; 346/411 Test #210: mcscf2 ........................... Passed 1.53 sec; Start 381: psi4numpy-dfmp2; 347/411 Test #406: skeletonaointegrals .............. Passed 1.29 sec; Start 221: mints9; 348/411 Test #120: dfccd1 ........................... Passed 3.15,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:31577,energy,energy,31577,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency, 53/412 Test #75: cc5a ............................. Passed 56.09 sec; Start 319: sapt4; 54/412 Test #169: dft1 ............................. Passed 104.75 sec; Start 326: scf-bz2; 55/412 Test #326: scf-bz2 .......................... Passed 135.97 sec; Start 372: dft-custom-dhdf; 56/412 Test #279: opt13 ............................ Passed 775.41 sec; Start 47: cc30; 57/412 Test #206: frac-traverse .................... Passed 219.70 sec; Start 92: cepa-module; 58/412 Test #26: cc13a ............................ Passed 269.35 sec; Start 281: opt-irc-1; 59/412 Test #47: cc30 ............................. Passed 40.10 sec; Start 280: opt14; 60/412 Test #114: dcft7 ............................ Passed 260.64 sec; Start 318: sapt3; 61/412 Test #92: cepa-module ...................... Passed 48.34 sec; Start 70: cc51; 62/412 Test #372: dft-custom-dhdf .................. Passed 97.85 sec; Start 76: cc6; 63/412 Test #281: opt-irc-1 ........................ Passed 72.44 sec; Start 193: fd-freq-energy; 64/412 Test #280: opt14 ............................ Passed 89.89 sec; Start 260: omp3-3; 65/412 Test #70: cc51 ............................. Passed 73.29 sec; Start 320: sapt5; 66/412 Test #76: cc6 .............................. Passed 70.93 sec; Start 261: omp3-4; 67/412 Test #318: sapt3 ............................ Passed 90.41 sec; Start 231: mp2-module; 68/412 Test #260: omp3-3 ........................... Passed 33.57 sec; Start 17: cbs-xtpl-opt; 69/412 Test #193: fd-freq-energy ................... Passed 58.53 sec; Start 116: dcft9; 70/412 Test #317: sapt2 ............................ Passed 354.70 sec; Start 293: psimrcc-fd-freq2; 71/412 Test #261: omp3-4 ........................... Passed 31.51 sec; Start 21: cc1; 72/412 Test #116: dcft9 ............................ Passed 25.23 sec; Start 20: cbs-xtpl-wrapper; 73/412 Test #21: cc1 .............................. Passed 21.49 sec; Start 250: omp2-4; 74/412 Test #231: mp2-module ....................... Passed 55.07 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:6098,energy,energy,6098,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency, 6798; 7 7 9 -3.9688426839 0.0000610183 0.0009217340 6861; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 6897; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_thr,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4859,energy,energy,4859,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency, 75/412 Test #261: omp3-4 ........................... Passed 72.66 sec; Start 150: dfomp3-grad2; 76/412 Test #231: mp2-module ....................... Passed 90.49 sec; Start 20: cbs-xtpl-wrapper; 77/412 Test #293: psimrcc-fd-freq2 ................. Passed 81.12 sec; Start 58: cc40; 78/412 Test #250: omp2-4 ........................... Passed 69.17 sec; Start 11: cbs-delta-energy; 79/412 Test #62: cc44 ............................. Passed 72.21 sec; Start 82: cc9; 80/412 Test #264: omp3-grad2 ....................... Passed 71.27 sec; Start 69: cc50; 81/412 Test #390: python-pubchem ................... Passed 64.71 sec; Start 57: cc4; 82/412 Test #2: adc2 ............................. Passed 46.23 sec; Start 245: ocepa2; 83/412 Test #205: frac-ip-fitting .................. Passed 73.37 sec; Start 251: omp2-5; 84/412 Test #168: dft-b3lyp ........................ Passed 68.76 sec; Start 78: cc8; 85/412 Test #17: cbs-xtpl-opt ..................... Passed 104.86 sec; Start 193: fd-freq-energy; 86/412 Test #150: dfomp3-grad2 ..................... Passed 85.43 sec; Start 298: pubchem1; 87/412 Test #20: cbs-xtpl-wrapper ................. Passed 80.35 sec; Start 80: cc8b; 88/412 Test #317: sapt2 ............................ Passed 352.05 sec; Start 243: ocepa-grad2; 89/412 Test #58: cc40 ............................. Passed 75.15 sec; Start 60: cc42; 90/412 Test #82: cc9 .............................. Passed 62.16 sec; Start 108: dcft1; 91/412 Test #57: cc4 .............................. Passed 57.29 sec; Start 35: cc19; 92/412 Test #114: dcft7 ............................ Passed 393.99 sec; Start 66: cc48; 93/412 Test #69: cc50 ............................. Passed 73.08 sec; Start 101: ci-property; 94/412 Test #78: cc8 .............................. Passed 58.53 sec; Start 65: cc47; 95/412 Test #245: ocepa2 ........................... Passed 85.34 sec; Start 28: cc13c; 96/412 Test #251: omp2-5 ........................... Passed 85.48 sec; Start 67: cc49; 97/412 Test #80: cc8b ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:8275,energy,energy,8275,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency, 76: cc6; 49/413 Test #117: dcft9 ............................ Passed 94.18 sec; Start 44: cc28; 50/413 Test #160: dfscf-bz2 ........................ Passed 139.59 sec; Start 156: dft-grad-lr2; 51/413 Test #349: sapt-dft2 ........................ Passed 125.56 sec; Start 31: cc15; 52/413 Test #304: pywrap-cbs1 ...................... Passed 141.50 sec; Start 170: dft1; 53/413 Test #27: cc13b ............................ Passed 97.13 sec; Start 232: mp2-module; 54/413 Test #261: omp3-3 ........................... Passed 93.95 sec; Start 70: cc51; 55/413 Test #262: omp3-4 ........................... Passed 90.31 sec; Start 75: cc5a; 56/413 Test #251: omp2-4 ........................... Passed 82.97 sec; Start 62: cc44; 57/413 Test #146: dfomp2-grad2 ..................... Passed 88.22 sec; Start 26: cc13a; 58/413 Test #44: cc28 ............................. Passed 87.90 sec; Start 115: dcft7; 59/413 Test #31: cc15 ............................. Passed 68.36 sec; Start 207: frac-traverse; 60/413 Test #195: fd-freq-energy-large ............. Passed 510.05 sec; Start 318: sapt2; 61/413 Test #76: cc6 .............................. Passed 93.91 sec; Start 320: sapt4; 62/413 Test #185: isapt2 ........................... Passed 117.61 sec; Start 327: scf-bz2; 63/413 Test #156: dft-grad-lr2 ..................... Passed 107.86 sec; Start 252: omp2-5; 64/413 Test #232: mp2-module ....................... Passed 75.42 sec; Start 151: dfomp3-grad2; 65/413 Test #170: dft1 ............................. Passed 105.14 sec; Start 58: cc40; 66/413 Test #75: cc5a ............................. Passed 70.15 sec; Start 19: cbs-xtpl-nbody; 67/413 Test #62: cc44 ............................. Passed 56.22 sec; Start 47: cc30; 68/413 Test #70: cc51 ............................. Passed 79.80 sec; Start 244: ocepa-grad2; 69/413 Test #183: fsapt-allterms ................... Passed 566.00 sec; Start 373: dft-custom-dhdf; 70/413 Test #252: omp2-5 ........................... Passed 67.36 sec; Start 282: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:5931,energy,energy-large,5931,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy-large']
Energy Efficiency," 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations that turn symmetry off (difference is because of my slightly perturbed geometry). And the dipole moment is pleasantly 0.000 debye, like it's supposed to be. . So, you guys are actually finding a symmetric solution when you use C1 (which is what's supposed to happen), and it's the correct-symmetry solution, unlike the C2v solution that Psi4 is falling into at this geometry. I take some small consolation in the fact that Q-Chem also finds the same C2v solution at 90 degrees, in my quick tests (with or without symmetry turned on). I don't know of a general strategy to teach Psi4 that D2 is a better choice in this case than C2v, because both are legitimate subgroups. And I don't think the idea of running everything in C1 is necessarily a good idea either, since then one is opened up to the possibility of getting unphysical symmetry breaking solutions like in the cas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349737355:1931,energy,energy,1931,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355,1,['energy'],['energy']
Energy Efficiency," 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. I 0; I-ECP 4 28; g potential; 1; 2 1.00000000 0.00000000; s-g potential; 3; 2 40.03337600 49.98964900; 2 17.30057600 281.00655600; 2 8.85172000 61.41673900; p-g potential; 4; 2 15.72014100 67.41623900; 2 15.20822200 134.80769600; 2 8.29418600 14.56654800; 2 7.75394900 28.96842200; d-g potential; 4; 2 13.81775100 35.53875600; 2 13.58780500 53.33975900; 2 6.94763000 9.71646600; 2 6.96009900 14.97750000; f-g potential; 4; 2 18.52295000 -20.17661800; 2 18.25103500 -26.08807700; 2 7.55790100 -0.22043400; 2 7.59740400 -0.22164600. """""",; key=""basis"",; name=""ECP+valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_ecp_plus_valence.dat"", False). psi4.energy(""scf""); e1 = psi4.variable(""HF TOTAL ENERGY""). ### valence only; psi4.basis_helper(; """"""; assign aug-cc-pvtz; assign I noecp. [noecp]; I 0; S 11 1.00; 5.546500D+03 1.560000D-04; 8.382140D+02 9.860000D-04; 1.821870D+02 2.792000D-03; 3.121230D+01 -4.325100D-02; 1.953140D+01 2.341340D-01; 8.240990D+00 -7.509430D-01; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.45",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:3063,energy,energy,3063,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760,2,['energy'],['energy']
Energy Efficiency," < mograd_max && std::fabs(DE) < (1.0 * tol_Eod)) break;`. ""G"" is the floor (replacing 4.0) for mograd `tol_grad` in. ```; if (options_[""RMS_MOGRAD_CONVERGENCE""].has_changed()) {; tol_grad = options_.get_double(""RMS_MOGRAD_CONVERGENCE"");; } else {; double temp;; temp = (-0.9 * std::log10(tol_Eod)) - 1.6;; if (temp < 4.0) {; temp = 4.0;; }; tol_grad = pow(10.0, -temp);; // tol_grad = 100.0*tol_Eod;; outfile->Printf(""\tFor this energy convergence, default RMS orbital gradient is: %12.2e\n"", tol_grad);; ```. Without interventions (first block below), 2 tests fail. Iterations range is 8-11. This is unchanged from before #1988 because the iterations are E-limited. With my first proposed intervention of meddling with E by 0.1 (middle block below), that heals everything but at a cost of nearly 3 more iterations; range 10-14. Meddling with G instead (third block below) by flooring at 6 fixes everything in avg of 1 more iteration; range 8-12. Plus G is at least all positive, rather than E, which can trigger convergence on small energy _increases_. So I've switched this PR to to the third block case. Note that iteration studies have been looking at olccd only; it may be worth examining # iter for other oo methods that were fine before this PR. E 1.0 G 4 (2 fail) avg 9.6 -- pre PR; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.45e-06 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.03e-06 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 4.81e-06 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 9.22e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 9.10e-07 < 1.00e-04 11; ```. E 0.1 G 4 (all pass) avg 12.2 -- early PR; ```; iter: abs( 9.85e-08) < 1.00e-07 1.90e-08 < 1.00e-04 10; iter: abs( 5.65e-08) < 1.00e-07 2.12e-08 < 1.00e-04 12; iter: abs( 5.08e-08) < 1.00e-07 1.91e-0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508:1528,energy,energy,1528,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508,1,['energy'],['energy']
Energy Efficiency," <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 >	 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. *** tstop() cal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10780,Energy,Energy,10780,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency, = 17337.37 minutes. *** PSI4 exiting successfully. Buy a developer a beer!; ```. ```; *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2797. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.017895394144. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 706; Number of virtual orbitals in truncated space: 662. ==> Memory <==. Total memory requirements: 84579.55 mb; 3-index integrals: 11059.10 mb; CCSD intermediates: 73520.46 mb. memory requirements for CCSD(T): 463642.28 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 24; Number of active occupied orbitals: 74; Number of active virtual orbitals: 662; Number of frozen virtual orbitals: 44. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 705. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -2.981564397886; SS MP2 FNO correction: -1.036330996258; MP2 FNO correction: -4.017895394144. OS MP2 correlation energy: -2.981564397886; SS MP2 correlation energy: -1.036330996258; MP2 correlation energy: -4.017895394144; * MP2 total energy: -1429.124041911880. OS CCSD correlation energy: -2.981564397886; SS CCSD correlation energy: -1.036330996258; CCSD correlation energy: -4.017895394144; * CCSD total energy: -1429.124041911880. Total time for CCSD iterations: 19691.81 s (user); 294.98 s (system); 1164 s (total). Time per iteration: inf s (user); inf s (system); inf s (total); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:6668,Energy,Energy,6668,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,10,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency," ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -8.185320 2Ag -0.873753. Virtual:. 1B3u -0.275716 1B1u -0.275716 1B2u -0.275716; 3Ag -0.110068 2B1u -0.075684 2B2u -0.075684; 2B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7117,Energy,Energy,7117,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency," > -Rob; > > ; > > On Wed, Jan 13, 2016 at 11:33 PM, Roberto Di Remigio <; > > notifications@github.com> wrote:; > > ; > > > Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+; > > > gives very different energies.; > > > The following input with the core guess gives a total energy of; > > > -75.5488580481183476; > > > ; > > > memory 250 mb; > > > molecule h2o {; > > > symmetry c1; > > > 1 2; > > > O 0.0000000000 0.0000000000 -0.2249058930; > > > H 1.4523499293 0.0000000000 0.8996235720; > > > H -1.4523499293 0.0000000000 0.8996235720; > > > units bohr; > > > no_reorient; > > > no_com; > > > }; > > > ; > > > set {; > > > basis cc-pVDZ; > > > scf_type direct; > > > guess core; > > > reference uhf; > > > e_convergence 7; > > > d_convergence 7; > > > }; > > > ; > > > energy_scf1 = energy('scf'); > > > ; > > > while this input with the SAD guess gives a total energy of; > > > -75.6330881795159655; > > > ; > > > memory 250 mb; > > > molecule h2o {; > > > symmetry c1; > > > 1 2; > > > O 0.0000000000 0.0000000000 -0.2249058930; > > > H 1.4523499293 0.0000000000 0.8996235720; > > > H -1.4523499293 0.0000000000 0.8996235720; > > > units bohr; > > > no_reorient; > > > no_com; > > > }; > > > ; > > > set {; > > > basis cc-pVDZ; > > > scf_type direct; > > > guess sad; > > > reference uhf; > > > e_convergence 7; > > > d_convergence 7; > > > }; > > > ; > > > energy_scf1 = energy('scf'); > > > ; > > > Of course, the initial guess has always a huge impact on the; > > > calculation,; > > > but is the reported difference reasonable for a system as small as; > > > H2O+?; > > > ; > > > —; > > > Reply to this email directly or view it on GitHub; > > > https://github.com/psi4/psi4public/issues/211.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/211#issuecomment-171564200.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/211#issuecomment-171646769.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/211#issuecomment-171648923:2241,energy,energy,2241,https://psicode.org,https://github.com/psi4/psi4/issues/211#issuecomment-171648923,1,['energy'],['energy']
Energy Efficiency," > > ; > > energy(‘scf’); > > ; > > # (b) for unrestricted HF; > > ; > > set reference uhf; > > energy(‘scf’); > > ; > > # (c) for B3LYP; > > ; > > set dft_functional b3lyp; > > set reference rks; > > energy(‘scf’); > > ; > > # (d) also for B3LYP; > > ; > > energy(‘b3lyp’); > > ; > > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > > ; > > set dft_functional b3lyp; > > energy(‘scf'); > > ; > > # (e) for unrestricted B3LYP; > > ; > > set dft_functional b3lyp; > > set reference uks; > > energy(‘scf’); > > ; > > # (f) also for unrestricted B3LYP; > > ; > > set reference uks; > > energy(‘b3lyp’); > > ; > > # (g) also for unrestricted B3LYP (since energy command trumps options,; > > ; > > uhf gets translated to uks); > > set reference uhf; > > energy(‘b3lyp’); > > ; > > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > > reference into the energy() call for HF or DFT (though for the latter you’d; > > have to use dft_functional keyword.; > > ; > > Francesco brings up a related and overdue point. If you specify an; > > open-shell molecule and no reference, it complains at you b/c rhf (the; > > default) is unsuitable. I couldn’t say concretely, but some other programs; > > will switch to an appropriate reference for open-shell. For psi4, it would; > > have to be rhf/rks because we don’t have roks. This would be convenient at; > > times, for instance, running databases of mixed closed/open shell.; > > ; > > Propositions to be considered:; > > ; > > (i) Keeping reference in one place, that is, as a keyword. Consequences:; > > retire rhf/uhf/rohf & rscf/uscf/roscf; > > ; > > (ii) If molecule is open-shell _and_ no reference has been specified,; > > switch to uhf. This could be tricky b/c we’re not set up to do this; > > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > > a series of molecules w/o explicitly setting refer",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:2966,energy,energy,2966,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['energy'],['energy']
Energy Efficiency," > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (DISP); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_disp.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (FIXED); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; > set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_fixed.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST; > ```; > ; > * I think it should be clear from the output file what exch-disp scheme/scale is applied. So perhaps add a couple lines to the printout like below. This should also satisfy Jonathon's request that the output file show the change in scaling defaults.; > ; > ```; > ==> E20 Dispersion (MP2) <==; > ; > ; > Disp20 (MP2) -0.37881730 [mEh]; > Exch-Disp20,u 0.02037338 [mEh]; > Scaling Scheme: Disp; > Scaling Factor: 0.707; > ; > SAP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:2778,energy,energy,2778,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,2,['energy'],['energy']
Energy Efficiency," @DF-UHF iter 2: -2.85520042336024 -3.47679e-07 7.68575e-06 DIIS; @DF-UHF iter 3: -2.85520042767878 -4.31854e-09 3.18063e-07 DIIS; @DF-UHF iter 4: -2.85520042768697 -8.19389e-12 7.59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: -4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: -4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.914188 . Alpha Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Beta Occupied: . 1A -0.914188 . Beta Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.85520042768698. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8820241745672806; Two-Electron Energy = 1.0268237468803001; Total Energy = -2.8552004276869805. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000; LUNO+3 : 5 A 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: -5.6000. Electronic Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: 5.5998. Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: -0.0002 Total: 0.0002. Dipole Moment: [D]; X: -0.0000 Y: -0.0000 Z: -0.0005 Total: 0.0005. /home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py:538: FutureWarning: Object arrays will not be saved by default in the future because `allow_pickle` will default to False. You should add `",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:9314,Energy,Energy,9314,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency," @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ; @DF-UKS iter 1: -1609.10793037762460 8.61725e+00 1.56461e-02 ADIIS/DIIS; @DF-UKS iter 2: -1513.75875168526773 9.53492e+01 2.55145e-02 ADIIS/DIIS; @DF-UKS iter 3: -1593.19511863655589 -7.94364e+01 2.00404e-02 ADIIS/DIIS; @DF-UKS iter 4: -1609.55961522174721 -1.63645e+01 1.54082e-02 ADIIS/DIIS; @DF-UKS iter 5: -1608.66721055388211 8.92405e-01 1.58428e-02 ADIIS/DIIS; @DF-UKS iter 6: -1606.15983763646909 2.50737e+00 1.65518e-02 ADIIS/DIIS; @DF-UKS iter 7: -1609.08727763024035 -2.92744e+00 1.55973e-02 ADIIS/DIIS; @DF-UKS iter 8: -1609.36600587362682 -2.78728e-01 1.55155e-02 ADIIS/DIIS; @DF-UKS iter 9: -1609.42810677829789 -6.21009e-02 1.54740e-02 ADIIS/DIIS; @DF-UKS iter 10: -1609.36720577250594 6.09010e-02 1.54956e-02 ADIIS/DIIS; @DF-UKS iter 11: -1609.31568466585577 5.15211e-02 1.55009e-02 ADIIS/DIIS; @DF-UKS iter 12: -1609.30063403912891 1.50506e-02 1.55077e-02 ADIIS/DIIS; @DF-UKS iter 13: -1527.666502700",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:1909,Energy,Energy,1909,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473,1,['Energy'],['Energy']
Energy Efficiency," @RKS iter 89: -128.84997768340841 -3.17755e-11 2.03835e-06 DIIS; @RKS iter 90: -128.84997768340452 3.89377e-12 2.83140e-06 DIIS; @RKS iter 91: -128.84997768341313 -8.61178e-12 4.42947e-06 DIIS; @RKS iter 92: -128.84997768341492 -1.79057e-12 3.69111e-06 DIIS; @RKS iter 93: -128.84997768340847 6.45173e-12 1.00965e-05 DIIS; @RKS iter 94: -128.84997768341520 -6.73595e-12 5.17369e-06 DIIS; @RKS iter 95: -128.84997768341461 5.96856e-13 4.11707e-06 DIIS; @RKS iter 96: -128.84997768340847 6.13909e-12 4.30105e-06 DIIS; @RKS iter 97: -128.84997768341833 -9.86233e-12 2.90666e-06 DIIS; @RKS iter 98: -128.84997768339980 1.85310e-11 5.70420e-06 DIIS; @RKS iter 99: -128.84997768338903 1.07718e-11 2.47201e-06 DIIS; @RKS iter 100: -128.84997768342927 -4.02451e-11 7.70997e-06 DIIS. ==> Post-Iterations <==. Failed to converge.; Iterations did not converge.; Traceback (most recent call last):; File ""/root/psi4/build/stage/share/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 2009, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError:; Fatal Error: Iterations did not converge.; Error occurred in file: /root/psi4/psi4/src/psi4/libpsi4util/process.cc on line: 112; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Psi4 stopped on: Wednesday, 13 June 2018 11:12AM; Psi4 wall time for execution: 0:00:23.39. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:23092,energy,energy,23092,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,2,['energy'],['energy']
Energy Efficiency, Delta E Res. Norm Conv?; 1 0.3243016097 -1.01e-09 3.48e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=29 L=24 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1769,Energy,Energy,1769,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency, Delta E Res. Norm Conv?; 1 0.3243016107 -1.26e-08 5.76e-06 N; 2 0.3285655293 2.78e-16 6.43e-07 Y; Iter=28 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016097 -1.01e-09 3.48e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=29 L=24 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1642,Energy,Energy,1642,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency, Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; Iter=44 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016043 -7.30e-10 7.68e-07 Y; 2 0.3285655297 -2.33e-11 3.26e-06 N; I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1897,Energy,Energy,1897,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency, Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; Iter=44 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016043 -7.30e-10 7.68e-07 Y; 2 0.3285655297 -2.33e-11 3.26e-06 N; Iter=45 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016047 4.83e-10 7.73e-07 Y; 2 0.3285655297 -1.39e-12 3.26e-06 N; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:2023,Energy,Energy,2023,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency, Delta E Res. Norm Conv?; 1 0.3243016234 1.06e-08 9.79e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=27 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016107 -1.26e-08 5.76e-06 N; 2 0.3285655293 2.78e-16 6.43e-07 Y; Iter=28 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016097 -1.01e-09 3.48e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=29 L=24 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1515,Energy,Energy,1515,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency," EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4176,Energy,Energy,4176,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['Energy'],['Energy']
Energy Efficiency," File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > super",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:2937,energy,energy,2937,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['energy'],['energy']
Energy Efficiency," H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; """"""). print(' -D correction from Py-side'); eneyne.update_geometry(); > E, G = eneyne.run_dftd3('b3lyp', 'd2'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:202:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/qcdb/molecule.py:1298: in run_dftd3; verbose=verbose); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. molrec = {'elbl': ['', '', '', '', '', '', ...], 'elea': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}; name_hint = 'b3lyp', level_hint = 'd2', param_tweaks = None, ptype = 'gradient', dashcoeff_supplement = None; verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:9866,energy,energy,9866,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency," I ran the same computation as in #1596 but with the 6-31G basis (all other parameters being the same). I attach Q-Chem output file.; [BODIPY.txt](https://github.com/psi4/psi4/files/3073222/BODIPY.txt). Here's the summary of ADC(2) results from Q-Chem (can't quite figure out how to format this on GitHub):; --------------------------------------------------------------------------------; HF Summary ; --------------------------------------------------------------------------------; Energy: -906.6356657873 a.u.; Dip. moment [a.u.]: [ 3.494726, -0.033111, -1.462926]; Total dipole [Debye]: 9.629954; <r^2> [a.u.]: [2923.854114, 1346.264718, 630.542572]; Total <r^2> [a.u.]: 4900.661404; --------------------------------------------------------------------------------. --------------------------------------------------------------------------------; MP(2) Summary ; --------------------------------------------------------------------------------; Energy contribution: -1.8309391560 a.u.; Total energy: -908.4666049433 a.u.; Dip. moment [a.u.]: [ 3.265989, -0.052169, -1.229851]; Total dipole [Debye]: 8.871367; <r^2> [a.u.]: [2923.192179, 1346.473546, 629.676198]; Total <r^2> [a.u.]: 4899.341924; --------------------------------------------------------------------------------; Starting Davidson ... ; --------------------------------------------------------------------------------; It NVec Conv Avg. Norm Max. Norm Conv. states Remark; --------------------------------------------------------------------------------; 2 0 3.605e-01 5.138e-01 0.1878 n n Guess.; 1 4 0 1.105e-01 1.726e-01 0.0174 n n ; 2 6 0 3.198e-02 5.191e-02 0.0066 n n ; 3 8 0 1.563e-02 2.479e-02 0.0049 n n ; 4 10 0 9.895e-03 1.453e-02 0.0045 n n ; 5 12 0 6.530e-03 1.034e-02 0.0043 n n ; 6 14 0 5.263e-03 8.300e-03 0.0043 n n ; 7 16 0 5.542e-03 1.031e-02 0.0042 n n ; 8 18 0 3.255e-02 6.506e-02 0.0042 n n ; 9 20 0 1.320e-02 2.638e-02 0.0042 n n ; 10 4 0 9.744e-03 1.948e-02 0.0042 n n Subspace collapsed.; 11 6 0 4.088e-03",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190:1059,energy,energy,1059,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190,1,['energy'],['energy']
Energy Efficiency," Keeping reference in one place, that is, as a keyword. Consequences:; > retire rhf/uhf/rohf & rscf/uscf/roscf; > ; > (ii) If molecule is open-shell _and_ no reference has been specified,; > switch to uhf. This could be tricky b/c we’re not set up to do this; > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > a series of molecules w/o explicitly setting reference.; > ; > Lori; > ; > > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com; > > wrote:; > > ; > > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > > That sounds ok to me (then reference just has to be defined properly).; > > ; > > What about DFT, do we define functional properly and do energy('dft'),; > > etc.?; > > ; > > David; > > ; > > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns <notifications@github.com; > > ; > > wrote:; > > ; > > > Fixed by 6f6d3aa; > > > <; > > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > > ; > > > though I rather think now that defining; > > > hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > > energy() was a bad idea (by me) a few years ago (except for ""hf""; > > > itself).; > > > Nevertheless, as this ticket points out, having defined these names; > > > only; > > > for energy() confounds the driver logic. These convenience names are; > > > now in; > > > place for gradient() and property().; > > > ; > > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > > prop() if others concur with my present assessment.; > > > ; > > > —; > > > Reply to this email directly or view it on GitHub; > > > <https://github.com/psi4/psi4public/issues/103#issuecomment-109846967; > > > .; > > > ; > > > —; > > > Reply to this email directly or view it on GitHub <; > > > https://github.com/psi4/psi4public/issues/103#issuecomment-110021718>.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/103#issuecomment-110183382.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110194494:3377,energy,energy,3377,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110194494,3,['energy'],['energy']
Energy Efficiency," Name: JUN-CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 46 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/jun-cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000 0.000000000000 1.481692970000 4.002603254130. Running in c1 symmetry. Rotational constants: A = ************ B = 0.95920 C = 0.95920 [cm^-1]; Rotational constants: A = ************ B = 28755.98304 C = 28755.98304 [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 2; Nalpha = 1; Nbeta = 1. ==> Algorithm <==. SCF Algorithm Type is MEM_DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-12; Density threshold = 1.00e-12; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: JUN-CC-PVDZ; Blend: JUN-CC-PVDZ; Number of shells: 6; Number of basis function: 10; Number of Cartesian functions: 10; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (JUN-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry HE line 39 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/def2-qzvpp-jkfit.gbs . Computing basis projection from 3-21G to JUN-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 0 0 0 0; -------------------------------------------------------; Total 10 10 1 1 1 0; ---------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:6343,Charge,Charge,6343,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Charge'],['Charge']
Energy Efficiency," New Methods ; ----------- ; ; - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT (#1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:416,charge,charge,416,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['charge'],['charge']
Energy Efficiency, Passed 16.42 sec; Start 117: ao-dfcasscf-sp; 335/412 Test #346: dfep2-2 .......................... Passed 16.45 sec; Start 362: x2c2; 336/412 Test #333: scf-occ .......................... Passed 16.55 sec; Start 402: json-schema-1-orient; 337/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 15.93 sec; Start 204: frac; 338/412 Test #119: dfcasscf-fzc-sp .................. Passed 16.16 sec; Start 234: mp3-grad1; 339/412 Test #385: psi4numpy-rhf-hessian ............ Passed 17.46 sec; Start 344: stability1; 340/412 Test #117: ao-dfcasscf-sp ................... Passed 15.92 sec; Start 294: psimrcc-pt2; 341/412 Test #352: dft-reference .................... Passed 16.96 sec; Start 232: mp2p5-grad1; 342/412 Test #362: x2c2 ............................. Passed 15.80 sec; Start 229: mp2-grad1; 343/412 Test #402: json-schema-1-orient ............. Passed 15.20 sec; Start 236: mp2-property; 344/412 Test #204: frac ............................. Passed 16.15 sec; Start 400: json-schema-1-energy; 345/412 Test #234: mp3-grad1 ........................ Passed 16.23 sec; Start 121: dfccd1; 346/412 Test #294: psimrcc-pt2 ...................... Passed 15.65 sec; Start 235: mp3-grad2; 347/412 Test #232: mp2p5-grad1 ...................... Passed 15.30 sec; Start 345: dfep2-1; 348/412 Test #344: stability1 ....................... Passed 17.53 sec; Start 131: dfmp2-2; 349/412 Test #229: mp2-grad1 ........................ Passed 15.76 sec; Start 389: python-curve; 350/412 Test #236: mp2-property ..................... Passed 17.20 sec; Start 412: skeletonwavefunction; 351/412 Test #121: dfccd1 ........................... Passed 16.01 sec; Start 289: psimrcc-ccsd_t-2; 352/412 Test #400: json-schema-1-energy ............. Passed 17.40 sec; Start 363: x2c3; 353/412 Test #235: mp3-grad2 ........................ Passed 17.24 sec; Start 409: skeletonmointegrals; 354/412 Test #131: dfmp2-2 .......................... Passed 16.94 sec; Start 353: stability2; 355/412 Test #345: dfep2-1 ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:32250,energy,energy,32250,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency, Passed 2.10 sec; Start 157: dft-grac; 358/411 Test #223: molden1 .......................... Passed 3.64 sec; Start 229: mp2-grad2; 359/411 Test #381: psi4numpy-dfmp2 .................. Passed 3.08 sec; Start 289: psimrcc-ccsd_t-3; 360/411 Test #328: scf-upcast-custom-basis .......... Passed 1.98 sec; Start 408: skeletonmointegrals; 361/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 2.96 sec; Start 228: mp2-grad1; 362/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.19 sec; Start 349: sapt-sf1; 363/411 Test #395: python-mints13 ................... Passed 1.96 sec; Start 96: cisd-h2o-clpse; 364/411 Test #408: skeletonmointegrals .............. Passed 1.03 sec; Start 233: mp3-grad1; 365/411 Test #157: dft-grac ......................... Passed 1.50 sec; Start 400: json-schema-1-ghost; 366/411 Test #229: mp2-grad2 ........................ Passed 1.50 sec; Start 333: scf2; 367/411 Test #349: sapt-sf1 ......................... Passed 1.13 sec; Start 353: tu1-h2o-energy; 368/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.53 sec; Start 411: skeletonwavefunction; 369/411 Test #228: mp2-grad1 ........................ Passed 1.56 sec; Start 231: mp2p5-grad1; 370/411 Test #96: cisd-h2o-clpse ................... Passed 1.22 sec; Start 298: pubchem2; 371/411 Test #400: json-schema-1-ghost .............. Passed 1.05 sec; Start 102: decontract; 372/411 Test #233: mp3-grad1 ........................ Passed 1.31 sec; Start 410: skeletonsointegrals; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 398: json-v11-gradient; 374/411 Test #411: skeletonwavefunction ............. Passed 0.99 sec; Start 210: mcscf2; 375/411 Test #333: scf2 ............................. Passed 1.33 sec; Start 330: scf-bs; 376/411 Test #231: mp2p5-grad1 ...................... Passed 1.46 sec; Start 354: tu2-ch2-energy; 377/411 Test #102: decontract ....................... Passed 1.11 sec; Start 406: skeletonaointegrals; 378/411 Test #410: skeletonsoint,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:34360,energy,energy,34360,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency, Passed 37.28 sec; Start 325: sapt8; 208/412 Test #292: psimrcc-fd-freq1 ................. Passed 41.25 sec; Start 239: nbody-intermediates; 209/412 Test #316: sapt1 ............................ Passed 49.94 sec; Start 218: mints6; 210/412 Test #147: dfomp3-1 ......................... Passed 38.24 sec; Start 177: extern1; 211/412 Test #24: cc12 ............................. Passed 40.12 sec; Start 302: pywrap-basis; 212/412 Test #54: cc37 ............................. Passed 39.52 sec; Start 219: mints8; 213/412 Test #200: fnocc1 ........................... Passed 33.21 sec; Start 394: python-3-index-transforms; 214/412 Test #91: cepa1 ............................ Passed 33.96 sec; Start 151: dfomp2p5-1; 215/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 49.99 sec; Start 106: dcft-grad3; 216/412 Test #297: psithon2 ......................... Passed 44.73 sec; Start 165: dft-grad1; 217/412 Test #276: opt9 ............................. Passed 42.06 sec; Start 14: cbs-xtpl-energy; 218/412 Test #139: dfmp2-grad5 ...................... Passed 41.56 sec; Start 370: dft-jk; 219/412 Test #179: fsapt1 ........................... Passed 2034.87 sec; Start 269: opt2-fd; 220/412 Test #144: dfomp2-grad1 ..................... Passed 33.75 sec; Start 102: cubeprop; 221/412 Test #341: soscf-large ...................... Passed 44.46 sec; Start 287: props3; 222/412 Test #325: sapt8 ............................ Passed 41.28 sec; Start 351: dft-custom; 223/412 Test #177: extern1 .......................... Passed 38.65 sec; Start 198: freq-isotope1; 224/412 Test #218: mints6 ........................... Passed 41.21 sec; Start 358: tu4-h2o-freq; 225/412 Test #151: dfomp2p5-1 ....................... Passed 29.55 sec; Start 367: dft-smoke; 226/412 Test #394: python-3-index-transforms ........ Passed 34.82 sec; Start 369: scf-freq1; 227/412 Test #239: nbody-intermediates .............. Passed 43.24 sec; Start 286: props2; 228/412 Test #302: pywrap-basis ..................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:20505,energy,energy,20505,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency," Sebastian,. Which version of Psi is this, beta5? We have been having a little trouble; reproducing the problem. Also, do you have a .psi4rc file, and if so, what's in it?. Thanks,; David. On Wed, Feb 4, 2015 at 5:47 PM, Sebastian Wouters notifications@github.com; wrote:. > Hi,; > ; > The input file for the problem described below:; > ; > molecule C6H6 {; > 0 1; > C 0.0 1.855 0.0; > C 0.0 -1.855 0.0; > C 1.6064771240201337 0.9275 0.0; > C 1.6064771240201337 -0.9275 0.0; > C -1.6064771240201337 0.9275 0.0; > C -1.6064771240201337 -0.9275 0.0; > H 0.0 3.289 0.0; > H 0.0 -3.289 0.0; > H 2.848357553047019 1.6445 0.0; > H 2.848357553047019 -1.6445 0.0; > H -2.848357553047019 1.6445 0.0; > H -2.848357553047019 -1.6445 0.0; > units au; > }; > ; > set basis cc-pVDZ; > set reference rhf; > set e_convergence 1e-12; > set d_convergence 1e-12; > set ints_tolerance 0.0; > ; > optimize('b3lyp'); > ; > When you run the geometry optimization in the /tmp folder, the geometry of; > the SCF doesn't get updated:; > ; > First SCF:; > ; > Geometry (in Bohr), charge = 0, multiplicity = 1:; > ; > Center X Y Z; > ; > ---; > ; > ```; > C -0.000000000000 1.855000000000 0.000000000000; > C 0.000000000000 -1.855000000000 0.000000000000; > C 1.606477124020 0.927500000000 0.000000000000; > C 1.606477124020 -0.927500000000 0.000000000000; > C -1.606477124020 0.927500000000 0.000000000000; > C -1.606477124020 -0.927500000000 0.000000000000; > H -0.000000000000 3.289000000000 0.000000000000; > H 0.000000000000 -3.289000000000 0.000000000000; > H 2.848357553047 1.644500000000 0.000000000000; > H 2.848357553047 -1.644500000000 0.000000000000; > H -2.848357553047 1.644500000000 0.000000000000; > H -2.848357553047 -1.644500000000 0.000000000000; > ```; > ; > At the end of optking:; > ; > ```; > Writing optimization data to binary file.; > Structure for next step:; > Cartesian Geometry (in Angstrom); > C -0.0000000000 0.9816237969 0.0000000000; > C 0.0000000000 -0.9816237969 0.0000000000; > C 0.850111145",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/66#issuecomment-73061426:1057,charge,charge,1057,https://psicode.org,https://github.com/psi4/psi4/issues/66#issuecomment-73061426,1,['charge'],['charge']
Energy Efficiency," So I would make another python module, `psi2adcc` say, and in it implement the routing between psi4 and adcc. Then adcc is one of its `setup.py` dependencies. In this python module I will need to adapt `psi4.driver.procedures['energy']['adc2']` and similar and add my energy function. So far, so good. Now the problem I see is that in a vanilla Psi4 version without adcc-support, `psi4.driver.procedures['energy']['adc2']` is assigned to `run_adc`, which rightfully runs the ADC(2) implementation in Psi4. If my plugin is loaded, however, this should become a `select_adc2` method, which either picks the `run_adc` in my plugin or the `run_adc` in Psi4, depending on some user settings. One option to resolve this is to give the adcc methods a different name, e.g. `adcc-adc(2)`. This is roughly what is done e.g. in the `gpu_dfcc` plugin to distinguish against the CPU versions if I understand correctly. For me this solution does not feel very satisfying, however, because now it's again the user's responsibility to select the right ADC implementation.; Another option is to implement a dummy `select_adc` in Psi4, which does no branching and always falls to the built-in implementation. This could then be monkey-patched in my plugin by wrapping it somehow ... but that is not clean either. . Alternative is to integrate deeper into the python layer and subject to the availablity of the `adcc` module either have two branches in `select_adc` or just one. That's what I will pursue now if there are no other thoughts. --. About the wavefunction object: I have not looked at the Psi4 implementation details (or the schema) so far, but roughly speaking it's (for each excited state) the excitation energy, a few property vectors and AO density matrices. Theoretically one could also export the full excitation vector, but that involves copying a rank-4 tensor, so I would not do that. But one can export important amplitudes, which is a mapping from a pair / quadruple of integers to a real value.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584:2056,energy,energy,2056,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584,1,['energy'],['energy']
Energy Efficiency, Start 288: psimrcc-ccsd_t-1; 372/412 Test #353: stability2 ....................... Passed 2.45 sec; Start 381: psi4numpy-cphf; 373/412 Test #224: molden1 .......................... Passed 14.30 sec; Start 405: json-schema-1-properties; 374/412 Test #222: mints9 ........................... Passed 1.97 sec; Start 401: json-schema-1-ghost; 375/412 Test #211: mcscf2 ........................... Passed 2.51 sec; Start 397: python-memdfjk; 376/412 Test #411: skeletonsointegrals .............. Passed 1.93 sec; Start 299: pubchem2; 377/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.52 sec; Start 388: python-energy; 378/412 Test #221: mints-helper ..................... Passed 1.67 sec; Start 399: json-v11-gradient; 379/412 Test #223: mints10 .......................... Passed 2.18 sec; Start 335: scf3; 380/412 Test #396: python-mints13 ................... Passed 1.96 sec; Start 212: mcscf3; 381/412 Test #363: x2c3 ............................. Passed 3.02 sec; Start 379: mints12; 382/412 Test #354: tu1-h2o-energy ................... Passed 1.83 sec; Start 310: pywrap-molecule; 383/412 Test #381: psi4numpy-cphf ................... Passed 1.45 sec; Start 210: mcscf1; 384/412 Test #397: python-memdfjk ................... Passed 0.98 sec; Start 217: mints5; 385/412 Test #4: casscf-semi ...................... Passed 15.97 sec; Start 383: psi4numpy-rhf; 386/412 Test #103: decontract ....................... Passed 1.76 sec; Start 240: numpy-array-interface; 387/412 Test #401: json-schema-1-ghost .............. Passed 1.26 sec; Start 213: mints1; 388/412 Test #405: json-schema-1-properties ......... Passed 1.52 sec; Start 175: docs-bases; 389/412 Test #388: python-energy .................... Passed 1.01 sec; Start 309: pywrap-db3; 390/412 Test #335: scf3 ............................. Passed 0.79 sec; Start 209: matrix1; 391/412 Test #212: mcscf3 ........................... Passed 0.75 sec; Start 216: mints4; 392/412 Test #210: mcscf1 ........................... Passed 0.78,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:35978,energy,energy,35978,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency, Start 290: psimrcc-ccsd_t-3; 317/412 Test #118: dfcasscf-sa-sp ................... Passed 26.23 sec; Start 352: dft-reference; 318/412 Test #247: omp2-1 ........................... Passed 22.97 sec; Start 329: scf-upcast-custom-basis; 319/412 Test #263: omp3-grad1 ....................... Passed 24.21 sec; Start 204: frac; 320/412 Test #328: scf-guess-read1 .................. Passed 23.52 sec; Start 117: ao-dfcasscf-sp; 321/412 Test #392: python-mints2 .................... Passed 24.57 sec; Start 362: x2c2; 322/412 Test #142: dfomp2-3 ......................... Passed 26.52 sec; Start 402: json-schema-1-orient; 323/412 Test #315: sad1 ............................. Passed 24.75 sec; Start 236: mp2-property; 324/412 Test #252: omp2-grad1 ....................... Passed 25.97 sec; Start 344: stability1; 325/412 Test #284: opt-freeze-coords ................ Passed 26.18 sec; Start 345: dfep2-1; 326/412 Test #385: psi4numpy-rhf-hessian ............ Passed 25.08 sec; Start 398: json-v11-energy; 327/412 Test #135: dfmp2-grad1 ...................... Passed 23.71 sec; Start 400: json-schema-1-energy; 328/412 Test #346: dfep2-2 .......................... Passed 23.48 sec; Start 389: python-curve; 329/412 Test #312: rasci-h2o ........................ Passed 23.59 sec; Start 235: mp3-grad2; 330/412 Test #333: scf-occ .......................... Passed 23.80 sec; Start 232: mp2p5-grad1; 331/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 23.57 sec; Start 229: mp2-grad1; 332/412 Test #329: scf-upcast-custom-basis .......... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf-sp ................... Passed 24.09 sec; Start 234: mp3-grad1; 334/412 Test #352: dft-reference .................... Passed 26.09 sec; Start 294: psimrcc-pt2; 335/412 Test #204: frac ............................. Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ............................. Passed 23.73 sec; Start 412: skeletonwavefunction; 337/412 Test #402: json-schema-1-o,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:30765,energy,energy,30765,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency, Start 325: scf-bz2; 14/411 Test #325: scf-bz2 .......................... Passed 101.48 sec; Start 1: adc1; 15/411 Test #1: adc1 ............................. Passed 21.21 sec; Start 2: adc2; 16/411 Test #2: adc2 ............................. Passed 34.53 sec; Start 3: casscf-fzc-sp; 17/411 Test #3: casscf-fzc-sp .................... Passed 2.66 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.72 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.18 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.12 sec; Start 7: casscf-sp; 21/411 Test #7: casscf-sp ........................ Passed 6.39 sec; Start 8: castup1; 22/411 Test #8: castup1 .......................... Passed 1.55 sec; Start 9: castup2; 23/411 Test #9: castup2 .......................... Passed 3.53 sec; Start 10: castup3; 24/411 Test #10: castup3 .......................... Passed 3.78 sec; Start 11: cbs-delta-energy; 25/411 Test #11: cbs-delta-energy ................. Passed 23.24 sec; Start 12: cbs-parser; 26/411 Test #12: cbs-parser ....................... Passed 12.37 sec; Start 13: cbs-xtpl-alpha; 27/411 Test #13: cbs-xtpl-alpha ................... Passed 59.71 sec; Start 14: cbs-xtpl-energy; 28/411 Test #14: cbs-xtpl-energy .................. Passed 8.36 sec; Start 15: cbs-xtpl-freq; 29/411 Test #15: cbs-xtpl-freq .................... Passed 5.43 sec; Start 16: cbs-xtpl-gradient; 30/411 Test #16: cbs-xtpl-gradient ................ Passed 12.13 sec; Start 17: cbs-xtpl-opt; 31/411 Test #17: cbs-xtpl-opt ..................... Passed 32.38 sec; Start 19: cbs-xtpl-wrapper; 32/411 Test #19: cbs-xtpl-wrapper ................. Passed 37.42 sec; Start 20: cc1; 33/411 Test #20: cc1 .............................. Passed 6.42 sec; Start 21: cc10; 34/411 Test #21: cc10 ............................. Passed 3.59 sec; Start 22: cc11; 35/411 Test #22: cc11 ............................. Passed 3.22 sec; Start 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:2318,energy,energy,2318,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,2,['energy'],['energy']
Energy Efficiency, Start 325: scf-bz2; 14/411 Test #325: scf-bz2 .......................... Passed 117.02 sec; Start 1: adc1; 15/411 Test #1: adc1 ............................. Passed 21.02 sec; Start 2: adc2; 16/411 Test #2: adc2 ............................. Passed 38.38 sec; Start 3: casscf-fzc-sp; 17/411 Test #3: casscf-fzc-sp .................... Passed 2.85 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.66 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.72 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.05 sec; Start 7: casscf-sp; 21/411 Test #7: casscf-sp ........................ Passed 6.75 sec; Start 8: castup1; 22/411 Test #8: castup1 .......................... Passed 1.50 sec; Start 9: castup2; 23/411 Test #9: castup2 .......................... Passed 4.01 sec; Start 10: castup3; 24/411 Test #10: castup3 .......................... Passed 4.07 sec; Start 11: cbs-delta-energy; 25/411 Test #11: cbs-delta-energy ................. Passed 28.35 sec; Start 12: cbs-parser; 26/411 Test #12: cbs-parser ....................... Passed 10.90 sec; Start 13: cbs-xtpl-alpha; 27/411 Test #13: cbs-xtpl-alpha ................... Passed 73.68 sec; Start 14: cbs-xtpl-energy; 28/411 Test #14: cbs-xtpl-energy .................. Passed 8.11 sec; Start 15: cbs-xtpl-freq; 29/411 Test #15: cbs-xtpl-freq .................... Passed 6.02 sec; Start 16: cbs-xtpl-gradient; 30/411 Test #16: cbs-xtpl-gradient ................ Passed 11.17 sec; Start 17: cbs-xtpl-opt; 31/411 Test #17: cbs-xtpl-opt ..................... Passed 33.93 sec; Start 19: cbs-xtpl-wrapper; 32/411 Test #19: cbs-xtpl-wrapper ................. Passed 39.62 sec; Start 20: cc1; 33/411 Test #20: cc1 .............................. Passed 8.61 sec; Start 21: cc10; 34/411 Test #21: cc10 ............................. Passed 4.22 sec; Start 22: cc11; 35/411 Test #22: cc11 ............................. Passed 4.24 sec; Start 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:2338,energy,energy,2338,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,2,['energy'],['energy']
Energy Efficiency, Start 350: sapt-sf1; 355/412 Test #357: scf-response1 .................... Passed 25.39 sec; Start 404: json-schema-1-gradient; 356/412 Test #409: skeletonmointegrals .............. Passed 23.56 sec; Start 299: pubchem2; 357/412 Test #334: scf2 ............................. Passed 23.93 sec; Start 407: skeletonaointegrals; 358/412 Test #222: mints9 ........................... Passed 24.90 sec; Start 354: tu1-h2o-energy; 359/412 Test #382: psi4numpy-dfmp2 .................. Passed 24.00 sec; Start 331: scf-bs; 360/412 Test #406: skeleton ......................... Passed 23.35 sec; Start 103: decontract; 361/412 Test #353: stability2 ....................... Passed 23.10 sec; Start 223: mints10; 362/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 23.62 sec; Start 221: mints-helper; 363/412 Test #408: skeletondfmp2 .................... Passed 22.75 sec; Start 411: skeletonsointegrals; 364/412 Test #8: castup1 .......................... Passed 23.16 sec; Start 355: tu2-ch2-energy; 365/412 Test #391: python-mints9 .................... Passed 24.17 sec; Start 381: psi4numpy-cphf; 366/412 Test #189: fci-tdm .......................... Passed 23.11 sec; Start 401: json-schema-1-ghost; 367/412 Test #211: mcscf2 ........................... Passed 23.47 sec; Start 384: psi4numpy-rhf-gradient; 368/412 Test #350: sapt-sf1 ......................... Passed 22.50 sec; Start 397: python-memdfjk; 369/412 Test #396: python-mints13 ................... Passed 23.34 sec; Start 215: mints3; 370/412 Test #404: json-schema-1-gradient ........... Passed 23.57 sec; Start 379: mints12; 371/412 Test #407: skeletonaointegrals .............. Passed 22.71 sec; Start 405: json-schema-1-properties; 372/412 Test #299: pubchem2 ......................... Passed 22.82 sec; Start 335: scf3; 373/412 Test #331: scf-bs ........................... Passed 22.57 sec; Start 388: python-energy; 374/412 Test #223: mints10 .......................... Passed 22.74 sec; Start 310: pywrap-molecule; 375/412 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:34423,energy,energy,34423,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency," TS, DIIS; @DF-MCSCF 23: -112.523829840598 -1.5632e-13 6.16e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 24: -112.523829840598 -2.8422e-14 4.59e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 25: -112.523829840598 -1.1369e-13 2.09e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 26: -112.523829840598 0.0000e+00 3.15e-09 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 27: -112.523829840598 2.8422e-14 1.21e-09 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 28: -112.523829840598 -4.2633e-14 2.51e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 29: -112.523829840598 -4.2633e-14 2.29e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 30: -112.523829840588 4.2633e-14 1.05e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 31: -112.523829840588 -2.8422e-14 2.75e-11 0.00e+00 12 1 TS, DIIS. @DF-MCSCF has converged!. @DF-MCSCF Final Energy: -112.523829840588462. Computing CI Semicanonical Orbitals. ==> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Attempting to use 1 previous converged vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -111.417799029788 -2.4659E+01 1.1817E+00 ; @CI 1: 0 -112.189379709492 -7.7158E-01 3.5706E-01 ; @CI 2: 0 -112.250278204452 -6.0898E-02 3.1809E-01 ; @CI 3: 0 -112.324883713784 -7.4606E-02 2.2146E-01 ; @CI 4: 0 -112.352310238893 -2.7427E-02 1.2530E-01 ; @CI 5: 0 -112.358631917780 -6.3217E-03 9.7660E-02 ; @CI 6: 0 -112.365095716692 -6.4638E-03 7.3202E-02 ; @CI 7: 0 -112.366948614338 -1.8529E-03 5.3732E-02 ; @CI 8: 0 -112.372824198774 -5.8756E-03 1.1022E-01 ; @CI 9: 0 -112.387582513115 -1.4758E-02 1.8337E-01 ; @CI 10: 0 -112.410692911567 -2.3110E-02 2.3866E-01 ; @CI 11: 0 -112.444565012608 -3.3872E-02 2.3335E-01 ; @CI 12: 0 -112.483195864884 -3.8631E-02 1.9437E-01 . Warning! CI diagonalization did not fully converge!. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.483195864884152; ```. However, with line 371, I get:; ```; @DF-MCSCF 30: -112.52382984058",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:2906,Energy,Energy,2906,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,1,['Energy'],['Energy']
Energy Efficiency, Test #162: dft-grad-lr3 ..................... Passed 473.06 sec; Start 41: cc26; 8/411 Test #103: dcft-grad1 ....................... Passed 617.53 sec; Start 110: dcft4; 9/411 Test #39: cc24 ............................. Passed 338.53 sec; Start 40: cc25; 10/411 Test #182: isapt1 ........................... Passed 433.14 sec; Start 305: pywrap-checkrun-rohf; 11/411 Test #41: cc26 ............................. Passed 423.76 sec; Start 38: cc23; 12/411 Test #35: cc2 .............................. Passed 450.90 sec; Start 36: cc21; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 571.32 sec; Start 42: cc27; 14/411 Test #394: python-vibanalysis ............... Passed 966.42 sec; Start 76: cc7; 15/411 Test #40: cc25 ............................. Passed 480.63 sec; Start 18: cbs-xtpl-func; 16/411 Test #36: cc21 ............................. Passed 484.30 sec; Start 181: fsapt-allterms; 17/411 Test #38: cc23 ............................. Passed 495.58 sec; Start 193: fd-freq-energy-large; 18/411 Test #42: cc27 ............................. Passed 441.98 sec; Start 195: fd-freq-gradient-large; 19/411 Test #76: cc7 .............................. Passed 452.44 sec; Start 278: opt13; 20/411 Test #305: pywrap-checkrun-rohf ............. Passed 627.45 sec; Start 111: dcft5; 21/411 Test #110: dcft4 ............................ Passed 890.57 sec; Start 145: dfomp2-grad3; 22/411 Test #195: fd-freq-gradient-large ........... Passed 305.38 sec; Start 240: ocepa-freq1; 23/411 Test #111: dcft5 ............................ Passed 303.53 sec; Start 373: dft-custom-mgga; 24/411 Test #193: fd-freq-energy-large ............. Passed 541.73 sec; Start 112: dcft6; 25/411 Test #373: dft-custom-mgga .................. Passed 188.78 sec; Start 114: dcft8; 26/411 Test #181: fsapt-allterms ................... Passed 611.68 sec; Start 359: tu6-cp-ne2; 27/411 Test #178: fsapt1 ........................... Passed 2082.73 sec; Start 29: cc14; 28/411 Test #112: dcft6 .........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:1862,energy,energy-large,1862,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy-large']
Energy Efficiency," Tracing back to [here](https://github.com/Acellera/htmd/pull/409#discussion_r139685402), I think they're still psithon, so this PR may have targeted the wrong approach. Or I may have all my pcmsolver input redirects quite confused. This being the fourth package that has conspired against conda, it may be one too many. ```; RHF-PCM, total algorithm; Error: Error: Getkw, line 33 in /scratch/psilocaluser/conda-builds/pcmsolver_1499412893611/work/src/utils/getkw/Getkw.cpp: Open failed: @pcmsolver.inp; ```. ```; print('RHF-PCM, total algorithm'); > energy_scf1, wfn1 = psi4.energy('scf', return_wfn=True). ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/tests/test_addons.py:425: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/driver.py:460: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1996: in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1271: in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. name = 'scf', ref_wfn = <psi4.core.Wavefunction object at 0x7fa9d0ef4af0>, reference = 'RHF'. def scf_wavefunction_factory(name, ref_wfn, reference):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818#issuecomment-353769977:1555,energy,energy,1555,https://psicode.org,https://github.com/psi4/psi4/pull/818#issuecomment-353769977,2,['energy'],['energy']
Energy Efficiency," TypeError('Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):\n File ""/opt/conda/bin/psi4"", line 213, in <module>\n import psi4 # isort:skip\n File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>\n from . import core\nImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh\n'); Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 477, in trace_task; R = retval = fun(*args, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 760, in __protected_call__; return self.run(*args, **kwargs); File ""/code/bigchem/tasks.py"", line 52, in compute; return qcop_compute(program, inp_obj, raise_exc=raise_exc, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/qcop/main.py"", line 35, in compute; return adapter.compute(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/base.py"", line 143, in compute; results, stdout = self.compute_results(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/qcengine.py"", line 42, in compute_results; qcng_output = qcng_compute(; File ""/opt/conda/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 141, in compute; pversion = parse_version(self.get_version()); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>; from . import core; ImportError: /opt/conda/lib/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124:1150,adapt,adapters,1150,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124,1,['adapt'],['adapters']
Energy Efficiency," Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 0 0 8 0; B2u 8 0 0 0 8 0; B3u 8 0 0 0 8 0. DOCC = 2 0 0 0 0 0 0 0; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 0 0 0; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 8 8 8; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -24.23681570008748. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 1.33 seconds = 0.02 minutes; system time = 0.09 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 15.73 seconds = 0.26 minutes; system time = 0.42 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:54 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 4 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 4 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; MAXITER = 12 NUM PRINT = 20; NUM ROOTS = 1 ICORE = 0; PRINT = 1 FCI ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:9630,energy,energy,9630,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['energy'],['energy']
Energy Efficiency," ```; 	1 A state: 0.3529478 (a.u.), 9.6041997 (eV); 	2 A state: 0.4215815 (a.u.), 11.4718175 (eV); 	3 A state: 0.4538994 (a.u.), 12.3512305 (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterativ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1537,energy,energy,1537,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency," `set num_frozen_docc 6` at the top there should potentially cause issues for the water molecule in the dimer. The alkane is perfectly OK with this, however, but should num_frozen_docc even be coming into play in a HF-level calc? I thought not, isn't it just for correlated calculations? . Anyway, in the run, the first SAPT0 step runs just fine -- really, the HF Is what we're looking at, and we get sensible numbers for the interaction:; ```; Total HF -0.10898644 [mEh] -0.06839003 [kcal/mol] -0.28614386 [kJ/mol]; Total SAPT0 -0.27387960 [mEh] -0.17186205 [kcal/mol] -0.71907080 [kJ/mol]; ```; ; And the underlying HF energies are:; ```; Total Energy = -272.3598217308123139; Total Energy = -196.3248586337326458; Total Energy = -76.0348541106373688; ```. But something goes Very Wrong in the second calculation. The water has _moved_, sure, but it's not done anything dramatic, really. It's still a water. The alkane hasn't moved at all. And yet... ```; Total HF -510.71908624 [mEh] -320.48106505 [kcal/mol] -1340.89277619 [kJ/mol]; Total SAPT0 -512.45472131 [mEh] -321.57019251 [kcal/mol] -1345.44968545 [kJ/mol]; ```. That's no good. Where did we go wrong?. In the water monomer energy, in fact:; ```; Total Energy = -272.3599706292600899; Total Energy = -196.3248586336976587; Total Energy = -75.5243929093220743; ```. Note that the water there seems to be 1 _hartree_ too ""unstable"". . If we instead take the second geometry and run it stand-alone, _with the incorrect num_frozen_docc_, we get a perfectly cromulent result:. ```; Total HF -0.25751717 [mEh] -0.16159446 [kcal/mol] -0.67611123 [kJ/mol]; Total SAPT0 -0.62788646 [mEh] -0.39400470 [kcal/mol] -1.64851567 [kJ/mol]; ```. So something strange is going on here -- I'd expect either the incorrect num_frozen_docc to break everything, or to break nothing (or to break SAPT0 only, but not the HF calc, at least!). Given the segfault at sufficiently bad num_frozen_docc, and the out-of-bounds array reach, I'm guessing memory corruption?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1207127647:1366,energy,energy,1366,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1207127647,4,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency," and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5466,energy,energy,5466,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['energy'],['energy']
Energy Efficiency," any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2964,efficient,efficiently,2964,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,['efficient'],['efficiently']
Energy Efficiency," appropriate reference for open-shell. For psi4, it would; > > have to be rhf/rks because we don’t have roks. This would be convenient at; > > times, for instance, running databases of mixed closed/open shell.; > > ; > > Propositions to be considered:; > > ; > > (i) Keeping reference in one place, that is, as a keyword. Consequences:; > > retire rhf/uhf/rohf & rscf/uscf/roscf; > > ; > > (ii) If molecule is open-shell _and_ no reference has been specified,; > > switch to uhf. This could be tricky b/c we’re not set up to do this; > > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > > a series of molecules w/o explicitly setting reference.; > > ; > > Lori; > > ; > > > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com; > > > wrote:; > > > ; > > > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > > > That sounds ok to me (then reference just has to be defined properly).; > > > ; > > > What about DFT, do we define functional properly and do energy('dft'),; > > > etc.?; > > > ; > > > David; > > > ; > > > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns <notifications@github.com; > > > ; > > > wrote:; > > > ; > > > > Fixed by 6f6d3aa; > > > > <; > > > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > > > ; > > > > though I rather think now that defining; > > > > hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > > > energy() was a bad idea (by me) a few years ago (except for ""hf""; > > > > itself).; > > > > Nevertheless, as this ticket points out, having defined these names; > > > > only; > > > > for energy() confounds the driver logic. These convenience names are; > > > > now in; > > > > place for gradient() and property().; > > > > ; > > > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > > > prop() if others concur with my present assessment.; > > > > ; > > > > —; > > > > Reply to this email directly or view it on GitHub; > > > > <https://gith",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:4343,energy,energy,4343,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['energy'],['energy']
Energy Efficiency," called on psinet; *** at Mon Apr 29 11:26:26 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 17 file /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/share/psi4/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 2; Electrons = 1; Nalpha = 1; Nbeta = 0. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: ANO-RCC; Blend: ANO-RCC; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 46; Spherical Harmonics?: false; Max angular momentum: 3. => Loading Basis Set <=. Name: (ANO-RCC AUX); Role: DECON; Keyword: BASIS_RELATIVISTIC; atoms 1 entry H line 17 file /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/share/psi4/basis/ano-rcc.gbs func decontract. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; Ag 15 15 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 1 1 0 0 0 0; B1u 7 7 0 0 0 0; B2u 7 7 0 0 0 0; B3u 7 7 0 0 0 0; --------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168:2977,Charge,Charge,2977,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168,1,['Charge'],['Charge']
Energy Efficiency, cbs-xtpl-alpha ................... Passed 500.97 sec; Start 61: cc43; 32/412 Test #380: cc-module ........................ Passed 316.28 sec; Start 98: cisd-opt-fd; 33/412 Test #32: cc16 ............................. Passed 277.18 sec; Start 47: cc30; 34/412 Test #387: cookbook-rohf-orb-rot ............ Passed 373.24 sec; Start 159: dfscf-bz2; 35/412 Test #111: dcft4 ............................ Passed 1816.21 sec; Start 105: dcft-grad2; 36/412 Test #59: cc41 ............................. Passed 136.95 sec; Start 348: sapt-dft2; 37/412 Test #48: cc31 ............................. Passed 161.28 sec; Start 75: cc5a; 38/412 Test #374: dft-custom-mgga .................. Passed 194.81 sec; Start 303: pywrap-cbs1; 39/412 Test #47: cc30 ............................. Passed 74.35 sec; Start 184: isapt2; 40/412 Test #61: cc43 ............................. Passed 122.03 sec; Start 92: cepa-module; 41/412 Test #321: sapt6 ............................ Passed 175.33 sec; Start 155: dft-grad-lr2; 42/412 Test #11: cbs-delta-energy ................. Passed 277.51 sec; Start 169: dft1; 43/412 Test #196: fd-freq-gradient-large ........... Passed 312.40 sec; Start 260: omp3-3; 44/412 Test #159: dfscf-bz2 ........................ Passed 150.66 sec; Start 27: cc13b; 45/412 Test #98: cisd-opt-fd ...................... Passed 165.52 sec; Start 26: cc13a; 46/412 Test #105: dcft-grad2 ....................... Passed 142.01 sec; Start 114: dcft7; 47/412 Test #348: sapt-dft2 ........................ Passed 127.97 sec; Start 206: frac-traverse; 48/412 Test #75: cc5a ............................. Passed 116.05 sec; Start 317: sapt2; 49/412 Test #184: isapt2 ........................... Passed 121.27 sec; Start 319: sapt4; 50/412 Test #303: pywrap-cbs1 ...................... Passed 132.02 sec; Start 326: scf-bz2; 51/412 Test #155: dft-grad-lr2 ..................... Passed 112.86 sec; Start 262: omp3-5; 52/412 Test #92: cepa-module ...................... Passed 134.25 sec; Start 372: dft-custom-dh,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:4305,energy,energy,4305,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency, cc31 ............................. Passed 101.70 sec; Start 372: dft-custom-dhdf; 46/412 Test #321: sapt6 ............................ Passed 184.79 sec; Start 105: dcft-grad2; 47/412 Test #169: dft1 ............................. Passed 111.64 sec; Start 75: cc5a; 48/412 Test #155: dft-grad-lr2 ..................... Passed 115.65 sec; Start 280: opt14; 49/412 Test #184: isapt2 ........................... Passed 141.61 sec; Start 303: pywrap-cbs1; 50/412 Test #105: dcft-grad2 ....................... Passed 35.94 sec; Start 318: sapt3; 51/412 Test #75: cc5a ............................. Passed 65.55 sec; Start 281: opt-irc-1; 52/412 Test #303: pywrap-cbs1 ...................... Passed 57.75 sec; Start 47: cc30; 53/412 Test #372: dft-custom-dhdf .................. Passed 102.93 sec; Start 92: cepa-module; 54/412 Test #182: fsapt-allterms ................... Passed 579.58 sec; Start 320: sapt5; 55/412 Test #280: opt14 ............................ Passed 94.37 sec; Start 70: cc51; 56/412 Test #194: fd-freq-energy-large ............. Passed 545.92 sec; Start 76: cc6; 57/412 Test #318: sapt3 ............................ Passed 99.92 sec; Start 293: psimrcc-fd-freq2; 58/412 Test #47: cc30 ............................. Passed 48.45 sec; Start 205: frac-ip-fitting; 59/412 Test #326: scf-bz2 .......................... Passed 165.53 sec; Start 168: dft-b3lyp; 60/412 Test #92: cepa-module ...................... Passed 64.56 sec; Start 193: fd-freq-energy; 61/412 Test #281: opt-irc-1 ........................ Passed 86.58 sec; Start 231: mp2-module; 62/412 Test #320: sapt5 ............................ Passed 93.23 sec; Start 17: cbs-xtpl-opt; 63/412 Test #76: cc6 .............................. Passed 75.78 sec; Start 20: cbs-xtpl-wrapper; 64/412 Test #70: cc51 ............................. Passed 87.01 sec; Start 260: omp3-3; 65/412 Test #205: frac-ip-fitting .................. Passed 76.46 sec; Start 390: python-pubchem; 66/412 Test #206: frac-traverse .................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:5577,energy,energy-large,5577,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy-large']
Energy Efficiency, cc31 ............................. Passed 436.66 sec; Start 323: sapt7; 73/411 Test #323: sapt7 ............................ Passed 36.88 sec; Start 76: cc7; 74/411 Test #38: cc23 ............................. Passed 950.03 sec; Start 342: soscf-dft; 75/411 Test #342: soscf-dft ........................ Passed 35.67 sec; Start 129: dfmp2-1; 76/411 Test #129: dfmp2-1 .......................... Passed 36.11 sec; Start 237: nbody-he-cluster; 77/411 Test #29: cc14 ............................. Passed 989.95 sec; Start 31: cc16; 78/411 Test #40: cc25 ............................. Passed 1076.69 sec; Start 374: dft-custom-gga; 79/411 Test #237: nbody-he-cluster ................. Passed 88.19 sec; Start 259: omp3-3; 80/411 Test #374: dft-custom-gga ................... Passed 62.74 sec; Start 43: cc28; 81/411 Test #359: tu6-cp-ne2 ....................... Passed 858.79 sec; Start 106: dcft-grad4; 82/411 Test #106: dcft-grad4 ....................... Passed 51.14 sec; Start 264: opt-lindep-change; 83/411 Test #11: cbs-delta-energy ................. Passed 899.20 sec; Start 379: cc-module; 84/411 Test #264: opt-lindep-change ................ Passed 29.96 sec; Start 336: scf5; 85/411 Test #259: omp3-3 ........................... Passed 267.38 sec; Start 156: dft-b2plyp; 86/411 Test #156: dft-b2plyp ....................... Passed 26.81 sec; Start 326: scf-ecp; 87/411 Test #336: scf5 ............................. Passed 69.66 sec; Start 375: pywrap-bfs; 88/411 Test #43: cc28 ............................. Passed 255.15 sec; Start 173: dft-omega; 89/411 Test #375: pywrap-bfs ....................... Passed 23.72 sec; Start 274: opt8; 90/411 Test #326: scf-ecp .......................... Passed 48.97 sec; Start 1: adc1; 91/411 Test #173: dft-omega ........................ Passed 32.87 sec; Start 24: cc13; 92/411 Test #1: adc1 ............................. Passed 32.13 sec; Start 166: dft-psivar; 93/411 Test #166: dft-psivar ....................... Passed 35.03 sec; Start 337: scf6; 94/4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:7937,energy,energy,7937,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency," changes locally, rather than through the GH interface, if that makes the git operations easier.; > * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; > ; > ```; > #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms.; > ; > DHF = -0.01189736 #TEST; > Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; > ""SAPT EXCH ENERGY"": 0.36545706, #TEST; > ""SAPT IND ENERGY"": -0.00840483, #TEST; > ""SAPT DISP ENERGY"": -0.24398704, #TEST; > ""CURRENT ENERGY"": 0.01122234} #TEST; > ; > Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26658499, #TEST; > ""CURRENT ENERGY"": -0.01126250} #TEST; > ; > Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26605283, #TEST; > ""CURRENT ENERGY"": -0.01073034} #TEST; > ; > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:1462,ENERGY,ENERGY,1462,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,1,['ENERGY'],['ENERGY']
Energy Efficiency," converging to the wrong state, even if the stability analysis is showing a negative eigenvalue. IMO, there could be an issue with the basis set projection. . For this electronic state in this system, it is indeed difficult to converge to the appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1025,energy,energy,1025,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency, dfmp2-grad2 ...................... Passed 2.13 sec; Start 367: scf-hess1; 251/411 Test #270: opt4 ............................. Passed 7.33 sec; Start 266: opt1-fd; 252/411 Test #291: psimrcc-fd-freq1 ................. Passed 8.34 sec; Start 15: cbs-xtpl-freq; 253/411 Test #393: python-3-index-transforms ........ Passed 9.55 sec; Start 88: cepa2; 254/411 Test #365: cubeprop-esp ..................... Passed 8.52 sec; Start 158: dft-ghost; 255/411 Test #88: cepa2 ............................ Passed 2.39 sec; Start 123: dfccsd1; 256/411 Test #180: fsapt-terms ...................... Passed 8.51 sec; Start 7: casscf-sp; 257/411 Test #367: scf-hess1 ........................ Passed 6.24 sec; Start 255: omp2p5-grad1; 258/411 Test #266: opt1-fd .......................... Passed 5.00 sec; Start 197: freq-isotope1; 259/411 Test #255: omp2p5-grad1 ..................... Passed 2.07 sec; Start 10: castup3; 260/411 Test #15: cbs-xtpl-freq .................... Passed 5.93 sec; Start 192: fd-freq-energy; 261/411 Test #123: dfccsd1 .......................... Passed 2.55 sec; Start 310: rasci-c2-active; 262/411 Test #310: rasci-c2-active .................. Passed 3.49 sec; Start 9: castup2; 263/411 Test #158: dft-ghost ........................ Passed 7.51 sec; Start 329: scf-guess-read2; 264/411 Test #10: castup3 .......................... Passed 4.98 sec; Start 83: cdomp2-1; 265/411 Test #7: casscf-sp ........................ Passed 9.17 sec; Start 4: casscf-semi; 266/411 Test #197: freq-isotope1 .................... Passed 8.69 sec; Start 139: dfomp2-1; 267/411 Test #192: fd-freq-energy ................... Passed 7.20 sec; Start 117: dfcasscf-sa-sp; 268/411 Test #83: cdomp2-1 ......................... Passed 5.26 sec; Start 185: fci-h2o; 269/411 Test #329: scf-guess-read2 .................. Passed 5.94 sec; Start 86: cepa0-grad2; 270/411 Test #4: casscf-semi ...................... Passed 4.06 sec; Start 186: fci-h2o-2; 271/411 Test #139: dfomp2-1 ......................... Passed 4.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:24209,energy,energy,24209,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency," dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1438,Energy,Energy,1438,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Energy'],['Energy']
Energy Efficiency, dft-grad2 ........................ Passed 17.15 sec; Start 340: scf7; 223/413 Test #91: cepa1 ............................ Passed 3.54 sec; Start 243: ocepa-grad1; 224/413 Test #303: pywrap-basis ..................... Passed 12.18 sec; Start 102: cubeprop; 225/413 Test #155: dft-grad-lr1 ..................... Passed 16.77 sec; Start 268: opt1-fd; 226/413 Test #166: dft-grad1 ........................ Passed 14.28 sec; Start 141: dfomp2-1; 227/413 Test #220: mints8 ........................... Passed 14.77 sec; Start 10: castup3; 228/413 Test #243: ocepa-grad1 ...................... Passed 2.97 sec; Start 378: pywrap-align; 229/413 Test #141: dfomp2-1 ......................... Passed 2.41 sec; Start 124: dfccd-grad1; 230/413 Test #171: dft-vv10 ......................... Passed 16.12 sec; Start 288: props3; 231/413 Test #10: castup3 .......................... Passed 5.00 sec; Start 110: dcft2; 232/413 Test #268: opt1-fd .......................... Passed 7.16 sec; Start 14: cbs-xtpl-energy; 233/413 Test #5: casscf-sa-sp ..................... Passed 11.15 sec; Start 228: mp2-1; 234/413 Test #124: dfccd-grad1 ...................... Passed 4.92 sec; Start 287: props2; 235/413 Test #199: freq-isotope1 .................... Passed 12.45 sec; Start 84: cdomp2-1; 236/413 Test #368: dft-smoke ........................ Passed 13.16 sec; Start 219: mints6; 237/413 Test #110: dcft2 ............................ Passed 2.46 sec; Start 370: scf-freq1; 238/413 Test #340: scf7 ............................. Passed 10.04 sec; Start 367: cubeprop-esp; 239/413 Test #352: dft-custom ....................... Passed 13.50 sec; Start 126: dfccsdl1; 240/413 Test #378: pywrap-align ..................... Passed 7.73 sec; Start 139: dfmp2-grad4; 241/413 Test #326: sapt8 ............................ Passed 12.95 sec; Start 359: tu4-h2o-freq; 242/413 Test #102: cubeprop ......................... Passed 10.42 sec; Start 129: dfccsdt1; 243/413 Test #84: cdomp2-1 ......................... Passed 2.74 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:21826,energy,energy,21826,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency," don't sum to CCSD CORRELATION ENERGY.; >; > - for the CC people out there -- speak up if the CCSD analogs of the; > following definitions offend. they're what qcschema is using; > <https://github.com/MolSSI/QCSchema/blob/a4329e626903ec0391d21179f0754bdc65e6831b/qcschema/dev/properties/cc_properties.py#L7-L38>; >; > qcvardefs['MP2 SAME-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from same-spin or triplet doubles correlations.; >; > canonical_corl(os_scale=1, ss_scale=1) = singles + os_scale * (tot_corl - ss_corl) + ss_scale * ss_corl; > :math:`E_{\text{SS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 OPPOSITE-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from opposite-spin or singlet doubles correlations.; > :math:`E_{\text{OS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 SINGLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The singles portion of the MP2 correlation energy.; > Zero except in ROHF.; > :math:`E_{\text{S}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 DOUBLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The doubles portion of the MP2 correlation energy; > including same-spin and opposite-spin correlations.; > :math:`E_{\text{D}}` in Eq. :eq:`MP2corl`.; > """"""}; >; >; > - let us implement storing singles for all three refs in cc* modules; > (only rohf will be nonzero).; > - let us implement storing all three consistently in any other cc codes; > - let us make sure to place these var on wfn, not in P::e.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1702?email_source=notifications&email_token=AAXVA5Q5HSV262BE27LUCI3QEXFTZA5CNFSM4IMCFUIKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HFQ4I4Q>,; > or mute the thread; > <https://github.com/n",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517:1663,ENERGY,ENERGY,1663,https://psicode.org,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency," energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hartrees, time taken: 157.03161489591002 seconds.; Phenylalanine energy: -553.1290149756642 Hartrees, time taken: 190.91649591736495 seconds.; Proline energy: -399.96754183927425 Hartrees, time taken: 141.14360310696065 seconds.; Serine energy: -397.8017752608608 Hartrees, time taken: 112.12268372066319 seconds.; Threonine energy: -437.0180950733486 Hartrees, time taken: 118.3724678363651 seconds.; Tryptophan energy: -684.3217131099059 Hartrees, time taken: 246.40932229347527 seconds.; Tyrosine energy: -628.1734628779933 Hartrees, time taken: 250.7947356943041 seconds.; Valine energy: -401.1469758245755 Hartrees, time taken: 182.75560629181564 seconds.; ```; [Local_psi4_outputs.tar.gz](https://github.com/user-attachments/files/17141527/Local_psi4_outputs.tar.gz); [Summit_psi4_outputs.tar.gz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:3144,energy,energy,3144,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency," exact same resource request (16 threads and 16GB RAM). I've attached the psi4_outputs.dat for both if there's anything you might be able to notice that might be going wrong. ## Local stdout:; ```; Alanine energy: -322.83024417222833 Hartrees, time taken: 5.157728010000028 seconds.; Arginine energy: -605.2334551774346 Hartrees, time taken: 24.718217983999978 seconds.; Asparagine energy: -491.10483309674163 Hartrees, time taken: 10.41663564099997 seconds.; Aspartic_acid energy: -510.40430731923726 Hartrees, time taken: 9.22630813500001 seconds.; Cysteine energy: -720.516978697493 Hartrees, time taken: 8.705966620000027 seconds.; Glutamic_acid energy: -549.5881696345085 Hartrees, time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1288,energy,energy,1288,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency," for fl in infiles}; ; # Note: The simple `command = [""psi4"", ""input.dat""]` works fine for Linux and Mac but not for Windows.; # L/M/W ok with `command = [which(""psi4""), ""input.dat""]` where `which` on Windows finds the psi4.bat file that points to the psi4 python script. -or-; # L/M/W ok with `command = [sys.executable, psi4.executable, ""input.dat""]` aka `python /full/path/bin/psi4 input.dat`.; # Latter chosen as `psi4.executable` is path computed by `import psi4`, so assured correspondence.; # Note: The input.py in json/, python/, and psi4numpy/ are not being treated best.; # Properly, as in CTest, it's `command = [sys.executable, ""input.py""]`.; # Have to either have 3-item `command` or pass PYTHONPATH through env. Since some tests (fsapt) ""import psi4"" internally, doing both.; command = [sys.executable, psi4.executable, inputdat]; _, output = execute(command, infiles_with_contents, outfiles, environment=env); ; success = output[""proc""].poll() == 0; > assert success, output[""stdout""] + output[""stderr""]; E AssertionError: SCF energy............................................................................FAILED; E Traceback (most recent call last):; E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/bin/psi4"", line 333, in <module>; E exec(content); E File ""<string>"", line 29, in <module>; E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/driver/qcdb/testing.py"", line 104, in _mergedapis_compare_values; E return qcel.testing.compare_values(expected, computed, **kwargs); E File ""/psi/toolchainconda/envs/defenv10/lib/python3.10/site-packages/qcelemental/testing.py"", line 178, in compare_values; E return return_handler(allclose, label, message, return_message, quiet); E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/driver/p4util/testing.py"", line 195, in _psi4_true_raise_handler; E raise TestComparisonError(message); E ; E psi4.driver.p4util.exceptions.TestComparisonError: 	SCF energy: computed value (-76.02663274) does not match (-176.0266327",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:7213,energy,energy,7213,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['energy'],['energy']
Energy Efficiency, freq-isotope2 .................... Passed 3.81 sec; Start 269: opt3; 321/411 Test #343: stability1 ....................... Passed 2.03 sec; Start 121: dfccdl1; 322/411 Test #283: opt-freeze-coords ................ Passed 2.68 sec; Start 311: rasci-h2o; 323/411 Test #399: json-schema-1-energy ............. Passed 1.65 sec; Start 344: dfep2-1; 324/411 Test #355: tu3-h2o-opt ...................... Passed 2.01 sec; Start 351: dft-reference; 325/411 Test #121: dfccdl1 .......................... Passed 1.29 sec; Start 224: molden2; 326/411 Test #311: rasci-h2o ........................ Passed 0.99 sec; Start 225: mom; 327/411 Test #236: mpn-bh ........................... Passed 2.74 sec; Start 397: json-v11-energy; 328/411 Test #269: opt3 ............................. Passed 2.44 sec; Start 231: mp2p5-grad1; 329/411 Test #351: dft-reference .................... Passed 2.84 sec; Start 332: scf-occ; 330/411 Test #344: dfep2-1 .......................... Passed 3.55 sec; Start 222: mints10; 331/411 Test #397: json-v11-energy .................. Passed 2.74 sec; Start 130: dfmp2-2; 332/411 Test #231: mp2p5-grad1 ...................... Passed 2.25 sec; Start 391: python-mints2; 333/411 Test #224: molden2 .......................... Passed 3.08 sec; Start 134: dfmp2-grad1; 334/411 Test #225: mom .............................. Passed 3.20 sec; Start 380: psi4numpy-cphf; 335/411 Test #332: scf-occ .......................... Passed 1.46 sec; Start 356: scf-response1; 336/411 Test #222: mints10 .......................... Passed 1.14 sec; Start 381: psi4numpy-dfmp2; 337/411 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 271: opt5; 338/411 Test #380: psi4numpy-cphf ................... Passed 1.10 sec; Start 223: molden1; 339/411 Test #134: dfmp2-grad1 ...................... Passed 1.47 sec; Start 284: props1; 340/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.44 sec; Start 354: tu2-ch2-energy; 341/411 Test #391: python-mints2 .................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:30787,energy,energy,30787,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency," git) accepting release version: 1.7+6ce35a5 (recorded); 1.7 {} 6ce35a5 1.7.0.0 release 1.7 <-- 1.7+6ce35a5; [ 2%] Built target update_version; [ 2%] Building CXX object src/psi4/libciomr/CMakeFiles/ciomr.dir/dsyev_ascending.cc.o; ...; ```; version computes and simple test, distributed driver tests, and dftd3 addon tests work ok; ```; > stage/bin/psi4 --psiapi # execute results; >>> stage/bin/psi4 --version; 1.7; >>> ctest -R tu1; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 426: tu1-h2o-energy; 1/1 Test #426: tu1-h2o-energy ................... Passed 1.65 sec. 100% tests passed, 0 tests failed out of 1; >>> ctest -R ddd; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 479: ddd-deriv; 1/2 Test #479: ddd-deriv ........................ Passed 13.18 sec; Start 481: ddd-function-kwargs; 2/2 Test #481: ddd-function-kwargs .............. Passed 170.20 sec. 100% tests passed, 0 tests failed out of 2; >>> ctest -R dftd3; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 510: dftd3-energy; 1/5 Test #510: dftd3-energy ..................... Passed 24.64 sec; Start 511: dftd3-grad; 2/5 Test #511: dftd3-grad ....................... Passed 11.33 sec; Start 512: dftd3-psithon2; 3/5 Test #512: dftd3-psithon2 ................... Passed 13.39 sec; Start 513: dftd3-version; 4/5 Test #513: dftd3-version .................... Passed 27.06 sec; Start 514: dftd3-nbody-cp-gradient; 5/5 Test #514: dftd3-nbody-cp-gradient .......... Passed 33.83 sec. 100% tests passed, 0 tests failed out of 5; ```; version control files have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:2036,energy,energy,2036,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,4,['energy'],['energy']
Energy Efficiency," guess the former is certainly shorter. But primarily I'm wondering; whether one is easier to check than the other regarding whether the; gradient is available. We need to know on a functional-by-functional basis; whether we have analytic gradients or not. If that's much easier to handle; with one style vs the other, that would be an argument for doing it that; way. Then we can decide what to do with the HF cases to make them play; nicely with our desired solution for the DFT ones. David. On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; wrote:. > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > ; > # (a) for HF; > ; > energy(‘scf’); > ; > # (b) for unrestricted HF; > ; > set reference uhf; > energy(‘scf’); > ; > # (c) for B3LYP; > ; > set dft_functional b3lyp; > set reference rks; > energy(‘scf’); > ; > # (d) also for B3LYP; > ; > energy(‘b3lyp’); > ; > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > ; > set dft_functional b3lyp; > energy(‘scf'); > ; > # (e) for unrestricted B3LYP; > ; > set dft_functional b3lyp; > set reference uks; > energy(‘scf’); > ; > # (f) also for unrestricted B3LYP; > ; > set reference uks; > energy(‘b3lyp’); > ; > # (g) also for unrestricted B3LYP (since energy command trumps options,; > ; > uhf gets translated to uks); > set reference uhf; > energy(‘b3lyp’); > ; > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > reference into the energy() call for HF or DFT (though for the latter you’d; > have to use dft_functional keyword.; > ; > Francesco brings up a related and overdue point. If you specify an; > open-shell molecule and no reference, it complains at you b/c rhf (the; > default) is unsuitable. I couldn’t say concretely, but some other programs; > will switch to an appropriate reference for open-shell. For psi4, it would; > have to be rhf/rks because we don’t have roks. T",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110194494:791,energy,energy,791,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110194494,9,['energy'],['energy']
Energy Efficiency," input you posted and It was able to converge fine. . You should see a section like this in the output file showing the EOM code working away at the root. ; ```; Symmetry of ground state: Ag; Symmetry of excited state: Ag; Symmetry of right eigenvector: Ag; Seeking states with multiplicity of 1; Obtaining initial guess from singles-singles block of Hbar...Done. Iter=1 L=1 Root EOM Energy Delta E Res. Norm Conv?; 1 0.4128588902 4.13e-01 3.16e-01 N; Iter=2 L=2 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3340136980 -7.88e-02 5.54e-02 N; Iter=3 L=3 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3311169492 -2.90e-03 2.75e-02 N; Iter=4 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3303034550 -8.13e-04 1.53e-02 N; Iter=5 L=5 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299847862 -3.19e-04 9.33e-03 N; Iter=6 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299158588 -6.89e-05 4.43e-03 N; Iter=7 L=7 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299119405 -3.92e-06 1.74e-03 N; Iter=8 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299103467 -1.59e-06 6.71e-04 N; Iter=9 L=9 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299072934 -3.05e-06 3.17e-04 N; Iter=10 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299064524 -8.41e-07 1.45e-04 N; Iter=11 L=11 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299063854 -6.69e-08 9.39e-05 Y; Collapsing to only 1 vector(s). Procedure converged for 1 root(s).; Energy written to CC_INFO:Etot -231.2454217333; States per irrep written to CC_INFO.; EOM CCSD R0 for root 0 = -0.03232771150. Final Energetic Summary for Converged Roots of Irrep Ag; Excitation Energy Total Energy; (eV) (cm^-1) (au) (au); EOM State 1 8.977 72406.1 0.3299063854 -231.245421733323; ```. Summary at the end of the file also shows:; ```; 	 Excitation Energy OS RS RS Einstein A; 	State (eV) (cm^-1) (nm) (au) (l,au) (v,au) (s^-1); 	 1 Ag 8.977 72406.1 138.1 0.329906 0.0000 0.0000 0.0000 0.000000E+00; ```. If you are seeing something different could you put your output in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-278675637:1067,Energy,Energy,1067,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-278675637,1,['Energy'],['Energy']
Energy Efficiency," is 1.9330486283E-01.; Using Symmetric Orthogonalization. SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -122.97213766263802 -1.22972e+02 5.13141e-01; @RKS iter 2: -124.26578841108680 -1.29365e+00 6.24312e-01 DIIS; @RKS iter 3: -128.75874780675335 -4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7223,Energy,Energy,7223,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency," is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2082,energy,energy,2082,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,4,['energy'],['energy']
Energy Efficiency, iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499 0; 11 8 4 -0.2613460628 -0.0000000000 0.0000008461 1; 12 8 5 -0.2613460628 -0.0000000000 0.0000002627 0; 13 8 6 -0.2613460628 -0.0000000000 0.0000000942 1. CISD iterations converged!. CISD variational energy: -0.261346062815; CISD transition energy: -0.261346060539. OS MP2 FNO correction: -0.000000000000; SS MP2 FNO correction: -0.000000000000; MP2 FNO correction: -0.000000000000. OS SCS-MP2 correlation energy: -0.251080593983; SS SCS-MP2 correlation energy: -0.025501141462; SCS-MP2 correlation energy: -0.276581735444; * SCS-MP2 total energy: -788.124409449857. OS MP2 correlation energy: -0.209233828319; SS MP2 correlation energy: -0.076503424385; MP2 correlation energy: -0.285737252704; * MP2 total energy: -788.133564967117. OS CISD correlation energy: -0.198332372454; SS CISD correlation energy: -0.063013688085; CISD correlation energy: -0.261346062815; * CISD total energy: -788.109173777228. Total time for CISD iterations: 11.63 s (user); 1.47 s (system); 6 s (total). Time per iteration: 0.89 s (user); 0.11 s (system); 0.46 s (total). *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:49 2017; Module time:; 	user time = 11.63 seconds = 0.19 minutes; 	system time = 1.48 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes; Total time:; 	user time = 16.89 seconds = 0.28 minutes; 	system time = 2.38 seconds = 0.04 minutes; 	total time = 12 seconds =,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:13750,energy,energy,13750,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['energy'],['energy']
Energy Efficiency," local; > ; > # minimum as the total gradient wouldn't be so large. It's not too distorted a; > ; > # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; > ; > # symmetry constrained, as it's c1. I'm at a loss.; > ; > # for oddz; > ; > # start; > ; > # 25.7790013416; > ; > # -139.174980786; > ; > # 0.0581560524872; > ; > # Optimizer: Optimization complete!; > ; > # opt; > ; > # 33.8382916197; > ; > # -139.301327453; > ; > # 0.0422103431176; > ; > #gradient = [; > ; > # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; > ; > # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; > ; > # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; > ; > # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],; > ; > # [ 0.00140205171291, -0.01943458532669, -0.03688613326736]]; > ; > # --------------------------------------------------------------------------------------------------------------- ~; > ; > # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > ; > # --------------------------------------------------------------------------------------------------------------- ~; > ; > # 1 -139.174980785934 -139.174980785934 0.08977532 0.06906505 0.39164409 0.25000003 ~; > ; > # 2 -139.237253751032 -0.062272965098 0.08963832 0.05551392 0.44053120 0.25000000 ~; > ; > # 3 -139.282037341604 -0.044783590572 0.06072927 0.03180855 0.57480436 0.30215430 ~; > ; > # 4 -139.291415380240 -0.009378038636 0.07020602 0.04747338 0.40870734 0.23074492 ~; > ; > # 5 -139.289103767764 0.002311612476 0.06272061 0.03636254 0.31265835 0.16807142 ~; > ; > # 6 -139.299937489944 -0.010833722180 0.02206926 0.01444069 0.08604223 0.05017704 ~; > ; > # 7 -139.301130513523 -0.001193023579 0.00601199 0.00414213 0.03851787 0.02297290 ~; > ; > # 8 -139.301272108227 -0.000141594704 0.00392137 0.00273882 0.01100483 0.00820114 ~; > ; > # 9 -139.301322123849 -0.000050015621 0.00099031 0.00070170 0.00667642 0.00454418 ~; > ; > # 10 -139.30",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:9212,Energy,Energy,9212,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['Energy'],['Energy']
Energy Efficiency," much earlier with ``MemoryError: std::bad_array_new_length``. When calculating array lengths for ampiitudes, residua and density fitting b factors, simple int32 arithmethic is used, which overflows at some point. `new` is then called with a negative size. i fixed this already in my development branch... Input for reproducing the problem:; ```; memory 160 GB; molecule PR20 {; 0 1; Ir -0.0036453 -0.0067418 0.0546240; P 2.3412316 0.2633260 -0.0827666; C 2.8322725 1.6499560 -1.1514034; C 3.1508965 0.5810022 1.5225953; H 2.7397226 1.4975243 1.9544020; H 3.0796627 -2.0414912 -0.0970847; H 4.2325349 0.6920499 1.3971415; H 2.8126116 -1.4065392 -1.7435421; H 3.9236645 1.7279364 -1.1921940; H 2.9451701 -0.2527656 2.1998134; C 3.2265215 -1.1827248 -0.7571267; H 2.4227823 1.4722103 -2.1484758; H 4.2962318 -0.9681045 -0.8457994; H 2.3889675 2.5675955 -0.7590075; P -2.3731653 -0.0356822 -0.0699620; C -3.1396700 1.0016926 1.2209589; C -3.0094090 0.6380218 -1.6352816; H -2.9455753 -2.3068093 -0.7136733; H -4.2946110 -1.5213106 0.1442505; H -2.8800339 -2.1267692 1.0512420; C -3.2080716 -1.6536880 0.1215551; H -4.1029305 0.6851097 -1.6068349; H -2.5824278 1.6361161 -1.7615996; H -4.2216153 1.0653282 1.0682275; H -2.6891213 1.9959193 1.1600952; H -2.6744520 0.0098950 -2.4628143; H -2.9377790 0.5752071 2.2074361; C -0.0445914 0.2683835 1.8872601; O -0.0651117 0.4624335 3.0248963; Cl -0.3329573 2.5059651 -0.2539036; C 0.2355846 -2.0382203 0.3696479; O 0.5870862 -2.4771706 1.4540805; Cl 0.1349587 -0.2718086 -2.3358022; C 0.0008664 -3.0153971 -0.7782268; H -0.1231146 -4.0205893 -0.3660997; H 0.8774694 -2.9930708 -1.4340628; H -0.8449842 -2.7261204 -1.4026378; }. set reference rhf; set basis def2-TZVPP; set{; freeze_core false; cc_type df; mp2_type df; } . set{; e_convergence 1.0E-9; r_convergence 1.0E-8; max_mograd_convergence 1.0E-7; rms_mograd_convergence 1.0E-8; TPDM_ABCD_TYPE direct; mo_maxiter 200; }. energy('scf',write_orbitals='scf_mos'); energy('omp2',restart_file='scf_mos'). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591#issuecomment-1141902495:2022,energy,energy,2022,https://psicode.org,https://github.com/psi4/psi4/issues/2591#issuecomment-1141902495,4,['energy'],['energy']
Energy Efficiency," not matching sum of aa, ab, bb contributions. At first I; > though it was because you're setting EcorlL but printing Ecorl, @bozkaya; > https://github.com/bozkaya , but that turns out to be innocent. I've; > got a valgrind if that'll help.; > ; > molecule methane {; > C 0.0000000 0.0000000 3.0826195; > H 0.5868776 0.8381742 3.4463772; > H -1.0193189 0.0891638 3.4463772; > H 0.0000000 0.0000000 1.9966697; > H 0.4324413 -0.9273380 3.4463772; > }; > ; > molecule hf {; > H; > F 1 0.917; > }; > ; > molecule bh_h2p {; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > set basis cc-pvdz; > set scf_type df; > set guess sad; > set freeze_core true; > set e_convergence 8; > set d_convergence 7; > ; > set reference uhf; > set mp2_type cd; > energy('mp2'); > print_variables(); > ; > compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST; > ; > ```; > Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; > =======================================================================; > Nuclear Repulsion Energy (a.u.) : 4.91953818754669; > CD-HF Energy (a.u.) : -25.94513055914741; > REF Energy (a.u.) : -25.94513055914741; > Alpha-Alpha Contribution (a.u.) : -0.00171224403804; > Alpha-Beta Contribution (a.u.) : -0.05664223456972; > Beta-Beta Contribution (a.u.) : -0.00005535856885; > Scaled_SS Correlation Energy (a.u.): -0.00058920086896; > Scaled_OS Correlation Energy (a.u.): -0.06797068148366; > CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; > CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; > CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; > CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; > CD-MP2 Total Energy (a.u.) : -25.92160535570154; > =======================================================================; > ```; > ; > —; > Reply to this email directly or view it on GitHub; > https:/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183423323:1719,energy,energy,1719,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183423323,2,['energy'],['energy']
Energy Efficiency," not set up to do this; > > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > > a series of molecules w/o explicitly setting reference.; > > ; > > Lori; > > ; > > > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com; > > > wrote:; > > > ; > > > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > > > That sounds ok to me (then reference just has to be defined properly).; > > > ; > > > What about DFT, do we define functional properly and do energy('dft'),; > > > etc.?; > > > ; > > > David; > > > ; > > > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns <notifications@github.com; > > > ; > > > wrote:; > > > ; > > > > Fixed by 6f6d3aa; > > > > <; > > > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > > > ; > > > > though I rather think now that defining; > > > > hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > > > energy() was a bad idea (by me) a few years ago (except for ""hf""; > > > > itself).; > > > > Nevertheless, as this ticket points out, having defined these names; > > > > only; > > > > for energy() confounds the driver logic. These convenience names are; > > > > now in; > > > > place for gradient() and property().; > > > > ; > > > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > > > prop() if others concur with my present assessment.; > > > > ; > > > > —; > > > > Reply to this email directly or view it on GitHub; > > > > <https://github.com/psi4/psi4public/issues/103#issuecomment-109846967; > > > > .; > > > > ; > > > > —; > > > > Reply to this email directly or view it on GitHub <; > > > > https://github.com/psi4/psi4public/issues/103#issuecomment-110021718>.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/103#issuecomment-110183382.; > > ; > > —; > > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/103#issuecomment-110194494.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:4939,energy,energy,4939,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,2,['energy'],['energy']
Energy Efficiency," on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:13154,energy,energy,13154,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency," output[""proc""].poll() == 0; > assert success, output[""stdout""] + output[""stderr""]; E AssertionError: SCF energy............................................................................FAILED; E Traceback (most recent call last):; E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/bin/psi4"", line 333, in <module>; E exec(content); E File ""<string>"", line 29, in <module>; E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/driver/qcdb/testing.py"", line 104, in _mergedapis_compare_values; E return qcel.testing.compare_values(expected, computed, **kwargs); E File ""/psi/toolchainconda/envs/defenv10/lib/python3.10/site-packages/qcelemental/testing.py"", line 178, in compare_values; E return return_handler(allclose, label, message, return_message, quiet); E File ""/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/driver/p4util/testing.py"", line 195, in _psi4_true_raise_handler; E raise TestComparisonError(message); E ; E psi4.driver.p4util.exceptions.TestComparisonError: 	SCF energy: computed value (-76.02663274) does not match (-176.02663273) to atol=1e-06 by difference (100.00000000).; E ; E Printing out the relevant lines from the Psithon --> Python processed input file:; E H 1 0.96 2 104.5; E """""",""h2o""); E core.IO.set_default_namespace(""h2o""); E core.set_global_option(""BASIS"", ""cc-pVDZ""); E energy('scf'); E --> compare_values(-176.0266327341067125, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') ; E ; E ; E !----------------------------------------------------------------------------------!; E ! !; E ! SCF energy: computed value (-76.02663274) does not match (-176.02663273) !; E ! to atol=1e-06 by difference (100.00000000). !; E ! !; E !----------------------------------------------------------------------------------!. stage/lib/psi4/tests/addons.py:197: AssertionError; ========================================================================================================== short test summary info ========================================================",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:8106,energy,energy,8106,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['energy'],['energy']
Energy Efficiency, python-mints2 .................... Passed 2.86 sec; Start 392: python-cc54; 386/411 Test #373: dft-custom-mgga .................. Passed 171.61 sec; Start 393: python-3-index-transforms; 387/411 Test #393: python-3-index-transforms ........ Passed 9.10 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.85 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 1.02 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.88 sec; Start 398: json-v11-gradient; 391/411 Test #398: json-v11-gradient ................ Passed 1.67 sec; Start 399: json-schema-1-energy; 392/411 Test #392: python-cc54 ...................... Passed 26.83 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 1.29 sec; Start 401: json-schema-1-orient; 394/411 Test #401: json-schema-1-orient ............. Passed 2.53 sec; Start 402: json-schema-1-throws; 395/411 Test #399: json-schema-1-energy ............. Passed 4.07 sec; Start 403: json-schema-1-gradient; 396/411 Test #402: json-schema-1-throws ............. Passed 0.62 sec; Start 404: json-schema-1-properties; 397/411 Test #403: json-schema-1-gradient ........... Passed 1.92 sec; Start 405: skeleton; 398/411 Test #404: json-schema-1-properties ......... Passed 1.48 sec; Start 406: skeletonaointegrals; 399/411 Test #405: skeleton ......................... Passed 1.51 sec; Start 407: skeletondfmp2; 400/411 Test #406: skeletonaointegrals .............. Passed 1.67 sec; Start 408: skeletonmointegrals; 401/411 Test #407: skeletondfmp2 .................... Passed 1.70 sec; Start 409: skeletonscf; 402/411 Test #408: skeletonmointegrals .............. Passed 1.95 sec; Start 410: skeletonsointegrals; 403/411 Test #409: skeletonscf ...................... Passed 0.67 sec; Start 411: skeletonwavefunction; 404/411 Test #389: python-pubchem ................... Passed 54.34 sec; 405/411 Test #411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:36938,energy,energy,36938,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['energy'],['energy']
Energy Efficiency, python-mints9 .................... Passed 2.13 sec; Start 393: python-cc54; 379/412 Test #392: python-mints2 .................... Passed 3.94 sec; Start 394: python-3-index-transforms; 380/412 Test #321: sapt6 ............................ Passed 171.44 sec; Start 396: python-mints13; 381/412 Test #396: python-mints13 ................... Passed 1.98 sec; Start 397: python-memdfjk; 382/412 Test #397: python-memdfjk ................... Passed 1.74 sec; Start 398: json-v11-energy; 383/412 Test #394: python-3-index-transforms ........ Passed 12.36 sec; Start 399: json-v11-gradient; 384/412 Test #399: json-v11-gradient ................ Passed 1.56 sec; Start 400: json-schema-1-energy; 385/412 Test #398: json-v11-energy .................. Passed 4.06 sec; Start 401: json-schema-1-ghost; 386/412 Test #401: json-schema-1-ghost .............. Passed 1.76 sec; Start 402: json-schema-1-orient; 387/412 Test #402: json-schema-1-orient ............. Passed 2.50 sec; Start 403: json-schema-1-throws; 388/412 Test #400: json-schema-1-energy ............. Passed 5.58 sec; Start 404: json-schema-1-gradient; 389/412 Test #403: json-schema-1-throws ............. Passed 0.67 sec; Start 405: json-schema-1-properties; 390/412 Test #404: json-schema-1-gradient ........... Passed 2.22 sec; Start 406: skeleton; 391/412 Test #405: json-schema-1-properties ......... Passed 1.81 sec; Start 407: skeletonaointegrals; 392/412 Test #407: skeletonaointegrals .............. Passed 3.33 sec; Start 408: skeletondfmp2; 393/412 Test #406: skeleton ......................... Passed 3.87 sec; Start 409: skeletonmointegrals; 394/412 Test #393: python-cc54 ...................... Passed 28.49 sec; Start 410: skeletonscf; 395/412 Test #410: skeletonscf ...................... Passed 0.68 sec; Start 411: skeletonsointegrals; 396/412 Test #408: skeletondfmp2 .................... Passed 2.47 sec; Start 412: skeletonwavefunction; 397/412 Test #409: skeletonmointegrals .............. Passed 2.26 sec; 398/412 Test #411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:36434,energy,energy,36434,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy']
Energy Efficiency," related to calling an undefined function but, unfortunately, the scf function does exist in this case so you got a more obscure error message. Andy. > On Apr 19, 2015, at 9:53 PM, Matt Ernst notifications@github.com wrote:; > ; > Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message; > ; > Traceback (most recent call last):; > File ""<string>"", line 59, in <module>; > Boost.Python.ArgumentError: Python argument types in; > psi4.scf(str); > did not match C++ signature:; > scf(void); > scf(P7_object, P7_object); > Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange.; > ; > #methane test; > ; > molecule {; > #charge multiplicity; > 0 1; > C0 0.000000 0.000000 0.000000; > H0 1.092199 0.000000 -0.000001; > H0 -0.364063 0.138497 1.020380; > H0 -0.364067 -0.952923 -0.390247; > H0 -0.364068 0.814425 -0.630132; > }; > ; > set globals {; > reference RHF; > maxiter 999; > }; > ; > basis {; > assign C0 C0bas; > assign H0 H0bas; > #C 3-21G; > [ C0bas ]; > cartesian; > ; > ---; > ; > C 0 ; > S 3 1.00; > 172.2560000 0.0617669 ; > 25.9109000 0.3587940 ; > 5.5333500 0.7007130 ; > SP 2 1.00; > 3.6649800 -0.3958970 0.2364600 ; > 0.7705450 1.2158400 0.8606190 ; > SP 1 1.00; > 0.1958570 1.0000000 1.0000000 ; > ; > ---; > ; > #H 3-21G; > [ H0bas ]; > cartesian; > ; > ---; > ; > H 0 ; > S 2 1.00; > 5.4471780 0.1562850 ; > 0.8245470 0.9046910 ; > S 1 1.00; > 0.1831920 1.0000000 ; > ; > ---; > ; > }; > ; > scf('energy'); > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/79.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79#issuecomment-94352477:1210,charge,charge,1210,https://psicode.org,https://github.com/psi4/psi4/issues/79#issuecomment-94352477,2,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency," root has the desired M_s, by construction of the determinant space, there is no guarantee that the wavefunction will have the correct S^2. . I wrote some code to try to handle situations like this. The user can specify the value of S that they desire (default 0.0 for closed-shell systems). If they want to guarantee that all guess roots have the same spin as this, they can set `CALC_S_SQUARED TRUE`. This will then toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the final root now becomes what looks like a singlet. ==> CISD root 5 inform",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:1070,energy,energy,1070,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020,1,['energy'],['energy']
Energy Efficiency, scf1 ............................. Passed 4.43 sec; Start 355: tu3-h2o-opt; 296/411 Test #121: dfccdl1 .......................... Passed 4.09 sec; Start 130: dfmp2-2; 297/411 Test #265: opt1 ............................. Passed 5.13 sec; Start 397: json-v11-energy; 298/411 Test #351: dft-reference .................... Passed 3.24 sec; Start 246: omp2-1; 299/411 Test #262: omp3-grad1 ....................... Passed 5.74 sec; Start 136: dfmp2-grad3; 300/411 Test #294: psimrcc-sp1 ...................... Passed 4.69 sec; Start 226: mp2-1; 301/411 Test #199: fnocc1 ........................... Passed 7.10 sec; Start 120: dfccd1; 302/411 Test #246: omp2-1 ........................... Passed 1.40 sec; Start 269: opt3; 303/411 Test #130: dfmp2-2 .......................... Passed 2.10 sec; Start 243: ocepa1; 304/411 Test #355: tu3-h2o-opt ...................... Passed 2.86 sec; Start 251: omp2-grad1; 305/411 Test #136: dfmp2-grad3 ...................... Passed 1.72 sec; Start 190: fci-coverage; 306/411 Test #397: json-v11-energy .................. Passed 1.89 sec; Start 344: dfep2-1; 307/411 Test #120: dfccd1 ........................... Passed 1.33 sec; Start 134: dfmp2-grad1; 308/411 Test #251: omp2-grad1 ....................... Passed 2.95 sec; Start 388: python-curve; 309/411 Test #226: mp2-1 ............................ Passed 3.67 sec; Start 295: psithon1; 310/411 Test #344: dfep2-1 .......................... Passed 2.83 sec; Start 376: pywrap-align; 311/411 Test #243: ocepa1 ........................... Passed 3.16 sec; Start 4: casscf-semi; 312/411 Test #269: opt3 ............................. Passed 3.32 sec; Start 399: json-schema-1-energy; 313/411 Test #190: fci-coverage ..................... Passed 3.00 sec; Start 377: pywrap-align-chiral; 314/411 Test #134: dfmp2-grad1 ...................... Passed 2.56 sec; Start 236: mpn-bh; 315/411 Test #4: casscf-semi ...................... Passed 1.77 sec; Start 213: mints2; 316/411 Test #399: json-schema-1-energy ............. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:28495,energy,energy,28495,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency," scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6167,ENERGY,ENERGY,6167,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['ENERGY'],['ENERGY']
Energy Efficiency," scheme changes (only if you agree with them, of course). Feel free to make the changes locally, rather than through the GH interface, if that makes the git operations easier.; * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; ```; #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. DHF = -0.01189736 #TEST; Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sap",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:1368,ENERGY,ENERGY,1368,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,1,['ENERGY'],['ENERGY']
Energy Efficiency, sec; Start 229: mp2-grad1; 321/412 Test #247: omp2-1 ........................... Passed 24.68 sec; Start 121: dfccd1; 322/412 Test #135: dfmp2-grad1 ...................... Passed 21.20 sec; Start 235: mp3-grad2; 323/412 Test #117: ao-dfcasscf-sp ................... Passed 19.04 sec; Start 232: mp2p5-grad1; 324/412 Test #295: psimrcc-sp1 ...................... Passed 22.23 sec; Start 400: json-schema-1-energy; 325/412 Test #204: frac ............................. Passed 17.16 sec; Start 344: stability1; 326/412 Test #234: mp3-grad1 ........................ Passed 17.12 sec; Start 378: pywrap-align-chiral; 327/412 Test #229: mp2-grad1 ........................ Passed 16.69 sec; Start 345: dfep2-1; 328/412 Test #121: dfccd1 ........................... Passed 16.56 sec; Start 389: python-curve; 329/412 Test #235: mp3-grad2 ........................ Passed 16.33 sec; Start 236: mp2-property; 330/412 Test #232: mp2p5-grad1 ...................... Passed 17.17 sec; Start 352: dft-reference; 331/412 Test #400: json-schema-1-energy ............. Passed 17.10 sec; Start 385: psi4numpy-rhf-hessian; 332/412 Test #344: stability1 ....................... Passed 17.94 sec; Start 119: dfcasscf-fzc-sp; 333/412 Test #345: dfep2-1 .......................... Passed 18.02 sec; Start 398: json-v11-energy; 334/412 Test #389: python-curve ..................... Passed 17.89 sec; Start 258: omp3-1; 335/412 Test #236: mp2-property ..................... Passed 20.28 sec; Start 364: zaptn-nh2; 336/412 Test #352: dft-reference .................... Passed 24.29 sec; Start 97: cisd-h2o-clpse; 337/412 Test #385: psi4numpy-rhf-hessian ............ Passed 24.93 sec; Start 328: scf-guess-read1; 338/412 Test #119: dfcasscf-fzc-sp .................. Passed 26.03 sec; Start 214: mints2; 339/412 Test #398: json-v11-energy .................. Passed 31.34 sec; Start 392: python-mints2; 340/412 Test #378: pywrap-align-chiral .............. Passed 53.89 sec; Start 315: sad1; 341/412 Test #258: omp3-1 ...........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:30920,energy,energy,30920,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency, sec; Start 232: mp2p5-grad1; 342/412 Test #362: x2c2 ............................. Passed 15.80 sec; Start 229: mp2-grad1; 343/412 Test #402: json-schema-1-orient ............. Passed 15.20 sec; Start 236: mp2-property; 344/412 Test #204: frac ............................. Passed 16.15 sec; Start 400: json-schema-1-energy; 345/412 Test #234: mp3-grad1 ........................ Passed 16.23 sec; Start 121: dfccd1; 346/412 Test #294: psimrcc-pt2 ...................... Passed 15.65 sec; Start 235: mp3-grad2; 347/412 Test #232: mp2p5-grad1 ...................... Passed 15.30 sec; Start 345: dfep2-1; 348/412 Test #344: stability1 ....................... Passed 17.53 sec; Start 131: dfmp2-2; 349/412 Test #229: mp2-grad1 ........................ Passed 15.76 sec; Start 389: python-curve; 350/412 Test #236: mp2-property ..................... Passed 17.20 sec; Start 412: skeletonwavefunction; 351/412 Test #121: dfccd1 ........................... Passed 16.01 sec; Start 289: psimrcc-ccsd_t-2; 352/412 Test #400: json-schema-1-energy ............. Passed 17.40 sec; Start 363: x2c3; 353/412 Test #235: mp3-grad2 ........................ Passed 17.24 sec; Start 409: skeletonmointegrals; 354/412 Test #131: dfmp2-2 .......................... Passed 16.94 sec; Start 353: stability2; 355/412 Test #345: dfep2-1 .......................... Passed 18.21 sec; Start 357: scf-response1; 356/412 Test #389: python-curve ..................... Passed 17.74 sec; Start 334: scf2; 357/412 Test #412: skeletonwavefunction ............. Passed 18.02 sec; Start 406: skeleton; 358/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 17.33 sec; Start 161: dft-grac; 359/412 Test #363: x2c3 ............................. Passed 17.28 sec; Start 382: psi4numpy-dfmp2; 360/412 Test #409: skeletonmointegrals .............. Passed 16.90 sec; Start 189: fci-tdm; 361/412 Test #353: stability2 ....................... Passed 16.81 sec; Start 8: castup1; 362/412 Test #357: scf-response1 .................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:32963,energy,energy,32963,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency, sec; Start 392: psi4numpy-dfmp2; 123/415 Test #105: decontract ....................... Passed 1.50 sec; Start 337: scf-guess-read1; 124/415 Test #343: scf2 ............................. Passed 2.48 sec; Start 401: python-mints9; 125/415 Test #340: scf-bs ........................... Passed 1.78 sec; Start 360: sapt-sf1; 126/415 Test #342: scf-occ .......................... Passed 2.41 sec; Start 406: python-mints13; 127/415 Test #372: x2c2 ............................. Passed 2.55 sec; Start 297: psimrcc-ccsd_t-1; 128/415 Test #363: stability2 ....................... Passed 1.67 sec; Start 398: python-energy; 129/415 Test #356: dfep2-2 .......................... Passed 2.54 sec; Start 367: scf-response1; 130/415 Test #324: sad1 ............................. Passed 3.08 sec; Start 364: tu1-h2o-energy; 131/415 Test #303: psimrcc-pt2 ...................... Passed 1.68 sec; Start 212: mcscf1; 132/415 Test #414: json-schema-1-gradient ........... Passed 1.69 sec; Start 365: tu2-ch2-energy; 133/415 Test #392: psi4numpy-dfmp2 .................. Passed 1.94 sec; Start 394: psi4numpy-rhf-gradient; 134/415 Test #401: python-mints9 .................... Passed 2.41 sec; Start 344: scf3; 135/415 Test #406: python-mints13 ................... Passed 2.29 sec; Start 319: pywrap-molecule; 136/415 Test #337: scf-guess-read1 .................. Passed 3.82 sec; Start 407: python-memdfjk; 137/415 Test #360: sapt-sf1 ......................... Passed 3.67 sec; Start 393: psi4numpy-rhf; 138/415 Test #398: python-energy .................... Passed 3.51 sec; Start 215: mints1; 139/415 Test #319: pywrap-molecule .................. Passed 1.48 sec; Start 375: options1; 140/415 Test #297: psimrcc-ccsd_t-1 ................. Passed 4.15 sec; Start 248: numpy-array-interface; 141/415 Test #365: tu2-ch2-energy ................... Passed 3.75 sec; Start 211: matrix1; 142/415 Test #212: mcscf1 ........................... Passed 3.86 sec; Start 1: adc1; 143/415 Test #364: tu1-h2o-energy ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:12830,energy,energy,12830,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency," select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11485,energy,energy,11485,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['energy'],['energy']
Energy Efficiency," so it's `coreNone`. When I add a symlink to a proper name, it works just fine. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) ll stage/lib/psi4/; total 25704; lrwxrwxrwx. 1 psilocaluser psilocaluser 8 Nov 1 15:57 core.cpython-311-x86_64-linux-gnu.so -> coreNone; -rwxr-xr-x. 1 psilocaluser psilocaluser 26286096 Nov 1 16:14 coreNone; drwxr-xr-x. 7 psilocaluser psilocaluser 4096 Nov 1 15:58 driver; -rw-r--r--. 1 psilocaluser psilocaluser 5898 Nov 1 15:08 extras.py; -rw-r--r--. 1 psilocaluser psilocaluser 2934 Nov 1 14:50 header.py; -rw-r--r--. 1 psilocaluser psilocaluser 3693 Nov 1 15:08 __init__.py; -rw-r--r--. 1 psilocaluser psilocaluser 1144 Nov 1 16:14 metadata.py; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 16:14 __pycache__; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 15:20 tests; ```; ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; 	SCF energy........................................................PASSED; ```. Full conda env is this:. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) conda list; # packages in environment at /psi/toolchainconda/envs/py311cf_L1:; #; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_kmp_llvm conda-forge; binutils_impl_linux-64 2.39 h6ceecb4_0 conda-forge; binutils_linux-64 2.39 h5fc0e48_11 conda-forge; blas 2.116 mkl conda-forge; blas-devel 3.9.0 16_linux64_mkl conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; c-ares 1.18.1 h7f98852_0 conda-forge; ca-certificates 2022.9.24 ha878542_0 conda-forge; cmake 3.24.2 h5432695_0 conda-forge; deepdiff 6.2.1 pyhd8ed1ab_0 conda-forge; expat 2.5.0 h27087fc_0 conda-forge; gcc_impl_linux-64 12.2.0 hcc96c02_19 conda-forge; gcc_linux-64 12.2.0 h4798a0e_11 conda-forge; gxx_impl_linux-64 12.2.0 hcc96c02_19 conda-forge; gxx_linux-64 12.2.0 hb41e900_11 conda-forge; kernel-head",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719:1782,energy,energy,1782,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719,1,['energy'],['energy']
Energy Efficiency," some other settings, seeing if; turning off density-fitting or changing the grid prods things. I've run the; same calc in Orca which seems to go alright; both use LibXC for wb97M-V,; though Orca has its own VV10 impl. I'll see if non-self-consistent VV10; hits the same issue; if not, I'll play with the VV10 grid settings, too. I do have some other calculations in this dataset with perfectly reasonable; geometries which failed due to ""ADIIS"", which I'd like to sort out. I; suspect they may have a common cause in whatever *actually* caused this; failure, and I'll see what I can dig up. On Thu, Oct 5, 2023 at 9:44 AM Jonathon Misiewicz ***@***.***>; wrote:. > Hello, I'm the developer who implemented ADIIS in Psi4. Thanks for your; > patience. Between some life changes and issues compiling Psi4, I haven't; > been able to look at this issue previously.; >; > 1. Following Susi's suggestion, B3LYP converges straightforwardly. The; > SCF iterations takes one bad step early on, but this happens whether ADIIS; > is on or off.; > 2. If I disable ADIIS completely using your original functional, it; > *still* fails. Once the energy gets to around 284 Eh, it doesn't; > become negative again. *Contrary to the topic title, ADIIS is not at; > fault*.; > 3. The title suggests that you've had previous ADIIS issues; > previously. If so, please send me specific examples. My experience has been; > that ADIIS itself is fine, but can break when other parts of the code are; > badly behaved.; >; > I'll do some digging to see if I can suggest an alternate protocol that; > will actually converge.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3051#issuecomment-1748931430>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABTN7JEC2WPIX354RHZG4ZTX522TPAVCNFSM6AAAAAA5H47C7WVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONBYHEZTCNBTGA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051#issuecomment-1748950476:1450,energy,energy,1450,https://psicode.org,https://github.com/psi4/psi4/issues/3051#issuecomment-1748950476,1,['energy'],['energy']
Energy Efficiency," the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3995,energy,energy,3995,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,['energy'],['energy']
Energy Efficiency," the unused molecules are commented; > out (not only molecules, but irrelevant keywords can cause the problem,; > too). The problem shows up in the final output as correlation energy has; > wrong sign and not matching sum of aa, ab, bb contributions. At first I; > though it was because you're setting EcorlL but printing Ecorl, @bozkaya; > https://github.com/bozkaya , but that turns out to be innocent. I've; > got a valgrind if that'll help.; > ; > molecule methane {; > C 0.0000000 0.0000000 3.0826195; > H 0.5868776 0.8381742 3.4463772; > H -1.0193189 0.0891638 3.4463772; > H 0.0000000 0.0000000 1.9966697; > H 0.4324413 -0.9273380 3.4463772; > }; > ; > molecule hf {; > H; > F 1 0.917; > }; > ; > molecule bh_h2p {; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > set basis cc-pvdz; > set scf_type df; > set guess sad; > set freeze_core true; > set e_convergence 8; > set d_convergence 7; > ; > set reference uhf; > set mp2_type cd; > energy('mp2'); > print_variables(); > ; > compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST; > ; > ```; > Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; > =======================================================================; > Nuclear Repulsion Energy (a.u.) : 4.91953818754669; > CD-HF Energy (a.u.) : -25.94513055914741; > REF Energy (a.u.) : -25.94513055914741; > Alpha-Alpha Contribution (a.u.) : -0.00171224403804; > Alpha-Beta Contribution (a.u.) : -0.05664223456972; > Beta-Beta Contribution (a.u.) : -0.00005535856885; > Scaled_SS Correlation Energy (a.u.): -0.00058920086896; > Scaled_OS Correlation Energy (a.u.): -0.06797068148366; > CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; > CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; > CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; > CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183423323:1615,energy,energy,1615,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183423323,1,['energy'],['energy']
Energy Efficiency," them, of course). Feel free to make the changes locally, rather than through the GH interface, if that makes the git operations easier.; * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; ```; #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. DHF = -0.01189736 #TEST; Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in E",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:1406,ENERGY,ENERGY,1406,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,1,['ENERGY'],['ENERGY']
Energy Efficiency," thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); B = geometry(""""""; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; """""",""B""); psi4.IO.set_default_namespace(""B""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:51 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = 1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; B 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 1; Multiplicity = 1; Electrons = 4; Nalpha = 2; Nbeta = 2. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:2828,charge,charge,2828,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['charge'],['charge']
Energy Efficiency," time taken: 12.724474364000002 seconds.; Glutamine energy: -530.2859605443301 Hartrees, time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:1974,energy,energy,1974,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency," time taken: 13.692237066000018 seconds.; Glycine energy: -283.6410604296507 Hartrees, time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine ener",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2061,energy,energy,2061,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency," time taken: 3.274363483000002 seconds.; Histidine energy: -547.2538448890515 Hartrees, time taken: 16.051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine ener",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2146,energy,energy,2146,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency," to make it go faster. On production code runs, the level of theory and basis set are consistent. . I have been playing around with both `frequency()` and `hessian()`. I chose the hessian last night because of this:. https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.harmonic_analysis.html#psi4.driver.qcdb.vib.harmonic_analysis. https://psicode.org/psi4manual/master/freq.html. Where the harmonic analysis is documented showing the IR intensities. The first parameter was a hessian matrix so I went back to go look at how to produce that. Maybe I went down a different rabbit hole. . https://github.com/psi4/psi4/blob/821134f62396ba27f9bcb8fbfa93ea2c370b7616/tests/pytests/test_vibanalysis.py. Line 17-40 I kind of copied your guys test to get the code running. I was actually confused with dipole derivatives and how to produce them and pass them in appropriately. . Ah okay! the frequency has it built in and I can see it. I got confused on the docs. . ```python; theory = 'hf/6-31g*'; ; energy, wave_function = psi4.optimize(; theory,; return_wfn = 'yes',; molecule=universe; ). frequencies = psi4.frequencies(; theory,; ref_gradient=wave_function.gradient(),; molecule=universe. ); ```. Ouput:. ```python; Freq [cm^-1] 1557.5017 4053.2831 4197.9898 ; Irrep A1 A1 B2 ; Reduced mass [u] 1.0830 1.0449 1.0829 ; Force const [mDyne/A] 1.5478 10.1143 11.2435 ; Turning point v=0 [a0] 0.2672 0.1686 0.1627 ; RMS dev v=0 [a0 u^1/2] 0.1966 0.1219 0.1198 ; IR activ [km/mol] 92.6794 13.8599 85.5429 ; Char temp [K] 2240.8982 5831.7720 6039.9727 ; ----------------------------------------------------------------------------------; 1 O 0.00 -0.00 -0.07 0.00 -0.00 0.05 0.00 -0.07 -0.00 ; 2 H -0.00 0.43 0.56 0.00 0.59 -0.39 0.00 0.56 -0.43 ; 3 H 0.00 -0.43 0.56 0.00 -0.59 -0.39 0.00 0.56 0.43 ; ```. So I want to make sure I understand this correctly, the IR active means it is my epsilon in beer-lambert's law and all I would need to do to get absorbance is times it by the path length of my ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2698#issuecomment-1227099808:1184,energy,energy,1184,https://psicode.org,https://github.com/psi4/psi4/issues/2698#issuecomment-1227099808,1,['energy'],['energy']
Energy Efficiency," to obtain the ground state PEC:. import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 mem",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1378,energy,energy,1378,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['energy'],['energy']
Energy Efficiency," to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 0 0 8 0; B2u 8 0 0 0 8 0; B3u 8 0 0 0 8 0. DOCC = 2 0 0 0 0 0 0 0; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 0 0 0; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 8 8 8; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -24.23681570008748. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 1.33 seconds = 0.02 minutes; system time = 0.09 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 15.73 seconds = 0.26 minutes; system time = 0.42 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:54 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 4 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 4 H0 BLOCKSIZE = 4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:9453,energy,energy,9453,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['energy'],['energy']
Energy Efficiency," toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the final root now becomes what looks like a singlet. ==> CISD root 5 information <==. CISD Root 5 energy = -75.024974154652114. The 20 most important determinants:. * 1 0.637413 ( 435, 435) 1A1X 2A1X 1B1X 1B2X 4A1X; * 2 -0.307807 ( 923, 923) 1A1X 2A1X 1B1X 1B2X 2B2X; * 3 -0.199774 ( 436, 434) 1A1X 2A1B 3A1X 1B1X 1B2X 4A1A; * 4 -0.199774 ( 434, 436) 1A1X 2A1A 3A1X 1B1X 1B2X 4A1B; ; I'll see if I can add a few sentences to the documentation to explain this issue. Thanks for bringing it up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:2093,energy,energy,2093,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020,1,['energy'],['energy']
Energy Efficiency," tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:26 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DIRECT.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Blend: CC-PVDZ; Number of shells: 6; Number of basis function: 14; Number of Cartesian functions: 15; Spherical Harmonics?: true; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: PBE <=. PBE GGA Exchange-Correlation Functional. J.P. Perdew et. al., Phys. Rev. Lett., 77(18), 3865-3868, 1996. Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = FALSE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_GGA_X_PBE. => Correlation Functionals <=. 1.0000 XC_GGA_C_PBE. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = FLAT; Nuclear Scheme = TREUTLER. BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 770; Total Point",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:4480,Charge,Charge,4480,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Charge'],['Charge']
Energy Efficiency," tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:27 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DIRECT.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Blend: CC-PVDZ; Number of shells: 6; Number of basis function: 14; Number of Cartesian functions: 15; Spherical Harmonics?: true; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: BLYP <=. BLYP GGA Exchange-Correlation Functional. P.J. Stephens et. al., J. Phys. Chem., 98, 11623-11627, 1994; B. Miehlich et. al., Chem. Phys. Lett., 157(3), 200-206 1989. Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = FALSE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_GGA_X_B88. => Correlation Functionals <=. 1.0000 XC_GGA_C_LYP. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = FLAT; Nuclear Scheme = TREUTLER. BS radius alpha = 1; Pruning alph",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:9388,Charge,Charge,9388,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Charge'],['Charge']
Energy Efficiency," tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:28 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DIRECT.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Blend: CC-PVDZ; Number of shells: 6; Number of basis function: 14; Number of Cartesian functions: 15; Spherical Harmonics?: true; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: FT97 <=. FT97 GGA Exchange-Correlation Functional. M. Filatov and W. Theil, Int. J. Quant. Chem., 62, 603-616, 1997. Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = FALSE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_GGA_X_FT97_B. => Correlation Functionals <=. 1.0000 XC_GGA_C_FT97. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = FLAT; Nuclear Scheme = TREUTLER. BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 770; Tot",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:14422,Charge,Charge,14422,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Charge'],['Charge']
Energy Efficiency," up if the CCSD analogs of the; > following definitions offend. they're what qcschema is using; > <https://github.com/MolSSI/QCSchema/blob/a4329e626903ec0391d21179f0754bdc65e6831b/qcschema/dev/properties/cc_properties.py#L7-L38>; >; > qcvardefs['MP2 SAME-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from same-spin or triplet doubles correlations.; >; > canonical_corl(os_scale=1, ss_scale=1) = singles + os_scale * (tot_corl - ss_corl) + ss_scale * ss_corl; > :math:`E_{\text{SS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 OPPOSITE-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from opposite-spin or singlet doubles correlations.; > :math:`E_{\text{OS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 SINGLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The singles portion of the MP2 correlation energy.; > Zero except in ROHF.; > :math:`E_{\text{S}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 DOUBLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The doubles portion of the MP2 correlation energy; > including same-spin and opposite-spin correlations.; > :math:`E_{\text{D}}` in Eq. :eq:`MP2corl`.; > """"""}; >; >; > - let us implement storing singles for all three refs in cc* modules; > (only rohf will be nonzero).; > - let us implement storing all three consistently in any other cc codes; > - let us make sure to place these var on wfn, not in P::e.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1702?email_source=notifications&email_token=AAXVA5Q5HSV262BE27LUCI3QEXFTZA5CNFSM4IMCFUIKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HFQ4I4Q>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAXVA5TNKXMJ7CHGNVYFDH3QEXFTZANCNFSM4IMCFUIA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517:1875,ENERGY,ENERGY,1875,https://psicode.org,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency," value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; > ; > ```; > #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms.; > ; > DHF = -0.01189736 #TEST; > Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; > ""SAPT EXCH ENERGY"": 0.36545706, #TEST; > ""SAPT IND ENERGY"": -0.00840483, #TEST; > ""SAPT DISP ENERGY"": -0.24398704, #TEST; > ""CURRENT ENERGY"": 0.01122234} #TEST; > ; > Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26658499, #TEST; > ""CURRENT ENERGY"": -0.01126250} #TEST; > ; > Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26605283, #TEST; > ""CURRENT ENERGY"": -0.01073034} #TEST; > ; > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:1688,ENERGY,ENERGY,1688,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,1,['ENERGY'],['ENERGY']
Energy Efficiency," |[F,P]|. @RKS iter 1: -123.05635077157466 -1.23056e+02 5.15651e-01; @RKS iter 2: -123.10132047688978 -4.49697e-02 6.79382e-01 DIIS; @RKS iter 3: -128.77814169956412 -5.67682e+00 1.11592e-01 DIIS; @RKS iter 4: -128.89363525981292 -1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total ti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12351,Energy,Energy,12351,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,""""",""B""); psi4.IO.set_default_namespace(""B""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:51 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = 1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; B 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 1; Multiplicity = 1; Electrons = 4; Nalpha = 2; Nbeta = 2. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 2 2 2 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (M",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:3226,Charge,Charge,3226,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Charge'],['Charge']
Energy Efficiency,"""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6626,energy,energy,6626,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['energy'],['energy']
Energy Efficiency,"# ORCA; ""svwn"" : -128.357941704 , # G09; ""pbe"" : -128.79305010293, # TM LDA-PW91; #""pbe"" : -128.793027408, # G09; #""pbe"" : -128.793068569269 # ORCA LDA-PW91; #""bp86"" : -128.905683777641, # ORCA LDA-PW91; #""bp86"" : -128.9092927447, # TM = LDA-VWN, or iop(3/74=418) in Gaussian; #""bp86"" : -128.903070321, #G09 LDA-PW86; ""pw91"" : -128.871229934635, # ORCA; ""mpwpw"" : -128.893378250504, # ORCA; ""ft97"" : -128.850056371480 , # NWCHEM xfine xc ft97 screening 1-e14; ""bop"" : -128.892404778404, # NWCHEM; #""b86bpbe"" : , # ???; ""pw86pbe"" : -128.946484366 , # G09 iop(3/74=809); ""sogga11"" : -128.889273547 , # G09.D01 ""SOGGA11/cc-pVDZ 5D SP Int(Grid=99770)""; }. molecule ne {; 0 1; Ne; }. set df_scf_guess false; set basis cc-pvdz; set reference rks; set dft_radial_points 99; set dft_spherical_points 770; set scf_type direct. for func, val in ggaval.items():; edft = energy(func); label=func.upper(); compare_values(val, edft, 4, 'Ne: '+label) #TEST; clean(). # special flower BP86; low accuracy; # #G09 LDA-PW86; edft = energy('bp86'); compare_values(-128.903070321, edft, 3, 'Ne: BP86(PW)') #TEST; clean(). #=== from dft1 ===; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; print 2; basis sto-3g. guess core; scf_type direct; dft_spherical_points 302; dft_radial_points 99; reference rks; }. E15 = -75.2976775610; activate(h2o); edft=energy('scf', dft_functional=""b86bpbe""); compare_values(E15,edft, 4, ""H2O: B86BPBE "") #TEST. --------------------------------------------------------------------------. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:26 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:3013,energy,energy,3013,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['energy'],['energy']
Energy Efficiency,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8cb0765`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1315/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1315 +/- ##; =========================================; Coverage ? 70.32% ; =========================================; Files ? 1508 ; Lines ? 326837 ; Branches ? 0 ; =========================================; Hits ? 229863 ; Misses ? 96974 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=footer). Last update [8cb0765...ed8cf13](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980:1077,Power,Powered,1077,https://psicode.org,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980,1,['Power'],['Powered']
Energy Efficiency,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=h1) Report; > Merging [#1671](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=desc) into [master](https://codecov.io/gh/psi4/psi4/commit/7fb7634f7f591a7c53bdf885228731390782df28?src=pr&el=desc) will **not change** coverage.; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1671/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1671 +/- ##; =======================================; Coverage 70.9% 70.9% ; =======================================; Files 1468 1468 ; Lines 316368 316368 ; =======================================; Hits 224327 224327 ; Misses 92041 92041; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=footer). Last update [7fb7634...b61a16b](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011:1085,Power,Powered,1085,https://psicode.org,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011,1,['Power'],['Powered']
Energy Efficiency,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8d6a59d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1676/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1676 +/- ##; =========================================; Coverage ? 71.08% ; =========================================; Files ? 1468 ; Lines ? 315595 ; Branches ? 0 ; =========================================; Hits ? 224354 ; Misses ? 91241 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=footer). Last update [8d6a59d...aeac164](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321:1077,Power,Powered,1077,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321,1,['Power'],['Powered']
Energy Efficiency,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@51ebbbd`). ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=footer). Last update [51ebbbd...410be6f](https://codecov.io/gh/psi4/psi4/compare/51ebbbd3257f39b516004b987f2ca650a036c320...410be6f525e84987e109ad06e4af65f2dbc289f0?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/594#issuecomment-276026020:436,Power,Powered,436,https://psicode.org,https://github.com/psi4/psi4/pull/594#issuecomment-276026020,1,['Power'],['Powered']
Energy Efficiency,## Medium; - [ ] Design and implement a memory manager. It should keep track of the memory allocated and provide the user with the currently available memory.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-230368446:91,allocate,allocated,91,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-230368446,1,['allocate'],['allocated']
Energy Efficiency,## Medium; - [ ] Parallelize the mints integral generation:; Needs to use asynchronous I/O to have one process writing to disk while others compute. Basic technology to do that is in the new PKJK object.; - [ ] Reduce PKJK I/O; Preliminary experiment shows that storing only the ordered supermatrix for J and reordering it on the fly when forming K is faster than I/O for storing/reading ordered supermatrix for K.; - [ ] Sieve PKJK ; Currently PKJK only uses sieving for integral computations. Could use it to only I/O significant integrals. We would probably need a specialized iterator that goes only through significant integrals and gives us back the absolute indices for building J and K.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-224057906:211,Reduce,Reduce,211,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-224057906,1,['Reduce'],['Reduce']
Energy Efficiency,"## XYZ Files. Just as an aside, here's two easier ways to deal with molecules when you have the coordinates. chg/mult from the xyz are possible https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/from_string.py#L117-L136. tu1.py; ```; import psi4. psi4.set_memory(""600 mb""). ### <<< Either ; #with open(""h2o.xyz"") as fp:; # fh2o = fp.read(); #; #psi4.geometry(fh2o). ### --- Or. h2o = psi4.core.Molecule.from_arrays(elem=[""O"", ""H"", ""H""], units=""Angstrom"", geom=[; 0.000000000000, 0.000000000000, -0.065775570538, ; 0.000000000000, -0.759061990794, 0.521953018295, ; 0.000000000000, 0.759061990794, 0.521953018295]) ; psi4.activate(h2o). ### >>> End. psi4.set_options({; ""basis"": ""cc-pVDZ"",; }); psi4.energy('scf'). psi4.compare_values(-76.0266327341067125, psi4.variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```. h2o.xyz; ```; 3; sdlkfs; O 0.000000000000 0.000000000000 -0.065775570538 ; H 0.000000000000 -0.759061990794 0.521953018295 ; H 0.000000000000 0.759061990794 0.521953018295 . ```; ## Single Core. To actually address your problem, can you try the following edits? If you edit the installed copy, no recompile needed. Hopefully this solves it -- thanks for the report!; ```; diff --git a/psi4/driver/procrouting/empirical_dispersion.py b/psi4/driver/procrouting/empirical_dispersion.py; index d23f016..ea4f79d 100644; --- a/psi4/driver/procrouting/empirical_dispersion.py; +++ b/psi4/driver/procrouting/empirical_dispersion.py; @@ -213,7 +213,7 @@ class EmpiricalDispersion(object):; resi,; self.engine,; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path(), ""ncores"": core.get_num_threads()}); ; dashd_part = float(jobrec.extras['qcvars']['DISPERSION CORRECTION ENERGY']); if wfn is not None:; @@ -231,7 +231,7 @@ class EmpiricalDispersion(object):; resi,; ""gcp"",; raise_error=True,; - local_options={""scratch_director",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938:719,energy,energy,719,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,#300: pywrap-all ....................... Passed 653.37 sec; Start 40: cc25; 7/404 Test #110: dcft4 ............................ Passed 705.73 sec; Start 38: cc23; 8/404 Test #182: isapt1 ........................... Passed 261.69 sec; Start 36: cc21; 9/404 Test #103: dcft-grad1 ....................... Passed 777.60 sec; Start 305: pywrap-checkrun-rohf; 10/404 Test #240: ocepa-freq1 ...................... Passed 422.55 sec; Start 35: cc2; 11/404 Test #394: python-vibanalysis ............... Passed 889.27 sec; Start 76: cc7; 12/404 Test #40: cc25 ............................. Passed 312.62 sec; Start 42: cc27; 13/404 Test #39: cc24 ............................. Passed 352.95 sec; Start 41: cc26; 14/404 Test #38: cc23 ............................. Passed 309.61 sec; Start 18: cbs-xtpl-func; 15/404 Test #36: cc21 ............................. Passed 306.52 sec; Start 181: fsapt-allterms; 16/404 Test #305: pywrap-checkrun-rohf ............. Passed 366.19 sec; Start 193: fd-freq-energy-large; 17/404 Test #306: pywrap-checkrun-uhf .............. Passed 674.61 sec; Start 195: fd-freq-gradient-large; 18/404 Test #181: fsapt-allterms ................... Passed 133.31 sec; Start 278: opt13; 19/404 Test #35: cc2 .............................. Passed 373.72 sec; Start 114: dcft8; 20/404 Test #76: cc7 .............................. Passed 285.74 sec; Start 111: dcft5; 21/404 Test #42: cc27 ............................. Passed 268.89 sec; Start 112: dcft6; 22/404 Test #41: cc26 ............................. Passed 275.32 sec; Start 162: dft-grad-lr3; 23/404 Test #114: dcft8 ............................ Passed 131.78 sec; Start 359: tu6-cp-ne2; 24/404 Test #111: dcft5 ............................ Passed 174.58 sec; Start 281: opt-irc-2; 25/404 Test #112: dcft6 ............................ Passed 118.43 sec; Start 13: cbs-xtpl-alpha; 26/404 Test #359: tu6-cp-ne2 ....................... Passed 79.02 sec; Start 386: cookbook-rohf-orb-rot; 27/404 Test #162: dft-grad-lr3 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:1734,energy,energy-large,1734,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy-large']
Energy Efficiency,#375: dft-custom-mgga .................. Passed 183.50 sec; Start 11: cbs-delta-energy; 34/413 Test #112: dcft4 ............................ Passed 1745.55 sec; Start 160: dfscf-bz2; 35/413 Test #31: cc15 ............................. Passed 89.05 sec; Start 58: cc40; 36/413 Test #44: cc28 ............................. Passed 88.29 sec; Start 283: opt-irc-2; 37/413 Test #322: sapt6 ............................ Passed 158.72 sec; Start 117: dcft9; 38/413 Test #146: dfomp2-grad2 ..................... Passed 99.16 sec; Start 60: cc42; 39/413 Test #106: dcft-grad2 ....................... Passed 122.59 sec; Start 151: dfomp3-grad2; 40/413 Test #58: cc40 ............................. Passed 84.64 sec; Start 47: cc30; 41/413 Test #160: dfscf-bz2 ........................ Passed 131.53 sec; Start 349: sapt-dft2; 42/413 Test #60: cc42 ............................. Passed 81.75 sec; Start 251: omp2-4; 43/413 Test #151: dfomp3-grad2 ..................... Passed 88.57 sec; Start 261: omp3-3; 44/413 Test #195: fd-freq-energy-large ............. Passed 515.62 sec; Start 262: omp3-4; 45/413 Test #117: dcft9 ............................ Passed 104.53 sec; Start 76: cc6; 46/413 Test #183: fsapt-allterms ................... Passed 542.80 sec; Start 263: omp3-5; 47/413 Test #47: cc30 ............................. Passed 83.62 sec; Start 27: cc13b; 48/413 Test #283: opt-irc-2 ........................ Passed 193.34 sec; Start 185: isapt2; 49/413 Test #306: pywrap-checkrun-rhf .............. Passed 792.80 sec; Start 156: dft-grad-lr2; 50/413 Test #11: cbs-delta-energy ................. Passed 262.37 sec; Start 65: cc47; 51/413 Test #349: sapt-dft2 ........................ Passed 118.82 sec; Start 62: cc44; 52/413 Test #302: pywrap-all ....................... Passed 857.48 sec; Start 149: dfomp3-2; 53/413 Test #251: omp2-4 ........................... Passed 120.68 sec; Start 92: cepa-module; 54/413 Test #76: cc6 .............................. Passed 115.05 sec; Start 35: cc19; 55/413 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:4435,energy,energy-large,4435,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy-large']
Energy Efficiency,#38: cc23 ............................. Passed 937.42 sec; Start 114: dcft8; 7/411 Test #36: cc21 ............................. Passed 943.79 sec; Start 227: mp2-def2; 8/411 Test #40: cc25 ............................. Passed 955.88 sec; Start 178: fsapt1; 9/411 Test #35: cc2 .............................. Passed 975.82 sec; Start 111: dcft5; 10/411 Test #39: cc24 ............................. Passed 1000.55 sec; Start 13: cbs-xtpl-alpha; 11/411 Test #155: dft-grad-lr3 ..................... Passed 395.18 sec; Start 305: pywrap-checkrun-rohf; 12/411 Test #394: python-vibanalysis ............... Passed 1285.91 sec; Start 24: cc13; 13/411 Test #227: mp2-def2 ......................... Passed 371.74 sec; Start 31: cc16; 14/411 Test #29: cc14 ............................. Passed 619.00 sec; Start 28: cc13d; 15/411 Test #145: dfomp2-grad3 ..................... Passed 1456.77 sec; Start 182: isapt1; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1461.98 sec; Start 11: cbs-delta-energy; 17/411 Test #111: dcft5 ............................ Passed 505.16 sec; Start 44: cc29; 18/411 Test #306: pywrap-checkrun-uhf .............. Passed 1485.55 sec; Start 47: cc31; 19/411 Test #103: dcft-grad1 ....................... Passed 1518.99 sec; Start 112: dcft6; 20/411 Test #300: pywrap-all ....................... Passed 1524.14 sec; Start 18: cbs-xtpl-func; 21/411 Test #13: cbs-xtpl-alpha ................... Passed 526.82 sec; Start 181: fsapt-allterms; 22/411 Test #114: dcft8 ............................ Passed 687.39 sec; Start 193: fd-freq-energy-large; 23/411 Test #240: ocepa-freq1 ...................... Passed 852.90 sec; Start 195: fd-freq-gradient-large; 24/411 Test #45: cc3 .............................. Passed 1687.06 sec; Start 278: opt13; 25/411 Test #110: dcft4 ............................ Passed 1692.73 sec; Start 91: cepa-module; 26/411 Test #31: cc16 ............................. Passed 395.40 sec; Start 281: opt-irc-2; 27/411 Test #44: cc29 ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:1914,energy,energy,1914,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,"#40 0x7fa146e256cc in PyEval_EvalCodeEx Python/ceval.c:4180; #41 0x7fa146e2571a in PyEval_EvalCode Python/ceval.c:731; #42 0x7fa146e610a1 in run_mod Python/pythonrun.c:1025; #43 0x7fa146e610a1 in PyRun_FileExFlags Python/pythonrun.c:978; #44 0x7fa146e61206 in PyRun_SimpleFileExFlags Python/pythonrun.c:420; #45 0x7fa146e7d6fc in run_file Modules/main.c:340; #46 0x7fa146e7d6fc in Py_Main Modules/main.c:810; #47 0x400bbb in main Programs/python.c:69; #48 0x7fa145de8444 in __libc_start_main (/lib64/libc.so.6+0x22444); #49 0x400c7c (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0x400c7c). 0x6020004445d8 is located 0 bytes to the right of 8-byte region [0x6020004445d0,0x6020004445d8); allocated by thread T0 here:; #0 0x7fa1472af94e in operator new(unsigned long) /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libsanitizer/asan/asan_new_delete.cc:90; #1 0x7fa137a9a6f2 in __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/ext/new_allocator.h:111; #2 0x7fa137a90c98 in std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/alloc_traits.h:436; #3 0x7fa137a88909 in std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_vector.h:172; #4 0x7fa1392ce272 in std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/vector.tcc:571; #5 0x7fa1392cda2a in std::vector<double, std::allocator<double> >::resize(unsigned long) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_vector.h:692; #6 0x7fa139345669 in psi::detci::CIWavefun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1441#issuecomment-449451218:6669,allocate,allocate,6669,https://psicode.org,https://github.com/psi4/psi4/pull/1441#issuecomment-449451218,1,['allocate'],['allocate']
Energy Efficiency,#59: cc41 ............................. Passed 107.46 sec; Start 83: cc9a; 89/412 Test #105: dcft-grad2 ....................... Passed 101.83 sec; Start 19: cbs-xtpl-nbody; 90/412 Test #261: omp3-4 ........................... Passed 87.40 sec; Start 243: ocepa-grad2; 91/412 Test #171: dft1-alt ......................... Passed 53.53 sec; Start 132: dfmp2-3; 92/412 Test #264: omp3-grad2 ....................... Passed 71.89 sec; Start 262: omp3-5; 93/412 Test #220: mints-benchmark .................. Passed 42.98 sec; Start 277: opt11; 94/412 Test #145: dfomp2-grad2 ..................... Passed 91.70 sec; Start 81: cc8c; 95/412 Test #132: dfmp2-3 .......................... Passed 41.50 sec; Start 245: ocepa2; 96/412 Test #82: cc9 .............................. Passed 81.68 sec; Start 393: python-cc54; 97/412 Test #231: mp2-module ....................... Passed 115.34 sec; Start 349: sapt-compare; 98/412 Test #83: cc9a ............................. Passed 74.28 sec; Start 308: pywrap-db1; 99/412 Test #193: fd-freq-energy ................... Passed 97.88 sec; Start 361: x2c1; 100/412 Test #19: cbs-xtpl-nbody ................... Passed 102.30 sec; Start 60: cc42; 101/412 Test #260: omp3-3 ........................... Passed 112.58 sec; Start 68: cc4a; 102/412 Test #277: opt11 ............................ Passed 63.60 sec; Start 300: pywrap-alias; 103/412 Test #81: cc8c ............................. Passed 64.99 sec; Start 2: adc2; 104/412 Test #150: dfomp3-grad2 ..................... Passed 124.28 sec; Start 65: cc47; 105/412 Test #243: ocepa-grad2 ...................... Passed 114.31 sec; Start 21: cc1; 106/412 Test #61: cc43 ............................. Passed 136.20 sec; Start 35: cc19; 107/412 Test #308: pywrap-db1 ....................... Passed 43.46 sec; Start 107: dcft-grad4; 108/412 Test #349: sapt-compare ..................... Passed 47.52 sec; Start 238: nbody-he-cluster; 109/412 Test #393: python-cc54 ...................... Passed 54.46 sec; Start 67: cc49; 110/4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:9538,energy,energy,9538,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,#5: casscf-sa-sp ..................... Passed 14.38 sec; Start 89: cepa2; 214/412 Test #87: cepa0-grad2 ...................... Passed 8.28 sec; Start 339: scf7; 215/412 Test #154: dft-grad-lr1 ..................... Passed 17.73 sec; Start 91: cepa1; 216/412 Test #106: dcft-grad3 ....................... Passed 18.05 sec; Start 358: tu4-h2o-freq; 217/412 Test #325: sapt8 ............................ Passed 16.07 sec; Start 7: casscf-sp; 218/412 Test #170: dft-vv10 ......................... Passed 18.36 sec; Start 286: props2; 219/412 Test #90: cepa3 ............................ Passed 15.49 sec; Start 367: dft-smoke; 220/412 Test #219: mints8 ........................... Passed 16.29 sec; Start 165: dft-grad1; 221/412 Test #302: pywrap-basis ..................... Passed 17.34 sec; Start 351: dft-custom; 222/412 Test #89: cepa2 ............................ Passed 11.16 sec; Start 287: props3; 223/412 Test #341: soscf-large ...................... Passed 15.61 sec; Start 198: freq-isotope1; 224/412 Test #14: cbs-xtpl-energy .................. Passed 12.53 sec; Start 369: scf-freq1; 225/412 Test #151: dfomp2p5-1 ....................... Passed 21.88 sec; Start 370: dft-jk; 226/412 Test #292: psimrcc-fd-freq1 ................. Passed 17.57 sec; Start 84: cdomp2-1; 227/412 Test #358: tu4-h2o-freq ..................... Passed 12.87 sec; Start 200: fnocc1; 228/412 Test #339: scf7 ............................. Passed 15.12 sec; Start 218: mints6; 229/412 Test #286: props2 ........................... Passed 13.70 sec; Start 202: fnocc3; 230/412 Test #91: cepa1 ............................ Passed 16.00 sec; Start 144: dfomp2-grad1; 231/412 Test #367: dft-smoke ........................ Passed 13.85 sec; Start 373: dft-custom-hybrid; 232/412 Test #198: freq-isotope1 .................... Passed 12.89 sec; Start 267: opt1-fd; 233/412 Test #165: dft-grad1 ........................ Passed 14.30 sec; Start 394: python-3-index-transforms; 234/412 Test #287: props3 ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:21056,energy,energy,21056,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,"#843 is related, by the way, as are optking's powers of transmutation. (No one should try to fix optking; any efforts should be directed at pyoptking.) I suspect a general survey of ""what does `CoordEntry.Z()` mean would uncover our abuse of the method for atomic number, ghostedness, and non-ECP nuclear charge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1102#issuecomment-408283049:46,power,powers,46,https://psicode.org,https://github.com/psi4/psi4/issues/1102#issuecomment-408283049,2,"['charge', 'power']","['charge', 'powers']"
Energy Efficiency,"#TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (DISP); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_disp.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (FIXED); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; > set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_fixed.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST; > ```; > ; > * I think it should be clear from the output file what exch-disp scheme/scale is applied. So perhaps add a couple lines to the printout like below. This should also satisfy Jonathon's request that the output file show the change in scaling defaults.; > ; > ```; > ==> E20 Dispersion (MP2) <==; > ; > ; > Disp20 (MP2) -0.37881730 [mEh]; > Exch-Disp20,u 0.02037338 [mEh]; > Scaling Scheme: Disp; > Scaling Factor: 0.707; > ; > SAPT(DFT) Results; > ---------------------------------------------------------------------------------------------------------; > Electrostatics -0.10197192 [mEh] -0.06398835 [kcal/mol] -0.26772724 [kJ/mol]; > Elst1,r -0.10197192 [mEh] -0.06398835 [kcal/mol] -0.26772724 [kJ/mol]; > ```. Added the !dHF cases in `sapt-dft1` and `sapt-dft2`. For `sapt-dft-api`, the dHF feature is intrinsically unsupported, because the dHF cal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:3115,energy,energy,3115,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,2,['energy'],['energy']
Energy Efficiency,"%> (-9.29%)` | :arrow_down: |; | [psi4/src/psi4/scfgrad/scf\_grad.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9zY2ZncmFkL3NjZl9ncmFkLmNj) | `95.09% <0.00%> (-1.19%)` | :arrow_down: |; | [psi4/src/psi4/liboptions/liboptions.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJvcHRpb25zL2xpYm9wdGlvbnMuY2M=) | `56.26% <0.00%> (-0.91%)` | :arrow_down: |; | [psi4/src/psi4/libmints/vector.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJtaW50cy92ZWN0b3IuY2M=) | `62.27% <0.00%> (-0.60%)` | :arrow_down: |; | [psi4/src/psi4/libfock/points.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJmb2NrL3BvaW50cy5jYw==) | `72.24% <0.00%> (-0.27%)` | :arrow_down: |; | [psi4/src/core.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvY29yZS5jYw==) | `82.19% <0.00%> (-0.25%)` | :arrow_down: |; | [psi4/driver/driver.py](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9kcml2ZXIvZHJpdmVyLnB5) | `79.10% <0.00%> (-0.22%)` | :arrow_down: |; | [psi4/src/psi4/cc/ccenergy/ccenergy.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9jYy9jY2VuZXJneS9jY2VuZXJneS5jYw==) | `67.49% <0.00%> (-0.17%)` | :arrow_down: |; | ... and [99 more](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=footer). Last update [e273d32...a90a350](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1443#issuecomment-507008299:3257,Power,Powered,3257,https://psicode.org,https://github.com/psi4/psi4/pull/1443#issuecomment-507008299,1,['Power'],['Powered']
Energy Efficiency,"': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1583,energy,energy,1583,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,1,['energy'],['energy']
Energy Efficiency,"'; fxyz: absolute path to an xyz file; '''; elements, xyz = [], []; with open(fxyz) as f:; line = next(f); numb_atoms = int(line.split()[0]); line = next(f); charge, multiplicity = map(int, line.split()); for i in range(numb_atoms):; line = next(f); elmnt, x, y, z = line.split() ; elements.append(elmnt); xyz.append((float(x), float(y), float(z))). fxyz = os.path.basename(fxyz); base, ext = os.path.splitext(fxyz). name = base + '_wB97XD3_def2-TZVP'. geom_string = '\n'.join(['%s %f %f %f' % (e, x, y, z) for e, (x, y, z) in zip(elements, xyz)]); geom_string = str(charge) + ' ' + str(multiplicity) + '\n' + geom_string; print(""geom_string"", geom_string). outfile = name + '.psi4'; psi4.core.set_output_file(outfile, False); geom = psi4.geometry(geom_string); settings = {; 'scf_type': 'DF',; 'dft_basis_tolerance': 1e-10,; 'ints_tolerance': 1e-10,; 'dft_pruning_scheme':'robust',; 'S_ORTHOGONALIZATION': 'PARTIALCHOLESKY',; 'S_CHOLESKY_TOLERANCE': 1e-6,; 'wcombine': False,; }; psi4.set_options(settings); start_time = time.time(); grad = psi4.gradient(theory) ; psi4.core.print_variables(); energy = psi4.variable(""SCF TOTAL ENERGY""); psi4.core.clean(); jobtime = time.time() - start_time; results = {; ""time"": float(jobtime),; ""energy"": energy,; ""gradient"": grad.np.tolist(); }; print(f""{psi4.core.get_num_threads()=}""). with open(name + "".json"", ""w"") as fout:; json.dump(results, fout, indent=4). print(""Job %s completed in %.2f seconds with energy %.10f"" % (base, jobtime, energy)). def main(args):; assert args[1].endswith("".xyz""); psi4.set_num_threads(1); run_fxyz(args[1]). if __name__ == '__main__':; main(sys.argv); ```. ## Psithon vs. QCSchema. Another aside -- your input is written as a python script containing a single job and dropping the key results to json. This could also run through QCSchema with json input and json output, either API like https://github.com/psi4/psi4/blob/master/tests/pytests/test_addons.py#L792-L819 or command-line. Let me know if you'd want more details.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938:4349,energy,energy,4349,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938,6,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1602,energy,energy,1602,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,3,['energy'],['energy']
Energy Efficiency,() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097.75 mb; memory requirements = 433739.41 mb. Number of ijk combinations: 50116. Computing (T) correction... % complete total time; 10.0 54071 s; 20.0 107105 s; 30.1 161098 s; 40.0 214685 s; 50.1 268763 s; 60.0 322003 s; 70.1 378258 s; 80.1 435809 s; 90.1 493509 s. (T) energy -0.198672700359. CCSD(T) correlation energy -4.167498886158; * CCSD(T) total energy -1133.028826149781. *** tstop() called on pn029.its.monash.edu.au at Wed Mar 19 13:22:06 2014; Module time:; user time = 0.00 seconds = 0.00 minutes; system time = 32946184.58 seconds = 549103.08 minutes; total time = 554554 seconds = 9242.57 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 39077777.68 seconds = 651296.29 minutes; total time = 1040240 seconds = 17337.33 minutes. *** tstop() called on pn029.its.monash.edu.au at Wed Mar 19 13:22:08 2014; Module time:; user time = 0.00 seconds = 0.00 minutes; system time = 32946186.58 seconds = 549103.11 minutes; total time = 554556 seconds = 9242.60 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 39077779.68 seconds = 651296.33 minutes; total time = 1040242 seconds = 17337.37 minutes. *** PSI4 exiting successfully. Buy a developer a beer!; ```. ```; *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:4645,energy,energy,4645,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499 0; 11 8 4 -0.2613460628 -0.0000000000 0.0000008461 1; 12 8 5 -0.2613460628 -0.0000000000 0.0000002627 0; 13 8 6 -0.2613460628 -0.0000000000 0.0000000942 1. CISD iterations converged!. CISD variational energy: -0.261346062815; CISD transition energy: -0.261346060539. OS MP2 FNO correction: -0.000000000000; SS MP2 FNO correction: -0.000000000000; MP2 FNO correction: -0.000000000000. OS SCS-MP2 correlation energy: -0.251080593983; SS SCS-MP2 correlation energy: -0.025501141462; SCS-MP2 correlation energy: -0.276581735444; * SCS-MP2 total energy: -788.124409449857. OS MP2 correlation energy: -0.209233828319; SS MP2 correlation energy: -0.076503424385; MP2 correlation energy: -0.285737252704; * MP2 total energy: -788.133564967117. OS CISD correlation energy: -0.198332372454; SS CISD correlation energy: -0.063013688085; CISD correlation energy: -0.261346062815; * CISD total energy: -788.109173777228. Total time for CISD iterations: 11.63 s (user); 1.47 s (system); 6 s (total). Time per iteration: 0.89 s (user); 0.11 s (system); 0.46 s (total). *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:49 2017; Module time:; 	user time = 11.63 seconds = 0.19 minutes; 	system time = 1.48 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes; Total time:; 	user time = 16.89 seconds = 0.28 minutes; 	system time = 2.38 seconds = 0.04 minutes; 	total time = 12 seconds = 0.20 minutes. *** Psi4 exiting successfu,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:13798,energy,energy,13798,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['energy'],['energy']
Energy Efficiency,"(a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1932,energy,energy,1932,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"(indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasiriann",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1282,energy,energy,1282,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['energy'],['energy']
Energy Efficiency,")); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute ground state SCF energy; scf_energy = psi4.energy('scf'). # Compute TD-DFT excited state energies; td_options = {; 'tdscf_type': 'full',; 'roots_per_irrep': [1, 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Ang",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:2829,energy,energy,2829,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['energy'],['energy']
Energy Efficiency,"), 7, ""SCF energy"") #TEST; #compare_values(refci, thisenergy, 7, ""CI energy"") #TEST; #compare_values(refcorr, get_variable(""CI CORRELATION ENERGY""), 7, ""CI correlation energy"") #TEST; --------------------------------------------------------------------------. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. => Loading Basis Set <=. Name: 6-31G**; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 149 file /Users/github/Git/tmppsi/objdir-ompclang3/stage/usr/local/psi4/share/psi4/basis/6-31gss.gbs ; atoms 2-3 entry H line 44 file /Users/github/Git/tmppsi/objdir-ompclang3/stage/usr/local/psi4/share/psi4/basis/6-31gss.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.069592187390 15.994914619560; H 0.000000000000 -0.783151105291 0.552239257844 1.007825032070; H 0.000000000000 0.783151105291 0.552239257844 1.007825032070. Running in c2v symmetry. Rotational constants: A = 24.35462 B = 13.63610 C = 8.74166 [cm^-1]; Rotational constants: A = 730133.20983 B = 408800.03934 C = 262068.46197 [MHz]; Nuclear repulsion = 8.804686618639057. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: 6-31G**; Blend: 6-31G**; Number of shells: 12; Number of basis function: 25; Number of Cartesian functions: 25; Spherical Harmonics?: false",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:2740,charge,charge,2740,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['charge'],['charge']
Energy Efficiency,"* I started the renaming, so you'll need master qcel and possibly this qcng https://github.com/MolSSI/QCEngine/pull/172; * pretty much at same tests failing as before rebase. charge embedding for nbody needs refixing; * logging is in place -- always to `file.log` that grows.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-553075502:175,charge,charge,175,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-553075502,1,['charge'],['charge']
Energy Efficiency,* [ ] Adapt CC* modules to take in Wfn so that truncated virtual space proceeds transparently. Feature request (http://forum.psicode.org/t/rvs-approximations-for-cc2-or-adc-2/504),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-298973221:6,Adapt,Adapt,6,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-298973221,1,['Adapt'],['Adapt']
Energy Efficiency,* possibility to override charge states of individual atoms in SAD guess,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-451608021:26,charge,charge,26,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-451608021,1,['charge'],['charge']
Energy Efficiency,"* restarting energy() calculations. E.g. no mention of `*.180.npz` files, or how to save it. File.32 still active?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1218#issuecomment-418960029:13,energy,energy,13,https://psicode.org,https://github.com/psi4/psi4/issues/1218#issuecomment-418960029,1,['energy'],['energy']
Energy Efficiency,"* these four mols https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/tests/standard_suite_ref.py#L12-L40; * rhf for hf & h2o. uhf/rohf for bh3p & nh2.; * cc-pvdz for hf & bh2p. aug-cc-pvdz & cfour-qz2p for h2o & nh2.; * conv, df, cd, though conv only is a fine start; * all-electron (ae) and frozen-core (fc); * lccd, olccd, lccsd all appreciated, though maybe your code doesn't cover the last; * energies and energy components of first priority, but should you have dipoles, gradients, etc., glad to collect them now. You don't have to do any of this -- I can take values from existing psi modules -- but an independent reference implementation is not to be sniffed at, and you can ensure psi will fail if it doesn't match you from here out. * either send me numbers (non-redundant; that is, corl, not corl and tot) or PR directly to qcengine (just that one standard_suite_ref.py file); * I'm only testing to 1.e-6 but refs generated with https://github.com/psi4/psi4/blob/master/tests/pytests/standard_suite_runner.py#L60-L63. I'll merge this PR",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1909#issuecomment-635391683:424,energy,energy,424,https://psicode.org,https://github.com/psi4/psi4/pull/1909#issuecomment-635391683,1,['energy'],['energy']
Energy Efficiency,******************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2690. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -3.880037726326. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 686; Number of virtual orbitals in truncated space: 651. ==> Memory <==. Total memory requirements: 66851.24 mb; 3-index integrals: 10270.29 mb; CCSD intermediates: 56580.95 mb. memory requirements for CCSD(T): 433739.41 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 66; Number of active virtual orbitals: 651; Number of frozen virtual orbitals: 35. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 -3.8800058514 -3.8800058514 1.0189008044 626; 1 1 3 -3.8152481717 0.0647576797 0.2191661023 24884; 2 2 4 -3.9577344796 -0.1424863079 0.0847277058 25298; 3 3 5 -3.9682900741 -0.0105555944 0.0382308599 25123; 4 4 6 -3.9680391583 0.0002509158 0.0104096296 25396; 5 5 7 -3.9686550395 -0.0006158812 0.0052763771 25237; 6 6 8 -3.9689037023 -0.0002486628 0.0017743273 25192; 7 7 9 -3.9688426840 0.0000610183 0.0009217340 25030; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.96879,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:1793,Energy,Energy,1793,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,2,['Energy'],['Energy']
Energy Efficiency,"*OpenMP* issue!. It seems will be no better support of *OpenMP* in *MSVC* soon. So I was looking for an alternative solution as it is increasing code complexity and will add too much burden to keep *Psi4* compatible with *OpenMP* 2.0. One options is `clang-cl`, *MSVC* compatibility layer of *LLVM* (http://clang.llvm.org/docs/MSVCCompatibility.html), which supports *OpenMP* 4.0. After some hacking of *CMake* and *Psi4*, I managed to compile and pass the tests (https://ci.appveyor.com/project/raimis/psi4/build/1.0.601). So I will make new PRs to adapt `clang-cl` and close #1200, #1224, #1225, #1226, #1228, #1229, and #1230. Also, #1231 could be reverted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-423183802:550,adapt,adapt,550,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-423183802,1,['adapt'],['adapt']
Energy Efficiency,"*kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; > ciwfn = core.detci(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1021#issuecomment-388980081>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdoBl5TkzfuztMHuD5aseZ9qEjGVeks5tygHBgaJpZM4T-hi0>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:12603,energy,energy,12603,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['energy'],['energy']
Energy Efficiency,"+1. I have run into similar errors. This is with the simple case of doing a dihedral scan on hydrogen peroxide. ```; ERROR: Symmetry operation 2 did not map atom 1 to another atom:; Molecule:; Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; H 0.021730534334 1.023759611300 -0.835745328589 1.007825032070; O -0.026376271469 0.710734621460 0.054491125526 15.994914619560; O 0.026376271467 -0.710734621234 0.054491125355 15.994914619560; H -0.021730534332 -1.023759611527 -0.835745328694 1.007825032070. attempted to find atom at; 0.041065 -1.934625 -1.579330; atom_map() throwing PsiException; Could not symmetrize geometry in OPT::MOLECULE::SYMMETRIZE_GEOM(). **** Optimization has failed! (in 1 steps) ****; ```. In my case, some steps fail to optimize while most don't. It's hard to say why some are failing, while other steps are not. It seems that rotation far away from the input molecule conformer are an issue. Though that's not always the case, so...? Here's my input file:. ```; molecule HOOH {; 0 1; H ; O 1 0.90; O 2 1.40 1 100.0; H 3 0.90 2 100.0 1 0.0 ; }. steps = 35; step_size = 10 ; start_angle = -170.0; dihedrals = [""1 2 3 4 {}"".format((counter * step_size) + start_angle) for counter in range(0, steps)]; #print(dihedrals); for dihedral in dihedrals:; set {; basis 6-31G*; scf_type df; guess sad ; ints_tolerance 1.0E-8; } ; set optking {; fixed_dihedral = $dihedral; } ; optimize('scf'); SCF_Energy = energy('scf'); ```. Edit: I should add that attempting to make the optimization gentler with the following settings, or changing the step size, does not seem to fix the issue. ```; full_hess_every 1; dynamic_level 1; opt_coordinates both; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-200900928:268,charge,charge,268,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-200900928,4,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,", 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); > compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); > compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(odd_g_start, g0, 3, 'start grad'); > ; > def test_badodd_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); > compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); > compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'); > ; > test_norm_start(normz); > test_zero_grad(normz); > ; > # And behold, the initial gradient matches Q-Chem, the optimization; > ; > # progresses nicely, the RMS Force column goes to zero, and the gradient; > ; > # at the end is zero.; > ; > # start nre.........................................................PASSED; > ; > # start ene.........................................................PASSED; > ; > # start rms grad....................................................PASSED; > ; > # start grad........................................................PASSED; > ; > #Optimizer: Optimization complete!; > ; > # opt nre...........................................................PASSED; > ; > # opt ene...........................................................PASSED; > ; > # opt ZERO grad.....................................................PASSED; > ; > # -------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:4105,ENERGY,ENERGY,4105,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['ENERGY'],['ENERGY']
Energy Efficiency,", 0, 0, 0],; }; psi4.set_options(td_options); td_energy, wfn = psi4.energy('td-dft', return_wfn=True); ; # Extract the first excited state energy; first_excited_energy = wfn.extras['TDDFT ROOT 1 EXCITED STATE ENERGY']. return first_excited_energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a v",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:3944,energy,energy,3944,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['energy'],['energy']
Energy Efficiency,", 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2130,energy,energy,2130,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,", if that makes the git operations easier.; * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; ```; #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. DHF = -0.01189736 #TEST; Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" +",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:1502,ENERGY,ENERGY,1502,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,1,['ENERGY'],['ENERGY']
Energy Efficiency,", post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2466,energy,energy,2466,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['energy'],['energy']
Energy Efficiency,- ---------- ---------- ---------- --------; # 0 -0.197723974731951 0.000e+00 0.000000 0.000000 0.000000 0.000000; # 1 -0.200886440618237 3.243e-02 0.003711 0.010524 0.010524 0.000000; # 2 -0.204564275493213 1.028e-02 0.004234 0.012020 0.012020 0.000000; # 3 -0.205087135995954 3.025e-03 0.004542 0.012902 0.012902 0.000000; # 4 -0.205085978714777 5.217e-04 0.004543 0.012930 0.012930 0.000000; # 5 -0.205082549603111 1.001e-04 0.004542 0.012930 0.012930 0.000000; # 6 -0.205082454897800 2.411e-05 0.004542 0.012931 0.012931 0.000000; # 7 -0.205082465175532 4.603e-06 0.004542 0.012931 0.012931 0.000000; # 8 -0.205082405504007 1.288e-06 0.004542 0.012931 0.012931 0.000000; # 9 -0.205082391075850 4.771e-07 0.004542 0.012932 0.012932 0.000000; # 10 -0.205082394886181 1.354e-07 0.004542 0.012932 0.012932 0.000000; # 11 -0.205082394594478 3.436e-08 0.004542 0.012932 0.012932 0.000000. # <<< ROHF 0 2; #; # Solving CC Amplitude Equations; # ------------------------------; # Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; # ---- --------------------- --------- ---------- ---------- ---------- --------; # 0 -0.156206806450125 0.000e+00 0.000148 0.000440 0.000440 0.000000; # 1 -0.166781714187105 2.912e-02 0.003397 0.008427 0.008427 0.000000; # 2 -0.170234135862397 1.036e-02 0.004356 0.011185 0.011185 0.000000; # 3 -0.170533030368765 3.269e-03 0.004712 0.012280 0.012280 0.000000; # 4 -0.170520797742350 1.364e-03 0.004743 0.012467 0.012467 0.000000; # 5 -0.170530231230523 5.667e-04 0.004748 0.012499 0.012499 0.000000; # 6 -0.170534925559369 1.852e-04 0.004747 0.012487 0.012487 0.000000; # 7 -0.170534620418104 6.567e-05 0.004746 0.012484 0.012484 0.000000; # 8 -0.170534869316551 1.694e-05 0.004747 0.012485 0.012485 0.000000; # 9 -0.170534904690435 3.137e-06 0.004747 0.012486 0.012486 0.000000; # 10 -0.170534914990853 8.802e-07 0.004747 0.012486 0.012486 0.000000; # 11 -0.170534902081469 2.450e-07 0.004747 0.012486 0.012486 0.000000; # 12 -0.170534896808386 6.485e-08 0.004747 0.012486,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878:2682,Energy,Energy,2682,https://psicode.org,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878,1,['Energy'],['Energy']
Energy Efficiency,- ---------- ---------- ---------- --------; # 0 -0.197723974784437 0.000e+00 0.000000 0.000000 0.000000 0.116770; # 1 -0.200886440649593 2.613e-02 0.003711 0.010524 0.010524 0.124980; # 2 -0.204664297940221 9.774e-03 0.004249 0.012062 0.012062 0.132065; # 3 -0.205054447874144 2.517e-03 0.004541 0.012898 0.012898 0.134019; # 4 -0.205079571860144 5.102e-04 0.004543 0.012929 0.012929 0.134351; # 5 -0.205083329294564 8.900e-05 0.004542 0.012931 0.012931 0.134394; # 6 -0.205082593077830 2.128e-05 0.004542 0.012931 0.012931 0.134399; # 7 -0.205082451507967 3.672e-06 0.004542 0.012931 0.012931 0.134400; # 8 -0.205082414774114 9.732e-07 0.004542 0.012932 0.012932 0.134400; # 9 -0.205082388497871 3.442e-07 0.004542 0.012932 0.012932 0.134400; # 10 -0.205082395296112 1.014e-07 0.004542 0.012932 0.012932 0.134400; # 11 -0.205082394755246 2.995e-08 0.004542 0.012932 0.012932 0.134400. # <<< ROHF -1 1; #; # Solving CC Amplitude Equations; # ------------------------------; # Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; # ---- --------------------- --------- ---------- ---------- ---------- --------; # 0 -0.197723974731951 0.000e+00 0.000000 0.000000 0.000000 0.000000; # 1 -0.200886440618237 3.243e-02 0.003711 0.010524 0.010524 0.000000; # 2 -0.204564275493213 1.028e-02 0.004234 0.012020 0.012020 0.000000; # 3 -0.205087135995954 3.025e-03 0.004542 0.012902 0.012902 0.000000; # 4 -0.205085978714777 5.217e-04 0.004543 0.012930 0.012930 0.000000; # 5 -0.205082549603111 1.001e-04 0.004542 0.012930 0.012930 0.000000; # 6 -0.205082454897800 2.411e-05 0.004542 0.012931 0.012931 0.000000; # 7 -0.205082465175532 4.603e-06 0.004542 0.012931 0.012931 0.000000; # 8 -0.205082405504007 1.288e-06 0.004542 0.012931 0.012931 0.000000; # 9 -0.205082391075850 4.771e-07 0.004542 0.012932 0.012932 0.000000; # 10 -0.205082394886181 1.354e-07 0.004542 0.012932 0.012932 0.000000; # 11 -0.205082394594478 3.436e-08 0.004542 0.012932 0.012932 0.000000. # <<< ROHF 0 2; #; # Solving CC Amplitude Equations,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878:1620,Energy,Energy,1620,https://psicode.org,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878,1,['Energy'],['Energy']
Energy Efficiency,"- No S^2 vs S^Inf is, in some ways, a different level theory.; - S^2/S^Inf are separate quantities; - Mixing is as safe as any other mixing in SAPT. Our current version is fine, but S^Inf should help more for charged complexes. Exch/Ind-Exch at S^Inf and Disp-Exch at S^2 is probably quite reasonable.; - Yes and no. S^Inf is limited to SAPT0 for the time being, higher levels could get quite complex. One more person to ping and can correct me: @ajmisquitta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/921#issuecomment-366112364:209,charge,charged,209,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366112364,1,['charge'],['charged']
Energy Efficiency,"- Thanks for your headers input; - Great new CMake keyword [`CMAKE_INSTALL_MESSAGE`](https://cmake.org/cmake/help/v3.4/variable/CMAKE_INSTALL_MESSAGE.html#variable:CMAKE_INSTALL_MESSAGE) to suppress all those ""Up-to-date""s. Introduced in 3.1 and we're requiring 3.2, so we can use it. Methinks we want `LAZY` as default; - Nice discussion on what PRIVATE, PUBLIC, INTERFACE dependencies mean for static libraries: https://cmake.org/pipermail/cmake/2016-May/063400.html; - Slide deck on packaging and exporting targets that I'm broadly following for external projects: https://archive.fosdem.org/2013/schedule/event/moderncmake/attachments/slides/258/export/events/attachments/moderncmake/slides/258/cmake_fosdem_2013.pdf; - A nice GH repo on with targets: https://github.com/forexample/package-example",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239526159:600,schedul,schedule,600,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239526159,1,['schedul'],['schedule']
Energy Efficiency,"- The fd-freq-energy test fails for me if the exit() command is removed---the 5-point frequencies disagree by slightly more than 0.001 (the tolerance threshold).; - Thanks for the pointer on dftd3. I was indeed looking at the wrong documentation. The dftd3 tests needed only a small change to work (see above commit).; - One option for format_kwargs_for_input is to reopen the file in binary mode before calling it and then reopening the file in (normal) text mode afterwards. Messy but it should work under python 2 and python 3. Regarding checking against different platforms, have you considered using buildbot to automate the process? Given psi4 is so easy to checkout, compile and test, setting up buildbot would be pretty easy. Let me know if you'd like a hand/advice---I'm moving to using psi4 for as much as possible so I'm happy to spend time helping to make it work more smoothly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20552847:14,energy,energy,14,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20552847,1,['energy'],['energy']
Energy Efficiency,- [ ] . ```; sp = single_point('scf'); sp.compute() # ?; wfn = sp.wfn(); energy = sp.energy(); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-303823433:73,energy,energy,73,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-303823433,2,['energy'],['energy']
Energy Efficiency,"- [ ] Implement logging for PsiAPI mode so that output files (currently w/o Psi4 header or any record of input commands or options) aren't so mysterious. At minimum, print to output the `psi4.header()` at file creation and e.g. `>>> aggh = psi4.energy(""scf"")` and `>>> psi4.set_options({""scf_type"": ""pk""})` to track what was done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-284798071:245,energy,energy,245,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-284798071,1,['energy'],['energy']
Energy Efficiency,"- [ ] Unify origin-setting for properties/integrals. Properties by oeprop get their origin from options (https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L775-L808). Mints integrals get their origin from default 0,0,0 or from options. But with Mints, you sometimes want to set the origin by argument (default 0,0,0) in API. Unification so that useful from both input file and API would be nice. Also maybe an easy center-of-charge spec.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-330926737:449,charge,charge,449,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-330926737,1,['charge'],['charge']
Energy Efficiency,"--------------------------------------------- Captured stdout call -------------------------------------------------; -D correction from Py-side. Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ____________________________________________________ test_grimme_3c ____________________________________________________. molrec = {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}; name_hint = 'pbeh3c', level_hint = 'd3bj', param_tweaks = {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}; ptype = 'energy'; dashcoeff_supplement = defaultdict(<function <lambda> at 0x7f5e8db768c8>, {'d2': defaultdict(<class 'dict'>, {'definitions': {'opbe-d2': {'ty...0093}, 'citation': ' M. K. Kesharwani, A. Karton, J.M. L. Martin, J. Chem. Theory Comput. 12, 444-454, 2016\n'}}})}); verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:12031,energy,energy,12031,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency,------------------------------------------------ ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -696.23196743 -6.96e+02 6.60e-04 2.45e-04 o 3.67e-03 1.31e-03 o ~; 2 -696.23202825 -6.08e-05 2.89e-04 * 9.64e-05 o 3.98e-03 1.27e-03 o ~; 3 -696.23204984 -2.16e-05 1.78e-04 * 5.02e-05 o 2.05e-03 7.01e-04 o ~; 4 -696.23205372 -3.88e-06 1.35e-04 * 3.92e-05 o 4.27e-03 1.33e-03 o ~; 5 -696.23205950 -5.79e-06 6.65e-05 * 1.71e-05 o 9.47e-04 * 2.94e-04 o ~; ```; And; results of psi4 1.2 is this; ```; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -696.23196742 -6.96e+02 6.43e-02 1.88e-02 o 2.04e-02 6.09e-03 o ~; 2 -696.23181077 1.57e-04 6.10e-02 1.83e-02 o 1.93e-02 6.09e-03 o ~; 3 -696.23126151 5.49e-04 5.77e-02 1.78e-02 o 1.93e-02 6.09e-03 o ~; 4 -696.23034152 9.20e-04 5.45e-02 1.73e-02 o 1.93e-02 6.09e-03 o ~; 	Raising dynamic level to 4. ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -696.23034152 -6.96e+02 1.45e-01 4.37e-02 o 5.20e-02 1.59e-02 o ~; ```; Thank you.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1094#issuecomment-405297422:1684,Energy,Energy,1684,https://psicode.org,https://github.com/psi4/psi4/issues/1094#issuecomment-405297422,1,['Energy'],['Energy']
Energy Efficiency,"------------------------------------------------------						 -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc						 Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------						 -------------------------------------------------------; Ag 5 5 2 2 2 0						 Ag 5 5 2 2 2 0; B1g 1 1 0 0 0 0						 B1g 1 1 0 0 0 0; B2g 1 1 0 0 0 0						 B2g 1 1 0 0 0 0; B3g 1 1 0 0 0 0						 B3g 1 1 0 0 0 0; Au 0 0 0 0 0 0						 Au 0 0 0 0 0 0; B1u 2 2 1 1 1 0						 B1u 2 2 1 1 1 0; B2u 2 2 1 1 1 0						 B2u 2 2 1 1 1 0; B3u 2 2 1 1 1 0						 B3u 2 2 1 1 1 0; -------------------------------------------------------						 -------------------------------------------------------; Total 14 14 5 5 5 0						 Total 14 14 5 5 5 0; -------------------------------------------------------						 -------------------------------------------------------. ==> Iterations <==											 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|					 Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -123.06842016548131 -1.23068e+02 5.10688e-01 DIIS			 |	 @RKS iter 1: -123.27362297901736 -1.23274e+02 1.80808e+04 DIIS; @RKS iter 2: -124.46188217449202 -1.39346e+00 6.10863e-01 DIIS			 |	 @RKS iter 2: -73.76905164751832 4.95046e+01 8.29835e+08 DIIS; @RKS iter 3: -128.81098734456091 -4.34911e+00 6.36107e-02 DIIS			 |	 @RKS iter 3: -66.70632235195494 7.06273e+00 6.43558e+07 DIIS; @RKS iter 4: -128.84997903672445 -3.89917e-02 3.37243e-03 DIIS			 |	 Occupation by irrep:; @RKS iter 5: -128.85006926342885 -9.02267e-05 1.88570e-03 DIIS			 |	 Ag B1g B2g B3g Au B1u B2u B3u ; @RKS iter 6: -128.85010506058651 -3.57972e-05 1.22444e-04 DIIS			 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; @RKS iter 7: -128.85010520037952 -1.39793e-07 1.18298e-05 DIIS			 <; @RKS iter 8: -128.85010519896633 1.41318e-09 2.04953e-05 DIIS			 <; @RKS iter 9: -128.85010519995217 -9.85835e-10 7.24431e-06 DIIS			 <; Energy and wave function converged.								 <; 												 <; 					",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:8385,Energy,Energy,8385,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,2,['Energy'],['Energy']
Energy Efficiency,"--------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !---------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:2456,energy,energy,2456,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,2,['energy'],['energy']
Energy Efficiency,"-------------------------------------------------------------------------------------------------- Captured stdout call ------------------------------------------------------------------------------------------------------------; SCF energy............................................................................FAILED; ____________________________________________________________________________________________________________ test_tu1_h2o_energy ____________________________________________________________________________________________________________. @ctest_labeler(""tutorial;quick;smoke""); def test_tu1_h2o_energy():; > ctest_runner(__file__). stage/lib/psi4/tests/tu1-h2o-energy/test_input.py:5: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. inputdatloc = '/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/tests/tu1-h2o-energy/test_input.py', extra_infiles = None, outfiles = None. def ctest_runner(inputdatloc, extra_infiles: List =None, outfiles: List =None):; """"""Called from a mock PyTest function, this takes a full path ``inputdatloc`` to an ``""input.dat""`` file set up for; CTest and submits it to the ``psi4`` executable. Any auxiliary files with names listed in ``extra_infiles`` that reside; alongside ``inputdatloc`` are placed in the Psi4 execution directory.; ; """"""; from qcengine.util import execute; import psi4; ; # Pass runtime env through to `execute`; # * appending Psi4 import path (after all, it worked previous line) since partial/relative paths not robust; psiimport = Path(psi4.__file__).parent.parent; env = os.environ.copy(); env[""PYTHONPATH""] = env[""PYTHONPATH""] + os.pathsep + str(psiimport); ; ctestdir = Path(inputdatloc).resolve().parent; ; if (ctestdir / ""input.dat"").exists():; inputdat = ""input.dat""; elif (ctestdir / ""input.py"").exists():; inputdat = ""in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:5053,energy,energy,5053,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['energy'],['energy']
Energy Efficiency,"----------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.2a1.dev612 . Git: Rev {macintelclang} 94b2ae0 dirty. R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,; A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). -----------------------------------------------------------------------. Psi4 started on: Wednesday, 25 October 2017 01:40PM. Process ID: 40933; PSIDATADIR: /Users/github/Git/tmppsi/objdir-ompclang3/stage/usr/local/psi4/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; #! 6-31G** H2O+ Test CISD Energy Point. refnuc = 8.8046866186391 #TEST; refscf = -75.6213422266812 #TEST; refci = -75.7850671871149 #TEST; refcorr = refci - refscf #TEST. molecule h2o {; 0 1; O; H 1 1.00; H 1 1.00 2 103.1; }. set {; # reference rohf; basis 6-31G**; freeze_core true; # icore 0; }. thisenergy = energy('cisd'). #compare_values(refnuc, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST ; #compare_values(refscf, get_variable(""SCF total energy""), 7, ""SCF energy"") #TEST; #compare_values(refci, thisenergy, 7, ""CI energy"") #TEST; #compare_values(refcorr, get_variable(""CI CORRELATION ENERGY""), 7, ""CI correlation energy"") #TEST; --------------------------------------------------------------------------. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. => Loading Basis Set <=. Name: 6-31G**; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 149 file /Users/github/Git/tmppsi/objdir-ompclang3/stag",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:1291,Energy,Energy,1291,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"---------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C1. Geometry (in Angstrom), charge = -1, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; SC 0.000001136523 -0.000001388204 -0.000001405076 44.955911909000; LI -2.044618384077 -0.224733439504 2.531043817924 7.016004548000; LI 2.527134792823 1.896398821596 0.808962637124 7.016004548000; LI 1.081537578823 -2.973449901804 -0.791231130076 7.016004548000; LI -1.564061269977 1.301793414796 -2.548766321776 7.016004548000. Running in c1 symmetry. Rotational constants: A = 0.08471 B = 0.08471 C = 0.08471 [cm^-1]; Rotational constants: A = 2539.41412 B = 2539.41051 C = 2539.40513 [MHz]; Nuclear repulsion = 46.252677099401765. Charge = -1; Multiplicity = 1; Electrons = 34; Nalpha = 17; Nbeta = 17. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-PCSEG-0; Blend: AUG-PCSEG-0; Number of shells: 37; Number of basis function: 73; Number of Cartesian functions: 76; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 73 73 0 0 0 0; -------------------------------------------------------; Total 73 73 17 17 17 0; -------------------------------------------------------. ==> Integral Setup <==. Using in-core PK algorithm.; Calculation information:; Number of atoms: 5; Number of AO shells: 37; Number of primitives: 64; Number of atomic orbitals: 76; Number of basis functio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:2936,Charge,Charge,2936,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Charge'],['Charge']
Energy Efficiency,"-----------------------------------------; 401: Total 13 13 5 5 5 0; 401: -------------------------------------------------------; 401: ; 401: ==> Integral Setup <==; 401: ; 401: ==> DiskDFJK: Density-Fitted J/K Matrices <==; 401: ; 401: J tasked: Yes; 401: K tasked: Yes; 401: wK tasked: No; 401: OpenMP threads: 1; 401: Integrals threads: 1; 401: Memory (MB): 375; 401: Algorithm: Core; 401: Integral Cache: NONE; 401: Schwarz Cutoff: 1E-12; 401: Fitting Condition: 1E-12; 401: ; 401: => Auxiliary Basis Set <=; 401: ; 401: Basis Set: (6-31G AUX); 401: Blend: CC-PVDZ-JKFIT; 401: Number of shells: 42; 401: Number of basis function: 131; 401: Number of Cartesian functions: 131; 401: Spherical Harmonics?: false; 401: Max angular momentum: 3; 401: ; 401: Minimum eigenvalue in the overlap matrix is 7.3923847722E-02.; 401: Using Symmetric Orthogonalization.; 401: ; 401: SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.; 401: ; 401: ==> Iterations <==; 401: ; 401: Total Energy Delta E RMS |[F,P]|; 401: ; 401: @DF-RHF iter 0: -75.81834558928526 -7.58183e+01 1.82810e-01 ; 401: @DF-RHF iter 1: -75.95433899771382 -1.35993e-01 2.85222e-02 ; 401: @DF-RHF iter 2: -75.97384127453083 -1.95023e-02 1.55795e-02 DIIS; 401: @DF-RHF iter 3: -75.97992825374592 -6.08698e-03 1.86735e-03 DIIS; 401: @DF-RHF iter 4: -75.98012170651255 -1.93453e-04 4.06200e-04 DIIS; 401: @DF-RHF iter 5: -75.98014095901934 -1.92525e-05 8.89529e-05 DIIS; 401: @DF-RHF iter 6: -75.98014186620988 -9.07191e-07 9.85581e-06 DIIS; 401: @DF-RHF iter 7: -75.98014187224302 -6.03315e-09 1.00607e-06 DIIS; 401: @DF-RHF iter 8: -75.98014187231389 -7.08695e-11 1.20203e-07 DIIS; 401: ; 401: ==> Post-Iterations <==; 401: ; 401: Orbital Energies [Eh]; 401: ---------------------; 401: ; 401: Doubly Occupied: ; 401: ; 401: 1A1 -20.568888 2A1 -1.334711 1B2 -0.686874 ; 401: 3A1 -0.554298 1B1 -0.499284 ; 401: ; 401: Virtual: ; 401: ; 401: 4A1 0.193417 2B2 0.287599 3B2 1.041506 ; 401: 5A1 1.130379 2B1 1.164432 6A1 1.22",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:5157,Energy,Energy,5157,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency,"---------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Sat Jan 9 01:41:42 2016. Process ID: 17178; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---. #! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule B {; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); B = geometry(""""""; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; """""",""B""); psi4.IO.set_default_namespace(""B""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:51 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:1830,energy,energy,1830,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['energy'],['energy']
Energy Efficiency,"--------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000 0.000000000000 1.481692970000 4.002603254130. Running in c1 symmetry. Rotational constants: A = ************ B = 0.95920 C = 0.95920 [cm^-1]; Rotational constants: A = ************ B = 28755.98304 C = 28755.98304 [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 2; Nalpha = 1; Nbeta = 1. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-12; Density threshold = 1.00e-12; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: 3-21G; Blend: 3-21G; Number of shells: 4; Number of basis function: 4; Number of Cartesian functions: 4; Spherical Harmonics?: false; Max angular momentum: 0. => Loading Basis Set <=. Name: (3-21G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry HE line 39 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/def2-svp-jkfit.gbs . ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 4 4 0 0 0 0; -------------------------------------------------------; Total 4 4 1 1 1 0; -------------------------------------------------------. ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory [MiB]: 375; Algorithm: Core; Integral Cache: NONE; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:2436,Energy,Energy,2436,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,"----------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000 0.000000000000 1.481692970000 4.002603254130. Running in c1 symmetry. Rotational constants: A = ************ B = 0.95920 C = 0.95920 [cm^-1]; Rotational constants: A = ************ B = 28755.98304 C = 28755.98304 [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 2; Nalpha = 1; Nbeta = 1. ==> Algorithm <==. SCF Algorithm Type is MEM_DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-12; Density threshold = 1.00e-12; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: JUN-CC-PVDZ; Blend: JUN-CC-PVDZ; Number of shells: 6; Number of basis function: 10; Number of Cartesian functions: 10; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (JUN-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry HE line 39 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/def2-qzvpp-jkfit.gbs . Computing basis projection from 3-21G to JUN-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 0 0 0 0; -------------------------------------------------------; Total 10 10 1 1 1 0; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 0.000 GiB; user supplied 0.366 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:6544,Energy,Energy,6544,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,"-------------------------------; A1 12 12 0 0 0 0; A2 2 2 0 0 0 0; B1 4 4 0 0 0 0; B2 7 7 0 0 0 0; -------------------------------------------------------; Total 25 25 5 5 5 0; -------------------------------------------------------. ==> Integral Setup <==. Using in-core PK algorithm.; Calculation information:; Number of atoms: 3; Number of AO shells: 12; Number of primitives: 25; Number of atomic orbitals: 25; Number of basis functions: 25. Integral cutoff 1.00e-12; Number of threads: 1. Performing in-core PK; Using 105950 doubles for integral storage.; We computed 3081 shell quartets total.; Whereas there are 3081 unique shell quartets.; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 375; Schwarz Cutoff: 1E-12. OpenMP threads: 1; Minimum eigenvalue in the overlap matrix is 2.3361254517E-02.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 0: -75.89338120057249 -7.58934e+01 1.07730e-01 ; @RHF iter 1: -75.98060436750765 -8.72232e-02 1.95692e-02 ; @RHF iter 2: -76.00861798186263 -2.80136e-02 1.04925e-02 DIIS; @RHF iter 3: -76.01673061204843 -8.11263e-03 1.56037e-03 DIIS; @RHF iter 4: -76.01722494225463 -4.94330e-04 5.00914e-04 DIIS; @RHF iter 5: -76.01729299826569 -6.80560e-05 1.02319e-04 DIIS; @RHF iter 6: -76.01729647642517 -3.47816e-06 1.57456e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.80",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:4905,Energy,Energy,4905,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"-----------------------------. Psi4 started on: Monday, 29 April 2019 07:36PM. Process ID: 6146; Host: molmod00.ugent.be; PSIDATADIR: /home/toon/miniconda3/envs/p4dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; H; }. set {; scf_type pk; basis ano-rcc; relativistic x2c; reference uhf; }. energy('hf'); --------------------------------------------------------------------------. *** tstart() called on molmod00.ugent.be; *** at Mon Apr 29 19:36:44 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 16 file /home/toon/Downloads/jobs/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 2; Electrons = 1; Nalpha = 1; Nbeta = 0. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: ANO-RCC; Blend: ANO-RCC; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 46; Spherical Harmonics?: false; Max angular momentum: 3. Traceback (most recent call last):; File ""/home/toon/miniconda3/envs/p4dev/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:2691,charge,charge,2691,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['charge'],['charge']
Energy Efficiency,"-------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C1. Geometry (in Angstrom), charge = -1, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; SC 0.000001136523 -0.000001388204 -0.000001405076 44.955911909000; LI -2.044618384077 -0.224733439504 2.531043817924 7.016004548000; LI 2.527134792823 1.896398821596 0.808962637124 7.016004548000; LI 1.081537578823 -2.973449901804 -0.791231130076 7.016004548000; LI -1.564061269977 1.301793414796 -2.548766321776 7.016004548000. Running in c1 symmetry. Rotational constants: A = 0.08471 B = 0.08471 C = 0.08471 [cm^-1]; Rotational constants: A = 2539.41412 B = 2539.41051 C = 2539.40513 [MHz]; Nuclear repulsion = 46.252677099401765. Charge = -1; Multiplicity = 1; Electrons = 34; Nalpha = 17; Nbeta = 17. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-PCSEG-0; Blend: AUG-PCSEG-0; Number of shells: 37; Number of basis function: 73; Number of Cartesian functions: 76; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 73 73 0 0 0 0; -------------------------------------------------------; Total 73 73 17 17 17 0; -------------------------------------------------------. ==> Integral Setup <==. Using in-core PK algorithm.; Calculation information:; Number of atoms: 5; Number of AO shells: 37; Number of primitives: 64; Number of atomic orbitals: 76; Number of basis functions: 73. Integral cutoff 1.00e-12; Number of threads: 1. Performing in-core PK; Using 7298102 doubles for integral storage.; We computed 235045 shell quartets total.; Whereas th",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:3137,Energy,Energy,3137,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"-----------------------; @IRC **** IRC Report ****; @IRC ----------------------------------------------; @IRC Step Energy Change in Energy ; @IRC ----------------------------------------------; @IRC 0 -148.750562902668 -148.750562902668; @IRC 1 -148.750914020614 -0.000351117946; @IRC 2 -148.751921813072 -0.001007792458; @IRC 3 -148.753458618806 -0.001536805734; @IRC 4 -148.755338546954 -0.001879928149; @IRC 5 -148.757353153393 -0.002014606439; @IRC 6 -148.759306859244 -0.001953705851; @IRC 7 -148.761045994807 -0.001739135563; @IRC 8 -148.762474848960 -0.001428854153; @IRC 9 -148.763557315823 -0.001082466863; @IRC 10 -148.764306952777 -0.000749636954; @IRC 11 -148.764771569804 -0.000464617027; @IRC 12 -148.765017199652 -0.000245629848; @IRC 13 -148.765113811017 -0.000096611365; @IRC 14 -148.765113820352 -0.000000009335; @IRC ----------------------------------------------. @IRC ----------------------------------------------; @IRC **** IRC Report ****; @IRC ----------------------------------------------; @IRC Step Energy Change in Energy ; @IRC ----------------------------------------------; @IRC 0 -148.750562902668 -148.750562902668; @IRC 1 -148.750914020808 -0.000351118140; @IRC 2 -148.751921813104 -0.001007792295; @IRC 3 -148.753458618713 -0.001536805609; @IRC 4 -148.755338547051 -0.001879928339; @IRC 5 -148.757353153581 -0.002014606530; @IRC 6 -148.759306859192 -0.001953705611; @IRC 7 -148.761045995024 -0.001739135832; @IRC 8 -148.762474848811 -0.001428853786; @IRC 9 -148.763557315832 -0.001082467021; @IRC 10 -148.764306952658 -0.000749636826; @IRC 11 -148.764771570088 -0.000464617430; @IRC 12 -148.765017199695 -0.000245629606; @IRC 13 -148.765113810604 -0.000096610909; @IRC 14 -148.765124130954 -0.000010320350; @IRC 15 -148.764489158578 0.000634972376; @IRC ----------------------------------------------; ```. **I'm inclined to submit what I have now and marked these bugs as closed.** Opinions? There's still some non-determinism, but disagreement about the last step",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-351195913:5053,Energy,Energy,5053,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-351195913,2,['Energy'],['Energy']
Energy Efficiency,"--------------. *** tstart() called on molmod00.ugent.be; *** at Mon Apr 29 19:36:44 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 16 file /home/toon/Downloads/jobs/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 2; Electrons = 1; Nalpha = 1; Nbeta = 0. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: ANO-RCC; Blend: ANO-RCC; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 46; Spherical Harmonics?: false; Max angular momentum: 3. Traceback (most recent call last):; File ""/home/toon/miniconda3/envs/p4dev/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 2045, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:3117,Charge,Charge,3117,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['Charge'],['Charge']
Energy Efficiency,"-----------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3163,energy,energy,3163,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879,2,['energy'],['energy']
Energy Efficiency,"---------. Memory set to 256.000 MiB by Python script. *** tstart() called on machtiani1; *** at Wed Feb 10 19:35:38 2016. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RKS Reference; 8 Threads, 256 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: Cs. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.872736000000 0.000000000000 -1.246754000000 15.994914619560; H 0.288273000000 0.000000000000 -2.010853000000 1.007825032070; H 0.288273000000 0.000000000000 -0.482655000000 1.007825032070. Running in c1 symmetry. Rotational constants: A = 21.70025 B = 0.41373 C = 0.40599 [cm^-1]; Rotational constants: A = 650557.09010 B = 12403.20112 C = 12171.15193 [MHz]; Nuclear repulsion = 9.147558094236395. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: 6-31G*; Number of shells: 10; Number of basis function: 19; Number of Cartesian functions: 19; Spherical Harmonics?: false; Max angular momentum: 2. ==> DFT Potential <==. => PBE0 Composite Functional <= . PBE0 Hybrid GGA Exchange-Correlation Functional. Adamo et. al., J. Chem. Phys., 110(13), 6158, 1999. Points = 5000; Deriv = 1; GGA = TRUE; Meta = FALSE. X_LRC = FALSE; X_Hybrid = TRUE; X_Alpha = 2.500000E-01; X_Omega = 0.000000E+00; C_LRC = FALSE; C_Hybrid = FALSE; C_Alpha = 0.000000E+00; C_Omega = 0.000000E+00. => Exchange Functionals <=. 0.7500 PBE_X; 0.2500 HF . => Correlation Functionals <=. 1.0000 PBE_C. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = FLAT; Nuclear Scheme =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:3928,Charge,Charge,3928,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Charge'],['Charge']
Energy Efficiency,"------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RKS Reference; 8 Threads, 256 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: Cs. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.872736000000 0.000000000000 -1.246754000000 15.994914619560; H 0.288273000000 0.000000000000 -2.010853000000 1.007825032070; H 0.288273000000 0.000000000000 -0.482655000000 1.007825032070. Running in c1 symmetry. Rotational constants: A = 21.70025 B = 0.41373 C = 0.40599 [cm^-1]; Rotational constants: A = 650557.09010 B = 12403.20112 C = 12171.15193 [MHz]; Nuclear repulsion = 9.147558094236395. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: 6-31G*; Number of shells: 10; Number of basis function: 19; Number of Cartesian functions: 19; Spherical Harmonics?: false; Max angular momentum: 2. ==> DFT Potential <==. => PBE0 Composite Functional <= . PBE0 Hybrid GGA Exchange-Correlation Functional. Adamo et. al., J. Chem. Phys., 110(13), 6158, 1999. Points = 5000; Deriv = 1; GGA = TRUE; Meta = FALSE. X_LRC = FALSE; X_Hybrid = TRUE; X_Alpha = 2.500000E-01; X_Omega = 0.000000E+00; C_LRC = FALSE; C_Hybrid = FALSE; C_Alpha = 0.000000E+00; C_Omega = 0.000000E+00. => Exchange Functionals <=. 0.7500 PBE_X; 0.2500 HF . => Correlation Functionals <=. 1.0000 PBE_C. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = FLAT; Nuclear Scheme = TREUTLER. BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 65565; Total Blocks = 69; Max Points = 4576; Max Functions = 19.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:4126,Energy,Energy,4126,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,"-0.275716 1B1u -0.275716 1B2u -0.275716; 3Ag -0.110068 2B1u -0.075684 2B2u -0.075684; 2B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes; Total time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 second",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7265,Energy,Energy,7265,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,"-01 ; 401: @DF-RHF iter 1: -75.95433899771382 -1.35993e-01 2.85222e-02 ; 401: @DF-RHF iter 2: -75.97384127453083 -1.95023e-02 1.55795e-02 DIIS; 401: @DF-RHF iter 3: -75.97992825374592 -6.08698e-03 1.86735e-03 DIIS; 401: @DF-RHF iter 4: -75.98012170651255 -1.93453e-04 4.06200e-04 DIIS; 401: @DF-RHF iter 5: -75.98014095901934 -1.92525e-05 8.89529e-05 DIIS; 401: @DF-RHF iter 6: -75.98014186620988 -9.07191e-07 9.85581e-06 DIIS; 401: @DF-RHF iter 7: -75.98014187224302 -6.03315e-09 1.00607e-06 DIIS; 401: @DF-RHF iter 8: -75.98014187231389 -7.08695e-11 1.20203e-07 DIIS; 401: ; 401: ==> Post-Iterations <==; 401: ; 401: Orbital Energies [Eh]; 401: ---------------------; 401: ; 401: Doubly Occupied: ; 401: ; 401: 1A1 -20.568888 2A1 -1.334711 1B2 -0.686874 ; 401: 3A1 -0.554298 1B1 -0.499284 ; 401: ; 401: Virtual: ; 401: ; 401: 4A1 0.193417 2B2 0.287599 3B2 1.041506 ; 401: 5A1 1.130379 2B1 1.164432 6A1 1.220999 ; 401: 4B2 1.368964 7A1 1.693510 ; 401: ; 401: Final Occupation by Irrep:; 401: A1 A2 B1 B2 ; 401: DOCC [ 3, 0, 1, 1 ]; 401: ; 401: Energy converged.; 401: ; 401: @DF-RHF Final Energy: -75.98014187231389; 401: ; 401: => Energetics <=; 401: ; 401: Nuclear Repulsion Energy = 8.8014620606294294; 401: One-Electron Energy = -122.2750929709242769; 401: Two-Electron Energy = 37.4934890379809431; 401: Total Energy = -75.9801418723139079; 401: ; 401: ; 401: ; 401: Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; 401: ; 401: Properties computed using the HF density matrix; 401: ; 401: Nuclear Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0191; 401: ; 401: Electronic Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:6298,Energy,Energy,6298,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency,"-02 DIIS | @UHF iter 5: -149.59038744607500 -1.22887e-02 3.98344e-03 DIIS; @UHF iter 4: -149.63524139545771 -3.99715e-01 7.44669e-03 DIIS | @UHF iter 6: -149.59059079586575 -2.03350e-04 4.93283e-04 DIIS; @UHF iter 5: -149.64817974336708 -1.29383e-02 9.02194e-04 DIIS | @UHF iter 7: -149.59059711351466 -6.31765e-06 9.62861e-05 DIIS; @UHF iter 6: -149.64843348113254 -2.53738e-04 1.48299e-04 DIIS | @UHF iter 8: -149.59059723201250 -1.18498e-07 1.30989e-05 DIIS; @UHF iter 7: -149.64844078492737 -7.30379e-06 2.61364e-05 DIIS | @UHF iter 9: -149.59059723617770 -4.16520e-09 2.01100e-06 DIIS; @UHF iter 8: -149.64844097370053 -1.88773e-07 5.78597e-06 DIIS | @UHF iter 10: -149.59059723621087 -3.31681e-11 1.77929e-07 DIIS; @UHF iter 9: -149.64844098588614 -1.21856e-08 1.04113e-06 DIIS | @UHF iter 11: -149.59059723621158 -7.10543e-13 3.00170e-08 DIIS; @UHF iter 10: -149.64844098626756 -3.81419e-10 9.88051e-08 DIIS <; ```. ```; ==> Iterations <== ==> Iterations <==. Total Energy Delta E RMS |[F,P]| | Total Energy Delta E Density RMS. > Forming PK and K matrices.; > @UHF iter 1: -130.87953989478825 -1.78522e+01 0.00000e+00 ; Occupation by irrep: Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 3, 0, 0, 1, 0, 2, 1, 1 ] | DOCC [ 3, 0, 1, 0, 0, 2, 1, 1 ]; SOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ] SOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; | @UHF iter 2: -140.04253152363862 -9.16299e+00 2.20869e-01 DIIS; @UHF iter 1: -130.87953989478828 -1.30880e+02 3.53419e-01 | @UHF iter 3: -149.17635355329770 -9.13382e+00 2.03083e-01 DIIS; @UHF iter 2: -140.04253152363808 -9.16299e+00 1.82082e-01 DIIS | @UHF iter 4: -149.57809876181395 -4.01745e-01 1.46708e-02 DIIS; @UHF iter 3: -149.17635355329767 -9.13382e+00 4.97312e-02 DIIS | @UHF iter 5: -149.59038744607500 -1.22887e-02 3.98344e-03 DIIS; @UHF iter 4: -149.57809876181389 -4.01745e-01 7.26620e-03 DIIS | @UHF iter 6: -149.59059079586575 -2.03350e-04 4.93283e-04 DIIS; @UHF iter 5: -149.59038744607483 -1.22887e-02 8.24815e-04 D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/322#issuecomment-200629470:2125,Energy,Energy,2125,https://psicode.org,https://github.com/psi4/psi4/issues/322#issuecomment-200629470,2,['Energy'],['Energy']
Energy Efficiency,"-03 7.3202E-02 ; @CI 7: 0 -112.366948614338 -1.8529E-03 5.3732E-02 ; @CI 8: 0 -112.372824198774 -5.8756E-03 1.1022E-01 ; @CI 9: 0 -112.387582513115 -1.4758E-02 1.8337E-01 ; @CI 10: 0 -112.410692911567 -2.3110E-02 2.3866E-01 ; @CI 11: 0 -112.444565012608 -3.3872E-02 2.3335E-01 ; @CI 12: 0 -112.483195864884 -3.8631E-02 1.9437E-01 . Warning! CI diagonalization did not fully converge!. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.483195864884152; ```. However, with line 371, I get:; ```; @DF-MCSCF 30: -112.523829840588 4.2633e-14 1.05e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 31: -112.523829840588 -2.8422e-14 2.75e-11 0.00e+00 12 1 TS, DIIS. @DF-MCSCF has converged!. @DF-MCSCF Final Energy: -112.523829840588462. Computing CI Semicanonical Orbitals. ==> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -112.523829840638 -2.5765E+01 4.3475E-11 ; Warning: Norm of correction (root 0) is < 1.0E-13; @CI 1: 0 -112.523829840638 0.0000E+00 2.2840E-10 c. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.523829840637774; ```. I am not sure why reading the old guess leads to very slow convergence. It seems the old vector is not a good guess anymore: the energy from the first sigma build is way off. I actually wonder how the old vector remains to be a good guess during the MCSCF orbital optimization procedure. There is a subtle issue using H0BLOCK for the final CASCI. The MCSCF sets CI max iteration to 12 by default, which is probably not enough to converge a large CI problem. This could be overwritten by the keyword `CI_MAXITER`. However, doing so will also increase the CI iterations during the MCSCF orbital optimization.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:4311,Energy,Energy,4311,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,5,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"-03 DIIS; @RHF iter 11: -2058.44397872764603 -1.69542e-01 5.08460e-03 DIIS; @RHF iter 12: -2058.62669482462434 -1.82716e-01 2.82478e-03 DIIS; @RHF iter 13: -2058.70818041849816 -8.14856e-02 4.77369e-04 DIIS; @RHF iter 14: -2058.71254091207129 -4.36049e-03 2.19998e-04 DIIS; @RHF iter 15: -2058.71333247888015 -7.91567e-04 1.06203e-04 DIIS; @RHF iter 16: -2058.71385812449535 -5.25646e-04 7.34977e-05 DIIS; @RHF iter 17: -2058.71419440133604 -3.36277e-04 6.51060e-05 DIIS; @RHF iter 18: -2058.71480929891686 -6.14898e-04 5.06877e-05 DIIS; @RHF iter 19: -2058.71557380138074 -7.64502e-04 2.56577e-05 DIIS; @RHF iter 20: -2058.71570264423553 -1.28843e-04 1.10771e-05 DIIS; @RHF iter 21: -2058.71571795960836 -1.53154e-05 6.56999e-06 DIIS; @RHF iter 22: -2058.71572010000091 -2.14039e-06 4.19181e-06 DIIS; @RHF iter 23: -2058.71572133933978 -1.23934e-06 2.84272e-06 DIIS; @RHF iter 24: -2058.71572216216646 -8.22827e-07 1.46190e-06 DIIS; @RHF iter 25: -2058.71572235289977 -1.90733e-07 6.37553e-07 DIIS; Energy converged.; ```; After:; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 0: -2027.61462571415450 -2.02761e+03 0.00000e+00 ; @RHF iter 1: -2047.54782267664223 -1.99332e+01 3.19491e-02 ; @RHF iter 2: -1955.99273532148004 9.15551e+01 6.70510e-02 DIIS; @RHF iter 3: -2057.53819937519893 -1.01545e+02 9.02846e-03 DIIS; @RHF iter 4: -2058.54743414181848 -1.00923e+00 4.31560e-03 DIIS; @RHF iter 5: -2058.67427146292175 -1.26837e-01 1.67738e-03 DIIS; @RHF iter 6: -2058.68592550112453 -1.16540e-02 1.96127e-03 DIIS; @RHF iter 7: -2058.71313050125491 -2.72050e-02 2.22231e-04 DIIS; @RHF iter 8: -2058.71421043177043 -1.07993e-03 1.00804e-04 DIIS; @RHF iter 9: -2058.71444510627452 -2.34675e-04 6.14040e-05 DIIS; @RHF iter 10: -2058.71464094420026 -1.95838e-04 5.39836e-05 DIIS; @RHF iter 11: -2058.71503691077487 -3.95967e-04 4.33684e-05 DIIS; @RHF iter 12: -2058.71567587119080 -6.38960e-04 2.33421e-05 DIIS; @RHF iter 13: -2058.71571904189250 -4.31707e-05 1.03865e-05 DIIS; @RHF ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309:3025,Energy,Energy,3025,https://psicode.org,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309,1,['Energy'],['Energy']
Energy Efficiency,-1 ......................... Passed 11.78 sec; Start 40: cc25; 2/411 Test #160: dft-grad-lr1 ..................... Passed 17.60 sec; Start 36: cc21; 3/411 Test #227: mp2-def2 ......................... Passed 416.34 sec; Start 240: ocepa-freq1; 4/411 Test #182: isapt1 ........................... Passed 437.25 sec; Start 35: cc2; 5/411 Test #162: dft-grad-lr3 ..................... Passed 438.96 sec; Start 76: cc7; 6/411 Test #38: cc23 ............................. Passed 670.24 sec; Start 18: cbs-xtpl-func; 7/411 Test #36: cc21 ............................. Passed 681.15 sec; Start 181: fsapt-allterms; 8/411 Test #40: cc25 ............................. Passed 702.11 sec; Start 193: fd-freq-energy-large; 9/411 Test #39: cc24 ............................. Passed 728.49 sec; Start 195: fd-freq-gradient-large; 10/411 Test #195: fd-freq-gradient-large ........... Passed 286.40 sec; Start 278: opt13; 11/411 Test #145: dfomp2-grad3 ..................... Passed 1015.18 sec; Start 11: cbs-delta-energy; 12/411 Test #76: cc7 .............................. Passed 587.31 sec; Start 373: dft-custom-mgga; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 1029.41 sec; Start 320: sapt6; 14/411 Test #45: cc3 .............................. Passed 1036.97 sec; Start 111: dcft5; 15/411 Test #240: ocepa-freq1 ...................... Passed 625.43 sec; Start 41: cc26; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1061.37 sec; Start 155: dfscf-bz2; 17/411 Test #35: cc2 .............................. Passed 641.50 sec; Start 42: cc27; 18/411 Test #300: pywrap-all ....................... Passed 1079.44 sec; Start 183: isapt2; 19/411 Test #103: dcft-grad1 ....................... Passed 1109.73 sec; Start 112: dcft6; 20/411 Test #110: dcft4 ............................ Passed 1118.85 sec; Start 347: sapt-dft2; 21/411 Test #11: cbs-delta-energy ................. Passed 162.34 sec; Start 305: pywrap-checkrun-rohf; 22/411 Test #320: sapt6 ............................ Passed 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:1477,energy,energy,1477,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,"-1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP..........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:28 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: O",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12588,Energy,Energy,12588,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,-3.9688426840 0.0000610183 0.0009217340 25030; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; **********,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3213,energy,energy,3213,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,"-4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE...........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:27 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: O",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7554,Energy,Energy,7554,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"-> 4 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 5 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 6 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 7 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 8 A state : 0.5127312 (a.u.), 13.9521243 (eV); >; > The Q-Chem energies agree with my standalone code. For N2 with STO-3G; > basis I simply get zero excitation energies with Psi4:; >; > ==> ADC(2) Computation <==; >; > -> 1 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.3864160 (a.u.), 10.5149136 (eV); > ┆ ┆ Occ Vir Coefficient; > ---------------------------------------------; >; > Converged in 2 iteration.; > Squared norm of the S component: 1.0000000; > The S vector is rotated up to 90.000 (deg.); > #WARNING: Strongly rotated from the CIS state!; >; > -> 2 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.4145495 (a.u.), 11.2804653 (eV); > ┆ ┆ Occ Vir Coefficient; > ---------------------------------------------; >; > Converged in 2 iteration.; > Squared norm of the S component: 1.0000000; > The S vector is rotated up to 90.000 (deg.); > #WARNING: Strongly rotated from the CIS state!; >; > Any idea about what's going on?; >; > My input files for cc-pvdz:; >; > *Psi4:*; > molecule {; > 0 1; > N 0.000000 0.000000 0.000000; > N 0.000000 0.000000 1.200000; > symmetry c1; > }; >; > set {; > basis cc-pvdz; > guess sad; > reference rhf; > scf_type pk; > roots_per_irrep [8]; > }; >; > set_num_threads(12); > energy('adc'); >; > *Q-Chem:*; > $molecule; > 0 1; > N 0.0 0.0 0.0; > N 0.0 0.0 1.2; > $end; >; > $rem; > jobtype sp; > method adc(2); > basis cc-pvdz; > mem_total 4000; > mem_static 100; > cc_symmetry false; > ee_singlets 8; > $end; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1033>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdjKQYncrwlLplw589M9kgCSV5iq_ks5t6DMSgaJpZM4UdQ8H>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918:2606,energy,energy,2606,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918,2,['energy'],['energy']
Energy Efficiency,"-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.00000020668995 0.00000049737307; @Atomic UHF Final Energy for atom XE: -7299.97190876705281; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -7255.00101065488798 -7.25500e+03 0.00000e+00 ; @DF-RHF iter 1: -7259.15010997926129 -4.14910e+00 1.35868e-02 DIIS; @DF-RHF iter 2: -7259.17972994142656 -2.96200e-02 3.74973e-03 DIIS; @DF-RHF iter 3: -7259.18676197489549 -7.03203e-03 1.53495e-03 DIIS; @DF-RHF iter 4: -7259.18756584481798 -8.03870e-04 4.30106e-05 DIIS; @DF-RHF iter 5: -7259.18756735798888 -1.51317e-06 2.08951e-06 DIIS; @DF-RHF iter 6: -7259.18756736888918 -1.09003e-08 3.49470e-07 DIIS; Energy converged.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:2126,energy,energy,2126,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,7,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ........................ Passed 1.13 sec; Start 222: mints-helper; 376/413 Test #132: dfmp2-2 .......................... Passed 1.70 sec; Start 356: tu2-ch2-energy; 377/413 Test #329: scf-guess-read1 .................. Passed 1.55 sec; Start 8: castup1; 378/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 1.46 sec; Start 332: scf-bs; 379/413 Test #384: psi4numpy-rhf .................... Passed 0.97 sec; Start 216: mints3; 380/413 Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.26 sec; Start 212: mcscf2; 383/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.63 sec; Start 213: mcscf3; 384/413 Test #356: tu2-ch2-energy ................... Passed 0.86 sec; Start 218: mints5; 385/413 Test #330: scf-upcast-custom-basis .......... Passed 1.54 sec; Start 241: numpy-array-interface; 386/413 Test #351: sapt-sf1 ......................... Passed 1.06 sec; Start 217: mints4; 387/413 Test #222: mints-helper ..................... Passed 1.14 sec; Start 366: options1; 388/413 Test #336: scf3 ............................. Passed 0.87 sec; Start 214: mints1; 389/413 Test #332: scf-bs ........................... Passed 1.06 sec; Start 211: mcscf1; 390/413 Test #216: mints3 ........................... Passed 1.11 sec; Start 177: docs-dft; 391/413 Test #223: mints9 ........................... Passed 2.13 sec; Start 162: dft-grac; 392/413 Test #347: dfep2-2 .......................... Passed 2.02 sec; Start 311: pywrap-molecule; 393/413 Test #8: castup1 .......................... Passed 1.50 sec; Start 310: pywrap-db3; 394/413 Test #213: mcscf3 ........................... Passed 0.90 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:36097,energy,energy,36097,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,-ch2-energy; 365/412 Test #391: python-mints9 .................... Passed 24.17 sec; Start 381: psi4numpy-cphf; 366/412 Test #189: fci-tdm .......................... Passed 23.11 sec; Start 401: json-schema-1-ghost; 367/412 Test #211: mcscf2 ........................... Passed 23.47 sec; Start 384: psi4numpy-rhf-gradient; 368/412 Test #350: sapt-sf1 ......................... Passed 22.50 sec; Start 397: python-memdfjk; 369/412 Test #396: python-mints13 ................... Passed 23.34 sec; Start 215: mints3; 370/412 Test #404: json-schema-1-gradient ........... Passed 23.57 sec; Start 379: mints12; 371/412 Test #407: skeletonaointegrals .............. Passed 22.71 sec; Start 405: json-schema-1-properties; 372/412 Test #299: pubchem2 ......................... Passed 22.82 sec; Start 335: scf3; 373/412 Test #331: scf-bs ........................... Passed 22.57 sec; Start 388: python-energy; 374/412 Test #223: mints10 .......................... Passed 22.74 sec; Start 310: pywrap-molecule; 375/412 Test #354: tu1-h2o-energy ................... Passed 23.10 sec; Start 383: psi4numpy-rhf; 376/412 Test #103: decontract ....................... Passed 23.29 sec; Start 210: mcscf1; 377/412 Test #411: skeletonsointegrals .............. Passed 22.95 sec; Start 410: skeletonscf; 378/412 Test #381: psi4numpy-cphf ................... Passed 23.03 sec; Start 212: mcscf3; 379/412 Test #355: tu2-ch2-energy ................... Passed 23.46 sec; Start 217: mints5; 380/412 Test #221: mints-helper ..................... Passed 24.04 sec; Start 240: numpy-array-interface; 381/412 Test #401: json-schema-1-ghost .............. Passed 23.42 sec; Start 176: docs-dft; 382/412 Test #397: python-memdfjk ................... Passed 23.80 sec; Start 213: mints1; 383/412 Test #215: mints3 ........................... Passed 23.55 sec; Start 209: matrix1; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 25.10 sec; Start 175: docs-bases; 385/412 Test #379: mints12 .......................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:35446,energy,energy,35446,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,-checkrun-rhf .............. Passed 379.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.90 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 1.11 sec; Start 397: json-v11-energy; 390/411 Test #392: python-cc54 ...................... Passed 8.91 sec; Start 398: json-v11-gradient; 391/411 Test #393: python-3-index-transforms ........ Passed 9.59 sec; Start 399: json-schema-1-energy; 392/411 Test #397: json-v11-energy .................. Passed 4.11 sec; Start 400: json-schema-1-ghost; 393/411 Test #398: json-v11-gradient ................ Passed 2.70 sec; Start 401: json-schema-1-orient; 394/411 Test #400: json-schema-1-ghost .............. Passed 1.16 sec; Start 402: json-schema-1-throws; 395/411 Test #402: json-schema-1-throws ............. Passed 0.55 sec; Start 403: json-schema-1-gradient; 396/411 Test #401: json-schema-1-orient ............. Passed 2.34 sec; Start 404: json-schema-1-properties; 397/411 Test #399: json-schema-1-energy ............. Passed 2.80 sec; Start 405: skeleton; 398/411 Test #403: json-schema-1-gradient ........... Passed 1.54 sec; Start 406: skeletonaointegrals; 399/411 Test #404: json-schema-1-properties ......... Passed 1.27 sec; Start 407: skeletondfmp2; 400/411 Test #405: skeleton ......................... Passed 1.30 sec; Start 408: skeletonmointegrals; 401/411 Test #406: skeletonaointegrals .............. Passed 1.33 sec; Start 409: skeletonscf; 402/411 Test #407: skeletondfmp2 .................... Passed 1.53 sec; Start 410: skeletonsointegrals; 403/411 Test #409: skeletonscf ...................... Passed 0.75 sec; Start 411: skeletonwavefunction; 404/411 Test #408: skeletonmointegrals .............. Passed 1.51 sec; 405/411 Test #411: skeletonwavefunction ............. Passed 1.76 sec; 406/411 Test #410: skeletonsointegrals .............. Passed 1.81 sec; 407/411 Test #371: dft-custom-dhdf .................. Passed 84.13 sec; 408/411 Test #37,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:37165,energy,energy,37165,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency,-chiral; 364/412 Test #377: pywrap-align ..................... Passed 6.69 sec; Start 379: mints12; 365/412 Test #378: pywrap-align-chiral .............. Passed 6.48 sec; Start 380: cc-module; 366/412 Test #379: mints12 .......................... Passed 1.40 sec; Start 381: psi4numpy-cphf; 367/412 Test #381: psi4numpy-cphf ................... Passed 1.82 sec; Start 382: psi4numpy-dfmp2; 368/412 Test #382: psi4numpy-dfmp2 .................. Passed 2.18 sec; Start 383: psi4numpy-rhf; 369/412 Test #383: psi4numpy-rhf .................... Passed 1.00 sec; Start 384: psi4numpy-rhf-gradient; 370/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.97 sec; Start 385: psi4numpy-rhf-hessian; 371/412 Test #228: mp2-def2 ......................... Passed 433.82 sec; Start 386: psi4numpy-fci; 372/412 Test #385: psi4numpy-rhf-hessian ............ Passed 3.24 sec; Start 387: cookbook-rohf-orb-rot; 373/412 Test #376: pywrap-bfs ....................... Passed 26.37 sec; Start 388: python-energy; 374/412 Test #388: python-energy .................... Passed 1.62 sec; Start 389: python-curve; 375/412 Test #386: psi4numpy-fci .................... Passed 9.39 sec; Start 390: python-pubchem; 376/412 Test #375: dft-custom-gga ................... Passed 34.06 sec; Start 391: python-mints9; 377/412 Test #389: python-curve ..................... Passed 4.70 sec; Start 392: python-mints2; 378/412 Test #391: python-mints9 .................... Passed 2.13 sec; Start 393: python-cc54; 379/412 Test #392: python-mints2 .................... Passed 3.94 sec; Start 394: python-3-index-transforms; 380/412 Test #321: sapt6 ............................ Passed 171.44 sec; Start 396: python-mints13; 381/412 Test #396: python-mints13 ................... Passed 1.98 sec; Start 397: python-memdfjk; 382/412 Test #397: python-memdfjk ................... Passed 1.74 sec; Start 398: json-v11-energy; 383/412 Test #394: python-3-index-transforms ........ Passed 12.36 sec; Start 399: json-v11-gradient; 384/412 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:34986,energy,energy,34986,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,2,['energy'],['energy']
Energy Efficiency,-chiral; 371/411 Test #377: pywrap-align-chiral .............. Passed 2.91 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.27 sec; Start 379: cc-module; 373/411 Test #371: dft-custom-dhdf .................. Passed 89.27 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.33 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.04 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.48 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #384: psi4numpy-rhf-hessian ............ Passed 4.83 sec; Start 385: psi4numpy-fci; 379/411 Test #385: psi4numpy-fci .................... Passed 7.57 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #305: pywrap-checkrun-rohf ............. Passed 589.53 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 0.86 sec; Start 388: python-curve; 382/411 Test #388: python-curve ..................... Passed 4.75 sec; Start 389: python-pubchem; 383/411 Test #359: tu6-cp-ne2 ....................... Passed 240.77 sec; Start 390: python-mints9; 384/411 Test #390: python-mints9 .................... Passed 1.89 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.96 sec; Start 392: python-cc54; 386/411 Test #389: python-pubchem ................... Passed 50.14 sec; Start 393: python-3-index-transforms; 387/411 Test #373: dft-custom-mgga .................. Passed 175.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.81 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 0.95 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.53 sec; Start 398: json-v11-gradient; 391/411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:35504,energy,energy,35504,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,2,['energy'],['energy']
Energy Efficiency,-chiral; 371/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.18 sec; Start 379: cc-module; 373/411 Test #371: dft-custom-dhdf .................. Passed 83.89 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.31 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.16 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.89 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.70 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.24 sec; Start 385: psi4numpy-fci; 379/411 Test #385: psi4numpy-fci .................... Passed 7.04 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #305: pywrap-checkrun-rohf ............. Passed 586.65 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 1.28 sec; Start 388: python-curve; 382/411 Test #388: python-curve ..................... Passed 3.62 sec; Start 389: python-pubchem; 383/411 Test #359: tu6-cp-ne2 ....................... Passed 242.76 sec; Start 390: python-mints9; 384/411 Test #390: python-mints9 .................... Passed 1.79 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.86 sec; Start 392: python-cc54; 386/411 Test #373: dft-custom-mgga .................. Passed 171.61 sec; Start 393: python-3-index-transforms; 387/411 Test #393: python-3-index-transforms ........ Passed 9.10 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.85 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 1.02 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.88 sec; Start 398: json-v11-gradient; 391/411 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:35489,energy,energy,35489,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,2,['energy'],['energy']
Energy Efficiency,-custom-basis .......... Passed 1.66 sec; Start 94: cisd-h2o+-1; 340/404 Test #353: tu1-h2o-energy ................... Passed 1.19 sec; Start 327: scf-guess-read1; 341/404 Test #116: ao-dfcasscf-sp ................... Passed 1.73 sec; Start 99: cisd-sp-2; 342/404 Test #8: castup1 .......................... Passed 1.29 sec; Start 95: cisd-h2o+-2; 343/404 Test #314: sad1 ............................. Passed 2.13 sec; Start 130: dfmp2-2; 344/404 Test #203: frac ............................. Passed 1.81 sec; Start 345: dfep2-2; 345/404 Test #93: cisd-h2o+-0 ...................... Passed 2.21 sec; Start 96: cisd-h2o-clpse; 346/404 Test #118: dfcasscf-fzc-sp .................. Passed 1.34 sec; Start 231: mp2p5-grad1; 347/404 Test #94: cisd-h2o+-1 ...................... Passed 1.65 sec; Start 356: scf-response1; 348/404 Test #327: scf-guess-read1 .................. Passed 1.34 sec; Start 362: x2c3; 349/404 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 354: tu2-ch2-energy; 350/404 Test #99: cisd-sp-2 ........................ Passed 1.72 sec; Start 187: fci-h2o-fzcv; 351/404 Test #95: cisd-h2o+-2 ...................... Passed 1.68 sec; Start 228: mp2-grad1; 352/404 Test #96: cisd-h2o-clpse ................... Passed 1.12 sec; Start 330: scf-bs; 353/404 Test #345: dfep2-2 .......................... Passed 1.68 sec; Start 361: x2c2; 354/404 Test #231: mp2p5-grad1 ...................... Passed 1.32 sec; Start 403: json-schema-1-gradient; 355/404 Test #354: tu2-ch2-energy ................... Passed 0.81 sec; Start 221: mints9; 356/404 Test #356: scf-response1 .................... Passed 1.27 sec; Start 390: python-mints9; 357/404 Test #330: scf-bs ........................... Passed 0.89 sec; Start 395: python-mints13; 358/404 Test #362: x2c3 ............................. Passed 1.59 sec; Start 311: rasci-h2o; 359/404 Test #228: mp2-grad1 ........................ Passed 1.22 sec; Start 222: mints10; 360/404 Test #403: json-schema-1-gradient ........... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:32490,energy,energy,32490,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,-energy .................. Passed 10.06 sec; Start 343: soscf-ref; 252/413 Test #370: scf-freq1 ........................ Passed 9.29 sec; Start 134: dfmp2-4; 253/413 Test #287: props2 ........................... Passed 12.06 sec; Start 89: cepa2; 254/413 Test #159: dfrasscf-sp ...................... Passed 6.55 sec; Start 163: dft-ghost; 255/413 Test #359: tu4-h2o-freq ..................... Passed 9.86 sec; Start 297: psithon1; 256/413 Test #367: cubeprop-esp ..................... Passed 11.53 sec; Start 3: casscf-fzc-sp; 257/413 Test #219: mints6 ........................... Passed 12.37 sec; Start 9: castup2; 258/413 Test #371: dft-jk ........................... Passed 9.89 sec; Start 369: scf-hess1; 259/413 Test #272: opt4 ............................. Passed 8.00 sec; Start 200: freq-isotope2; 260/413 Test #99: cisd-sp .......................... Passed 7.83 sec; Start 390: python-curve; 261/413 Test #374: dft-custom-hybrid ................ Passed 9.30 sec; Start 401: json-schema-1-energy; 262/413 Test #134: dfmp2-4 .......................... Passed 5.04 sec; Start 399: json-v11-energy; 263/413 Test #270: opt2-fd .......................... Passed 8.68 sec; Start 143: dfomp2-3; 264/413 Test #89: cepa2 ............................ Passed 3.44 sec; Start 15: cbs-xtpl-freq; 265/413 Test #343: soscf-ref ........................ Passed 5.84 sec; Start 182: fsapt-terms; 266/413 Test #337: scf4 ............................. Passed 7.11 sec; Start 125: dfccsd1; 267/413 Test #390: python-curve ..................... Passed 2.27 sec; Start 372: scf-coverage; 268/413 Test #3: casscf-fzc-sp .................... Passed 4.38 sec; Start 137: dfmp2-grad2; 269/413 Test #297: psithon1 ......................... Passed 4.83 sec; Start 187: fci-h2o; 270/413 Test #401: json-schema-1-energy ............. Passed 2.54 sec; Start 4: casscf-semi; 271/413 Test #399: json-v11-energy .................. Passed 2.20 sec; Start 257: omp2p5-grad1; 272/413 Test #200: freq-isotope2 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:24522,energy,energy,24522,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,-energy .................... Passed 0.72 sec; Start 352: stability2; 387/411 Test #378: mints12 .......................... Passed 1.15 sec; Start 188: fci-tdm; 388/411 Test #396: python-memdfjk ................... Passed 0.88 sec; Start 354: tu2-ch2-energy; 389/411 Test #214: mints3 ........................... Passed 0.99 sec; Start 382: psi4numpy-rhf; 390/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 308: pywrap-db3; 391/411 Test #349: sapt-sf1 ......................... Passed 1.10 sec; Start 334: scf3; 392/411 Test #353: tu1-h2o-energy ................... Passed 1.26 sec; Start 209: mcscf1; 393/411 Test #352: stability2 ....................... Passed 1.16 sec; Start 211: mcscf3; 394/411 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 409: skeletonscf; 395/411 Test #308: pywrap-db3 ....................... Passed 0.70 sec; Start 175: docs-dft; 396/411 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 397/411 Test #354: tu2-ch2-energy ................... Passed 0.86 sec; Start 216: mints5; 398/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 208: matrix1; 399/411 Test #209: mcscf1 ........................... Passed 0.69 sec; Start 212: mints1; 400/411 Test #211: mcscf3 ........................... Passed 0.67 sec; Start 364: options1; 401/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 402: json-schema-1-throws; 402/411 Test #175: docs-dft ......................... Passed 0.59 sec; Start 215: mints4; 403/411 Test #174: docs-bases ....................... Passed 0.53 sec; Start 87: cepa1; 404/411 Test #216: mints5 ........................... Passed 0.58 sec; 405/411 Test #208: matrix1 .......................... Passed 0.54 sec; 406/411 Test #212: mints1 ........................... Passed 0.55 sec; 407/411 Test #364: options1 ......................... Passed 0.56 sec; 408/411 Test #402: json-schema-1-throws ............. Passed 0.55 sec; 40,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:37126,energy,energy,37126,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,-energy; 367/412 Test #409: skeletonmointegrals .............. Passed 4.13 sec; Start 103: decontract; 368/412 Test #362: x2c2 ............................. Passed 4.28 sec; Start 411: skeletonsointegrals; 369/412 Test #353: stability2 ....................... Passed 3.95 sec; Start 221: mints-helper; 370/412 Test #299: pubchem2 ......................... Passed 1.69 sec; Start 355: tu2-ch2-energy; 371/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 3.29 sec; Start 215: mints3; 372/412 Test #189: fci-tdm .......................... Passed 3.92 sec; Start 384: psi4numpy-rhf-gradient; 373/412 Test #97: cisd-h2o-clpse ................... Passed 5.09 sec; Start 381: psi4numpy-cphf; 374/412 Test #331: scf-bs ........................... Passed 2.43 sec; Start 405: json-schema-1-properties; 375/412 Test #222: mints9 ........................... Passed 2.16 sec; Start 399: json-v11-gradient; 376/412 Test #404: json-schema-1-gradient ........... Passed 2.15 sec; Start 397: python-memdfjk; 377/412 Test #354: tu1-h2o-energy ................... Passed 1.49 sec; Start 401: json-schema-1-ghost; 378/412 Test #223: mints10 .......................... Passed 1.74 sec; Start 379: mints12; 379/412 Test #103: decontract ....................... Passed 1.22 sec; Start 310: pywrap-molecule; 380/412 Test #396: python-mints13 ................... Passed 2.03 sec; Start 388: python-energy; 381/412 Test #215: mints3 ........................... Passed 1.10 sec; Start 335: scf3; 382/412 Test #411: skeletonsointegrals .............. Passed 1.45 sec; Start 212: mcscf3; 383/412 Test #355: tu2-ch2-energy ................... Passed 1.26 sec; Start 217: mints5; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.45 sec; Start 210: mcscf1; 385/412 Test #405: json-schema-1-properties ......... Passed 1.24 sec; Start 383: psi4numpy-rhf; 386/412 Test #221: mints-helper ..................... Passed 1.60 sec; Start 240: numpy-array-interface; 387/412 Test #399: json-v11-gradient .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:35503,energy,energy,35503,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,-freq-energy; 182/401 Test #49: cc33 ............................. Passed 34.26 sec; Start 62: cc45; 183/401 Test #193: freq-isotope1 .................... Passed 19.32 sec; Start 53: cc37; 184/401 Test #134: dfmp2-grad2 ...................... Passed 12.50 sec; Start 56: cc4; 185/401 Test #9: castup2 .......................... Passed 13.85 sec; Start 364: dft-jk; 186/401 Test #89: cepa1 ............................ Passed 26.08 sec; Start 203: gibbs; 187/401 Test #50: cc34 ............................. Passed 26.89 sec; Start 76: cc8; 188/401 Test #262: opt1-fd .......................... Passed 12.30 sec; Start 91: ci-multi; 189/401 Test #102: dcft-grad1 ....................... Passed 884.24 sec; Start 214: mints8; 190/401 Test #337: soscf-ref ........................ Passed 10.01 sec; Start 83: cdomp2-2; 191/401 Test #99: ci-property ...................... Passed 29.65 sec; Start 167: dft2; 192/401 Test #364: dft-jk ........................... Passed 6.91 sec; Start 389: python-cc54; 193/401 Test #188: fd-freq-energy ................... Passed 10.27 sec; Start 342: sapt-dft1; 194/401 Test #127: dfccsdat1 ........................ Passed 20.44 sec; Start 157: dft-ghost; 195/401 Test #16: cbs-xtpl-gradient ................ Passed 31.05 sec; Start 32: cc17; 196/401 Test #167: dft2 ............................. Passed 4.99 sec; Start 197: fnocc3; 197/401 Test #214: mints8 ........................... Passed 6.50 sec; Start 128: dfmp2-1; 198/401 Test #165: dft-vv10 ......................... Passed 14.72 sec; Start 172: extern1; 199/401 Test #157: dft-ghost ........................ Passed 5.75 sec; Start 3: casscf-fzc-sp; 200/401 Test #52: cc36 ............................. Passed 19.60 sec; Start 97: cisd-sp; 201/401 Test #65: cc49 ............................. Passed 49.90 sec; Start 382: psi4numpy-fci; 202/401 Test #288: psimrcc-fd-freq2 ................. Passed 45.93 sec; Start 325: scf-guess-read2; 203/401 Test #30: cc15 ............................. Passed 88.99 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:18437,energy,energy,18437,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,-grad1; 324/412 Test #295: psimrcc-sp1 ...................... Passed 22.23 sec; Start 400: json-schema-1-energy; 325/412 Test #204: frac ............................. Passed 17.16 sec; Start 344: stability1; 326/412 Test #234: mp3-grad1 ........................ Passed 17.12 sec; Start 378: pywrap-align-chiral; 327/412 Test #229: mp2-grad1 ........................ Passed 16.69 sec; Start 345: dfep2-1; 328/412 Test #121: dfccd1 ........................... Passed 16.56 sec; Start 389: python-curve; 329/412 Test #235: mp3-grad2 ........................ Passed 16.33 sec; Start 236: mp2-property; 330/412 Test #232: mp2p5-grad1 ...................... Passed 17.17 sec; Start 352: dft-reference; 331/412 Test #400: json-schema-1-energy ............. Passed 17.10 sec; Start 385: psi4numpy-rhf-hessian; 332/412 Test #344: stability1 ....................... Passed 17.94 sec; Start 119: dfcasscf-fzc-sp; 333/412 Test #345: dfep2-1 .......................... Passed 18.02 sec; Start 398: json-v11-energy; 334/412 Test #389: python-curve ..................... Passed 17.89 sec; Start 258: omp3-1; 335/412 Test #236: mp2-property ..................... Passed 20.28 sec; Start 364: zaptn-nh2; 336/412 Test #352: dft-reference .................... Passed 24.29 sec; Start 97: cisd-h2o-clpse; 337/412 Test #385: psi4numpy-rhf-hessian ............ Passed 24.93 sec; Start 328: scf-guess-read1; 338/412 Test #119: dfcasscf-fzc-sp .................. Passed 26.03 sec; Start 214: mints2; 339/412 Test #398: json-v11-energy .................. Passed 31.34 sec; Start 392: python-mints2; 340/412 Test #378: pywrap-align-chiral .............. Passed 53.89 sec; Start 315: sad1; 341/412 Test #258: omp3-1 ........................... Passed 34.04 sec; Start 333: scf-occ; 342/412 Test #364: zaptn-nh2 ........................ Passed 34.64 sec; Start 312: rasci-h2o; 343/412 Test #97: cisd-h2o-clpse ................... Passed 32.86 sec; Start 346: dfep2-2; 344/412 Test #328: scf-guess-read1 .................. Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:31185,energy,energy,31185,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,-grad4 ...................... Passed 4.54 sec; Start 86: cepa0-grad2; 306/411 Test #50: cc34 ............................. Passed 5.92 sec; Start 191: fcidump; 307/411 Test #122: dfccd-grad1 ...................... Passed 4.34 sec; Start 363: zaptn-nh2; 308/411 Test #127: dfccsdt1 ......................... Passed 2.37 sec; Start 232: mp2p5-grad2; 309/411 Test #345: dfep2-2 .......................... Passed 1.82 sec; Start 397: json-v11-energy; 310/411 Test #221: mints9 ........................... Passed 1.93 sec; Start 199: fnocc1; 311/411 Test #83: cdomp2-1 ......................... Passed 2.27 sec; Start 4: casscf-semi; 312/411 Test #139: dfomp2-1 ......................... Passed 2.64 sec; Start 395: python-mints13; 313/411 Test #363: zaptn-nh2 ........................ Passed 1.87 sec; Start 271: opt5; 314/411 Test #86: cepa0-grad2 ...................... Passed 3.41 sec; Start 234: mp3-grad2; 315/411 Test #395: python-mints13 ................... Passed 1.71 sec; Start 361: x2c2; 316/411 Test #397: json-v11-energy .................. Passed 2.95 sec; Start 362: x2c3; 317/411 Test #191: fcidump .......................... Passed 3.66 sec; Start 223: molden1; 318/411 Test #232: mp2p5-grad2 ...................... Passed 3.51 sec; Start 119: dfcasscf-sp; 319/411 Test #271: opt5 ............................. Passed 3.06 sec; Start 399: json-schema-1-energy; 320/411 Test #361: x2c2 ............................. Passed 1.96 sec; Start 224: molden2; 321/411 Test #362: x2c3 ............................. Passed 2.32 sec; Start 130: dfmp2-2; 322/411 Test #4: casscf-semi ...................... Passed 4.96 sec; Start 228: mp2-grad1; 323/411 Test #234: mp3-grad2 ........................ Passed 3.56 sec; Start 136: dfmp2-grad3; 324/411 Test #119: dfcasscf-sp ...................... Passed 4.30 sec; Start 118: dfcasscf-fzc-sp; 325/411 Test #399: json-schema-1-energy ............. Passed 3.59 sec; Start 262: omp3-grad1; 326/411 Test #130: dfmp2-2 .......................... Passed 2.96 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:29521,energy,energy,29521,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,-gradient ...................... Passed 40.43 sec; Start 159: dft-freq; 93/401 Test #338: soscf-dft ........................ Passed 24.29 sec; Start 77: cc8a; 94/401 Test #45: cc3 .............................. Passed 739.07 sec; Start 169: dft-omega; 95/401 Test #158: dft-grad-meta .................... Passed 20.41 sec; Start 141: dfomp2-4; 96/401 Test #152: dfomp2p5-grad2 ................... Passed 98.47 sec; Start 103: dcft-grad2; 97/401 Test #162: dft-psivar ....................... Passed 20.43 sec; Start 244: omp2-3; 98/401 Test #263: opt2 ............................. Passed 20.54 sec; Start 130: dfmp2-3; 99/401 Test #185: fci-tdm-2 ........................ Passed 19.94 sec; Start 147: dfomp3-grad1; 100/401 Test #278: opt-irc-3 ........................ Passed 27.50 sec; Start 190: fd-freq-gradient; 101/401 Test #34: cc19 ............................. Passed 58.89 sec; Start 66: cc4a; 102/401 Test #159: dft-freq ......................... Passed 21.58 sec; Start 104: dcft-grad3; 103/401 Test #11: cbs-delta-energy ................. Passed 237.06 sec; Start 295: pywrap-alias; 104/401 Test #252: omp2p5-grad2 ..................... Passed 79.50 sec; Start 268: opt6; 105/401 Test #35: cc2 .............................. Passed 456.44 sec; Start 173: extern2; 106/401 Test #38: cc23 ............................. Passed 464.64 sec; Start 81: cc9a; 107/401 Test #226: mp2-module ....................... Passed 116.12 sec; Start 137: dfmp2-grad5; 108/401 Test #169: dft-omega ........................ Passed 21.02 sec; Start 79: cc8c; 109/401 Test #130: dfmp2-3 .......................... Passed 18.27 sec; Start 63: cc47; 110/401 Test #248: omp2-grad2 ....................... Passed 39.14 sec; Start 72: cc55; 111/401 Test #104: dcft-grad3 ....................... Passed 11.82 sec; Start 292: psithon2; 112/401 Test #244: omp2-3 ........................... Passed 25.17 sec; Start 238: ocepa-grad2; 113/401 Test #241: ocepa3 ........................... Passed 39.10 sec; Start 273: opt1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:10178,energy,energy,10178,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,-omega ........................ Passed 28.98 sec; Start 390: python-curve; 193/413 Test #203: fnocc3 ........................... Passed 33.21 sec; Start 398: python-memdfjk; 194/413 Test #398: python-memdfjk ................... Passed 1.05 sec; Start 73: cc54; 195/413 Test #328: scf-ecp .......................... Passed 32.66 sec; Start 174: dft3; 196/413 Test #390: python-curve ..................... Passed 4.05 sec; Start 179: extern2; 197/413 Test #256: omp2p5-2 ......................... Passed 37.38 sec; Start 360: tu5-sapt; 198/413 Test #201: fnocc1 ........................... Passed 37.85 sec; Start 260: omp3-2; 199/413 Test #240: nbody-intermediates .............. Passed 25.85 sec; Start 191: fci-tdm-2; 200/413 Test #145: dfomp2-grad1 ..................... Passed 26.84 sec; Start 348: sapt-dft1; 201/413 Test #24: cc12 ............................. Passed 50.83 sec; Start 249: omp2-2; 202/413 Test #394: python-cc54 ...................... Passed 56.05 sec; Start 401: json-schema-1-energy; 203/413 Test #174: dft3 ............................. Passed 25.44 sec; Start 324: sapt-dft-lrc; 204/413 Test #360: tu5-sapt ......................... Passed 20.54 sec; Start 243: ocepa-grad1; 205/413 Test #401: json-schema-1-energy ............. Passed 5.82 sec; Start 90: cepa3; 206/413 Test #179: extern2 .......................... Passed 31.66 sec; Start 389: python-energy; 207/413 Test #389: python-energy .................... Passed 1.70 sec; Start 166: dft-grad1; 208/413 Test #191: fci-tdm-2 ........................ Passed 20.28 sec; Start 292: psimrcc-ccsd_t-4; 209/413 Test #72: cc53 ............................. Passed 85.96 sec; Start 141: dfomp2-1; 210/413 Test #324: sapt-dft-lrc ..................... Passed 19.90 sec; Start 403: json-schema-1-orient; 211/413 Test #73: cc54 ............................. Passed 48.53 sec; Start 209: gibbs; 212/413 Test #348: sapt-dft1 ........................ Passed 24.61 sec; Start 167: dft-grad2; 213/413 Test #260: omp3-2 .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:19103,energy,energy,19103,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,-orb-rot; 372/411 Test #385: psi4numpy-fci .................... Passed 4.41 sec; Start 387: python-energy; 373/411 Test #387: python-energy .................... Passed 1.33 sec; Start 388: python-curve; 374/411 Test #240: ocepa-freq1 ...................... Passed 431.50 sec; Start 389: python-pubchem; 375/411 Test #388: python-curve ..................... Passed 3.42 sec; Start 390: python-mints9; 376/411 Test #375: pywrap-bfs ....................... Passed 25.37 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 1.87 sec; Start 392: python-cc54; 378/411 Test #391: python-mints2 .................... Passed 2.43 sec; Start 393: python-3-index-transforms; 379/411 Test #374: dft-custom-gga ................... Passed 30.91 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.82 sec; Start 396: python-memdfjk; 381/411 Test #178: fsapt1 ........................... Passed 2162.17 sec; Start 397: json-v11-energy; 382/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 398: json-v11-gradient; 383/411 Test #320: sapt6 ............................ Passed 163.49 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 2.11 sec; Start 400: json-schema-1-ghost; 385/411 Test #397: json-v11-energy .................. Passed 3.25 sec; Start 401: json-schema-1-orient; 386/411 Test #400: json-schema-1-ghost .............. Passed 1.15 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.58 sec; Start 403: json-schema-1-gradient; 388/411 Test #393: python-3-index-transforms ........ Passed 10.07 sec; Start 404: json-schema-1-properties; 389/411 Test #399: json-schema-1-energy ............. Passed 3.30 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.63 sec; Start 406: skeletonaointegrals; 391/411 Test #401: json-schema-1-orient ............. Passed 3.44 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:35804,energy,energy,35804,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,-orb-rot; 380/411 Test #305: pywrap-checkrun-rohf ............. Passed 586.65 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 1.28 sec; Start 388: python-curve; 382/411 Test #388: python-curve ..................... Passed 3.62 sec; Start 389: python-pubchem; 383/411 Test #359: tu6-cp-ne2 ....................... Passed 242.76 sec; Start 390: python-mints9; 384/411 Test #390: python-mints9 .................... Passed 1.79 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.86 sec; Start 392: python-cc54; 386/411 Test #373: dft-custom-mgga .................. Passed 171.61 sec; Start 393: python-3-index-transforms; 387/411 Test #393: python-3-index-transforms ........ Passed 9.10 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.85 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 1.02 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.88 sec; Start 398: json-v11-gradient; 391/411 Test #398: json-v11-gradient ................ Passed 1.67 sec; Start 399: json-schema-1-energy; 392/411 Test #392: python-cc54 ...................... Passed 26.83 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 1.29 sec; Start 401: json-schema-1-orient; 394/411 Test #401: json-schema-1-orient ............. Passed 2.53 sec; Start 402: json-schema-1-throws; 395/411 Test #399: json-schema-1-energy ............. Passed 4.07 sec; Start 403: json-schema-1-gradient; 396/411 Test #402: json-schema-1-throws ............. Passed 0.62 sec; Start 404: json-schema-1-properties; 397/411 Test #403: json-schema-1-gradient ........... Passed 1.92 sec; Start 405: skeleton; 398/411 Test #404: json-schema-1-properties ......... Passed 1.48 sec; Start 406: skeletonaointegrals; 399/411 Test #405: skeleton ......................... Passed 1.51 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:36380,energy,energy,36380,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,2,['energy'],['energy']
Energy Efficiency,-rohf-orb-rot; 380/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.92 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 1.22 sec; Start 388: python-curve; 382/411 Test #385: psi4numpy-fci .................... Passed 4.83 sec; Start 389: python-pubchem; 383/411 Test #375: pywrap-bfs ....................... Passed 24.54 sec; Start 390: python-mints9; 384/411 Test #388: python-curve ..................... Passed 3.58 sec; Start 391: python-mints2; 385/411 Test #390: python-mints9 .................... Passed 1.95 sec; Start 392: python-cc54; 386/411 Test #391: python-mints2 .................... Passed 2.61 sec; Start 393: python-3-index-transforms; 387/411 Test #304: pywrap-checkrun-rhf .............. Passed 379.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.90 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 1.11 sec; Start 397: json-v11-energy; 390/411 Test #392: python-cc54 ...................... Passed 8.91 sec; Start 398: json-v11-gradient; 391/411 Test #393: python-3-index-transforms ........ Passed 9.59 sec; Start 399: json-schema-1-energy; 392/411 Test #397: json-v11-energy .................. Passed 4.11 sec; Start 400: json-schema-1-ghost; 393/411 Test #398: json-v11-gradient ................ Passed 2.70 sec; Start 401: json-schema-1-orient; 394/411 Test #400: json-schema-1-ghost .............. Passed 1.16 sec; Start 402: json-schema-1-throws; 395/411 Test #402: json-schema-1-throws ............. Passed 0.55 sec; Start 403: json-schema-1-gradient; 396/411 Test #401: json-schema-1-orient ............. Passed 2.34 sec; Start 404: json-schema-1-properties; 397/411 Test #399: json-schema-1-energy ............. Passed 2.80 sec; Start 405: skeleton; 398/411 Test #403: json-schema-1-gradient ........... Passed 1.54 sec; Start 406: skeletonaointegrals; 399/411 Test #404: json-schema-1-properties ......... Passed 1.27 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:36394,energy,energy,36394,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency,"-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete. ==> Transforming (OO|VV) Integrals <==; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete. ==> Transforming (OV|OO) Integrals <==; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete. ==> Transforming (OV|VV) Integrals <==; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete. ==> Ground State <==; -> MP2 energy = -2.73300898049903; [Squared-norm of MP1 wavefunction = 1.9482925]; PR-MP2 energy = -2.67454645912216; [Squared-norm of PR-MP1 wavefunction = 1.9035300]. ==> CIS/ADC(1) Level <==. 1 A state: 0.0517508 (a.u.), 1.4082107 (eV); ---------------------------------------------; 48 0 0.9604025397; 48 2 0.1503577396; 48 4 0.1179983520; 41 0 0.1104431860; 39 0 0.0512708739. 2 A state: 0.1139962 (a.u.), 3.1019955 (eV); ---------------------------------------------; 47 0 0.9322885266; 45 0 0.2322877190; 47 4 0.1095223496; 47 2 0.1012025144; 43 2 0.0790815566. ==> ADC(2) Computation <==. -> 1 A state : 0.0000632 (a.u.), 0.0017207 (eV); Non-iterative: -0.0001946 (a.u.), -0.0052954 (eV); Occ Vir Coefficient; ---------------------------------------------; 48 0 -0.9643264198; 48 4 -0.1622220253; 48 2 -0.1163186773; 46 0 -0.0845761860; 41 0 -0.0678547535. Converged in 7 iteration.; Squared norm of the S component: 0.9427657; The S vector is rotated up to 0.549 (deg.). -> 2 A state : 0.0000000 (a.u.), 0.0000000 (eV); Non-iterative: 0.0454606 (a.u.), 1.2370470 (eV); Occ Vir Co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482414859:1806,energy,energy,1806,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482414859,1,['energy'],['energy']
Energy Efficiency,". But props2 is really off:; ```; TestComparisonError: Y Component of Dipole 0: computed value (21.592762) does not match (17.775955) to 5 digits.; ```. And soscf-dft is fine energy-wise but oscillates more that the test allows on iterations in the next-to-last (PBE) subtest:; ```; @DF-RKS iter 0: -148.97585698578987 -1.48976e+02 2.56136e-01 ; @DF-RKS iter 1: -148.95093820938956 2.49188e-02 1.50011e-01 ; @DF-RKS iter 2: -149.39705073850598 -4.46113e-01 1.11947e-01 DIIS; @DF-RKS iter 3: -150.12875309470365 -7.31702e-01 7.57889e-03 DIIS; @DF-RKS iter 4: -150.12714697276095 1.60612e-03 1.00558e-02 SOKS, nmicro = 4; @DF-RKS iter 5: -150.13120148446785 -4.05451e-03 1.42232e-05 DIIS; @DF-RKS iter 6: -150.12700529520501 4.19619e-03 1.02055e-02 SOKS, nmicro = 4; @DF-RKS iter 7: -150.13120147305844 -4.19618e-03 2.10040e-05 DIIS; @DF-RKS iter 8: -150.12394657944893 7.25489e-03 1.34190e-02 SOKS, nmicro = 4; @DF-RKS iter 9: -150.13120141103812 -7.25483e-03 4.21385e-05 DIIS; @DF-RKS iter 10: -150.12366619982981 7.53521e-03 1.36759e-02 SOKS, nmicro = 4; @DF-RKS iter 11: -150.13120140228156 -7.53520e-03 4.43841e-05 DIIS; @DF-RKS iter 12: -150.11089835193317 2.03031e-02 2.24444e-02 SOKS, nmicro = 4; @DF-RKS iter 13: -150.13120064244808 -2.03023e-02 1.38615e-04 DIIS; @DF-RKS iter 14: -150.10407305304250 2.71276e-02 2.59404e-02 SOKS, nmicro = 4; @DF-RKS iter 15: -150.13119989205700 -2.71268e-02 1.91309e-04 DIIS; @DF-RKS iter 16: -150.08734658173793 4.38533e-02 3.29682e-02 SOKS, nmicro = 5; @DF-RKS iter 17: -150.13119968635687 -4.38531e-02 1.98267e-04 DIIS; @DF-RKS iter 18: -150.12286951781326 8.33017e-03 1.43806e-02 SOKS, nmicro = 4; @DF-RKS iter 19: -150.13120137806487 -8.33186e-03 5.00267e-05 DIIS; @DF-RKS iter 20: -150.12924629472502 1.95508e-03 6.96605e-03 SOKS, nmicro = 4; @DF-RKS iter 21: -150.13120149212386 -1.95520e-03 7.21044e-06 SOKS, nmicro = 4; @DF-RKS iter 22: -150.13120149480929 -2.68543e-09 3.33181e-08 SOKS, nmicro = conv; @DF-RKS Final Energy: -150.13120149480929; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/773#issuecomment-321913106:2442,Energy,Energy,2442,https://psicode.org,https://github.com/psi4/psi4/issues/773#issuecomment-321913106,1,['Energy'],['Energy']
Energy Efficiency,". Francesco brings up a related and overdue point. If you specify an open-shell molecule and no reference, it complains at you b/c rhf (the default) is unsuitable. I couldn’t say concretely, but some other programs will switch to an appropriate reference for open-shell. For psi4, it would have to be rhf/rks because we don’t have roks. This would be convenient at times, for instance, running databases of mixed closed/open shell. Propositions to be considered:. (i) Keeping reference in one place, that is, as a keyword. Consequences: retire rhf/uhf/rohf & rscf/uscf/roscf. (ii) If molecule is open-shell _and_ no reference has been specified, switch to uhf. This could be tricky b/c we’re not set up to do this driver-side. Also, there’d still be no way to use r/ro, as appropriate, in a series of molecules w/o explicitly setting reference. Lori. > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com wrote:; > ; > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > That sounds ok to me (then reference just has to be defined properly).; > ; > What about DFT, do we define functional properly and do energy('dft'), etc.?; > ; > David; > ; > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Fixed by 6f6d3aa; > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > though I rather think now that defining hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > energy() was a bad idea (by me) a few years ago (except for ""hf"" itself).; > > Nevertheless, as this ticket points out, having defined these names only; > > for energy() confounds the driver logic. These convenience names are now in; > > place for gradient() and property().; > > ; > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > prop() if others concur with my present assessment.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110183382:1924,energy,energy,1924,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110183382,1,['energy'],['energy']
Energy Efficiency,. Passed 14.69 sec; Start 101: cubeprop; 236/411 Test #201: fnocc3 ........................... Passed 17.46 sec; Start 393: python-3-index-transforms; 237/411 Test #268: opt2-fd .......................... Passed 12.91 sec; Start 266: opt1-fd; 238/411 Test #122: dfccd-grad1 ...................... Passed 13.35 sec; Start 141: dfomp2-3; 239/411 Test #127: dfccsdt1 ......................... Passed 7.70 sec; Start 192: fd-freq-energy; 240/411 Test #369: dft-jk ........................... Passed 13.09 sec; Start 197: freq-isotope1; 241/411 Test #141: dfomp2-3 ......................... Passed 6.05 sec; Start 15: cbs-xtpl-freq; 242/411 Test #101: cubeprop ......................... Passed 10.02 sec; Start 357: tu4-h2o-freq; 243/411 Test #372: dft-custom-hybrid ................ Passed 11.78 sec; Start 132: dfmp2-4; 244/411 Test #393: python-3-index-transforms ........ Passed 9.38 sec; Start 90: cepa1; 245/411 Test #266: opt1-fd .......................... Passed 10.40 sec; Start 123: dfccsd1; 246/411 Test #192: fd-freq-energy ................... Passed 9.49 sec; Start 365: cubeprop-esp; 247/411 Test #123: dfccsd1 .......................... Passed 3.18 sec; Start 180: fsapt-terms; 248/411 Test #15: cbs-xtpl-freq .................... Passed 8.72 sec; Start 88: cepa2; 249/411 Test #132: dfmp2-4 .......................... Passed 6.41 sec; Start 367: scf-hess1; 250/411 Test #197: freq-isotope1 .................... Passed 11.97 sec; Start 185: fci-h2o; 251/411 Test #90: cepa1 ............................ Passed 9.54 sec; Start 21: cc10; 252/411 Test #357: tu4-h2o-freq ..................... Passed 11.18 sec; Start 270: opt4; 253/411 Test #88: cepa2 ............................ Passed 4.53 sec; Start 241: ocepa-grad1; 254/411 Test #365: cubeprop-esp ..................... Passed 8.61 sec; Start 291: psimrcc-fd-freq1; 255/411 Test #180: fsapt-terms ...................... Passed 8.34 sec; Start 335: scf4; 256/411 Test #367: scf-hess1 ........................ Passed 7.76 sec; Start 154: df,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:22953,energy,energy,22953,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,. Passed 17.42 sec; Start 263: omp3-grad1; 312/412 Test #100: cisd-sp-2 ........................ Passed 18.93 sec; Start 214: mints2; 313/412 Test #142: dfomp2-3 ......................... Passed 15.59 sec; Start 97: cisd-h2o-clpse; 314/412 Test #224: molden1 .......................... Passed 16.53 sec; Start 233: mp2p5-grad2; 315/412 Test #225: molden2 .......................... Passed 15.70 sec; Start 398: json-v11-energy; 316/412 Test #328: scf-guess-read1 .................. Passed 16.21 sec; Start 247: omp2-1; 317/412 Test #386: psi4numpy-fci .................... Passed 17.08 sec; Start 6: ao-casscf-sp; 318/412 Test #263: omp3-grad1 ....................... Passed 15.82 sec; Start 252: omp2-grad1; 319/412 Test #214: mints2 ........................... Passed 16.37 sec; Start 392: python-mints2; 320/412 Test #97: cisd-h2o-clpse ................... Passed 15.68 sec; Start 311: rasci-c2-active; 321/412 Test #233: mp2p5-grad2 ...................... Passed 16.03 sec; Start 315: sad1; 322/412 Test #398: json-v11-energy .................. Passed 16.80 sec; Start 118: dfcasscf-sa-sp; 323/412 Test #247: omp2-1 ........................... Passed 16.51 sec; Start 295: psimrcc-sp1; 324/412 Test #6: ao-casscf-sp ..................... Passed 17.80 sec; Start 284: opt-freeze-coords; 325/412 Test #252: omp2-grad1 ....................... Passed 16.04 sec; Start 135: dfmp2-grad1; 326/412 Test #392: python-mints2 .................... Passed 17.49 sec; Start 312: rasci-h2o; 327/412 Test #311: rasci-c2-active .................. Passed 18.15 sec; Start 329: scf-upcast-custom-basis; 328/412 Test #315: sad1 ............................. Passed 16.92 sec; Start 346: dfep2-2; 329/412 Test #118: dfcasscf-sa-sp ................... Passed 18.04 sec; Start 333: scf-occ; 330/412 Test #135: dfmp2-grad1 ...................... Passed 16.60 sec; Start 119: dfcasscf-fzc-sp; 331/412 Test #284: opt-freeze-coords ................ Passed 17.63 sec; Start 290: psimrcc-ccsd_t-3; 332/412 Test #295: psimrcc-s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:30045,energy,energy,30045,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,. Passed 2.25 sec; Start 384: psi4numpy-rhf-hessian; 313/411 Test #295: psithon1 ......................... Passed 2.85 sec; Start 234: mp3-grad2; 314/411 Test #85: cepa0-grad1 ...................... Passed 1.37 sec; Start 262: omp3-grad1; 315/411 Test #253: omp2p5-1 ......................... Passed 1.96 sec; Start 283: opt-freeze-coords; 316/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.99 sec; Start 343: stability1; 317/411 Test #234: mp3-grad2 ........................ Passed 1.81 sec; Start 236: mpn-bh; 318/411 Test #262: omp3-grad1 ....................... Passed 1.81 sec; Start 399: json-schema-1-energy; 319/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.61 sec; Start 355: tu3-h2o-opt; 320/411 Test #198: freq-isotope2 .................... Passed 3.81 sec; Start 269: opt3; 321/411 Test #343: stability1 ....................... Passed 2.03 sec; Start 121: dfccdl1; 322/411 Test #283: opt-freeze-coords ................ Passed 2.68 sec; Start 311: rasci-h2o; 323/411 Test #399: json-schema-1-energy ............. Passed 1.65 sec; Start 344: dfep2-1; 324/411 Test #355: tu3-h2o-opt ...................... Passed 2.01 sec; Start 351: dft-reference; 325/411 Test #121: dfccdl1 .......................... Passed 1.29 sec; Start 224: molden2; 326/411 Test #311: rasci-h2o ........................ Passed 0.99 sec; Start 225: mom; 327/411 Test #236: mpn-bh ........................... Passed 2.74 sec; Start 397: json-v11-energy; 328/411 Test #269: opt3 ............................. Passed 2.44 sec; Start 231: mp2p5-grad1; 329/411 Test #351: dft-reference .................... Passed 2.84 sec; Start 332: scf-occ; 330/411 Test #344: dfep2-1 .......................... Passed 3.55 sec; Start 222: mints10; 331/411 Test #397: json-v11-energy .................. Passed 2.74 sec; Start 130: dfmp2-2; 332/411 Test #231: mp2p5-grad1 ...................... Passed 2.25 sec; Start 391: python-mints2; 333/411 Test #224: molden2 .......................... Passed 3.08 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:30050,energy,energy,30050,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,. Passed 2.61 sec; Start 93: cisd-h2o+-0; 287/411 Test #236: mpn-bh ........................... Passed 4.24 sec; Start 376: pywrap-align; 288/411 Test #185: fci-h2o .......................... Passed 7.50 sec; Start 370: scf-coverage; 289/411 Test #186: fci-h2o-2 ........................ Passed 7.79 sec; Start 99: cisd-sp-2; 290/411 Test #184: fci-dipole ....................... Passed 7.25 sec; Start 283: opt-freeze-coords; 291/411 Test #198: freq-isotope2 .................... Passed 7.18 sec; Start 117: dfcasscf-sa-sp; 292/411 Test #179: fsapt2 ........................... Passed 4.99 sec; Start 191: fcidump; 293/411 Test #94: cisd-h2o+-1 ...................... Passed 4.07 sec; Start 187: fci-h2o-fzcv; 294/411 Test #95: cisd-h2o+-2 ...................... Passed 4.65 sec; Start 332: scf-occ; 295/411 Test #253: omp2p5-1 ......................... Passed 3.82 sec; Start 118: dfcasscf-fzc-sp; 296/411 Test #171: dft2 ............................. Passed 5.09 sec; Start 399: json-schema-1-energy; 297/411 Test #376: pywrap-align ..................... Passed 3.35 sec; Start 310: rasci-c2-active; 298/411 Test #265: opt1 ............................. Passed 6.06 sec; Start 223: molden1; 299/411 Test #93: cisd-h2o+-0 ...................... Passed 5.64 sec; Start 344: dfep2-1; 300/411 Test #332: scf-occ .......................... Passed 4.06 sec; Start 294: psimrcc-sp1; 301/411 Test #329: scf-guess-read2 .................. Passed 8.60 sec; Start 339: scf-property; 302/411 Test #99: cisd-sp-2 ........................ Passed 6.28 sec; Start 331: scf1; 303/411 Test #295: psithon1 ......................... Passed 9.58 sec; Start 257: omp3-1; 304/411 Test #399: json-schema-1-energy ............. Passed 4.57 sec; Start 234: mp3-grad2; 305/411 Test #187: fci-h2o-fzcv ..................... Passed 6.68 sec; Start 225: mom; 306/411 Test #118: dfcasscf-fzc-sp .................. Passed 6.60 sec; Start 351: dft-reference; 307/411 Test #283: opt-freeze-coords ................ Passed 9.08 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:27842,energy,energy,27842,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,. Passed 23.80 sec; Start 232: mp2p5-grad1; 331/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 23.57 sec; Start 229: mp2-grad1; 332/412 Test #329: scf-upcast-custom-basis .......... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf-sp ................... Passed 24.09 sec; Start 234: mp3-grad1; 334/412 Test #352: dft-reference .................... Passed 26.09 sec; Start 294: psimrcc-pt2; 335/412 Test #204: frac ............................. Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ............................. Passed 23.73 sec; Start 412: skeletonwavefunction; 337/412 Test #402: json-schema-1-orient ............. Passed 24.09 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #344: stability1 ....................... Passed 24.31 sec; Start 363: x2c3; 339/412 Test #345: dfep2-1 .......................... Passed 24.96 sec; Start 357: scf-response1; 340/412 Test #236: mp2-property ..................... Passed 25.57 sec; Start 161: dft-grac; 341/412 Test #398: json-v11-energy .................. Passed 24.99 sec; Start 222: mints9; 342/412 Test #232: mp2p5-grad1 ...................... Passed 23.24 sec; Start 334: scf2; 343/412 Test #400: json-schema-1-energy ............. Passed 24.98 sec; Start 409: skeletonmointegrals; 344/412 Test #235: mp3-grad2 ........................ Passed 24.37 sec; Start 382: psi4numpy-dfmp2; 345/412 Test #389: python-curve ..................... Passed 25.55 sec; Start 406: skeleton; 346/412 Test #229: mp2-grad1 ........................ Passed 23.81 sec; Start 353: stability2; 347/412 Test #294: psimrcc-pt2 ...................... Passed 22.73 sec; Start 288: psimrcc-ccsd_t-1; 348/412 Test #131: dfmp2-2 .......................... Passed 24.04 sec; Start 391: python-mints9; 349/412 Test #121: dfccd1 ........................... Passed 23.41 sec; Start 8: castup1; 350/412 Test #234: mp3-grad1 ........................ Passed 24.08 sec; Start 408: skeletondfmp2; 351/412 Test #412: skeletonwavefunction .....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:32146,energy,energy,32146,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,. Passed 24.14 sec; Start 186: fci-h2o-2; 179/411 Test #173: dft-omega ........................ Passed 28.39 sec; Start 187: fci-h2o-fzcv; 180/411 Test #184: fci-dipole ....................... Passed 8.58 sec; Start 188: fci-tdm; 181/411 Test #185: fci-h2o .......................... Passed 7.32 sec; Start 189: fci-tdm-2; 182/411 Test #188: fci-tdm .......................... Passed 1.10 sec; Start 190: fci-coverage; 183/411 Test #187: fci-h2o-fzcv ..................... Passed 5.15 sec; Start 191: fcidump; 184/411 Test #186: fci-h2o-2 ........................ Passed 8.30 sec; Start 192: fd-freq-energy; 185/411 Test #190: fci-coverage ..................... Passed 10.54 sec; Start 194: fd-freq-gradient; 186/411 Test #191: fcidump .......................... Passed 9.42 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 55.49 sec; Start 197: freq-isotope1; 188/411 Test #167: dft-b3lyp ........................ Passed 69.92 sec; Start 198: freq-isotope2; 189/411 Test #192: fd-freq-energy ................... Passed 15.93 sec; Start 199: fnocc1; 190/411 Test #189: fci-tdm-2 ........................ Passed 23.63 sec; Start 200: fnocc2; 191/411 Test #198: freq-isotope2 .................... Passed 10.26 sec; Start 201: fnocc3; 192/411 Test #161: dft-grad-lr2 ..................... Passed 102.78 sec; Start 202: fnocc4; 193/411 Test #197: freq-isotope1 .................... Passed 16.85 sec; Start 203: frac; 194/411 Test #203: frac ............................. Passed 3.42 sec; Start 204: frac-ip-fitting; 195/411 Test #199: fnocc1 ........................... Passed 18.28 sec; Start 206: ghosts; 196/411 Test #194: fd-freq-gradient ................. Passed 29.73 sec; Start 207: gibbs; 197/411 Test #201: fnocc3 ........................... Passed 17.85 sec; Start 208: matrix1; 198/411 Test #208: matrix1 .......................... Passed 0.56 sec; Start 209: mcscf1; 199/411 Test #209: mcscf1 ........................... Passed 1.95 sec; Start 210: mcs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:17606,energy,energy,17606,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency,. Passed 3.69 sec; Start 182: fci-h2o-2; 266/401 Test #111: dcft6 ............................ Passed 123.09 sec; Start 183: fci-h2o-fzcv; 267/401 Test #182: fci-h2o-2 ........................ Passed 4.36 sec; Start 184: fci-tdm; 268/401 Test #184: fci-tdm .......................... Passed 1.06 sec; Start 185: fci-tdm-2; 269/401 Test #183: fci-h2o-fzcv ..................... Passed 2.12 sec; Start 186: fci-coverage; 270/401 Test #113: dcft8 ............................ Passed 121.68 sec; Start 188: fd-freq-energy; 271/401 Test #169: dft-omega ........................ Passed 17.38 sec; Start 190: fd-freq-gradient; 272/401 Test #173: extern2 .......................... Passed 15.58 sec; Start 192: fd-gradient; 273/401 Test #168: dft3 ............................. Passed 21.77 sec; Start 193: freq-isotope1; 274/401 Test #186: fci-coverage ..................... Passed 4.23 sec; Start 199: frac; 275/401 Test #199: frac ............................. Passed 1.90 sec; Start 200: frac-ip-fitting; 276/401 Test #188: fd-freq-energy ................... Passed 7.14 sec; Start 202: ghosts; 277/401 Test #163: dft-b3lyp ........................ Passed 37.96 sec; Start 206: mcscf2; 278/401 Test #206: mcscf2 ........................... Passed 1.48 sec; Start 207: mcscf3; 279/401 Test #193: freq-isotope1 .................... Passed 8.74 sec; Start 210: mints3; 280/401 Test #207: mcscf3 ........................... Passed 0.80 sec; Start 211: mints4; 281/401 Test #210: mints3 ........................... Passed 1.09 sec; Start 212: mints5; 282/401 Test #211: mints4 ........................... Passed 0.57 sec; Start 213: mints6; 283/401 Test #212: mints5 ........................... Passed 0.74 sec; Start 214: mints8; 284/401 Test #190: fd-freq-gradient ................. Passed 16.08 sec; Start 215: mints-benchmark; 285/401 Test #213: mints6 ........................... Passed 4.79 sec; Start 216: mints-helper; 286/401 Test #185: fci-tdm-2 ........................ Passed 18.93 sec; Start 217: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:25840,energy,energy,25840,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,. Passed 9.29 sec; Start 119: ao-dfcasscf-sp; 84/415 Test #160: dfrasscf-sp ...................... Passed 14.00 sec; Start 122: dfcasscf-sp; 85/415 Test #305: psithon1 ......................... Passed 14.10 sec; Start 408: json-v11-energy; 86/415 Test #239: mpn-bh ........................... Passed 7.27 sec; Start 351: soscf-large; 87/415 Test #120: dfcasscf-sa-sp ................... Passed 6.28 sec; Start 121: dfcasscf-fzc-sp; 88/415 Test #234: mp2p5-grad1 ...................... Passed 7.74 sec; Start 95: cisd-h2o+-0; 89/415 Test #404: python-3-index-transforms ........ Passed 6.88 sec; Start 187: fci-dipole; 90/415 Test #123: dfccd1 ........................... Passed 7.27 sec; Start 399: python-curve; 91/415 Test #325: sapt1 ............................ Passed 10.68 sec; Start 183: fsapt-terms; 92/415 Test #119: ao-dfcasscf-sp ................... Passed 6.21 sec; Start 349: scf-property; 93/415 Test #122: dfcasscf-sp ...................... Passed 5.74 sec; Start 410: json-schema-1-energy; 94/415 Test #378: scf-hess1 ........................ Passed 10.20 sec; Start 354: stability1; 95/415 Test #121: dfcasscf-fzc-sp .................. Passed 3.14 sec; Start 238: mp2-property; 96/415 Test #95: cisd-h2o+-0 ...................... Passed 2.89 sec; Start 304: psimrcc-sp1; 97/415 Test #408: json-v11-energy .................. Passed 3.99 sec; Start 341: scf1; 98/415 Test #399: python-curve ..................... Passed 3.30 sec; Start 387: pywrap-align; 99/415 Test #410: json-schema-1-energy ............. Passed 2.84 sec; Start 402: python-mints2; 100/415 Test #349: scf-property ..................... Passed 3.57 sec; Start 298: psimrcc-ccsd_t-2; 101/415 Test #351: soscf-large ...................... Passed 5.21 sec; Start 355: dfep2-1; 102/415 Test #390: cc-module ........................ Passed 327.63 sec; Start 182: fsapt2; 103/415 Test #238: mp2-property ..................... Passed 2.53 sec; Start 216: mints2; 104/415 Test #354: stability1 ....................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:9124,energy,energy,9124,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,". Trying; with different guesses then seems the only way to find the lowest energy; solution. 2016-01-14 2:42 GMT-05:00 Rob Parrish notifications@github.com:. > I have seen this before (for this exact system) - the SAD guess converges; > to the correct root, but Core does not. Not really much more to it than; > that.; > ; > -Rob; > ; > On Wed, Jan 13, 2016 at 11:33 PM, Roberto Di Remigio <; > notifications@github.com> wrote:; > ; > > Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+; > > gives very different energies.; > > The following input with the core guess gives a total energy of; > > -75.5488580481183476; > > ; > > memory 250 mb; > > molecule h2o {; > > symmetry c1; > > 1 2; > > O 0.0000000000 0.0000000000 -0.2249058930; > > H 1.4523499293 0.0000000000 0.8996235720; > > H -1.4523499293 0.0000000000 0.8996235720; > > units bohr; > > no_reorient; > > no_com; > > }; > > ; > > set {; > > basis cc-pVDZ; > > scf_type direct; > > guess core; > > reference uhf; > > e_convergence 7; > > d_convergence 7; > > }; > > ; > > energy_scf1 = energy('scf'); > > ; > > while this input with the SAD guess gives a total energy of; > > -75.6330881795159655; > > ; > > memory 250 mb; > > molecule h2o {; > > symmetry c1; > > 1 2; > > O 0.0000000000 0.0000000000 -0.2249058930; > > H 1.4523499293 0.0000000000 0.8996235720; > > H -1.4523499293 0.0000000000 0.8996235720; > > units bohr; > > no_reorient; > > no_com; > > }; > > ; > > set {; > > basis cc-pVDZ; > > scf_type direct; > > guess sad; > > reference uhf; > > e_convergence 7; > > d_convergence 7; > > }; > > ; > > energy_scf1 = energy('scf'); > > ; > > Of course, the initial guess has always a huge impact on the calculation,; > > but is the reported difference reasonable for a system as small as H2O+?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/211.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4publ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/211#issuecomment-171646769:1327,energy,energy,1327,https://psicode.org,https://github.com/psi4/psi4/issues/211#issuecomment-171646769,2,['energy'],['energy']
Energy Efficiency,". Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound.; > ; > program fc scf singles mp2corl mp2tot; > occ fc -25.94361432 -0.00068837 -0.05940725 -26.00302157; > detci fc -25.94361432 -0.06094168 -26.00455600; > qchem fc -25.94361432 -0.00068837 -0.05940725 -26.00302157; > molpro fc -25.94361432 -0.00054735 -0.05936497 -26.00297929; > $molecule; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > $end; > ; > $rem; > JOBTYPE sp; > unrestricted false; > n_frozen_core fc; > scf_guess sad; > BASIS cc-pVdZ; > basis2 6-31g; > correlation mp2; > THRESH 12; > SCF_CONVERGENCE 8; > SYM_IGNORE TRUE; > SYMMETRY FALSE; > MEM_TOTAL 1600; > MEM_STATIC 512; > INTEGRALS_BUFFER 512; > MAX_SCF_CYCLES 200; > $end; > molecule bh_h2p {; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > set basis cc-pvdz; > set scf_type pk; > set mp2_type conv; > set guess sad; > set freeze_core true; > set e_convergence 8; > set d_convergence 7; > set reference rohf; > ; > set qc_module detci # toggle detci/occ; > energy('mp2'); > memory,200,m; > nosym; > noorient; > angstrom; > geometry={; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9; > ; > SET,CHARGE=1; > SET,SPIN=1; > ; > basis=cc-pVDZ; > ; > rhf; > rccsd; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/311.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/311#issuecomment-195804600:1863,energy,energy,1863,https://psicode.org,https://github.com/psi4/psi4/issues/311#issuecomment-195804600,3,"['CHARGE', 'ENERGY', 'energy']","['CHARGE', 'ENERGY', 'energy']"
Energy Efficiency,". ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 2 2 2 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (MB): 34332; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set:; Number of shells: 30; Number of basis function: 104; Number of Cartesian functions: 131; Spherical Harmonics?: true; Max angular momentum: 4. Minimum eigenvalue in the overlap matrix is 2.5053959051E-02.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -23.49398571874617 -2.34940e+01 7.47577e-02; @DF-RHF iter 2: -24.22630554723446 -7.32320e-01 7.13952e-03 DIIS; @DF-RHF iter 3: -24.23662538410707 -1.03198e-02 7.21912e-04 DIIS; @DF-RHF iter 4: -24.23681435257776 -1.88968e-04 6.97945e-05 DIIS; @DF-RHF iter 5: -24.23681649173431 -2.13916e-06 2.93127e-06 DIIS; @DF-RHF iter 6: -24.23681649645996 -4.72565e-09 1.53123e-07 DIIS; @DF-RHF iter 7: -24.23681649646912 -9.16245e-12 1.38238e-09 DIIS. DF guess converged. ==> Integral Setup <==. MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 1; Number of AO shells: 14; Number of SO shells: 14; Number of primitives: 30; Number of atomic orbitals: 55; Number of basis functions: 46. ```; Number of irreps: 8; Integral cutoff 0.00e+00; Number of functions per irrep: [ 11 3 3 3 2 8 8 8 ]; ```. OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ```; Computing two-electron integrals...done;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:4718,Energy,Energy,4718,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,".), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1701,energy,energy,1701,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,.. Passed 1.14 sec; Start 383: psi4numpy-rhf-gradient; 382/411 Test #404: json-schema-1-properties ......... Passed 1.17 sec; Start 353: tu1-h2o-energy; 383/411 Test #190: fci-coverage ..................... Passed 1.91 sec; Start 214: mints3; 384/411 Test #410: skeletonsointegrals .............. Passed 0.90 sec; Start 349: sapt-sf1; 385/411 Test #406: skeletonaointegrals .............. Passed 0.93 sec; Start 396: python-memdfjk; 386/411 Test #387: python-energy .................... Passed 0.72 sec; Start 352: stability2; 387/411 Test #378: mints12 .......................... Passed 1.15 sec; Start 188: fci-tdm; 388/411 Test #396: python-memdfjk ................... Passed 0.88 sec; Start 354: tu2-ch2-energy; 389/411 Test #214: mints3 ........................... Passed 0.99 sec; Start 382: psi4numpy-rhf; 390/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 308: pywrap-db3; 391/411 Test #349: sapt-sf1 ......................... Passed 1.10 sec; Start 334: scf3; 392/411 Test #353: tu1-h2o-energy ................... Passed 1.26 sec; Start 209: mcscf1; 393/411 Test #352: stability2 ....................... Passed 1.16 sec; Start 211: mcscf3; 394/411 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 409: skeletonscf; 395/411 Test #308: pywrap-db3 ....................... Passed 0.70 sec; Start 175: docs-dft; 396/411 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 397/411 Test #354: tu2-ch2-energy ................... Passed 0.86 sec; Start 216: mints5; 398/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 208: matrix1; 399/411 Test #209: mcscf1 ........................... Passed 0.69 sec; Start 212: mints1; 400/411 Test #211: mcscf3 ........................... Passed 0.67 sec; Start 364: options1; 401/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 402: json-schema-1-throws; 402/411 Test #175: docs-dft ......................... Passed 0.59 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:36665,energy,energy,36665,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,".. Passed 1.23 sec; Start 347: stability2; 179/401 Test #219: molden1 .......................... Passed 5.30 sec; Start 326: scf-bs; 180/401 Test #227: mp2p5-grad1 ...................... Passed 4.58 sec; Start 349: tu2-ch2-energy; 181/401 Test #348: tu1-h2o-energy ................... Passed 1.49 sec; Start 330: scf3; 182/401 Test #239: ocepa1 ........................... Passed 6.49 sec; Start 380: psi4numpy-rhf-gradient; 183/401 Test #115: ao-dfcasscf-sp ................... Passed 2.27 sec; Start 290: psimrcc-sp1; 184/401 Test #400: json-schema_0_gradient ........... Passed 1.81 sec; Start 101: decontract; 185/401 Test #376: cc-module, ....................... Passed 111.71 sec; Start 379: psi4numpy-rhf; 186/401 Test #393: python-memdfjk ................... Passed 1.80 sec; Start 205: mcscf1; 187/401 Test #349: tu2-ch2-energy ................... Passed 1.30 sec; Start 235: numpy-array-interface; 188/401 Test #326: scf-bs ........................... Passed 1.60 sec; Start 384: python-energy; 189/401 Test #330: scf3 ............................. Passed 1.38 sec; Start 204: matrix1; 190/401 Test #380: psi4numpy-rhf-gradient ........... Passed 1.41 sec; Start 359: options1; 191/401 Test #347: stability2 ....................... Passed 1.80 sec; Start 208: mints1; 192/401 Test #379: psi4numpy-rhf .................... Passed 0.87 sec; Start 284: psimrcc-ccsd_t-2; 193/401 Test #235: numpy-array-interface ............ Passed 0.63 sec; Start 285: psimrcc-ccsd_t-3; 194/401 Test #205: mcscf1 ........................... Passed 0.84 sec; Start 283: psimrcc-ccsd_t-1; 195/401 Test #204: matrix1 .......................... Passed 0.67 sec; Start 289: psimrcc-pt2; 196/401 Test #101: decontract ....................... Passed 1.36 sec; Start 1: adc1; 197/401 Test #208: mints1 ........................... Passed 0.58 sec; Start 2: adc2; 198/401 Test #384: python-energy .................... Passed 0.78 sec; Start 9: castup2; 199/401 Test #359: options1 ......................... Passed 0.67 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:17695,energy,energy,17695,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,.. Passed 1.72 sec; Start 190: fci-coverage; 306/411 Test #397: json-v11-energy .................. Passed 1.89 sec; Start 344: dfep2-1; 307/411 Test #120: dfccd1 ........................... Passed 1.33 sec; Start 134: dfmp2-grad1; 308/411 Test #251: omp2-grad1 ....................... Passed 2.95 sec; Start 388: python-curve; 309/411 Test #226: mp2-1 ............................ Passed 3.67 sec; Start 295: psithon1; 310/411 Test #344: dfep2-1 .......................... Passed 2.83 sec; Start 376: pywrap-align; 311/411 Test #243: ocepa1 ........................... Passed 3.16 sec; Start 4: casscf-semi; 312/411 Test #269: opt3 ............................. Passed 3.32 sec; Start 399: json-schema-1-energy; 313/411 Test #190: fci-coverage ..................... Passed 3.00 sec; Start 377: pywrap-align-chiral; 314/411 Test #134: dfmp2-grad1 ...................... Passed 2.56 sec; Start 236: mpn-bh; 315/411 Test #4: casscf-semi ...................... Passed 1.77 sec; Start 213: mints2; 316/411 Test #399: json-schema-1-energy ............. Passed 1.83 sec; Start 118: dfcasscf-fzc-sp; 317/411 Test #388: python-curve ..................... Passed 2.19 sec; Start 391: python-mints2; 318/411 Test #295: psithon1 ......................... Passed 3.15 sec; Start 384: psi4numpy-rhf-hessian; 319/411 Test #236: mpn-bh ........................... Passed 2.98 sec; Start 283: opt-freeze-coords; 320/411 Test #376: pywrap-align ..................... Passed 3.28 sec; Start 343: stability1; 321/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.56 sec; Start 203: frac; 322/411 Test #377: pywrap-align-chiral .............. Passed 3.40 sec; Start 311: rasci-h2o; 323/411 Test #213: mints2 ........................... Passed 2.40 sec; Start 235: mp2-property; 324/411 Test #391: python-mints2 .................... Passed 2.39 sec; Start 225: mom; 325/411 Test #311: rasci-h2o ........................ Passed 1.08 sec; Start 356: scf-response1; 326/411 Test #203: frac ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:29448,energy,energy,29448,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,.. Passed 3.30 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.47 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.48 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 14.85 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.04 sec; Start 350: dft-custom; 336/411 Test #319: sapt5 ............................ Passed 74.55 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 34.05 sec; Start 352: stability2; 338/411 Test #336: scf5 ............................. Passed 34.15 sec; Start 353: tu1-h2o-energy; 339/411 Test #353: tu1-h2o-energy ................... Passed 1.21 sec; Start 354: tu2-ch2-energy; 340/411 Test #352: stability2 ....................... Passed 1.43 sec; Start 355: tu3-h2o-opt; 341/411 Test #351: dft-reference .................... Passed 3.05 sec; Start 356: scf-response1; 342/411 Test #354: tu2-ch2-energy ................... Passed 1.22 sec; Start 357: tu4-h2o-freq; 343/411 Test #356: scf-response1 .................... Passed 2.48 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.54 sec; Start 359: tu6-cp-ne2; 345/411 Test #240: ocepa-freq1 ...................... Passed 405.13 sec; Start 360: x2c1; 346/411 Test #350: dft-custom ....................... Passed 14.93 sec; Start 361: x2c2; 347/411 Test #346: sapt-dft1 ........................ Passed 22.71 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 349/411 Test #357: tu4-h2o-freq ..................... Passed 13.25 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.59 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 2.66 sec; Start 366: dft-smoke; 352/411 Test #362: x2c3 ............................. Passed 2.82 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:31934,energy,energy,31934,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency,.. Passed 8.46 sec; Start 328: scf-upcast-custom-basis; 321/411 Test #377: pywrap-align-chiral .............. Passed 2.99 sec; Start 203: frac; 322/411 Test #284: props1 ........................... Passed 5.82 sec; Start 388: python-curve; 323/411 Test #234: mp3-grad2 ........................ Passed 9.24 sec; Start 384: psi4numpy-rhf-hessian; 324/411 Test #85: cepa0-grad1 ...................... Passed 6.89 sec; Start 343: stability1; 325/411 Test #121: dfccdl1 .......................... Passed 5.38 sec; Start 228: mp2-grad1; 326/411 Test #130: dfmp2-2 .......................... Passed 3.53 sec; Start 314: sad1; 327/411 Test #119: dfcasscf-sp ...................... Passed 6.03 sec; Start 363: zaptn-nh2; 328/411 Test #271: opt5 ............................. Passed 5.41 sec; Start 231: mp2p5-grad1; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 3.40 sec; Start 391: python-mints2; 330/411 Test #116: ao-dfcasscf-sp ................... Passed 5.59 sec; Start 397: json-v11-energy; 331/411 Test #251: omp2-grad1 ....................... Passed 10.41 sec; Start 213: mints2; 332/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.55 sec; Start 96: cisd-h2o-clpse; 333/411 Test #229: mp2-grad2 ........................ Passed 6.76 sec; Start 233: mp3-grad1; 334/411 Test #232: mp2p5-grad2 ...................... Passed 6.67 sec; Start 401: json-schema-1-orient; 335/411 Test #343: stability1 ....................... Passed 3.69 sec; Start 362: x2c3; 336/411 Test #228: mp2-grad1 ........................ Passed 2.32 sec; Start 356: scf-response1; 337/411 Test #262: omp3-grad1 ....................... Passed 9.04 sec; Start 289: psimrcc-ccsd_t-3; 338/411 Test #388: python-curve ..................... Passed 4.26 sec; Start 361: x2c2; 339/411 Test #203: frac ............................. Passed 4.54 sec; Start 352: stability2; 340/411 Test #231: mp2p5-grad1 ...................... Passed 2.51 sec; Start 311: rasci-h2o; 341/411 Test #363: zaptn-nh2 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:31046,energy,energy,31046,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,... Passed 1.50 sec; Start 333: scf2; 367/411 Test #349: sapt-sf1 ......................... Passed 1.13 sec; Start 353: tu1-h2o-energy; 368/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.53 sec; Start 411: skeletonwavefunction; 369/411 Test #228: mp2-grad1 ........................ Passed 1.56 sec; Start 231: mp2p5-grad1; 370/411 Test #96: cisd-h2o-clpse ................... Passed 1.22 sec; Start 298: pubchem2; 371/411 Test #400: json-schema-1-ghost .............. Passed 1.05 sec; Start 102: decontract; 372/411 Test #233: mp3-grad1 ........................ Passed 1.31 sec; Start 410: skeletonsointegrals; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 398: json-v11-gradient; 374/411 Test #411: skeletonwavefunction ............. Passed 0.99 sec; Start 210: mcscf2; 375/411 Test #333: scf2 ............................. Passed 1.33 sec; Start 330: scf-bs; 376/411 Test #231: mp2p5-grad1 ...................... Passed 1.46 sec; Start 354: tu2-ch2-energy; 377/411 Test #102: decontract ....................... Passed 1.11 sec; Start 406: skeletonaointegrals; 378/411 Test #410: skeletonsointegrals .............. Passed 1.06 sec; Start 222: mints10; 379/411 Test #330: scf-bs ........................... Passed 0.94 sec; Start 188: fci-tdm; 380/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 383: psi4numpy-rhf-gradient; 381/411 Test #298: pubchem2 ......................... Passed 1.60 sec; Start 387: python-energy; 382/411 Test #210: mcscf2 ........................... Passed 1.34 sec; Start 220: mints-helper; 383/411 Test #354: tu2-ch2-energy ................... Passed 0.84 sec; Start 378: mints12; 384/411 Test #188: fci-tdm .......................... Passed 0.80 sec; Start 293: psimrcc-pt2; 385/411 Test #406: skeletonaointegrals .............. Passed 1.10 sec; Start 209: mcscf1; 386/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 309: pywrap-molecule; 387/411 Test #387: python-energy ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:35226,energy,energy,35226,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,... Passed 1.74 sec; Start 384: psi4numpy-rhf-hessian; 327/404 Test #236: mpn-bh ........................... Passed 3.23 sec; Start 271: opt5; 328/404 Test #363: zaptn-nh2 ........................ Passed 2.07 sec; Start 391: python-mints2; 329/404 Test #120: dfccd1 ........................... Passed 1.18 sec; Start 332: scf-occ; 330/404 Test #119: dfcasscf-sp ...................... Passed 1.56 sec; Start 229: mp2-grad2; 331/404 Test #294: psimrcc-sp1 ...................... Passed 2.29 sec; Start 328: scf-upcast-custom-basis; 332/404 Test #235: mp2-property ..................... Passed 1.93 sec; Start 314: sad1; 333/404 Test #213: mints2 ........................... Passed 2.31 sec; Start 116: ao-dfcasscf-sp; 334/404 Test #271: opt5 ............................. Passed 1.53 sec; Start 93: cisd-h2o+-0; 335/404 Test #332: scf-occ .......................... Passed 1.38 sec; Start 203: frac; 336/404 Test #229: mp2-grad2 ........................ Passed 1.34 sec; Start 353: tu1-h2o-energy; 337/404 Test #384: psi4numpy-rhf-hessian ............ Passed 2.46 sec; Start 8: castup1; 338/404 Test #391: python-mints2 .................... Passed 2.32 sec; Start 118: dfcasscf-fzc-sp; 339/404 Test #328: scf-upcast-custom-basis .......... Passed 1.66 sec; Start 94: cisd-h2o+-1; 340/404 Test #353: tu1-h2o-energy ................... Passed 1.19 sec; Start 327: scf-guess-read1; 341/404 Test #116: ao-dfcasscf-sp ................... Passed 1.73 sec; Start 99: cisd-sp-2; 342/404 Test #8: castup1 .......................... Passed 1.29 sec; Start 95: cisd-h2o+-2; 343/404 Test #314: sad1 ............................. Passed 2.13 sec; Start 130: dfmp2-2; 344/404 Test #203: frac ............................. Passed 1.81 sec; Start 345: dfep2-2; 345/404 Test #93: cisd-h2o+-0 ...................... Passed 2.21 sec; Start 96: cisd-h2o-clpse; 346/404 Test #118: dfcasscf-fzc-sp .................. Passed 1.34 sec; Start 231: mp2p5-grad1; 347/404 Test #94: cisd-h2o+-1 ...................... Passed 1.65 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:31270,energy,energy,31270,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,... Passed 19.79 sec; Start 297: psithon1; 257/413 Test #14: cbs-xtpl-energy .................. Passed 16.33 sec; Start 89: cepa2; 258/413 Test #359: tu4-h2o-freq ..................... Passed 13.21 sec; Start 390: python-curve; 259/413 Test #371: dft-jk ........................... Passed 12.88 sec; Start 401: json-schema-1-energy; 260/413 Test #343: soscf-ref ........................ Passed 9.59 sec; Start 399: json-v11-energy; 261/413 Test #272: opt4 ............................. Passed 10.18 sec; Start 369: scf-hess1; 262/413 Test #3: casscf-fzc-sp .................... Passed 6.82 sec; Start 9: castup2; 263/413 Test #163: dft-ghost ........................ Passed 8.85 sec; Start 200: freq-isotope2; 264/413 Test #399: json-v11-energy .................. Passed 4.63 sec; Start 143: dfomp2-3; 265/413 Test #337: scf4 ............................. Passed 11.13 sec; Start 393: python-mints2; 266/413 Test #390: python-curve ..................... Passed 5.53 sec; Start 15: cbs-xtpl-freq; 267/413 Test #401: json-schema-1-energy ............. Passed 5.19 sec; Start 392: python-mints9; 268/413 Test #134: dfmp2-4 .......................... Passed 10.28 sec; Start 264: omp3-grad1; 269/413 Test #374: dft-custom-hybrid ................ Passed 12.81 sec; Start 397: python-mints13; 270/413 Test #297: psithon1 ......................... Passed 9.16 sec; Start 253: omp2-grad1; 271/413 Test #270: opt2-fd .......................... Passed 12.50 sec; Start 137: dfmp2-grad2; 272/413 Test #99: cisd-sp .......................... Passed 12.64 sec; Start 234: mp2p5-grad2; 273/413 Test #392: python-mints9 .................... Passed 2.20 sec; Start 182: fsapt-terms; 274/413 Test #397: python-mints13 ................... Passed 2.00 sec; Start 400: json-v11-gradient; 275/413 Test #393: python-mints2 .................... Passed 3.10 sec; Start 187: fci-h2o; 276/413 Test #400: json-v11-gradient ................ Passed 1.99 sec; Start 87: cepa0-grad2; 277/413 Test #89: cepa2 .......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:25107,energy,energy,25107,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,... Passed 2.26 sec; Start 299: pubchem2; 352/412 Test #161: dft-grac ......................... Passed 1.98 sec; Start 211: mcscf2; 353/412 Test #333: scf-occ .......................... Passed 2.58 sec; Start 331: scf-bs; 354/412 Test #362: x2c2 ............................. Passed 2.41 sec; Start 404: json-schema-1-gradient; 355/412 Test #234: mp3-grad1 ........................ Passed 2.93 sec; Start 408: skeletondfmp2; 356/412 Test #86: cepa0-grad1 ...................... Passed 3.26 sec; Start 288: psimrcc-ccsd_t-1; 357/412 Test #363: x2c3 ............................. Passed 2.63 sec; Start 103: decontract; 358/412 Test #400: json-schema-1-energy ............. Passed 4.01 sec; Start 350: sapt-sf1; 359/412 Test #8: castup1 .......................... Passed 2.80 sec; Start 221: mints-helper; 360/412 Test #329: scf-upcast-custom-basis .......... Passed 2.62 sec; Start 381: psi4numpy-cphf; 361/412 Test #299: pubchem2 ......................... Passed 2.35 sec; Start 354: tu1-h2o-energy; 362/412 Test #117: ao-dfcasscf-sp ................... Passed 3.58 sec; Start 379: mints12; 363/412 Test #97: cisd-h2o-clpse ................... Passed 2.91 sec; Start 409: skeletonmointegrals; 364/412 Test #211: mcscf2 ........................... Passed 2.42 sec; Start 223: mints10; 365/412 Test #103: decontract ....................... Passed 1.91 sec; Start 310: pywrap-molecule; 366/412 Test #229: mp2-grad1 ........................ Passed 3.12 sec; Start 215: mints3; 367/412 Test #404: json-schema-1-gradient ........... Passed 2.27 sec; Start 411: skeletonsointegrals; 368/412 Test #331: scf-bs ........................... Passed 2.38 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #247: omp2-1 ........................... Passed 3.37 sec; Start 353: stability2; 370/412 Test #408: skeletondfmp2 .................... Passed 2.24 sec; Start 401: json-schema-1-ghost; 371/412 Test #350: sapt-sf1 ......................... Passed 1.19 sec; Start 399: json-v11-gradient; 372/412 Test #288: p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:33970,energy,energy,33970,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,... Passed 25.71 sec; Start 34: cc19; 31/411 Test #113: dcft7 ............................ Passed 385.53 sec; Start 35: cc2; 32/411 Test #33: cc18 ............................. Passed 27.49 sec; Start 36: cc21; 33/411 Test #24: cc13 ............................. Passed 145.39 sec; Start 37: cc22; 34/411 Test #28: cc13d ............................ Passed 149.42 sec; Start 38: cc23; 35/411 Test #34: cc19 ............................. Passed 41.72 sec; Start 39: cc24; 36/411 Test #37: cc22 ............................. Passed 26.35 sec; Start 40: cc25; 37/411 Test #316: sapt2 ............................ Passed 440.49 sec; Start 41: cc26; 38/411 Test #29: cc14 ............................. Passed 154.70 sec; Start 42: cc27; 39/411 Test #31: cc16 ............................. Passed 148.33 sec; Start 43: cc28; 40/411 Test #182: isapt1 ........................... Passed 531.01 sec; Start 44: cc29; 41/411 Test #43: cc28 ............................. Passed 83.72 sec; Start 45: cc3; 42/411 Test #193: fd-freq-energy-large ............. Passed 592.69 sec; Start 46: cc30; 43/411 Test #181: fsapt-allterms ................... Passed 674.63 sec; Start 47: cc31; 44/411 Test #46: cc30 ............................. Passed 112.17 sec; Start 48: cc32; 45/411 Test #44: cc29 ............................. Passed 193.31 sec; Start 49: cc33; 46/411 Test #48: cc32 ............................. Passed 43.44 sec; Start 50: cc34; 47/411 Test #49: cc33 ............................. Passed 52.44 sec; Start 51: cc35; 48/411 Test #50: cc34 ............................. Passed 40.25 sec; Start 52: cc36; 49/411 Test #52: cc36 ............................. Passed 39.02 sec; Start 53: cc37; 50/411 Test #51: cc35 ............................. Passed 55.42 sec; Start 54: cc38; 51/411 Test #53: cc37 ............................. Passed 23.50 sec; Start 55: cc39; 52/411 Test #278: opt13 ............................ Passed 872.31 sec; Start 56: cc4; 53/411 Test #47: cc31 ............................. Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:4150,energy,energy-large,4150,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy-large']
Energy Efficiency,... Passed 366.03 sec; Start 34: cc18; 31/412 Test #34: cc18 ............................. Passed 33.35 sec; Start 35: cc19; 32/412 Test #317: sapt2 ............................ Passed 402.38 sec; Start 36: cc2; 33/412 Test #33: cc17 ............................. Passed 40.14 sec; Start 37: cc21; 34/412 Test #31: cc15 ............................. Passed 90.60 sec; Start 38: cc22; 35/412 Test #35: cc19 ............................. Passed 58.84 sec; Start 39: cc23; 36/412 Test #38: cc22 ............................. Passed 20.81 sec; Start 40: cc24; 37/412 Test #32: cc16 ............................. Passed 133.66 sec; Start 41: cc25; 38/412 Test #183: isapt1 ........................... Passed 511.86 sec; Start 42: cc26; 39/412 Test #30: cc14 ............................. Passed 193.53 sec; Start 43: cc27; 40/412 Test #25: cc13 ............................. Passed 261.16 sec; Start 44: cc28; 41/412 Test #29: cc13d ............................ Passed 245.55 sec; Start 45: cc29; 42/412 Test #194: fd-freq-energy-large ............. Passed 581.99 sec; Start 46: cc3; 43/412 Test #44: cc28 ............................. Passed 81.53 sec; Start 47: cc30; 44/412 Test #182: fsapt-allterms ................... Passed 650.67 sec; Start 48: cc31; 45/412 Test #48: cc31 ............................. Passed 142.68 sec; Start 49: cc32; 46/412 Test #47: cc30 ............................. Passed 147.82 sec; Start 50: cc33; 47/412 Test #36: cc2 .............................. Passed 403.59 sec; Start 51: cc34; 48/412 Test #45: cc29 ............................. Passed 260.49 sec; Start 52: cc35; 49/412 Test #50: cc33 ............................. Passed 33.60 sec; Start 53: cc36; 50/412 Test #49: cc32 ............................. Passed 41.00 sec; Start 54: cc37; 51/412 Test #51: cc34 ............................. Passed 37.36 sec; Start 55: cc38; 52/412 Test #54: cc37 ............................. Passed 23.49 sec; Start 56: cc39; 53/412 Test #52: cc35 ............................. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:4159,energy,energy-large,4159,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy-large']
Energy Efficiency,... Passed 7.27 sec; Start 351: soscf-large; 87/415 Test #120: dfcasscf-sa-sp ................... Passed 6.28 sec; Start 121: dfcasscf-fzc-sp; 88/415 Test #234: mp2p5-grad1 ...................... Passed 7.74 sec; Start 95: cisd-h2o+-0; 89/415 Test #404: python-3-index-transforms ........ Passed 6.88 sec; Start 187: fci-dipole; 90/415 Test #123: dfccd1 ........................... Passed 7.27 sec; Start 399: python-curve; 91/415 Test #325: sapt1 ............................ Passed 10.68 sec; Start 183: fsapt-terms; 92/415 Test #119: ao-dfcasscf-sp ................... Passed 6.21 sec; Start 349: scf-property; 93/415 Test #122: dfcasscf-sp ...................... Passed 5.74 sec; Start 410: json-schema-1-energy; 94/415 Test #378: scf-hess1 ........................ Passed 10.20 sec; Start 354: stability1; 95/415 Test #121: dfcasscf-fzc-sp .................. Passed 3.14 sec; Start 238: mp2-property; 96/415 Test #95: cisd-h2o+-0 ...................... Passed 2.89 sec; Start 304: psimrcc-sp1; 97/415 Test #408: json-v11-energy .................. Passed 3.99 sec; Start 341: scf1; 98/415 Test #399: python-curve ..................... Passed 3.30 sec; Start 387: pywrap-align; 99/415 Test #410: json-schema-1-energy ............. Passed 2.84 sec; Start 402: python-mints2; 100/415 Test #349: scf-property ..................... Passed 3.57 sec; Start 298: psimrcc-ccsd_t-2; 101/415 Test #351: soscf-large ...................... Passed 5.21 sec; Start 355: dfep2-1; 102/415 Test #390: cc-module ........................ Passed 327.63 sec; Start 182: fsapt2; 103/415 Test #238: mp2-property ..................... Passed 2.53 sec; Start 216: mints2; 104/415 Test #354: stability1 ....................... Passed 3.00 sec; Start 373: x2c3; 105/415 Test #187: fci-dipole ....................... Passed 4.92 sec; Start 388: pywrap-align-chiral; 106/415 Test #183: fsapt-terms ...................... Passed 5.10 sec; Start 366: tu3-h2o-opt; 107/415 Test #298: psimrcc-ccsd_t-2 ................. Passed 1.91,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:9441,energy,energy,9441,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,.... Passed 12.75 sec; Start 351: dft-reference; 309/411 Test #355: tu3-h2o-opt ...................... Passed 6.03 sec; Start 284: props1; 310/411 Test #235: mp2-property ..................... Passed 3.71 sec; Start 253: omp2p5-1; 311/411 Test #231: mp2p5-grad1 ...................... Passed 5.48 sec; Start 314: sad1; 312/411 Test #388: python-curve ..................... Passed 5.36 sec; Start 377: pywrap-align-chiral; 313/411 Test #343: stability1 ....................... Passed 5.20 sec; Start 399: json-schema-1-energy; 314/411 Test #351: dft-reference .................... Passed 4.90 sec; Start 384: psi4numpy-rhf-hessian; 315/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 136: dfmp2-grad3; 316/411 Test #116: ao-dfcasscf-sp ................... Passed 6.35 sec; Start 225: mom; 317/411 Test #310: rasci-c2-active .................. Passed 9.23 sec; Start 213: mints2; 318/411 Test #385: psi4numpy-fci .................... Passed 9.16 sec; Start 397: json-v11-energy; 319/411 Test #370: scf-coverage ..................... Passed 11.16 sec; Start 328: scf-upcast-custom-basis; 320/411 Test #135: dfmp2-grad2 ...................... Passed 15.32 sec; Start 327: scf-guess-read1; 321/411 Test #314: sad1 ............................. Passed 5.26 sec; Start 391: python-mints2; 322/411 Test #234: mp3-grad2 ........................ Passed 9.93 sec; Start 362: x2c3; 323/411 Test #284: props1 ........................... Passed 7.76 sec; Start 228: mp2-grad1; 324/411 Test #399: json-schema-1-energy ............. Passed 5.52 sec; Start 271: opt5; 325/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.49 sec; Start 233: mp3-grad1; 326/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 262: omp3-grad1; 327/411 Test #85: cepa0-grad1 ...................... Passed 9.67 sec; Start 121: dfccdl1; 328/411 Test #328: scf-upcast-custom-basis .......... Passed 2.52 sec; Start 356: scf-response1; 329/411 Test #190: fci-coverage ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:29914,energy,energy,29914,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,".... Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP..............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1948,Energy,Energy,1948,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Energy'],['Energy']
Energy Efficiency,".... Passed 19.43 sec; Start 393: python-memdfjk; 177/401 Test #220: molden2 .......................... Passed 6.09 sec; Start 123: dfccsdl1; 178/401 Test #305: pywrap-molecule .................. Passed 1.23 sec; Start 347: stability2; 179/401 Test #219: molden1 .......................... Passed 5.30 sec; Start 326: scf-bs; 180/401 Test #227: mp2p5-grad1 ...................... Passed 4.58 sec; Start 349: tu2-ch2-energy; 181/401 Test #348: tu1-h2o-energy ................... Passed 1.49 sec; Start 330: scf3; 182/401 Test #239: ocepa1 ........................... Passed 6.49 sec; Start 380: psi4numpy-rhf-gradient; 183/401 Test #115: ao-dfcasscf-sp ................... Passed 2.27 sec; Start 290: psimrcc-sp1; 184/401 Test #400: json-schema_0_gradient ........... Passed 1.81 sec; Start 101: decontract; 185/401 Test #376: cc-module, ....................... Passed 111.71 sec; Start 379: psi4numpy-rhf; 186/401 Test #393: python-memdfjk ................... Passed 1.80 sec; Start 205: mcscf1; 187/401 Test #349: tu2-ch2-energy ................... Passed 1.30 sec; Start 235: numpy-array-interface; 188/401 Test #326: scf-bs ........................... Passed 1.60 sec; Start 384: python-energy; 189/401 Test #330: scf3 ............................. Passed 1.38 sec; Start 204: matrix1; 190/401 Test #380: psi4numpy-rhf-gradient ........... Passed 1.41 sec; Start 359: options1; 191/401 Test #347: stability2 ....................... Passed 1.80 sec; Start 208: mints1; 192/401 Test #379: psi4numpy-rhf .................... Passed 0.87 sec; Start 284: psimrcc-ccsd_t-2; 193/401 Test #235: numpy-array-interface ............ Passed 0.63 sec; Start 285: psimrcc-ccsd_t-3; 194/401 Test #205: mcscf1 ........................... Passed 0.84 sec; Start 283: psimrcc-ccsd_t-1; 195/401 Test #204: matrix1 .......................... Passed 0.67 sec; Start 289: psimrcc-pt2; 196/401 Test #101: decontract ....................... Passed 1.36 sec; Start 1: adc1; 197/401 Test #208: mints1 ......................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:17528,energy,energy,17528,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,.... Passed 3.42 sec; Start 232: mp2p5-grad1; 320/412 Test #385: psi4numpy-rhf-hessian ............ Passed 3.44 sec; Start 346: dfep2-2; 321/412 Test #236: mp2-property ..................... Passed 3.14 sec; Start 357: scf-response1; 322/412 Test #191: fci-coverage ..................... Passed 5.22 sec; Start 328: scf-guess-read1; 323/412 Test #192: fcidump .......................... Passed 5.35 sec; Start 389: python-curve; 324/412 Test #312: rasci-h2o ........................ Passed 2.29 sec; Start 364: zaptn-nh2; 325/412 Test #344: stability1 ....................... Passed 4.29 sec; Start 290: psimrcc-ccsd_t-3; 326/412 Test #356: tu3-h2o-opt ...................... Passed 4.25 sec; Start 334: scf2; 327/412 Test #346: dfep2-2 .......................... Passed 2.31 sec; Start 391: python-mints9; 328/412 Test #328: scf-guess-read1 .................. Passed 1.82 sec; Start 382: psi4numpy-dfmp2; 329/412 Test #315: sad1 ............................. Passed 3.68 sec; Start 398: json-v11-energy; 330/412 Test #214: mints2 ........................... Passed 2.86 sec; Start 204: frac; 331/412 Test #357: scf-response1 .................... Passed 2.98 sec; Start 272: opt5; 332/412 Test #230: mp2-grad2 ........................ Passed 4.46 sec; Start 235: mp3-grad2; 333/412 Test #224: molden1 .......................... Passed 4.52 sec; Start 121: dfccd1; 334/412 Test #232: mp2p5-grad1 ...................... Passed 3.80 sec; Start 222: mints9; 335/412 Test #3: casscf-fzc-sp .................... Passed 11.19 sec; Start 402: json-schema-1-orient; 336/412 Test #334: scf2 ............................. Passed 1.78 sec; Start 86: cepa0-grad1; 337/412 Test #389: python-curve ..................... Passed 3.41 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #233: mp2p5-grad2 ...................... Passed 4.60 sec; Start 396: python-mints13; 339/412 Test #382: psi4numpy-dfmp2 .................. Passed 1.89 sec; Start 234: mp3-grad1; 340/412 Test #290: psimrcc-ccsd_t-3 ................. Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:30946,energy,energy,30946,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,".... Passed 4.46 sec; Start 424: chemps2-scf-n2; 12/12 Test #424: chemps2-scf-n2 ...................***Failed 0.06 sec. 33% tests passed, 8 tests failed out of 12. Label Time Summary:; addon = 0.06 sec*proc (1 test); cart = 0.17 sec*proc (3 tests); casscf = 0.21 sec*proc (1 test); cc = 0.06 sec*proc (1 test); chemps2 = 0.06 sec*proc (1 test); df = 0.06 sec*proc (1 test); dfmp2 = 0.06 sec*proc (1 test); fcidump = 0.06 sec*proc (1 test); json = 4.46 sec*proc (1 test); properties = 0.06 sec*proc (1 test); psi = 17.03 sec*proc (12 tests); psi4numpy = 9.97 sec*proc (2 tests); python = 1.99 sec*proc (1 test); quicktests = 17.03 sec*proc (12 tests); sapt = 0.06 sec*proc (1 test); scf = 0.06 sec*proc (1 test); smoketests = 17.03 sec*proc (12 tests); tutorial = 0.05 sec*proc (1 test). Total Test time (real) = 17.19 sec. The following tests FAILED:; 	 7 - casscf-sp (Failed); 	 22 - cc1 (Failed); 	132 - dfmp2-1 (Failed); 	196 - fcidump (Failed); 	330 - sapt1 (Failed); 	357 - scf-property (Failed); 	372 - tu1-h2o-energy (Failed); 	424 - chemps2-scf-n2 (Failed); Errors while running CTest; ```; The casscf-sp error is; ```; 7/428 Test: casscf-sp; Command: ""/usr/bin/python3.12"" ""/builddir/build/BUILD/psi4-1.3.2/tests/runtest.py"" ""/builddir/build/BUILD/psi4-1.3.2/tests/casscf-sp/input.dat"" ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux; -build/testresults.log"" ""false"" ""/builddir/build/BUILD/psi4-1.3.2"" ""false"" ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/tests/casscf-sp/output.dat"" ""/builddir/build/BUILD/psi4-1.3.2/; redhat-linux-build/stage/bin/psi4"" ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/share/psi4"" ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/lib64/python3.12/site-pac; kages""; Directory: /builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/tests/casscf-sp; ""casscf-sp"" start time: Aug 14 00:32 UTC; Output:; ----------------------------------------------------------; Command ['/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/bin/ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676514680:2146,energy,energy,2146,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676514680,1,['energy'],['energy']
Energy Efficiency,.... Passed 5.45 sec; Start 188: fci-h2o-2; 292/413 Test #193: fcidump .......................... Passed 6.47 sec; Start 236: mp3-grad2; 293/413 Test #87: cepa0-grad2 ...................... Passed 8.50 sec; Start 233: mp2p5-grad1; 294/413 Test #257: omp2p5-grad1 ..................... Passed 8.74 sec; Start 398: python-memdfjk; 295/413 Test #387: psi4numpy-fci .................... Passed 6.92 sec; Start 285: opt-freeze-coords; 296/413 Test #248: omp2-1 ........................... Passed 3.77 sec; Start 238: mpn-bh; 297/413 Test #398: python-memdfjk ................... Passed 1.21 sec; Start 189: fci-h2o-fzcv; 298/413 Test #233: mp2p5-grad1 ...................... Passed 3.60 sec; Start 403: json-schema-1-orient; 299/413 Test #4: casscf-semi ...................... Passed 9.34 sec; Start 225: molden1; 300/413 Test #186: fci-dipole ....................... Passed 8.84 sec; Start 192: fci-coverage; 301/413 Test #94: cisd-h2o+-0 ...................... Passed 6.03 sec; Start 389: python-energy; 302/413 Test #372: scf-coverage ..................... Passed 9.94 sec; Start 255: omp2p5-1; 303/413 Test #95: cisd-h2o+-1 ...................... Passed 6.14 sec; Start 296: psimrcc-sp1; 304/413 Test #331: scf-guess-read2 .................. Passed 7.99 sec; Start 205: frac; 305/413 Test #188: fci-h2o-2 ........................ Passed 6.67 sec; Start 402: json-schema-1-ghost; 306/413 Test #236: mp3-grad2 ........................ Passed 6.28 sec; Start 407: skeleton; 307/413 Test #389: python-energy .................... Passed 1.87 sec; Start 409: skeletondfmp2; 308/413 Test #403: json-schema-1-orient ............. Passed 3.86 sec; Start 259: omp3-1; 309/413 Test #402: json-schema-1-ghost .............. Passed 1.63 sec; Start 226: molden2; 310/413 Test #125: dfccsd1 .......................... Passed 10.80 sec; Start 405: json-schema-1-gradient; 311/413 Test #407: skeleton ......................... Passed 1.57 sec; Start 231: mp2-grad2; 312/413 Test #409: skeletondfmp2 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:28380,energy,energy,28380,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,.... Passed 674.61 sec; Start 195: fd-freq-gradient-large; 18/404 Test #181: fsapt-allterms ................... Passed 133.31 sec; Start 278: opt13; 19/404 Test #35: cc2 .............................. Passed 373.72 sec; Start 114: dcft8; 20/404 Test #76: cc7 .............................. Passed 285.74 sec; Start 111: dcft5; 21/404 Test #42: cc27 ............................. Passed 268.89 sec; Start 112: dcft6; 22/404 Test #41: cc26 ............................. Passed 275.32 sec; Start 162: dft-grad-lr3; 23/404 Test #114: dcft8 ............................ Passed 131.78 sec; Start 359: tu6-cp-ne2; 24/404 Test #111: dcft5 ............................ Passed 174.58 sec; Start 281: opt-irc-2; 25/404 Test #112: dcft6 ............................ Passed 118.43 sec; Start 13: cbs-xtpl-alpha; 26/404 Test #359: tu6-cp-ne2 ....................... Passed 79.02 sec; Start 386: cookbook-rohf-orb-rot; 27/404 Test #162: dft-grad-lr3 ..................... Passed 133.96 sec; Start 29: cc14; 28/404 Test #193: fd-freq-energy-large ............. Passed 251.45 sec; Start 302: pywrap-cbs1; 29/404 Test #278: opt13 ............................ Passed 248.00 sec; Start 379: cc-module; 30/404 Test #195: fd-freq-gradient-large ........... Passed 258.25 sec; Start 24: cc13; 31/404 Test #281: opt-irc-2 ........................ Passed 128.22 sec; Start 25: cc13a; 32/404 Test #302: pywrap-cbs1 ...................... Passed 127.67 sec; Start 113: dcft7; 33/404 Test #13: cbs-xtpl-alpha ................... Passed 218.23 sec; Start 205: frac-traverse; 34/404 Test #379: cc-module ........................ Passed 171.62 sec; Start 316: sapt2; 35/404 Test #386: cookbook-rohf-orb-rot ............ Passed 199.33 sec; Start 318: sapt4; 36/404 Test #29: cc14 ............................. Passed 201.44 sec; Start 325: scf-bz2; 37/404 Test #24: cc13 ............................. Passed 181.11 sec; Start 168: dft1; 38/404 Test #316: sapt2 ............................ Passed 88.23 sec; Start 70: cc52; 39/404 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:2814,energy,energy-large,2814,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy-large']
Energy Efficiency,..... Passed 1210.67 sec; Start 13: cbs-xtpl-alpha; 11/412 Test #146: dfomp2-grad3 ..................... Passed 1227.58 sec; Start 112: dcft5; 12/412 Test #46: cc3 .............................. Passed 1280.30 sec; Start 183: isapt1; 13/412 Test #228: mp2-def2 ......................... Passed 410.01 sec; Start 29: cc13d; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1326.94 sec; Start 360: tu6-cp-ne2; 15/412 Test #307: pywrap-checkrun-uhf .............. Passed 1329.33 sec; Start 387: cookbook-rohf-orb-rot; 16/412 Test #156: dft-grad-lr3 ..................... Passed 429.40 sec; Start 45: cc29; 17/412 Test #301: pywrap-all ....................... Passed 1366.40 sec; Start 380: cc-module; 18/412 Test #104: dcft-grad1 ....................... Passed 1482.58 sec; Start 18: cbs-xtpl-func; 19/412 Test #30: cc14 ............................. Passed 530.98 sec; Start 182: fsapt-allterms; 20/412 Test #42: cc26 ............................. Passed 719.24 sec; Start 194: fd-freq-energy-large; 21/412 Test #25: cc13 ............................. Passed 644.30 sec; Start 196: fd-freq-gradient-large; 22/412 Test #115: dcft8 ............................ Passed 792.13 sec; Start 279: opt13; 23/412 Test #45: cc29 ............................. Passed 353.43 sec; Start 374: dft-custom-mgga; 24/412 Test #36: cc2 .............................. Passed 842.78 sec; Start 32: cc16; 25/412 Test #183: isapt1 ........................... Passed 425.05 sec; Start 282: opt-irc-2; 26/412 Test #112: dcft5 ............................ Passed 486.74 sec; Start 113: dcft6; 27/412 Test #13: cbs-xtpl-alpha ................... Passed 538.76 sec; Start 11: cbs-delta-energy; 28/412 Test #111: dcft4 ............................ Passed 1785.19 sec; Start 71: cc52; 29/412 Test #380: cc-module ........................ Passed 446.77 sec; Start 321: sapt6; 30/412 Test #29: cc13d ............................ Passed 499.20 sec; Start 159: dfscf-bz2; 31/412 Test #387: cookbook-rohf-orb-rot ............ P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:2321,energy,energy-large,2321,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy-large']
Energy Efficiency,..... Passed 14.47 sec; Start 135: dfmp2-grad2; 227/411 Test #324: sapt8 ............................ Passed 15.35 sec; Start 14: cbs-xtpl-energy; 228/411 Test #164: dft-grad1 ........................ Passed 14.70 sec; Start 217: mints6; 229/411 Test #178: fsapt1 ........................... Passed 1823.47 sec; Start 368: scf-freq1; 230/411 Test #350: dft-custom ....................... Passed 14.69 sec; Start 83: cdomp2-1; 231/411 Test #301: pywrap-basis ..................... Passed 16.33 sec; Start 137: dfmp2-grad4; 232/411 Test #286: props3 ........................... Passed 12.39 sec; Start 197: freq-isotope1; 233/411 Test #366: dft-smoke ........................ Passed 14.95 sec; Start 4: casscf-semi; 234/411 Test #285: props2 ........................... Passed 14.42 sec; Start 10: castup3; 235/411 Test #5: casscf-sa-sp ..................... Passed 16.45 sec; Start 372: dft-custom-hybrid; 236/411 Test #217: mints6 ........................... Passed 13.00 sec; Start 369: dft-jk; 237/411 Test #14: cbs-xtpl-energy .................. Passed 15.20 sec; Start 393: python-3-index-transforms; 238/411 Test #291: psimrcc-fd-freq1 ................. Passed 20.11 sec; Start 101: cubeprop; 239/411 Test #135: dfmp2-grad2 ...................... Passed 16.90 sec; Start 141: dfomp2-3; 240/411 Test #176: extern1 .......................... Passed 22.16 sec; Start 357: tu4-h2o-freq; 241/411 Test #338: scf7 ............................. Passed 20.20 sec; Start 255: omp2p5-grad1; 242/411 Test #368: scf-freq1 ........................ Passed 16.31 sec; Start 268: opt2-fd; 243/411 Test #4: casscf-semi ...................... Passed 12.19 sec; Start 335: scf4; 244/411 Test #83: cdomp2-1 ......................... Passed 16.98 sec; Start 108: dcft2; 245/411 Test #137: dfmp2-grad4 ...................... Passed 16.44 sec; Start 132: dfmp2-4; 246/411 Test #141: dfomp2-3 ......................... Passed 8.12 sec; Start 192: fd-freq-energy; 247/411 Test #10: castup3 .......................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:22240,energy,energy,22240,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,..... Passed 17.80 sec; Start 100: cisd-sp-2; 306/412 Test #254: omp2p5-1 ......................... Passed 17.69 sec; Start 142: dfomp2-3; 307/412 Test #258: omp3-1 ........................... Passed 15.85 sec; Start 224: molden1; 308/412 Test #364: zaptn-nh2 ........................ Passed 16.44 sec; Start 225: molden2; 309/412 Test #122: dfccdl1 .......................... Passed 16.03 sec; Start 386: psi4numpy-fci; 310/412 Test #96: cisd-h2o+-2 ...................... Passed 18.81 sec; Start 328: scf-guess-read1; 311/412 Test #270: opt3 ............................. Passed 17.42 sec; Start 263: omp3-grad1; 312/412 Test #100: cisd-sp-2 ........................ Passed 18.93 sec; Start 214: mints2; 313/412 Test #142: dfomp2-3 ......................... Passed 15.59 sec; Start 97: cisd-h2o-clpse; 314/412 Test #224: molden1 .......................... Passed 16.53 sec; Start 233: mp2p5-grad2; 315/412 Test #225: molden2 .......................... Passed 15.70 sec; Start 398: json-v11-energy; 316/412 Test #328: scf-guess-read1 .................. Passed 16.21 sec; Start 247: omp2-1; 317/412 Test #386: psi4numpy-fci .................... Passed 17.08 sec; Start 6: ao-casscf-sp; 318/412 Test #263: omp3-grad1 ....................... Passed 15.82 sec; Start 252: omp2-grad1; 319/412 Test #214: mints2 ........................... Passed 16.37 sec; Start 392: python-mints2; 320/412 Test #97: cisd-h2o-clpse ................... Passed 15.68 sec; Start 311: rasci-c2-active; 321/412 Test #233: mp2p5-grad2 ...................... Passed 16.03 sec; Start 315: sad1; 322/412 Test #398: json-v11-energy .................. Passed 16.80 sec; Start 118: dfcasscf-sa-sp; 323/412 Test #247: omp2-1 ........................... Passed 16.51 sec; Start 295: psimrcc-sp1; 324/412 Test #6: ao-casscf-sp ..................... Passed 17.80 sec; Start 284: opt-freeze-coords; 325/412 Test #252: omp2-grad1 ....................... Passed 16.04 sec; Start 135: dfmp2-grad1; 326/412 Test #392: python-mints2 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:29442,energy,energy,29442,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,..... Passed 20.16 sec; Start 34: cc19; 31/411 Test #28: cc13d ............................ Passed 91.18 sec; Start 35: cc2; 32/411 Test #24: cc13 ............................. Passed 110.07 sec; Start 36: cc21; 33/411 Test #113: dcft7 ............................ Passed 336.20 sec; Start 37: cc22; 34/411 Test #33: cc18 ............................. Passed 28.76 sec; Start 38: cc23; 35/411 Test #37: cc22 ............................. Passed 18.64 sec; Start 39: cc24; 36/411 Test #34: cc19 ............................. Passed 41.62 sec; Start 40: cc25; 37/411 Test #316: sapt2 ............................ Passed 357.46 sec; Start 41: cc26; 38/411 Test #31: cc16 ............................. Passed 96.87 sec; Start 42: cc27; 39/411 Test #29: cc14 ............................. Passed 138.44 sec; Start 43: cc28; 40/411 Test #182: isapt1 ........................... Passed 451.73 sec; Start 44: cc29; 41/411 Test #43: cc28 ............................. Passed 51.58 sec; Start 45: cc3; 42/411 Test #193: fd-freq-energy-large ............. Passed 516.60 sec; Start 46: cc30; 43/411 Test #36: cc21 ............................. Passed 208.66 sec; Start 47: cc31; 44/411 Test #35: cc2 .............................. Passed 229.32 sec; Start 48: cc32; 45/411 Test #38: cc23 ............................. Passed 210.11 sec; Start 49: cc33; 46/411 Test #41: cc26 ............................. Passed 195.39 sec; Start 50: cc34; 47/411 Test #48: cc32 ............................. Passed 14.77 sec; Start 51: cc35; 48/411 Test #50: cc34 ............................. Passed 13.80 sec; Start 52: cc36; 49/411 Test #49: cc33 ............................. Passed 20.22 sec; Start 53: cc37; 50/411 Test #44: cc29 ............................. Passed 117.72 sec; Start 54: cc38; 51/411 Test #40: cc25 ............................. Passed 214.47 sec; Start 55: cc39; 52/411 Test #46: cc30 ............................. Passed 54.50 sec; Start 56: cc4; 53/411 Test #42: cc27 ............................. Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:4145,energy,energy-large,4145,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy-large']
Energy Efficiency,..... Passed 23.24 sec; Start 35: cc2; 32/411 Test #24: cc13 ............................. Passed 107.73 sec; Start 36: cc21; 33/411 Test #28: cc13d ............................ Passed 97.78 sec; Start 37: cc22; 34/411 Test #33: cc18 ............................. Passed 31.39 sec; Start 38: cc23; 35/411 Test #37: cc22 ............................. Passed 18.43 sec; Start 39: cc24; 36/411 Test #34: cc19 ............................. Passed 38.52 sec; Start 40: cc25; 37/411 Test #316: sapt2 ............................ Passed 365.46 sec; Start 41: cc26; 38/411 Test #31: cc16 ............................. Passed 100.51 sec; Start 42: cc27; 39/411 Test #29: cc14 ............................. Passed 150.11 sec; Start 43: cc28; 40/411 Test #43: cc28 ............................. Passed 57.35 sec; Start 44: cc29; 41/411 Test #182: isapt1 ........................... Passed 455.71 sec; Start 45: cc3; 42/411 Test #36: cc21 ............................. Passed 192.05 sec; Start 46: cc30; 43/411 Test #193: fd-freq-energy-large ............. Passed 515.29 sec; Start 47: cc31; 44/411 Test #35: cc2 .............................. Passed 205.18 sec; Start 48: cc32; 45/411 Test #38: cc23 ............................. Passed 196.66 sec; Start 49: cc33; 46/411 Test #48: cc32 ............................. Passed 11.16 sec; Start 50: cc34; 47/411 Test #40: cc25 ............................. Passed 190.82 sec; Start 51: cc35; 48/411 Test #50: cc34 ............................. Passed 12.27 sec; Start 52: cc36; 49/411 Test #42: cc27 ............................. Passed 167.86 sec; Start 53: cc37; 50/411 Test #41: cc26 ............................. Passed 179.39 sec; Start 54: cc38; 51/411 Test #39: cc24 ............................. Passed 208.73 sec; Start 55: cc39; 52/411 Test #49: cc33 ............................. Passed 17.26 sec; Start 56: cc4; 53/411 Test #51: cc35 ............................. Passed 18.20 sec; Start 57: cc40; 54/411 Test #44: cc29 ............................. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:4231,energy,energy-large,4231,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy-large']
Energy Efficiency,..... Passed 4.47 sec; Start 353: stability2; 360/412 Test #234: mp3-grad1 ........................ Passed 9.61 sec; Start 211: mcscf2; 361/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 3.94 sec; Start 363: x2c3; 362/412 Test #225: molden2 .......................... Passed 14.23 sec; Start 355: tu2-ch2-energy; 363/412 Test #409: skeletonmointegrals .............. Passed 3.09 sec; Start 222: mints9; 364/412 Test #97: cisd-h2o-clpse ................... Passed 3.65 sec; Start 223: mints10; 365/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 3.79 sec; Start 411: skeletonsointegrals; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 2.36 sec; Start 396: python-mints13; 367/412 Test #189: fci-tdm .......................... Passed 2.50 sec; Start 221: mints-helper; 368/412 Test #391: python-mints9 .................... Passed 1.96 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #362: x2c2 ............................. Passed 3.13 sec; Start 354: tu1-h2o-energy; 370/412 Test #331: scf-bs ........................... Passed 2.33 sec; Start 103: decontract; 371/412 Test #355: tu2-ch2-energy ................... Passed 1.51 sec; Start 288: psimrcc-ccsd_t-1; 372/412 Test #353: stability2 ....................... Passed 2.45 sec; Start 381: psi4numpy-cphf; 373/412 Test #224: molden1 .......................... Passed 14.30 sec; Start 405: json-schema-1-properties; 374/412 Test #222: mints9 ........................... Passed 1.97 sec; Start 401: json-schema-1-ghost; 375/412 Test #211: mcscf2 ........................... Passed 2.51 sec; Start 397: python-memdfjk; 376/412 Test #411: skeletonsointegrals .............. Passed 1.93 sec; Start 299: pubchem2; 377/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.52 sec; Start 388: python-energy; 378/412 Test #221: mints-helper ..................... Passed 1.67 sec; Start 399: json-v11-gradient; 379/412 Test #223: mints10 .......................... Passed 2.18 sec; Start 335: scf3; 380/412 Test #39,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:34782,energy,energy,34782,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,..... Passed 4.87 sec; Start 272: opt5; 313/412 Test #235: mp3-grad2 ........................ Passed 2.29 sec; Start 122: dfccdl1; 314/412 Test #94: cisd-h2o+-0 ...................... Passed 4.94 sec; Start 295: psimrcc-sp1; 315/412 Test #180: fsapt2 ........................... Passed 5.12 sec; Start 192: fcidump; 316/412 Test #229: mp2-grad1 ........................ Passed 3.11 sec; Start 400: json-schema-1-energy; 317/412 Test #95: cisd-h2o+-1 ...................... Passed 5.23 sec; Start 378: pywrap-align-chiral; 318/412 Test #204: frac ............................. Passed 3.89 sec; Start 344: stability1; 319/412 Test #332: scf1 ............................. Passed 5.47 sec; Start 345: dfep2-1; 320/412 Test #378: pywrap-align-chiral .............. Passed 3.24 sec; Start 389: python-curve; 321/412 Test #120: dfcasscf-sp ...................... Passed 6.79 sec; Start 236: mp2-property; 322/412 Test #356: tu3-h2o-opt ...................... Passed 5.64 sec; Start 398: json-v11-energy; 323/412 Test #400: json-schema-1-energy ............. Passed 4.36 sec; Start 119: dfcasscf-fzc-sp; 324/412 Test #295: psimrcc-sp1 ...................... Passed 5.67 sec; Start 258: omp3-1; 325/412 Test #226: mom .............................. Passed 6.16 sec; Start 352: dft-reference; 326/412 Test #272: opt5 ............................. Passed 6.07 sec; Start 385: psi4numpy-rhf-hessian; 327/412 Test #230: mp2-grad2 ........................ Passed 7.17 sec; Start 364: zaptn-nh2; 328/412 Test #122: dfccdl1 .......................... Passed 6.15 sec; Start 312: rasci-h2o; 329/412 Test #266: opt1 ............................. Passed 8.11 sec; Start 294: psimrcc-pt2; 330/412 Test #344: stability1 ....................... Passed 4.56 sec; Start 392: python-mints2; 331/412 Test #345: dfep2-1 .......................... Passed 4.20 sec; Start 131: dfmp2-2; 332/412 Test #398: json-v11-energy .................. Passed 2.33 sec; Start 214: mints2; 333/412 Test #192: fcidump ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:30283,energy,energy,30283,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,2,['energy'],['energy']
Energy Efficiency,..... Passed 5.50 sec; Start 455: scf-hess3; 152/185 Test #455: scf-hess3 ........................ Passed 13.10 sec; Start 456: scf-hess4; 153/185 Test #456: scf-hess4 ........................ Passed 5.70 sec; Start 457: scf-hess5; 154/185 Test #457: scf-hess5 ........................ Passed 22.81 sec; Start 465: pywrap-bfs; 155/185 Test #465: pywrap-bfs ....................... Passed 16.09 sec; Start 466: pywrap-align; 156/185 Test #466: pywrap-align ..................... Passed 5.06 sec; Start 467: pywrap-align-chiral; 157/185 Test #467: pywrap-align-chiral .............. Passed 3.80 sec; Start 469: cc-module; 158/185 Test #469: cc-module ........................ Passed 23.59 sec; Start 474: tdscf-5; 159/185 Test #474: tdscf-5 .......................... Passed 328.52 sec; Start 475: tdscf-6; 160/185 Test #475: tdscf-6 .......................... Passed 24.27 sec; Start 483: linK-1; 161/185 Test #483: linK-1 ........................... Passed 4.26 sec; Start 486: cbs-xtpl-energy-conv; 162/185 Test #486: cbs-xtpl-energy-conv ............. Passed 17.51 sec; Start 487: ddd-deriv; 163/185 Test #487: ddd-deriv ........................ Passed 17.86 sec; Start 491: psi4numpy-dfmp2; 164/185 Test #491: psi4numpy-dfmp2 .................. Passed 3.86 sec; Start 492: psi4numpy-rhf; 165/185 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 493: psi4numpy-rhf-gradient; 166/185 Test #493: psi4numpy-rhf-gradient ........... Passed 2.37 sec; Start 494: psi4numpy-rhf-hessian; 167/185 Test #494: psi4numpy-rhf-hessian ............ Passed 2.52 sec; Start 499: python-energy; 168/185 Test #499: python-energy .................... Passed 2.39 sec; Start 500: python-curve; 169/185 Test #500: python-curve ..................... Passed 3.30 sec; Start 502: python-mints9; 170/185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #50,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:15131,energy,energy-conv,15131,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,2,['energy'],['energy-conv']
Energy Efficiency,..... Passed 7.83 sec; Start 390: python-curve; 261/413 Test #374: dft-custom-hybrid ................ Passed 9.30 sec; Start 401: json-schema-1-energy; 262/413 Test #134: dfmp2-4 .......................... Passed 5.04 sec; Start 399: json-v11-energy; 263/413 Test #270: opt2-fd .......................... Passed 8.68 sec; Start 143: dfomp2-3; 264/413 Test #89: cepa2 ............................ Passed 3.44 sec; Start 15: cbs-xtpl-freq; 265/413 Test #343: soscf-ref ........................ Passed 5.84 sec; Start 182: fsapt-terms; 266/413 Test #337: scf4 ............................. Passed 7.11 sec; Start 125: dfccsd1; 267/413 Test #390: python-curve ..................... Passed 2.27 sec; Start 372: scf-coverage; 268/413 Test #3: casscf-fzc-sp .................... Passed 4.38 sec; Start 137: dfmp2-grad2; 269/413 Test #297: psithon1 ......................... Passed 4.83 sec; Start 187: fci-h2o; 270/413 Test #401: json-schema-1-energy ............. Passed 2.54 sec; Start 4: casscf-semi; 271/413 Test #399: json-v11-energy .................. Passed 2.20 sec; Start 257: omp2p5-grad1; 272/413 Test #200: freq-isotope2 .................... Passed 4.35 sec; Start 87: cepa0-grad2; 273/413 Test #143: dfomp2-3 ......................... Passed 4.36 sec; Start 186: fci-dipole; 274/413 Test #163: dft-ghost ........................ Passed 8.01 sec; Start 393: python-mints2; 275/413 Test #9: castup2 .......................... Passed 7.47 sec; Start 264: omp3-grad1; 276/413 Test #369: scf-hess1 ........................ Passed 8.45 sec; Start 331: scf-guess-read2; 277/413 Test #125: dfccsd1 .......................... Passed 5.83 sec; Start 253: omp2-grad1; 278/413 Test #372: scf-coverage ..................... Passed 6.09 sec; Start 267: opt1; 279/413 Test #393: python-mints2 .................... Passed 2.54 sec; Start 387: psi4numpy-fci; 280/413 Test #182: fsapt-terms ...................... Passed 7.59 sec; Start 193: fcidump; 281/413 Test #257: omp2p5-grad1 ..................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:25403,energy,energy,25403,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,...... Passed 1.30 sec; Start 235: numpy-array-interface; 188/401 Test #326: scf-bs ........................... Passed 1.60 sec; Start 384: python-energy; 189/401 Test #330: scf3 ............................. Passed 1.38 sec; Start 204: matrix1; 190/401 Test #380: psi4numpy-rhf-gradient ........... Passed 1.41 sec; Start 359: options1; 191/401 Test #347: stability2 ....................... Passed 1.80 sec; Start 208: mints1; 192/401 Test #379: psi4numpy-rhf .................... Passed 0.87 sec; Start 284: psimrcc-ccsd_t-2; 193/401 Test #235: numpy-array-interface ............ Passed 0.63 sec; Start 285: psimrcc-ccsd_t-3; 194/401 Test #205: mcscf1 ........................... Passed 0.84 sec; Start 283: psimrcc-ccsd_t-1; 195/401 Test #204: matrix1 .......................... Passed 0.67 sec; Start 289: psimrcc-pt2; 196/401 Test #101: decontract ....................... Passed 1.36 sec; Start 1: adc1; 197/401 Test #208: mints1 ........................... Passed 0.58 sec; Start 2: adc2; 198/401 Test #384: python-energy .................... Passed 0.78 sec; Start 9: castup2; 199/401 Test #359: options1 ......................... Passed 0.67 sec; Start 10: castup3; 200/401 Test #122: dfccsd1 .......................... Passed 3.17 sec; Start 12: cbs-parser; 201/401 Test #123: dfccsdl1 ......................... Passed 3.14 sec; Start 13: cbs-xtpl-alpha; 202/401 Test #285: psimrcc-ccsd_t-3 ................. Passed 1.29 sec; Start 17: cbs-xtpl-opt; 203/401 Test #283: psimrcc-ccsd_t-1 ................. Passed 1.20 sec; Start 19: cbs-xtpl-wrapper; 204/401 Test #284: psimrcc-ccsd_t-2 ................. Passed 1.39 sec; Start 84: cepa0-grad1; 205/401 Test #289: psimrcc-pt2 ...................... Passed 1.11 sec; Start 85: cepa0-grad2; 206/401 Test #290: psimrcc-sp1 ...................... Passed 2.98 sec; Start 86: cepa1; 207/401 Test #84: cepa0-grad1 ...................... Passed 2.32 sec; Start 87: cepa2; 208/401 Test #85: cepa0-grad2 ...................... Passed 4.19 sec; Start 88: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:18569,energy,energy,18569,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,...... Passed 12.78 sec; Start 235: mp2-property; 304/411 Test #119: dfcasscf-sp ...................... Passed 6.37 sec; Start 343: stability1; 305/411 Test #269: opt3 ............................. Passed 5.68 sec; Start 234: mp3-grad2; 306/411 Test #344: dfep2-1 .......................... Passed 3.98 sec; Start 116: ao-dfcasscf-sp; 307/411 Test #257: omp3-1 ........................... Passed 5.42 sec; Start 85: cepa0-grad1; 308/411 Test #137: dfmp2-grad4 ...................... Passed 12.75 sec; Start 351: dft-reference; 309/411 Test #355: tu3-h2o-opt ...................... Passed 6.03 sec; Start 284: props1; 310/411 Test #235: mp2-property ..................... Passed 3.71 sec; Start 253: omp2p5-1; 311/411 Test #231: mp2p5-grad1 ...................... Passed 5.48 sec; Start 314: sad1; 312/411 Test #388: python-curve ..................... Passed 5.36 sec; Start 377: pywrap-align-chiral; 313/411 Test #343: stability1 ....................... Passed 5.20 sec; Start 399: json-schema-1-energy; 314/411 Test #351: dft-reference .................... Passed 4.90 sec; Start 384: psi4numpy-rhf-hessian; 315/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 136: dfmp2-grad3; 316/411 Test #116: ao-dfcasscf-sp ................... Passed 6.35 sec; Start 225: mom; 317/411 Test #310: rasci-c2-active .................. Passed 9.23 sec; Start 213: mints2; 318/411 Test #385: psi4numpy-fci .................... Passed 9.16 sec; Start 397: json-v11-energy; 319/411 Test #370: scf-coverage ..................... Passed 11.16 sec; Start 328: scf-upcast-custom-basis; 320/411 Test #135: dfmp2-grad2 ...................... Passed 15.32 sec; Start 327: scf-guess-read1; 321/411 Test #314: sad1 ............................. Passed 5.26 sec; Start 391: python-mints2; 322/411 Test #234: mp3-grad2 ........................ Passed 9.93 sec; Start 362: x2c3; 323/411 Test #284: props1 ........................... Passed 7.76 sec; Start 228: mp2-grad1; 324/411 Test #399: json-schema-1-en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:29438,energy,energy,29438,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,...... Passed 120.54 sec; Start 44: cc29; 4/401 Test #177: fsapt-allterms ................... Passed 137.88 sec; Start 39: cc24; 5/401 Test #314: sapt4 ............................ Passed 171.80 sec; Start 41: cc26; 6/401 Test #35: cc2 .............................. Passed 99.07 sec; Start 69: cc52; 7/401 Test #44: cc29 ............................. Passed 63.23 sec; Start 38: cc23; 8/401 Test #112: dcft7 ............................ Passed 242.47 sec; Start 40: cc25; 9/401 Test #69: cc52 ............................. Passed 63.01 sec; Start 61: cc44; 10/401 Test #39: cc24 ............................. Passed 117.59 sec; Start 36: cc21; 11/401 Test #25: cc13a ............................ Passed 261.95 sec; Start 75: cc7; 12/401 Test #274: opt13 ............................ Passed 266.64 sec; Start 74: cc6; 13/401 Test #45: cc3 .............................. Passed 162.14 sec; Start 29: cc14; 14/401 Test #41: cc26 ............................. Passed 100.81 sec; Start 42: cc27; 15/401 Test #189: fd-freq-energy-large ............. Passed 277.33 sec; Start 47: cc31; 16/401 Test #191: fd-freq-gradient-large ........... Passed 278.60 sec; Start 68: cc51; 17/401 Test #178: isapt1 ........................... Passed 294.68 sec; Start 296: pywrap-all; 18/401 Test #61: cc44 ............................. Passed 53.08 sec; Start 73: cc5a; 19/401 Test #68: cc51 ............................. Passed 48.46 sec; Start 24: cc13; 20/401 Test #38: cc23 ............................. Passed 146.07 sec; Start 58: cc41; 21/401 Test #74: cc6 .............................. Passed 64.44 sec; Start 28: cc13d; 22/401 Test #73: cc5a ............................. Passed 46.72 sec; Start 31: cc16; 23/401 Test #47: cc31 ............................. Passed 88.98 sec; Start 60: cc43; 24/401 Test #58: cc41 ............................. Passed 67.08 sec; Start 11: cbs-delta-energy; 25/401 Test #40: cc25 ............................. Passed 185.19 sec; Start 67: cc50; 26/401 Test #174: fsapt1 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:1731,energy,energy-large,1731,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy-large']
Energy Efficiency,...... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf-sp ................... Passed 24.09 sec; Start 234: mp3-grad1; 334/412 Test #352: dft-reference .................... Passed 26.09 sec; Start 294: psimrcc-pt2; 335/412 Test #204: frac ............................. Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ............................. Passed 23.73 sec; Start 412: skeletonwavefunction; 337/412 Test #402: json-schema-1-orient ............. Passed 24.09 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #344: stability1 ....................... Passed 24.31 sec; Start 363: x2c3; 339/412 Test #345: dfep2-1 .......................... Passed 24.96 sec; Start 357: scf-response1; 340/412 Test #236: mp2-property ..................... Passed 25.57 sec; Start 161: dft-grac; 341/412 Test #398: json-v11-energy .................. Passed 24.99 sec; Start 222: mints9; 342/412 Test #232: mp2p5-grad1 ...................... Passed 23.24 sec; Start 334: scf2; 343/412 Test #400: json-schema-1-energy ............. Passed 24.98 sec; Start 409: skeletonmointegrals; 344/412 Test #235: mp3-grad2 ........................ Passed 24.37 sec; Start 382: psi4numpy-dfmp2; 345/412 Test #389: python-curve ..................... Passed 25.55 sec; Start 406: skeleton; 346/412 Test #229: mp2-grad1 ........................ Passed 23.81 sec; Start 353: stability2; 347/412 Test #294: psimrcc-pt2 ...................... Passed 22.73 sec; Start 288: psimrcc-ccsd_t-1; 348/412 Test #131: dfmp2-2 .......................... Passed 24.04 sec; Start 391: python-mints9; 349/412 Test #121: dfccd1 ........................... Passed 23.41 sec; Start 8: castup1; 350/412 Test #234: mp3-grad1 ........................ Passed 24.08 sec; Start 408: skeletondfmp2; 351/412 Test #412: skeletonwavefunction ............. Passed 24.24 sec; Start 189: fci-tdm; 352/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 24.24 sec; Start 211: mcscf2; 353/412 Test #161: dft-grac ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:32331,energy,energy,32331,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,...... Passed 3.12 sec; Start 353: stability2; 357/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 2.63 sec; Start 189: fci-tdm; 358/412 Test #8: castup1 .......................... Passed 1.52 sec; Start 391: python-mints9; 359/412 Test #357: scf-response1 .................... Passed 2.27 sec; Start 288: psimrcc-ccsd_t-1; 360/412 Test #406: skeleton ......................... Passed 2.68 sec; Start 331: scf-bs; 361/412 Test #391: python-mints9 .................... Passed 2.06 sec; Start 222: mints9; 362/412 Test #363: x2c3 ............................. Passed 3.28 sec; Start 299: pubchem2; 363/412 Test #334: scf2 ............................. Passed 3.04 sec; Start 404: json-schema-1-gradient; 364/412 Test #382: psi4numpy-dfmp2 .................. Passed 3.35 sec; Start 396: python-mints13; 365/412 Test #211: mcscf2 ........................... Passed 3.25 sec; Start 223: mints10; 366/412 Test #161: dft-grac ......................... Passed 3.59 sec; Start 354: tu1-h2o-energy; 367/412 Test #409: skeletonmointegrals .............. Passed 4.13 sec; Start 103: decontract; 368/412 Test #362: x2c2 ............................. Passed 4.28 sec; Start 411: skeletonsointegrals; 369/412 Test #353: stability2 ....................... Passed 3.95 sec; Start 221: mints-helper; 370/412 Test #299: pubchem2 ......................... Passed 1.69 sec; Start 355: tu2-ch2-energy; 371/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 3.29 sec; Start 215: mints3; 372/412 Test #189: fci-tdm .......................... Passed 3.92 sec; Start 384: psi4numpy-rhf-gradient; 373/412 Test #97: cisd-h2o-clpse ................... Passed 5.09 sec; Start 381: psi4numpy-cphf; 374/412 Test #331: scf-bs ........................... Passed 2.43 sec; Start 405: json-schema-1-properties; 375/412 Test #222: mints9 ........................... Passed 2.16 sec; Start 399: json-v11-gradient; 376/412 Test #404: json-schema-1-gradient ........... Passed 2.15 sec; Start 397: python-memdfjk; 377/412 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:34477,energy,energy,34477,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,...... Passed 4.55 sec; Start 409: skeletonmointegrals; 353/412 Test #350: sapt-sf1 ......................... Passed 3.81 sec; Start 404: json-schema-1-gradient; 354/412 Test #229: mp2-grad1 ........................ Passed 7.75 sec; Start 362: x2c2; 355/412 Test #334: scf2 ............................. Passed 3.30 sec; Start 189: fci-tdm; 356/412 Test #346: dfep2-2 .......................... Passed 4.09 sec; Start 382: psi4numpy-dfmp2; 357/412 Test #408: skeletondfmp2 .................... Passed 3.77 sec; Start 391: python-mints9; 358/412 Test #404: json-schema-1-gradient ........... Passed 2.04 sec; Start 331: scf-bs; 359/412 Test #402: json-schema-1-orient ............. Passed 4.47 sec; Start 353: stability2; 360/412 Test #234: mp3-grad1 ........................ Passed 9.61 sec; Start 211: mcscf2; 361/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 3.94 sec; Start 363: x2c3; 362/412 Test #225: molden2 .......................... Passed 14.23 sec; Start 355: tu2-ch2-energy; 363/412 Test #409: skeletonmointegrals .............. Passed 3.09 sec; Start 222: mints9; 364/412 Test #97: cisd-h2o-clpse ................... Passed 3.65 sec; Start 223: mints10; 365/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 3.79 sec; Start 411: skeletonsointegrals; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 2.36 sec; Start 396: python-mints13; 367/412 Test #189: fci-tdm .......................... Passed 2.50 sec; Start 221: mints-helper; 368/412 Test #391: python-mints9 .................... Passed 1.96 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #362: x2c2 ............................. Passed 3.13 sec; Start 354: tu1-h2o-energy; 370/412 Test #331: scf-bs ........................... Passed 2.33 sec; Start 103: decontract; 371/412 Test #355: tu2-ch2-energy ................... Passed 1.51 sec; Start 288: psimrcc-ccsd_t-1; 372/412 Test #353: stability2 ....................... Passed 2.45 sec; Start 381: psi4numpy-cphf; 373/412 Test #224: molden1 ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:34101,energy,energy,34101,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,...... Passed 75.45 sec; Start 345: dfep2-2; 331/411 Test #317: sapt3 ............................ Passed 76.62 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 4.52 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 15.89 sec; Start 349: sapt-sf1; 335/411 Test #341: soscf-ref ........................ Passed 14.83 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 32.53 sec; Start 351: dft-reference; 337/411 Test #349: sapt-sf1 ......................... Passed 5.59 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.67 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.51 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.42 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.23 sec; Start 356: scf-response1; 342/411 Test #355: tu3-h2o-opt ...................... Passed 3.24 sec; Start 357: tu4-h2o-freq; 343/411 Test #337: scf6 ............................. Passed 39.47 sec; Start 358: tu5-sapt; 344/411 Test #356: scf-response1 .................... Passed 2.66 sec; Start 359: tu6-cp-ne2; 345/411 Test #350: dft-custom ....................... Passed 13.31 sec; Start 360: x2c1; 346/411 Test #346: sapt-dft1 ........................ Passed 23.57 sec; Start 361: x2c2; 347/411 Test #342: soscf-dft ........................ Passed 32.76 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 3.88 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.58 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.57 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 4.29 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:31863,energy,energy,31863,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,....... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 378/404 Test #298: pubchem2 ......................... Passed 1.40 sec; Start 214: mints3; 379/404 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.22 sec; Start 387: python-energy; 380/404 Test #404: json-schema-1-properties ......... Passed 1.02 sec; Start 402: json-schema-1-throws; 381/404 Test #383: psi4numpy-rhf-gradient ........... Passed 0.98 sec; Start 188: fci-tdm; 382/404 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.18 sec; Start 396: python-memdfjk; 383/404 Test #309: pywrap-molecule .................. Passed 1.10 sec; Start 334: scf3; 384/404 Test #378: mints12 .......................... Passed 1.13 sec; Start 211: mcscf3; 385/404 Test #220: mints-helper ..................... Passed 1.23 sec; Start 209: mcscf1; 386/404 Test #214: mints3 ........................... Passed 1.05 sec; Start 382: psi4numpy-rhf; 387/404 Test #402: json-schema-1-throws ............. Passed 0.57 sec; Start 308: pywrap-db3; 388/404 Test #387: python-energy .................... Passed 0.81 sec; Start 239: numpy-array-interface; 389/404 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 364: options1; 390/404 Test #334: scf3 ............................. Passed 0.82 sec; Start 208: matrix1; 391/404 Test #211: mcscf3 ........................... Passed 0.80 sec; Start 175: docs-dft; 392/404 Test #396: python-memdfjk ................... Passed 0.92 sec; Start 216: mints5; 393/404 Test #209: mcscf1 ........................... Passed 0.78 sec; Start 212: mints1; 394/404 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 395/404 Test #308: pywrap-db3 ....................... Passed 0.71 sec; Start 215: mints4; 396/404 Test #239: numpy-array-interface ............ Passed 0.62 sec; Start 87: cepa1; 397/404 Test #364: options1 ......................... Passed 0.58 sec; 398/404 Test #208: matrix1 .......................... Passed 0.56 sec; 399/404 Test #175: docs-dft ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:36143,energy,energy,36143,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,....... Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed 497.43 sec; Start 184: isapt2; 44/412 Test #59: cc41 ............................. Passed 78.71 sec; Start 105: dcft-grad2; 45/412 Test #61: cc43 ............................. Passed 53.47 sec; Start 155: dft-grad-lr2; 46/412 Test #48: cc31 ............................. Passed 121.57 sec; Start 169: dft1; 47/412 Test #182: fsapt-allterms ................... Passed 576.36 sec; Start 303: pywrap-cbs1; 48/412 Test #105: dcft-grad2 ....................... Passed 66.83 sec; Start 75: cc5a; 49/412 Test #348: sapt-dft2 ........................ Passed 127.69 sec; Start 26: cc13a; 50/412 Test #303: pywrap-cbs1 ...................... Passed 50.85 sec; Start 114: dcft7; 51/412 Test #184: isapt2 ........................... Passed 125.81 sec; Start 206: frac-traverse; 52/412 Test #155: dft-grad-lr2 ..................... Passed 105.50 sec; Start 317: sapt2; 53/412 Test #75: cc5a ............................. Passed 56.09 sec; Start 319: sapt4; 54/4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:4212,energy,energy-large,4212,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy-large']
Energy Efficiency,....... Passed 11.34 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.84 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.53 sec; Start 347: sapt-dft2; 333/411 Test #340: soscf-large ...................... Passed 15.14 sec; Start 348: sapt-compare; 334/411 Test #345: dfep2-2 .......................... Passed 2.23 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.24 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 34.70 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 33.58 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.63 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.12 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.52 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.17 sec; Start 356: scf-response1; 342/411 Test #356: scf-response1 .................... Passed 2.45 sec; Start 357: tu4-h2o-freq; 343/411 Test #350: dft-custom ....................... Passed 13.99 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.92 sec; Start 359: tu6-cp-ne2; 345/411 Test #346: sapt-dft1 ........................ Passed 22.50 sec; Start 360: x2c1; 346/411 Test #342: soscf-dft ........................ Passed 33.42 sec; Start 361: x2c2; 347/411 Test #357: tu4-h2o-freq ..................... Passed 10.29 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.36 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.84 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.60 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 3.28 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:31800,energy,energy,31800,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy']
Energy Efficiency,....... Passed 2.52 sec; Start 180: fsapt-terms; 277/404 Test #329: scf-guess-read2 .................. Passed 2.96 sec; Start 224: molden2; 278/404 Test #265: opt1 ............................. Passed 2.30 sec; Start 190: fci-coverage; 279/404 Test #158: dft-ghost ........................ Passed 5.90 sec; Start 283: opt-freeze-coords; 280/404 Test #6: ao-casscf-sp ..................... Passed 2.75 sec; Start 339: scf-property; 281/404 Test #223: molden1 .......................... Passed 1.19 sec; Start 286: props3; 282/404 Test #224: molden2 .......................... Passed 1.61 sec; Start 400: json-schema-1-ghost; 283/404 Test #190: fci-coverage ..................... Passed 1.78 sec; Start 185: fci-h2o; 284/404 Test #393: python-3-index-transforms ........ Passed 6.24 sec; Start 184: fci-dipole; 285/404 Test #400: json-schema-1-ghost .............. Passed 0.97 sec; Start 340: soscf-large; 286/404 Test #283: opt-freeze-coords ................ Passed 2.80 sec; Start 399: json-schema-1-energy; 287/404 Test #171: dft2 ............................. Passed 4.80 sec; Start 141: dfomp2-3; 288/404 Test #339: scf-property ..................... Passed 3.08 sec; Start 360: x2c1; 289/404 Test #180: fsapt-terms ...................... Passed 4.85 sec; Start 401: json-schema-1-orient; 290/404 Test #399: json-schema-1-energy ............. Passed 1.59 sec; Start 191: fcidump; 291/404 Test #141: dfomp2-3 ......................... Passed 1.61 sec; Start 121: dfccdl1; 292/404 Test #185: fci-h2o .......................... Passed 3.63 sec; Start 376: pywrap-align; 293/404 Test #286: props3 ........................... Passed 4.82 sec; Start 331: scf1; 294/404 Test #184: fci-dipole ....................... Passed 3.85 sec; Start 186: fci-h2o-2; 295/404 Test #401: json-schema-1-orient ............. Passed 1.77 sec; Start 217: mints6; 296/404 Test #121: dfccdl1 .......................... Passed 1.41 sec; Start 85: cepa0-grad1; 297/404 Test #340: soscf-large ...................... Passed 4.47,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:26581,energy,energy,26581,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,....... Passed 2.97 sec; Start 171: dft-vv10; 228/413 Test #167: dft-grad2 ........................ Passed 17.74 sec; Start 399: json-v11-energy; 229/413 Test #102: cubeprop ......................... Passed 10.53 sec; Start 268: opt1-fd; 230/413 Test #399: json-v11-energy .................. Passed 2.75 sec; Start 326: sapt8; 231/413 Test #166: dft-grad1 ........................ Passed 15.11 sec; Start 129: dfccsdt1; 232/413 Test #10: castup3 .......................... Passed 7.13 sec; Start 342: soscf-large; 233/413 Test #155: dft-grad-lr1 ..................... Passed 17.87 sec; Start 352: dft-custom; 234/413 Test #293: psimrcc-fd-freq1 ................. Passed 11.67 sec; Start 393: python-mints2; 235/413 Test #317: sapt1 ............................ Passed 18.32 sec; Start 390: python-curve; 236/413 Test #323: sapt-dft-api ..................... Passed 17.88 sec; Start 5: casscf-sa-sp; 237/413 Test #303: pywrap-basis ..................... Passed 13.99 sec; Start 401: json-schema-1-energy; 238/413 Test #367: cubeprop-esp ..................... Passed 9.61 sec; Start 228: mp2-1; 239/413 Test #393: python-mints2 .................... Passed 2.76 sec; Start 219: mints6; 240/413 Test #129: dfccsdt1 ......................... Passed 5.36 sec; Start 392: python-mints9; 241/413 Test #390: python-curve ..................... Passed 4.64 sec; Start 159: dfrasscf-sp; 242/413 Test #368: dft-smoke ........................ Passed 14.37 sec; Start 397: python-mints13; 243/413 Test #220: mints8 ........................... Passed 16.36 sec; Start 400: json-v11-gradient; 244/413 Test #401: json-schema-1-energy ............. Passed 4.15 sec; Start 340: scf7; 245/413 Test #400: json-v11-gradient ................ Passed 1.40 sec; Start 288: props3; 246/413 Test #392: python-mints9 .................... Passed 2.15 sec; Start 272: opt4; 247/413 Test #397: python-mints13 ................... Passed 2.07 sec; Start 126: dfccsdl1; 248/413 Test #268: opt1-fd .......................... Passed 9.74 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:22369,energy,energy,22369,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,....... Passed 21.39 sec; Start 184: fci-dipole; 185/411 Test #177: extern2 .......................... Passed 25.58 sec; Start 185: fci-h2o; 186/411 Test #184: fci-dipole ....................... Passed 8.00 sec; Start 186: fci-h2o-2; 187/411 Test #168: dft1 ............................. Passed 107.43 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 7.69 sec; Start 188: fci-tdm; 189/411 Test #186: fci-h2o-2 ........................ Passed 6.82 sec; Start 189: fci-tdm-2; 190/411 Test #188: fci-tdm .......................... Passed 4.98 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 9.54 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 16.54 sec; Start 192: fd-freq-energy; 193/411 Test #189: fci-tdm-2 ........................ Passed 23.42 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 22.38 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 19.98 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 38.34 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 23.86 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 13.68 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 51.66 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 38.62 sec; Start 202: fnocc4; 201/411 Test #183: isapt2 ........................... Passed 125.82 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 7.79 sec; Start 204: frac-ip-fitting; 203/411 Test #201: fnocc3 ........................... Passed 46.40 sec; Start 206: ghosts; 204/411 Test #202: fnocc4 ........................... Passed 39.83 sec; Start 207: gibbs; 205/411 Test #206: ghosts ........................... Passed 31.89 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:18015,energy,energy,18015,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['energy'],['energy']
Energy Efficiency,....... Passed 8.67 sec; Start 185: fci-h2o; 186/411 Test #184: fci-dipole ....................... Passed 8.39 sec; Start 186: fci-h2o-2; 187/411 Test #176: extern1 .......................... Passed 20.31 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 8.16 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 0.88 sec; Start 189: fci-tdm-2; 190/411 Test #186: fci-h2o-2 ........................ Passed 10.10 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 7.22 sec; Start 191: fcidump; 192/411 Test #177: extern2 .......................... Passed 27.27 sec; Start 192: fd-freq-energy; 193/411 Test #191: fcidump .......................... Passed 6.53 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 7.87 sec; Start 196: fd-gradient; 195/411 Test #168: dft1 ............................. Passed 106.60 sec; Start 197: freq-isotope1; 196/411 Test #192: fd-freq-energy ................... Passed 11.70 sec; Start 198: freq-isotope2; 197/411 Test #189: fci-tdm-2 ........................ Passed 24.01 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 10.11 sec; Start 200: fnocc2; 199/411 Test #197: freq-isotope1 .................... Passed 17.28 sec; Start 201: fnocc3; 200/411 Test #194: fd-freq-gradient ................. Passed 26.25 sec; Start 202: fnocc4; 201/411 Test #199: fnocc1 ........................... Passed 21.50 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 5.66 sec; Start 204: frac-ip-fitting; 203/411 Test #196: fd-gradient ...................... Passed 40.24 sec; Start 206: ghosts; 204/411 Test #201: fnocc3 ........................... Passed 24.13 sec; Start 207: gibbs; 205/411 Test #202: fnocc4 ........................... Passed 28.77 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.55 sec; Start 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:18120,energy,energy,18120,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency,........ Passed 1.81 sec; Start 413: skeletonwavefunction; 263/413 Test #368: dft-smoke ........................ Passed 16.06 sec; Start 359: tu4-h2o-freq; 264/413 Test #413: skeletonwavefunction ............. Passed 1.56 sec; Start 7: casscf-sp; 265/413 Test #326: sapt8 ............................ Passed 15.51 sec; Start 374: dft-custom-hybrid; 266/413 Test #293: psimrcc-fd-freq1 ................. Passed 18.54 sec; Start 337: scf4; 267/413 Test #219: mints6 ........................... Passed 13.03 sec; Start 386: psi4numpy-rhf-hessian; 268/413 Test #367: cubeprop-esp ..................... Passed 9.70 sec; Start 287: props2; 269/413 Test #270: opt2-fd .......................... Passed 9.87 sec; Start 371: dft-jk; 270/413 Test #340: scf7 ............................. Passed 13.04 sec; Start 362: x2c1; 271/413 Test #352: dft-custom ....................... Passed 15.15 sec; Start 89: cepa2; 272/413 Test #386: psi4numpy-rhf-hessian ............ Passed 3.15 sec; Start 383: psi4numpy-dfmp2; 273/413 Test #14: cbs-xtpl-energy .................. Passed 12.31 sec; Start 125: dfccsd1; 274/413 Test #383: psi4numpy-dfmp2 .................. Passed 1.89 sec; Start 370: scf-freq1; 275/413 Test #288: props3 ........................... Passed 13.44 sec; Start 5: casscf-sa-sp; 276/413 Test #359: tu4-h2o-freq ..................... Passed 11.03 sec; Start 228: mp2-1; 277/413 Test #374: dft-custom-hybrid ................ Passed 10.39 sec; Start 95: cisd-h2o+-1; 278/413 Test #337: scf4 ............................. Passed 9.69 sec; Start 99: cisd-sp; 279/413 Test #125: dfccsd1 .......................... Passed 9.09 sec; Start 385: psi4numpy-rhf-gradient; 280/413 Test #371: dft-jk ........................... Passed 11.19 sec; Start 200: freq-isotope2; 281/413 Test #95: cisd-h2o+-1 ...................... Passed 5.07 sec; Start 126: dfccsdl1; 282/413 Test #287: props2 ........................... Passed 14.44 sec; Start 296: psimrcc-sp1; 283/413 Test #385: psi4numpy-rhf-gradient ........... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:25805,energy,energy,25805,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,........ Passed 10.08 sec; Start 376: cubeprop-esp; 76/415 Test #274: opt1 ............................. Passed 11.75 sec; Start 325: sapt1; 77/415 Test #226: molden1 .......................... Passed 14.09 sec; Start 378: scf-hess1; 78/415 Test #227: molden2 .......................... Passed 12.71 sec; Start 239: mpn-bh; 79/415 Test #292: opt-freeze-coords ................ Passed 8.13 sec; Start 234: mp2p5-grad1; 80/415 Test #334: sapt8 ............................ Passed 16.61 sec; Start 123: dfccd1; 81/415 Test #369: tu5-sapt ......................... Passed 12.10 sec; Start 120: dfcasscf-sa-sp; 82/415 Test #376: cubeprop-esp ..................... Passed 7.51 sec; Start 404: python-3-index-transforms; 83/415 Test #137: dfmp2-grad1 ...................... Passed 9.29 sec; Start 119: ao-dfcasscf-sp; 84/415 Test #160: dfrasscf-sp ...................... Passed 14.00 sec; Start 122: dfcasscf-sp; 85/415 Test #305: psithon1 ......................... Passed 14.10 sec; Start 408: json-v11-energy; 86/415 Test #239: mpn-bh ........................... Passed 7.27 sec; Start 351: soscf-large; 87/415 Test #120: dfcasscf-sa-sp ................... Passed 6.28 sec; Start 121: dfcasscf-fzc-sp; 88/415 Test #234: mp2p5-grad1 ...................... Passed 7.74 sec; Start 95: cisd-h2o+-0; 89/415 Test #404: python-3-index-transforms ........ Passed 6.88 sec; Start 187: fci-dipole; 90/415 Test #123: dfccd1 ........................... Passed 7.27 sec; Start 399: python-curve; 91/415 Test #325: sapt1 ............................ Passed 10.68 sec; Start 183: fsapt-terms; 92/415 Test #119: ao-dfcasscf-sp ................... Passed 6.21 sec; Start 349: scf-property; 93/415 Test #122: dfcasscf-sp ...................... Passed 5.74 sec; Start 410: json-schema-1-energy; 94/415 Test #378: scf-hess1 ........................ Passed 10.20 sec; Start 354: stability1; 95/415 Test #121: dfcasscf-fzc-sp .................. Passed 3.14 sec; Start 238: mp2-property; 96/415 Test #95: cisd-h2o+-0 ...........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:8358,energy,energy,8358,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,........ Passed 10.10 sec; Start 184: fci-dipole; 185/411 Test #184: fci-dipole ....................... Passed 7.67 sec; Start 185: fci-h2o; 186/411 Test #177: extern2 .......................... Passed 31.38 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 6.97 sec; Start 187: fci-h2o-fzcv; 188/411 Test #186: fci-h2o-2 ........................ Passed 6.73 sec; Start 188: fci-tdm; 189/411 Test #187: fci-h2o-fzcv ..................... Passed 6.96 sec; Start 189: fci-tdm-2; 190/411 Test #168: dft1 ............................. Passed 110.06 sec; Start 190: fci-coverage; 191/411 Test #188: fci-tdm .......................... Passed 4.23 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.92 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 13.34 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.83 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 11.83 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 29.49 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 22.34 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 8.47 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 43.09 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 25.22 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 21.28 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 6.10 sec; Start 204: frac-ip-fitting; 203/411 Test #103: dcft-grad1 ....................... Passed 953.45 sec; Start 206: ghosts; 204/411 Test #202: fnocc4 ........................... Passed 27.78 sec; Start 207: gibbs; 205/411 Test #183: isapt2 ........................... Passed 127.46 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:18022,energy,energy,18022,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['energy'],['energy']
Energy Efficiency,........ Passed 16.74 sec; Start 102: cubeprop; 220/413 Test #141: dfomp2-1 ......................... Passed 4.81 sec; Start 303: pywrap-basis; 221/413 Test #124: dfccd-grad1 ...................... Passed 6.57 sec; Start 293: psimrcc-fd-freq1; 222/413 Test #324: sapt-dft-lrc ..................... Passed 20.75 sec; Start 220: mints8; 223/413 Test #110: dcft2 ............................ Passed 3.15 sec; Start 139: dfmp2-grad4; 224/413 Test #199: freq-isotope1 .................... Passed 11.17 sec; Start 368: dft-smoke; 225/413 Test #292: psimrcc-ccsd_t-4 ................. Passed 19.36 sec; Start 10: castup3; 226/413 Test #298: psithon2 ......................... Passed 15.94 sec; Start 367: cubeprop-esp; 227/413 Test #139: dfmp2-grad4 ...................... Passed 2.97 sec; Start 171: dft-vv10; 228/413 Test #167: dft-grad2 ........................ Passed 17.74 sec; Start 399: json-v11-energy; 229/413 Test #102: cubeprop ......................... Passed 10.53 sec; Start 268: opt1-fd; 230/413 Test #399: json-v11-energy .................. Passed 2.75 sec; Start 326: sapt8; 231/413 Test #166: dft-grad1 ........................ Passed 15.11 sec; Start 129: dfccsdt1; 232/413 Test #10: castup3 .......................... Passed 7.13 sec; Start 342: soscf-large; 233/413 Test #155: dft-grad-lr1 ..................... Passed 17.87 sec; Start 352: dft-custom; 234/413 Test #293: psimrcc-fd-freq1 ................. Passed 11.67 sec; Start 393: python-mints2; 235/413 Test #317: sapt1 ............................ Passed 18.32 sec; Start 390: python-curve; 236/413 Test #323: sapt-dft-api ..................... Passed 17.88 sec; Start 5: casscf-sa-sp; 237/413 Test #303: pywrap-basis ..................... Passed 13.99 sec; Start 401: json-schema-1-energy; 238/413 Test #367: cubeprop-esp ..................... Passed 9.61 sec; Start 228: mp2-1; 239/413 Test #393: python-mints2 .................... Passed 2.76 sec; Start 219: mints6; 240/413 Test #129: dfccsdt1 ......................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:21639,energy,energy,21639,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,........ Passed 18.39 sec; Start 139: dfomp2-1; 230/411 Test #368: scf-freq1 ........................ Passed 11.13 sec; Start 122: dfccd-grad1; 231/411 Test #338: scf7 ............................. Passed 13.09 sec; Start 268: opt2-fd; 232/411 Test #98: cisd-sp .......................... Passed 9.44 sec; Start 369: dft-jk; 233/411 Test #139: dfomp2-1 ......................... Passed 8.89 sec; Start 127: dfccsdt1; 234/411 Test #285: props2 ........................... Passed 14.75 sec; Start 372: dft-custom-hybrid; 235/411 Test #14: cbs-xtpl-energy .................. Passed 14.69 sec; Start 101: cubeprop; 236/411 Test #201: fnocc3 ........................... Passed 17.46 sec; Start 393: python-3-index-transforms; 237/411 Test #268: opt2-fd .......................... Passed 12.91 sec; Start 266: opt1-fd; 238/411 Test #122: dfccd-grad1 ...................... Passed 13.35 sec; Start 141: dfomp2-3; 239/411 Test #127: dfccsdt1 ......................... Passed 7.70 sec; Start 192: fd-freq-energy; 240/411 Test #369: dft-jk ........................... Passed 13.09 sec; Start 197: freq-isotope1; 241/411 Test #141: dfomp2-3 ......................... Passed 6.05 sec; Start 15: cbs-xtpl-freq; 242/411 Test #101: cubeprop ......................... Passed 10.02 sec; Start 357: tu4-h2o-freq; 243/411 Test #372: dft-custom-hybrid ................ Passed 11.78 sec; Start 132: dfmp2-4; 244/411 Test #393: python-3-index-transforms ........ Passed 9.38 sec; Start 90: cepa1; 245/411 Test #266: opt1-fd .......................... Passed 10.40 sec; Start 123: dfccsd1; 246/411 Test #192: fd-freq-energy ................... Passed 9.49 sec; Start 365: cubeprop-esp; 247/411 Test #123: dfccsd1 .......................... Passed 3.18 sec; Start 180: fsapt-terms; 248/411 Test #15: cbs-xtpl-freq .................... Passed 8.72 sec; Start 88: cepa2; 249/411 Test #132: dfmp2-4 .......................... Passed 6.41 sec; Start 367: scf-hess1; 250/411 Test #197: freq-isotope1 .................... Passed 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:22355,energy,energy,22355,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,........ Passed 99.92 sec; Start 293: psimrcc-fd-freq2; 58/412 Test #47: cc30 ............................. Passed 48.45 sec; Start 205: frac-ip-fitting; 59/412 Test #326: scf-bz2 .......................... Passed 165.53 sec; Start 168: dft-b3lyp; 60/412 Test #92: cepa-module ...................... Passed 64.56 sec; Start 193: fd-freq-energy; 61/412 Test #281: opt-irc-1 ........................ Passed 86.58 sec; Start 231: mp2-module; 62/412 Test #320: sapt5 ............................ Passed 93.23 sec; Start 17: cbs-xtpl-opt; 63/412 Test #76: cc6 .............................. Passed 75.78 sec; Start 20: cbs-xtpl-wrapper; 64/412 Test #70: cc51 ............................. Passed 87.01 sec; Start 260: omp3-3; 65/412 Test #205: frac-ip-fitting .................. Passed 76.46 sec; Start 390: python-pubchem; 66/412 Test #206: frac-traverse .................... Passed 244.37 sec; Start 62: cc44; 67/412 Test #293: psimrcc-fd-freq2 ................. Passed 85.30 sec; Start 261: omp3-4; 68/412 Test #193: fd-freq-energy ................... Passed 63.85 sec; Start 116: dcft9; 69/412 Test #168: dft-b3lyp ........................ Passed 82.97 sec; Start 298: pubchem1; 70/412 Test #26: cc13a ............................ Passed 316.11 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 82.21 sec; Start 21: cc1; 72/412 Test #20: cbs-xtpl-wrapper ................. Passed 82.20 sec; Start 243: ocepa-grad2; 73/412 Test #390: python-pubchem ................... Passed 77.47 sec; Start 19: cbs-xtpl-nbody; 74/412 Test #17: cbs-xtpl-opt ..................... Passed 98.26 sec; Start 28: cc13c; 75/412 Test #114: dcft7 ............................ Passed 323.56 sec; Start 27: cc13b; 76/412 Test #260: omp3-3 ........................... Passed 91.31 sec; Start 245: ocepa2; 77/412 Test #62: cc44 ............................. Passed 89.37 sec; Start 264: omp3-grad2; 78/412 Test #261: omp3-4 ........................... Passed 96.80 sec; Start 101: ci-property; 79/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:6705,energy,energy,6705,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,......... Passed 1.09 sec; Start 411: skeletonwavefunction; 379/411 Test #220: mints-helper ..................... Passed 2.03 sec; Start 349: sapt-sf1; 380/411 Test #398: json-v11-gradient ................ Passed 2.22 sec; Start 396: python-memdfjk; 381/411 Test #209: mcscf1 ........................... Passed 3.10 sec; Start 239: numpy-array-interface; 382/411 Test #405: skeleton ......................... Passed 3.04 sec; Start 211: mcscf3; 383/411 Test #387: python-energy .................... Passed 2.65 sec; Start 334: scf3; 384/411 Test #396: python-memdfjk ................... Passed 0.90 sec; Start 382: psi4numpy-rhf; 385/411 Test #96: cisd-h2o-clpse ................... Passed 4.24 sec; Start 308: pywrap-db3; 386/411 Test #400: json-schema-1-ghost .............. Passed 3.33 sec; Start 175: docs-dft; 387/411 Test #404: json-schema-1-properties ......... Passed 3.31 sec; Start 216: mints5; 388/411 Test #239: numpy-array-interface ............ Passed 0.71 sec; Start 364: options1; 389/411 Test #354: tu2-ch2-energy ................... Passed 3.22 sec; Start 409: skeletonscf; 390/411 Test #382: psi4numpy-rhf .................... Passed 0.82 sec; Start 208: matrix1; 391/411 Test #216: mints5 ........................... Passed 0.58 sec; Start 212: mints1; 392/411 Test #364: options1 ......................... Passed 0.58 sec; Start 215: mints4; 393/411 Test #175: docs-dft ......................... Passed 0.61 sec; Start 174: docs-bases; 394/411 Test #308: pywrap-db3 ....................... Passed 0.68 sec; Start 402: json-schema-1-throws; 395/411 Test #411: skeletonwavefunction ............. Passed 2.89 sec; Start 87: cepa1; 396/411 Test #311: rasci-h2o ........................ Passed 4.54 sec; 397/411 Test #211: mcscf3 ........................... Passed 1.29 sec; 398/411 Test #334: scf3 ............................. Passed 1.23 sec; 399/411 Test #208: matrix1 .......................... Passed 0.57 sec; 400/411 Test #409: skeletonscf ...................... Passed 0.61 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:36621,energy,energy,36621,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,......... Passed 15.55 sec; Start 143: dfomp2-3; 252/413 Test #159: dfrasscf-sp ...................... Passed 9.04 sec; Start 398: python-memdfjk; 253/413 Test #245: ocepa1 ........................... Passed 7.39 sec; Start 163: dft-ghost; 254/413 Test #126: dfccsdl1 ......................... Passed 8.14 sec; Start 89: cepa2; 255/413 Test #352: dft-custom ....................... Passed 15.35 sec; Start 370: scf-freq1; 256/413 Test #143: dfomp2-3 ......................... Passed 2.20 sec; Start 3: casscf-fzc-sp; 257/413 Test #342: soscf-large ...................... Passed 16.23 sec; Start 359: tu4-h2o-freq; 258/413 Test #398: python-memdfjk ................... Passed 1.92 sec; Start 389: python-energy; 259/413 Test #5: casscf-sa-sp ..................... Passed 13.87 sec; Start 403: json-schema-1-orient; 260/413 Test #219: mints6 ........................... Passed 13.74 sec; Start 270: opt2-fd; 261/413 Test #272: opt4 ............................. Passed 10.06 sec; Start 371: dft-jk; 262/413 Test #389: python-energy .................... Passed 1.11 sec; Start 200: freq-isotope2; 263/413 Test #403: json-schema-1-orient ............. Passed 1.93 sec; Start 374: dft-custom-hybrid; 264/413 Test #89: cepa2 ............................ Passed 4.39 sec; Start 337: scf4; 265/413 Test #340: scf7 ............................. Passed 14.12 sec; Start 402: json-schema-1-ghost; 266/413 Test #288: props3 ........................... Passed 14.97 sec; Start 369: scf-hess1; 267/413 Test #402: json-schema-1-ghost .............. Passed 1.41 sec; Start 267: opt1; 268/413 Test #3: casscf-fzc-sp .................... Passed 6.04 sec; Start 387: psi4numpy-fci; 269/413 Test #200: freq-isotope2 .................... Passed 5.55 sec; Start 125: dfccsd1; 270/413 Test #163: dft-ghost ........................ Passed 8.35 sec; Start 4: casscf-semi; 271/413 Test #14: cbs-xtpl-energy .................. Passed 10.92 sec; Start 99: cisd-sp; 272/413 Test #287: props2 ........................... Passed 12.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:24654,energy,energy,24654,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,......... Passed 16.19 sec; Start 185: fci-h2o; 178/411 Test #173: dft-omega ........................ Passed 24.42 sec; Start 186: fci-h2o-2; 179/411 Test #180: fsapt-terms ...................... Passed 8.89 sec; Start 187: fci-h2o-fzcv; 180/411 Test #185: fci-h2o .......................... Passed 6.44 sec; Start 188: fci-tdm; 181/411 Test #184: fci-dipole ....................... Passed 6.80 sec; Start 189: fci-tdm-2; 182/411 Test #188: fci-tdm .......................... Passed 1.51 sec; Start 190: fci-coverage; 183/411 Test #187: fci-h2o-fzcv ..................... Passed 4.69 sec; Start 191: fcidump; 184/411 Test #190: fci-coverage ..................... Passed 3.16 sec; Start 192: fd-freq-energy; 185/411 Test #186: fci-h2o-2 ........................ Passed 6.66 sec; Start 194: fd-freq-gradient; 186/411 Test #191: fcidump .......................... Passed 3.32 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 46.30 sec; Start 197: freq-isotope1; 188/411 Test #192: fd-freq-energy ................... Passed 7.42 sec; Start 198: freq-isotope2; 189/411 Test #198: freq-isotope2 .................... Passed 4.88 sec; Start 199: fnocc1; 190/411 Test #197: freq-isotope1 .................... Passed 9.15 sec; Start 200: fnocc2; 191/411 Test #167: dft-b3lyp ........................ Passed 68.29 sec; Start 201: fnocc3; 192/411 Test #194: fd-freq-gradient ................. Passed 16.11 sec; Start 202: fnocc4; 193/411 Test #199: fnocc1 ........................... Passed 4.57 sec; Start 203: frac; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.81 sec; Start 204: frac-ip-fitting; 195/411 Test #203: frac ............................. Passed 3.32 sec; Start 206: ghosts; 196/411 Test #201: fnocc3 ........................... Passed 6.94 sec; Start 207: gibbs; 197/411 Test #110: dcft4 ............................ Passed 222.32 sec; Start 208: matrix1; 198/411 Test #208: matrix1 .......................... Passed 0.55 sec; Start 209: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:17495,energy,energy,17495,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy']
Energy Efficiency,......... Passed 4.07 sec; Start 187: fci-h2o-fzcv; 294/411 Test #95: cisd-h2o+-2 ...................... Passed 4.65 sec; Start 332: scf-occ; 295/411 Test #253: omp2p5-1 ......................... Passed 3.82 sec; Start 118: dfcasscf-fzc-sp; 296/411 Test #171: dft2 ............................. Passed 5.09 sec; Start 399: json-schema-1-energy; 297/411 Test #376: pywrap-align ..................... Passed 3.35 sec; Start 310: rasci-c2-active; 298/411 Test #265: opt1 ............................. Passed 6.06 sec; Start 223: molden1; 299/411 Test #93: cisd-h2o+-0 ...................... Passed 5.64 sec; Start 344: dfep2-1; 300/411 Test #332: scf-occ .......................... Passed 4.06 sec; Start 294: psimrcc-sp1; 301/411 Test #329: scf-guess-read2 .................. Passed 8.60 sec; Start 339: scf-property; 302/411 Test #99: cisd-sp-2 ........................ Passed 6.28 sec; Start 331: scf1; 303/411 Test #295: psithon1 ......................... Passed 9.58 sec; Start 257: omp3-1; 304/411 Test #399: json-schema-1-energy ............. Passed 4.57 sec; Start 234: mp3-grad2; 305/411 Test #187: fci-h2o-fzcv ..................... Passed 6.68 sec; Start 225: mom; 306/411 Test #118: dfcasscf-fzc-sp .................. Passed 6.60 sec; Start 351: dft-reference; 307/411 Test #283: opt-freeze-coords ................ Passed 9.08 sec; Start 251: omp2-grad1; 308/411 Test #117: dfcasscf-sa-sp ................... Passed 8.74 sec; Start 85: cepa0-grad1; 309/411 Test #344: dfep2-1 .......................... Passed 5.97 sec; Start 284: props1; 310/411 Test #370: scf-coverage ..................... Passed 10.94 sec; Start 235: mp2-property; 311/411 Test #191: fcidump .......................... Passed 10.01 sec; Start 262: omp3-grad1; 312/411 Test #310: rasci-c2-active .................. Passed 8.92 sec; Start 119: dfcasscf-sp; 313/411 Test #351: dft-reference .................... Passed 4.00 sec; Start 121: dfccdl1; 314/411 Test #294: psimrcc-sp1 ...................... Passed 6.86 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:28531,energy,energy,28531,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,......... Passed 4.59 sec; Start 214: mints3; 360/411 Test #255: omp2p5-grad1 ..................... Passed 5.44 sec; Start 298: pubchem2; 361/411 Test #130: dfmp2-2 .......................... Passed 2.29 sec; Start 353: tu1-h2o-energy; 362/411 Test #352: stability2 ....................... Passed 1.46 sec; Start 96: cisd-h2o-clpse; 363/411 Test #210: mcscf2 ........................... Passed 1.47 sec; Start 383: psi4numpy-rhf-gradient; 364/411 Test #102: decontract ....................... Passed 1.32 sec; Start 378: mints12; 365/411 Test #333: scf2 ............................. Passed 1.83 sec; Start 311: rasci-h2o; 366/411 Test #214: mints3 ........................... Passed 1.03 sec; Start 209: mcscf1; 367/411 Test #157: dft-grac ......................... Passed 1.79 sec; Start 220: mints-helper; 368/411 Test #222: mints10 .......................... Passed 2.06 sec; Start 405: skeleton; 369/411 Test #293: psimrcc-pt2 ...................... Passed 1.62 sec; Start 398: json-v11-gradient; 370/411 Test #353: tu1-h2o-energy ................... Passed 1.11 sec; Start 400: json-schema-1-ghost; 371/411 Test #406: skeletonaointegrals .............. Passed 1.69 sec; Start 404: json-schema-1-properties; 372/411 Test #298: pubchem2 ......................... Passed 1.36 sec; Start 309: pywrap-molecule; 373/411 Test #401: json-schema-1-orient ............. Passed 2.44 sec; Start 408: skeletonmointegrals; 374/411 Test #403: json-schema-1-gradient ........... Passed 2.11 sec; Start 410: skeletonsointegrals; 375/411 Test #330: scf-bs ........................... Passed 1.83 sec; Start 387: python-energy; 376/411 Test #378: mints12 .......................... Passed 1.28 sec; Start 354: tu2-ch2-energy; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.68 sec; Start 188: fci-tdm; 378/411 Test #309: pywrap-molecule .................. Passed 1.09 sec; Start 411: skeletonwavefunction; 379/411 Test #220: mints-helper ..................... Passed 2.03 sec; Start 349: sapt-sf1; 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:34778,energy,energy,34778,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,......... Passed 8.49 sec; Start 184: fci-dipole; 185/411 Test #184: fci-dipole ....................... Passed 7.84 sec; Start 185: fci-h2o; 186/411 Test #168: dft1 ............................. Passed 103.78 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 7.23 sec; Start 187: fci-h2o-fzcv; 188/411 Test #177: extern2 .......................... Passed 29.73 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 2.64 sec; Start 189: fci-tdm-2; 190/411 Test #187: fci-h2o-fzcv ..................... Passed 6.27 sec; Start 190: fci-coverage; 191/411 Test #186: fci-h2o-2 ........................ Passed 7.96 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.36 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 12.29 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.59 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 15.37 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 32.36 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 20.11 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 12.70 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 42.48 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 20.61 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 9.22 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 4.49 sec; Start 204: frac-ip-fitting; 203/411 Test #202: fnocc4 ........................... Passed 26.51 sec; Start 206: ghosts; 204/411 Test #183: isapt2 ........................... Passed 123.56 sec; Start 207: gibbs; 205/411 Test #103: dcft-grad1 ....................... Passed 1178.23 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:18037,energy,energy,18037,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency,......... Passed 8.95 sec; Start 185: fci-h2o; 178/411 Test #173: dft-omega ........................ Passed 25.66 sec; Start 186: fci-h2o-2; 179/411 Test #177: extern2 .......................... Passed 22.17 sec; Start 187: fci-h2o-fzcv; 180/411 Test #184: fci-dipole ....................... Passed 7.88 sec; Start 188: fci-tdm; 181/411 Test #188: fci-tdm .......................... Passed 1.50 sec; Start 189: fci-tdm-2; 182/411 Test #187: fci-h2o-fzcv ..................... Passed 5.59 sec; Start 190: fci-coverage; 183/411 Test #185: fci-h2o .......................... Passed 6.73 sec; Start 191: fcidump; 184/411 Test #186: fci-h2o-2 ........................ Passed 7.05 sec; Start 192: fd-freq-energy; 185/411 Test #191: fcidump .......................... Passed 3.44 sec; Start 194: fd-freq-gradient; 186/411 Test #190: fci-coverage ..................... Passed 3.57 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 48.60 sec; Start 197: freq-isotope1; 188/411 Test #192: fd-freq-energy ................... Passed 8.97 sec; Start 198: freq-isotope2; 189/411 Test #198: freq-isotope2 .................... Passed 5.22 sec; Start 199: fnocc1; 190/411 Test #189: fci-tdm-2 ........................ Passed 21.94 sec; Start 200: fnocc2; 191/411 Test #197: freq-isotope1 .................... Passed 9.99 sec; Start 201: fnocc3; 192/411 Test #167: dft-b3lyp ........................ Passed 69.37 sec; Start 202: fnocc4; 193/411 Test #194: fd-freq-gradient ................. Passed 19.34 sec; Start 203: frac; 194/411 Test #199: fnocc1 ........................... Passed 11.81 sec; Start 204: frac-ip-fitting; 195/411 Test #203: frac ............................. Passed 5.22 sec; Start 206: ghosts; 196/411 Test #201: fnocc3 ........................... Passed 12.94 sec; Start 207: gibbs; 197/411 Test #161: dft-grad-lr2 ..................... Passed 102.98 sec; Start 208: matrix1; 198/411 Test #208: matrix1 .......................... Passed 0.57 sec; Start 209,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:17544,energy,energy,17544,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,......... Passed 858.01 sec; Start 29: cc13d; 13/413 Test #105: dcft-grad1 ....................... Passed 867.96 sec; Start 184: isapt1; 14/413 Test #77: cc7 .............................. Passed 433.83 sec; Start 11: cbs-delta-energy; 15/413 Test #306: pywrap-checkrun-rhf .............. Passed 876.28 sec; Start 48: cc31; 16/413 Test #40: cc24 ............................. Passed 876.40 sec; Start 114: dcft6; 17/413 Test #302: pywrap-all ....................... Passed 905.57 sec; Start 45: cc29; 18/413 Test #242: ocepa-freq1 ...................... Passed 456.03 sec; Start 18: cbs-xtpl-func; 19/413 Test #46: cc3 .............................. Passed 974.02 sec; Start 183: fsapt-allterms; 20/413 Test #307: pywrap-checkrun-rohf ............. Passed 520.29 sec; Start 195: fd-freq-energy-large; 21/413 Test #29: cc13d ............................ Passed 133.06 sec; Start 197: fd-freq-gradient-large; 22/413 Test #48: cc31 ............................. Passed 119.81 sec; Start 280: opt13; 23/413 Test #11: cbs-delta-energy ................. Passed 124.12 sec; Start 375: dft-custom-mgga; 24/413 Test #45: cc29 ............................. Passed 101.10 sec; Start 361: tu6-cp-ne2; 25/413 Test #13: cbs-xtpl-alpha ................... Passed 179.59 sec; Start 388: cookbook-rohf-orb-rot; 26/413 Test #113: dcft5 ............................ Passed 229.73 sec; Start 322: sapt6; 27/413 Test #114: dcft6 ............................ Passed 160.14 sec; Start 283: opt-irc-2; 28/413 Test #112: dcft4 ............................ Passed 1041.80 sec; Start 59: cc41; 29/413 Test #388: cookbook-rohf-orb-rot ............ Passed 58.96 sec; Start 381: cc-module; 30/413 Test #361: tu6-cp-ne2 ....................... Passed 77.19 sec; Start 98: cisd-opt-fd; 31/413 Test #59: cc41 ............................. Passed 45.99 sec; Start 71: cc52; 32/413 Test #381: cc-module ........................ Passed 37.48 sec; Start 61: cc43; 33/413 Test #157: dft-grad-lr3 ..................... Passed 445.74 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:2525,energy,energy,2525,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,......... Passed 91.93 sec; Start 193: fd-freq-energy; 65/412 Test #231: mp2-module ....................... Passed 98.50 sec; Start 20: cbs-xtpl-wrapper; 66/412 Test #318: sapt3 ............................ Passed 86.10 sec; Start 264: omp3-grad2; 67/412 Test #17: cbs-xtpl-opt ..................... Passed 106.20 sec; Start 257: omp2p5-grad2; 68/412 Test #262: omp3-5 ........................... Passed 82.61 sec; Start 205: frac-ip-fitting; 69/412 Test #320: sapt5 ............................ Passed 85.03 sec; Start 300: pywrap-alias; 70/412 Test #70: cc51 ............................. Passed 90.98 sec; Start 19: cbs-xtpl-nbody; 71/412 Test #293: psimrcc-fd-freq2 ................. Passed 78.67 sec; Start 62: cc44; 72/412 Test #250: omp2-4 ........................... Passed 99.04 sec; Start 168: dft-b3lyp; 73/412 Test #20: cbs-xtpl-wrapper ................. Passed 90.74 sec; Start 245: ocepa2; 74/412 Test #205: frac-ip-fitting .................. Passed 76.80 sec; Start 243: ocepa-grad2; 75/412 Test #193: fd-freq-energy ................... Passed 98.56 sec; Start 81: cc8c; 76/412 Test #300: pywrap-alias ..................... Passed 77.65 sec; Start 261: omp3-4; 77/412 Test #257: omp2p5-grad2 ..................... Passed 88.65 sec; Start 390: python-pubchem; 78/412 Test #264: omp3-grad2 ....................... Passed 104.13 sec; Start 44: cc28; 79/412 Test #62: cc44 ............................. Passed 81.07 sec; Start 116: dcft9; 80/412 Test #19: cbs-xtpl-nbody ................... Passed 123.53 sec; Start 58: cc40; 81/412 Test #114: dcft7 ............................ Passed 416.24 sec; Start 83: cc9a; 82/412 Test #317: sapt2 ............................ Passed 390.46 sec; Start 35: cc19; 83/412 Test #81: cc8c ............................. Passed 62.89 sec; Start 251: omp2-5; 84/412 Test #168: dft-b3lyp ........................ Passed 73.00 sec; Start 69: cc50; 85/412 Test #390: python-pubchem ................... Passed 67.56 sec; Start 31: cc15; 86/412 Test #245: ocepa2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:7368,energy,energy,7368,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,.......... Passed 6.21 sec; Start 192: fcidump; 319/412 Test #340: scf-property ..................... Passed 6.13 sec; Start 345: dfep2-1; 320/412 Test #122: dfccdl1 .......................... Passed 4.43 sec; Start 398: json-v11-energy; 321/412 Test #272: opt5 ............................. Passed 4.45 sec; Start 389: python-curve; 322/412 Test #311: rasci-c2-active .................. Passed 7.52 sec; Start 236: mp2-property; 323/412 Test #226: mom .............................. Passed 4.69 sec; Start 312: rasci-h2o; 324/412 Test #378: pywrap-align-chiral .............. Passed 3.44 sec; Start 294: psimrcc-pt2; 325/412 Test #235: mp3-grad2 ........................ Passed 5.64 sec; Start 119: dfcasscf-fzc-sp; 326/412 Test #356: tu3-h2o-opt ...................... Passed 4.82 sec; Start 258: omp3-1; 327/412 Test #344: stability1 ....................... Passed 3.58 sec; Start 352: dft-reference; 328/412 Test #312: rasci-h2o ........................ Passed 2.09 sec; Start 364: zaptn-nh2; 329/412 Test #398: json-v11-energy .................. Passed 3.22 sec; Start 412: skeletonwavefunction; 330/412 Test #294: psimrcc-pt2 ...................... Passed 1.99 sec; Start 328: scf-guess-read1; 331/412 Test #345: dfep2-1 .......................... Passed 3.72 sec; Start 131: dfmp2-2; 332/412 Test #400: json-schema-1-energy ............. Passed 4.20 sec; Start 333: scf-occ; 333/412 Test #266: opt1 ............................. Passed 5.44 sec; Start 385: psi4numpy-rhf-hessian; 334/412 Test #389: python-curve ..................... Passed 3.42 sec; Start 392: python-mints2; 335/412 Test #236: mp2-property ..................... Passed 3.47 sec; Start 402: json-schema-1-orient; 336/412 Test #295: psimrcc-sp1 ...................... Passed 4.98 sec; Start 315: sad1; 337/412 Test #192: fcidump .......................... Passed 5.16 sec; Start 214: mints2; 338/412 Test #412: skeletonwavefunction ............. Passed 1.49 sec; Start 329: scf-upcast-custom-basis; 339/412 Test #119: dfcasscf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:30875,energy,energy,30875,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,........... Passed 11.34 sec; Start 3: casscf-fzc-sp; 254/413 Test #139: dfmp2-grad4 ...................... Passed 12.20 sec; Start 134: dfmp2-4; 255/413 Test #370: scf-freq1 ........................ Passed 14.76 sec; Start 163: dft-ghost; 256/413 Test #91: cepa1 ............................ Passed 19.79 sec; Start 297: psithon1; 257/413 Test #14: cbs-xtpl-energy .................. Passed 16.33 sec; Start 89: cepa2; 258/413 Test #359: tu4-h2o-freq ..................... Passed 13.21 sec; Start 390: python-curve; 259/413 Test #371: dft-jk ........................... Passed 12.88 sec; Start 401: json-schema-1-energy; 260/413 Test #343: soscf-ref ........................ Passed 9.59 sec; Start 399: json-v11-energy; 261/413 Test #272: opt4 ............................. Passed 10.18 sec; Start 369: scf-hess1; 262/413 Test #3: casscf-fzc-sp .................... Passed 6.82 sec; Start 9: castup2; 263/413 Test #163: dft-ghost ........................ Passed 8.85 sec; Start 200: freq-isotope2; 264/413 Test #399: json-v11-energy .................. Passed 4.63 sec; Start 143: dfomp2-3; 265/413 Test #337: scf4 ............................. Passed 11.13 sec; Start 393: python-mints2; 266/413 Test #390: python-curve ..................... Passed 5.53 sec; Start 15: cbs-xtpl-freq; 267/413 Test #401: json-schema-1-energy ............. Passed 5.19 sec; Start 392: python-mints9; 268/413 Test #134: dfmp2-4 .......................... Passed 10.28 sec; Start 264: omp3-grad1; 269/413 Test #374: dft-custom-hybrid ................ Passed 12.81 sec; Start 397: python-mints13; 270/413 Test #297: psithon1 ......................... Passed 9.16 sec; Start 253: omp2-grad1; 271/413 Test #270: opt2-fd .......................... Passed 12.50 sec; Start 137: dfmp2-grad2; 272/413 Test #99: cisd-sp .......................... Passed 12.64 sec; Start 234: mp2p5-grad2; 273/413 Test #392: python-mints9 .................... Passed 2.20 sec; Start 182: fsapt-terms; 274/413 Test #397: python-mints13 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:24816,energy,energy,24816,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,........... Passed 2.35 sec; Start 344: dfep2-1; 345/411 Test #344: dfep2-1 .......................... Passed 2.82 sec; Start 345: dfep2-2; 346/411 Test #345: dfep2-2 .......................... Passed 2.01 sec; Start 346: sapt-dft1; 347/411 Test #346: sapt-dft1 ........................ Passed 18.81 sec; Start 347: sapt-dft2; 348/411 Test #347: sapt-dft2 ........................ Passed 106.56 sec; Start 348: sapt-compare; 349/411 Test #348: sapt-compare ..................... Passed 34.92 sec; Start 349: sapt-sf1; 350/411 Test #349: sapt-sf1 ......................... Passed 1.00 sec; Start 350: dft-custom; 351/411 Test #350: dft-custom ....................... Passed 11.96 sec; Start 351: dft-reference; 352/411 Test #351: dft-reference .................... Passed 2.94 sec; Start 352: stability2; 353/411 Test #352: stability2 ....................... Passed 0.99 sec; Start 353: tu1-h2o-energy; 354/411 Test #353: tu1-h2o-energy ................... Passed 1.17 sec; Start 354: tu2-ch2-energy; 355/411 Test #354: tu2-ch2-energy ................... Passed 1.04 sec; Start 355: tu3-h2o-opt; 356/411 Test #355: tu3-h2o-opt ...................... Passed 2.13 sec; Start 356: scf-response1; 357/411 Test #356: scf-response1 .................... Passed 2.20 sec; Start 357: tu4-h2o-freq; 358/411 Test #357: tu4-h2o-freq ..................... Passed 7.10 sec; Start 358: tu5-sapt; 359/411 Test #358: tu5-sapt ......................... Passed 18.53 sec; Start 359: tu6-cp-ne2; 360/411 Test #359: tu6-cp-ne2 ....................... Passed 26.31 sec; Start 360: x2c1; 361/411 Test #360: x2c1 ............................. Passed 5.86 sec; Start 361: x2c2; 362/411 Test #361: x2c2 ............................. Passed 1.73 sec; Start 362: x2c3; 363/411 Test #362: x2c3 ............................. Passed 1.67 sec; Start 363: zaptn-nh2; 364/411 Test #363: zaptn-nh2 ........................ Passed 2.99 sec; Start 364: options1; 365/411 Test #364: options1 ......................... Passed 0.67 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:32656,energy,energy,32656,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,2,['energy'],['energy']
Energy Efficiency,........... Passed 2.42 sec; Start 344: dfep2-1; 330/411 Test #319: sapt5 ............................ Passed 75.45 sec; Start 345: dfep2-2; 331/411 Test #317: sapt3 ............................ Passed 76.62 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 4.52 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 15.89 sec; Start 349: sapt-sf1; 335/411 Test #341: soscf-ref ........................ Passed 14.83 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 32.53 sec; Start 351: dft-reference; 337/411 Test #349: sapt-sf1 ......................... Passed 5.59 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.67 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.51 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.42 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.23 sec; Start 356: scf-response1; 342/411 Test #355: tu3-h2o-opt ...................... Passed 3.24 sec; Start 357: tu4-h2o-freq; 343/411 Test #337: scf6 ............................. Passed 39.47 sec; Start 358: tu5-sapt; 344/411 Test #356: scf-response1 .................... Passed 2.66 sec; Start 359: tu6-cp-ne2; 345/411 Test #350: dft-custom ....................... Passed 13.31 sec; Start 360: x2c1; 346/411 Test #346: sapt-dft1 ........................ Passed 23.57 sec; Start 361: x2c2; 347/411 Test #342: soscf-dft ........................ Passed 32.76 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 3.88 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.58 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.57 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:31733,energy,energy,31733,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,2,['energy'],['energy']
Energy Efficiency,........... Passed 2.47 sec; Start 344: dfep2-1; 345/411 Test #344: dfep2-1 .......................... Passed 2.53 sec; Start 345: dfep2-2; 346/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 346: sapt-dft1; 347/411 Test #346: sapt-dft1 ........................ Passed 17.11 sec; Start 347: sapt-dft2; 348/411 Test #347: sapt-dft2 ........................ Passed 105.13 sec; Start 348: sapt-compare; 349/411 Test #348: sapt-compare ..................... Passed 33.63 sec; Start 349: sapt-sf1; 350/411 Test #349: sapt-sf1 ......................... Passed 0.85 sec; Start 350: dft-custom; 351/411 Test #350: dft-custom ....................... Passed 10.58 sec; Start 351: dft-reference; 352/411 Test #351: dft-reference .................... Passed 2.94 sec; Start 352: stability2; 353/411 Test #352: stability2 ....................... Passed 1.07 sec; Start 353: tu1-h2o-energy; 354/411 Test #353: tu1-h2o-energy ................... Passed 1.22 sec; Start 354: tu2-ch2-energy; 355/411 Test #354: tu2-ch2-energy ................... Passed 0.98 sec; Start 355: tu3-h2o-opt; 356/411 Test #355: tu3-h2o-opt ...................... Passed 2.38 sec; Start 356: scf-response1; 357/411 Test #356: scf-response1 .................... Passed 2.12 sec; Start 357: tu4-h2o-freq; 358/411 Test #357: tu4-h2o-freq ..................... Passed 5.68 sec; Start 358: tu5-sapt; 359/411 Test #358: tu5-sapt ......................... Passed 18.96 sec; Start 359: tu6-cp-ne2; 360/411 Test #359: tu6-cp-ne2 ....................... Passed 21.60 sec; Start 360: x2c1; 361/411 Test #360: x2c1 ............................. Passed 5.53 sec; Start 361: x2c2; 362/411 Test #361: x2c2 ............................. Passed 1.63 sec; Start 362: x2c3; 363/411 Test #362: x2c3 ............................. Passed 1.69 sec; Start 363: zaptn-nh2; 364/411 Test #363: zaptn-nh2 ........................ Passed 2.10 sec; Start 364: options1; 365/411 Test #364: options1 ......................... Passed 0.66 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:32627,energy,energy,32627,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,2,['energy'],['energy']
Energy Efficiency,........... Passed 2.85 sec; Start 359: options1; 361/401 Test #328: scf-occ .......................... Passed 3.01 sec; Start 208: mints1; 362/401 Test #247: omp2-grad1 ....................... Passed 4.60 sec; Start 284: psimrcc-ccsd_t-2; 363/401 Test #400: json-schema_0_gradient ........... Passed 2.33 sec; Start 285: psimrcc-ccsd_t-3; 364/401 Test #115: ao-dfcasscf-sp ................... Passed 3.19 sec; Start 283: psimrcc-ccsd_t-1; 365/401 Test #396: json-schema_0_energy ............. Passed 3.72 sec; Start 289: psimrcc-pt2; 366/401 Test #378: psi4numpy-dfmp2 .................. Passed 2.24 sec; Start 86: cepa1; 367/401 Test #8: castup1 .......................... Passed 2.70 sec; Start 360: cubeprop-esp; 368/401 Test #118: dfcasscf-sp ...................... Passed 4.20 sec; Start 373: pywrap-align; 369/401 Test #330: scf3 ............................. Passed 1.53 sec; Start 374: pywrap-align-chiral; 370/401 Test #347: stability2 ....................... Passed 2.12 sec; 371/401 Test #348: tu1-h2o-energy ................... Passed 2.02 sec; 372/401 Test #305: pywrap-molecule .................. Passed 2.10 sec; 373/401 Test #204: matrix1 .......................... Passed 1.27 sec; 374/401 Test #326: scf-bs ........................... Passed 2.41 sec; 375/401 Test #235: numpy-array-interface ............ Passed 1.44 sec; 376/401 Test #380: psi4numpy-rhf-gradient ........... Passed 2.03 sec; 377/401 Test #349: tu2-ch2-energy ................... Passed 2.01 sec; 378/401 Test #205: mcscf1 ........................... Passed 1.71 sec; 379/401 Test #122: dfccsd1 .......................... Passed 4.58 sec; 380/401 Test #379: psi4numpy-rhf .................... Passed 1.89 sec; 381/401 Test #384: python-energy .................... Passed 1.80 sec; 382/401 Test #393: python-memdfjk ................... Passed 3.23 sec; 383/401 Test #101: decontract ....................... Passed 2.06 sec; 384/401 Test #123: dfccsdl1 ......................... Passed 4.62 sec; 385/401 Test #359: o,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:35167,energy,energy,35167,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,........... Passed 27.27 sec; Start 286: props2; 228/412 Test #341: soscf-large ...................... Passed 27.88 sec; Start 339: scf7; 229/412 Test #165: dft-grad1 ........................ Passed 27.44 sec; Start 373: dft-custom-hybrid; 230/412 Test #287: props3 ........................... Passed 26.22 sec; Start 90: cepa3; 231/412 Test #367: dft-smoke ........................ Passed 24.12 sec; Start 14: cbs-xtpl-energy; 232/412 Test #351: dft-custom ....................... Passed 26.21 sec; Start 218: mints6; 233/412 Test #339: scf7 ............................. Passed 23.74 sec; Start 358: tu4-h2o-freq; 234/412 Test #286: props2 ........................... Passed 25.96 sec; Start 267: opt1-fd; 235/412 Test #373: dft-custom-hybrid ................ Passed 25.17 sec; Start 369: scf-freq1; 236/412 Test #90: cepa3 ............................ Passed 23.95 sec; Start 378: pywrap-align-chiral; 237/412 Test #377: pywrap-align ..................... Passed 55.50 sec; Start 370: dft-jk; 238/412 Test #14: cbs-xtpl-energy .................. Passed 38.42 sec; Start 102: cubeprop; 239/412 Test #267: opt1-fd .......................... Passed 35.93 sec; Start 269: opt2-fd; 240/412 Test #218: mints6 ........................... Passed 42.95 sec; Start 394: python-3-index-transforms; 241/412 Test #358: tu4-h2o-freq ..................... Passed 38.41 sec; Start 198: freq-isotope1; 242/412 Test #369: scf-freq1 ........................ Passed 38.75 sec; Start 91: cepa1; 243/412 Test #370: dft-jk ........................... Passed 42.37 sec; Start 99: cisd-sp; 244/412 Test #102: cubeprop ......................... Passed 42.67 sec; Start 342: soscf-ref; 245/412 Test #91: cepa1 ............................ Passed 38.08 sec; Start 336: scf4; 246/412 Test #269: opt2-fd .......................... Passed 43.27 sec; Start 242: ocepa-grad1; 247/412 Test #198: freq-isotope1 .................... Passed 42.81 sec; Start 271: opt4; 248/412 Test #378: pywrap-align-chiral .............. Passed 78.3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:22175,energy,energy,22175,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,........... Passed 3.77 sec; Start 238: mpn-bh; 297/413 Test #398: python-memdfjk ................... Passed 1.21 sec; Start 189: fci-h2o-fzcv; 298/413 Test #233: mp2p5-grad1 ...................... Passed 3.60 sec; Start 403: json-schema-1-orient; 299/413 Test #4: casscf-semi ...................... Passed 9.34 sec; Start 225: molden1; 300/413 Test #186: fci-dipole ....................... Passed 8.84 sec; Start 192: fci-coverage; 301/413 Test #94: cisd-h2o+-0 ...................... Passed 6.03 sec; Start 389: python-energy; 302/413 Test #372: scf-coverage ..................... Passed 9.94 sec; Start 255: omp2p5-1; 303/413 Test #95: cisd-h2o+-1 ...................... Passed 6.14 sec; Start 296: psimrcc-sp1; 304/413 Test #331: scf-guess-read2 .................. Passed 7.99 sec; Start 205: frac; 305/413 Test #188: fci-h2o-2 ........................ Passed 6.67 sec; Start 402: json-schema-1-ghost; 306/413 Test #236: mp3-grad2 ........................ Passed 6.28 sec; Start 407: skeleton; 307/413 Test #389: python-energy .................... Passed 1.87 sec; Start 409: skeletondfmp2; 308/413 Test #403: json-schema-1-orient ............. Passed 3.86 sec; Start 259: omp3-1; 309/413 Test #402: json-schema-1-ghost .............. Passed 1.63 sec; Start 226: molden2; 310/413 Test #125: dfccsd1 .......................... Passed 10.80 sec; Start 405: json-schema-1-gradient; 311/413 Test #407: skeleton ......................... Passed 1.57 sec; Start 231: mp2-grad2; 312/413 Test #409: skeletondfmp2 .................... Passed 1.50 sec; Start 312: rasci-c2-active; 313/413 Test #238: mpn-bh ........................... Passed 7.00 sec; Start 273: opt5; 314/413 Test #285: opt-freeze-coords ................ Passed 7.69 sec; Start 410: skeletonmointegrals; 315/413 Test #405: json-schema-1-gradient ........... Passed 1.91 sec; Start 406: json-schema-1-properties; 316/413 Test #205: frac ............................. Passed 3.87 sec; Start 408: skeletonaointegrals; 317/413 Test #296: psimr,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:28883,energy,energy,28883,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,........... Passed 3.78 sec; Start 344: dfep2-1; 338/411 Test #341: soscf-ref ........................ Passed 12.15 sec; Start 345: dfep2-2; 339/411 Test #345: dfep2-2 .......................... Passed 2.11 sec; Start 346: sapt-dft1; 340/411 Test #320: sapt6 ............................ Passed 158.81 sec; Start 347: sapt-dft2; 341/411 Test #344: dfep2-1 .......................... Passed 3.37 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 31.87 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.22 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.64 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.34 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.35 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.30 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.04 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 14.09 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 5.75 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.88 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 45.66 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 15.20 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 21.11 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 2.85 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 3.06 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.71 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.62 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:32308,energy,energy,32308,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,2,['energy'],['energy']
Energy Efficiency,........... Passed 38.63 sec; Start 344: dfep2-1; 338/411 Test #343: stability1 ....................... Passed 2.90 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 3.24 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 1.96 sec; Start 347: sapt-dft2; 341/411 Test #320: sapt6 ............................ Passed 154.12 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.16 sec; Start 349: sapt-sf1; 343/411 Test #346: sapt-dft1 ........................ Passed 26.36 sec; Start 350: dft-custom; 344/411 Test #349: sapt-sf1 ......................... Passed 4.22 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.37 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.27 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.18 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.21 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 15.59 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 3.20 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 2.17 sec; Start 358: tu5-sapt; 352/411 Test #357: tu4-h2o-freq ..................... Passed 10.43 sec; Start 359: tu6-cp-ne2; 353/411 Test #348: sapt-compare ..................... Passed 44.39 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 17.87 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 3.90 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 2.31 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.59 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:32323,energy,energy,32323,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,2,['energy'],['energy']
Energy Efficiency,........... Passed 4.70 sec; Start 344: dfep2-1; 338/411 Test #341: soscf-ref ........................ Passed 17.33 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 4.28 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 2.36 sec; Start 347: sapt-dft2; 341/411 Test #320: sapt6 ............................ Passed 163.62 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.27 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.95 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 24.71 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 3.46 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.41 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.29 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 4.38 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 18.32 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 10.36 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 4.52 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 51.91 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 21.08 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 23.18 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 2.81 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 3.13 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 6.27 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.62 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:32323,energy,energy,32323,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,2,['energy'],['energy']
Energy Efficiency,........... Passed 687.39 sec; Start 193: fd-freq-energy-large; 23/411 Test #240: ocepa-freq1 ...................... Passed 852.90 sec; Start 195: fd-freq-gradient-large; 24/411 Test #45: cc3 .............................. Passed 1687.06 sec; Start 278: opt13; 25/411 Test #110: dcft4 ............................ Passed 1692.73 sec; Start 91: cepa-module; 26/411 Test #31: cc16 ............................. Passed 395.40 sec; Start 281: opt-irc-2; 27/411 Test #44: cc29 ............................. Passed 233.84 sec; Start 359: tu6-cp-ne2; 28/411 Test #47: cc31 ............................. Passed 213.17 sec; Start 27: cc13c; 29/411 Test #112: dcft6 ............................ Passed 207.94 sec; Start 70: cc52; 30/411 Test #24: cc13 ............................. Passed 461.26 sec; Start 58: cc41; 31/411 Test #28: cc13d ............................ Passed 324.06 sec; Start 104: dcft-grad2; 32/411 Test #182: isapt1 ........................... Passed 402.87 sec; Start 373: dft-custom-mgga; 33/411 Test #11: cbs-delta-energy ................. Passed 389.80 sec; Start 144: dfomp2-grad2; 34/411 Test #91: cepa-module ...................... Passed 172.39 sec; Start 97: cisd-opt-fd; 35/411 Test #27: cc13c ............................ Passed 152.82 sec; Start 46: cc30; 36/411 Test #58: cc41 ............................. Passed 135.41 sec; Start 320: sapt6; 37/411 Test #281: opt-irc-2 ........................ Passed 180.85 sec; Start 115: dcft9; 38/411 Test #70: cc52 ............................. Passed 175.89 sec; Start 386: cookbook-rohf-orb-rot; 39/411 Test #104: dcft-grad2 ....................... Passed 130.18 sec; Start 60: cc43; 40/411 Test #305: pywrap-checkrun-rohf ............. Passed 660.05 sec; Start 149: dfomp3-grad2; 41/411 Test #144: dfomp2-grad2 ..................... Passed 71.62 sec; Start 17: cbs-xtpl-opt; 42/411 Test #46: cc30 ............................. Passed 77.21 sec; Start 158: dfscf-bz2; 43/411 Test #359: tu6-cp-ne2 ....................... Passed 249.27 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:3455,energy,energy,3455,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,........... Passed 7.74 sec; Start 95: cisd-h2o+-0; 89/415 Test #404: python-3-index-transforms ........ Passed 6.88 sec; Start 187: fci-dipole; 90/415 Test #123: dfccd1 ........................... Passed 7.27 sec; Start 399: python-curve; 91/415 Test #325: sapt1 ............................ Passed 10.68 sec; Start 183: fsapt-terms; 92/415 Test #119: ao-dfcasscf-sp ................... Passed 6.21 sec; Start 349: scf-property; 93/415 Test #122: dfcasscf-sp ...................... Passed 5.74 sec; Start 410: json-schema-1-energy; 94/415 Test #378: scf-hess1 ........................ Passed 10.20 sec; Start 354: stability1; 95/415 Test #121: dfcasscf-fzc-sp .................. Passed 3.14 sec; Start 238: mp2-property; 96/415 Test #95: cisd-h2o+-0 ...................... Passed 2.89 sec; Start 304: psimrcc-sp1; 97/415 Test #408: json-v11-energy .................. Passed 3.99 sec; Start 341: scf1; 98/415 Test #399: python-curve ..................... Passed 3.30 sec; Start 387: pywrap-align; 99/415 Test #410: json-schema-1-energy ............. Passed 2.84 sec; Start 402: python-mints2; 100/415 Test #349: scf-property ..................... Passed 3.57 sec; Start 298: psimrcc-ccsd_t-2; 101/415 Test #351: soscf-large ...................... Passed 5.21 sec; Start 355: dfep2-1; 102/415 Test #390: cc-module ........................ Passed 327.63 sec; Start 182: fsapt2; 103/415 Test #238: mp2-property ..................... Passed 2.53 sec; Start 216: mints2; 104/415 Test #354: stability1 ....................... Passed 3.00 sec; Start 373: x2c3; 105/415 Test #187: fci-dipole ....................... Passed 4.92 sec; Start 388: pywrap-align-chiral; 106/415 Test #183: fsapt-terms ...................... Passed 5.10 sec; Start 366: tu3-h2o-opt; 107/415 Test #298: psimrcc-ccsd_t-2 ................. Passed 1.91 sec; Start 225: mints10; 108/415 Test #304: psimrcc-sp1 ...................... Passed 3.01 sec; Start 395: psi4numpy-rhf-hessian; 109/415 Test #402: python-mints2 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:9628,energy,energy,9628,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,........... Passed 76.90 sec; Start 344: dfep2-1; 330/411 Test #341: soscf-ref ........................ Passed 11.34 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.84 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.53 sec; Start 347: sapt-dft2; 333/411 Test #340: soscf-large ...................... Passed 15.14 sec; Start 348: sapt-compare; 334/411 Test #345: dfep2-2 .......................... Passed 2.23 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.24 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 34.70 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 33.58 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.63 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.12 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.52 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.17 sec; Start 356: scf-response1; 342/411 Test #356: scf-response1 .................... Passed 2.45 sec; Start 357: tu4-h2o-freq; 343/411 Test #350: dft-custom ....................... Passed 13.99 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.92 sec; Start 359: tu6-cp-ne2; 345/411 Test #346: sapt-dft1 ........................ Passed 22.50 sec; Start 360: x2c1; 346/411 Test #342: soscf-dft ........................ Passed 33.42 sec; Start 361: x2c2; 347/411 Test #357: tu4-h2o-freq ..................... Passed 10.29 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.36 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.84 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.60 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:31670,energy,energy,31670,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,2,['energy'],['energy']
Energy Efficiency,........... Passed 78.35 sec; Start 344: dfep2-1; 330/411 Test #227: mp2-def2 ......................... Passed 415.63 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.30 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.47 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.48 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 14.85 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.04 sec; Start 350: dft-custom; 336/411 Test #319: sapt5 ............................ Passed 74.55 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 34.05 sec; Start 352: stability2; 338/411 Test #336: scf5 ............................. Passed 34.15 sec; Start 353: tu1-h2o-energy; 339/411 Test #353: tu1-h2o-energy ................... Passed 1.21 sec; Start 354: tu2-ch2-energy; 340/411 Test #352: stability2 ....................... Passed 1.43 sec; Start 355: tu3-h2o-opt; 341/411 Test #351: dft-reference .................... Passed 3.05 sec; Start 356: scf-response1; 342/411 Test #354: tu2-ch2-energy ................... Passed 1.22 sec; Start 357: tu4-h2o-freq; 343/411 Test #356: scf-response1 .................... Passed 2.48 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.54 sec; Start 359: tu6-cp-ne2; 345/411 Test #240: ocepa-freq1 ...................... Passed 405.13 sec; Start 360: x2c1; 346/411 Test #350: dft-custom ....................... Passed 14.93 sec; Start 361: x2c2; 347/411 Test #346: sapt-dft1 ........................ Passed 22.71 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 349/411 Test #357: tu4-h2o-freq ..................... Passed 13.25 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.59 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:31707,energy,energy,31707,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency,............ Passed 1.18 sec; Start 332: scf-occ; 330/404 Test #119: dfcasscf-sp ...................... Passed 1.56 sec; Start 229: mp2-grad2; 331/404 Test #294: psimrcc-sp1 ...................... Passed 2.29 sec; Start 328: scf-upcast-custom-basis; 332/404 Test #235: mp2-property ..................... Passed 1.93 sec; Start 314: sad1; 333/404 Test #213: mints2 ........................... Passed 2.31 sec; Start 116: ao-dfcasscf-sp; 334/404 Test #271: opt5 ............................. Passed 1.53 sec; Start 93: cisd-h2o+-0; 335/404 Test #332: scf-occ .......................... Passed 1.38 sec; Start 203: frac; 336/404 Test #229: mp2-grad2 ........................ Passed 1.34 sec; Start 353: tu1-h2o-energy; 337/404 Test #384: psi4numpy-rhf-hessian ............ Passed 2.46 sec; Start 8: castup1; 338/404 Test #391: python-mints2 .................... Passed 2.32 sec; Start 118: dfcasscf-fzc-sp; 339/404 Test #328: scf-upcast-custom-basis .......... Passed 1.66 sec; Start 94: cisd-h2o+-1; 340/404 Test #353: tu1-h2o-energy ................... Passed 1.19 sec; Start 327: scf-guess-read1; 341/404 Test #116: ao-dfcasscf-sp ................... Passed 1.73 sec; Start 99: cisd-sp-2; 342/404 Test #8: castup1 .......................... Passed 1.29 sec; Start 95: cisd-h2o+-2; 343/404 Test #314: sad1 ............................. Passed 2.13 sec; Start 130: dfmp2-2; 344/404 Test #203: frac ............................. Passed 1.81 sec; Start 345: dfep2-2; 345/404 Test #93: cisd-h2o+-0 ...................... Passed 2.21 sec; Start 96: cisd-h2o-clpse; 346/404 Test #118: dfcasscf-fzc-sp .................. Passed 1.34 sec; Start 231: mp2p5-grad1; 347/404 Test #94: cisd-h2o+-1 ...................... Passed 1.65 sec; Start 356: scf-response1; 348/404 Test #327: scf-guess-read1 .................. Passed 1.34 sec; Start 362: x2c3; 349/404 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 354: tu2-ch2-energy; 350/404 Test #99: cisd-sp-2 ........................ Passed 1.72,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:31587,energy,energy,31587,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,............ Passed 13.37 sec; Start 343: stability1; 329/411 Test #317: sapt3 ............................ Passed 78.35 sec; Start 344: dfep2-1; 330/411 Test #227: mp2-def2 ......................... Passed 415.63 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.30 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.47 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.48 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 14.85 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.04 sec; Start 350: dft-custom; 336/411 Test #319: sapt5 ............................ Passed 74.55 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 34.05 sec; Start 352: stability2; 338/411 Test #336: scf5 ............................. Passed 34.15 sec; Start 353: tu1-h2o-energy; 339/411 Test #353: tu1-h2o-energy ................... Passed 1.21 sec; Start 354: tu2-ch2-energy; 340/411 Test #352: stability2 ....................... Passed 1.43 sec; Start 355: tu3-h2o-opt; 341/411 Test #351: dft-reference .................... Passed 3.05 sec; Start 356: scf-response1; 342/411 Test #354: tu2-ch2-energy ................... Passed 1.22 sec; Start 357: tu4-h2o-freq; 343/411 Test #356: scf-response1 .................... Passed 2.48 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.54 sec; Start 359: tu6-cp-ne2; 345/411 Test #240: ocepa-freq1 ...................... Passed 405.13 sec; Start 360: x2c1; 346/411 Test #350: dft-custom ....................... Passed 14.93 sec; Start 361: x2c2; 347/411 Test #346: sapt-dft1 ........................ Passed 22.71 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 349/411 Test #357: tu4-h2o-freq ..................... Passed 13.25 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:31609,energy,energy,31609,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,2,['energy'],['energy']
Energy Efficiency,............ Passed 1614.45 sec; Start 387: cookbook-rohf-orb-rot; 15/412 Test #301: pywrap-all ....................... Passed 1620.63 sec; Start 45: cc29; 16/412 Test #104: dcft-grad1 ....................... Passed 1653.03 sec; Start 380: cc-module; 17/412 Test #228: mp2-def2 ......................... Passed 409.78 sec; Start 71: cc52; 18/412 Test #25: cc13 ............................. Passed 772.82 sec; Start 32: cc16; 19/412 Test #112: dcft5 ............................ Passed 535.41 sec; Start 282: opt-irc-2; 20/412 Test #30: cc14 ............................. Passed 624.07 sec; Start 11: cbs-delta-energy; 21/412 Test #42: cc26 ............................. Passed 1000.31 sec; Start 113: dcft6; 22/412 Test #71: cc52 ............................. Passed 310.04 sec; Start 18: cbs-xtpl-func; 23/412 Test #183: isapt1 ........................... Passed 405.79 sec; Start 182: fsapt-allterms; 24/412 Test #45: cc29 ............................. Passed 367.98 sec; Start 194: fd-freq-energy-large; 25/412 Test #115: dcft8 ............................ Passed 1028.74 sec; Start 196: fd-freq-gradient-large; 26/412 Test #29: cc13d ............................ Passed 605.10 sec; Start 279: opt13; 27/412 Test #360: tu6-cp-ne2 ....................... Passed 631.78 sec; Start 374: dft-custom-mgga; 28/412 Test #36: cc2 .............................. Passed 1118.56 sec; Start 321: sapt6; 29/412 Test #380: cc-module ........................ Passed 544.21 sec; Start 48: cc31; 30/412 Test #113: dcft6 ............................ Passed 264.36 sec; Start 98: cisd-opt-fd; 31/412 Test #282: opt-irc-2 ........................ Passed 316.11 sec; Start 59: cc41; 32/412 Test #13: cbs-xtpl-alpha ................... Passed 691.34 sec; Start 61: cc43; 33/412 Test #387: cookbook-rohf-orb-rot ............ Passed 632.65 sec; Start 159: dfscf-bz2; 34/412 Test #32: cc16 ............................. Passed 437.11 sec; Start 105: dcft-grad2; 35/412 Test #111: dcft4 ............................ Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:2692,energy,energy-large,2692,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy-large']
Energy Efficiency,............ Passed 2.10 sec; Start 141: dfomp2-3; 263/411 Test #127: dfccsdt1 ......................... Passed 2.35 sec; Start 154: dfrasscf-sp; 264/411 Test #367: scf-hess1 ........................ Passed 7.58 sec; Start 86: cepa0-grad2; 265/411 Test #270: opt4 ............................. Passed 7.69 sec; Start 370: scf-coverage; 266/411 Test #141: dfomp2-3 ......................... Passed 2.34 sec; Start 184: fci-dipole; 267/411 Test #3: casscf-fzc-sp .................... Passed 2.88 sec; Start 185: fci-h2o; 268/411 Test #9: castup2 .......................... Passed 4.25 sec; Start 117: dfcasscf-sa-sp; 269/411 Test #154: dfrasscf-sp ...................... Passed 2.93 sec; Start 329: scf-guess-read2; 270/411 Test #86: cepa0-grad2 ...................... Passed 2.83 sec; Start 186: fci-h2o-2; 271/411 Test #158: dft-ghost ........................ Passed 7.68 sec; Start 255: omp2p5-grad1; 272/411 Test #370: scf-coverage ..................... Passed 3.04 sec; Start 192: fd-freq-energy; 273/411 Test #117: dfcasscf-sa-sp ................... Passed 4.27 sec; Start 198: freq-isotope2; 274/411 Test #255: omp2p5-grad1 ..................... Passed 2.89 sec; Start 135: dfmp2-grad2; 275/411 Test #329: scf-guess-read2 .................. Passed 4.14 sec; Start 187: fci-h2o-fzcv; 276/411 Test #185: fci-h2o .......................... Passed 5.92 sec; Start 85: cepa0-grad1; 277/411 Test #184: fci-dipole ....................... Passed 6.05 sec; Start 171: dft2; 278/411 Test #186: fci-h2o-2 ........................ Passed 5.95 sec; Start 257: omp3-1; 279/411 Test #85: cepa0-grad1 ...................... Passed 1.79 sec; Start 93: cisd-h2o+-0; 280/411 Test #135: dfmp2-grad2 ...................... Passed 3.64 sec; Start 385: psi4numpy-fci; 281/411 Test #198: freq-isotope2 .................... Passed 4.55 sec; Start 179: fsapt2; 282/411 Test #192: fd-freq-energy ................... Passed 7.19 sec; Start 95: cisd-h2o+-2; 283/411 Test #257: omp3-1 ........................... Passed 1.88 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:25400,energy,energy,25400,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,............ Passed 2.32 sec; Start 356: scf-response1; 337/411 Test #262: omp3-grad1 ....................... Passed 9.04 sec; Start 289: psimrcc-ccsd_t-3; 338/411 Test #388: python-curve ..................... Passed 4.26 sec; Start 361: x2c2; 339/411 Test #203: frac ............................. Passed 4.54 sec; Start 352: stability2; 340/411 Test #231: mp2p5-grad1 ...................... Passed 2.51 sec; Start 311: rasci-h2o; 341/411 Test #363: zaptn-nh2 ........................ Passed 2.77 sec; Start 407: skeletondfmp2; 342/411 Test #314: sad1 ............................. Passed 3.07 sec; Start 381: psi4numpy-dfmp2; 343/411 Test #391: python-mints2 .................... Passed 2.70 sec; Start 221: mints9; 344/411 Test #96: cisd-h2o-clpse ................... Passed 1.71 sec; Start 345: dfep2-2; 345/411 Test #401: json-schema-1-orient ............. Passed 1.68 sec; Start 327: scf-guess-read1; 346/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.45 sec; Start 8: castup1; 347/411 Test #397: json-v11-energy .................. Passed 2.46 sec; Start 330: scf-bs; 348/411 Test #233: mp3-grad1 ........................ Passed 1.92 sec; Start 160: dft-grac; 349/411 Test #311: rasci-h2o ........................ Passed 1.24 sec; Start 390: python-mints9; 350/411 Test #352: stability2 ....................... Passed 1.55 sec; Start 288: psimrcc-ccsd_t-2; 351/411 Test #362: x2c3 ............................. Passed 2.02 sec; Start 395: python-mints13; 352/411 Test #361: x2c2 ............................. Passed 1.93 sec; Start 405: skeleton; 353/411 Test #407: skeletondfmp2 .................... Passed 1.57 sec; Start 387: python-energy; 354/411 Test #213: mints2 ........................... Passed 2.49 sec; Start 333: scf2; 355/411 Test #356: scf-response1 .................... Passed 2.51 sec; Start 298: pubchem2; 356/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.78 sec; Start 287: psimrcc-ccsd_t-1; 357/411 Test #330: scf-bs ........................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:32591,energy,energy,32591,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,............ Passed 2.98 sec; Start 272: opt5; 332/412 Test #230: mp2-grad2 ........................ Passed 4.46 sec; Start 235: mp3-grad2; 333/412 Test #224: molden1 .......................... Passed 4.52 sec; Start 121: dfccd1; 334/412 Test #232: mp2p5-grad1 ...................... Passed 3.80 sec; Start 222: mints9; 335/412 Test #3: casscf-fzc-sp .................... Passed 11.19 sec; Start 402: json-schema-1-orient; 336/412 Test #334: scf2 ............................. Passed 1.78 sec; Start 86: cepa0-grad1; 337/412 Test #389: python-curve ..................... Passed 3.41 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #233: mp2p5-grad2 ...................... Passed 4.60 sec; Start 396: python-mints13; 339/412 Test #382: psi4numpy-dfmp2 .................. Passed 1.89 sec; Start 234: mp3-grad1; 340/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 2.51 sec; Start 333: scf-occ; 341/412 Test #391: python-mints9 .................... Passed 2.22 sec; Start 400: json-schema-1-energy; 342/412 Test #398: json-v11-energy .................. Passed 2.11 sec; Start 161: dft-grac; 343/412 Test #364: zaptn-nh2 ........................ Passed 3.07 sec; Start 362: x2c2; 344/412 Test #204: frac ............................. Passed 2.10 sec; Start 363: x2c3; 345/412 Test #272: opt5 ............................. Passed 2.19 sec; Start 117: ao-dfcasscf-sp; 346/412 Test #402: json-schema-1-orient ............. Passed 2.12 sec; Start 8: castup1; 347/412 Test #222: mints9 ........................... Passed 2.38 sec; Start 247: omp2-1; 348/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 1.96 sec; Start 97: cisd-h2o-clpse; 349/412 Test #121: dfccd1 ........................... Passed 2.49 sec; Start 329: scf-upcast-custom-basis; 350/412 Test #235: mp3-grad2 ........................ Passed 2.65 sec; Start 229: mp2-grad1; 351/412 Test #396: python-mints13 ................... Passed 2.26 sec; Start 299: pubchem2; 352/412 Test #161: dft-grac ......................... Passed 1.9,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:32078,energy,energy,32078,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,2,['energy'],['energy']
Energy Efficiency,"............ Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 sec*proc (2 tests); python = 2.27 sec*proc (1 test); quicktests = 1245.05 sec*proc (16 tests); sapt = 925.94 sec*proc (3 tests); scf = 9.06 sec*proc (1 test); smoketests = 1277.91 sec*proc (20 tests); tdscf = 32.86 sec*proc (4 tests); tutorial = 2.56 sec*proc (1 test). Total Te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1910,energy,energy,1910,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523,2,['energy'],['energy']
Energy Efficiency,............ Passed 4.48 sec; Start 291: psimrcc-ccsd_t-3; 358/413 Test #335: scf2 ............................. Passed 4.02 sec; Start 120: dfcasscf-fzc-sp; 359/413 Test #382: psi4numpy-cphf ................... Passed 2.44 sec; Start 123: dfccdl1; 360/413 Test #358: scf-response1 .................... Passed 3.50 sec; Start 354: stability2; 361/413 Test #364: x2c3 ............................. Passed 3.89 sec; Start 224: mints10; 362/413 Test #121: dfcasscf-sp ...................... Passed 7.51 sec; Start 380: mints12; 363/413 Test #138: dfmp2-grad3 ...................... Passed 8.40 sec; Start 384: psi4numpy-rhf; 364/413 Test #97: cisd-h2o-clpse ................... Passed 3.90 sec; Start 104: decontract; 365/413 Test #334: scf-occ .......................... Passed 4.00 sec; Start 190: fci-tdm; 366/413 Test #6: ao-casscf-sp ..................... Passed 8.67 sec; Start 290: psimrcc-ccsd_t-2; 367/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 2.63 sec; Start 355: tu1-h2o-energy; 368/413 Test #345: stability1 ....................... Passed 4.39 sec; Start 223: mints9; 369/413 Test #136: dfmp2-grad1 ...................... Passed 8.06 sec; Start 222: mints-helper; 370/413 Test #122: dfccd1 ........................... Passed 6.37 sec; Start 351: sapt-sf1; 371/413 Test #384: psi4numpy-rhf .................... Passed 1.01 sec; Start 347: dfep2-2; 372/413 Test #380: mints12 .......................... Passed 1.28 sec; Start 332: scf-bs; 373/413 Test #354: stability2 ....................... Passed 2.35 sec; Start 216: mints3; 374/413 Test #224: mints10 .......................... Passed 2.23 sec; Start 289: psimrcc-ccsd_t-1; 375/413 Test #190: fci-tdm .......................... Passed 1.59 sec; Start 329: scf-guess-read1; 376/413 Test #355: tu1-h2o-energy ................... Passed 1.51 sec; Start 336: scf3; 377/413 Test #222: mints-helper ..................... Passed 1.51 sec; Start 132: dfmp2-2; 378/413 Test #104: decontract ....................... Passed 1.91 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:34644,energy,energy,34644,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,............ Passed 5.25 sec; Start 344: dfep2-1; 338/411 Test #337: scf6 ............................. Passed 72.37 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 3.50 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 2.09 sec; Start 347: sapt-dft2; 341/411 Test #341: soscf-ref ........................ Passed 18.07 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.35 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 2.84 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.48 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.30 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.78 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.49 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.77 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 15.39 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 4.89 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.65 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 42.14 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 18.41 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 22.53 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 4.63 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 4.51 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.00 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.58 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:32310,energy,energy,32310,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,2,['energy'],['energy']
Energy Efficiency,............ Passed 5.62 sec; Start 345: dfep2-1; 331/412 Test #345: dfep2-1 .......................... Passed 3.45 sec; Start 346: dfep2-2; 332/412 Test #339: scf7 ............................. Passed 14.95 sec; Start 347: sapt-dft1; 333/412 Test #342: soscf-ref ........................ Passed 11.97 sec; Start 348: sapt-dft2; 334/412 Test #346: dfep2-2 .......................... Passed 2.51 sec; Start 349: sapt-compare; 335/412 Test #341: soscf-large ...................... Passed 15.65 sec; Start 350: sapt-sf1; 336/412 Test #350: sapt-sf1 ......................... Passed 2.59 sec; Start 351: dft-custom; 337/412 Test #320: sapt5 ............................ Passed 79.60 sec; Start 352: dft-reference; 338/412 Test #352: dft-reference .................... Passed 3.84 sec; Start 353: stability2; 339/412 Test #353: stability2 ....................... Passed 2.13 sec; Start 354: tu1-h2o-energy; 340/412 Test #354: tu1-h2o-energy ................... Passed 1.92 sec; Start 355: tu2-ch2-energy; 341/412 Test #355: tu2-ch2-energy ................... Passed 2.09 sec; Start 356: tu3-h2o-opt; 342/412 Test #337: scf5 ............................. Passed 38.57 sec; Start 357: scf-response1; 343/412 Test #351: dft-custom ....................... Passed 14.33 sec; Start 358: tu4-h2o-freq; 344/412 Test #356: tu3-h2o-opt ...................... Passed 5.63 sec; Start 359: tu5-sapt; 345/412 Test #357: scf-response1 .................... Passed 3.03 sec; Start 360: tu6-cp-ne2; 346/412 Test #347: sapt-dft1 ........................ Passed 22.98 sec; Start 361: x2c1; 347/412 Test #343: soscf-dft ........................ Passed 34.22 sec; Start 362: x2c2; 348/412 Test #338: scf6 ............................. Passed 40.60 sec; Start 363: x2c3; 349/412 Test #362: x2c2 ............................. Passed 2.21 sec; Start 364: zaptn-nh2; 350/412 Test #363: x2c3 ............................. Passed 2.10 sec; Start 365: options1; 351/412 Test #365: options1 ......................... Passed 0.73 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:31806,energy,energy,31806,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,2,['energy'],['energy']
Energy Efficiency,............. Passed 15.00 sec; Start 242: ocepa-grad1; 230/412 Test #165: dft-grad1 ........................ Passed 15.13 sec; Start 342: soscf-ref; 231/412 Test #367: dft-smoke ........................ Passed 15.50 sec; Start 373: dft-custom-hybrid; 232/412 Test #123: dfccd-grad1 ...................... Passed 6.25 sec; Start 269: opt2-fd; 233/412 Test #286: props2 ........................... Passed 14.05 sec; Start 370: dft-jk; 234/412 Test #267: opt1-fd .......................... Passed 11.73 sec; Start 99: cisd-sp; 235/412 Test #351: dft-custom ....................... Passed 15.52 sec; Start 9: castup2; 236/412 Test #198: freq-isotope1 .................... Passed 12.61 sec; Start 102: cubeprop; 237/412 Test #242: ocepa-grad1 ...................... Passed 8.65 sec; Start 89: cepa2; 238/412 Test #369: scf-freq1 ........................ Passed 11.84 sec; Start 394: python-3-index-transforms; 239/412 Test #218: mints6 ........................... Passed 13.33 sec; Start 336: scf4; 240/412 Test #14: cbs-xtpl-energy .................. Passed 13.08 sec; Start 3: casscf-fzc-sp; 241/412 Test #287: props3 ........................... Passed 14.51 sec; Start 109: dcft2; 242/412 Test #342: soscf-ref ........................ Passed 10.41 sec; Start 296: psithon1; 243/412 Test #89: cepa2 ............................ Passed 2.85 sec; Start 158: dfrasscf-sp; 244/412 Test #109: dcft2 ............................ Passed 3.34 sec; Start 125: dfccsdl1; 245/412 Test #358: tu4-h2o-freq ..................... Passed 13.49 sec; Start 368: scf-hess1; 246/412 Test #373: dft-custom-hybrid ................ Passed 13.43 sec; Start 271: opt4; 247/412 Test #3: casscf-fzc-sp .................... Passed 5.48 sec; Start 227: mp2-1; 248/412 Test #269: opt2-fd .......................... Passed 11.59 sec; Start 140: dfomp2-1; 249/412 Test #9: castup2 .......................... Passed 7.85 sec; Start 87: cepa0-grad2; 250/412 Test #370: dft-jk ........................... Passed 11.26 sec; Start 84: cdom,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:22563,energy,energy,22563,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,............. Passed 16.91 sec; Start 344: stability1; 289/412 Test #254: omp2p5-1 ......................... Passed 12.39 sec; Start 400: json-schema-1-energy; 290/412 Test #137: dfmp2-grad3 ...................... Passed 7.47 sec; Start 332: scf1; 291/412 Test #96: cisd-h2o+-2 ...................... Passed 6.39 sec; Start 235: mp3-grad2; 292/412 Test #296: psithon1 ......................... Passed 15.36 sec; Start 180: fsapt2; 293/412 Test #172: dft2 ............................. Passed 5.76 sec; Start 95: cisd-h2o+-1; 294/412 Test #191: fci-coverage ..................... Passed 14.26 sec; Start 311: rasci-c2-active; 295/412 Test #188: fci-h2o-fzcv ..................... Passed 6.52 sec; Start 94: cisd-h2o+-0; 296/412 Test #356: tu3-h2o-opt ...................... Passed 4.47 sec; Start 192: fcidump; 297/412 Test #158: dfrasscf-sp ...................... Passed 15.74 sec; Start 266: opt1; 298/412 Test #252: omp2-grad1 ....................... Passed 6.59 sec; Start 119: dfcasscf-fzc-sp; 299/412 Test #400: json-schema-1-energy ............. Passed 3.65 sec; Start 258: omp3-1; 300/412 Test #125: dfccsdl1 ......................... Passed 12.84 sec; Start 284: opt-freeze-coords; 301/412 Test #124: dfccsd1 .......................... Passed 12.15 sec; Start 295: psimrcc-sp1; 302/412 Test #344: stability1 ....................... Passed 4.03 sec; Start 389: python-curve; 303/412 Test #244: ocepa1 ........................... Passed 7.37 sec; Start 247: omp2-1; 304/412 Test #235: mp3-grad2 ........................ Passed 4.62 sec; Start 237: mpn-bh; 305/412 Test #332: scf1 ............................. Passed 4.99 sec; Start 120: dfcasscf-sp; 306/412 Test #119: dfcasscf-fzc-sp .................. Passed 2.91 sec; Start 340: scf-property; 307/412 Test #258: omp3-1 ........................... Passed 2.90 sec; Start 285: props1; 308/412 Test #192: fcidump .......................... Passed 3.82 sec; Start 135: dfmp2-grad1; 309/412 Test #180: fsapt2 ........................... Passed 5.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:28107,energy,energy,28107,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,............. Passed 19.25 sec; Start 154: dft-grad-lr1; 203/412 Test #297: psithon2 ......................... Passed 15.83 sec; Start 170: dft-vv10; 204/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.18 sec; Start 325: sapt8; 205/412 Test #316: sapt1 ............................ Passed 18.84 sec; Start 151: dfomp2p5-1; 206/412 Test #24: cc12 ............................. Passed 18.59 sec; Start 302: pywrap-basis; 207/412 Test #239: nbody-intermediates .............. Passed 18.39 sec; Start 219: mints8; 208/412 Test #322: sapt-dft-api ..................... Passed 17.60 sec; Start 90: cepa3; 209/412 Test #255: omp2p5-2 ......................... Passed 17.27 sec; Start 87: cepa0-grad2; 210/412 Test #177: extern1 .......................... Passed 16.72 sec; Start 341: soscf-large; 211/412 Test #166: dft-grad2 ........................ Passed 17.52 sec; Start 292: psimrcc-fd-freq1; 212/412 Test #248: omp2-2 ........................... Passed 17.21 sec; Start 14: cbs-xtpl-energy; 213/412 Test #5: casscf-sa-sp ..................... Passed 14.38 sec; Start 89: cepa2; 214/412 Test #87: cepa0-grad2 ...................... Passed 8.28 sec; Start 339: scf7; 215/412 Test #154: dft-grad-lr1 ..................... Passed 17.73 sec; Start 91: cepa1; 216/412 Test #106: dcft-grad3 ....................... Passed 18.05 sec; Start 358: tu4-h2o-freq; 217/412 Test #325: sapt8 ............................ Passed 16.07 sec; Start 7: casscf-sp; 218/412 Test #170: dft-vv10 ......................... Passed 18.36 sec; Start 286: props2; 219/412 Test #90: cepa3 ............................ Passed 15.49 sec; Start 367: dft-smoke; 220/412 Test #219: mints8 ........................... Passed 16.29 sec; Start 165: dft-grad1; 221/412 Test #302: pywrap-basis ..................... Passed 17.34 sec; Start 351: dft-custom; 222/412 Test #89: cepa2 ............................ Passed 11.16 sec; Start 287: props3; 223/412 Test #341: soscf-large ...................... Passed 15.61 sec; Start 198: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:20008,energy,energy,20008,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,............. Passed 2.44 sec; Start 323: scf-guess-read1; 163/401 Test #324: scf-upcast-custom-basis .......... Passed 1.58 sec; Start 351: scf-response1; 164/401 Test #8: castup1 .......................... Passed 1.40 sec; Start 253: omp3-1; 165/401 Test #396: json-schema_0_energy ............. Passed 2.12 sec; Start 378: psi4numpy-dfmp2; 166/401 Test #118: dfcasscf-sp ...................... Passed 2.30 sec; Start 117: dfcasscf-fzc-sp; 167/401 Test #133: dfmp2-grad1 ...................... Passed 2.40 sec; Start 219: molden1; 168/401 Test #323: scf-guess-read1 .................. Passed 1.63 sec; Start 227: mp2p5-grad1; 169/401 Test #351: scf-response1 .................... Passed 1.60 sec; Start 329: scf2; 170/401 Test #378: psi4numpy-dfmp2 .................. Passed 1.50 sec; Start 218: mints10; 171/401 Test #329: scf2 ............................. Passed 2.95 sec; Start 115: ao-dfcasscf-sp; 172/401 Test #117: dfcasscf-fzc-sp .................. Passed 4.07 sec; Start 348: tu1-h2o-energy; 173/401 Test #138: dfomp2-1 ......................... Passed 7.01 sec; Start 305: pywrap-molecule; 174/401 Test #218: mints10 .......................... Passed 3.21 sec; Start 400: json-schema_0_gradient; 175/401 Test #253: omp3-1 ........................... Passed 5.17 sec; Start 122: dfccsd1; 176/401 Test #125: dfccsd-t-grad1 ................... Passed 19.43 sec; Start 393: python-memdfjk; 177/401 Test #220: molden2 .......................... Passed 6.09 sec; Start 123: dfccsdl1; 178/401 Test #305: pywrap-molecule .................. Passed 1.23 sec; Start 347: stability2; 179/401 Test #219: molden1 .......................... Passed 5.30 sec; Start 326: scf-bs; 180/401 Test #227: mp2p5-grad1 ...................... Passed 4.58 sec; Start 349: tu2-ch2-energy; 181/401 Test #348: tu1-h2o-energy ................... Passed 1.49 sec; Start 330: scf3; 182/401 Test #239: ocepa1 ........................... Passed 6.49 sec; Start 380: psi4numpy-rhf-gradient; 183/401 Test #115: ao-dfcasscf-sp ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:16152,energy,energy,16152,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,............. Passed 25.12 sec; Start 287: props3; 228/412 Test #90: cepa3 ............................ Passed 12.62 sec; Start 286: props2; 229/412 Test #339: scf7 ............................. Passed 18.98 sec; Start 198: freq-isotope1; 230/412 Test #367: dft-smoke ........................ Passed 21.68 sec; Start 218: mints6; 231/412 Test #165: dft-grad1 ........................ Passed 25.39 sec; Start 14: cbs-xtpl-energy; 232/412 Test #351: dft-custom ....................... Passed 23.35 sec; Start 358: tu4-h2o-freq; 233/412 Test #286: props2 ........................... Passed 22.38 sec; Start 267: opt1-fd; 234/412 Test #287: props3 ........................... Passed 24.71 sec; Start 373: dft-custom-hybrid; 235/412 Test #198: freq-isotope1 .................... Passed 15.05 sec; Start 369: scf-freq1; 236/412 Test #179: fsapt1 ........................... Passed 2074.68 sec; Start 91: cepa1; 237/412 Test #218: mints6 ........................... Passed 20.79 sec; Start 269: opt2-fd; 238/412 Test #14: cbs-xtpl-energy .................. Passed 21.79 sec; Start 342: soscf-ref; 239/412 Test #267: opt1-fd .......................... Passed 19.24 sec; Start 370: dft-jk; 240/412 Test #358: tu4-h2o-freq ..................... Passed 20.68 sec; Start 394: python-3-index-transforms; 241/412 Test #369: scf-freq1 ........................ Passed 20.20 sec; Start 102: cubeprop; 242/412 Test #373: dft-custom-hybrid ................ Passed 24.82 sec; Start 99: cisd-sp; 243/412 Test #91: cepa1 ............................ Passed 14.78 sec; Start 242: ocepa-grad1; 244/412 Test #269: opt2-fd .......................... Passed 21.15 sec; Start 336: scf4; 245/412 Test #342: soscf-ref ........................ Passed 17.67 sec; Start 123: dfccd-grad1; 246/412 Test #242: ocepa-grad1 ...................... Passed 13.62 sec; Start 9: castup2; 247/412 Test #370: dft-jk ........................... Passed 22.00 sec; Start 199: freq-isotope2; 248/412 Test #394: python-3-index-transforms ........ Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:22160,energy,energy,22160,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,............. Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 ............................. Passed 11.75 sec; Start 446: x2c2; 144/185 Test #446: x2c2 ............................. Passed 7.26 sec; Start 447: x2c3; 145/185 Test #447: x2c3 ............................. Passed 3.02 sec; Start 448: x2c-perturb-h; 146/185 Test #448: x2c-perturb-h ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12666,energy,energy,12666,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,2,['energy'],['energy']
Energy Efficiency,.............. Passed 1.92 sec; Start 160: dft-grac; 349/411 Test #311: rasci-h2o ........................ Passed 1.24 sec; Start 390: python-mints9; 350/411 Test #352: stability2 ....................... Passed 1.55 sec; Start 288: psimrcc-ccsd_t-2; 351/411 Test #362: x2c3 ............................. Passed 2.02 sec; Start 395: python-mints13; 352/411 Test #361: x2c2 ............................. Passed 1.93 sec; Start 405: skeleton; 353/411 Test #407: skeletondfmp2 .................... Passed 1.57 sec; Start 387: python-energy; 354/411 Test #213: mints2 ........................... Passed 2.49 sec; Start 333: scf2; 355/411 Test #356: scf-response1 .................... Passed 2.51 sec; Start 298: pubchem2; 356/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.78 sec; Start 287: psimrcc-ccsd_t-1; 357/411 Test #330: scf-bs ........................... Passed 1.15 sec; Start 210: mcscf2; 358/411 Test #8: castup1 .......................... Passed 1.48 sec; Start 102: decontract; 359/411 Test #387: python-energy .................... Passed 0.97 sec; Start 380: psi4numpy-cphf; 360/411 Test #221: mints9 ........................... Passed 2.01 sec; Start 383: psi4numpy-rhf-gradient; 361/411 Test #405: skeleton ......................... Passed 1.14 sec; Start 222: mints10; 362/411 Test #327: scf-guess-read1 .................. Passed 1.74 sec; Start 403: json-schema-1-gradient; 363/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.44 sec; Start 406: skeletonaointegrals; 364/411 Test #345: dfep2-2 .......................... Passed 1.99 sec; Start 408: skeletonmointegrals; 365/411 Test #160: dft-grac ......................... Passed 1.80 sec; Start 378: mints12; 366/411 Test #333: scf2 ............................. Passed 1.44 sec; Start 220: mints-helper; 367/411 Test #390: python-mints9 .................... Passed 2.15 sec; Start 404: json-schema-1-properties; 368/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.31 sec; Start 398: json-v11-gradient;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:33717,energy,energy,33717,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,.............. Passed 14.82 sec; Start 343: stability1; 337/411 Test #343: stability1 ....................... Passed 3.78 sec; Start 344: dfep2-1; 338/411 Test #341: soscf-ref ........................ Passed 12.15 sec; Start 345: dfep2-2; 339/411 Test #345: dfep2-2 .......................... Passed 2.11 sec; Start 346: sapt-dft1; 340/411 Test #320: sapt6 ............................ Passed 158.81 sec; Start 347: sapt-dft2; 341/411 Test #344: dfep2-1 .......................... Passed 3.37 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 31.87 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.22 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.64 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.34 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.35 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.30 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.04 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 14.09 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 5.75 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.88 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 45.66 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 15.20 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 21.11 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 2.85 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 3.06 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.71 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:32210,energy,energy,32210,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,2,['energy'],['energy']
Energy Efficiency,.............. Passed 2.12 sec; Start 132: dfmp2-2; 362/413 Test #364: x2c3 ............................. Passed 1.78 sec; Start 329: scf-guess-read1; 363/413 Test #97: cisd-h2o-clpse ................... Passed 1.34 sec; Start 289: psimrcc-ccsd_t-1; 364/413 Test #334: scf-occ .......................... Passed 1.56 sec; Start 313: rasci-h2o; 365/413 Test #353: dft-reference .................... Passed 3.00 sec; Start 380: mints12; 366/413 Test #345: stability1 ....................... Passed 2.37 sec; Start 104: decontract; 367/413 Test #354: stability2 ....................... Passed 1.07 sec; Start 290: psimrcc-ccsd_t-2; 368/413 Test #382: psi4numpy-cphf ................... Passed 1.29 sec; Start 190: fci-tdm; 369/413 Test #123: dfccdl1 .......................... Passed 1.45 sec; Start 223: mints9; 370/413 Test #358: scf-response1 .................... Passed 2.27 sec; Start 384: psi4numpy-rhf; 371/413 Test #120: dfcasscf-fzc-sp .................. Passed 1.74 sec; Start 355: tu1-h2o-energy; 372/413 Test #224: mints10 .......................... Passed 1.32 sec; Start 347: dfep2-2; 373/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ........................ Passed 1.13 sec; Start 222: mints-helper; 376/413 Test #132: dfmp2-2 .......................... Passed 1.70 sec; Start 356: tu2-ch2-energy; 377/413 Test #329: scf-guess-read1 .................. Passed 1.55 sec; Start 8: castup1; 378/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 1.46 sec; Start 332: scf-bs; 379/413 Test #384: psi4numpy-rhf .................... Passed 0.97 sec; Start 216: mints3; 380/413 Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:34949,energy,energy,34949,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,.............. Passed 23.03 sec; Start 212: mcscf3; 379/412 Test #355: tu2-ch2-energy ................... Passed 23.46 sec; Start 217: mints5; 380/412 Test #221: mints-helper ..................... Passed 24.04 sec; Start 240: numpy-array-interface; 381/412 Test #401: json-schema-1-ghost .............. Passed 23.42 sec; Start 176: docs-dft; 382/412 Test #397: python-memdfjk ................... Passed 23.80 sec; Start 213: mints1; 383/412 Test #215: mints3 ........................... Passed 23.55 sec; Start 209: matrix1; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 25.10 sec; Start 175: docs-bases; 385/412 Test #379: mints12 .......................... Passed 23.88 sec; Start 216: mints4; 386/412 Test #335: scf3 ............................. Passed 23.31 sec; Start 309: pywrap-db3; 387/412 Test #405: json-schema-1-properties ......... Passed 23.98 sec; Start 365: options1; 388/412 Test #310: pywrap-molecule .................. Passed 23.01 sec; Start 403: json-schema-1-throws; 389/412 Test #388: python-energy .................... Passed 23.44 sec; Start 399: json-v11-gradient; 390/412 Test #383: psi4numpy-rhf .................... Passed 23.40 sec; Start 4: casscf-semi; 391/412 Test #210: mcscf1 ........................... Passed 23.77 sec; Start 5: casscf-sa-sp; 392/412 Test #240: numpy-array-interface ............ Passed 22.55 sec; Start 7: casscf-sp; 393/412 Test #410: skeletonscf ...................... Passed 23.60 sec; Start 88: cepa1; 394/412 Test #212: mcscf3 ........................... Passed 23.17 sec; Start 119: dfcasscf-fzc-sp; 395/412 Test #217: mints5 ........................... Passed 23.23 sec; Start 224: molden1; 396/412 Test #176: docs-dft ......................... Passed 23.17 sec; Start 314: rasscf-sp; 397/412 Test #209: matrix1 .......................... Passed 22.15 sec; 398/412 Test #213: mints1 ........................... Passed 22.39 sec; 399/412 Test #175: docs-bases ....................... Passed 22.12 sec; 400/412 Test #216: mint,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:36773,energy,energy,36773,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,.............. Passed 26.08 sec; Start 343: stability1; 344/411 Test #343: stability1 ....................... Passed 2.47 sec; Start 344: dfep2-1; 345/411 Test #344: dfep2-1 .......................... Passed 2.53 sec; Start 345: dfep2-2; 346/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 346: sapt-dft1; 347/411 Test #346: sapt-dft1 ........................ Passed 17.11 sec; Start 347: sapt-dft2; 348/411 Test #347: sapt-dft2 ........................ Passed 105.13 sec; Start 348: sapt-compare; 349/411 Test #348: sapt-compare ..................... Passed 33.63 sec; Start 349: sapt-sf1; 350/411 Test #349: sapt-sf1 ......................... Passed 0.85 sec; Start 350: dft-custom; 351/411 Test #350: dft-custom ....................... Passed 10.58 sec; Start 351: dft-reference; 352/411 Test #351: dft-reference .................... Passed 2.94 sec; Start 352: stability2; 353/411 Test #352: stability2 ....................... Passed 1.07 sec; Start 353: tu1-h2o-energy; 354/411 Test #353: tu1-h2o-energy ................... Passed 1.22 sec; Start 354: tu2-ch2-energy; 355/411 Test #354: tu2-ch2-energy ................... Passed 0.98 sec; Start 355: tu3-h2o-opt; 356/411 Test #355: tu3-h2o-opt ...................... Passed 2.38 sec; Start 356: scf-response1; 357/411 Test #356: scf-response1 .................... Passed 2.12 sec; Start 357: tu4-h2o-freq; 358/411 Test #357: tu4-h2o-freq ..................... Passed 5.68 sec; Start 358: tu5-sapt; 359/411 Test #358: tu5-sapt ......................... Passed 18.96 sec; Start 359: tu6-cp-ne2; 360/411 Test #359: tu6-cp-ne2 ....................... Passed 21.60 sec; Start 360: x2c1; 361/411 Test #360: x2c1 ............................. Passed 5.53 sec; Start 361: x2c2; 362/411 Test #361: x2c2 ............................. Passed 1.63 sec; Start 362: x2c3; 363/411 Test #362: x2c3 ............................. Passed 1.69 sec; Start 363: zaptn-nh2; 364/411 Test #363: zaptn-nh2 ........................ Passed 2.10 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:32529,energy,energy,32529,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,2,['energy'],['energy']
Energy Efficiency,.............. Passed 27.17 sec; Start 343: stability1; 344/411 Test #343: stability1 ....................... Passed 2.35 sec; Start 344: dfep2-1; 345/411 Test #344: dfep2-1 .......................... Passed 2.82 sec; Start 345: dfep2-2; 346/411 Test #345: dfep2-2 .......................... Passed 2.01 sec; Start 346: sapt-dft1; 347/411 Test #346: sapt-dft1 ........................ Passed 18.81 sec; Start 347: sapt-dft2; 348/411 Test #347: sapt-dft2 ........................ Passed 106.56 sec; Start 348: sapt-compare; 349/411 Test #348: sapt-compare ..................... Passed 34.92 sec; Start 349: sapt-sf1; 350/411 Test #349: sapt-sf1 ......................... Passed 1.00 sec; Start 350: dft-custom; 351/411 Test #350: dft-custom ....................... Passed 11.96 sec; Start 351: dft-reference; 352/411 Test #351: dft-reference .................... Passed 2.94 sec; Start 352: stability2; 353/411 Test #352: stability2 ....................... Passed 0.99 sec; Start 353: tu1-h2o-energy; 354/411 Test #353: tu1-h2o-energy ................... Passed 1.17 sec; Start 354: tu2-ch2-energy; 355/411 Test #354: tu2-ch2-energy ................... Passed 1.04 sec; Start 355: tu3-h2o-opt; 356/411 Test #355: tu3-h2o-opt ...................... Passed 2.13 sec; Start 356: scf-response1; 357/411 Test #356: scf-response1 .................... Passed 2.20 sec; Start 357: tu4-h2o-freq; 358/411 Test #357: tu4-h2o-freq ..................... Passed 7.10 sec; Start 358: tu5-sapt; 359/411 Test #358: tu5-sapt ......................... Passed 18.53 sec; Start 359: tu6-cp-ne2; 360/411 Test #359: tu6-cp-ne2 ....................... Passed 26.31 sec; Start 360: x2c1; 361/411 Test #360: x2c1 ............................. Passed 5.86 sec; Start 361: x2c2; 362/411 Test #361: x2c2 ............................. Passed 1.73 sec; Start 362: x2c3; 363/411 Test #362: x2c3 ............................. Passed 1.67 sec; Start 363: zaptn-nh2; 364/411 Test #363: zaptn-nh2 ........................ Passed 2.99 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:32558,energy,energy,32558,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,2,['energy'],['energy']
Energy Efficiency,.............. Passed 3.69 sec; Start 231: mp2p5-grad1; 315/411 Test #95: cisd-h2o+-2 ...................... Passed 4.18 sec; Start 294: psimrcc-sp1; 316/411 Test #251: omp2-grad1 ....................... Passed 5.09 sec; Start 118: dfcasscf-fzc-sp; 317/411 Test #228: mp2-grad1 ........................ Passed 3.74 sec; Start 243: ocepa1; 318/411 Test #231: mp2p5-grad1 ...................... Passed 2.43 sec; Start 257: omp3-1; 319/411 Test #343: stability1 ....................... Passed 3.80 sec; Start 399: json-schema-1-energy; 320/411 Test #225: mom .............................. Passed 3.48 sec; Start 362: x2c3; 321/411 Test #351: dft-reference .................... Passed 3.74 sec; Start 284: props1; 322/411 Test #294: psimrcc-sp1 ...................... Passed 4.56 sec; Start 295: psithon1; 323/411 Test #362: x2c3 ............................. Passed 3.16 sec; Start 388: python-curve; 324/411 Test #118: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 327: scf-guess-read1; 325/411 Test #399: json-schema-1-energy ............. Passed 3.99 sec; Start 121: dfccdl1; 326/411 Test #257: omp3-1 ........................... Passed 4.41 sec; Start 377: pywrap-align-chiral; 327/411 Test #284: props1 ........................... Passed 5.03 sec; Start 4: casscf-semi; 328/411 Test #243: ocepa1 ........................... Passed 6.83 sec; Start 246: omp2-1; 329/411 Test #327: scf-guess-read1 .................. Passed 2.70 sec; Start 363: zaptn-nh2; 330/411 Test #377: pywrap-align-chiral .............. Passed 3.07 sec; Start 314: sad1; 331/411 Test #388: python-curve ..................... Passed 4.00 sec; Start 253: omp2p5-1; 332/411 Test #121: dfccdl1 .......................... Passed 4.11 sec; Start 397: json-v11-energy; 333/411 Test #363: zaptn-nh2 ........................ Passed 2.47 sec; Start 384: psi4numpy-rhf-hessian; 334/411 Test #246: omp2-1 ........................... Passed 4.32 sec; Start 239: numpy-array-interface; 335/411 Test #314: sad1 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:30329,energy,energy,30329,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,.............. Passed 55.58 sec; Start 343: stability1; 337/411 Test #343: stability1 ....................... Passed 4.70 sec; Start 344: dfep2-1; 338/411 Test #341: soscf-ref ........................ Passed 17.33 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 4.28 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 2.36 sec; Start 347: sapt-dft2; 341/411 Test #320: sapt6 ............................ Passed 163.62 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.27 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.95 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 24.71 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 3.46 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.41 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.29 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 4.38 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 18.32 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 10.36 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 4.52 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 51.91 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 21.08 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 23.18 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 2.81 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 3.13 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 6.27 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:32225,energy,energy,32225,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,2,['energy'],['energy']
Energy Efficiency,............... Passed 1.98 sec; Start 357: tu4-h2o-freq; 208/404 Test #317: sapt3 ............................ Passed 12.01 sec; Start 291: psimrcc-fd-freq1; 209/404 Test #264: opt-lindep-change ................ Passed 11.78 sec; Start 322: sapt-dft-lrc; 210/404 Test #335: scf4 ............................. Passed 6.39 sec; Start 266: opt1-fd; 211/404 Test #16: cbs-xtpl-gradient ................ Passed 12.33 sec; Start 202: fnocc4; 212/404 Test #23: cc12 ............................. Passed 3.92 sec; Start 268: opt2-fd; 213/404 Test #324: sapt8 ............................ Passed 9.73 sec; Start 368: scf-freq1; 214/404 Test #357: tu4-h2o-freq ..................... Passed 7.06 sec; Start 301: pywrap-basis; 215/404 Test #266: opt1-fd .......................... Passed 5.36 sec; Start 156: dft-b2plyp; 216/404 Test #202: fnocc4 ........................... Passed 5.78 sec; Start 367: scf-hess1; 217/404 Test #291: psimrcc-fd-freq1 ................. Passed 7.14 sec; Start 14: cbs-xtpl-energy; 218/404 Test #160: dft-grad-lr1 ..................... Passed 11.52 sec; Start 21: cc10; 219/404 Test #268: opt2-fd .......................... Passed 8.52 sec; Start 372: dft-custom-hybrid; 220/404 Test #368: scf-freq1 ........................ Passed 5.77 sec; Start 154: dfrasscf-sp; 221/404 Test #21: cc10 ............................. Passed 2.97 sec; Start 164: dft-grad1; 222/404 Test #322: sapt-dft-lrc ..................... Passed 10.62 sec; Start 89: cepa3; 223/404 Test #154: dfrasscf-sp ...................... Passed 2.00 sec; Start 128: dfccsdat1; 224/404 Test #367: scf-hess1 ........................ Passed 6.01 sec; Start 7: casscf-sp; 225/404 Test #301: pywrap-basis ..................... Passed 7.80 sec; Start 341: soscf-ref; 226/404 Test #14: cbs-xtpl-energy .................. Passed 7.07 sec; Start 124: dfccsdl1; 227/404 Test #156: dft-b2plyp ....................... Passed 8.45 sec; Start 197: freq-isotope1; 228/404 Test #89: cepa3 ............................ Passed 3.93 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:20147,energy,energy,20147,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,............... Passed 14.26 sec; Start 343: stability1; 337/411 Test #343: stability1 ....................... Passed 5.25 sec; Start 344: dfep2-1; 338/411 Test #337: scf6 ............................. Passed 72.37 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 3.50 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 2.09 sec; Start 347: sapt-dft2; 341/411 Test #341: soscf-ref ........................ Passed 18.07 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.35 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 2.84 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.48 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.30 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.78 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.49 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.77 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 15.39 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 4.89 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.65 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 42.14 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 18.41 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 22.53 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 4.63 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 4.51 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.00 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:32212,energy,energy,32212,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,2,['energy'],['energy']
Energy Efficiency,............... Passed 16.23 sec; Start 343: stability1; 329/411 Test #343: stability1 ....................... Passed 2.42 sec; Start 344: dfep2-1; 330/411 Test #319: sapt5 ............................ Passed 75.45 sec; Start 345: dfep2-2; 331/411 Test #317: sapt3 ............................ Passed 76.62 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 4.52 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 15.89 sec; Start 349: sapt-sf1; 335/411 Test #341: soscf-ref ........................ Passed 14.83 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 32.53 sec; Start 351: dft-reference; 337/411 Test #349: sapt-sf1 ......................... Passed 5.59 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.67 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.51 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.42 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.23 sec; Start 356: scf-response1; 342/411 Test #355: tu3-h2o-opt ...................... Passed 3.24 sec; Start 357: tu4-h2o-freq; 343/411 Test #337: scf6 ............................. Passed 39.47 sec; Start 358: tu5-sapt; 344/411 Test #356: scf-response1 .................... Passed 2.66 sec; Start 359: tu6-cp-ne2; 345/411 Test #350: dft-custom ....................... Passed 13.31 sec; Start 360: x2c1; 346/411 Test #346: sapt-dft1 ........................ Passed 23.57 sec; Start 361: x2c2; 347/411 Test #342: soscf-dft ........................ Passed 32.76 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 3.88 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.58 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:31635,energy,energy,31635,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,............... Passed 16.33 sec; Start 369: dft-jk; 164/411 Test #369: dft-jk ........................... Passed 14.21 sec; Start 101: cubeprop; 165/411 Test #245: ocepa3 ........................... Passed 125.71 sec; Start 338: scf7; 166/411 Test #101: cubeprop ......................... Passed 12.33 sec; Start 250: omp2-5; 167/411 Test #338: scf7 ............................. Passed 28.83 sec; Start 59: cc42; 168/411 Test #65: cc48 ............................. Passed 220.80 sec; Start 393: python-3-index-transforms; 169/411 Test #393: python-3-index-transforms ........ Passed 9.60 sec; Start 5: casscf-sa-sp; 170/411 Test #67: cc4a ............................. Passed 159.27 sec; Start 249: omp2-4; 171/411 Test #26: cc13b ............................ Passed 367.76 sec; Start 268: opt2-fd; 172/411 Test #5: casscf-sa-sp ..................... Passed 33.51 sec; Start 291: psimrcc-fd-freq1; 173/411 Test #268: opt2-fd .......................... Passed 18.35 sec; Start 14: cbs-xtpl-energy; 174/411 Test #14: cbs-xtpl-energy .................. Passed 19.84 sec; Start 64: cc47; 175/411 Test #291: psimrcc-fd-freq1 ................. Passed 34.37 sec; Start 368: scf-freq1; 176/411 Test #368: scf-freq1 ........................ Passed 21.40 sec; Start 365: cubeprop-esp; 177/411 Test #365: cubeprop-esp ..................... Passed 9.20 sec; Start 33: cc18; 178/411 Test #261: omp3-5 ........................... Passed 311.02 sec; Start 153: dfomp2p5-grad2; 179/411 Test #59: cc42 ............................. Passed 230.29 sec; Start 158: dft-ghost; 180/411 Test #158: dft-ghost ........................ Passed 7.87 sec; Start 51: cc35; 181/411 Test #250: omp2-5 ........................... Passed 295.87 sec; Start 357: tu4-h2o-freq; 182/411 Test #115: dcft9 ............................ Passed 349.55 sec; Start 105: dcft-grad3; 183/411 Test #104: dcft-grad2 ....................... Passed 336.22 sec; Start 180: fsapt-terms; 184/411 Test #64: cc47 ............................. Passed 152,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:16377,energy,energy,16377,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,2,['energy'],['energy']
Energy Efficiency,............... Passed 24.01 sec; Start 369: scf-freq1; 226/412 Test #90: cepa3 ............................ Passed 19.06 sec; Start 5: casscf-sa-sp; 227/412 Test #109: dcft2 ............................ Passed 8.49 sec; Start 269: opt2-fd; 228/412 Test #255: omp2p5-2 ......................... Passed 21.97 sec; Start 373: dft-custom-hybrid; 229/412 Test #342: soscf-ref ........................ Passed 12.72 sec; Start 242: ocepa-grad1; 230/412 Test #208: gibbs ............................ Passed 26.48 sec; Start 144: dfomp2-grad1; 231/412 Test #367: dft-smoke ........................ Passed 16.84 sec; Start 151: dfomp2p5-1; 232/412 Test #218: mints6 ........................... Passed 12.88 sec; Start 370: dft-jk; 233/412 Test #49: cc32 ............................. Passed 22.29 sec; Start 38: cc22; 234/412 Test #22: cc10 ............................. Passed 28.55 sec; Start 358: tu4-h2o-freq; 235/412 Test #106: dcft-grad3 ....................... Passed 17.51 sec; Start 14: cbs-xtpl-energy; 236/412 Test #259: omp3-2 ........................... Passed 24.84 sec; Start 54: cc37; 237/412 Test #369: scf-freq1 ........................ Passed 12.30 sec; Start 138: dfmp2-grad4; 238/412 Test #286: props2 ........................... Passed 14.44 sec; Start 89: cepa2; 239/412 Test #269: opt2-fd .......................... Passed 12.26 sec; Start 394: python-3-index-transforms; 240/412 Test #373: dft-custom-hybrid ................ Passed 13.08 sec; Start 51: cc34; 241/412 Test #370: dft-jk ........................... Passed 12.21 sec; Start 158: dfrasscf-sp; 242/412 Test #5: casscf-sa-sp ..................... Passed 16.14 sec; Start 140: dfomp2-1; 243/412 Test #242: ocepa-grad1 ...................... Passed 14.89 sec; Start 10: castup3; 244/412 Test #249: omp2-3 ........................... Passed 23.27 sec; Start 227: mp2-1; 245/412 Test #144: dfomp2-grad1 ..................... Passed 16.20 sec; Start 99: cisd-sp; 246/412 Test #138: dfmp2-grad4 ...................... Passed 6.36 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:22132,energy,energy,22132,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,............... Passed 3.26 sec; Start 121: dfccdl1; 320/411 Test #397: json-v11-energy .................. Passed 2.69 sec; Start 226: mp2-1; 321/411 Test #363: zaptn-nh2 ........................ Passed 2.93 sec; Start 85: cepa0-grad1; 322/411 Test #224: molden2 .......................... Passed 2.15 sec; Start 251: omp2-grad1; 323/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.87 sec; Start 399: json-schema-1-energy; 324/411 Test #343: stability1 ....................... Passed 2.09 sec; Start 223: molden1; 325/411 Test #121: dfccdl1 .......................... Passed 2.21 sec; Start 356: scf-response1; 326/411 Test #85: cepa0-grad1 ...................... Passed 1.92 sec; Start 390: python-mints9; 327/411 Test #201: fnocc3 ........................... Passed 3.62 sec; Start 345: dfep2-2; 328/411 Test #251: omp2-grad1 ....................... Passed 1.67 sec; Start 355: tu3-h2o-opt; 329/411 Test #226: mp2-1 ............................ Passed 3.21 sec; Start 8: castup1; 330/411 Test #399: json-schema-1-energy ............. Passed 1.78 sec; Start 221: mints9; 331/411 Test #223: molden1 .......................... Passed 1.56 sec; Start 395: python-mints13; 332/411 Test #390: python-mints9 .................... Passed 1.83 sec; Start 191: fcidump; 333/411 Test #356: scf-response1 .................... Passed 2.03 sec; Start 232: mp2p5-grad2; 334/411 Test #8: castup1 .......................... Passed 1.20 sec; Start 362: x2c3; 335/411 Test #345: dfep2-2 .......................... Passed 1.82 sec; Start 400: json-schema-1-ghost; 336/411 Test #355: tu3-h2o-opt ...................... Passed 2.09 sec; Start 262: omp3-grad1; 337/411 Test #221: mints9 ........................... Passed 1.84 sec; Start 311: rasci-h2o; 338/411 Test #395: python-mints13 ................... Passed 1.83 sec; Start 327: scf-guess-read1; 339/411 Test #400: json-schema-1-ghost .............. Passed 1.05 sec; Start 271: opt5; 340/411 Test #191: fcidump .......................... Passed 1.70 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:30755,energy,energy,30755,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,"............... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Fail",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5727,energy,energy,5727,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,2,['energy'],['energy']
Energy Efficiency,............... Passed 7.09 sec; Start 285: opt-freeze-coords; 313/413 Test #215: mints2 ........................... Passed 3.22 sec; Start 227: mom; 314/413 Test #236: mp3-grad2 ........................ Passed 4.51 sec; Start 193: fcidump; 315/413 Test #343: soscf-ref ........................ Passed 10.67 sec; Start 182: fsapt-terms; 316/413 Test #171: dft-vv10 ......................... Passed 21.02 sec; Start 104: decontract; 317/413 Test #238: mpn-bh ........................... Passed 5.18 sec; Start 225: molden1; 318/413 Test #118: ao-dfcasscf-sp ................... Passed 4.78 sec; Start 341: scf-property; 319/413 Test #104: decontract ....................... Passed 1.45 sec; Start 237: mp2-property; 320/413 Test #192: fci-coverage ..................... Passed 7.43 sec; Start 357: tu3-h2o-opt; 321/413 Test #187: fci-h2o .......................... Passed 6.75 sec; Start 134: dfmp2-4; 322/413 Test #227: mom .............................. Passed 4.34 sec; Start 355: tu1-h2o-energy; 323/413 Test #285: opt-freeze-coords ................ Passed 5.81 sec; Start 119: dfcasscf-sa-sp; 324/413 Test #355: tu1-h2o-energy ................... Passed 1.23 sec; Start 255: omp2p5-1; 325/413 Test #372: scf-coverage ..................... Passed 7.31 sec; Start 286: props1; 326/413 Test #193: fcidump .......................... Passed 6.38 sec; Start 346: dfep2-1; 327/413 Test #237: mp2-property ..................... Passed 3.24 sec; Start 186: fci-dipole; 328/413 Test #341: scf-property ..................... Passed 4.58 sec; Start 363: x2c2; 329/413 Test #225: molden1 .......................... Passed 5.11 sec; Start 230: mp2-grad1; 330/413 Test #357: tu3-h2o-opt ...................... Passed 4.50 sec; Start 358: scf-response1; 331/413 Test #182: fsapt-terms ...................... Passed 7.85 sec; Start 336: scf3; 332/413 Test #336: scf3 ............................. Passed 1.25 sec; Start 365: zaptn-nh2; 333/413 Test #346: dfep2-1 .......................... Passed 3.37 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:30471,energy,energy,30471,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,............... Passed 7.68 sec; Start 255: omp2p5-grad1; 272/411 Test #370: scf-coverage ..................... Passed 3.04 sec; Start 192: fd-freq-energy; 273/411 Test #117: dfcasscf-sa-sp ................... Passed 4.27 sec; Start 198: freq-isotope2; 274/411 Test #255: omp2p5-grad1 ..................... Passed 2.89 sec; Start 135: dfmp2-grad2; 275/411 Test #329: scf-guess-read2 .................. Passed 4.14 sec; Start 187: fci-h2o-fzcv; 276/411 Test #185: fci-h2o .......................... Passed 5.92 sec; Start 85: cepa0-grad1; 277/411 Test #184: fci-dipole ....................... Passed 6.05 sec; Start 171: dft2; 278/411 Test #186: fci-h2o-2 ........................ Passed 5.95 sec; Start 257: omp3-1; 279/411 Test #85: cepa0-grad1 ...................... Passed 1.79 sec; Start 93: cisd-h2o+-0; 280/411 Test #135: dfmp2-grad2 ...................... Passed 3.64 sec; Start 385: psi4numpy-fci; 281/411 Test #198: freq-isotope2 .................... Passed 4.55 sec; Start 179: fsapt2; 282/411 Test #192: fd-freq-energy ................... Passed 7.19 sec; Start 95: cisd-h2o+-2; 283/411 Test #257: omp3-1 ........................... Passed 1.88 sec; Start 339: scf-property; 284/411 Test #187: fci-h2o-fzcv ..................... Passed 4.82 sec; Start 6: ao-casscf-sp; 285/411 Test #171: dft2 ............................. Passed 4.92 sec; Start 99: cisd-sp-2; 286/411 Test #385: psi4numpy-fci .................... Passed 3.00 sec; Start 241: ocepa-grad1; 287/411 Test #93: cisd-h2o+-0 ...................... Passed 3.98 sec; Start 94: cisd-h2o+-1; 288/411 Test #95: cisd-h2o+-2 ...................... Passed 4.00 sec; Start 199: fnocc1; 289/411 Test #6: ao-casscf-sp ..................... Passed 3.18 sec; Start 331: scf1; 290/411 Test #339: scf-property ..................... Passed 4.12 sec; Start 262: omp3-grad1; 291/411 Test #179: fsapt2 ........................... Passed 4.96 sec; Start 265: opt1; 292/411 Test #241: ocepa-grad1 ...................... Passed 3.33 sec; Start 121: d,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:26275,energy,energy,26275,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,............... Passed 74.62 sec; Start 343: stability1; 329/411 Test #317: sapt3 ............................ Passed 76.90 sec; Start 344: dfep2-1; 330/411 Test #341: soscf-ref ........................ Passed 11.34 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.84 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.53 sec; Start 347: sapt-dft2; 333/411 Test #340: soscf-large ...................... Passed 15.14 sec; Start 348: sapt-compare; 334/411 Test #345: dfep2-2 .......................... Passed 2.23 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.24 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 34.70 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 33.58 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.63 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.12 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.52 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.17 sec; Start 356: scf-response1; 342/411 Test #356: scf-response1 .................... Passed 2.45 sec; Start 357: tu4-h2o-freq; 343/411 Test #350: dft-custom ....................... Passed 13.99 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.92 sec; Start 359: tu6-cp-ne2; 345/411 Test #346: sapt-dft1 ........................ Passed 22.50 sec; Start 360: x2c1; 346/411 Test #342: soscf-dft ........................ Passed 33.42 sec; Start 361: x2c2; 347/411 Test #357: tu4-h2o-freq ..................... Passed 10.29 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.36 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.84 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:31572,energy,energy,31572,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy']
Energy Efficiency,............... Passed 9.33 sec; Start 343: stability1; 337/411 Test #337: scf6 ............................. Passed 38.63 sec; Start 344: dfep2-1; 338/411 Test #343: stability1 ....................... Passed 2.90 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 3.24 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 1.96 sec; Start 347: sapt-dft2; 341/411 Test #320: sapt6 ............................ Passed 154.12 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.16 sec; Start 349: sapt-sf1; 343/411 Test #346: sapt-dft1 ........................ Passed 26.36 sec; Start 350: dft-custom; 344/411 Test #349: sapt-sf1 ......................... Passed 4.22 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.37 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.27 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.18 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.21 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 15.59 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 3.20 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 2.17 sec; Start 358: tu5-sapt; 352/411 Test #357: tu4-h2o-freq ..................... Passed 10.43 sec; Start 359: tu6-cp-ne2; 353/411 Test #348: sapt-compare ..................... Passed 44.39 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 17.87 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 3.90 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 2.31 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:32225,energy,energy,32225,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,2,['energy'],['energy']
Energy Efficiency,................ Passed 1.60 sec; Start 157: dft-grac; 352/411 Test #221: mints9 ........................... Passed 1.93 sec; Start 210: mcscf2; 353/411 Test #8: castup1 .......................... Passed 2.19 sec; Start 222: mints10; 354/411 Test #363: zaptn-nh2 ........................ Passed 3.62 sec; Start 102: decontract; 355/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.31 sec; Start 403: json-schema-1-gradient; 356/411 Test #203: frac ............................. Passed 3.91 sec; Start 293: psimrcc-pt2; 357/411 Test #395: python-mints13 ................... Passed 1.93 sec; Start 406: skeletonaointegrals; 358/411 Test #390: python-mints9 .................... Passed 2.02 sec; Start 330: scf-bs; 359/411 Test #229: mp2-grad2 ........................ Passed 4.59 sec; Start 214: mints3; 360/411 Test #255: omp2p5-grad1 ..................... Passed 5.44 sec; Start 298: pubchem2; 361/411 Test #130: dfmp2-2 .......................... Passed 2.29 sec; Start 353: tu1-h2o-energy; 362/411 Test #352: stability2 ....................... Passed 1.46 sec; Start 96: cisd-h2o-clpse; 363/411 Test #210: mcscf2 ........................... Passed 1.47 sec; Start 383: psi4numpy-rhf-gradient; 364/411 Test #102: decontract ....................... Passed 1.32 sec; Start 378: mints12; 365/411 Test #333: scf2 ............................. Passed 1.83 sec; Start 311: rasci-h2o; 366/411 Test #214: mints3 ........................... Passed 1.03 sec; Start 209: mcscf1; 367/411 Test #157: dft-grac ......................... Passed 1.79 sec; Start 220: mints-helper; 368/411 Test #222: mints10 .......................... Passed 2.06 sec; Start 405: skeleton; 369/411 Test #293: psimrcc-pt2 ...................... Passed 1.62 sec; Start 398: json-v11-gradient; 370/411 Test #353: tu1-h2o-energy ................... Passed 1.11 sec; Start 400: json-schema-1-ghost; 371/411 Test #406: skeletonaointegrals .............. Passed 1.69 sec; Start 404: json-schema-1-properties; 372/411 Test #298: pu,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:33977,energy,energy,33977,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,................ Passed 1.64 sec; Start 406: skeleton; 378/412 Test #223: mints10 .......................... Passed 1.59 sec; Start 217: mints5; 379/412 Test #215: mints3 ........................... Passed 1.33 sec; Start 407: skeletonaointegrals; 380/412 Test #310: pywrap-molecule .................. Passed 1.44 sec; Start 355: tu2-ch2-energy; 381/412 Test #411: skeletonsointegrals .............. Passed 1.57 sec; Start 212: mcscf3; 382/412 Test #401: json-schema-1-ghost .............. Passed 1.49 sec; Start 383: psi4numpy-rhf; 383/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.69 sec; Start 189: fci-tdm; 384/412 Test #353: stability2 ....................... Passed 1.68 sec; Start 210: mcscf1; 385/412 Test #399: json-v11-gradient ................ Passed 1.41 sec; Start 335: scf3; 386/412 Test #405: json-schema-1-properties ......... Passed 1.45 sec; Start 240: numpy-array-interface; 387/412 Test #412: skeletonwavefunction ............. Passed 1.62 sec; Start 213: mints1; 388/412 Test #388: python-energy .................... Passed 1.31 sec; Start 309: pywrap-db3; 389/412 Test #294: psimrcc-pt2 ...................... Passed 1.64 sec; Start 176: docs-dft; 390/412 Test #217: mints5 ........................... Passed 1.26 sec; Start 365: options1; 391/412 Test #397: python-memdfjk ................... Passed 1.87 sec; Start 410: skeletonscf; 392/412 Test #406: skeleton ......................... Passed 1.57 sec; Start 175: docs-bases; 393/412 Test #383: psi4numpy-rhf .................... Passed 1.25 sec; Start 216: mints4; 394/412 Test #212: mcscf3 ........................... Passed 1.34 sec; Start 209: matrix1; 395/412 Test #210: mcscf1 ........................... Passed 1.13 sec; Start 403: json-schema-1-throws; 396/412 Test #240: numpy-array-interface ............ Passed 0.83 sec; Start 88: cepa1; 397/412 Test #355: tu2-ch2-energy ................... Passed 1.66 sec; 398/412 Test #365: options1 ......................... Passed 0.66 sec; 399/412 Test #335: scf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:36520,energy,energy,36520,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,................ Passed 1.70 sec; Start 8: castup1; 362/411 Test #121: dfccdl1 .......................... Passed 4.00 sec; Start 220: mints-helper; 363/411 Test #85: cepa0-grad1 ...................... Passed 4.11 sec; Start 378: mints12; 364/411 Test #257: omp3-1 ........................... Passed 4.17 sec; Start 309: pywrap-molecule; 365/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.72 sec; Start 108: dcft2; 366/411 Test #8: castup1 .......................... Passed 2.22 sec; Start 102: decontract; 367/411 Test #231: mp2p5-grad1 ...................... Passed 2.58 sec; Start 96: cisd-h2o-clpse; 368/411 Test #120: dfccd1 ........................... Passed 2.46 sec; Start 214: mints3; 369/411 Test #253: omp2p5-1 ......................... Passed 2.47 sec; Start 311: rasci-h2o; 370/411 Test #220: mints-helper ..................... Passed 1.21 sec; Start 404: json-schema-1-properties; 371/411 Test #309: pywrap-molecule .................. Passed 1.07 sec; Start 353: tu1-h2o-energy; 372/411 Test #378: mints12 .......................... Passed 1.17 sec; Start 349: sapt-sf1; 373/411 Test #214: mints3 ........................... Passed 1.00 sec; Start 383: psi4numpy-rhf-gradient; 374/411 Test #102: decontract ....................... Passed 1.26 sec; Start 293: psimrcc-pt2; 375/411 Test #311: rasci-h2o ........................ Passed 1.36 sec; Start 400: json-schema-1-ghost; 376/411 Test #96: cisd-h2o-clpse ................... Passed 1.56 sec; Start 398: json-v11-gradient; 377/411 Test #404: json-schema-1-properties ......... Passed 1.09 sec; Start 405: skeleton; 378/411 Test #349: sapt-sf1 ......................... Passed 1.04 sec; Start 406: skeletonaointegrals; 379/411 Test #353: tu1-h2o-energy ................... Passed 1.12 sec; Start 396: python-memdfjk; 380/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.25 sec; Start 411: skeletonwavefunction; 381/411 Test #293: psimrcc-pt2 ...................... Passed 1.38 sec; Start 408: skeletonmointegrals; 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:34774,energy,energy,34774,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,................ Passed 17.48 sec; Start 366: dft-smoke; 176/411 Test #350: dft-custom ....................... Passed 13.17 sec; Start 16: cbs-xtpl-gradient; 177/411 Test #217: mints6 ........................... Passed 12.32 sec; Start 238: nbody-intermediates; 178/411 Test #152: dfomp2p5-grad1 ................... Passed 15.33 sec; Start 324: sapt8; 179/411 Test #256: omp2p5-grad2 ..................... Passed 20.64 sec; Start 107: dcft1; 180/411 Test #72: cc54 ............................. Passed 15.94 sec; Start 285: props2; 181/411 Test #32: cc17 ............................. Passed 18.71 sec; Start 242: ocepa-grad2; 182/411 Test #366: dft-smoke ........................ Passed 13.42 sec; Start 101: cubeprop; 183/411 Test #238: nbody-intermediates .............. Passed 15.61 sec; Start 296: psithon2; 184/411 Test #324: sapt8 ............................ Passed 13.51 sec; Start 133: dfmp2-ecp; 185/411 Test #16: cbs-xtpl-gradient ................ Passed 20.70 sec; Start 14: cbs-xtpl-energy; 186/411 Test #107: dcft1 ............................ Passed 12.94 sec; Start 177: extern2; 187/411 Test #285: props2 ........................... Passed 12.15 sec; Start 73: cc55; 188/411 Test #101: cubeprop ......................... Passed 10.22 sec; Start 105: dcft-grad3; 189/411 Test #73: cc55 ............................. Passed 6.89 sec; Start 148: dfomp3-grad1; 190/411 Test #14: cbs-xtpl-energy .................. Passed 9.50 sec; Start 142: dfomp2-4; 191/411 Test #242: ocepa-grad2 ...................... Passed 18.47 sec; Start 200: fnocc2; 192/411 Test #133: dfmp2-ecp ........................ Passed 10.76 sec; Start 207: gibbs; 193/411 Test #296: psithon2 ......................... Passed 13.53 sec; Start 393: python-3-index-transforms; 194/411 Test #105: dcft-grad3 ....................... Passed 10.78 sec; Start 194: fd-freq-gradient; 195/411 Test #177: extern2 .......................... Passed 15.79 sec; Start 77: cc8; 196/411 Test #148: dfomp3-grad1 ..................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:17333,energy,energy,17333,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,................ Passed 4.05 sec; Start 179: extern2; 197/413 Test #256: omp2p5-2 ......................... Passed 37.38 sec; Start 360: tu5-sapt; 198/413 Test #201: fnocc1 ........................... Passed 37.85 sec; Start 260: omp3-2; 199/413 Test #240: nbody-intermediates .............. Passed 25.85 sec; Start 191: fci-tdm-2; 200/413 Test #145: dfomp2-grad1 ..................... Passed 26.84 sec; Start 348: sapt-dft1; 201/413 Test #24: cc12 ............................. Passed 50.83 sec; Start 249: omp2-2; 202/413 Test #394: python-cc54 ...................... Passed 56.05 sec; Start 401: json-schema-1-energy; 203/413 Test #174: dft3 ............................. Passed 25.44 sec; Start 324: sapt-dft-lrc; 204/413 Test #360: tu5-sapt ......................... Passed 20.54 sec; Start 243: ocepa-grad1; 205/413 Test #401: json-schema-1-energy ............. Passed 5.82 sec; Start 90: cepa3; 206/413 Test #179: extern2 .......................... Passed 31.66 sec; Start 389: python-energy; 207/413 Test #389: python-energy .................... Passed 1.70 sec; Start 166: dft-grad1; 208/413 Test #191: fci-tdm-2 ........................ Passed 20.28 sec; Start 292: psimrcc-ccsd_t-4; 209/413 Test #72: cc53 ............................. Passed 85.96 sec; Start 141: dfomp2-1; 210/413 Test #324: sapt-dft-lrc ..................... Passed 19.90 sec; Start 403: json-schema-1-orient; 211/413 Test #73: cc54 ............................. Passed 48.53 sec; Start 209: gibbs; 212/413 Test #348: sapt-dft1 ........................ Passed 24.61 sec; Start 167: dft-grad2; 213/413 Test #260: omp3-2 ........................... Passed 35.02 sec; Start 402: json-schema-1-ghost; 214/413 Test #166: dft-grad1 ........................ Passed 14.49 sec; Start 277: opt9; 215/413 Test #403: json-schema-1-orient ............. Passed 2.67 sec; Start 139: dfmp2-grad4; 216/413 Test #402: json-schema-1-ghost .............. Passed 1.84 sec; Start 178: extern1; 217/413 Test #243: ocepa-grad1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:19482,energy,energy,19482,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,2,['energy'],['energy']
Energy Efficiency,................ Passed 4.61 sec; Start 344: stability1; 330/412 Test #344: stability1 ....................... Passed 5.62 sec; Start 345: dfep2-1; 331/412 Test #345: dfep2-1 .......................... Passed 3.45 sec; Start 346: dfep2-2; 332/412 Test #339: scf7 ............................. Passed 14.95 sec; Start 347: sapt-dft1; 333/412 Test #342: soscf-ref ........................ Passed 11.97 sec; Start 348: sapt-dft2; 334/412 Test #346: dfep2-2 .......................... Passed 2.51 sec; Start 349: sapt-compare; 335/412 Test #341: soscf-large ...................... Passed 15.65 sec; Start 350: sapt-sf1; 336/412 Test #350: sapt-sf1 ......................... Passed 2.59 sec; Start 351: dft-custom; 337/412 Test #320: sapt5 ............................ Passed 79.60 sec; Start 352: dft-reference; 338/412 Test #352: dft-reference .................... Passed 3.84 sec; Start 353: stability2; 339/412 Test #353: stability2 ....................... Passed 2.13 sec; Start 354: tu1-h2o-energy; 340/412 Test #354: tu1-h2o-energy ................... Passed 1.92 sec; Start 355: tu2-ch2-energy; 341/412 Test #355: tu2-ch2-energy ................... Passed 2.09 sec; Start 356: tu3-h2o-opt; 342/412 Test #337: scf5 ............................. Passed 38.57 sec; Start 357: scf-response1; 343/412 Test #351: dft-custom ....................... Passed 14.33 sec; Start 358: tu4-h2o-freq; 344/412 Test #356: tu3-h2o-opt ...................... Passed 5.63 sec; Start 359: tu5-sapt; 345/412 Test #357: scf-response1 .................... Passed 3.03 sec; Start 360: tu6-cp-ne2; 346/412 Test #347: sapt-dft1 ........................ Passed 22.98 sec; Start 361: x2c1; 347/412 Test #343: soscf-dft ........................ Passed 34.22 sec; Start 362: x2c2; 348/412 Test #338: scf6 ............................. Passed 40.60 sec; Start 363: x2c3; 349/412 Test #362: x2c2 ............................. Passed 2.21 sec; Start 364: zaptn-nh2; 350/412 Test #363: x2c3 ............................. Passed 2.10 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:31708,energy,energy,31708,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,2,['energy'],['energy']
Energy Efficiency,................. Passed 1.30 sec; Start 354: tu2-ch2-energy; 385/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 330: scf-bs; 386/411 Test #398: json-v11-gradient ................ Passed 1.38 sec; Start 382: psi4numpy-rhf; 387/411 Test #406: skeletonaointegrals .............. Passed 1.11 sec; Start 387: python-energy; 388/411 Test #411: skeletonwavefunction ............. Passed 0.91 sec; Start 209: mcscf1; 389/411 Test #408: skeletonmointegrals .............. Passed 0.89 sec; Start 188: fci-tdm; 390/411 Test #354: tu2-ch2-energy ................... Passed 0.76 sec; Start 308: pywrap-db3; 391/411 Test #352: stability2 ....................... Passed 0.85 sec; Start 211: mcscf3; 392/411 Test #410: skeletonsointegrals .............. Passed 0.91 sec; Start 334: scf3; 393/411 Test #382: psi4numpy-rhf .................... Passed 0.82 sec; Start 239: numpy-array-interface; 394/411 Test #330: scf-bs ........................... Passed 0.83 sec; Start 409: skeletonscf; 395/411 Test #387: python-energy .................... Passed 0.72 sec; Start 175: docs-dft; 396/411 Test #209: mcscf1 ........................... Passed 0.65 sec; Start 216: mints5; 397/411 Test #188: fci-tdm .......................... Passed 0.82 sec; Start 208: matrix1; 398/411 Test #308: pywrap-db3 ....................... Passed 0.67 sec; Start 212: mints1; 399/411 Test #409: skeletonscf ...................... Passed 0.60 sec; Start 364: options1; 400/411 Test #239: numpy-array-interface ............ Passed 0.64 sec; Start 215: mints4; 401/411 Test #211: mcscf3 ........................... Passed 0.68 sec; Start 174: docs-bases; 402/411 Test #334: scf3 ............................. Passed 0.68 sec; Start 402: json-schema-1-throws; 403/411 Test #175: docs-dft ......................... Passed 0.66 sec; Start 87: cepa1; 404/411 Test #216: mints5 ........................... Passed 0.66 sec; 405/411 Test #208: matrix1 .......................... Passed 0.54 sec; 406/411 Test #212: mints1 ..,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:37036,energy,energy,37036,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,................. Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 13.43 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #10: castup3 .......................... Passed 9.55 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 15.41 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 9.22 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #12: cbs-parser ....................... Passed 34.00 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 27.35 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #278: opt13 ............................ Passed 937.76 sec; Start 20: cc1; 26/411 Test #11: cbs-delta-energy ................. Passed 87.39 sec; Start 21: cc10; 27/411 Test #20: cc1 .............................. Passed 39.26 sec; Start 22: cc11; 28/411 Test #21: cc10 ............................. Passed 16.76 sec; Start 23: cc12; 29/411 Test #316: sapt2 ............................ Passed 390.55 sec; Start 24: cc13; 30/411 Test #17: cbs-xtpl-opt ..................... Passed 79.98 sec; Start 26: cc13b; 31/411 Test #19: cbs-xtpl-wrapper ................. Passed 69.43 sec; Start 27: cc13c; 32/411 Test #23: cc12 ............................. Passed 22.65 sec; Start 28: cc13d; 33/411 Test #22: cc11 ............................. Passed 25.63 sec; Start 29: cc14; 34/411 Test #13: cbs-xtpl-alpha ................... Passed 186.38 sec; Start 30: cc15; 35/411 Test #26: cc13b ............................ Passed 73.68 sec; Start 31: cc16; 36/411 Test #27: cc13c ............................ Passed 79.10 sec; Start 32: cc17; 37/411 Test #32: cc17 ............................. Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:2644,energy,energy,2644,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['energy'],['energy']
Energy Efficiency,................. Passed 27.57 sec; Start 247: omp2-1; 315/412 Test #122: dfccdl1 .......................... Passed 26.46 sec; Start 135: dfmp2-grad1; 316/412 Test #226: mom .............................. Passed 28.33 sec; Start 295: psimrcc-sp1; 317/412 Test #86: cepa0-grad1 ...................... Passed 27.79 sec; Start 117: ao-dfcasscf-sp; 318/412 Test #272: opt5 ............................. Passed 28.69 sec; Start 204: frac; 319/412 Test #356: tu3-h2o-opt ...................... Passed 29.05 sec; Start 234: mp3-grad1; 320/412 Test #285: props1 ........................... Passed 28.92 sec; Start 229: mp2-grad1; 321/412 Test #247: omp2-1 ........................... Passed 24.68 sec; Start 121: dfccd1; 322/412 Test #135: dfmp2-grad1 ...................... Passed 21.20 sec; Start 235: mp3-grad2; 323/412 Test #117: ao-dfcasscf-sp ................... Passed 19.04 sec; Start 232: mp2p5-grad1; 324/412 Test #295: psimrcc-sp1 ...................... Passed 22.23 sec; Start 400: json-schema-1-energy; 325/412 Test #204: frac ............................. Passed 17.16 sec; Start 344: stability1; 326/412 Test #234: mp3-grad1 ........................ Passed 17.12 sec; Start 378: pywrap-align-chiral; 327/412 Test #229: mp2-grad1 ........................ Passed 16.69 sec; Start 345: dfep2-1; 328/412 Test #121: dfccd1 ........................... Passed 16.56 sec; Start 389: python-curve; 329/412 Test #235: mp3-grad2 ........................ Passed 16.33 sec; Start 236: mp2-property; 330/412 Test #232: mp2p5-grad1 ...................... Passed 17.17 sec; Start 352: dft-reference; 331/412 Test #400: json-schema-1-energy ............. Passed 17.10 sec; Start 385: psi4numpy-rhf-hessian; 332/412 Test #344: stability1 ....................... Passed 17.94 sec; Start 119: dfcasscf-fzc-sp; 333/412 Test #345: dfep2-1 .......................... Passed 18.02 sec; Start 398: json-v11-energy; 334/412 Test #389: python-curve ..................... Passed 17.89 sec; Start 258: omp3-1; 335/412 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:30296,energy,energy,30296,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,.................. Passed 1.67 sec; Start 399: json-v11-gradient; 379/412 Test #223: mints10 .......................... Passed 2.18 sec; Start 335: scf3; 380/412 Test #396: python-mints13 ................... Passed 1.96 sec; Start 212: mcscf3; 381/412 Test #363: x2c3 ............................. Passed 3.02 sec; Start 379: mints12; 382/412 Test #354: tu1-h2o-energy ................... Passed 1.83 sec; Start 310: pywrap-molecule; 383/412 Test #381: psi4numpy-cphf ................... Passed 1.45 sec; Start 210: mcscf1; 384/412 Test #397: python-memdfjk ................... Passed 0.98 sec; Start 217: mints5; 385/412 Test #4: casscf-semi ...................... Passed 15.97 sec; Start 383: psi4numpy-rhf; 386/412 Test #103: decontract ....................... Passed 1.76 sec; Start 240: numpy-array-interface; 387/412 Test #401: json-schema-1-ghost .............. Passed 1.26 sec; Start 213: mints1; 388/412 Test #405: json-schema-1-properties ......... Passed 1.52 sec; Start 175: docs-bases; 389/412 Test #388: python-energy .................... Passed 1.01 sec; Start 309: pywrap-db3; 390/412 Test #335: scf3 ............................. Passed 0.79 sec; Start 209: matrix1; 391/412 Test #212: mcscf3 ........................... Passed 0.75 sec; Start 216: mints4; 392/412 Test #210: mcscf1 ........................... Passed 0.78 sec; Start 176: docs-dft; 393/412 Test #399: json-v11-gradient ................ Passed 1.25 sec; Start 365: options1; 394/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 2.35 sec; Start 410: skeletonscf; 395/412 Test #240: numpy-array-interface ............ Passed 0.80 sec; Start 403: json-schema-1-throws; 396/412 Test #213: mints1 ........................... Passed 0.80 sec; Start 88: cepa1; 397/412 Test #383: psi4numpy-rhf .................... Passed 0.92 sec; 398/412 Test #310: pywrap-molecule .................. Passed 1.22 sec; 399/412 Test #175: docs-bases ....................... Passed 0.83 sec; 400/412 Test #209: matrix1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:36641,energy,energy,36641,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,.................. Passed 1265.86 sec; Start 360: tu6-cp-ne2; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1275.03 sec; Start 45: cc29; 15/412 Test #301: pywrap-all ....................... Passed 1314.72 sec; Start 71: cc52; 16/412 Test #115: dcft8 ............................ Passed 739.08 sec; Start 387: cookbook-rohf-orb-rot; 17/412 Test #104: dcft-grad1 ....................... Passed 1433.59 sec; Start 282: opt-irc-2; 18/412 Test #25: cc13 ............................. Passed 617.71 sec; Start 380: cc-module; 19/412 Test #228: mp2-def2 ......................... Passed 401.25 sec; Start 113: dcft6; 20/412 Test #112: dcft5 ............................ Passed 395.55 sec; Start 32: cc16; 21/412 Test #45: cc29 ............................. Passed 271.40 sec; Start 18: cbs-xtpl-func; 22/412 Test #30: cc14 ............................. Passed 418.86 sec; Start 182: fsapt-allterms; 23/412 Test #71: cc52 ............................. Passed 249.62 sec; Start 194: fd-freq-energy-large; 24/412 Test #36: cc2 .............................. Passed 801.63 sec; Start 196: fd-freq-gradient-large; 25/412 Test #29: cc13d ............................ Passed 420.42 sec; Start 279: opt13; 26/412 Test #282: opt-irc-2 ........................ Passed 233.89 sec; Start 11: cbs-delta-energy; 27/412 Test #183: isapt1 ........................... Passed 423.36 sec; Start 374: dft-custom-mgga; 28/412 Test #40: cc24 ............................. Passed 958.14 sec; Start 48: cc31; 29/412 Test #360: tu6-cp-ne2 ....................... Passed 427.69 sec; Start 59: cc41; 30/412 Test #113: dcft6 ............................ Passed 223.52 sec; Start 321: sapt6; 31/412 Test #13: cbs-xtpl-alpha ................... Passed 500.97 sec; Start 61: cc43; 32/412 Test #380: cc-module ........................ Passed 316.28 sec; Start 98: cisd-opt-fd; 33/412 Test #32: cc16 ............................. Passed 277.18 sec; Start 47: cc30; 34/412 Test #387: cookbook-rohf-orb-rot ............ Passed 37,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:2589,energy,energy-large,2589,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy-large']
Energy Efficiency,.................. Passed 13.74 sec; Start 270: opt2-fd; 261/413 Test #272: opt4 ............................. Passed 10.06 sec; Start 371: dft-jk; 262/413 Test #389: python-energy .................... Passed 1.11 sec; Start 200: freq-isotope2; 263/413 Test #403: json-schema-1-orient ............. Passed 1.93 sec; Start 374: dft-custom-hybrid; 264/413 Test #89: cepa2 ............................ Passed 4.39 sec; Start 337: scf4; 265/413 Test #340: scf7 ............................. Passed 14.12 sec; Start 402: json-schema-1-ghost; 266/413 Test #288: props3 ........................... Passed 14.97 sec; Start 369: scf-hess1; 267/413 Test #402: json-schema-1-ghost .............. Passed 1.41 sec; Start 267: opt1; 268/413 Test #3: casscf-fzc-sp .................... Passed 6.04 sec; Start 387: psi4numpy-fci; 269/413 Test #200: freq-isotope2 .................... Passed 5.55 sec; Start 125: dfccsd1; 270/413 Test #163: dft-ghost ........................ Passed 8.35 sec; Start 4: casscf-semi; 271/413 Test #14: cbs-xtpl-energy .................. Passed 10.92 sec; Start 99: cisd-sp; 272/413 Test #287: props2 ........................... Passed 12.84 sec; Start 405: json-schema-1-gradient; 273/413 Test #267: opt1 ............................. Passed 3.54 sec; Start 297: psithon1; 274/413 Test #370: scf-freq1 ........................ Passed 10.10 sec; Start 407: skeleton; 275/413 Test #270: opt2-fd .......................... Passed 8.93 sec; Start 343: soscf-ref; 276/413 Test #387: psi4numpy-fci .................... Passed 3.64 sec; Start 406: json-schema-1-properties; 277/413 Test #359: tu4-h2o-freq ..................... Passed 9.73 sec; Start 409: skeletondfmp2; 278/413 Test #405: json-schema-1-gradient ........... Passed 2.12 sec; Start 134: dfmp2-4; 279/413 Test #125: dfccsd1 .......................... Passed 3.47 sec; Start 408: skeletonaointegrals; 280/413 Test #407: skeleton ......................... Passed 1.59 sec; Start 404: json-schema-1-throws; 281/413 Test #4: casscf-s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:25505,energy,energy,25505,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,.................. Passed 16.17 sec; Start 110: dcft2; 219/413 Test #178: extern1 .......................... Passed 16.74 sec; Start 102: cubeprop; 220/413 Test #141: dfomp2-1 ......................... Passed 4.81 sec; Start 303: pywrap-basis; 221/413 Test #124: dfccd-grad1 ...................... Passed 6.57 sec; Start 293: psimrcc-fd-freq1; 222/413 Test #324: sapt-dft-lrc ..................... Passed 20.75 sec; Start 220: mints8; 223/413 Test #110: dcft2 ............................ Passed 3.15 sec; Start 139: dfmp2-grad4; 224/413 Test #199: freq-isotope1 .................... Passed 11.17 sec; Start 368: dft-smoke; 225/413 Test #292: psimrcc-ccsd_t-4 ................. Passed 19.36 sec; Start 10: castup3; 226/413 Test #298: psithon2 ......................... Passed 15.94 sec; Start 367: cubeprop-esp; 227/413 Test #139: dfmp2-grad4 ...................... Passed 2.97 sec; Start 171: dft-vv10; 228/413 Test #167: dft-grad2 ........................ Passed 17.74 sec; Start 399: json-v11-energy; 229/413 Test #102: cubeprop ......................... Passed 10.53 sec; Start 268: opt1-fd; 230/413 Test #399: json-v11-energy .................. Passed 2.75 sec; Start 326: sapt8; 231/413 Test #166: dft-grad1 ........................ Passed 15.11 sec; Start 129: dfccsdt1; 232/413 Test #10: castup3 .......................... Passed 7.13 sec; Start 342: soscf-large; 233/413 Test #155: dft-grad-lr1 ..................... Passed 17.87 sec; Start 352: dft-custom; 234/413 Test #293: psimrcc-fd-freq1 ................. Passed 11.67 sec; Start 393: python-mints2; 235/413 Test #317: sapt1 ............................ Passed 18.32 sec; Start 390: python-curve; 236/413 Test #323: sapt-dft-api ..................... Passed 17.88 sec; Start 5: casscf-sa-sp; 237/413 Test #303: pywrap-basis ..................... Passed 13.99 sec; Start 401: json-schema-1-energy; 238/413 Test #367: cubeprop-esp ..................... Passed 9.61 sec; Start 228: mp2-1; 239/413 Test #393: python-mints2 .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:21511,energy,energy,21511,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,.................. Passed 28.18 sec; Start 358: tu4-h2o-freq; 225/412 Test #341: soscf-large ...................... Passed 16.00 sec; Start 342: soscf-ref; 226/412 Test #91: cepa1 ............................ Passed 13.12 sec; Start 242: ocepa-grad1; 227/412 Test #90: cepa3 ............................ Passed 17.62 sec; Start 198: freq-isotope1; 228/412 Test #5: casscf-sa-sp ..................... Passed 18.78 sec; Start 369: scf-freq1; 229/412 Test #267: opt1-fd .......................... Passed 10.29 sec; Start 218: mints6; 230/412 Test #339: scf7 ............................. Passed 13.56 sec; Start 89: cepa2; 231/412 Test #165: dft-grad1 ........................ Passed 14.67 sec; Start 373: dft-custom-hybrid; 232/412 Test #286: props2 ........................... Passed 14.02 sec; Start 269: opt2-fd; 233/412 Test #351: dft-custom ....................... Passed 13.96 sec; Start 99: cisd-sp; 234/412 Test #367: dft-smoke ........................ Passed 15.59 sec; Start 370: dft-jk; 235/412 Test #14: cbs-xtpl-energy .................. Passed 11.97 sec; Start 3: casscf-fzc-sp; 236/412 Test #358: tu4-h2o-freq ..................... Passed 11.11 sec; Start 87: cepa0-grad2; 237/412 Test #342: soscf-ref ........................ Passed 10.42 sec; Start 102: cubeprop; 238/412 Test #242: ocepa-grad1 ...................... Passed 11.41 sec; Start 394: python-3-index-transforms; 239/412 Test #369: scf-freq1 ........................ Passed 11.91 sec; Start 84: cdomp2-1; 240/412 Test #287: props3 ........................... Passed 14.51 sec; Start 158: dfrasscf-sp; 241/412 Test #89: cepa2 ............................ Passed 9.10 sec; Start 296: psithon1; 242/412 Test #198: freq-isotope1 .................... Passed 14.13 sec; Start 336: scf4; 243/412 Test #218: mints6 ........................... Passed 13.57 sec; Start 271: opt4; 244/412 Test #87: cepa0-grad2 ...................... Passed 6.34 sec; Start 227: mp2-1; 245/412 Test #373: dft-custom-hybrid ................ Passed 11.28,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:22073,energy,energy,22073,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,.................. Passed 606.44 sec; Start 71: cc52; 21/412 Test #196: fd-freq-gradient-large ........... Passed 319.51 sec; Start 282: opt-irc-2; 22/412 Test #112: dcft5 ............................ Passed 561.65 sec; Start 321: sapt6; 23/412 Test #113: dcft6 ............................ Passed 232.47 sec; Start 360: tu6-cp-ne2; 24/412 Test #374: dft-custom-mgga .................. Passed 192.83 sec; Start 13: cbs-xtpl-alpha; 25/412 Test #77: cc7 .............................. Passed 1301.69 sec; Start 47: cc30; 26/412 Test #179: fsapt1 ........................... Passed 2015.04 sec; Start 159: dfscf-bz2; 27/412 Test #182: fsapt-allterms ................... Passed 571.63 sec; Start 98: cisd-opt-fd; 28/412 Test #111: dcft4 ............................ Passed 2043.29 sec; Start 48: cc31; 29/412 Test #307: pywrap-checkrun-uhf .............. Passed 1620.37 sec; Start 387: cookbook-rohf-orb-rot; 30/412 Test #71: cc52 ............................. Passed 306.40 sec; Start 59: cc41; 31/412 Test #194: fd-freq-energy-large ............. Passed 569.87 sec; Start 32: cc16; 32/412 Test #282: opt-irc-2 ........................ Passed 255.47 sec; Start 380: cc-module; 33/412 Test #321: sapt6 ............................ Passed 178.83 sec; Start 61: cc43; 34/412 Test #47: cc30 ............................. Passed 162.90 sec; Start 348: sapt-dft2; 35/412 Test #159: dfscf-bz2 ........................ Passed 140.15 sec; Start 184: isapt2; 36/412 Test #306: pywrap-checkrun-rohf ............. Passed 1018.83 sec; Start 75: cc5a; 37/412 Test #98: cisd-opt-fd ...................... Passed 177.98 sec; Start 105: dcft-grad2; 38/412 Test #348: sapt-dft2 ........................ Passed 122.47 sec; Start 155: dft-grad-lr2; 39/412 Test #115: dcft8 ............................ Passed 910.89 sec; Start 169: dft1; 40/412 Test #48: cc31 ............................. Passed 213.55 sec; Start 303: pywrap-cbs1; 41/412 Test #184: isapt2 ........................... Passed 116.22 sec; Start 26: cc13a; 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:3289,energy,energy-large,3289,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy-large']
Energy Efficiency,.................. Passed 7.47 sec; Start 300: pubchem2; 353/413 Test #205: frac ............................. Passed 8.25 sec; Start 271: opt3; 354/413 Test #216: mints3 ........................... Passed 2.75 sec; Start 335: scf2; 355/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 3.01 sec; Start 356: tu2-ch2-energy; 356/413 Test #190: fci-tdm .......................... Passed 2.43 sec; Start 241: numpy-array-interface; 357/413 Test #364: x2c3 ............................. Passed 3.21 sec; Start 312: rasci-c2-active; 358/413 Test #181: fsapt2 ........................... Passed 5.35 sec; Start 351: sapt-sf1; 359/413 Test #97: cisd-h2o-clpse ................... Passed 2.35 sec; Start 331: scf-guess-read2; 360/413 Test #300: pubchem2 ......................... Passed 1.65 sec; Start 259: omp3-1; 361/413 Test #241: numpy-array-interface ............ Passed 0.85 sec; Start 347: dfep2-2; 362/413 Test #354: stability2 ....................... Passed 2.54 sec; Start 334: scf-occ; 363/413 Test #356: tu2-ch2-energy ................... Passed 1.48 sec; Start 87: cepa0-grad2; 364/413 Test #335: scf2 ............................. Passed 3.66 sec; Start 86: cepa0-grad1; 365/413 Test #351: sapt-sf1 ......................... Passed 2.53 sec; Start 218: mints5; 366/413 Test #347: dfep2-2 .......................... Passed 2.64 sec; Start 366: options1; 367/413 Test #388: cookbook-rohf-orb-rot ............ Passed 255.11 sec; Start 217: mints4; 368/413 Test #218: mints5 ........................... Passed 1.11 sec; Start 345: stability1; 369/413 Test #366: options1 ......................... Passed 0.73 sec; Start 332: scf-bs; 370/413 Test #217: mints4 ........................... Passed 0.72 sec; Start 290: psimrcc-ccsd_t-2; 371/413 Test #334: scf-occ .......................... Passed 3.43 sec; Start 214: mints1; 372/413 Test #271: opt3 ............................. Passed 5.90 sec; Start 138: dfmp2-grad3; 373/413 Test #214: mints1 ........................... Passed 0.75 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:34218,energy,energy,34218,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,".................. Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc (1 test); json = 2.83 sec*proc (1 test); nbody = 78.01 sec*proc (1 test); noc1 = 25.44 sec*proc (3 tests); properties = 9.06 sec*proc (1 test); psi = 1277.91 sec*proc (20 tests); psi4numpy = 5.23 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1633,energy,energy,1633,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523,2,['energy'],['energy']
Energy Efficiency,.................. Passed 9.29 sec; Start 134: dfmp2-4; 253/413 Test #287: props2 ........................... Passed 12.06 sec; Start 89: cepa2; 254/413 Test #159: dfrasscf-sp ...................... Passed 6.55 sec; Start 163: dft-ghost; 255/413 Test #359: tu4-h2o-freq ..................... Passed 9.86 sec; Start 297: psithon1; 256/413 Test #367: cubeprop-esp ..................... Passed 11.53 sec; Start 3: casscf-fzc-sp; 257/413 Test #219: mints6 ........................... Passed 12.37 sec; Start 9: castup2; 258/413 Test #371: dft-jk ........................... Passed 9.89 sec; Start 369: scf-hess1; 259/413 Test #272: opt4 ............................. Passed 8.00 sec; Start 200: freq-isotope2; 260/413 Test #99: cisd-sp .......................... Passed 7.83 sec; Start 390: python-curve; 261/413 Test #374: dft-custom-hybrid ................ Passed 9.30 sec; Start 401: json-schema-1-energy; 262/413 Test #134: dfmp2-4 .......................... Passed 5.04 sec; Start 399: json-v11-energy; 263/413 Test #270: opt2-fd .......................... Passed 8.68 sec; Start 143: dfomp2-3; 264/413 Test #89: cepa2 ............................ Passed 3.44 sec; Start 15: cbs-xtpl-freq; 265/413 Test #343: soscf-ref ........................ Passed 5.84 sec; Start 182: fsapt-terms; 266/413 Test #337: scf4 ............................. Passed 7.11 sec; Start 125: dfccsd1; 267/413 Test #390: python-curve ..................... Passed 2.27 sec; Start 372: scf-coverage; 268/413 Test #3: casscf-fzc-sp .................... Passed 4.38 sec; Start 137: dfmp2-grad2; 269/413 Test #297: psithon1 ......................... Passed 4.83 sec; Start 187: fci-h2o; 270/413 Test #401: json-schema-1-energy ............. Passed 2.54 sec; Start 4: casscf-semi; 271/413 Test #399: json-v11-energy .................. Passed 2.20 sec; Start 257: omp2p5-grad1; 272/413 Test #200: freq-isotope2 .................... Passed 4.35 sec; Start 87: cepa0-grad2; 273/413 Test #143: dfomp2-3 ......................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:24621,energy,energy,24621,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,................... Passed 1.73 sec; Start 397: json-v11-energy; 314/411 Test #139: dfomp2-1 ......................... Passed 1.95 sec; Start 363: zaptn-nh2; 315/411 Test #116: ao-dfcasscf-sp ................... Passed 2.81 sec; Start 201: fnocc3; 316/411 Test #284: props1 ........................... Passed 3.35 sec; Start 224: molden2; 317/411 Test #135: dfmp2-grad2 ...................... Passed 3.18 sec; Start 289: psimrcc-ccsd_t-3; 318/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 343: stability1; 319/411 Test #225: mom .............................. Passed 3.26 sec; Start 121: dfccdl1; 320/411 Test #397: json-v11-energy .................. Passed 2.69 sec; Start 226: mp2-1; 321/411 Test #363: zaptn-nh2 ........................ Passed 2.93 sec; Start 85: cepa0-grad1; 322/411 Test #224: molden2 .......................... Passed 2.15 sec; Start 251: omp2-grad1; 323/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.87 sec; Start 399: json-schema-1-energy; 324/411 Test #343: stability1 ....................... Passed 2.09 sec; Start 223: molden1; 325/411 Test #121: dfccdl1 .......................... Passed 2.21 sec; Start 356: scf-response1; 326/411 Test #85: cepa0-grad1 ...................... Passed 1.92 sec; Start 390: python-mints9; 327/411 Test #201: fnocc3 ........................... Passed 3.62 sec; Start 345: dfep2-2; 328/411 Test #251: omp2-grad1 ....................... Passed 1.67 sec; Start 355: tu3-h2o-opt; 329/411 Test #226: mp2-1 ............................ Passed 3.21 sec; Start 8: castup1; 330/411 Test #399: json-schema-1-energy ............. Passed 1.78 sec; Start 221: mints9; 331/411 Test #223: molden1 .......................... Passed 1.56 sec; Start 395: python-mints13; 332/411 Test #390: python-mints9 .................... Passed 1.83 sec; Start 191: fcidump; 333/411 Test #356: scf-response1 .................... Passed 2.03 sec; Start 232: mp2p5-grad2; 334/411 Test #8: castup1 .......................... Passed 1.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:30155,energy,energy,30155,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,................... Passed 13.00 sec; Start 369: dft-jk; 237/411 Test #14: cbs-xtpl-energy .................. Passed 15.20 sec; Start 393: python-3-index-transforms; 238/411 Test #291: psimrcc-fd-freq1 ................. Passed 20.11 sec; Start 101: cubeprop; 239/411 Test #135: dfmp2-grad2 ...................... Passed 16.90 sec; Start 141: dfomp2-3; 240/411 Test #176: extern1 .......................... Passed 22.16 sec; Start 357: tu4-h2o-freq; 241/411 Test #338: scf7 ............................. Passed 20.20 sec; Start 255: omp2p5-grad1; 242/411 Test #368: scf-freq1 ........................ Passed 16.31 sec; Start 268: opt2-fd; 243/411 Test #4: casscf-semi ...................... Passed 12.19 sec; Start 335: scf4; 244/411 Test #83: cdomp2-1 ......................... Passed 16.98 sec; Start 108: dcft2; 245/411 Test #137: dfmp2-grad4 ...................... Passed 16.44 sec; Start 132: dfmp2-4; 246/411 Test #141: dfomp2-3 ......................... Passed 8.12 sec; Start 192: fd-freq-energy; 247/411 Test #10: castup3 .......................... Passed 13.33 sec; Start 226: mp2-1; 248/411 Test #197: freq-isotope1 .................... Passed 15.96 sec; Start 365: cubeprop-esp; 249/411 Test #372: dft-custom-hybrid ................ Passed 13.62 sec; Start 157: dfrasscf-sp; 250/411 Test #101: cubeprop ......................... Passed 9.18 sec; Start 201: fnocc3; 251/411 Test #393: python-3-index-transforms ........ Passed 9.83 sec; Start 270: opt4; 252/411 Test #255: omp2p5-grad1 ..................... Passed 6.91 sec; Start 15: cbs-xtpl-freq; 253/411 Test #369: dft-jk ........................... Passed 10.97 sec; Start 180: fsapt-terms; 254/411 Test #313: rasscf-sp ........................ Passed 29.07 sec; Start 199: fnocc1; 255/411 Test #268: opt2-fd .......................... Passed 12.17 sec; Start 3: casscf-fzc-sp; 256/411 Test #357: tu4-h2o-freq ..................... Passed 16.31 sec; Start 367: scf-hess1; 257/411 Test #365: cubeprop-esp ..................... Passed 8.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:23152,energy,energy,23152,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,................... Passed 18.96 sec; Start 350: dft-custom; 218/411 Test #177: extern2 .......................... Passed 16.79 sec; Start 176: extern1; 219/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.27 sec; Start 366: dft-smoke; 220/411 Test #153: dft-grad-lr1 ..................... Passed 16.84 sec; Start 5: casscf-sa-sp; 221/411 Test #303: pywrap-checkrun-convcrit ......... Passed 18.51 sec; Start 291: psimrcc-fd-freq1; 222/411 Test #165: dft-grad2 ........................ Passed 17.24 sec; Start 286: props3; 223/411 Test #296: psithon2 ......................... Passed 14.54 sec; Start 285: props2; 224/411 Test #207: gibbs ............................ Passed 20.48 sec; Start 313: rasscf-sp; 225/411 Test #218: mints8 ........................... Passed 15.21 sec; Start 338: scf7; 226/411 Test #340: soscf-large ...................... Passed 14.47 sec; Start 135: dfmp2-grad2; 227/411 Test #324: sapt8 ............................ Passed 15.35 sec; Start 14: cbs-xtpl-energy; 228/411 Test #164: dft-grad1 ........................ Passed 14.70 sec; Start 217: mints6; 229/411 Test #178: fsapt1 ........................... Passed 1823.47 sec; Start 368: scf-freq1; 230/411 Test #350: dft-custom ....................... Passed 14.69 sec; Start 83: cdomp2-1; 231/411 Test #301: pywrap-basis ..................... Passed 16.33 sec; Start 137: dfmp2-grad4; 232/411 Test #286: props3 ........................... Passed 12.39 sec; Start 197: freq-isotope1; 233/411 Test #366: dft-smoke ........................ Passed 14.95 sec; Start 4: casscf-semi; 234/411 Test #285: props2 ........................... Passed 14.42 sec; Start 10: castup3; 235/411 Test #5: casscf-sa-sp ..................... Passed 16.45 sec; Start 372: dft-custom-hybrid; 236/411 Test #217: mints6 ........................... Passed 13.00 sec; Start 369: dft-jk; 237/411 Test #14: cbs-xtpl-energy .................. Passed 15.20 sec; Start 393: python-3-index-transforms; 238/411 Test #291: psimrcc-fd-freq1 ....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:21356,energy,energy,21356,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,................... Passed 3.22 sec; Start 227: mom; 314/413 Test #236: mp3-grad2 ........................ Passed 4.51 sec; Start 193: fcidump; 315/413 Test #343: soscf-ref ........................ Passed 10.67 sec; Start 182: fsapt-terms; 316/413 Test #171: dft-vv10 ......................... Passed 21.02 sec; Start 104: decontract; 317/413 Test #238: mpn-bh ........................... Passed 5.18 sec; Start 225: molden1; 318/413 Test #118: ao-dfcasscf-sp ................... Passed 4.78 sec; Start 341: scf-property; 319/413 Test #104: decontract ....................... Passed 1.45 sec; Start 237: mp2-property; 320/413 Test #192: fci-coverage ..................... Passed 7.43 sec; Start 357: tu3-h2o-opt; 321/413 Test #187: fci-h2o .......................... Passed 6.75 sec; Start 134: dfmp2-4; 322/413 Test #227: mom .............................. Passed 4.34 sec; Start 355: tu1-h2o-energy; 323/413 Test #285: opt-freeze-coords ................ Passed 5.81 sec; Start 119: dfcasscf-sa-sp; 324/413 Test #355: tu1-h2o-energy ................... Passed 1.23 sec; Start 255: omp2p5-1; 325/413 Test #372: scf-coverage ..................... Passed 7.31 sec; Start 286: props1; 326/413 Test #193: fcidump .......................... Passed 6.38 sec; Start 346: dfep2-1; 327/413 Test #237: mp2-property ..................... Passed 3.24 sec; Start 186: fci-dipole; 328/413 Test #341: scf-property ..................... Passed 4.58 sec; Start 363: x2c2; 329/413 Test #225: molden1 .......................... Passed 5.11 sec; Start 230: mp2-grad1; 330/413 Test #357: tu3-h2o-opt ...................... Passed 4.50 sec; Start 358: scf-response1; 331/413 Test #182: fsapt-terms ...................... Passed 7.85 sec; Start 336: scf3; 332/413 Test #336: scf3 ............................. Passed 1.25 sec; Start 365: zaptn-nh2; 333/413 Test #346: dfep2-1 .......................... Passed 3.37 sec; Start 316: sad1; 334/413 Test #363: x2c2 ............................. Passed 2.92 sec; Start 4: casscf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:30604,energy,energy,30604,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,................... Passed 3.55 sec; Start 222: mints10; 331/411 Test #397: json-v11-energy .................. Passed 2.74 sec; Start 130: dfmp2-2; 332/411 Test #231: mp2p5-grad1 ...................... Passed 2.25 sec; Start 391: python-mints2; 333/411 Test #224: molden2 .......................... Passed 3.08 sec; Start 134: dfmp2-grad1; 334/411 Test #225: mom .............................. Passed 3.20 sec; Start 380: psi4numpy-cphf; 335/411 Test #332: scf-occ .......................... Passed 1.46 sec; Start 356: scf-response1; 336/411 Test #222: mints10 .......................... Passed 1.14 sec; Start 381: psi4numpy-dfmp2; 337/411 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 271: opt5; 338/411 Test #380: psi4numpy-cphf ................... Passed 1.10 sec; Start 223: molden1; 339/411 Test #134: dfmp2-grad1 ...................... Passed 1.47 sec; Start 284: props1; 340/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.44 sec; Start 354: tu2-ch2-energy; 341/411 Test #391: python-mints2 .................... Passed 2.24 sec; Start 405: skeleton; 342/411 Test #223: molden1 .......................... Passed 1.40 sec; Start 345: dfep2-2; 343/411 Test #356: scf-response1 .................... Passed 2.00 sec; Start 213: mints2; 344/411 Test #271: opt5 ............................. Passed 1.57 sec; Start 203: frac; 345/411 Test #354: tu2-ch2-energy ................... Passed 0.77 sec; Start 330: scf-bs; 346/411 Test #405: skeleton ......................... Passed 0.91 sec; Start 199: fnocc1; 347/411 Test #284: props1 ........................... Passed 2.29 sec; Start 401: json-schema-1-orient; 348/411 Test #330: scf-bs ........................... Passed 0.90 sec; Start 190: fci-coverage; 349/411 Test #203: frac ............................. Passed 1.40 sec; Start 157: dft-grac; 350/411 Test #345: dfep2-2 .......................... Passed 1.84 sec; Start 361: x2c2; 351/411 Test #213: mints2 ........................... Passed 2.51 sec; Start 23,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:31695,energy,energy,31695,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,................... Passed 4.00 sec; Start 190: fci-tdm; 366/413 Test #6: ao-casscf-sp ..................... Passed 8.67 sec; Start 290: psimrcc-ccsd_t-2; 367/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 2.63 sec; Start 355: tu1-h2o-energy; 368/413 Test #345: stability1 ....................... Passed 4.39 sec; Start 223: mints9; 369/413 Test #136: dfmp2-grad1 ...................... Passed 8.06 sec; Start 222: mints-helper; 370/413 Test #122: dfccd1 ........................... Passed 6.37 sec; Start 351: sapt-sf1; 371/413 Test #384: psi4numpy-rhf .................... Passed 1.01 sec; Start 347: dfep2-2; 372/413 Test #380: mints12 .......................... Passed 1.28 sec; Start 332: scf-bs; 373/413 Test #354: stability2 ....................... Passed 2.35 sec; Start 216: mints3; 374/413 Test #224: mints10 .......................... Passed 2.23 sec; Start 289: psimrcc-ccsd_t-1; 375/413 Test #190: fci-tdm .......................... Passed 1.59 sec; Start 329: scf-guess-read1; 376/413 Test #355: tu1-h2o-energy ................... Passed 1.51 sec; Start 336: scf3; 377/413 Test #222: mints-helper ..................... Passed 1.51 sec; Start 132: dfmp2-2; 378/413 Test #104: decontract ....................... Passed 1.91 sec; Start 356: tu2-ch2-energy; 379/413 Test #123: dfccdl1 .......................... Passed 3.74 sec; Start 300: pubchem2; 380/413 Test #120: dfcasscf-fzc-sp .................. Passed 3.87 sec; Start 313: rasci-h2o; 381/413 Test #332: scf-bs ........................... Passed 1.21 sec; Start 330: scf-upcast-custom-basis; 382/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 2.12 sec; Start 212: mcscf2; 383/413 Test #351: sapt-sf1 ......................... Passed 1.63 sec; Start 8: castup1; 384/413 Test #223: mints9 ........................... Passed 2.14 sec; Start 218: mints5; 385/413 Test #216: mints3 ........................... Passed 1.20 sec; Start 241: numpy-array-interface; 386/413 Test #347: dfep2-2 .......................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:35427,energy,energy,35427,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,................... Passed 625.43 sec; Start 41: cc26; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1061.37 sec; Start 155: dfscf-bz2; 17/411 Test #35: cc2 .............................. Passed 641.50 sec; Start 42: cc27; 18/411 Test #300: pywrap-all ....................... Passed 1079.44 sec; Start 183: isapt2; 19/411 Test #103: dcft-grad1 ....................... Passed 1109.73 sec; Start 112: dcft6; 20/411 Test #110: dcft4 ............................ Passed 1118.85 sec; Start 347: sapt-dft2; 21/411 Test #11: cbs-delta-energy ................. Passed 162.34 sec; Start 305: pywrap-checkrun-rohf; 22/411 Test #320: sapt6 ............................ Passed 167.87 sec; Start 302: pywrap-cbs1; 23/411 Test #155: dfscf-bz2 ........................ Passed 147.41 sec; Start 97: cisd-opt-fd; 24/411 Test #373: dft-custom-mgga .................. Passed 186.86 sec; Start 281: opt-irc-2; 25/411 Test #183: isapt2 ........................... Passed 139.93 sec; Start 25: cc13a; 26/411 Test #193: fd-freq-energy-large ............. Passed 507.44 sec; Start 113: dcft7; 27/411 Test #347: sapt-dft2 ........................ Passed 128.04 sec; Start 205: frac-traverse; 28/411 Test #394: python-vibanalysis ............... Passed 1264.60 sec; Start 316: sapt2; 29/411 Test #181: fsapt-allterms ................... Passed 586.19 sec; Start 318: sapt4; 30/411 Test #111: dcft5 ............................ Passed 259.90 sec; Start 325: scf-bz2; 31/411 Test #112: dcft6 ............................ Passed 192.51 sec; Start 114: dcft8; 32/411 Test #41: cc26 ............................. Passed 304.72 sec; Start 168: dft1; 33/411 Test #302: pywrap-cbs1 ...................... Passed 149.78 sec; Start 161: dft-grad-lr2; 34/411 Test #42: cc27 ............................. Passed 282.41 sec; Start 13: cbs-xtpl-alpha; 35/411 Test #97: cisd-opt-fd ...................... Passed 160.82 sec; Start 104: dcft-grad2; 36/411 Test #281: opt-irc-2 ........................ Passed 174.00 sec; Start 230,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:2817,energy,energy-large,2817,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy-large']
Energy Efficiency,................... Passed 8.51 sec; Start 7: casscf-sp; 257/411 Test #367: scf-hess1 ........................ Passed 6.24 sec; Start 255: omp2p5-grad1; 258/411 Test #266: opt1-fd .......................... Passed 5.00 sec; Start 197: freq-isotope1; 259/411 Test #255: omp2p5-grad1 ..................... Passed 2.07 sec; Start 10: castup3; 260/411 Test #15: cbs-xtpl-freq .................... Passed 5.93 sec; Start 192: fd-freq-energy; 261/411 Test #123: dfccsd1 .......................... Passed 2.55 sec; Start 310: rasci-c2-active; 262/411 Test #310: rasci-c2-active .................. Passed 3.49 sec; Start 9: castup2; 263/411 Test #158: dft-ghost ........................ Passed 7.51 sec; Start 329: scf-guess-read2; 264/411 Test #10: castup3 .......................... Passed 4.98 sec; Start 83: cdomp2-1; 265/411 Test #7: casscf-sp ........................ Passed 9.17 sec; Start 4: casscf-semi; 266/411 Test #197: freq-isotope1 .................... Passed 8.69 sec; Start 139: dfomp2-1; 267/411 Test #192: fd-freq-energy ................... Passed 7.20 sec; Start 117: dfcasscf-sa-sp; 268/411 Test #83: cdomp2-1 ......................... Passed 5.26 sec; Start 185: fci-h2o; 269/411 Test #329: scf-guess-read2 .................. Passed 5.94 sec; Start 86: cepa0-grad2; 270/411 Test #4: casscf-semi ...................... Passed 4.06 sec; Start 186: fci-h2o-2; 271/411 Test #139: dfomp2-1 ......................... Passed 4.23 sec; Start 184: fci-dipole; 272/411 Test #9: castup2 .......................... Passed 7.67 sec; Start 93: cisd-h2o+-0; 273/411 Test #117: dfcasscf-sa-sp ................... Passed 4.15 sec; Start 251: omp2-grad1; 274/411 Test #251: omp2-grad1 ....................... Passed 1.29 sec; Start 339: scf-property; 275/411 Test #86: cepa0-grad2 ...................... Passed 1.91 sec; Start 141: dfomp2-3; 276/411 Test #141: dfomp2-3 ......................... Passed 1.85 sec; Start 370: scf-coverage; 277/411 Test #93: cisd-h2o+-0 ...................... Passed 3.91 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:24804,energy,energy,24804,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,.................... Passed 24.08 sec; Start 181: fsapt-terms; 176/412 Test #177: extern1 .......................... Passed 17.94 sec; Start 184: isapt2; 177/412 Test #155: dft-grad-lr2 ..................... Passed 103.74 sec; Start 185: fci-dipole; 178/412 Test #180: fsapt2 ........................... Passed 5.38 sec; Start 186: fci-h2o; 179/412 Test #178: extern2 .......................... Passed 21.09 sec; Start 187: fci-h2o-2; 180/412 Test #174: dft-omega ........................ Passed 26.95 sec; Start 188: fci-h2o-fzcv; 181/412 Test #181: fsapt-terms ...................... Passed 8.42 sec; Start 189: fci-tdm; 182/412 Test #185: fci-dipole ....................... Passed 8.93 sec; Start 190: fci-tdm-2; 183/412 Test #189: fci-tdm .......................... Passed 2.19 sec; Start 191: fci-coverage; 184/412 Test #186: fci-h2o .......................... Passed 8.29 sec; Start 192: fcidump; 185/412 Test #187: fci-h2o-2 ........................ Passed 7.49 sec; Start 193: fd-freq-energy; 186/412 Test #188: fci-h2o-fzcv ..................... Passed 5.93 sec; Start 195: fd-freq-gradient; 187/412 Test #192: fcidump .......................... Passed 5.07 sec; Start 197: fd-gradient; 188/412 Test #191: fci-coverage ..................... Passed 6.32 sec; Start 198: freq-isotope1; 189/412 Test #171: dft1-alt ......................... Passed 50.08 sec; Start 199: freq-isotope2; 190/412 Test #168: dft-b3lyp ........................ Passed 69.27 sec; Start 200: fnocc1; 191/412 Test #199: freq-isotope2 .................... Passed 9.58 sec; Start 201: fnocc2; 192/412 Test #198: freq-isotope1 .................... Passed 13.94 sec; Start 202: fnocc3; 193/412 Test #190: fci-tdm-2 ........................ Passed 21.79 sec; Start 203: fnocc4; 194/412 Test #200: fnocc1 ........................... Passed 13.37 sec; Start 204: frac; 195/412 Test #204: frac ............................. Passed 3.84 sec; Start 205: frac-ip-fitting; 196/412 Test #202: fnocc3 ........................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:17293,energy,energy,17293,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy']
Energy Efficiency,.................... Passed 4.37 sec; Start 235: mp3-grad2; 311/412 Test #95: cisd-h2o+-1 ...................... Passed 5.16 sec; Start 226: mom; 312/412 Test #121: dfccd1 ........................... Passed 5.30 sec; Start 356: tu3-h2o-opt; 313/412 Test #232: mp2p5-grad1 ...................... Passed 5.44 sec; Start 378: pywrap-align-chiral; 314/412 Test #180: fsapt2 ........................... Passed 5.69 sec; Start 266: opt1; 315/412 Test #377: pywrap-align ..................... Passed 6.95 sec; Start 344: stability1; 316/412 Test #332: scf1 ............................. Passed 5.49 sec; Start 400: json-schema-1-energy; 317/412 Test #204: frac ............................. Passed 5.38 sec; Start 295: psimrcc-sp1; 318/412 Test #285: props1 ........................... Passed 6.21 sec; Start 192: fcidump; 319/412 Test #340: scf-property ..................... Passed 6.13 sec; Start 345: dfep2-1; 320/412 Test #122: dfccdl1 .......................... Passed 4.43 sec; Start 398: json-v11-energy; 321/412 Test #272: opt5 ............................. Passed 4.45 sec; Start 389: python-curve; 322/412 Test #311: rasci-c2-active .................. Passed 7.52 sec; Start 236: mp2-property; 323/412 Test #226: mom .............................. Passed 4.69 sec; Start 312: rasci-h2o; 324/412 Test #378: pywrap-align-chiral .............. Passed 3.44 sec; Start 294: psimrcc-pt2; 325/412 Test #235: mp3-grad2 ........................ Passed 5.64 sec; Start 119: dfcasscf-fzc-sp; 326/412 Test #356: tu3-h2o-opt ...................... Passed 4.82 sec; Start 258: omp3-1; 327/412 Test #344: stability1 ....................... Passed 3.58 sec; Start 352: dft-reference; 328/412 Test #312: rasci-h2o ........................ Passed 2.09 sec; Start 364: zaptn-nh2; 329/412 Test #398: json-v11-energy .................. Passed 3.22 sec; Start 412: skeletonwavefunction; 330/412 Test #294: psimrcc-pt2 ...................... Passed 1.99 sec; Start 328: scf-guess-read1; 331/412 Test #345: dfep2-1 ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:30080,energy,energy,30080,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,.................... Passed 4.56 sec; Start 295: psithon1; 323/411 Test #362: x2c3 ............................. Passed 3.16 sec; Start 388: python-curve; 324/411 Test #118: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 327: scf-guess-read1; 325/411 Test #399: json-schema-1-energy ............. Passed 3.99 sec; Start 121: dfccdl1; 326/411 Test #257: omp3-1 ........................... Passed 4.41 sec; Start 377: pywrap-align-chiral; 327/411 Test #284: props1 ........................... Passed 5.03 sec; Start 4: casscf-semi; 328/411 Test #243: ocepa1 ........................... Passed 6.83 sec; Start 246: omp2-1; 329/411 Test #327: scf-guess-read1 .................. Passed 2.70 sec; Start 363: zaptn-nh2; 330/411 Test #377: pywrap-align-chiral .............. Passed 3.07 sec; Start 314: sad1; 331/411 Test #388: python-curve ..................... Passed 4.00 sec; Start 253: omp2p5-1; 332/411 Test #121: dfccdl1 .......................... Passed 4.11 sec; Start 397: json-v11-energy; 333/411 Test #363: zaptn-nh2 ........................ Passed 2.47 sec; Start 384: psi4numpy-rhf-hessian; 334/411 Test #246: omp2-1 ........................... Passed 4.32 sec; Start 239: numpy-array-interface; 335/411 Test #314: sad1 ............................. Passed 3.56 sec; Start 213: mints2; 336/411 Test #239: numpy-array-interface ............ Passed 0.68 sec; Start 328: scf-upcast-custom-basis; 337/411 Test #295: psithon1 ......................... Passed 9.99 sec; Start 391: python-mints2; 338/411 Test #397: json-v11-energy .................. Passed 4.06 sec; Start 119: dfcasscf-sp; 339/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.87 sec; Start 120: dfccd1; 340/411 Test #213: mints2 ........................... Passed 3.23 sec; Start 203: frac; 341/411 Test #328: scf-upcast-custom-basis .......... Passed 3.10 sec; Start 355: tu3-h2o-opt; 342/411 Test #253: omp2p5-1 ......................... Passed 6.90 sec; Start 210: mcscf2; 343/411 Test #4: casscf-semi ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:31037,energy,energy,31037,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,.................... Passed 9.74 sec; Start 245: ocepa1; 249/413 Test #171: dft-vv10 ......................... Passed 18.16 sec; Start 287: props2; 250/413 Test #228: mp2-1 ............................ Passed 10.66 sec; Start 14: cbs-xtpl-energy; 251/413 Test #326: sapt8 ............................ Passed 15.55 sec; Start 143: dfomp2-3; 252/413 Test #159: dfrasscf-sp ...................... Passed 9.04 sec; Start 398: python-memdfjk; 253/413 Test #245: ocepa1 ........................... Passed 7.39 sec; Start 163: dft-ghost; 254/413 Test #126: dfccsdl1 ......................... Passed 8.14 sec; Start 89: cepa2; 255/413 Test #352: dft-custom ....................... Passed 15.35 sec; Start 370: scf-freq1; 256/413 Test #143: dfomp2-3 ......................... Passed 2.20 sec; Start 3: casscf-fzc-sp; 257/413 Test #342: soscf-large ...................... Passed 16.23 sec; Start 359: tu4-h2o-freq; 258/413 Test #398: python-memdfjk ................... Passed 1.92 sec; Start 389: python-energy; 259/413 Test #5: casscf-sa-sp ..................... Passed 13.87 sec; Start 403: json-schema-1-orient; 260/413 Test #219: mints6 ........................... Passed 13.74 sec; Start 270: opt2-fd; 261/413 Test #272: opt4 ............................. Passed 10.06 sec; Start 371: dft-jk; 262/413 Test #389: python-energy .................... Passed 1.11 sec; Start 200: freq-isotope2; 263/413 Test #403: json-schema-1-orient ............. Passed 1.93 sec; Start 374: dft-custom-hybrid; 264/413 Test #89: cepa2 ............................ Passed 4.39 sec; Start 337: scf4; 265/413 Test #340: scf7 ............................. Passed 14.12 sec; Start 402: json-schema-1-ghost; 266/413 Test #288: props3 ........................... Passed 14.97 sec; Start 369: scf-hess1; 267/413 Test #402: json-schema-1-ghost .............. Passed 1.41 sec; Start 267: opt1; 268/413 Test #3: casscf-fzc-sp .................... Passed 6.04 sec; Start 387: psi4numpy-fci; 269/413 Test #200: freq-isotope2 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:24334,energy,energy,24334,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,..................... Passed 12.21 sec; Start 374: dft-custom-hybrid; 250/413 Test #287: props2 ........................... Passed 14.05 sec; Start 337: scf4; 251/413 Test #245: ocepa1 ........................... Passed 10.97 sec; Start 99: cisd-sp; 252/413 Test #159: dfrasscf-sp ...................... Passed 10.03 sec; Start 270: opt2-fd; 253/413 Test #129: dfccsdt1 ......................... Passed 11.34 sec; Start 3: casscf-fzc-sp; 254/413 Test #139: dfmp2-grad4 ...................... Passed 12.20 sec; Start 134: dfmp2-4; 255/413 Test #370: scf-freq1 ........................ Passed 14.76 sec; Start 163: dft-ghost; 256/413 Test #91: cepa1 ............................ Passed 19.79 sec; Start 297: psithon1; 257/413 Test #14: cbs-xtpl-energy .................. Passed 16.33 sec; Start 89: cepa2; 258/413 Test #359: tu4-h2o-freq ..................... Passed 13.21 sec; Start 390: python-curve; 259/413 Test #371: dft-jk ........................... Passed 12.88 sec; Start 401: json-schema-1-energy; 260/413 Test #343: soscf-ref ........................ Passed 9.59 sec; Start 399: json-v11-energy; 261/413 Test #272: opt4 ............................. Passed 10.18 sec; Start 369: scf-hess1; 262/413 Test #3: casscf-fzc-sp .................... Passed 6.82 sec; Start 9: castup2; 263/413 Test #163: dft-ghost ........................ Passed 8.85 sec; Start 200: freq-isotope2; 264/413 Test #399: json-v11-energy .................. Passed 4.63 sec; Start 143: dfomp2-3; 265/413 Test #337: scf4 ............................. Passed 11.13 sec; Start 393: python-mints2; 266/413 Test #390: python-curve ..................... Passed 5.53 sec; Start 15: cbs-xtpl-freq; 267/413 Test #401: json-schema-1-energy ............. Passed 5.19 sec; Start 392: python-mints9; 268/413 Test #134: dfmp2-4 .......................... Passed 10.28 sec; Start 264: omp3-grad1; 269/413 Test #374: dft-custom-hybrid ................ Passed 12.81 sec; Start 397: python-mints13; 270/413 Test #297: psithon1 .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:24403,energy,energy,24403,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,..................... Passed 2.01 sec; Start 255: omp2p5-1; 298/413 Test #236: mp3-grad2 ........................ Passed 2.18 sec; Start 233: mp2p5-grad1; 299/413 Test #392: python-mints9 .................... Passed 2.21 sec; Start 296: psimrcc-sp1; 300/413 Test #400: json-v11-gradient ................ Passed 1.40 sec; Start 403: json-schema-1-orient; 301/413 Test #100: cisd-sp-2 ........................ Passed 4.98 sec; Start 226: molden2; 302/413 Test #397: python-mints13 ................... Passed 2.19 sec; Start 312: rasci-c2-active; 303/413 Test #238: mpn-bh ........................... Passed 3.26 sec; Start 205: frac; 304/413 Test #95: cisd-h2o+-1 ...................... Passed 4.61 sec; Start 398: python-memdfjk; 305/413 Test #96: cisd-h2o+-2 ...................... Passed 5.04 sec; Start 259: omp3-1; 306/413 Test #189: fci-h2o-fzcv ..................... Passed 4.96 sec; Start 333: scf1; 307/413 Test #94: cisd-h2o+-0 ...................... Passed 4.41 sec; Start 389: python-energy; 308/413 Test #188: fci-h2o-2 ........................ Passed 6.48 sec; Start 273: opt5; 309/413 Test #398: python-memdfjk ................... Passed 1.04 sec; Start 271: opt3; 310/413 Test #389: python-energy .................... Passed 1.00 sec; Start 231: mp2-grad2; 311/413 Test #248: omp2-1 ........................... Passed 2.94 sec; Start 119: dfcasscf-sa-sp; 312/413 Test #233: mp2p5-grad1 ...................... Passed 2.39 sec; Start 402: json-schema-1-ghost; 313/413 Test #255: omp2p5-1 ......................... Passed 2.99 sec; Start 341: scf-property; 314/413 Test #205: frac ............................. Passed 2.48 sec; Start 181: fsapt2; 315/413 Test #259: omp3-1 ........................... Passed 2.37 sec; Start 138: dfmp2-grad3; 316/413 Test #273: opt5 ............................. Passed 2.08 sec; Start 6: ao-casscf-sp; 317/413 Test #231: mp2-grad2 ........................ Passed 2.00 sec; Start 407: skeleton; 318/413 Test #226: molden2 .......................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:28855,energy,energy,28855,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,..................... Passed 2.06 sec; Start 116: ao-dfcasscf-sp; 310/411 Test #119: dfcasscf-sp ...................... Passed 1.71 sec; Start 135: dfmp2-grad2; 311/411 Test #235: mp2-property ..................... Passed 2.60 sec; Start 225: mom; 312/411 Test #130: dfmp2-2 .......................... Passed 1.55 sec; Start 213: mints2; 313/411 Test #136: dfmp2-grad3 ...................... Passed 1.73 sec; Start 397: json-v11-energy; 314/411 Test #139: dfomp2-1 ......................... Passed 1.95 sec; Start 363: zaptn-nh2; 315/411 Test #116: ao-dfcasscf-sp ................... Passed 2.81 sec; Start 201: fnocc3; 316/411 Test #284: props1 ........................... Passed 3.35 sec; Start 224: molden2; 317/411 Test #135: dfmp2-grad2 ...................... Passed 3.18 sec; Start 289: psimrcc-ccsd_t-3; 318/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 343: stability1; 319/411 Test #225: mom .............................. Passed 3.26 sec; Start 121: dfccdl1; 320/411 Test #397: json-v11-energy .................. Passed 2.69 sec; Start 226: mp2-1; 321/411 Test #363: zaptn-nh2 ........................ Passed 2.93 sec; Start 85: cepa0-grad1; 322/411 Test #224: molden2 .......................... Passed 2.15 sec; Start 251: omp2-grad1; 323/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.87 sec; Start 399: json-schema-1-energy; 324/411 Test #343: stability1 ....................... Passed 2.09 sec; Start 223: molden1; 325/411 Test #121: dfccdl1 .......................... Passed 2.21 sec; Start 356: scf-response1; 326/411 Test #85: cepa0-grad1 ...................... Passed 1.92 sec; Start 390: python-mints9; 327/411 Test #201: fnocc3 ........................... Passed 3.62 sec; Start 345: dfep2-2; 328/411 Test #251: omp2-grad1 ....................... Passed 1.67 sec; Start 355: tu3-h2o-opt; 329/411 Test #226: mp2-1 ............................ Passed 3.21 sec; Start 8: castup1; 330/411 Test #399: json-schema-1-energy ............. Passed 1.7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:29810,energy,energy,29810,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,..................... Passed 2.36 sec; Start 334: scf-occ; 363/413 Test #190: fci-tdm .......................... Passed 1.95 sec; Start 345: stability1; 364/413 Test #331: scf-guess-read2 .................. Passed 7.29 sec; Start 351: sapt-sf1; 365/413 Test #223: mints9 ........................... Passed 2.00 sec; Start 121: dfcasscf-sp; 366/413 Test #222: mints-helper ..................... Passed 1.96 sec; Start 347: dfep2-2; 367/413 Test #336: scf3 ............................. Passed 1.57 sec; Start 300: pubchem2; 368/413 Test #354: stability2 ....................... Passed 2.80 sec; Start 356: tu2-ch2-energy; 369/413 Test #335: scf2 ............................. Passed 3.39 sec; Start 290: psimrcc-ccsd_t-2; 370/413 Test #97: cisd-h2o-clpse ................... Passed 2.89 sec; Start 122: dfccd1; 371/413 Test #351: sapt-sf1 ......................... Passed 1.54 sec; Start 332: scf-bs; 372/413 Test #86: cepa0-grad1 ...................... Passed 4.82 sec; Start 241: numpy-array-interface; 373/413 Test #356: tu2-ch2-energy ................... Passed 1.07 sec; Start 218: mints5; 374/413 Test #347: dfep2-2 .......................... Passed 2.24 sec; Start 329: scf-guess-read1; 375/413 Test #300: pubchem2 ......................... Passed 1.45 sec; Start 366: options1; 376/413 Test #334: scf-occ .......................... Passed 3.01 sec; Start 217: mints4; 377/413 Test #241: numpy-array-interface ............ Passed 0.81 sec; Start 289: psimrcc-ccsd_t-1; 378/413 Test #332: scf-bs ........................... Passed 1.53 sec; Start 136: dfmp2-grad1; 379/413 Test #345: stability1 ....................... Passed 3.12 sec; Start 214: mints1; 380/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.93 sec; Start 6: ao-casscf-sp; 381/413 Test #218: mints5 ........................... Passed 0.97 sec; Start 120: dfcasscf-fzc-sp; 382/413 Test #366: options1 ......................... Passed 0.75 sec; Start 212: mcscf2; 383/413 Test #217: mints4 ........................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:35127,energy,energy,35127,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,..................... Passed 26.82 sec; Start 180: fsapt-terms; 183/411 Test #179: fsapt2 ........................... Passed 6.95 sec; Start 183: isapt2; 184/411 Test #180: fsapt-terms ...................... Passed 10.10 sec; Start 184: fci-dipole; 185/411 Test #184: fci-dipole ....................... Passed 7.67 sec; Start 185: fci-h2o; 186/411 Test #177: extern2 .......................... Passed 31.38 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 6.97 sec; Start 187: fci-h2o-fzcv; 188/411 Test #186: fci-h2o-2 ........................ Passed 6.73 sec; Start 188: fci-tdm; 189/411 Test #187: fci-h2o-fzcv ..................... Passed 6.96 sec; Start 189: fci-tdm-2; 190/411 Test #168: dft1 ............................. Passed 110.06 sec; Start 190: fci-coverage; 191/411 Test #188: fci-tdm .......................... Passed 4.23 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.92 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 13.34 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.83 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 11.83 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 29.49 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 22.34 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 8.47 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 43.09 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 25.22 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 21.28 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 6.10 sec; Start 204: frac-ip-fitting; 203/411 Test #103: dcft-grad1 ....................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:17790,energy,energy,17790,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['energy'],['energy']
Energy Efficiency,..................... Passed 29.07 sec; Start 199: fnocc1; 255/411 Test #268: opt2-fd .......................... Passed 12.17 sec; Start 3: casscf-fzc-sp; 256/411 Test #357: tu4-h2o-freq ..................... Passed 16.31 sec; Start 367: scf-hess1; 257/411 Test #365: cubeprop-esp ..................... Passed 8.93 sec; Start 127: dfccsdt1; 258/411 Test #180: fsapt-terms ...................... Passed 8.42 sec; Start 241: ocepa-grad1; 259/411 Test #335: scf4 ............................. Passed 14.75 sec; Start 161: dft-ghost; 260/411 Test #132: dfmp2-4 .......................... Passed 13.82 sec; Start 266: opt1-fd; 261/411 Test #270: opt4 ............................. Passed 12.14 sec; Start 86: cepa0-grad2; 262/411 Test #157: dfrasscf-sp ...................... Passed 13.87 sec; Start 341: soscf-ref; 263/411 Test #15: cbs-xtpl-freq .................... Passed 13.75 sec; Start 224: molden2; 264/411 Test #108: dcft2 ............................ Passed 17.24 sec; Start 385: psi4numpy-fci; 265/411 Test #192: fd-freq-energy ................... Passed 16.20 sec; Start 269: opt3; 266/411 Test #161: dft-ghost ........................ Passed 8.31 sec; Start 120: dfccd1; 267/411 Test #226: mp2-1 ............................ Passed 19.92 sec; Start 190: fci-coverage; 268/411 Test #367: scf-hess1 ........................ Passed 12.45 sec; Start 6: ao-casscf-sp; 269/411 Test #385: psi4numpy-fci .................... Passed 5.66 sec; Start 185: fci-h2o; 270/411 Test #269: opt3 ............................. Passed 5.54 sec; Start 186: fci-h2o-2; 271/411 Test #127: dfccsdt1 ......................... Passed 12.58 sec; Start 134: dfmp2-grad1; 272/411 Test #224: molden2 .......................... Passed 7.39 sec; Start 184: fci-dipole; 273/411 Test #86: cepa0-grad2 ...................... Passed 9.61 sec; Start 198: freq-isotope2; 274/411 Test #120: dfccd1 ........................... Passed 3.65 sec; Start 246: omp2-1; 275/411 Test #199: fnocc1 ........................... Passed 22.64 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:24871,energy,energy,24871,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,..................... Passed 30.06 sec; Start 5: casscf-sa-sp; 222/412 Test #106: dcft-grad3 ....................... Passed 20.03 sec; Start 165: dft-grad1; 223/412 Test #325: sapt8 ............................ Passed 22.82 sec; Start 287: props3; 224/412 Test #255: omp2p5-2 ......................... Passed 17.54 sec; Start 367: dft-smoke; 225/412 Test #219: mints8 ........................... Passed 26.03 sec; Start 351: dft-custom; 226/412 Test #5: casscf-sa-sp ..................... Passed 22.96 sec; Start 377: pywrap-align; 227/412 Test #302: pywrap-basis ..................... Passed 27.27 sec; Start 286: props2; 228/412 Test #341: soscf-large ...................... Passed 27.88 sec; Start 339: scf7; 229/412 Test #165: dft-grad1 ........................ Passed 27.44 sec; Start 373: dft-custom-hybrid; 230/412 Test #287: props3 ........................... Passed 26.22 sec; Start 90: cepa3; 231/412 Test #367: dft-smoke ........................ Passed 24.12 sec; Start 14: cbs-xtpl-energy; 232/412 Test #351: dft-custom ....................... Passed 26.21 sec; Start 218: mints6; 233/412 Test #339: scf7 ............................. Passed 23.74 sec; Start 358: tu4-h2o-freq; 234/412 Test #286: props2 ........................... Passed 25.96 sec; Start 267: opt1-fd; 235/412 Test #373: dft-custom-hybrid ................ Passed 25.17 sec; Start 369: scf-freq1; 236/412 Test #90: cepa3 ............................ Passed 23.95 sec; Start 378: pywrap-align-chiral; 237/412 Test #377: pywrap-align ..................... Passed 55.50 sec; Start 370: dft-jk; 238/412 Test #14: cbs-xtpl-energy .................. Passed 38.42 sec; Start 102: cubeprop; 239/412 Test #267: opt1-fd .......................... Passed 35.93 sec; Start 269: opt2-fd; 240/412 Test #218: mints6 ........................... Passed 42.95 sec; Start 394: python-3-index-transforms; 241/412 Test #358: tu4-h2o-freq ..................... Passed 38.41 sec; Start 198: freq-isotope1; 242/412 Test #369: scf-freq1 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:21572,energy,energy,21572,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,..................... Passed 45.92 sec; Start 154: dfrasscf-sp; 234/411 Test #23: cc12 ............................. Passed 41.38 sec; Start 270: opt4; 235/411 Test #268: opt2-fd .......................... Passed 15.41 sec; Start 180: fsapt-terms; 236/411 Test #21: cc10 ............................. Passed 50.04 sec; Start 139: dfomp2-1; 237/411 Test #291: psimrcc-fd-freq1 ................. Passed 22.76 sec; Start 124: dfccsdl1; 238/411 Test #37: cc22 ............................. Passed 41.04 sec; Start 123: dfccsd1; 239/411 Test #15: cbs-xtpl-freq .................... Passed 10.29 sec; Start 198: freq-isotope2; 240/411 Test #98: cisd-sp .......................... Passed 12.09 sec; Start 295: psithon1; 241/411 Test #367: scf-hess1 ........................ Passed 12.79 sec; Start 365: cubeprop-esp; 242/411 Test #368: scf-freq1 ........................ Passed 15.17 sec; Start 4: casscf-semi; 243/411 Test #52: cc36 ............................. Passed 27.19 sec; Start 192: fd-freq-energy; 244/411 Test #154: dfrasscf-sp ...................... Passed 12.05 sec; Start 266: opt1-fd; 245/411 Test #180: fsapt-terms ...................... Passed 8.74 sec; Start 122: dfccd-grad1; 246/411 Test #197: freq-isotope1 .................... Passed 16.90 sec; Start 143: dfomp2-grad1; 247/411 Test #201: fnocc3 ........................... Passed 24.72 sec; Start 158: dft-ghost; 248/411 Test #270: opt4 ............................. Passed 10.67 sec; Start 241: ocepa-grad1; 249/411 Test #335: scf4 ............................. Passed 18.87 sec; Start 224: molden2; 250/411 Test #365: cubeprop-esp ..................... Passed 9.37 sec; Start 199: fnocc1; 251/411 Test #124: dfccsdl1 ......................... Passed 13.23 sec; Start 243: ocepa1; 252/411 Test #198: freq-isotope2 .................... Passed 13.17 sec; Start 223: molden1; 253/411 Test #123: dfccsd1 .......................... Passed 16.62 sec; Start 226: mp2-1; 254/411 Test #295: psithon1 ......................... Passed 15.24 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:22881,energy,energy,22881,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,...................... Passed 1.40 sec; Start 269: opt3; 303/411 Test #130: dfmp2-2 .......................... Passed 2.10 sec; Start 243: ocepa1; 304/411 Test #355: tu3-h2o-opt ...................... Passed 2.86 sec; Start 251: omp2-grad1; 305/411 Test #136: dfmp2-grad3 ...................... Passed 1.72 sec; Start 190: fci-coverage; 306/411 Test #397: json-v11-energy .................. Passed 1.89 sec; Start 344: dfep2-1; 307/411 Test #120: dfccd1 ........................... Passed 1.33 sec; Start 134: dfmp2-grad1; 308/411 Test #251: omp2-grad1 ....................... Passed 2.95 sec; Start 388: python-curve; 309/411 Test #226: mp2-1 ............................ Passed 3.67 sec; Start 295: psithon1; 310/411 Test #344: dfep2-1 .......................... Passed 2.83 sec; Start 376: pywrap-align; 311/411 Test #243: ocepa1 ........................... Passed 3.16 sec; Start 4: casscf-semi; 312/411 Test #269: opt3 ............................. Passed 3.32 sec; Start 399: json-schema-1-energy; 313/411 Test #190: fci-coverage ..................... Passed 3.00 sec; Start 377: pywrap-align-chiral; 314/411 Test #134: dfmp2-grad1 ...................... Passed 2.56 sec; Start 236: mpn-bh; 315/411 Test #4: casscf-semi ...................... Passed 1.77 sec; Start 213: mints2; 316/411 Test #399: json-schema-1-energy ............. Passed 1.83 sec; Start 118: dfcasscf-fzc-sp; 317/411 Test #388: python-curve ..................... Passed 2.19 sec; Start 391: python-mints2; 318/411 Test #295: psithon1 ......................... Passed 3.15 sec; Start 384: psi4numpy-rhf-hessian; 319/411 Test #236: mpn-bh ........................... Passed 2.98 sec; Start 283: opt-freeze-coords; 320/411 Test #376: pywrap-align ..................... Passed 3.28 sec; Start 343: stability1; 321/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.56 sec; Start 203: frac; 322/411 Test #377: pywrap-align-chiral .............. Passed 3.40 sec; Start 311: rasci-h2o; 323/411 Test #213: mints2 ............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:29126,energy,energy,29126,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,...................... Passed 1.60 sec; Start 380: psi4numpy-cphf; 310/411 Test #236: mpn-bh ........................... Passed 3.10 sec; Start 228: mp2-grad1; 311/411 Test #235: mp2-property ..................... Passed 2.61 sec; Start 343: stability1; 312/411 Test #93: cisd-h2o+-0 ...................... Passed 4.03 sec; Start 351: dft-reference; 313/411 Test #380: psi4numpy-cphf ................... Passed 1.40 sec; Start 225: mom; 314/411 Test #283: opt-freeze-coords ................ Passed 3.69 sec; Start 231: mp2p5-grad1; 315/411 Test #95: cisd-h2o+-2 ...................... Passed 4.18 sec; Start 294: psimrcc-sp1; 316/411 Test #251: omp2-grad1 ....................... Passed 5.09 sec; Start 118: dfcasscf-fzc-sp; 317/411 Test #228: mp2-grad1 ........................ Passed 3.74 sec; Start 243: ocepa1; 318/411 Test #231: mp2p5-grad1 ...................... Passed 2.43 sec; Start 257: omp3-1; 319/411 Test #343: stability1 ....................... Passed 3.80 sec; Start 399: json-schema-1-energy; 320/411 Test #225: mom .............................. Passed 3.48 sec; Start 362: x2c3; 321/411 Test #351: dft-reference .................... Passed 3.74 sec; Start 284: props1; 322/411 Test #294: psimrcc-sp1 ...................... Passed 4.56 sec; Start 295: psithon1; 323/411 Test #362: x2c3 ............................. Passed 3.16 sec; Start 388: python-curve; 324/411 Test #118: dfcasscf-fzc-sp .................. Passed 4.55 sec; Start 327: scf-guess-read1; 325/411 Test #399: json-schema-1-energy ............. Passed 3.99 sec; Start 121: dfccdl1; 326/411 Test #257: omp3-1 ........................... Passed 4.41 sec; Start 377: pywrap-align-chiral; 327/411 Test #284: props1 ........................... Passed 5.03 sec; Start 4: casscf-semi; 328/411 Test #243: ocepa1 ........................... Passed 6.83 sec; Start 246: omp2-1; 329/411 Test #327: scf-guess-read1 .................. Passed 2.70 sec; Start 363: zaptn-nh2; 330/411 Test #377: pywrap-align-chiral .............. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:29823,energy,energy,29823,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,...................... Passed 10.33 sec; Start 148: dfomp3-grad2; 93/401 Test #121: dfccd-grad1 ...................... Passed 6.11 sec; Start 32: cc17; 94/401 Test #83: cdomp2-2 ......................... Passed 16.79 sec; Start 352: tu4-h2o-freq; 95/401 Test #195: fnocc1 ........................... Passed 8.09 sec; Start 390: python-3-index-transforms; 96/401 Test #311: sapt1 ............................ Passed 9.43 sec; Start 106: dcft1; 97/401 Test #238: ocepa-grad2 ...................... Passed 49.33 sec; Start 14: cbs-xtpl-energy; 98/401 Test #172: extern1 .......................... Passed 15.83 sec; Start 362: scf-hess1; 99/401 Test #390: python-3-index-transforms ........ Passed 6.02 sec; Start 126: dfccsdt1; 100/401 Test #352: tu4-h2o-freq ..................... Passed 12.54 sec; Start 33: cc18; 101/401 Test #126: dfccsdt1 ......................... Passed 3.87 sec; Start 7: casscf-sp; 102/401 Test #76: cc8 .............................. Passed 23.26 sec; Start 176: fsapt-terms; 103/401 Test #14: cbs-xtpl-energy .................. Passed 7.95 sec; Start 286: psimrcc-ccsd_t-4; 104/401 Test #362: scf-hess1 ........................ Passed 7.64 sec; Start 120: dfccdl1; 105/401 Test #32: cc17 ............................. Passed 20.79 sec; Start 15: cbs-xtpl-freq; 106/401 Test #120: dfccdl1 .......................... Passed 2.42 sec; Start 336: soscf-large; 107/401 Test #176: fsapt-terms ...................... Passed 4.90 sec; Start 48: cc32; 108/401 Test #196: fnocc2 ........................... Passed 29.15 sec; Start 327: scf1; 109/401 Test #336: soscf-large ...................... Passed 4.54 sec; Start 287: psimrcc-fd-freq1; 110/401 Test #286: psimrcc-ccsd_t-4 ................. Passed 8.83 sec; Start 5: casscf-sa-sp; 111/401 Test #15: cbs-xtpl-freq .................... Passed 8.28 sec; Start 198: fnocc4; 112/401 Test #7: casscf-sp ........................ Passed 13.47 sec; Start 194: freq-isotope2; 113/401 Test #33: cc18 ............................. Passed 17.39 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:9612,energy,energy,9612,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,...................... Passed 1133.10 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #36: cc2 .............................. Passed 1137.87 sec; Start 184: isapt1; 14/413 Test #105: dcft-grad1 ....................... Passed 1187.32 sec; Start 48: cc31; 15/413 Test #242: ocepa-freq1 ...................... Passed 651.24 sec; Start 45: cc29; 16/413 Test #396: python-vibanalysis ............... Passed 1355.01 sec; Start 114: dcft6; 17/413 Test #29: cc13d ............................ Passed 265.22 sec; Start 59: cc41; 18/413 Test #48: cc31 ............................. Passed 179.36 sec; Start 11: cbs-delta-energy; 19/413 Test #157: dft-grad-lr3 ..................... Passed 434.88 sec; Start 61: cc43; 20/413 Test #302: pywrap-all ....................... Passed 1394.91 sec; Start 18: cbs-xtpl-func; 21/413 Test #113: dcft5 ............................ Passed 339.46 sec; Start 183: fsapt-allterms; 22/413 Test #229: mp2-def2 ......................... Passed 401.24 sec; Start 195: fd-freq-energy-large; 23/413 Test #13: cbs-xtpl-alpha ................... Passed 339.68 sec; Start 197: fd-freq-gradient-large; 24/413 Test #59: cc41 ............................. Passed 137.70 sec; Start 280: opt13; 25/413 Test #45: cc29 ............................. Passed 218.43 sec; Start 375: dft-custom-mgga; 26/413 Test #61: cc43 ............................. Passed 139.20 sec; Start 71: cc52; 27/413 Test #46: cc3 .............................. Passed 1535.28 sec; Start 28: cc13c; 28/413 Test #184: isapt1 ........................... Passed 416.48 sec; Start 283: opt-irc-2; 29/413 Test #114: dcft6 ............................ Passed 212.86 sec; Start 361: tu6-cp-ne2; 30/413 Test #306: pywrap-checkrun-rhf .............. Passed 1024.50 sec; Start 98: cisd-opt-fd; 31/413 Test #307: pywrap-checkrun-rohf ............. Passed 516.10 sec; Start 322: sapt6; 32/413 Test #11: cbs-delta-energy ................. Passed 271.51 sec; Start 92: cepa-module; 33/413 Test #112: dcft4 ............................ Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:2472,energy,energy-large,2472,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy-large']
Energy Efficiency,...................... Passed 138.38 sec; Start 293: psimrcc-fd-freq2; 66/412 Test #108: dcft1 ............................ Passed 21.44 sec; Start 193: fd-freq-energy; 67/412 Test #182: fsapt-allterms ................... Passed 599.68 sec; Start 320: sapt5; 68/412 Test #19: cbs-xtpl-nbody ................... Passed 51.30 sec; Start 157: dfomp2p5-grad2; 69/412 Test #280: opt14 ............................ Passed 85.55 sec; Start 150: dfomp3-grad2; 70/412 Test #70: cc51 ............................. Passed 72.72 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 79.59 sec; Start 245: ocepa2; 72/412 Test #206: frac-traverse .................... Passed 233.30 sec; Start 261: omp3-4; 73/412 Test #318: sapt3 ............................ Passed 83.47 sec; Start 251: omp2-5; 74/412 Test #157: dfomp2p5-grad2 ................... Passed 32.79 sec; Start 20: cbs-xtpl-wrapper; 75/412 Test #150: dfomp3-grad2 ..................... Passed 42.64 sec; Start 62: cc44; 76/412 Test #193: fd-freq-energy ................... Passed 70.15 sec; Start 243: ocepa-grad2; 77/412 Test #293: psimrcc-fd-freq2 ................. Passed 76.91 sec; Start 205: frac-ip-fitting; 78/412 Test #320: sapt5 ............................ Passed 79.17 sec; Start 264: omp3-grad2; 79/412 Test #44: cc28 ............................. Passed 53.16 sec; Start 250: omp2-4; 80/412 Test #245: ocepa2 ........................... Passed 62.18 sec; Start 58: cc40; 81/412 Test #261: omp3-4 ........................... Passed 58.04 sec; Start 65: cc47; 82/412 Test #251: omp2-5 ........................... Passed 49.94 sec; Start 168: dft-b3lyp; 83/412 Test #26: cc13a ............................ Passed 327.85 sec; Start 69: cc50; 84/412 Test #243: ocepa-grad2 ...................... Passed 63.73 sec; Start 300: pywrap-alias; 85/412 Test #20: cbs-xtpl-wrapper ................. Passed 79.22 sec; Start 390: python-pubchem; 86/412 Test #62: cc44 ............................. Passed 68.65 sec; Start 257: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:7415,energy,energy,7415,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,...................... Passed 2.90 sec; Start 285: props1; 308/412 Test #192: fcidump .......................... Passed 3.82 sec; Start 135: dfmp2-grad1; 309/412 Test #180: fsapt2 ........................... Passed 5.27 sec; Start 272: opt5; 310/412 Test #311: rasci-c2-active .................. Passed 5.31 sec; Start 232: mp2p5-grad1; 311/412 Test #389: python-curve ..................... Passed 3.46 sec; Start 86: cepa0-grad1; 312/412 Test #95: cisd-h2o+-1 ...................... Passed 5.74 sec; Start 312: rasci-h2o; 313/412 Test #94: cisd-h2o+-0 ...................... Passed 5.81 sec; Start 398: json-v11-energy; 314/412 Test #266: opt1 ............................. Passed 4.69 sec; Start 121: dfccd1; 315/412 Test #295: psimrcc-sp1 ...................... Passed 4.47 sec; Start 236: mp2-property; 316/412 Test #284: opt-freeze-coords ................ Passed 7.09 sec; Start 392: python-mints2; 317/412 Test #312: rasci-h2o ........................ Passed 3.63 sec; Start 230: mp2-grad2; 318/412 Test #398: json-v11-energy .................. Passed 4.16 sec; Start 406: skeleton; 319/412 Test #236: mp2-property ..................... Passed 3.97 sec; Start 352: dft-reference; 320/412 Test #247: omp2-1 ........................... Passed 7.17 sec; Start 204: frac; 321/412 Test #340: scf-property ..................... Passed 5.94 sec; Start 225: molden2; 322/412 Test #272: opt5 ............................. Passed 5.79 sec; Start 226: mom; 323/412 Test #285: props1 ........................... Passed 6.02 sec; Start 122: dfccdl1; 324/412 Test #237: mpn-bh ........................... Passed 7.07 sec; Start 364: zaptn-nh2; 325/412 Test #120: dfcasscf-sp ...................... Passed 6.93 sec; Start 345: dfep2-1; 326/412 Test #232: mp2p5-grad1 ...................... Passed 6.24 sec; Start 214: mints2; 327/412 Test #392: python-mints2 .................... Passed 3.04 sec; Start 4: casscf-semi; 328/412 Test #406: skeleton ......................... Passed 2.32 sec; Start 224: molden1;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:29885,energy,energy,29885,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,...................... Passed 26.14 sec; Start 180: fsapt-terms; 183/411 Test #179: fsapt2 ........................... Passed 5.23 sec; Start 183: isapt2; 184/411 Test #180: fsapt-terms ...................... Passed 8.49 sec; Start 184: fci-dipole; 185/411 Test #184: fci-dipole ....................... Passed 7.84 sec; Start 185: fci-h2o; 186/411 Test #168: dft1 ............................. Passed 103.78 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 7.23 sec; Start 187: fci-h2o-fzcv; 188/411 Test #177: extern2 .......................... Passed 29.73 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 2.64 sec; Start 189: fci-tdm-2; 190/411 Test #187: fci-h2o-fzcv ..................... Passed 6.27 sec; Start 190: fci-coverage; 191/411 Test #186: fci-h2o-2 ........................ Passed 7.96 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.36 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 12.29 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.59 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 15.37 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 32.36 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 20.11 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 12.70 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 42.48 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 20.61 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 9.22 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 4.49 sec; Start 204: frac-ip-fitting; 203/411 Test #202: fnocc4 ........................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:17805,energy,energy,17805,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['energy'],['energy']
Energy Efficiency,...................... Passed 4.38 sec; Start 180: fsapt-terms; 190/411 Test #180: fsapt-terms ...................... Passed 8.43 sec; Start 183: isapt2; 191/411 Test #183: isapt2 ........................... Passed 128.00 sec; Start 184: fci-dipole; 192/411 Test #184: fci-dipole ....................... Passed 5.75 sec; Start 185: fci-h2o; 193/411 Test #185: fci-h2o .......................... Passed 5.68 sec; Start 186: fci-h2o-2; 194/411 Test #186: fci-h2o-2 ........................ Passed 5.36 sec; Start 187: fci-h2o-fzcv; 195/411 Test #187: fci-h2o-fzcv ..................... Passed 4.49 sec; Start 188: fci-tdm; 196/411 Test #188: fci-tdm .......................... Passed 0.85 sec; Start 189: fci-tdm-2; 197/411 Test #189: fci-tdm-2 ........................ Passed 18.76 sec; Start 190: fci-coverage; 198/411 Test #190: fci-coverage ..................... Passed 1.66 sec; Start 191: fcidump; 199/411 Test #191: fcidump .......................... Passed 1.78 sec; Start 192: fd-freq-energy; 200/411 Test #192: fd-freq-energy ................... Passed 5.29 sec; Start 194: fd-freq-gradient; 201/411 Test #194: fd-freq-gradient ................. Passed 9.96 sec; Start 196: fd-gradient; 202/411 Test #196: fd-gradient ...................... Passed 15.21 sec; Start 197: freq-isotope1; 203/411 Test #197: freq-isotope1 .................... Passed 6.33 sec; Start 198: freq-isotope2; 204/411 Test #198: freq-isotope2 .................... Passed 3.43 sec; Start 199: fnocc1; 205/411 Test #199: fnocc1 ........................... Passed 2.95 sec; Start 200: fnocc2; 206/411 Test #200: fnocc2 ........................... Passed 11.37 sec; Start 201: fnocc3; 207/411 Test #201: fnocc3 ........................... Passed 2.72 sec; Start 202: fnocc4; 208/411 Test #202: fnocc4 ........................... Passed 11.17 sec; Start 203: frac; 209/411 Test #203: frac ............................. Passed 1.62 sec; Start 204: frac-ip-fitting; 210/411 Test #204: frac-ip-fitting .................. Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:18174,energy,energy,18174,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,2,['energy'],['energy']
Energy Efficiency,...................... Passed 4.73 sec; Start 180: fsapt-terms; 190/411 Test #180: fsapt-terms ...................... Passed 7.70 sec; Start 183: isapt2; 191/411 Test #183: isapt2 ........................... Passed 116.32 sec; Start 184: fci-dipole; 192/411 Test #184: fci-dipole ....................... Passed 6.09 sec; Start 185: fci-h2o; 193/411 Test #185: fci-h2o .......................... Passed 5.68 sec; Start 186: fci-h2o-2; 194/411 Test #186: fci-h2o-2 ........................ Passed 5.51 sec; Start 187: fci-h2o-fzcv; 195/411 Test #187: fci-h2o-fzcv ..................... Passed 3.61 sec; Start 188: fci-tdm; 196/411 Test #188: fci-tdm .......................... Passed 0.91 sec; Start 189: fci-tdm-2; 197/411 Test #189: fci-tdm-2 ........................ Passed 18.51 sec; Start 190: fci-coverage; 198/411 Test #190: fci-coverage ..................... Passed 1.46 sec; Start 191: fcidump; 199/411 Test #191: fcidump .......................... Passed 2.13 sec; Start 192: fd-freq-energy; 200/411 Test #192: fd-freq-energy ................... Passed 5.12 sec; Start 194: fd-freq-gradient; 201/411 Test #194: fd-freq-gradient ................. Passed 11.23 sec; Start 196: fd-gradient; 202/411 Test #196: fd-gradient ...................... Passed 16.81 sec; Start 197: freq-isotope1; 203/411 Test #197: freq-isotope1 .................... Passed 6.62 sec; Start 198: freq-isotope2; 204/411 Test #198: freq-isotope2 .................... Passed 3.42 sec; Start 199: fnocc1; 205/411 Test #199: fnocc1 ........................... Passed 3.17 sec; Start 200: fnocc2; 206/411 Test #200: fnocc2 ........................... Passed 11.02 sec; Start 201: fnocc3; 207/411 Test #201: fnocc3 ........................... Passed 3.90 sec; Start 202: fnocc4; 208/411 Test #202: fnocc4 ........................... Passed 13.47 sec; Start 203: frac; 209/411 Test #203: frac ............................. Passed 1.56 sec; Start 204: frac-ip-fitting; 210/411 Test #204: frac-ip-fitting .................. Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:18146,energy,energy,18146,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,2,['energy'],['energy']
Energy Efficiency,...................... Passed 6.00 sec; Start 180: fsapt-terms; 175/411 Test #172: dft3 ............................. Passed 21.48 sec; Start 183: isapt2; 176/411 Test #180: fsapt-terms ...................... Passed 9.72 sec; Start 184: fci-dipole; 177/411 Test #176: extern1 .......................... Passed 21.11 sec; Start 185: fci-h2o; 178/411 Test #177: extern2 .......................... Passed 24.14 sec; Start 186: fci-h2o-2; 179/411 Test #173: dft-omega ........................ Passed 28.39 sec; Start 187: fci-h2o-fzcv; 180/411 Test #184: fci-dipole ....................... Passed 8.58 sec; Start 188: fci-tdm; 181/411 Test #185: fci-h2o .......................... Passed 7.32 sec; Start 189: fci-tdm-2; 182/411 Test #188: fci-tdm .......................... Passed 1.10 sec; Start 190: fci-coverage; 183/411 Test #187: fci-h2o-fzcv ..................... Passed 5.15 sec; Start 191: fcidump; 184/411 Test #186: fci-h2o-2 ........................ Passed 8.30 sec; Start 192: fd-freq-energy; 185/411 Test #190: fci-coverage ..................... Passed 10.54 sec; Start 194: fd-freq-gradient; 186/411 Test #191: fcidump .......................... Passed 9.42 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 55.49 sec; Start 197: freq-isotope1; 188/411 Test #167: dft-b3lyp ........................ Passed 69.92 sec; Start 198: freq-isotope2; 189/411 Test #192: fd-freq-energy ................... Passed 15.93 sec; Start 199: fnocc1; 190/411 Test #189: fci-tdm-2 ........................ Passed 23.63 sec; Start 200: fnocc2; 191/411 Test #198: freq-isotope2 .................... Passed 10.26 sec; Start 201: fnocc3; 192/411 Test #161: dft-grad-lr2 ..................... Passed 102.78 sec; Start 202: fnocc4; 193/411 Test #197: freq-isotope1 .................... Passed 16.85 sec; Start 203: frac; 194/411 Test #203: frac ............................. Passed 3.42 sec; Start 204: frac-ip-fitting; 195/411 Test #199: fnocc1 ........................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:17179,energy,energy,17179,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency,....................... Passed 1.81 sec; Start 345: dfep2-2; 345/404 Test #93: cisd-h2o+-0 ...................... Passed 2.21 sec; Start 96: cisd-h2o-clpse; 346/404 Test #118: dfcasscf-fzc-sp .................. Passed 1.34 sec; Start 231: mp2p5-grad1; 347/404 Test #94: cisd-h2o+-1 ...................... Passed 1.65 sec; Start 356: scf-response1; 348/404 Test #327: scf-guess-read1 .................. Passed 1.34 sec; Start 362: x2c3; 349/404 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 354: tu2-ch2-energy; 350/404 Test #99: cisd-sp-2 ........................ Passed 1.72 sec; Start 187: fci-h2o-fzcv; 351/404 Test #95: cisd-h2o+-2 ...................... Passed 1.68 sec; Start 228: mp2-grad1; 352/404 Test #96: cisd-h2o-clpse ................... Passed 1.12 sec; Start 330: scf-bs; 353/404 Test #345: dfep2-2 .......................... Passed 1.68 sec; Start 361: x2c2; 354/404 Test #231: mp2p5-grad1 ...................... Passed 1.32 sec; Start 403: json-schema-1-gradient; 355/404 Test #354: tu2-ch2-energy ................... Passed 0.81 sec; Start 221: mints9; 356/404 Test #356: scf-response1 .................... Passed 1.27 sec; Start 390: python-mints9; 357/404 Test #330: scf-bs ........................... Passed 0.89 sec; Start 395: python-mints13; 358/404 Test #362: x2c3 ............................. Passed 1.59 sec; Start 311: rasci-h2o; 359/404 Test #228: mp2-grad1 ........................ Passed 1.22 sec; Start 222: mints10; 360/404 Test #403: json-schema-1-gradient ........... Passed 1.26 sec; Start 349: sapt-sf1; 361/404 Test #187: fci-h2o-fzcv ..................... Passed 1.66 sec; Start 398: json-v11-gradient; 362/404 Test #361: x2c2 ............................. Passed 1.50 sec; Start 157: dft-grac; 363/404 Test #311: rasci-h2o ........................ Passed 1.27 sec; Start 381: psi4numpy-dfmp2; 364/404 Test #349: sapt-sf1 ......................... Passed 0.97 sec; Start 288: psimrcc-ccsd_t-2; 365/404 Test #398: json-v11-gradient ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:32995,energy,energy,32995,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,....................... Passed 452.47 sec; Start 113: dcft5; 12/413 Test #25: cc13 ............................. Passed 471.17 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #147: dfomp2-grad3 ..................... Passed 1406.19 sec; Start 29: cc13d; 14/413 Test #105: dcft-grad1 ....................... Passed 1455.46 sec; Start 184: isapt1; 15/413 Test #308: pywrap-checkrun-uhf .............. Passed 1474.71 sec; Start 11: cbs-delta-energy; 16/413 Test #306: pywrap-checkrun-rhf .............. Passed 1487.57 sec; Start 48: cc31; 17/413 Test #302: pywrap-all ....................... Passed 1522.41 sec; Start 45: cc29; 18/413 Test #77: cc7 .............................. Passed 710.33 sec; Start 114: dcft6; 19/413 Test #157: dft-grad-lr3 ..................... Passed 427.70 sec; Start 18: cbs-xtpl-func; 20/413 Test #229: mp2-def2 ......................... Passed 374.64 sec; Start 183: fsapt-allterms; 21/413 Test #242: ocepa-freq1 ...................... Passed 672.14 sec; Start 195: fd-freq-energy-large; 22/413 Test #29: cc13d ............................ Passed 269.25 sec; Start 197: fd-freq-gradient-large; 23/413 Test #48: cc31 ............................. Passed 195.21 sec; Start 280: opt13; 24/413 Test #45: cc29 ............................. Passed 176.04 sec; Start 361: tu6-cp-ne2; 25/413 Test #113: dcft5 ............................ Passed 343.29 sec; Start 375: dft-custom-mgga; 26/413 Test #46: cc3 .............................. Passed 1717.81 sec; Start 59: cc41; 27/413 Test #307: pywrap-checkrun-rohf ............. Passed 670.21 sec; Start 388: cookbook-rohf-orb-rot; 28/413 Test #13: cbs-xtpl-alpha ................... Passed 329.60 sec; Start 322: sapt6; 29/413 Test #114: dcft6 ............................ Passed 222.96 sec; Start 381: cc-module; 30/413 Test #11: cbs-delta-energy ................. Passed 275.19 sec; Start 283: opt-irc-2; 31/413 Test #112: dcft4 ............................ Passed 1796.11 sec; Start 61: cc43; 32/413 Test #59: cc41 ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:2399,energy,energy-large,2399,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy-large']
Energy Efficiency,....................... Passed 6.09 sec; Start 180: fsapt-terms; 183/411 Test #180: fsapt-terms ...................... Passed 8.63 sec; Start 183: isapt2; 184/411 Test #176: extern1 .......................... Passed 21.39 sec; Start 184: fci-dipole; 185/411 Test #177: extern2 .......................... Passed 25.58 sec; Start 185: fci-h2o; 186/411 Test #184: fci-dipole ....................... Passed 8.00 sec; Start 186: fci-h2o-2; 187/411 Test #168: dft1 ............................. Passed 107.43 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 7.69 sec; Start 188: fci-tdm; 189/411 Test #186: fci-h2o-2 ........................ Passed 6.82 sec; Start 189: fci-tdm-2; 190/411 Test #188: fci-tdm .......................... Passed 4.98 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 9.54 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 16.54 sec; Start 192: fd-freq-energy; 193/411 Test #189: fci-tdm-2 ........................ Passed 23.42 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 22.38 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 19.98 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 38.34 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 23.86 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 13.68 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 51.66 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 38.62 sec; Start 202: fnocc4; 201/411 Test #183: isapt2 ........................... Passed 125.82 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 7.79 sec; Start 204: frac-ip-fitting; 203/411 Test #201: fnocc3 ..........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:17783,energy,energy,17783,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['energy'],['energy']
Energy Efficiency,....................... Passed 6.99 sec; Start 125: dfccsdl1; 280/412 Test #138: dfmp2-grad4 ...................... Passed 9.19 sec; Start 124: dfccsd1; 281/412 Test #330: scf-guess-read2 .................. Passed 9.29 sec; Start 137: dfmp2-grad3; 282/412 Test #100: cisd-sp-2 ........................ Passed 7.71 sec; Start 96: cisd-h2o+-2; 283/412 Test #117: ao-dfcasscf-sp ................... Passed 7.32 sec; Start 188: fci-h2o-fzcv; 284/412 Test #263: omp3-grad1 ....................... Passed 11.19 sec; Start 172: dft2; 285/412 Test #118: dfcasscf-sa-sp ................... Passed 7.20 sec; Start 252: omp2-grad1; 286/412 Test #270: opt3 ............................. Passed 9.03 sec; Start 244: ocepa1; 287/412 Test #233: mp2p5-grad2 ...................... Passed 10.07 sec; Start 356: tu3-h2o-opt; 288/412 Test #3: casscf-fzc-sp .................... Passed 16.91 sec; Start 344: stability1; 289/412 Test #254: omp2p5-1 ......................... Passed 12.39 sec; Start 400: json-schema-1-energy; 290/412 Test #137: dfmp2-grad3 ...................... Passed 7.47 sec; Start 332: scf1; 291/412 Test #96: cisd-h2o+-2 ...................... Passed 6.39 sec; Start 235: mp3-grad2; 292/412 Test #296: psithon1 ......................... Passed 15.36 sec; Start 180: fsapt2; 293/412 Test #172: dft2 ............................. Passed 5.76 sec; Start 95: cisd-h2o+-1; 294/412 Test #191: fci-coverage ..................... Passed 14.26 sec; Start 311: rasci-c2-active; 295/412 Test #188: fci-h2o-fzcv ..................... Passed 6.52 sec; Start 94: cisd-h2o+-0; 296/412 Test #356: tu3-h2o-opt ...................... Passed 4.47 sec; Start 192: fcidump; 297/412 Test #158: dfrasscf-sp ...................... Passed 15.74 sec; Start 266: opt1; 298/412 Test #252: omp2-grad1 ....................... Passed 6.59 sec; Start 119: dfcasscf-fzc-sp; 299/412 Test #400: json-schema-1-energy ............. Passed 3.65 sec; Start 258: omp3-1; 300/412 Test #125: dfccsdl1 ......................... Passed 12.84 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:27228,energy,energy,27228,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,....................... Passed 727.44 sec; Start 180: fsapt-terms; 183/411 Test #170: dft1-alt ......................... Passed 49.38 sec; Start 183: isapt2; 184/411 Test #179: fsapt2 ........................... Passed 5.31 sec; Start 184: fci-dipole; 185/411 Test #180: fsapt-terms ...................... Passed 8.67 sec; Start 185: fci-h2o; 186/411 Test #184: fci-dipole ....................... Passed 8.39 sec; Start 186: fci-h2o-2; 187/411 Test #176: extern1 .......................... Passed 20.31 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 8.16 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 0.88 sec; Start 189: fci-tdm-2; 190/411 Test #186: fci-h2o-2 ........................ Passed 10.10 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 7.22 sec; Start 191: fcidump; 192/411 Test #177: extern2 .......................... Passed 27.27 sec; Start 192: fd-freq-energy; 193/411 Test #191: fcidump .......................... Passed 6.53 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 7.87 sec; Start 196: fd-gradient; 195/411 Test #168: dft1 ............................. Passed 106.60 sec; Start 197: freq-isotope1; 196/411 Test #192: fd-freq-energy ................... Passed 11.70 sec; Start 198: freq-isotope2; 197/411 Test #189: fci-tdm-2 ........................ Passed 24.01 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 10.11 sec; Start 200: fnocc2; 199/411 Test #197: freq-isotope1 .................... Passed 17.28 sec; Start 201: fnocc3; 200/411 Test #194: fd-freq-gradient ................. Passed 26.25 sec; Start 202: fnocc4; 201/411 Test #199: fnocc1 ........................... Passed 21.50 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 5.66 sec; Start 204: frac-ip-fitting; 203/411 Test #196: fd-gradient ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:17791,energy,energy,17791,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency,........................ Passed 12.65 sec; Start 180: fsapt-terms; 175/411 Test #179: fsapt2 ........................... Passed 5.27 sec; Start 183: isapt2; 176/411 Test #172: dft3 ............................. Passed 20.38 sec; Start 184: fci-dipole; 177/411 Test #177: extern2 .......................... Passed 16.19 sec; Start 185: fci-h2o; 178/411 Test #173: dft-omega ........................ Passed 24.42 sec; Start 186: fci-h2o-2; 179/411 Test #180: fsapt-terms ...................... Passed 8.89 sec; Start 187: fci-h2o-fzcv; 180/411 Test #185: fci-h2o .......................... Passed 6.44 sec; Start 188: fci-tdm; 181/411 Test #184: fci-dipole ....................... Passed 6.80 sec; Start 189: fci-tdm-2; 182/411 Test #188: fci-tdm .......................... Passed 1.51 sec; Start 190: fci-coverage; 183/411 Test #187: fci-h2o-fzcv ..................... Passed 4.69 sec; Start 191: fcidump; 184/411 Test #190: fci-coverage ..................... Passed 3.16 sec; Start 192: fd-freq-energy; 185/411 Test #186: fci-h2o-2 ........................ Passed 6.66 sec; Start 194: fd-freq-gradient; 186/411 Test #191: fcidump .......................... Passed 3.32 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 46.30 sec; Start 197: freq-isotope1; 188/411 Test #192: fd-freq-energy ................... Passed 7.42 sec; Start 198: freq-isotope2; 189/411 Test #198: freq-isotope2 .................... Passed 4.88 sec; Start 199: fnocc1; 190/411 Test #197: freq-isotope1 .................... Passed 9.15 sec; Start 200: fnocc2; 191/411 Test #167: dft-b3lyp ........................ Passed 68.29 sec; Start 201: fnocc3; 192/411 Test #194: fd-freq-gradient ................. Passed 16.11 sec; Start 202: fnocc4; 193/411 Test #199: fnocc1 ........................... Passed 4.57 sec; Start 203: frac; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.81 sec; Start 204: frac-ip-fitting; 195/411 Test #203: frac ............................. Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:17167,energy,energy,17167,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['energy'],['energy']
Energy Efficiency,........................ Passed 14.05 sec; Start 337: scf4; 251/413 Test #245: ocepa1 ........................... Passed 10.97 sec; Start 99: cisd-sp; 252/413 Test #159: dfrasscf-sp ...................... Passed 10.03 sec; Start 270: opt2-fd; 253/413 Test #129: dfccsdt1 ......................... Passed 11.34 sec; Start 3: casscf-fzc-sp; 254/413 Test #139: dfmp2-grad4 ...................... Passed 12.20 sec; Start 134: dfmp2-4; 255/413 Test #370: scf-freq1 ........................ Passed 14.76 sec; Start 163: dft-ghost; 256/413 Test #91: cepa1 ............................ Passed 19.79 sec; Start 297: psithon1; 257/413 Test #14: cbs-xtpl-energy .................. Passed 16.33 sec; Start 89: cepa2; 258/413 Test #359: tu4-h2o-freq ..................... Passed 13.21 sec; Start 390: python-curve; 259/413 Test #371: dft-jk ........................... Passed 12.88 sec; Start 401: json-schema-1-energy; 260/413 Test #343: soscf-ref ........................ Passed 9.59 sec; Start 399: json-v11-energy; 261/413 Test #272: opt4 ............................. Passed 10.18 sec; Start 369: scf-hess1; 262/413 Test #3: casscf-fzc-sp .................... Passed 6.82 sec; Start 9: castup2; 263/413 Test #163: dft-ghost ........................ Passed 8.85 sec; Start 200: freq-isotope2; 264/413 Test #399: json-v11-energy .................. Passed 4.63 sec; Start 143: dfomp2-3; 265/413 Test #337: scf4 ............................. Passed 11.13 sec; Start 393: python-mints2; 266/413 Test #390: python-curve ..................... Passed 5.53 sec; Start 15: cbs-xtpl-freq; 267/413 Test #401: json-schema-1-energy ............. Passed 5.19 sec; Start 392: python-mints9; 268/413 Test #134: dfmp2-4 .......................... Passed 10.28 sec; Start 264: omp3-grad1; 269/413 Test #374: dft-custom-hybrid ................ Passed 12.81 sec; Start 397: python-mints13; 270/413 Test #297: psithon1 ......................... Passed 9.16 sec; Start 253: omp2-grad1; 271/413 Test #270: opt2-fd ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:24502,energy,energy,24502,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,........................ Passed 5.36 sec; Start 156: dft-b2plyp; 216/404 Test #202: fnocc4 ........................... Passed 5.78 sec; Start 367: scf-hess1; 217/404 Test #291: psimrcc-fd-freq1 ................. Passed 7.14 sec; Start 14: cbs-xtpl-energy; 218/404 Test #160: dft-grad-lr1 ..................... Passed 11.52 sec; Start 21: cc10; 219/404 Test #268: opt2-fd .......................... Passed 8.52 sec; Start 372: dft-custom-hybrid; 220/404 Test #368: scf-freq1 ........................ Passed 5.77 sec; Start 154: dfrasscf-sp; 221/404 Test #21: cc10 ............................. Passed 2.97 sec; Start 164: dft-grad1; 222/404 Test #322: sapt-dft-lrc ..................... Passed 10.62 sec; Start 89: cepa3; 223/404 Test #154: dfrasscf-sp ...................... Passed 2.00 sec; Start 128: dfccsdat1; 224/404 Test #367: scf-hess1 ........................ Passed 6.01 sec; Start 7: casscf-sp; 225/404 Test #301: pywrap-basis ..................... Passed 7.80 sec; Start 341: soscf-ref; 226/404 Test #14: cbs-xtpl-energy .................. Passed 7.07 sec; Start 124: dfccsdl1; 227/404 Test #156: dft-b2plyp ....................... Passed 8.45 sec; Start 197: freq-isotope1; 228/404 Test #89: cepa3 ............................ Passed 3.93 sec; Start 219: mints-benchmark; 229/404 Test #128: dfccsdat1 ........................ Passed 3.19 sec; Start 315: sapt1; 230/404 Test #124: dfccsdl1 ......................... Passed 3.30 sec; Start 9: castup2; 231/404 Test #7: casscf-sp ........................ Passed 5.72 sec; Start 358: tu5-sapt; 232/404 Test #372: dft-custom-hybrid ................ Passed 8.63 sec; Start 201: fnocc3; 233/404 Test #341: soscf-ref ........................ Passed 5.39 sec; Start 270: opt4; 234/404 Test #164: dft-grad1 ........................ Passed 9.34 sec; Start 290: psimrcc-ccsd_t-4; 235/404 Test #201: fnocc3 ........................... Passed 2.69 sec; Start 132: dfmp2-4; 236/404 Test #9: castup2 .......................... Passed 4.06 sec; Start 165: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:20924,energy,energy,20924,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,........................ Passed 73.59 sec; Start 74: cc5a; 63/411 Test #60: cc43 ............................. Passed 20.33 sec; Start 204: frac-ip-fitting; 64/411 Test #317: sapt3 ............................ Passed 71.21 sec; Start 104: dcft-grad2; 65/411 Test #104: dcft-grad2 ....................... Passed 11.72 sec; Start 115: dcft9; 66/411 Test #74: cc5a ............................. Passed 36.60 sec; Start 292: psimrcc-fd-freq2; 67/411 Test #69: cc51 ............................. Passed 55.79 sec; Start 19: cbs-xtpl-wrapper; 68/411 Test #319: sapt5 ............................ Passed 62.74 sec; Start 144: dfomp2-grad2; 69/411 Test #115: dcft9 ............................ Passed 17.82 sec; Start 46: cc30; 70/411 Test #144: dfomp2-grad2 ..................... Passed 12.75 sec; Start 61: cc44; 71/411 Test #167: dft-b3lyp ........................ Passed 61.83 sec; Start 149: dfomp3-grad2; 72/411 Test #204: frac-ip-fitting .................. Passed 58.04 sec; Start 11: cbs-delta-energy; 73/411 Test #149: dfomp3-grad2 ..................... Passed 14.73 sec; Start 43: cc28; 74/411 Test #46: cc30 ............................. Passed 23.10 sec; Start 259: omp3-3; 75/411 Test #19: cbs-xtpl-wrapper ................. Passed 46.33 sec; Start 17: cbs-xtpl-opt; 76/411 Test #292: psimrcc-fd-freq2 ................. Passed 55.91 sec; Start 100: ci-property; 77/411 Test #61: cc44 ............................. Passed 42.92 sec; Start 389: python-pubchem; 78/411 Test #43: cc28 ............................. Passed 33.97 sec; Start 159: dft-grad-meta; 79/411 Test #259: omp3-3 ........................... Passed 34.08 sec; Start 147: dfomp3-2; 80/411 Test #11: cbs-delta-energy ................. Passed 49.88 sec; Start 244: ocepa2; 81/411 Test #147: dfomp3-2 ......................... Passed 9.52 sec; Start 297: pubchem1; 82/411 Test #17: cbs-xtpl-opt ..................... Passed 44.69 sec; Start 170: dft1-alt; 83/411 Test #244: ocepa2 ........................... Passed 20.83 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:6991,energy,energy,6991,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,........................ Passed 921.94 sec; Start 32: cc16; 6/413 Test #41: cc25 ............................. Passed 923.19 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 1051.53 sec; Start 307: pywrap-checkrun-rohf; 8/413 Test #116: dcft8 ............................ Passed 1117.15 sec; Start 157: dft-grad-lr3; 9/413 Test #40: cc24 ............................. Passed 1209.65 sec; Start 229: mp2-def2; 10/413 Test #36: cc2 .............................. Passed 1231.86 sec; Start 180: fsapt1; 11/413 Test #32: cc16 ............................. Passed 452.47 sec; Start 113: dcft5; 12/413 Test #25: cc13 ............................. Passed 471.17 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #147: dfomp2-grad3 ..................... Passed 1406.19 sec; Start 29: cc13d; 14/413 Test #105: dcft-grad1 ....................... Passed 1455.46 sec; Start 184: isapt1; 15/413 Test #308: pywrap-checkrun-uhf .............. Passed 1474.71 sec; Start 11: cbs-delta-energy; 16/413 Test #306: pywrap-checkrun-rhf .............. Passed 1487.57 sec; Start 48: cc31; 17/413 Test #302: pywrap-all ....................... Passed 1522.41 sec; Start 45: cc29; 18/413 Test #77: cc7 .............................. Passed 710.33 sec; Start 114: dcft6; 19/413 Test #157: dft-grad-lr3 ..................... Passed 427.70 sec; Start 18: cbs-xtpl-func; 20/413 Test #229: mp2-def2 ......................... Passed 374.64 sec; Start 183: fsapt-allterms; 21/413 Test #242: ocepa-freq1 ...................... Passed 672.14 sec; Start 195: fd-freq-energy-large; 22/413 Test #29: cc13d ............................ Passed 269.25 sec; Start 197: fd-freq-gradient-large; 23/413 Test #48: cc31 ............................. Passed 195.21 sec; Start 280: opt13; 24/413 Test #45: cc29 ............................. Passed 176.04 sec; Start 361: tu6-cp-ne2; 25/413 Test #113: dcft5 ............................ Passed 343.29 sec; Start 375: dft-custom-mgga; 26/413 Test #46: cc3 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:1837,energy,energy,1837,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,......................... Passed 5.01 sec; Start 180: fsapt-terms; 175/411 Test #172: dft3 ............................. Passed 20.79 sec; Start 183: isapt2; 176/411 Test #176: extern1 .......................... Passed 15.25 sec; Start 184: fci-dipole; 177/411 Test #180: fsapt-terms ...................... Passed 8.95 sec; Start 185: fci-h2o; 178/411 Test #173: dft-omega ........................ Passed 25.66 sec; Start 186: fci-h2o-2; 179/411 Test #177: extern2 .......................... Passed 22.17 sec; Start 187: fci-h2o-fzcv; 180/411 Test #184: fci-dipole ....................... Passed 7.88 sec; Start 188: fci-tdm; 181/411 Test #188: fci-tdm .......................... Passed 1.50 sec; Start 189: fci-tdm-2; 182/411 Test #187: fci-h2o-fzcv ..................... Passed 5.59 sec; Start 190: fci-coverage; 183/411 Test #185: fci-h2o .......................... Passed 6.73 sec; Start 191: fcidump; 184/411 Test #186: fci-h2o-2 ........................ Passed 7.05 sec; Start 192: fd-freq-energy; 185/411 Test #191: fcidump .......................... Passed 3.44 sec; Start 194: fd-freq-gradient; 186/411 Test #190: fci-coverage ..................... Passed 3.57 sec; Start 196: fd-gradient; 187/411 Test #170: dft1-alt ......................... Passed 48.60 sec; Start 197: freq-isotope1; 188/411 Test #192: fd-freq-energy ................... Passed 8.97 sec; Start 198: freq-isotope2; 189/411 Test #198: freq-isotope2 .................... Passed 5.22 sec; Start 199: fnocc1; 190/411 Test #189: fci-tdm-2 ........................ Passed 21.94 sec; Start 200: fnocc2; 191/411 Test #197: freq-isotope1 .................... Passed 9.99 sec; Start 201: fnocc3; 192/411 Test #167: dft-b3lyp ........................ Passed 69.37 sec; Start 202: fnocc4; 193/411 Test #194: fd-freq-gradient ................. Passed 19.34 sec; Start 203: frac; 194/411 Test #199: fnocc1 ........................... Passed 11.81 sec; Start 204: frac-ip-fitting; 195/411 Test #203: frac ............................. Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:17216,energy,energy,17216,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,......................... Passed 6.22 sec; Start 170: docs-bases; 261/401 Test #170: docs-bases ....................... Passed 0.64 sec; Start 171: docs-dft; 262/401 Test #171: docs-dft ......................... Passed 0.70 sec; Start 173: extern2; 263/401 Test #162: dft-psivar ....................... Passed 20.12 sec; Start 179: isapt2; 264/401 Test #13: cbs-xtpl-alpha ................... Passed 152.72 sec; Start 181: fci-h2o; 265/401 Test #181: fci-h2o .......................... Passed 3.69 sec; Start 182: fci-h2o-2; 266/401 Test #111: dcft6 ............................ Passed 123.09 sec; Start 183: fci-h2o-fzcv; 267/401 Test #182: fci-h2o-2 ........................ Passed 4.36 sec; Start 184: fci-tdm; 268/401 Test #184: fci-tdm .......................... Passed 1.06 sec; Start 185: fci-tdm-2; 269/401 Test #183: fci-h2o-fzcv ..................... Passed 2.12 sec; Start 186: fci-coverage; 270/401 Test #113: dcft8 ............................ Passed 121.68 sec; Start 188: fd-freq-energy; 271/401 Test #169: dft-omega ........................ Passed 17.38 sec; Start 190: fd-freq-gradient; 272/401 Test #173: extern2 .......................... Passed 15.58 sec; Start 192: fd-gradient; 273/401 Test #168: dft3 ............................. Passed 21.77 sec; Start 193: freq-isotope1; 274/401 Test #186: fci-coverage ..................... Passed 4.23 sec; Start 199: frac; 275/401 Test #199: frac ............................. Passed 1.90 sec; Start 200: frac-ip-fitting; 276/401 Test #188: fd-freq-energy ................... Passed 7.14 sec; Start 202: ghosts; 277/401 Test #163: dft-b3lyp ........................ Passed 37.96 sec; Start 206: mcscf2; 278/401 Test #206: mcscf2 ........................... Passed 1.48 sec; Start 207: mcscf3; 279/401 Test #193: freq-isotope1 .................... Passed 8.74 sec; Start 210: mints3; 280/401 Test #207: mcscf3 ........................... Passed 0.80 sec; Start 211: mints4; 281/401 Test #210: mints3 ........................... Passed 1.09,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:25323,energy,energy,25323,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['energy'],['energy']
Energy Efficiency,......................... Passed 984.02 sec; Start 45: cc29; 10/413 Test #42: cc26 ............................. Passed 997.98 sec; Start 61: cc43; 11/413 Test #29: cc13d ............................ Passed 374.09 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #40: cc24 ............................. Passed 1131.64 sec; Start 59: cc41; 13/413 Test #36: cc2 .............................. Passed 1134.77 sec; Start 48: cc31; 14/413 Test #61: cc43 ............................. Passed 150.20 sec; Start 302: pywrap-all; 15/413 Test #45: cc29 ............................. Passed 198.44 sec; Start 306: pywrap-checkrun-rhf; 16/413 Test #396: python-vibanalysis ............... Passed 1286.48 sec; Start 114: dcft6; 17/413 Test #59: cc41 ............................. Passed 185.32 sec; Start 18: cbs-xtpl-func; 18/413 Test #184: isapt1 ........................... Passed 393.71 sec; Start 183: fsapt-allterms; 19/413 Test #113: dcft5 ............................ Passed 418.67 sec; Start 195: fd-freq-energy-large; 20/413 Test #48: cc31 ............................. Passed 260.15 sec; Start 197: fd-freq-gradient-large; 21/413 Test #116: dcft8 ............................ Passed 868.73 sec; Start 280: opt13; 22/413 Test #147: dfomp2-grad3 ..................... Passed 1426.39 sec; Start 308: pywrap-checkrun-uhf; 23/413 Test #105: dcft-grad1 ....................... Passed 1466.56 sec; Start 28: cc13c; 24/413 Test #114: dcft6 ............................ Passed 226.08 sec; Start 71: cc52; 25/413 Test #77: cc7 .............................. Passed 665.07 sec; Start 375: dft-custom-mgga; 26/413 Test #13: cbs-xtpl-alpha ................... Passed 425.08 sec; Start 98: cisd-opt-fd; 27/413 Test #28: cc13c ............................ Passed 157.23 sec; Start 307: pywrap-checkrun-rohf; 28/413 Test #46: cc3 .............................. Passed 1642.77 sec; Start 322: sapt6; 29/413 Test #242: ocepa-freq1 ...................... Passed 704.28 sec; Start 31: cc15; 30/413 Test #71: cc52 ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:2157,energy,energy-large,2157,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy-large']
Energy Efficiency,.......................... Passed 145.98 sec; Start 282: opt-irc-2; 35/412 Test #115: dcft8 ............................ Passed 187.59 sec; Start 45: cc29; 36/412 Test #306: pywrap-checkrun-rohf ............. Passed 207.51 sec; Start 360: tu6-cp-ne2; 37/412 Test #13: cbs-xtpl-alpha ................... Passed 176.77 sec; Start 380: cc-module; 38/412 Test #155: dft-grad-lr2 ..................... Passed 102.35 sec; Start 71: cc52; 39/412 Test #25: cc13 ............................. Passed 99.79 sec; Start 372: dft-custom-dhdf; 40/412 Test #326: scf-bz2 .......................... Passed 131.36 sec; Start 29: cc13d; 41/412 Test #45: cc29 ............................. Passed 106.33 sec; Start 387: cookbook-rohf-orb-rot; 42/412 Test #380: cc-module ........................ Passed 66.63 sec; Start 280: opt14; 43/412 Test #169: dft1 ............................. Passed 114.16 sec; Start 318: sapt3; 44/412 Test #360: tu6-cp-ne2 ....................... Passed 91.83 sec; Start 11: cbs-delta-energy; 45/412 Test #206: frac-traverse .................... Passed 230.60 sec; Start 70: cc51; 46/412 Test #282: opt-irc-2 ........................ Passed 152.10 sec; Start 168: dft-b3lyp; 47/412 Test #372: dft-custom-dhdf .................. Passed 93.71 sec; Start 320: sapt5; 48/412 Test #71: cc52 ............................. Passed 107.19 sec; Start 293: psimrcc-fd-freq2; 49/412 Test #280: opt14 ............................ Passed 84.19 sec; Start 48: cc31; 50/412 Test #318: sapt3 ............................ Passed 85.71 sec; Start 281: opt-irc-1; 51/412 Test #29: cc13d ............................ Passed 96.43 sec; Start 28: cc13c; 52/412 Test #26: cc13a ............................ Passed 337.24 sec; Start 205: frac-ip-fitting; 53/412 Test #387: cookbook-rohf-orb-rot ............ Passed 106.36 sec; Start 32: cc16; 54/412 Test #70: cc51 ............................. Passed 74.18 sec; Start 116: dcft9; 55/412 Test #114: dcft7 ............................ Passed 326.42 sec; Start 76: cc6;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:4548,energy,energy,4548,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,.......................... Passed 163.68 sec; Start 104: dcft-grad2; 72/411 Test #204: frac-ip-fitting .................. Passed 73.44 sec; Start 230: mp2-module; 73/411 Test #61: cc44 ............................. Passed 90.14 sec; Start 19: cbs-xtpl-wrapper; 74/411 Test #46: cc30 ............................. Passed 123.09 sec; Start 159: dft-grad-meta; 75/411 Test #43: cc28 ............................. Passed 112.18 sec; Start 57: cc40; 76/411 Test #17: cbs-xtpl-opt ..................... Passed 138.99 sec; Start 297: pubchem1; 77/411 Test #19: cbs-xtpl-wrapper ................. Passed 90.48 sec; Start 389: python-pubchem; 78/411 Test #159: dft-grad-meta .................... Passed 52.62 sec; Start 100: ci-property; 79/411 Test #230: mp2-module ....................... Passed 122.41 sec; Start 65: cc48; 80/411 Test #18: cbs-xtpl-func .................... Passed 2286.51 sec; Start 2: adc2; 81/411 Test #297: pubchem1 ......................... Passed 56.65 sec; Start 11: cbs-delta-energy; 82/411 Test #104: dcft-grad2 ....................... Passed 167.43 sec; Start 59: cc42; 83/411 Test #389: python-pubchem ................... Passed 54.35 sec; Start 259: omp3-3; 84/411 Test #100: ci-property ...................... Passed 59.03 sec; Start 81: cc9; 85/411 Test #57: cc40 ............................. Passed 93.38 sec; Start 170: dft1-alt; 86/411 Test #2: adc2 ............................. Passed 41.64 sec; Start 149: dfomp3-grad2; 87/411 Test #65: cc48 ............................. Passed 82.20 sec; Start 153: dfomp2p5-grad2; 88/411 Test #59: cc42 ............................. Passed 68.05 sec; Start 79: cc8b; 89/411 Test #170: dft1-alt ......................... Passed 52.00 sec; Start 107: dcft1; 90/411 Test #81: cc9 .............................. Passed 71.95 sec; Start 27: cc13c; 91/411 Test #259: omp3-3 ........................... Passed 132.47 sec; Start 30: cc15; 92/411 Test #79: cc8b ............................. Passed 82.80 sec; Start 219: mints-benchmark; 93/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:7773,energy,energy,7773,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,.......................... Passed 21.73 sec; Start 252: omp2-5; 65/413 Test #75: cc5a ............................. Passed 50.54 sec; Start 151: dfomp3-grad2; 66/413 Test #70: cc51 ............................. Passed 69.56 sec; Start 19: cbs-xtpl-nbody; 67/413 Test #62: cc44 ............................. Passed 49.61 sec; Start 282: opt-irc-1; 68/413 Test #151: dfomp3-grad2 ..................... Passed 21.51 sec; Start 47: cc30; 69/413 Test #252: omp2-5 ........................... Passed 29.32 sec; Start 17: cbs-xtpl-opt; 70/413 Test #19: cbs-xtpl-nbody ................... Passed 31.04 sec; Start 244: ocepa-grad2; 71/413 Test #47: cc30 ............................. Passed 29.82 sec; Start 281: opt14; 72/413 Test #373: dft-custom-dhdf .................. Passed 91.36 sec; Start 265: omp3-grad2; 73/413 Test #327: scf-bz2 .......................... Passed 128.58 sec; Start 20: cbs-xtpl-wrapper; 74/413 Test #244: ocepa-grad2 ...................... Passed 28.38 sec; Start 194: fd-freq-energy; 75/413 Test #265: omp3-grad2 ....................... Passed 25.86 sec; Start 158: dfomp2p5-grad2; 76/413 Test #17: cbs-xtpl-opt ..................... Passed 52.41 sec; Start 319: sapt3; 77/413 Test #282: opt-irc-1 ........................ Passed 72.73 sec; Start 21: cc1; 78/413 Test #158: dfomp2p5-grad2 ................... Passed 18.04 sec; Start 12: cbs-parser; 79/413 Test #21: cc1 .............................. Passed 27.07 sec; Start 294: psimrcc-fd-freq2; 80/413 Test #20: cbs-xtpl-wrapper ................. Passed 54.66 sec; Start 60: cc42; 81/413 Test #194: fd-freq-energy ................... Passed 50.01 sec; Start 246: ocepa2; 82/413 Test #12: cbs-parser ....................... Passed 24.68 sec; Start 321: sapt5; 83/413 Test #195: fd-freq-energy-large ............. Passed 495.34 sec; Start 78: cc8; 84/413 Test #281: opt14 ............................ Passed 79.35 sec; Start 72: cc53; 85/413 Test #60: cc42 ............................. Passed 16.11 sec; Start 247: ocepa3; 86/413 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:7260,energy,energy,7260,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,.......................... Passed 3.20 sec; Start 380: psi4numpy-cphf; 335/411 Test #332: scf-occ .......................... Passed 1.46 sec; Start 356: scf-response1; 336/411 Test #222: mints10 .......................... Passed 1.14 sec; Start 381: psi4numpy-dfmp2; 337/411 Test #130: dfmp2-2 .......................... Passed 1.52 sec; Start 271: opt5; 338/411 Test #380: psi4numpy-cphf ................... Passed 1.10 sec; Start 223: molden1; 339/411 Test #134: dfmp2-grad1 ...................... Passed 1.47 sec; Start 284: props1; 340/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.44 sec; Start 354: tu2-ch2-energy; 341/411 Test #391: python-mints2 .................... Passed 2.24 sec; Start 405: skeleton; 342/411 Test #223: molden1 .......................... Passed 1.40 sec; Start 345: dfep2-2; 343/411 Test #356: scf-response1 .................... Passed 2.00 sec; Start 213: mints2; 344/411 Test #271: opt5 ............................. Passed 1.57 sec; Start 203: frac; 345/411 Test #354: tu2-ch2-energy ................... Passed 0.77 sec; Start 330: scf-bs; 346/411 Test #405: skeleton ......................... Passed 0.91 sec; Start 199: fnocc1; 347/411 Test #284: props1 ........................... Passed 2.29 sec; Start 401: json-schema-1-orient; 348/411 Test #330: scf-bs ........................... Passed 0.90 sec; Start 190: fci-coverage; 349/411 Test #203: frac ............................. Passed 1.40 sec; Start 157: dft-grac; 350/411 Test #345: dfep2-2 .......................... Passed 1.84 sec; Start 361: x2c2; 351/411 Test #213: mints2 ........................... Passed 2.51 sec; Start 233: mp3-grad1; 352/411 Test #157: dft-grac ......................... Passed 1.57 sec; Start 349: sapt-sf1; 353/411 Test #401: json-schema-1-orient ............. Passed 2.05 sec; Start 407: skeletondfmp2; 354/411 Test #199: fnocc1 ........................... Passed 2.94 sec; Start 404: json-schema-1-properties; 355/411 Test #361: x2c2 ............................. P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:32091,energy,energy,32091,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,.......................... Passed 651.87 sec; Start 241: ocepa-freq1; 5/412 Test #43: cc27 ............................. Passed 960.14 sec; Start 183: isapt1; 6/412 Test #39: cc23 ............................. Passed 1144.43 sec; Start 306: pywrap-checkrun-rohf; 7/412 Test #41: cc25 ............................. Passed 1174.58 sec; Start 25: cc13; 8/412 Test #146: dfomp2-grad3 ..................... Passed 1217.72 sec; Start 45: cc29; 9/412 Test #46: cc3 .............................. Passed 1255.05 sec; Start 29: cc13d; 10/412 Test #42: cc26 ............................. Passed 914.66 sec; Start 115: dcft8; 11/412 Test #183: isapt1 ........................... Passed 401.39 sec; Start 112: dcft5; 12/412 Test #395: python-vibanalysis ............... Passed 1424.43 sec; Start 18: cbs-xtpl-func; 13/412 Test #37: cc21 ............................. Passed 1446.40 sec; Start 182: fsapt-allterms; 14/412 Test #45: cc29 ............................. Passed 300.99 sec; Start 194: fd-freq-energy-large; 15/412 Test #104: dcft-grad1 ....................... Passed 1521.99 sec; Start 196: fd-freq-gradient-large; 16/412 Test #305: pywrap-checkrun-rhf .............. Passed 1605.76 sec; Start 279: opt13; 17/412 Test #301: pywrap-all ....................... Passed 1667.37 sec; Start 30: cc14; 18/412 Test #241: ocepa-freq1 ...................... Passed 1040.94 sec; Start 113: dcft6; 19/412 Test #29: cc13d ............................ Passed 491.27 sec; Start 374: dft-custom-mgga; 20/412 Test #25: cc13 ............................. Passed 606.44 sec; Start 71: cc52; 21/412 Test #196: fd-freq-gradient-large ........... Passed 319.51 sec; Start 282: opt-irc-2; 22/412 Test #112: dcft5 ............................ Passed 561.65 sec; Start 321: sapt6; 23/412 Test #113: dcft6 ............................ Passed 232.47 sec; Start 360: tu6-cp-ne2; 24/412 Test #374: dft-custom-mgga .................. Passed 192.83 sec; Start 13: cbs-xtpl-alpha; 25/412 Test #77: cc7 .............................. P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:1746,energy,energy-large,1746,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy-large']
Energy Efficiency,........................... Passed 105.14 sec; Start 58: cc40; 66/413 Test #75: cc5a ............................. Passed 70.15 sec; Start 19: cbs-xtpl-nbody; 67/413 Test #62: cc44 ............................. Passed 56.22 sec; Start 47: cc30; 68/413 Test #70: cc51 ............................. Passed 79.80 sec; Start 244: ocepa-grad2; 69/413 Test #183: fsapt-allterms ................... Passed 566.00 sec; Start 373: dft-custom-dhdf; 70/413 Test #252: omp2-5 ........................... Passed 67.36 sec; Start 282: opt-irc-1; 71/413 Test #151: dfomp3-grad2 ..................... Passed 66.98 sec; Start 17: cbs-xtpl-opt; 72/413 Test #47: cc30 ............................. Passed 68.93 sec; Start 265: omp3-grad2; 73/413 Test #244: ocepa-grad2 ...................... Passed 64.99 sec; Start 281: opt14; 74/413 Test #58: cc40 ............................. Passed 77.29 sec; Start 20: cbs-xtpl-wrapper; 75/413 Test #19: cbs-xtpl-nbody ................... Passed 78.00 sec; Start 194: fd-freq-energy; 76/413 Test #327: scf-bz2 .......................... Passed 122.73 sec; Start 60: cc42; 77/413 Test #373: dft-custom-dhdf .................. Passed 91.90 sec; Start 246: ocepa2; 78/413 Test #282: opt-irc-1 ........................ Passed 84.38 sec; Start 319: sapt3; 79/413 Test #265: omp3-grad2 ....................... Passed 64.41 sec; Start 21: cc1; 80/413 Test #60: cc42 ............................. Passed 60.49 sec; Start 158: dfomp2p5-grad2; 81/413 Test #20: cbs-xtpl-wrapper ................. Passed 71.25 sec; Start 301: pywrap-alias; 82/413 Test #17: cbs-xtpl-opt ..................... Passed 84.79 sec; Start 294: psimrcc-fd-freq2; 83/413 Test #194: fd-freq-energy ................... Passed 71.76 sec; Start 321: sapt5; 84/413 Test #281: opt14 ............................ Passed 84.37 sec; Start 12: cbs-parser; 85/413 Test #246: ocepa2 ........................... Passed 62.00 sec; Start 64: cc46; 86/413 Test #207: frac-traverse .................... Passed 228.24 sec; Start 258: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:7383,energy,energy,7383,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,............................ Passed 12.23 sec; Start 371: dft-jk; 247/413 Test #288: props3 ........................... Passed 13.97 sec; Start 272: opt4; 248/413 Test #219: mints6 ........................... Passed 12.99 sec; Start 343: soscf-ref; 249/413 Test #126: dfccsdl1 ......................... Passed 12.21 sec; Start 374: dft-custom-hybrid; 250/413 Test #287: props2 ........................... Passed 14.05 sec; Start 337: scf4; 251/413 Test #245: ocepa1 ........................... Passed 10.97 sec; Start 99: cisd-sp; 252/413 Test #159: dfrasscf-sp ...................... Passed 10.03 sec; Start 270: opt2-fd; 253/413 Test #129: dfccsdt1 ......................... Passed 11.34 sec; Start 3: casscf-fzc-sp; 254/413 Test #139: dfmp2-grad4 ...................... Passed 12.20 sec; Start 134: dfmp2-4; 255/413 Test #370: scf-freq1 ........................ Passed 14.76 sec; Start 163: dft-ghost; 256/413 Test #91: cepa1 ............................ Passed 19.79 sec; Start 297: psithon1; 257/413 Test #14: cbs-xtpl-energy .................. Passed 16.33 sec; Start 89: cepa2; 258/413 Test #359: tu4-h2o-freq ..................... Passed 13.21 sec; Start 390: python-curve; 259/413 Test #371: dft-jk ........................... Passed 12.88 sec; Start 401: json-schema-1-energy; 260/413 Test #343: soscf-ref ........................ Passed 9.59 sec; Start 399: json-v11-energy; 261/413 Test #272: opt4 ............................. Passed 10.18 sec; Start 369: scf-hess1; 262/413 Test #3: casscf-fzc-sp .................... Passed 6.82 sec; Start 9: castup2; 263/413 Test #163: dft-ghost ........................ Passed 8.85 sec; Start 200: freq-isotope2; 264/413 Test #399: json-v11-energy .................. Passed 4.63 sec; Start 143: dfomp2-3; 265/413 Test #337: scf4 ............................. Passed 11.13 sec; Start 393: python-mints2; 266/413 Test #390: python-curve ..................... Passed 5.53 sec; Start 15: cbs-xtpl-freq; 267/413 Test #401: json-schema-1-energy ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:24148,energy,energy,24148,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,............................ Passed 162.07 sec; Start 305: pywrap-checkrun-rohf; 22/411 Test #114: dcft8 ............................ Passed 63.15 sec; Start 112: dcft6; 23/411 Test #305: pywrap-checkrun-rohf ............. Passed 76.19 sec; Start 320: sapt6; 24/411 Test #112: dcft6 ............................ Passed 119.43 sec; Start 373: dft-custom-mgga; 25/411 Test #195: fd-freq-gradient-large ........... Passed 259.17 sec; Start 29: cc14; 26/411 Test #320: sapt6 ............................ Passed 144.05 sec; Start 155: dfscf-bz2; 27/411 Test #29: cc14 ............................. Passed 51.56 sec; Start 281: opt-irc-2; 28/411 Test #373: dft-custom-mgga .................. Passed 171.31 sec; Start 183: isapt2; 29/411 Test #18: cbs-xtpl-func .................... Passed 435.81 sec; Start 347: sapt-dft2; 30/411 Test #155: dfscf-bz2 ........................ Passed 128.62 sec; Start 70: cc52; 31/411 Test #281: opt-irc-2 ........................ Passed 81.98 sec; Start 44: cc29; 32/411 Test #193: fd-freq-energy-large ............. Passed 433.45 sec; Start 13: cbs-xtpl-alpha; 33/411 Test #44: cc29 ............................. Passed 45.91 sec; Start 359: tu6-cp-ne2; 34/411 Test #70: cc52 ............................. Passed 61.27 sec; Start 24: cc13; 35/411 Test #359: tu6-cp-ne2 ....................... Passed 50.68 sec; Start 28: cc13d; 36/411 Test #347: sapt-dft2 ........................ Passed 108.66 sec; Start 168: dft1; 37/411 Test #183: isapt2 ........................... Passed 128.97 sec; Start 161: dft-grad-lr2; 38/411 Test #24: cc13 ............................. Passed 54.02 sec; Start 25: cc13a; 39/411 Test #181: fsapt-allterms ................... Passed 555.05 sec; Start 113: dcft7; 40/411 Test #28: cc13d ............................ Passed 32.99 sec; Start 205: frac-traverse; 41/411 Test #13: cbs-xtpl-alpha ................... Passed 97.63 sec; Start 316: sapt2; 42/411 Test #168: dft1 ............................. Passed 85.27 sec; Start 318: sapt4; 43/411 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:3255,energy,energy-large,3255,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy-large']
Energy Efficiency,"...And unfortunately, one more wrinkle. Upon deleting the remaining `P::e.globals`, we lose the`SCS-OMP3 TOTAL ENERGY` variable, causing a quick test failure. When you said ""kill off all the remaining P::e.globals"", did you mean _turn them into `variables_`, or did you mean _delete the lines, and remove any reference to them in tests_? There is nothing in`proc.py` to reconstruct the missing variables.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789#issuecomment-581700316:111,ENERGY,ENERGY,111,https://psicode.org,https://github.com/psi4/psi4/pull/1789#issuecomment-581700316,1,['ENERGY'],['ENERGY']
Energy Efficiency,"...Well, thanks Molpro. We have a legitimate ambiguity after all. Okay, new plan:; * `cepa(0)` stays `lccsd` for `energy`, `gradient`, etc. purposes.; * Any time `cepa(0)` appears in an output file, we clarify what we're talking about. Explicitly saying ""Linearized CCD"" or ""Linearized CCSD"" is ideal. If we need to abbreviate, I've seen some Bartlett papers where they use `LinCCD`. Crawford has a good point about `LCCD` referring to localization. If we try to eliminate `cepa(0)` meaning `lccd` entirely, we create havoc with Bozkaya's papers. If we have a logging module, we print out a warning there too.; * `cepa` is eliminated from `dct`. Andy put that in there years ago to facilitate comparison between Kutzelnigg's first stab at DCT and LCCD. Without getting into the theory weeds, that's not a useful comparison now, and it's going to be an even less useful comparison after I've published my next two papers. It's an awkward addition given the DCT logic. It's easiest to get rid of it and direct users to `occ`, `dfocc`, or `fnocc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1872#issuecomment-616900635:114,energy,energy,114,https://psicode.org,https://github.com/psi4/psi4/issues/1872#issuecomment-616900635,1,['energy'],['energy']
Energy Efficiency,"../tests/pytests/test_dft_benchmarks.py -rws -v -n12; [gw8] [ 5%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[B5050LYP- - ]; [gw7] [ 18%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[MN12-SX- - ]; [gw5] [ 22%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[SCAN0- - ]; [gw8] [ 33%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97- - ]; [gw6] [ 36%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97X-D- - ]; [gw6] [ 43%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97X-V- - ]; [gw2] [ 47%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[SCAN- - ]; [gw8] [ 54%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97X- - ]; [gw0] [ 72%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[MN12-SX- - ]; [gw8] [ 88%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[wB97X-V- - ]; [gw9] [ 91%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[wB97- - ]; [gw10] [ 96%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[wB97X-D- - ]; [gw0] [ 96%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[wB97X-D3BJ- - ]; [gw2] [ 99%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_interaction[wB97X- - ]; ```; Most all the trouble are wB97. The B5050 is off in 3rd decimal but most of the other are; ```; E RuntimeError: ; E Fatal Error: Matrix::power: C_DSYEV failed; E Error occurred in file: /home/psilocaluser/gits/hrw-direct/psi4/src/psi4/libmints/matrix.cc on line: 2280; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::Matrix::power(double, double); E psi::DIISManager::extrapolate(int, ...); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-601509105:2800,power,power,2800,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-601509105,2,['power'],['power']
Energy Efficiency,".0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401: XX: -1.5309 YY: 1.6335 ZZ: -0.1027; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Mulliken Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.39836 4.39836 0.00000 -0.79673; 401: 2 H 0.30082 0.30082 0.00000 0.39836; 401: 3 H 0.30082 0.30082 0.00000 0.39836; 401: ; 401: Total alpha = 5.00000, Total beta = 5.00000, Total charge = 0.00000; 401: ; 401: Lowdin Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.29726 4.29726 0.00000 -0.59451; 401: 2 H 0.35137 0.35137 0.00000 0.29726; 401: 3 H 0.35137 0.35137 0.00000 0.29726; 401: ; 401: Total alpha = 5.00000, Total beta = 5.00000, Total charge = 0.00000; 401: ; 401: ; 401: Mayer Bond Indices:; 401: ; 401: Irrep: 1 Size: 3 x 3; 401: ; 401: 1 2 3; 401: ; 401: 1 0.00000000000000 0.80206409286279 0.80206409286279; 401: 2 0.80206409286279 0.00000000000000 0.00302003360260; 401: 3 0.80206409286279 0.00302003360260 0.00000000000000; 401: ; 401: ; 401: ; 401: Atomic Valences: ; 401: ; 401: # #; 401: Irrep: 1; 401: 1: 1.6041282; 401: 2: 0.8050841; 401: 3: 0.8050841; 401: ; 401: ; 401: ; 401: Wiberg Bond Indices using Orthogonal Lowdin Orbitals:; 401: ; 401: Irrep: 1 Size: 3 x 3; 401: ; 401: 1 2 3; 401: ; 401: 1 0.00000000000000 0.92373852221608 0.92373852221608; 401: 2 0.92373852221608 0.00000000000000 0.00699264970980; 401: 3 0.92373852221608 0.00699264970980 0.00000000000000; 401: ; 401: ; 401: ; 401: Atomic Valences: ; 401: ; 401: # #; 401: Irrep: 1; 401: 1: 1.8474770; 401: 2: 0.9307312; 401: 3: 0.9307312; 401: ; 401: ; 401: *** tstop() called on computer06 at Mon Jul 9 14:44:29 2018; 401: Traceback (most recent call last)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:7889,charge,charge,7889,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['charge'],['charge']
Energy Efficiency,".0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > ; > **\* tstart() called on shukla-pc.localdomain; > **\* at Thu Oct 9 10:48:21 2014; > ; > ---; > - TRANSQT2: Program to transform integrals from *; > - the SO basis to the MO basis. *; > - *; > - Daniel, David, & Justin *; > **************************************************; > ; > ## Input parameters:; > ; > Wave function = DETCI; > Backtransform = No; > Print Level = 1; > Print TEIs = No; > Reference wfn = RHF; > Derivative = None; > Delete TEI File = Yes; > Memory (Mbytes) = 5000.0; > Cache Level = 2; > Cache Type = LRU; > ; > ## Chkpt Parameters:; > ; > Number of irreps = 1; > Number of SOs = 246; > Number of MOs = 246; > Number of active MOs = 232; > ; > Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; > ; > ---; > ; > A 246 14 33 0 199 0; > ; > Nuclear Rep. energy (chkpt) = 697.11317829643781; > SCF energy (chkpt) = -535.97469065986820; > ; > Presorting SO-basis two-electron integrals.; > Sorting File: SO Ints (pq,rs) nbuckets = 2; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/61.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:17081,energy,energy,17081,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,2,['energy'],['energy']
Energy Efficiency,.0009217340 6861; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 6897; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 m,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4896,energy,energy,4896,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,.06 sec; Start 293: psimrcc-pt2; 371/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.04 sec; Start 411: skeletonwavefunction; 372/411 Test #380: psi4numpy-cphf ................... Passed 1.15 sec; Start 214: mints3; 373/411 Test #406: skeletonaointegrals .............. Passed 1.01 sec; Start 188: fci-tdm; 374/411 Test #102: decontract ....................... Passed 1.34 sec; Start 410: skeletonsointegrals; 375/411 Test #222: mints10 .......................... Passed 1.43 sec; Start 400: json-schema-1-ghost; 376/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 334: scf3; 377/411 Test #403: json-schema-1-gradient ........... Passed 1.46 sec; Start 349: sapt-sf1; 378/411 Test #408: skeletonmointegrals .............. Passed 1.35 sec; Start 309: pywrap-molecule; 379/411 Test #220: mints-helper ..................... Passed 1.32 sec; Start 396: python-memdfjk; 380/411 Test #298: pubchem2 ......................... Passed 2.43 sec; Start 354: tu2-ch2-energy; 381/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 216: mints5; 382/411 Test #353: tu1-h2o-energy ................... Passed 1.13 sec; Start 209: mcscf1; 383/411 Test #404: json-schema-1-properties ......... Passed 1.20 sec; Start 382: psi4numpy-rhf; 384/411 Test #293: psimrcc-pt2 ...................... Passed 1.09 sec; Start 212: mints1; 385/411 Test #411: skeletonwavefunction ............. Passed 1.06 sec; Start 211: mcscf3; 386/411 Test #214: mints3 ........................... Passed 1.15 sec; Start 239: numpy-array-interface; 387/411 Test #188: fci-tdm .......................... Passed 1.07 sec; Start 409: skeletonscf; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.01 sec; Start 174: docs-bases; 389/411 Test #410: skeletonsointegrals .............. Passed 1.37 sec; Start 175: docs-dft; 390/411 Test #334: scf3 ............................. Passed 1.13 sec; Start 308: pywrap-db3; 391/411 Test #349: sapt-sf1 ......................... Passed 1.14,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:35845,energy,energy,35845,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,".122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties compu",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16921,Energy,Energy,16921,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,".2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2163,energy,energy,2163,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499 0; 11 8 4 -0.2613460628 -0.0000000000 0.0000008461 1; 12 8 5 -0.2613460628 -0.0000000000 0.0000002627 0; 13 8 6 -0.2613460628 -0.0000000000 0.0000000942 1. CISD iterations converged!. CISD variational energy: -0.261346062815; CISD transition energy: -0.261346060539. OS MP2 FNO correction: -0.000000000000; SS MP2 FNO correction: -0.000000000000; MP2 FNO correction: -0.000000000000. OS SCS-MP2 correlation energy: -0.251080593983; SS SCS-MP2 correlation energy: -0.025501141462; SCS-MP2 correlation energy: -0.276581735444; * SCS-MP2 total energy: -788.124409449857. OS MP2 correlation energy: -0.209233828319; SS MP2 correlation energy: -0.076503424385; MP2 correlation energy: -0.285737252704; * MP2 total energy: -788.133564967117. OS CISD correlation energy: -0.198332372454; SS CISD correlation energy: -0.063013688085; CISD correlation energy: -0.261346062815; * CISD total energy: -788.109173777228. Total time for CISD iterations: 11.63 s (user); 1.47 s (system); 6 s (total). Time per iteration: 0.89 s (user); 0.11 s (system); 0.46 s (total). *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:49 2017; Module time:; 	user time = 11.63 seconds = 0.19 minutes; 	system time = 1.48 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes; Total time:; 	user time = 16.89 seconds = 0.28 minutes; 	system time = 2.38 seconds = 0.04 minutes; 	total time = 12 seconds = 0.20 minutes. *** Psi4 exiting successfully. Buy a developer a beer!; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:13843,energy,energy,13843,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,10,['energy'],['energy']
Energy Efficiency,.42e-04 o 4.66e-02 7.34e-03 o ~; 6 -1771.54999493 -7.68e-05 5.40e-04 1.21e-04 o 1.40e-02 1.83e-03 o ~; 7 -1771.55001819 -2.33e-05 4.51e-04 8.25e-05 o 1.89e-02 1.84e-03 o ~; 8 -1771.55002275 -4.56e-06 3.95e-04 7.58e-05 o 4.60e-03 4.59e-04 o ~; 9 -1771.55002699 -4.24e-06 3.75e-04 4.74e-05 o 4.74e-03 4.59e-04 o ~; 10 -1771.55002919 -2.20e-06 3.62e-04 3.71e-05 o 1.53e-02 1.38e-03 o ~; 11 -1771.55003367 -4.48e-06 3.38e-04 3.16e-05 o 1.53e-02 1.38e-03 o ~; 12 -1771.55003620 -2.53e-06 3.26e-04 3.22e-05 o 1.56e-02 1.38e-03 o ~; 13 -1771.55003691 -7.15e-07 * 3.21e-04 3.16e-05 o 3.92e-03 3.44e-04 o ~; 14 -1771.55003705 -1.33e-07 * 3.23e-04 2.89e-05 o 9.90e-04 * 8.66e-05 o ~; 15 -1771.55003766 -6.15e-07 * 3.24e-04 2.84e-05 o 2.99e-03 2.58e-04 o ~; 	Raising dynamic level to 2. ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -1771.55003766 -1.77e+03 4.10e-04 6.83e-05 o 1.12e-01 1.18e-02 o ~; 2 -1771.55004087 -3.21e-06 4.24e-04 6.61e-05 o 1.14e-01 1.18e-02 o ~; 3 -1771.55000286 3.80e-05 5.17e-04 1.06e-04 o 1.07e-01 1.18e-02 o ~; 4 -1771.54998378 1.91e-05 8.31e-04 1.67e-04 o 9.19e-02 1.18e-02 o ~; 	Raising dynamic level to 3. ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -1771.54998378 -1.77e+03 4.62e-04 8.08e-05 o 2.48e-02 4.77e-03 o ~; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482748016:2574,Energy,Energy,2574,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482748016,1,['Energy'],['Energy']
Energy Efficiency,.55 sec; Start 399: json-v11-gradient; 384/412 Test #103: decontract ....................... Passed 16.77 sec; Start 397: python-memdfjk; 385/412 Test #381: psi4numpy-cphf ................... Passed 17.48 sec; Start 405: json-schema-1-properties; 386/412 Test #215: mints3 ........................... Passed 17.22 sec; Start 379: mints12; 387/412 Test #384: psi4numpy-rhf-gradient ........... Passed 16.81 sec; Start 388: python-energy; 388/412 Test #355: tu2-ch2-energy ................... Passed 16.29 sec; Start 310: pywrap-molecule; 389/412 Test #399: json-v11-gradient ................ Passed 16.02 sec; Start 383: psi4numpy-rhf; 390/412 Test #401: json-schema-1-ghost .............. Passed 16.97 sec; Start 335: scf3; 391/412 Test #397: python-memdfjk ................... Passed 16.57 sec; Start 217: mints5; 392/412 Test #405: json-schema-1-properties ......... Passed 15.81 sec; Start 212: mcscf3; 393/412 Test #379: mints12 .......................... Passed 16.68 sec; Start 210: mcscf1; 394/412 Test #388: python-energy .................... Passed 15.79 sec; Start 213: mints1; 395/412 Test #310: pywrap-molecule .................. Passed 15.68 sec; Start 410: skeletonscf; 396/412 Test #335: scf3 ............................. Passed 16.05 sec; Start 240: numpy-array-interface; 397/412 Test #383: psi4numpy-rhf .................... Passed 16.60 sec; Start 175: docs-bases; 398/412 Test #217: mints5 ........................... Passed 15.35 sec; Start 216: mints4; 399/412 Test #212: mcscf3 ........................... Passed 15.82 sec; Start 309: pywrap-db3; 400/412 Test #213: mints1 ........................... Passed 14.72 sec; Start 176: docs-dft; 401/412 Test #210: mcscf1 ........................... Passed 15.82 sec; Start 209: matrix1; 402/412 Test #410: skeletonscf ...................... Passed 15.75 sec; Start 365: options1; 403/412 Test #175: docs-bases ....................... Passed 14.47 sec; Start 403: json-schema-1-throws; 404/412 Test #216: mints4 .....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:37010,energy,energy,37010,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,".59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: -4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: -4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.914188 . Alpha Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Beta Occupied: . 1A -0.914188 . Beta Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.85520042768698. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8820241745672806; Two-Electron Energy = 1.0268237468803001; Total Energy = -2.8552004276869805. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000; LUNO+3 : 5 A 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: -5.6000. Electronic Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: 5.5998. Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: -0.0002 Total: 0.0002. Dipole Moment: [D]; X: -0.0000 Y: -0.0000 Z: -0.0005 Total: 0.0005. /home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py:538: FutureWarning: Object arrays will not be saved by default in the future because `allow_pickle` will default to False. You should add `allow_pickle=True` explicitly to elminate this warning.; pickle_kwargs=pickle_kwargs); Traceback (most recent call last):; File ""minimal.py"", line 34, in <module>; scf_e_A, wfnA =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:9497,Energy,Energy,9497,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,.79 sec; Start 85: cepa0-grad1; 309/411 Test #232: mp2p5-grad2 ...................... Passed 1.55 sec; Start 253: omp2p5-1; 310/411 Test #265: opt1 ............................. Passed 2.43 sec; Start 198: freq-isotope2; 311/411 Test #377: pywrap-align-chiral .............. Passed 3.20 sec; Start 118: dfcasscf-fzc-sp; 312/411 Test #314: sad1 ............................. Passed 2.25 sec; Start 384: psi4numpy-rhf-hessian; 313/411 Test #295: psithon1 ......................... Passed 2.85 sec; Start 234: mp3-grad2; 314/411 Test #85: cepa0-grad1 ...................... Passed 1.37 sec; Start 262: omp3-grad1; 315/411 Test #253: omp2p5-1 ......................... Passed 1.96 sec; Start 283: opt-freeze-coords; 316/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.99 sec; Start 343: stability1; 317/411 Test #234: mp3-grad2 ........................ Passed 1.81 sec; Start 236: mpn-bh; 318/411 Test #262: omp3-grad1 ....................... Passed 1.81 sec; Start 399: json-schema-1-energy; 319/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.61 sec; Start 355: tu3-h2o-opt; 320/411 Test #198: freq-isotope2 .................... Passed 3.81 sec; Start 269: opt3; 321/411 Test #343: stability1 ....................... Passed 2.03 sec; Start 121: dfccdl1; 322/411 Test #283: opt-freeze-coords ................ Passed 2.68 sec; Start 311: rasci-h2o; 323/411 Test #399: json-schema-1-energy ............. Passed 1.65 sec; Start 344: dfep2-1; 324/411 Test #355: tu3-h2o-opt ...................... Passed 2.01 sec; Start 351: dft-reference; 325/411 Test #121: dfccdl1 .......................... Passed 1.29 sec; Start 224: molden2; 326/411 Test #311: rasci-h2o ........................ Passed 0.99 sec; Start 225: mom; 327/411 Test #236: mpn-bh ........................... Passed 2.74 sec; Start 397: json-v11-energy; 328/411 Test #269: opt3 ............................. Passed 2.44 sec; Start 231: mp2p5-grad1; 329/411 Test #351: dft-reference .................... Passed 2.84 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:29642,energy,energy,29642,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,".79817e-02 2.00561e-02 ; @DF-RKS iter 2: -76.24994640870842 3.23041e-02 2.57661e-02 DIIS; @DF-RKS iter 3: -76.33537346510494 -8.54271e-02 5.64978e-04 DIIS; @DF-RKS iter 4: -76.33541666733151 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8073,Energy,Energy,8073,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,.87 sec; Start 352: dft-custom; 234/413 Test #293: psimrcc-fd-freq1 ................. Passed 11.67 sec; Start 393: python-mints2; 235/413 Test #317: sapt1 ............................ Passed 18.32 sec; Start 390: python-curve; 236/413 Test #323: sapt-dft-api ..................... Passed 17.88 sec; Start 5: casscf-sa-sp; 237/413 Test #303: pywrap-basis ..................... Passed 13.99 sec; Start 401: json-schema-1-energy; 238/413 Test #367: cubeprop-esp ..................... Passed 9.61 sec; Start 228: mp2-1; 239/413 Test #393: python-mints2 .................... Passed 2.76 sec; Start 219: mints6; 240/413 Test #129: dfccsdt1 ......................... Passed 5.36 sec; Start 392: python-mints9; 241/413 Test #390: python-curve ..................... Passed 4.64 sec; Start 159: dfrasscf-sp; 242/413 Test #368: dft-smoke ........................ Passed 14.37 sec; Start 397: python-mints13; 243/413 Test #220: mints8 ........................... Passed 16.36 sec; Start 400: json-v11-gradient; 244/413 Test #401: json-schema-1-energy ............. Passed 4.15 sec; Start 340: scf7; 245/413 Test #400: json-v11-gradient ................ Passed 1.40 sec; Start 288: props3; 246/413 Test #392: python-mints9 .................... Passed 2.15 sec; Start 272: opt4; 247/413 Test #397: python-mints13 ................... Passed 2.07 sec; Start 126: dfccsdl1; 248/413 Test #268: opt1-fd .......................... Passed 9.74 sec; Start 245: ocepa1; 249/413 Test #171: dft-vv10 ......................... Passed 18.16 sec; Start 287: props2; 250/413 Test #228: mp2-1 ............................ Passed 10.66 sec; Start 14: cbs-xtpl-energy; 251/413 Test #326: sapt8 ............................ Passed 15.55 sec; Start 143: dfomp2-3; 252/413 Test #159: dfrasscf-sp ...................... Passed 9.04 sec; Start 398: python-memdfjk; 253/413 Test #245: ocepa1 ........................... Passed 7.39 sec; Start 163: dft-ghost; 254/413 Test #126: dfccsdl1 ......................... Passed 8.14 sec; Start 89:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:22982,energy,energy,22982,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of abc combinations: 46194526. Computing (T) correction... % complete total time; ```.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:5031,energy,energy,5031,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,".arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4242,Energy,Energy,4242,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['Energy'],['Energy']
Energy Efficiency,".cc.o; boost::python::to_python_value<unsigned long const&>::operator()(unsigned long const&) const in python.cc.o; boost::python::converter::arg_to_python<unsigned long>::arg_to_python(unsigned long const&) in libmints.a(matrix.cc.o); boost::python::converter::arg_to_python<unsigned long>::arg_to_python(unsigned long const&) in libboost_python-1_57.a(class.o); boost::python::converter::arg_to_python<unsigned int>::arg_to_python(unsigned int const&) in libboost_python-1_57.a(function.o); boost::python::converter::arg_to_python<unsigned int>::arg_to_python(unsigned int const&) in libboost_python-1_57.a(enum.o); ...; ""_PyLong_Type"", referenced from:; boost::python::converter::(anonymous namespace)::long_long_rvalue_from_python_base::get_pytype() in libboost_python-1_57.a(builtin_converters.o); ""_PyMem_Free"", referenced from:; boost::python::instance_holder::deallocate(_object*, void*) in libboost_python-1_57.a(class.o); ""_PyMem_Malloc"", referenced from:; boost::python::instance_holder::allocate(_object*, unsigned long, unsigned long) in libboost_python-1_57.a(class.o); ""_PyMethod_New"", referenced from:; boost::python::objects::function_descr_get(_object*, _object*, _object*) in libboost_python-1_57.a(function.o); ""_PyModule_GetDict"", referenced from:; psi::BasisSet::pyconstruct_auxiliary(boost::shared_ptr<psi::Molecule> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) in libmints.a(basisset.cc.o); psi::BasisSet::pyconstruct_combined(boost::shared_ptr<psi::Molecule> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:41829,allocate,allocate,41829,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['allocate'],['allocate']
Energy Efficiency,/411 Test #221: mints9 ........................... Passed 2.01 sec; Start 383: psi4numpy-rhf-gradient; 361/411 Test #405: skeleton ......................... Passed 1.14 sec; Start 222: mints10; 362/411 Test #327: scf-guess-read1 .................. Passed 1.74 sec; Start 403: json-schema-1-gradient; 363/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.44 sec; Start 406: skeletonaointegrals; 364/411 Test #345: dfep2-2 .......................... Passed 1.99 sec; Start 408: skeletonmointegrals; 365/411 Test #160: dft-grac ......................... Passed 1.80 sec; Start 378: mints12; 366/411 Test #333: scf2 ............................. Passed 1.44 sec; Start 220: mints-helper; 367/411 Test #390: python-mints9 .................... Passed 2.15 sec; Start 404: json-schema-1-properties; 368/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.31 sec; Start 398: json-v11-gradient; 369/411 Test #210: mcscf2 ........................... Passed 1.26 sec; Start 353: tu1-h2o-energy; 370/411 Test #395: python-mints13 ................... Passed 2.06 sec; Start 293: psimrcc-pt2; 371/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.04 sec; Start 411: skeletonwavefunction; 372/411 Test #380: psi4numpy-cphf ................... Passed 1.15 sec; Start 214: mints3; 373/411 Test #406: skeletonaointegrals .............. Passed 1.01 sec; Start 188: fci-tdm; 374/411 Test #102: decontract ....................... Passed 1.34 sec; Start 410: skeletonsointegrals; 375/411 Test #222: mints10 .......................... Passed 1.43 sec; Start 400: json-schema-1-ghost; 376/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 334: scf3; 377/411 Test #403: json-schema-1-gradient ........... Passed 1.46 sec; Start 349: sapt-sf1; 378/411 Test #408: skeletonmointegrals .............. Passed 1.35 sec; Start 309: pywrap-molecule; 379/411 Test #220: mints-helper ..................... Passed 1.32 sec; Start 396: python-memdfjk; 380/411 Test #298: pubchem2 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:34784,energy,energy,34784,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['energy'],['energy']
Energy Efficiency,/411 Test #240: ocepa-freq1 ...................... Passed 431.50 sec; Start 389: python-pubchem; 375/411 Test #388: python-curve ..................... Passed 3.42 sec; Start 390: python-mints9; 376/411 Test #375: pywrap-bfs ....................... Passed 25.37 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 1.87 sec; Start 392: python-cc54; 378/411 Test #391: python-mints2 .................... Passed 2.43 sec; Start 393: python-3-index-transforms; 379/411 Test #374: dft-custom-gga ................... Passed 30.91 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.82 sec; Start 396: python-memdfjk; 381/411 Test #178: fsapt1 ........................... Passed 2162.17 sec; Start 397: json-v11-energy; 382/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 398: json-v11-gradient; 383/411 Test #320: sapt6 ............................ Passed 163.49 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 2.11 sec; Start 400: json-schema-1-ghost; 385/411 Test #397: json-v11-energy .................. Passed 3.25 sec; Start 401: json-schema-1-orient; 386/411 Test #400: json-schema-1-ghost .............. Passed 1.15 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.58 sec; Start 403: json-schema-1-gradient; 388/411 Test #393: python-3-index-transforms ........ Passed 10.07 sec; Start 404: json-schema-1-properties; 389/411 Test #399: json-schema-1-energy ............. Passed 3.30 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.63 sec; Start 406: skeletonaointegrals; 391/411 Test #401: json-schema-1-orient ............. Passed 3.44 sec; Start 407: skeletondfmp2; 392/411 Test #404: json-schema-1-properties ......... Passed 1.53 sec; Start 408: skeletonmointegrals; 393/411 Test #405: skeleton ......................... Passed 1.87 sec; Start 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:36011,energy,energy,36011,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,"/Codes/psi4-scftype-bugfix/samples (master)$ diff scftype_bug_example.py scftype_bug_example_edit2.py ; 16c16; < psi4.set_options(dict(basis='sto-3g', reference='RHF')) ; ---; > psi4.set_options(dict(basis='sto-3g', reference='RHF', save_jk=True)) ; 22c22; < psi4.energy(name='scf'); ---; > energy, wfn = psi4.energy(name='scf', return_wfn=True); 25a26; > scf_type2x5 = type(wfn.jk()); 39c40; < print(scf_type1, scf_type2, scf_type3); ---; > print(scf_type1, scf_type2, scf_type2x5, scf_type3); ```. The type of the JK object that is returned is a MemDFJK class, as seen in the following output: `PK PK <class 'psi4.core.MemDFJK'> DF` It seems that the initial call to `psi4.energy` actually uses `SCF_TYPE=DF`. This can be confirmed by commenting out the call to `psi4.core.be_quiet()` in your script and observing the resulting output of the first call:. ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12; ```. It's as if Psi4 is internally using an `SCF_TYPE` of `DF` for the initial calls, even though the returned `SCF_TYPE` from your calls to `get_global_options` is of `PK`. Possibly, the code not converging causes the internal and returned `SCF_TYPE` values to realign, causing the bug you see in your script. But I can't say for sure exactly the cause at the moment, and I am looking into it moreso. . If this is a bug that is actively causing problems within any production runs you are doing, one thing I noticed that resolves the issue is if you explicitly define `SCF_TYPE` in the `psi4.set_options` call:. ```; (p4devcf) dpoole34@ds6:~/Documents/Codes/psi4-scftype-bugfix/samples (master)$ diff scftype_bug_example.py scftype_bug_example_edit2.py ; 16c16; < psi4.set_options(dict(basis='sto-3g', reference='RHF')) ; ---; > psi4.set_options(dict(basis='sto-3g', reference='RHF', scf_type='pk')) ; ```. which gives ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3000#issuecomment-1618885662:1208,Energy,Energy,1208,https://psicode.org,https://github.com/psi4/psi4/issues/3000#issuecomment-1618885662,1,['Energy'],['Energy']
Energy Efficiency,"/github.com/psi4/psi4/blob/master/psi4/src/psi4/cc/ccenergy/energy.cc#L132-L137); > and below) aren't getting stored in psivars. in consequence, CCSD; > SAME-SPIN CORRELATION ENERGY and CCSD OPPOSITE-SPIN CORRELATION ENERGY; > don't sum to CCSD CORRELATION ENERGY.; >; > - for the CC people out there -- speak up if the CCSD analogs of the; > following definitions offend. they're what qcschema is using; > <https://github.com/MolSSI/QCSchema/blob/a4329e626903ec0391d21179f0754bdc65e6831b/qcschema/dev/properties/cc_properties.py#L7-L38>; >; > qcvardefs['MP2 SAME-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from same-spin or triplet doubles correlations.; >; > canonical_corl(os_scale=1, ss_scale=1) = singles + os_scale * (tot_corl - ss_corl) + ss_scale * ss_corl; > :math:`E_{\text{SS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 OPPOSITE-SPIN CORRELATION ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The unscaled portion of the MP2 correlation energy; > from opposite-spin or singlet doubles correlations.; > :math:`E_{\text{OS}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 SINGLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The singles portion of the MP2 correlation energy.; > Zero except in ROHF.; > :math:`E_{\text{S}}` in Eq. :eq:`MP2corl`.; > """"""}; >; > qcvardefs['MP2 DOUBLES ENERGY'] = {; > 'units': 'Eh',; > 'glossary': r""""""; > The doubles portion of the MP2 correlation energy; > including same-spin and opposite-spin correlations.; > :math:`E_{\text{D}}` in Eq. :eq:`MP2corl`.; > """"""}; >; >; > - let us implement storing singles for all three refs in cc* modules; > (only rohf will be nonzero).; > - let us implement storing all three consistently in any other cc codes; > - let us make sure to place these var on wfn, not in P::e.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <http",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517:1419,ENERGY,ENERGY,1419,https://psicode.org,https://github.com/psi4/psi4/issues/1702#issuecomment-522097517,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2428,energy,energy,2428,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['energy'],['energy']
Energy Efficiency,"/procrouting/proc.py:1351: in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule()); ../lib/python3.6/site-packages/psi4/driver/procrouting/empirical_dispersion.py:195: in compute_energy; verbose=1); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. molrec = {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}; name_hint = 'pbeh3c', level_hint = 'd3bj', param_tweaks = {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}; ptype = 'energy'; dashcoeff_supplement = defaultdict(<function <lambda> at 0x7f5e8db768c8>, {'d2': defaultdict(<class 'dict'>, {'definitions': {'opbe-d2': {'ty...0093}, 'citation': ' M. K. Kesharwani, A. Karton, J.M. L. Martin, J. Chem. Theory Comput. 12, 444-454, 2016\n'}}})}); verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:19410,energy,energy,19410,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency,"/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > re",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:7176,energy,energy,7176,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['energy'],['energy']
Energy Efficiency,"/raimis/psi4.git/linux_install/bin/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/""; 401: Test timeout computed to be: 1500; 401: ; 401: *** tstart() called on computer06; 401: *** at Mon Jul 9 14:44:29 2018; 401: ; 401: => Loading Basis Set <=; 401: ; 401: Name: 6-31G; 401: Role: ORBITAL; 401: Keyword: BASIS; 401: atoms 1 entry O line 117 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/6-31g.gbs ; 401: atoms 2-3 entry H line 26 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/6-31g.gbs ; 401: ; 401: ; 401: ---------------------------------------------------------; 401: SCF; 401: by Justin Turney, Rob Parrish, Andy Simmonett; 401: and Daniel Smith; 401: RHF Reference; 401: 1 Threads, 500 MiB Core; 401: ---------------------------------------------------------; 401: ; 401: ==> Geometry <==; 401: ; 401: Molecular point group: c2v; 401: Full point group: C2v; 401: ; 401: Geometry (in Bohr), charge = 0, multiplicity = 1:; 401: ; 401: Center X Y Z Mass ; 401: ------------ ----------------- ----------------- ----------------- -----------------; 401: O 0.000000000000 0.000000000000 -0.129476941194 15.994914619560; 401: H 0.000000000000 -1.494187339480 1.027446507924 1.007825032070; 401: H -0.000000000000 1.494187339480 1.027446507924 1.007825032070; 401: ; 401: Running in c2v symmetry.; 401: ; 401: Rotational constants: A = 25.12553 B = 13.37732 C = 8.72954 [cm^-1]; 401: Rotational constants: A = 753244.47204 B = 401041.84791 C = 261705.04646 [MHz]; 401: Nuclear repulsion = 8.801462060629429; 401: ; 401: Charge = 0; 401: Multiplicity = 1; 401: Electrons = 10; 401: Nalpha = 5; 401: Nbeta = 5; 401: ; 401: ==> Algorithm <==; 401: ; 401: SCF Algorithm Type is DF.; 401: DIIS enabled.; 401: MOM disabled.; 401: Fractional occupation disabled.; 401: Guess Type ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:2199,charge,charge,2199,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['charge'],['charge']
Energy Efficiency,0 ............................. Passed 82.76 sec; Start 114: dcft7; 45/412 Test #159: dfscf-bz2 ........................ Passed 150.09 sec; Start 206: frac-traverse; 46/412 Test #105: dcft-grad2 ....................... Passed 127.51 sec; Start 317: sapt2; 47/412 Test #75: cc5a ............................. Passed 90.07 sec; Start 319: sapt4; 48/412 Test #303: pywrap-cbs1 ...................... Passed 101.68 sec; Start 326: scf-bz2; 49/412 Test #92: cepa-module ...................... Passed 93.25 sec; Start 372: dft-custom-dhdf; 50/412 Test #169: dft1 ............................. Passed 117.29 sec; Start 260: omp3-3; 51/412 Test #348: sapt-dft2 ........................ Passed 139.68 sec; Start 281: opt-irc-1; 52/412 Test #155: dft-grad-lr2 ..................... Passed 121.55 sec; Start 27: cc13b; 53/412 Test #184: isapt2 ........................... Passed 134.41 sec; Start 145: dfomp2-grad2; 54/412 Test #27: cc13b ............................ Passed 69.13 sec; Start 280: opt14; 55/412 Test #194: fd-freq-energy-large ............. Passed 573.09 sec; Start 231: mp2-module; 56/412 Test #145: dfomp2-grad2 ..................... Passed 68.95 sec; Start 17: cbs-xtpl-opt; 57/412 Test #372: dft-custom-dhdf .................. Passed 105.99 sec; Start 76: cc6; 58/412 Test #260: omp3-3 ........................... Passed 88.45 sec; Start 318: sapt3; 59/412 Test #326: scf-bz2 .......................... Passed 141.14 sec; Start 70: cc51; 60/412 Test #182: fsapt-allterms ................... Passed 606.28 sec; Start 320: sapt5; 61/412 Test #281: opt-irc-1 ........................ Passed 101.38 sec; Start 262: omp3-5; 62/412 Test #206: frac-traverse .................... Passed 240.35 sec; Start 293: psimrcc-fd-freq2; 63/412 Test #280: opt14 ............................ Passed 89.39 sec; Start 250: omp2-4; 64/412 Test #76: cc6 .............................. Passed 91.93 sec; Start 193: fd-freq-energy; 65/412 Test #231: mp2-module ....................... Passed 98.50 sec; Start 20: cbs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:5501,energy,energy-large,5501,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy-large']
Energy Efficiency,"0 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'uhf', # Use UHF for open-shell systems; 'scf_type': 'pk',; 'maxiter': 100,; 'e_convergence': 1e-8,; 'd_convergence': 1e-8; }). # Compute SCF energy; energy = psi4.energy('scf'); return energy. def generate_potential_energy_curve():; bond_lengths = np.arange(0.7, 5.02, 0.02); energies = []. for bond_length in bond_lengths:; try:; energy = compute_energy(bond_length); energies.append(energy); print(f""Bond length: {bond_length:.2f}, Energy: {energy:.8f}""); except Exception as e:; print(f""Error at bond length {bond_length}: {e}""); energies.append(float('nan')). return bond_lengths, energies. # Generate potential energy curve; bond_lengths, energies = generate_potential_energy_curve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_0_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='SCF Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_0.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(); ; ,Here's the script I ran for the excited states: ; import numpy as np; import psi4; import matplotlib.pyplot as plt. # Set Psi4 memory; psi4.set_memory('2 GB'). def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVT",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:1605,Energy,Energy,1605,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"0) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enable Flexiblas support from Fedora (#2246) ; ; Bug Fixes ; --------- ; ; - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#1815) ; - Fix to omp call (#1823) ; - Handle very bad linear dependencies (#1844) ; - Fixes to vibrational analysis (#1845) ; - Fix threading in SAPT CPHF (#1849) ; - Fix MP2 handling of 1-electron cases (#1857) ; - Replace seg fault with error in DETCI and DFOCC (#1858, #1861) ; - Fix printing of custom basis sets in banner (#1880) ; - Remove omp_set_nested (#1883) ; - Fix seg fault in CCEnergyWavefunction::rotation() (#1887) ; - Threading fix in ESP potential build (#1900) ; - Proper computation of TDMs from DETCI (#1910) ; - Close DETCI files (#1926) ; - Fix UHF after RHF CCSD gradient crash (#1928) ; - Fix ECPa f-electron combinations (#1930) ; - Keep default_psio_manager alive (#1933) ; - Fix printing of coordinates (#1938) ; - Fixes to Treutler gcc5 (#1945) ; - Fix string setting in options (#1955) ; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:6282,charge,charges,6282,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['charge'],['charges']
Energy Efficiency,0. Running in d2h symmetry.										 Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]			 Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]			 Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000								 Nuclear repulsion = 0.000000000000000. Charge = 0											 Charge = 0; Multiplicity = 1											 Multiplicity = 1; Electrons = 10											 Electrons = 10; Nalpha = 5											 Nalpha = 5; Nbeta = 5											 Nbeta = 5. ==> Algorithm <==											 ==> Algorithm <==. SCF Algorithm Type is DIRECT.										 SCF Algorithm Type is DIRECT.; DIIS enabled.												 DIIS enabled.; MOM disabled.												 MOM disabled.; Fractional occupation disabled.									 Fractional occupation disabled.; Guess Type is CORE.											 Guess Type is CORE.; Energy threshold = 1.00e-06										 Energy threshold = 1.00e-06; Density threshold = 1.00e-05										 Density threshold = 1.00e-05; Integral threshold = 1.00e-12										 Integral threshold = 1.00e-12. ==> Primary Basis <==											 ==> Primary Basis <==. -AO BASIS SET INFORMATION:									 |	 Basis Set: CC-PVDZ; Name = CC-PVDZ								 |	 Blend: CC-PVDZ; Blend = CC-PVDZ								 |	 Number of shells: 6; Total number of shells = 6									 |	 Number of basis function: 14; Number of primitives = 22									 |	 Number of Cartesian functions: 15; Number of AO = 15									 |	 Spherical Harmonics?: true; Number of SO = 14									 |	 Max angular momentum: 2; Maximum AM = 2									 <; Spherical Harmonics = TRUE								 <; 												 <; -Contraction Scheme:										 <; Atom Type All Primitives // Shells:							 <; ------ ------ --------------------------							 <; 1 NE 17s 4p 1d // 3s 2p 1d 							 <. ==> DFT Potential <==											 ==> DFT Potential <==. => Composite Functional: FT97 <= 				,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:3086,Energy,Energy,3086,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes; Total time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:54 2016. ```; *****************************",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7379,Energy,Energy,7379,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,0.0052763771 25237; 6 6 8 -3.9689037023 -0.0002486628 0.0017743273 25192; 7 7 9 -3.9688426840 0.0000610183 0.0009217340 25030; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. **********,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3128,energy,energy,3128,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,"0.05A is definitely sensible for an interpolation of the whole potential energy curve. But for this function, what you want is a region that looks essentially harmonic so that the function can pick out the anharmonicity. Recently, I used 0.005A.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483076180:73,energy,energy,73,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483076180,1,['energy'],['energy']
Energy Efficiency,"0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; MINTS: Wrapper to li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6898,Energy,Energy,6898,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of threads: 1; Number of atoms: 5; Number of AO shells: 37; Num",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:7012,Energy,Energy,7012,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](ht",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1734,energy,energy,1734,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"0.784656 2B1 0.835171 				 |	 4A1 0.223681 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16827,Energy,Energy,16827,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,0.8.3 pyhd8ed1ab_0 conda-forge; expat 2.5.0 hb7217d7_1 conda-forge; fftw 3.3.10 nompi_h2e33b67_103 conda-forge; flask 2.1.3 pyhd8ed1ab_0 conda-forge; flask-jwt-extended 4.5.2 pyhd8ed1ab_0 conda-forge; flit-core 3.7.1 pyhd8ed1ab_0 conda-forge; font-ttf-dejavu-sans-mono 2.37 hab24e00_0 conda-forge; font-ttf-inconsolata 3.000 h77eed37_0 conda-forge; font-ttf-source-code-pro 2.038 h77eed37_0 conda-forge; font-ttf-ubuntu 0.83 hab24e00_0 conda-forge; fontconfig 2.14.2 h82840c6_0 conda-forge; fonts-conda-ecosystem 1 0 conda-forge; fonts-conda-forge 1 0 conda-forge; fonttools 4.33.3 py39h9eb174b_0 conda-forge; freetype 2.12.1 hd633e50_1 conda-forge; frozenlist 1.4.0 py39h0f82c59_1 conda-forge; gau2grid 2.0.7 h1a8c8d9_2 conda-forge; geoip2 4.7.0 pyhd8ed1ab_0 conda-forge; geometric 1.0 pyhd8ed1ab_1 conda-forge; gettext 0.21.1 h0186832_0 conda-forge; gflags 2.2.2 hc88da5d_1004 conda-forge; giflib 5.2.1 h27ca646_2 conda-forge; globus-sdk 3.28.0 pyhd8ed1ab_0 conda-forge; glog 0.6.0 h6da1cb0_0 conda-forge; greenlet 1.1.2 py39h0ef5a74_2 conda-forge; grpc-cpp 1.51.1 h44b9a77_1 conda-forge; gtest 1.14.0 h1995070_1 conda-forge; gunicorn 21.2.0 py39h2804cbe_0 conda-forge; h5py 3.9.0 nompi_py39he9c2634_101 conda-forge; hdf4 4.2.15 h1a38d6a_5 conda-forge; hdf5 1.14.1 nompi_h3aba7b3_100 conda-forge; icu 72.1 he12128b_0 conda-forge; idna 3.3 pyhd8ed1ab_0 conda-forge; importlib-metadata 4.11.2 py39h2804cbe_0 conda-forge; importlib_metadata 4.11.2 hd8ed1ab_0 conda-forge; importlib_resources 5.4.0 pyhd8ed1ab_0 conda-forge; ipykernel 6.9.1 py39h32adebf_0 conda-forge; ipython 8.0.1 py39h2804cbe_2 conda-forge; ipython_genutils 0.2.0 py_1 conda-forge; ipywidgets 7.6.5 pyhd8ed1ab_0 conda-forge; itsdangerous 2.1.2 pyhd8ed1ab_0 conda-forge; jedi 0.18.1 py39h2804cbe_0 conda-forge; jinja2 3.0.3 pyhd8ed1ab_0 conda-forge; joblib 1.3.0 pyhd8ed1ab_1 conda-forge; jpeg 9e h1c322ee_1 conda-forge; jsonschema 4.4.0 pyhd8ed1ab_0 conda-forge; jupyter_client 7.1.2 pyhd8ed1ab_0 conda-forge; jupyter_core 4.9.2 py39,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3062#issuecomment-1767172306:3814,green,greenlet,3814,https://psicode.org,https://github.com/psi4/psi4/issues/3062#issuecomment-1767172306,2,['green'],['greenlet']
Energy Efficiency,0.912851082963 1.007825032230. Running in c2v symmetry.										 Running in c2v symmetry. Rotational constants: A = ************ B = 18.88315 C = 18.88315 [cm^-1]			 Rotational constants: A = ************ B = 18.88315 C = 18.88315 [cm^-1]; Rotational constants: A = ************ B = 566102.67788 C = 566102.67788 [MHz]			 Rotational constants: A = ************ B = 566102.67788 C = 566102.67788 [MHz]; Nuclear repulsion = 4.362688508557055								 Nuclear repulsion = 4.362688508557055. Charge = 0											 Charge = 0; Multiplicity = 2											 Multiplicity = 2; Electrons = 9											 Electrons = 9; Nalpha = 5											 Nalpha = 5; Nbeta = 4											 Nbeta = 4. ==> Algorithm <==											 ==> Algorithm <==. SCF Algorithm Type is PK.										 SCF Algorithm Type is PK.; DIIS enabled.												 DIIS enabled.; MOM disabled.												 MOM disabled.; Fractional occupation disabled.									 Fractional occupation disabled.; Guess Type is SAD.											 Guess Type is SAD.; Energy threshold = 1.00e-06										 Energy threshold = 1.00e-06; Density threshold = 1.00e-06										 Density threshold = 1.00e-06; Integral threshold = 1.00e-12										 Integral threshold = 1.00e-12. ==> Primary Basis <==											 ==> Primary Basis <==. Basis Set: DZ												 Basis Set: DZ; Blend: DZ												 Blend: DZ; Number of shells: 8											 Number of shells: 8; Number of basis functions: 12									 Number of basis functions: 12; Number of Cartesian functions: 12									 Number of Cartesian functions: 12; Spherical Harmonics?: false										 Spherical Harmonics?: false; Max angular momentum: 1										 Max angular momentum: 1. ==> Integral Setup <==										 ==> Integral Setup <==. Using in-core PK algorithm.										 Using in-core PK algorithm.; Calculation information:										 Calculation information:; Number of atoms: 2								 Number of atoms: 2; Number of AO shells: 8								 Number of AO shells: 8; Number of primitives: 18								 Number of primitives: 18; N,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:10541,Energy,Energy,10541,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,00 36.03000000 9.93000000; O 26.68000000 36.87000000 11.09000000; H 25.98000000 36.69000000 11.80000000; C 26.74000000 34.53000000 10.18000000; O 27.89000001 34.37000000 11.02000000; C 28.26999999 33.01000001 11.01000002; O 29.55000001 32.99000000 11.67000002; C 28.63999990 28.50999996 11.68000007; C 28.33000059 29.91000007 12.18999969; O 28.83999937 30.35999995 13.22000030; C 30.62999995 33.35999999 10.78999982; C 31.16000002 34.76999999 11.04999999; O 30.15000000 35.79999999 10.86000001; H 29.24000000 35.45000000 11.16000000; C 32.36999990 35.04000004 10.16000007; N 32.96000011 36.40000001 10.24999989; H 33.43999992 36.60999994 11.11000008; C 31.37999998 30.92000003 10.71999990; O 31.03000002 30.69999997 9.34000003; H 30.25000000 31.26000002 9.07999999; C 31.76000013 32.36999994 11.05000035; O 32.93999984 32.67000007 10.28999985; C 33.39000016 33.98999994 10.58000000; O 34.65999997 34.09000001 9.93000003; C 33.92000000 38.41000000 9.38000000; C 33.23999999 37.07000001 9.14000001; O 33.00000000 36.61999999 8.02000000; H 24.65435416 33.93176259 10.20516873; H 25.34521441 34.27665155 11.81574303; H 25.95348789 31.94064553 9.95017919; H 27.22224423 32.15996591 12.70774349; H 25.55263275 36.16980897 9.44319827; H 27.30964226 36.38871462 9.25057388; H 26.94085586 34.07030274 9.19461993; H 28.41642946 32.70183446 9.95088734; H 27.78322955 28.04516473 11.18381951; H 28.96566529 27.88896763 12.51500357; H 29.46599158 28.57798137 10.96121476; H 30.30437458 33.30673875 9.73855107; H 31.48481262 34.80326610 12.11000048; H 32.10587690 34.89673725 9.10524993; H 32.25831075 30.29233849 10.89465664; H 30.58203658 30.61056845 11.40353474; H 31.99325508 32.41226530 12.13277846; H 33.61480536 34.07507757 11.65938436; H 34.49473784 34.29470961 8.99885832; H 34.70612551 38.54358507 8.63398711; H 34.34077243 38.49556636 10.38550479; H 33.18213475 39.20628980 9.23705282; }. set {; scf_type DF; freeze_core True; basis jun-cc-pVDZ; soscf true; soscf_max_iter 30; }. energy('fisapt0-d3mbj'),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2914#issuecomment-1489094028:7962,energy,energy,7962,https://psicode.org,https://github.com/psi4/psi4/issues/2914#issuecomment-1489094028,2,['energy'],['energy']
Energy Efficiency,"000 GiB by Python script. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:51 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = 1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; B 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 1; Multiplicity = 1; Electrons = 4; Nalpha = 2; Nbeta = 2. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 2 2 2 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (MB): 34332; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set:; Number of shells: 30; Number of ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:3424,Energy,Energy,3424,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,0000 1.703107000; H 3.762882000 -0.842463000 0.783360000; H 4.146010000 0.670138000 -0.091664000; C 2.086723000 2.112200000 0.786974000; H 2.554904000 2.486532000 1.695110000; H 1.033654000 2.388008000 0.788088000. ## H 2.582213000 2.494888000 -0.107984000. -1 1; N 2.550604000 3.185553000 5.509348000; S 3.865000000 2.665127000 4.746515000; O 4.891829000 2.292305000 5.715170000; O 3.642766000 1.773130000 3.581966000; S 1.025248000 3.068609000 4.995638000; O 0.246352000 4.189349000 5.513482000; O 0.836696000 2.658767000 3.587628000; C 0.411145000 1.571382000 5.965005000; F 0.501921000 1.762057000 7.282003000; F -0.875249000 1.329423000 5.650112000; F 1.131303000 0.476913000 5.635681000; C 4.516291000 4.244100000 3.945648000; F 4.803355000 5.175437000 4.855959000; F 5.632032000 3.964007000 3.245064000; F 3.602028000 4.743185000 3.087596000; units angstrom; no_reorient; symmetry c1; }. set globals {; basis cc-pVDZ; scf_type DF; freeze_core True; guess sad ; basis_guess 3-21G; }. energy('sapt2+3-ct'). # This isn't the actual desired job but bowdlerised for testing purposes with resources used:. ```; Resource Usage on 2014-04-15 19:15:49.729365:; JobId: 3541235.r-man2 ; Project: z00 ; Exit Status: 1 (Linux Signal 1); Service Units: 234.73; NCPUs Requested: 4 NCPUs Used: 4; CPU Time Used: 166:41:09; Memory Requested: 10gb Memory Used: 6gb; Vmem Used: 6gb; Walltime requested: 75:00:00 Walltime Used: 58:40:56; jobfs request: 20480mb jobfs used: 14975mb; ```. # . # . ```; Resource Usage on 2014-04-08 04:57:17.482814:; JobId: 3502869.r-man2 ; Project: z00 ; Exit Status: 1 (Linux Signal 1); Service Units: 363.16; NCPUs Requested: 8 NCPUs Used: 8; CPU Time Used: 202:02:19; Memory Requested: 10gb Memory Used: 6gb; Vmem Used: 6gb; Walltime requested: 60:00:00 Walltime Used: 45:23:42; jobfs request: 20480mb jobfs used: 14975mb; ```. # . # . ```; Resource Usage on 2014-02-12 22:00:42.199941:; JobId: 2430324.r-man2 ; Project: z00 ; Exit Status: 0 (Linux Signal 0); Service Units: 511.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/57#issuecomment-42150482:1679,energy,energy,1679,https://psicode.org,https://github.com/psi4/psi4/issues/57#issuecomment-42150482,1,['energy'],['energy']
Energy Efficiency,"0000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). The output file is:. ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Sat Jan 9 01:41:42 2016. Process ID: 17178; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---. #! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule B {; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); B = geometry(""""""; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; """""",""B""); psi4.IO.set_default_namespace(""B""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:51 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Referenc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:1667,Energy,Energy,1667,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,0000000 2.147000000000 0.000000000000; > H -5.888000000000 0.000000000000 0.000000000000; > H -4.649000000000 -2.147000000000 0.000000000000; > H -2.169000000000 -2.147000000000 0.000000000000; > C -0.611000000000 0.000000000000 0.000000000000; > C 0.611000000000 0.000000000000 0.000000000000; > C 2.013000000000 0.000000000000 0.000000000000; > C 4.805000000000 0.000000000000 0.000000000000; > C 4.107000000000 1.209000000000 0.000000000000; > C 2.711000000000 1.209000000000 0.000000000000; > C 2.711000000000 -1.209000000000 0.000000000000; > C 4.107000000000 -1.209000000000 0.000000000000; > H 4.649000000000 2.147000000000 0.000000000000; > H 2.169000000000 2.147000000000 0.000000000000; > H 5.888000000000 0.000000000000 0.000000000000; > H 2.169000000000 -2.147000000000 0.000000000000; > H 4.649000000000 -2.147000000000 0.000000000000; > ```; > ; > Running in c1 symmetry.; > ; > Nuclear repulsion = 697.113178296437809; > ; > Charge = 0; > Multiplicity = 1; > Electrons = 94; > Nalpha = 47; > Nbeta = 47; > ; > ==> Algorithm <==; > ; > SCF Algorithm Type is OUT_OF_CORE.; > DIIS enabled.; > MOM disabled.; > Fractional occupation disabled.; > Guess Type is CORE.; > Energy threshold = 1.00e-08; > Density threshold = 1.00e-10; > Integral threshold = 0.00e+00; > ; > ==> Primary Basis <==; > ; > Basis Set: CC-PVDZ; > Number of shells: 114; > Number of basis function: 246; > Number of Cartesian functions: 260; > Spherical Harmonics?: true; > Max angular momentum: 2; > ; > ## ==> Pre-Iterations <==; > ; > Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; > ; > ---; > ; > A 246 246 0 0 0 0; > ; > ---; > ; > Total 246 246 47 47 47 0; > ; > ---; > ; > Starting with a DF guess...; > ; > OEINTS: Wrapper to libmints.; > by Justin Turney; > ; > Calculation information:; > Number of atoms: 24; > Number of AO shells: 114; > Number of SO shells: 114; > Number of primitives: 358; > Number of atomic orbitals: 260; > Number of basis functions: 246; > ; > Number of irreps: 1; > Number of functions pe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:5947,Charge,Charge,5947,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Charge'],['Charge']
Energy Efficiency,"000041693330 0.00051457 0.00018711 0.00138018 0.00067210 ~; > ; > # 6 -139.557392223903 -0.000000583166 0.00004140 0.00002031 0.00028542 0.00012144 ~; > ; > # 7 -139.557392234146 -0.000000010243 0.00001186 0.00000566 0.00004411 0.00002377 ~; > ; > # 8 -139.557392234594 -0.000000000448 0.00000420 0.00000194 0.00001643 0.00000834 ~; > ; > # 9 -139.557392234645 -0.000000000051 0.00000176 0.00000074 0.00000686 0.00000306 ~; > ; > # 10 -139.557392234661 -0.000000000016 0.00000071 0.00000029 0.00000278 0.00000118 ~; > ; > # --------------------------------------------------------------------------------------------------------------- ~; > ; > # Second system, a not-right by eye but still plausible geometry, oddz; > ; > molecule oddz {; > C; > H 1 1.792; > H 1 1.792 2 59.4; > H 1 1.089 2 136.7 3 -127.3; > F 1 2.089 2 101.7 4 -135.9; > }; > ; > # reference start NRE, E, G for this geometry; > ; > odd_nre_start = 25.7790014493 # Q-Chem; > odd_e_start = -139.1749807824 # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 -0.06704124 0.03019136 0.05220334 -0.00529778 -0.01005568; > ; > # 2 0.09718540 -0.00309814 -0.00309734 -0.00009178 -0.09089814; > ; > # 3 -0.11760428 0.07849561 0.06595344 -0.00926729 -0.01757747; > ; > odd_g_start = psi4.Matrix(5, 3) # Q-Chem; > contents = [ # have to swap x & y, and -x; > [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; > [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; > [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; > odd_g_start.set(zip(*contents)); > odd_rmsg_start = 0.058156; > ; > # optimized reference should be same as norm, but in practice is this; > ; > odd_nre_opt = 33.838291620; > odd_e_opt = -139.301327453; > odd_rmsg_opt = 0.0422103431176; > ; > # should be able to pass starting gradient at new geometry, then zero grad final structure.; > ; > test_odd_start(oddz) # works; > #test_zero_grad(oddz) # should work; > test_badodd_grad(odd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:6797,Energy,Energy,6797,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['Energy'],['Energy']
Energy Efficiency,"0000; > C -0.611000000000 0.000000000000 0.000000000000; > C 0.611000000000 0.000000000000 0.000000000000; > C 2.013000000000 0.000000000000 0.000000000000; > C 4.805000000000 0.000000000000 0.000000000000; > C 4.107000000000 1.209000000000 0.000000000000; > C 2.711000000000 1.209000000000 0.000000000000; > C 2.711000000000 -1.209000000000 0.000000000000; > C 4.107000000000 -1.209000000000 0.000000000000; > H 4.649000000000 2.147000000000 0.000000000000; > H 2.169000000000 2.147000000000 0.000000000000; > H 5.888000000000 0.000000000000 0.000000000000; > H 2.169000000000 -2.147000000000 0.000000000000; > H 4.649000000000 -2.147000000000 0.000000000000; > ```; > ; > Running in c1 symmetry.; > ; > Nuclear repulsion = 697.113178296437809; > ; > Charge = 0; > Multiplicity = 1; > Electrons = 94; > Nalpha = 47; > Nbeta = 47; > ; > ==> Algorithm <==; > ; > SCF Algorithm Type is OUT_OF_CORE.; > DIIS enabled.; > MOM disabled.; > Fractional occupation disabled.; > Guess Type is CORE.; > Energy threshold = 1.00e-08; > Density threshold = 1.00e-10; > Integral threshold = 0.00e+00; > ; > ==> Primary Basis <==; > ; > Basis Set: CC-PVDZ; > Number of shells: 114; > Number of basis function: 246; > Number of Cartesian functions: 260; > Spherical Harmonics?: true; > Max angular momentum: 2; > ; > ## ==> Pre-Iterations <==; > ; > Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; > ; > ---; > ; > A 246 246 0 0 0 0; > ; > ---; > ; > Total 246 246 47 47 47 0; > ; > ---; > ; > Starting with a DF guess...; > ; > OEINTS: Wrapper to libmints.; > by Justin Turney; > ; > Calculation information:; > Number of atoms: 24; > Number of AO shells: 114; > Number of SO shells: 114; > Number of primitives: 358; > Number of atomic orbitals: 260; > Number of basis functions: 246; > ; > Number of irreps: 1; > Number of functions per irrep: [ 246 ]; > ; > Overlap, kinetic, potential, dipole, and quadrupole integrals; > stored in file 35.; > ; > ==> Integral Setup <==; > ; > ==> DFJK: Density-Fitted J/K Matrices <==; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:6187,Energy,Energy,6187,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,"011690 0.2675856897; H 2.5598830790 1.3653350540 1.2191334637; H 3.7797323044 0.8686756761 -0.1473164513; O 0.2438347072 -1.9056148638 -0.2060121504; C 0.8320885079 -2.5403792543 -1.0919639423; H 0.8595694613 -3.6356553416 -1.0100977392; H 1.3206697398 -2.0484988684 -1.9421969377; O -1.8791922233 -0.2566245775 0.3650615858; C -2.7584275448 -0.8529748336 -0.2698070908; H -3.7755662430 -0.8645487186 0.1454969372; H -2.5560836372 -1.3608363821 -1.2216022194; O 0.3412871500 -0.1704234923 1.9001771112; C 0.1535196591 -1.1275424375 2.6628889155; H -0.2550644452 -2.0846684404 2.3157568340; H 0.4129882384 -0.9999393213 3.7228854743; O -0.3368454587 0.1742281826 -1.9024843550; C -0.1497476173 1.1315494494 -2.6651114882; H 0.2578398159 2.0890723954 -2.3179027742; H -0.4087829892 1.0036816776 -3.7251810345; }. set basis pcseg-0; set guess sad; set scf_type direct; set df_scf_guess false; set sad_frac_occ True; set sad_print 1; energy('scf'); ```; Before:; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 0: -1836.62540851841709 -1.83663e+03 0.00000e+00 ; @RHF iter 1: -1806.16373400080829 3.04617e+01 7.51516e-02 ; @RHF iter 2: -1889.51214798645333 -8.33484e+01 6.30863e-02 DIIS; @RHF iter 3: -2033.41188561641252 -1.43900e+02 3.60903e-02 DIIS; @RHF iter 4: -2036.66759146967479 -3.25571e+00 4.23663e-02 DIIS; @RHF iter 5: -2048.93510533018161 -1.22675e+01 2.98439e-02 DIIS; @RHF iter 6: -2050.92989966301730 -1.99479e+00 2.60606e-02 DIIS; @RHF iter 7: -2051.80705061160688 -8.77151e-01 2.38289e-02 DIIS; @RHF iter 8: -2055.69435166472022 -3.88730e+00 1.59572e-02 DIIS; @RHF iter 9: -2058.16614996039289 -2.47180e+00 5.06431e-03 DIIS; @RHF iter 10: -2058.27443720142173 -1.08287e-01 6.38641e-03 DIIS; @RHF iter 11: -2058.44397872764603 -1.69542e-01 5.08460e-03 DIIS; @RHF iter 12: -2058.62669482462434 -1.82716e-01 2.82478e-03 DIIS; @RHF iter 13: -2058.70818041849816 -8.14856e-02 4.77369e-04 DIIS; @RHF iter 14: -2058.71254091207129 -4.36049e-03 2.19998e-04 DIIS; @RHF iter 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309:1300,Energy,Energy,1300,https://psicode.org,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309,1,['Energy'],['Energy']
Energy Efficiency,"01: @DF-RHF iter 3: -75.97992825374592 -6.08698e-03 1.86735e-03 DIIS; 401: @DF-RHF iter 4: -75.98012170651255 -1.93453e-04 4.06200e-04 DIIS; 401: @DF-RHF iter 5: -75.98014095901934 -1.92525e-05 8.89529e-05 DIIS; 401: @DF-RHF iter 6: -75.98014186620988 -9.07191e-07 9.85581e-06 DIIS; 401: @DF-RHF iter 7: -75.98014187224302 -6.03315e-09 1.00607e-06 DIIS; 401: @DF-RHF iter 8: -75.98014187231389 -7.08695e-11 1.20203e-07 DIIS; 401: ; 401: ==> Post-Iterations <==; 401: ; 401: Orbital Energies [Eh]; 401: ---------------------; 401: ; 401: Doubly Occupied: ; 401: ; 401: 1A1 -20.568888 2A1 -1.334711 1B2 -0.686874 ; 401: 3A1 -0.554298 1B1 -0.499284 ; 401: ; 401: Virtual: ; 401: ; 401: 4A1 0.193417 2B2 0.287599 3B2 1.041506 ; 401: 5A1 1.130379 2B1 1.164432 6A1 1.220999 ; 401: 4B2 1.368964 7A1 1.693510 ; 401: ; 401: Final Occupation by Irrep:; 401: A1 A2 B1 B2 ; 401: DOCC [ 3, 0, 1, 1 ]; 401: ; 401: Energy converged.; 401: ; 401: @DF-RHF Final Energy: -75.98014187231389; 401: ; 401: => Energetics <=; 401: ; 401: Nuclear Repulsion Energy = 8.8014620606294294; 401: One-Electron Energy = -122.2750929709242769; 401: Two-Electron Energy = 37.4934890379809431; 401: Total Energy = -75.9801418723139079; 401: ; 401: ; 401: ; 401: Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; 401: ; 401: Properties computed using the HF density matrix; 401: ; 401: Nuclear Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0191; 401: ; 401: Electronic Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401: XX: -1.5309 YY: 1.6335 ZZ: -0.1027; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Mulliken Charges: (a.u.); 401: Center Symbol Alpha Bet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:6431,Energy,Energy,6431,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency,"02 15A -0.050078 ; 16A -0.050072 17A -0.050066 . Virtual: . 18A 0.078304 19A 0.097245 20A 0.097248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6746,Energy,Energy,6746,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"03 DIIS; @RHF iter 4: -76.01722494225463 -4.94330e-04 5.00914e-04 DIIS; @RHF iter 5: -76.01729299826569 -6.80560e-05 1.02319e-04 DIIS; @RHF iter 6: -76.01729647642517 -3.47816e-06 1.57456e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.39 seconds = 0.01 mi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6168,Energy,Energy,6168,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"0341002372407; @Atomic UHF iteration 5 energy: -320.87922264084102 -0.00791118301174 0.00056898557067; @Atomic UHF iteration 6 energy: -320.87957561560631 -0.00035297476529 0.00008011419372; @Atomic UHF iteration 7 energy: -320.87958210143461 -0.00000648582829 0.00000325221580; @Atomic UHF Final Energy for atom XE: -320.87958210143461; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -324.53314738271274 -3.24533e+02 0.00000e+00 ; @DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.00000020668995 0.00000049737307; @Atomic UHF Final Energy for atom XE: -7299.97190876705281; Finished UHF Computatio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:1532,Energy,Energy,1532,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,1,['Energy'],['Energy']
Energy Efficiency,"0395757 -0.003634444122; @IRC 11 -92.852777598444 -0.003517202687; @IRC 12 -92.856140015989 -0.003362417545; @IRC 13 -92.859308223013 -0.003168207024; @IRC 14 -92.862250220465 -0.002941997452; @IRC 15 -92.864943075409 -0.002692854944; @IRC 16 -92.867368006399 -0.002424930990; @IRC 17 -92.869505711996 -0.002137705597; @IRC 18 -92.871329201900 -0.001823489904; @IRC 19 -92.872798961306 -0.001469759406; @IRC 20 -92.873862613736 -0.001063652429; @IRC 21 -92.874464128325 -0.000601514589; @IRC 22 -92.874561860949 -0.000097732624; @IRC 23 -92.874559174537 0.000002686412; @IRC 24 -92.874584188151 -0.000025013614; @IRC 25 -92.874518478044 0.000065710108; @IRC 26 -92.874584083068 -0.000065605025; @IRC 27 -92.874584016106 0.000000066962; @IRC ----------------------------------------------; ```. Compared to the reference from 2017, the first step has an energy difference on the order of 1e-4, and the energy difference remains at or below 1e-4 up to step 22. If I had to guess, this is due to PR #1663, where I fixed an error in the initial displacement for the IRC. At step 22, the geometry is very close to the minimum, so the next step ends up raising the energy. The two IRCs then bounce around, with the reference IRC bouncing in the fourth decimal place and the current IRC bouncing in the fifth. This is enough bounce for the final energies to be outside convergence criteria. Unless somebody has the time and drive to improve the IRC termination cutoff in C-Optking, I recommend changing the reference value for now and investigating this in Py-Optking, whenever that comes out. Meanwhile, I have most of the occ tests fixed locally, but `ocepa-grad2` is proving more difficult. My Psi4Numpy converges with no problems, so the issue probably isn't in the coupled-DIIS approach itself... My current guess is that it's the fact that the ""residuals"" `occ` throws into DIIS aren't the residuals but the residuals divided by the MPPT-like denominators from the standard amplitude update algorithm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226:2182,energy,energy,2182,https://psicode.org,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226,1,['energy'],['energy']
Energy Efficiency,03: dcft-grad1; Start 300: pywrap-all; Start 110: dcft4; Start 162: dft-grad-lr3; Start 45: cc3; Start 227: mp2-def2; Start 178: fsapt1; Start 304: pywrap-checkrun-rhf; Start 306: pywrap-checkrun-uhf; Start 182: isapt1; Start 145: dfomp2-grad3; Start 38: cc23; Start 39: cc24; 1/411 Test #83: cdomp2-1 ......................... Passed 11.78 sec; Start 40: cc25; 2/411 Test #160: dft-grad-lr1 ..................... Passed 17.60 sec; Start 36: cc21; 3/411 Test #227: mp2-def2 ......................... Passed 416.34 sec; Start 240: ocepa-freq1; 4/411 Test #182: isapt1 ........................... Passed 437.25 sec; Start 35: cc2; 5/411 Test #162: dft-grad-lr3 ..................... Passed 438.96 sec; Start 76: cc7; 6/411 Test #38: cc23 ............................. Passed 670.24 sec; Start 18: cbs-xtpl-func; 7/411 Test #36: cc21 ............................. Passed 681.15 sec; Start 181: fsapt-allterms; 8/411 Test #40: cc25 ............................. Passed 702.11 sec; Start 193: fd-freq-energy-large; 9/411 Test #39: cc24 ............................. Passed 728.49 sec; Start 195: fd-freq-gradient-large; 10/411 Test #195: fd-freq-gradient-large ........... Passed 286.40 sec; Start 278: opt13; 11/411 Test #145: dfomp2-grad3 ..................... Passed 1015.18 sec; Start 11: cbs-delta-energy; 12/411 Test #76: cc7 .............................. Passed 587.31 sec; Start 373: dft-custom-mgga; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 1029.41 sec; Start 320: sapt6; 14/411 Test #45: cc3 .............................. Passed 1036.97 sec; Start 111: dcft5; 15/411 Test #240: ocepa-freq1 ...................... Passed 625.43 sec; Start 41: cc26; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1061.37 sec; Start 155: dfscf-bz2; 17/411 Test #35: cc2 .............................. Passed 641.50 sec; Start 42: cc27; 18/411 Test #300: pywrap-all ....................... Passed 1079.44 sec; Start 183: isapt2; 19/411 Test #103: dcft-grad1 ....................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:1175,energy,energy-large,1175,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy-large']
Energy Efficiency,04 sec; Start 391: python-mints9; 349/412 Test #121: dfccd1 ........................... Passed 23.41 sec; Start 8: castup1; 350/412 Test #234: mp3-grad1 ........................ Passed 24.08 sec; Start 408: skeletondfmp2; 351/412 Test #412: skeletonwavefunction ............. Passed 24.24 sec; Start 189: fci-tdm; 352/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 24.24 sec; Start 211: mcscf2; 353/412 Test #161: dft-grac ......................... Passed 24.09 sec; Start 396: python-mints13; 354/412 Test #363: x2c3 ............................. Passed 25.59 sec; Start 350: sapt-sf1; 355/412 Test #357: scf-response1 .................... Passed 25.39 sec; Start 404: json-schema-1-gradient; 356/412 Test #409: skeletonmointegrals .............. Passed 23.56 sec; Start 299: pubchem2; 357/412 Test #334: scf2 ............................. Passed 23.93 sec; Start 407: skeletonaointegrals; 358/412 Test #222: mints9 ........................... Passed 24.90 sec; Start 354: tu1-h2o-energy; 359/412 Test #382: psi4numpy-dfmp2 .................. Passed 24.00 sec; Start 331: scf-bs; 360/412 Test #406: skeleton ......................... Passed 23.35 sec; Start 103: decontract; 361/412 Test #353: stability2 ....................... Passed 23.10 sec; Start 223: mints10; 362/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 23.62 sec; Start 221: mints-helper; 363/412 Test #408: skeletondfmp2 .................... Passed 22.75 sec; Start 411: skeletonsointegrals; 364/412 Test #8: castup1 .......................... Passed 23.16 sec; Start 355: tu2-ch2-energy; 365/412 Test #391: python-mints9 .................... Passed 24.17 sec; Start 381: psi4numpy-cphf; 366/412 Test #189: fci-tdm .......................... Passed 23.11 sec; Start 401: json-schema-1-ghost; 367/412 Test #211: mcscf2 ........................... Passed 23.47 sec; Start 384: psi4numpy-rhf-gradient; 368/412 Test #350: sapt-sf1 ......................... Passed 22.50 sec; Start 397: python-memdfjk; 369/412 Test #39,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:33847,energy,energy,33847,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,"051534118999996 seconds.; Isoleucine energy: -440.38074256935386 Hartrees, time taken: 13.504395359 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.896657411",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2261,energy,energy,2261,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency,"0643364, 0.02754243]]; > norm_g_start.set(zip(*contents)); > norm_rmsg_start = 0.041309 # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; > ; > # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; > ; > # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243; > ; > # reference optimized NRE, E (G should be 0); > ; > nre_opt = 37.5276022922 # Q-Chem; > e_opt = -139.5573922 # Q-Chem; > #norm_g_opt # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; > ; > # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); > compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); > compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(odd_g_start, g0, 3, 'start grad'); > ; > def test_badodd_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(odd_nre_op",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:3015,ENERGY,ENERGY,3015,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['ENERGY'],['ENERGY']
Energy Efficiency,"0:43 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? no; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 0; Number of active occupied orbitals: 17; Number of active virtual orbitals: 56; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 20.82 mb; memory requirements for QCISD(T) = 19.95 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 43.60 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499 0; 11 8 4 -0.2613460628 -0.0000000000 0.0000008461 1; 12 8 5 -0.2613460628 -0.0000000000 0.0000002627 0; 13 8 6 -0.2613460628 -0.0000000000 0.0000000942 1. CISD iterations converged!. CISD variational energy: -0.261346062815; CISD transition energy: -0.261346060539. OS MP2 FNO correction: -0.000000000000; SS MP2 FNO correction: -0.000000000000; MP2 FNO correction: -0.000000000000. OS SCS-MP2 correlation energy: -0.251080593983; SS SC",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:12766,Energy,Energy,12766,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,2,['Energy'],['Energy']
Energy Efficiency,"0D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. print(""\nComparison""); print(""-"" * 40); print(f""ECP + valence {e1: 16.10f}""); print(f""Only valence {e2: 16.10f}""); print(); print(f""Difference {diff: 16.10f}""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760:5226,energy,energy,5226,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2120930760,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"1 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; [Error prints before oeprop]; ```. The other crash I saw was just t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8258,Energy,Energy,8258,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,1 ...................... Passed 19.08 sec; Start 368: dft-smoke; 249/413 Test #102: cubeprop ......................... Passed 10.46 sec; Start 267: opt1; 250/413 Test #298: psithon2 ......................... Passed 19.80 sec; Start 293: psimrcc-fd-freq1; 251/413 Test #129: dfccsdt1 ......................... Passed 13.79 sec; Start 326: sapt8; 252/413 Test #143: dfomp2-3 ......................... Passed 9.83 sec; Start 387: psi4numpy-fci; 253/413 Test #267: opt1 ............................. Passed 6.30 sec; Start 219: mints6; 254/413 Test #245: ocepa1 ........................... Passed 10.75 sec; Start 352: dft-custom; 255/413 Test #387: psi4numpy-fci .................... Passed 6.20 sec; Start 340: scf7; 256/413 Test #303: pywrap-basis ..................... Passed 17.31 sec; Start 411: skeletonscf; 257/413 Test #91: cepa1 ............................ Passed 26.82 sec; Start 367: cubeprop-esp; 258/413 Test #411: skeletonscf ...................... Passed 0.81 sec; Start 14: cbs-xtpl-energy; 259/413 Test #26: cc13a ............................ Passed 588.97 sec; Start 288: props3; 260/413 Test #10: castup3 .......................... Passed 15.65 sec; Start 270: opt2-fd; 261/413 Test #342: soscf-large ...................... Passed 14.42 sec; Start 412: skeletonsointegrals; 262/413 Test #412: skeletonsointegrals .............. Passed 1.81 sec; Start 413: skeletonwavefunction; 263/413 Test #368: dft-smoke ........................ Passed 16.06 sec; Start 359: tu4-h2o-freq; 264/413 Test #413: skeletonwavefunction ............. Passed 1.56 sec; Start 7: casscf-sp; 265/413 Test #326: sapt8 ............................ Passed 15.51 sec; Start 374: dft-custom-hybrid; 266/413 Test #293: psimrcc-fd-freq1 ................. Passed 18.54 sec; Start 337: scf4; 267/413 Test #219: mints6 ........................... Passed 13.03 sec; Start 386: psi4numpy-rhf-hessian; 268/413 Test #367: cubeprop-esp ..................... Passed 9.70 sec; Start 287: props2; 269/413 Test #270: opt2-fd ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:24438,energy,energy,24438,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,1 ......................... Passed 5.36 sec; Start 392: python-mints9; 241/413 Test #390: python-curve ..................... Passed 4.64 sec; Start 159: dfrasscf-sp; 242/413 Test #368: dft-smoke ........................ Passed 14.37 sec; Start 397: python-mints13; 243/413 Test #220: mints8 ........................... Passed 16.36 sec; Start 400: json-v11-gradient; 244/413 Test #401: json-schema-1-energy ............. Passed 4.15 sec; Start 340: scf7; 245/413 Test #400: json-v11-gradient ................ Passed 1.40 sec; Start 288: props3; 246/413 Test #392: python-mints9 .................... Passed 2.15 sec; Start 272: opt4; 247/413 Test #397: python-mints13 ................... Passed 2.07 sec; Start 126: dfccsdl1; 248/413 Test #268: opt1-fd .......................... Passed 9.74 sec; Start 245: ocepa1; 249/413 Test #171: dft-vv10 ......................... Passed 18.16 sec; Start 287: props2; 250/413 Test #228: mp2-1 ............................ Passed 10.66 sec; Start 14: cbs-xtpl-energy; 251/413 Test #326: sapt8 ............................ Passed 15.55 sec; Start 143: dfomp2-3; 252/413 Test #159: dfrasscf-sp ...................... Passed 9.04 sec; Start 398: python-memdfjk; 253/413 Test #245: ocepa1 ........................... Passed 7.39 sec; Start 163: dft-ghost; 254/413 Test #126: dfccsdl1 ......................... Passed 8.14 sec; Start 89: cepa2; 255/413 Test #352: dft-custom ....................... Passed 15.35 sec; Start 370: scf-freq1; 256/413 Test #143: dfomp2-3 ......................... Passed 2.20 sec; Start 3: casscf-fzc-sp; 257/413 Test #342: soscf-large ...................... Passed 16.23 sec; Start 359: tu4-h2o-freq; 258/413 Test #398: python-memdfjk ................... Passed 1.92 sec; Start 389: python-energy; 259/413 Test #5: casscf-sa-sp ..................... Passed 13.87 sec; Start 403: json-schema-1-orient; 260/413 Test #219: mints6 ........................... Passed 13.74 sec; Start 270: opt2-fd; 261/413 Test #272: opt4 ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:23579,energy,energy,23579,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,"1 15Ag 34.149342 . Beta Occupied: . . Beta Virtual: . 1Ag 0.016098 2Ag 0.109076 1B2u 0.211108 ; 1B1u 0.211108 1B3u 0.211108 3Ag 0.385413 ; 2B1u 0.802773 2B2u 0.802773 2B3u 0.802773 ; 4Ag 0.900610 1B3g 0.900610 1B2g 0.900610 ; 1B1g 0.900610 5Ag 0.900610 6Ag 1.071716 ; 3B1u 2.265097 3B3u 2.265097 3B2u 2.265097 ; 7Ag 2.575158 8Ag 2.953058 2B2g 2.953058 ; 2B3g 2.953058 2B1g 2.953058 9Ag 2.953058 ; 4B1u 4.243456 4B3u 4.243456 4B2u 4.243456 ; 5B1u 4.243456 1Au 4.243456 5B3u 4.243456 ; 5B2u 4.243456 10Ag 5.042050 6B3u 5.416218 ; 6B1u 5.416218 6B2u 5.416218 11Ag 8.101653 ; 12Ag 8.311198 3B3g 8.311198 3B2g 8.311198 ; 3B1g 8.311198 13Ag 8.311198 7B3u 11.838258 ; 7B2u 11.838258 7B1u 11.838258 14Ag 14.727369 ; 15Ag 34.174361 . Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]. @UHF Final Energy: -0.49999200764259. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -0.4999920076425929; Two-Electron Energy = 0.0000000000000002; Total Energy = -0.4999920076425927. UHF NO Occupations:; HONO-0 : 1 Ag 1.0000000; LUNO+0 : 2 Ag 0.0000000; LUNO+1 : 3 Ag 0.0000000; LUNO+2 : 4 Ag 0.0000000; LUNO+3 : 5 Ag 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on psinet at Mon Apr 29 11:26:27 2019; Module time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes. Psi4 stopped on: Monday, 29 April 2019 11:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168:7673,Energy,Energy,7673,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168,1,['Energy'],['Energy']
Energy Efficiency,"1 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16879,Energy,Energy,16879,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,1 Test #161: dft-grad2 ........................ Passed 9.38 sec; Start 9: castup2; 172/401 Test #317: sapt-dft-api ..................... Passed 10.34 sec; Start 355: x2c1; 173/401 Test #155: dft-b2plyp ....................... Passed 9.72 sec; Start 134: dfmp2-grad2; 174/401 Test #266: opt4 ............................. Passed 10.94 sec; Start 127: dfccsdat1; 175/401 Test #215: mints-benchmark .................. Passed 10.11 sec; Start 281: props2; 176/401 Test #43: cc28 ............................. Passed 87.39 sec; Start 262: opt1-fd; 177/401 Test #10: castup3 .......................... Passed 16.89 sec; Start 337: soscf-ref; 178/401 Test #51: cc35 ............................. Passed 39.48 sec; Start 196: fnocc2; 179/401 Test #298: pywrap-cbs1 ...................... Passed 233.12 sec; Start 52: cc36; 180/401 Test #131: dfmp2-4 .......................... Passed 12.91 sec; Start 165: dft-vv10; 181/401 Test #281: props2 ........................... Passed 7.95 sec; Start 188: fd-freq-energy; 182/401 Test #49: cc33 ............................. Passed 34.26 sec; Start 62: cc45; 183/401 Test #193: freq-isotope1 .................... Passed 19.32 sec; Start 53: cc37; 184/401 Test #134: dfmp2-grad2 ...................... Passed 12.50 sec; Start 56: cc4; 185/401 Test #9: castup2 .......................... Passed 13.85 sec; Start 364: dft-jk; 186/401 Test #89: cepa1 ............................ Passed 26.08 sec; Start 203: gibbs; 187/401 Test #50: cc34 ............................. Passed 26.89 sec; Start 76: cc8; 188/401 Test #262: opt1-fd .......................... Passed 12.30 sec; Start 91: ci-multi; 189/401 Test #102: dcft-grad1 ....................... Passed 884.24 sec; Start 214: mints8; 190/401 Test #337: soscf-ref ........................ Passed 10.01 sec; Start 83: cdomp2-2; 191/401 Test #99: ci-property ...................... Passed 29.65 sec; Start 167: dft2; 192/401 Test #364: dft-jk ........................... Passed 6.91 sec; Start 389: python-cc54; 193/401 Te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:17417,energy,energy,17417,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,1 Test #388: python-curve ..................... Passed 3.42 sec; Start 390: python-mints9; 376/411 Test #375: pywrap-bfs ....................... Passed 25.37 sec; Start 391: python-mints2; 377/411 Test #390: python-mints9 .................... Passed 1.87 sec; Start 392: python-cc54; 378/411 Test #391: python-mints2 .................... Passed 2.43 sec; Start 393: python-3-index-transforms; 379/411 Test #374: dft-custom-gga ................... Passed 30.91 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.82 sec; Start 396: python-memdfjk; 381/411 Test #178: fsapt1 ........................... Passed 2162.17 sec; Start 397: json-v11-energy; 382/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 398: json-v11-gradient; 383/411 Test #320: sapt6 ............................ Passed 163.49 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 2.11 sec; Start 400: json-schema-1-ghost; 385/411 Test #397: json-v11-energy .................. Passed 3.25 sec; Start 401: json-schema-1-orient; 386/411 Test #400: json-schema-1-ghost .............. Passed 1.15 sec; Start 402: json-schema-1-throws; 387/411 Test #402: json-schema-1-throws ............. Passed 0.58 sec; Start 403: json-schema-1-gradient; 388/411 Test #393: python-3-index-transforms ........ Passed 10.07 sec; Start 404: json-schema-1-properties; 389/411 Test #399: json-schema-1-energy ............. Passed 3.30 sec; Start 405: skeleton; 390/411 Test #403: json-schema-1-gradient ........... Passed 1.63 sec; Start 406: skeletonaointegrals; 391/411 Test #401: json-schema-1-orient ............. Passed 3.44 sec; Start 407: skeletondfmp2; 392/411 Test #404: json-schema-1-properties ......... Passed 1.53 sec; Start 408: skeletonmointegrals; 393/411 Test #405: skeleton ......................... Passed 1.87 sec; Start 409: skeletonscf; 394/411 Test #406: skeletonaointegrals .............. Passed 1.86 sec; Start 410: ske,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:36150,energy,energy,36150,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['energy'],['energy']
Energy Efficiency,1 Test #3: casscf-fzc-sp .................... Passed 6.14 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 2.45 sec; Start 5: casscf-sa-sp; 12/411 Test #2: adc2 ............................. Passed 46.87 sec; Start 6: ao-casscf-sp; 13/411 Test #394: python-vibanalysis ............... Passed 861.59 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 13.43 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #10: castup3 .......................... Passed 9.55 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 15.41 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 9.22 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #12: cbs-parser ....................... Passed 34.00 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 27.35 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #278: opt13 ............................ Passed 937.76 sec; Start 20: cc1; 26/411 Test #11: cbs-delta-energy ................. Passed 87.39 sec; Start 21: cc10; 27/411 Test #20: cc1 .............................. Passed 39.26 sec; Start 22: cc11; 28/411 Test #21: cc10 ............................. Passed 16.76 sec; Start 23: cc12; 29/411 Test #316: sapt2 ............................ Passed 390.55 sec; Start 24: cc13; 30/411 Test #17: cbs-xtpl-opt ..................... Passed 79.98 sec; Start 26: cc13b; 31/411 Test #19: cbs-xtpl-wrapper ................. Passed 69.43 sec; Start 27: cc13c; 32/411 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:2137,energy,energy,2137,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,2,['energy'],['energy']
Energy Efficiency,"1. I got this idea when talking to a graduate student who works on orbital solvers the other week. I can do a quick search for anything more ""standard,"" but I'm not expecting it to find anything.; 2. The energy tolerance is problematic in practice. A lot of the instabilities that I've seen are related to ghost atoms involving SAPT, which are prone to very small instabilities.; 3. I don't understand why your procedure is easier to implement. The fourth order could be tricky, but the third order is trivial. We have the first zero, first, and second order terms analytically from the original instability analysis, and we can fit the third order from the ""new SCF energy"" by a simple algebraic expression. Finding the stationary points is equivalent to factoring f'(x), and we already know (x-0) is one of the roots. It's an easy problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045#issuecomment-1706844926:204,energy,energy,204,https://psicode.org,https://github.com/psi4/psi4/issues/3045#issuecomment-1706844926,4,['energy'],['energy']
Energy Efficiency,"1. The key phrase here is _would give us_. The capabilities aren't there yet. This is GauXC. I know this was a feature they desired, but I don't know how close it is to being complete. My guess is that things are, as always, not going as optimistically as they would like.; 2. Psi4 1.9.1 should not raise this error. You're saying that the input; ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check', 'basis_guess': 'true'}); mol = psi4.geometry(""""""; symmetry c1; 0 3; O; """""");; psi4.energy('PBE/6-31G', molecule=mol); ```; gave you `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`? Can you double-check and post the output file?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042:517,energy,energy,517,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444511042,1,['energy'],['energy']
Energy Efficiency,"1.3168830446 2.0526980984 1.9398449453; O 1.8833370122 0.2604289828 -0.3671820680; C 2.7624309688 0.8571011690 0.2675856897; H 2.5598830790 1.3653350540 1.2191334637; H 3.7797323044 0.8686756761 -0.1473164513; O 0.2438347072 -1.9056148638 -0.2060121504; C 0.8320885079 -2.5403792543 -1.0919639423; H 0.8595694613 -3.6356553416 -1.0100977392; H 1.3206697398 -2.0484988684 -1.9421969377; O -1.8791922233 -0.2566245775 0.3650615858; C -2.7584275448 -0.8529748336 -0.2698070908; H -3.7755662430 -0.8645487186 0.1454969372; H -2.5560836372 -1.3608363821 -1.2216022194; O 0.3412871500 -0.1704234923 1.9001771112; C 0.1535196591 -1.1275424375 2.6628889155; H -0.2550644452 -2.0846684404 2.3157568340; H 0.4129882384 -0.9999393213 3.7228854743; O -0.3368454587 0.1742281826 -1.9024843550; C -0.1497476173 1.1315494494 -2.6651114882; H 0.2578398159 2.0890723954 -2.3179027742; H -0.4087829892 1.0036816776 -3.7251810345; }. set basis pcseg-0; set guess sad; set scf_type direct; set df_scf_guess false; set sad_frac_occ True; set sad_print 1; energy('scf'); ```; Before:; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 0: -1836.62540851841709 -1.83663e+03 0.00000e+00 ; @RHF iter 1: -1806.16373400080829 3.04617e+01 7.51516e-02 ; @RHF iter 2: -1889.51214798645333 -8.33484e+01 6.30863e-02 DIIS; @RHF iter 3: -2033.41188561641252 -1.43900e+02 3.60903e-02 DIIS; @RHF iter 4: -2036.66759146967479 -3.25571e+00 4.23663e-02 DIIS; @RHF iter 5: -2048.93510533018161 -1.22675e+01 2.98439e-02 DIIS; @RHF iter 6: -2050.92989966301730 -1.99479e+00 2.60606e-02 DIIS; @RHF iter 7: -2051.80705061160688 -8.77151e-01 2.38289e-02 DIIS; @RHF iter 8: -2055.69435166472022 -3.88730e+00 1.59572e-02 DIIS; @RHF iter 9: -2058.16614996039289 -2.47180e+00 5.06431e-03 DIIS; @RHF iter 10: -2058.27443720142173 -1.08287e-01 6.38641e-03 DIIS; @RHF iter 11: -2058.44397872764603 -1.69542e-01 5.08460e-03 DIIS; @RHF iter 12: -2058.62669482462434 -1.82716e-01 2.82478e-03 DIIS; @RHF iter 13: -2058.70818041849816 -8.14",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309:1240,energy,energy,1240,https://psicode.org,https://github.com/psi4/psi4/pull/1451#issuecomment-450756309,1,['energy'],['energy']
Energy Efficiency,"10 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]										 Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.8555						 X: 0.0000 Y: 0.0000 Z: 0.8555. Electronic Dip",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:17104,Energy,Energy,17104,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,105: dcft-grad2 ....................... Passed 35.94 sec; Start 318: sapt3; 51/412 Test #75: cc5a ............................. Passed 65.55 sec; Start 281: opt-irc-1; 52/412 Test #303: pywrap-cbs1 ...................... Passed 57.75 sec; Start 47: cc30; 53/412 Test #372: dft-custom-dhdf .................. Passed 102.93 sec; Start 92: cepa-module; 54/412 Test #182: fsapt-allterms ................... Passed 579.58 sec; Start 320: sapt5; 55/412 Test #280: opt14 ............................ Passed 94.37 sec; Start 70: cc51; 56/412 Test #194: fd-freq-energy-large ............. Passed 545.92 sec; Start 76: cc6; 57/412 Test #318: sapt3 ............................ Passed 99.92 sec; Start 293: psimrcc-fd-freq2; 58/412 Test #47: cc30 ............................. Passed 48.45 sec; Start 205: frac-ip-fitting; 59/412 Test #326: scf-bz2 .......................... Passed 165.53 sec; Start 168: dft-b3lyp; 60/412 Test #92: cepa-module ...................... Passed 64.56 sec; Start 193: fd-freq-energy; 61/412 Test #281: opt-irc-1 ........................ Passed 86.58 sec; Start 231: mp2-module; 62/412 Test #320: sapt5 ............................ Passed 93.23 sec; Start 17: cbs-xtpl-opt; 63/412 Test #76: cc6 .............................. Passed 75.78 sec; Start 20: cbs-xtpl-wrapper; 64/412 Test #70: cc51 ............................. Passed 87.01 sec; Start 260: omp3-3; 65/412 Test #205: frac-ip-fitting .................. Passed 76.46 sec; Start 390: python-pubchem; 66/412 Test #206: frac-traverse .................... Passed 244.37 sec; Start 62: cc44; 67/412 Test #293: psimrcc-fd-freq2 ................. Passed 85.30 sec; Start 261: omp3-4; 68/412 Test #193: fd-freq-energy ................... Passed 63.85 sec; Start 116: dcft9; 69/412 Test #168: dft-b3lyp ........................ Passed 82.97 sec; Start 298: pubchem1; 70/412 Test #26: cc13a ............................ Passed 316.11 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 82.21 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:6019,energy,energy,6019,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,"1066 							 |	 1B1 -0.647734 1B2 -0.561066 . Alpha Virtual: 				 Alpha Virtual: . 4A1 0.223681 2B2 0.784656 2B1 0.835171 				 |	 4A1 0.223681 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16735,Energy,Energy,16735,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,"10807957900 0.000000000103; > C -1.260557226131 1.493619582118 -0.000000000155; > C -0.000034659568 0.759625960521 -0.000000000159; > C -0.000034625713 -0.759624178218 -0.000000000042; > H -5.916030845275 -1.282197811131 -0.000000001395; > H -5.916031258658 1.282196125448 -0.000000001329; > H -3.903819438194 2.368212991154 -0.000000000840; > H -3.903818961364 -2.368213684326 -0.000000000900; > H -3.380202809742 -3.532377155298 0.000000000843; > H -3.323483157889 -5.783256218484 0.000000001017; > H -1.123533880262 -7.010678898257 0.000000000718; > H 1.123569529821 -7.010687056820 0.000000000512; > H 3.323444251476 -5.783425057171 0.000000000238; > H 3.380590817837 -3.532764155114 0.000000000007; > H 3.903306158089 -2.368093837703 -0.000000000251; > H 5.915904268397 -1.282153443029 -0.000000000487; > H 5.915904332310 1.282151831717 -0.000000000600; > H 3.903306767856 2.368091938384 -0.000000000491; > H 3.380592041773 3.532764158212 -0.000000000516; > H 3.323445571900 5.783426049843 -0.000000000059; > H 1.123570392243 7.010688579024 0.000000000716; > H -1.123534819764 7.010680587949 0.000000001092; > H -3.323484052934 5.783257818228 0.000000001355; > H -3.380204830685 3.532377523087 0.000000001020; > }; > set basis 6-31g; > set reference rhf; > set scf_type DIRECT; > set e_convergence 1e-10; > set d_convergence 1e-8; > set ints_tolerance 0.0; > ; > set dmrg_irrep 0; > set dmrg_multiplicity 1; > set restricted_docc [105,0]; > set active [0,38]; > ; > set dmrg_sweep_states [200, 400, 600, 800]; > set dmrg_sweep_energy_conv [1e-6, 1e-6, 1e-8, 1e-10]; > set dmrg_sweep_dvdson_rtol [1e-5, 1e-5, 1e-5, 1e-8]; > set dmrg_sweep_max_sweeps [10, 10, 8, 6]; > set dmrg_sweep_noise_prefac [0.05, 0.05, 0.05, 0.0]; > set dmrg_scf_active_space loc; > set dmrg_scf_max_iter 100; > set dmrg_mps_write true; > ; > energy(""dmrg-ci""). I believe this might be a memory issue because this exact input file but with the sto-3g basis runs as expected, ""upgrading"" the basis set introduces this error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2102#issuecomment-772517025:3668,energy,energy,3668,https://psicode.org,https://github.com/psi4/psi4/issues/2102#issuecomment-772517025,1,['energy'],['energy']
Energy Efficiency,11 Test #62: cc45 ............................. Passed 4.96 sec; Start 53: cc37; 209/411 Test #7: casscf-sp ........................ Passed 7.89 sec; Start 164: dft-grad1; 210/411 Test #301: pywrap-basis ..................... Passed 13.12 sec; Start 338: scf7; 211/411 Test #53: cc37 ............................. Passed 3.24 sec; Start 89: cepa3; 212/411 Test #218: mints8 ........................... Passed 15.41 sec; Start 14: cbs-xtpl-energy; 213/411 Test #22: cc11 ............................. Passed 6.65 sec; Start 366: dft-smoke; 214/411 Test #148: dfomp3-grad1 ..................... Passed 9.29 sec; Start 324: sapt8; 215/411 Test #286: props3 ........................... Passed 12.45 sec; Start 5: casscf-sa-sp; 216/411 Test #338: scf7 ............................. Passed 11.10 sec; Start 357: tu4-h2o-freq; 217/411 Test #89: cepa3 ............................ Passed 8.51 sec; Start 21: cc10; 218/411 Test #164: dft-grad1 ........................ Passed 14.27 sec; Start 275: opt9; 219/411 Test #14: cbs-xtpl-energy .................. Passed 10.47 sec; Start 254: omp2p5-2; 220/411 Test #21: cc10 ............................. Passed 5.53 sec; Start 52: cc36; 221/411 Test #366: dft-smoke ........................ Passed 13.99 sec; Start 133: dfmp2-ecp; 222/411 Test #5: casscf-sa-sp ..................... Passed 9.71 sec; Start 83: cdomp2-1; 223/411 Test #357: tu4-h2o-freq ..................... Passed 9.81 sec; Start 217: mints6; 224/411 Test #254: omp2p5-2 ......................... Passed 6.93 sec; Start 123: dfccsd1; 225/411 Test #324: sapt8 ............................ Passed 13.00 sec; Start 128: dfccsdat1; 226/411 Test #52: cc36 ............................. Passed 6.60 sec; Start 368: scf-freq1; 227/411 Test #83: cdomp2-1 ......................... Passed 5.08 sec; Start 285: props2; 228/411 Test #123: dfccsd1 .......................... Passed 3.47 sec; Start 176: extern1; 229/411 Test #128: dfccsdat1 ........................ Passed 4.01 sec; Start 248: omp2-3; 230/411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:20418,energy,energy,20418,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,"110068 2B1u -0.075684 2B2u -0.075684; 2B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes; Total time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7311,Energy,Energy,7311,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,12 Test #282: opt-irc-2 ........................ Passed 152.10 sec; Start 168: dft-b3lyp; 47/412 Test #372: dft-custom-dhdf .................. Passed 93.71 sec; Start 320: sapt5; 48/412 Test #71: cc52 ............................. Passed 107.19 sec; Start 293: psimrcc-fd-freq2; 49/412 Test #280: opt14 ............................ Passed 84.19 sec; Start 48: cc31; 50/412 Test #318: sapt3 ............................ Passed 85.71 sec; Start 281: opt-irc-1; 51/412 Test #29: cc13d ............................ Passed 96.43 sec; Start 28: cc13c; 52/412 Test #26: cc13a ............................ Passed 337.24 sec; Start 205: frac-ip-fitting; 53/412 Test #387: cookbook-rohf-orb-rot ............ Passed 106.36 sec; Start 32: cc16; 54/412 Test #70: cc51 ............................. Passed 74.18 sec; Start 116: dcft9; 55/412 Test #114: dcft7 ............................ Passed 326.42 sec; Start 76: cc6; 56/412 Test #168: dft-b3lyp ........................ Passed 73.09 sec; Start 75: cc5a; 57/412 Test #11: cbs-delta-energy ................. Passed 115.53 sec; Start 92: cepa-module; 58/412 Test #18: cbs-xtpl-func .................... Passed 1080.73 sec; Start 31: cc15; 59/412 Test #279: opt13 ............................ Passed 828.21 sec; Start 17: cbs-xtpl-opt; 60/412 Test #320: sapt5 ............................ Passed 79.38 sec; Start 27: cc13b; 61/412 Test #293: psimrcc-fd-freq2 ................. Passed 75.55 sec; Start 62: cc44; 62/412 Test #205: frac-ip-fitting .................. Passed 68.55 sec; Start 157: dfomp2p5-grad2; 63/412 Test #28: cc13c ............................ Passed 80.48 sec; Start 298: pubchem1; 64/412 Test #281: opt-irc-1 ........................ Passed 92.68 sec; Start 251: omp2-5; 65/412 Test #116: dcft9 ............................ Passed 80.09 sec; Start 20: cbs-xtpl-wrapper; 66/412 Test #31: cc15 ............................. Passed 63.11 sec; Start 390: python-pubchem; 67/412 Test #317: sapt2 ............................ Passed 375.81 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:5670,energy,energy,5670,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,"12e-01 DIIS; @RKS iter 3: -128.75874780675335 -4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE...........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:27 2018. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7511,Energy,Energy,7511,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"13167 -59.89153181536454 0.01619483472434; @Atomic UHF iteration 4 energy: -320.87131145782928 -0.27613414969761 0.00341002372407; @Atomic UHF iteration 5 energy: -320.87922264084102 -0.00791118301174 0.00056898557067; @Atomic UHF iteration 6 energy: -320.87957561560631 -0.00035297476529 0.00008011419372; @Atomic UHF iteration 7 energy: -320.87958210143461 -0.00000648582829 0.00000325221580; @Atomic UHF Final Energy for atom XE: -320.87958210143461; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -324.53314738271274 -3.24533e+02 0.00000e+00 ; @DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:1426,Energy,Energy,1426,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,1,['Energy'],['Energy']
Energy Efficiency,"13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0; 11 8 4 -0.2003286173 -0.0000000000 0.0000000230 0. CISD iterations converged!. CISD variational energy: -0.200328617292; CISD transition energy: -0.200328617850. OS SCS-MP2 correlation energy: -0.179813193864; SS SCS-MP2 correlation energy: -0.016670275217; SCS-MP2 correlation energy: -0.196483469081; * SCS-MP2 total energy: -76.213780024364. OS MP2 correlation energy: -0.149844328220; SS MP2 correlation energy: -0.050010825651; M",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:10821,Energy,Energy,10821,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,2,['Energy'],['Energy']
Energy Efficiency,14 ............................ Passed 86.25 sec; Start 250: omp2-4; 69/412 Test #81: cc8c ............................. Passed 32.21 sec; Start 62: cc44; 70/412 Test #116: dcft9 ............................ Passed 93.34 sec; Start 264: omp3-grad2; 71/412 Test #320: sapt5 ............................ Passed 76.19 sec; Start 205: frac-ip-fitting; 72/412 Test #206: frac-traverse .................... Passed 235.67 sec; Start 390: python-pubchem; 73/412 Test #145: dfomp2-grad2 ..................... Passed 55.39 sec; Start 168: dft-b3lyp; 74/412 Test #318: sapt3 ............................ Passed 82.32 sec; Start 2: adc2; 75/412 Test #261: omp3-4 ........................... Passed 72.66 sec; Start 150: dfomp3-grad2; 76/412 Test #231: mp2-module ....................... Passed 90.49 sec; Start 20: cbs-xtpl-wrapper; 77/412 Test #293: psimrcc-fd-freq2 ................. Passed 81.12 sec; Start 58: cc40; 78/412 Test #250: omp2-4 ........................... Passed 69.17 sec; Start 11: cbs-delta-energy; 79/412 Test #62: cc44 ............................. Passed 72.21 sec; Start 82: cc9; 80/412 Test #264: omp3-grad2 ....................... Passed 71.27 sec; Start 69: cc50; 81/412 Test #390: python-pubchem ................... Passed 64.71 sec; Start 57: cc4; 82/412 Test #2: adc2 ............................. Passed 46.23 sec; Start 245: ocepa2; 83/412 Test #205: frac-ip-fitting .................. Passed 73.37 sec; Start 251: omp2-5; 84/412 Test #168: dft-b3lyp ........................ Passed 68.76 sec; Start 78: cc8; 85/412 Test #17: cbs-xtpl-opt ..................... Passed 104.86 sec; Start 193: fd-freq-energy; 86/412 Test #150: dfomp3-grad2 ..................... Passed 85.43 sec; Start 298: pubchem1; 87/412 Test #20: cbs-xtpl-wrapper ................. Passed 80.35 sec; Start 80: cc8b; 88/412 Test #317: sapt2 ............................ Passed 352.05 sec; Start 243: ocepa-grad2; 89/412 Test #58: cc40 ............................. Passed 75.15 sec; Start 60: cc42; 90/412 Test #8,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:7655,energy,energy,7655,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,"14.51158717592830 -1.15826e+01 1.03141e-02 ADIIS/DIIS; @DF-UKS iter 8: -1616.83699931720344 -2.32541e+00 6.19589e-03 ADIIS/DIIS; @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ; @DF-UKS iter 1: -1609.10793037762460 8.61725e+00 1.56461e-02 ADIIS/DIIS; @DF-UKS iter 2: -1513.75875168526773 9.53492e+01 2.55145e-02 ADIIS/DIIS; @DF-UKS iter 3: -1593.19511863655589 -7.94364e+01 2.00404e-02 ADIIS/DIIS; @DF-UKS iter 4: -1609.55961522174721 -1.63645e+01 1.54082e-02 ADIIS/DIIS; @DF-UKS iter 5: -1608.66721055388211 8.92405e-01 1.58428e-02 ADIIS/DIIS; @DF-UKS iter 6: -1606.15983763646909 2.50737e+00 1.65518e-02 ADIIS/DIIS; @DF-UKS iter 7: -1609.08727763024035 -2.92744e+00 1.55973e-02 ADIIS/DIIS; @DF-UKS iter 8: -1609.36600587362682 -2.78728e-01 1.55155e-02 ADIIS/DIIS; @DF-UKS iter 9: -1609.42810677829789 -6.21009e-02 1.54740e-02 ADIIS/DIIS; @DF-UKS iter 10: -1609.36720577250594 6.09010e-02 1.54956e-02 ADIIS/DIIS; @DF-UKS iter 11: -1609.31568466585577 5.15211e-02 1.5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:1782,Energy,Energy,1782,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473,1,['Energy'],['Energy']
Energy Efficiency,"160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15306,Energy,Energy,15306,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,17 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3298,energy,energy,3298,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,17/411 Test #3: casscf-fzc-sp .................... Passed 2.66 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.72 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.18 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.12 sec; Start 7: casscf-sp; 21/411 Test #7: casscf-sp ........................ Passed 6.39 sec; Start 8: castup1; 22/411 Test #8: castup1 .......................... Passed 1.55 sec; Start 9: castup2; 23/411 Test #9: castup2 .......................... Passed 3.53 sec; Start 10: castup3; 24/411 Test #10: castup3 .......................... Passed 3.78 sec; Start 11: cbs-delta-energy; 25/411 Test #11: cbs-delta-energy ................. Passed 23.24 sec; Start 12: cbs-parser; 26/411 Test #12: cbs-parser ....................... Passed 12.37 sec; Start 13: cbs-xtpl-alpha; 27/411 Test #13: cbs-xtpl-alpha ................... Passed 59.71 sec; Start 14: cbs-xtpl-energy; 28/411 Test #14: cbs-xtpl-energy .................. Passed 8.36 sec; Start 15: cbs-xtpl-freq; 29/411 Test #15: cbs-xtpl-freq .................... Passed 5.43 sec; Start 16: cbs-xtpl-gradient; 30/411 Test #16: cbs-xtpl-gradient ................ Passed 12.13 sec; Start 17: cbs-xtpl-opt; 31/411 Test #17: cbs-xtpl-opt ..................... Passed 32.38 sec; Start 19: cbs-xtpl-wrapper; 32/411 Test #19: cbs-xtpl-wrapper ................. Passed 37.42 sec; Start 20: cc1; 33/411 Test #20: cc1 .............................. Passed 6.42 sec; Start 21: cc10; 34/411 Test #21: cc10 ............................. Passed 3.59 sec; Start 22: cc11; 35/411 Test #22: cc11 ............................. Passed 3.22 sec; Start 23: cc12; 36/411 Test #23: cc12 ............................. Passed 3.59 sec; Start 24: cc13; 37/411 Test #24: cc13 ............................. Passed 18.49 sec; Start 26: cc13b; 38/411 Test #26: cc13b ............................ Passed 7.05 sec; Start 27: cc13c; 39/411 Test #27: c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:2603,energy,energy,2603,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,2,['energy'],['energy']
Energy Efficiency,17/411 Test #3: casscf-fzc-sp .................... Passed 2.85 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.66 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.72 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.05 sec; Start 7: casscf-sp; 21/411 Test #7: casscf-sp ........................ Passed 6.75 sec; Start 8: castup1; 22/411 Test #8: castup1 .......................... Passed 1.50 sec; Start 9: castup2; 23/411 Test #9: castup2 .......................... Passed 4.01 sec; Start 10: castup3; 24/411 Test #10: castup3 .......................... Passed 4.07 sec; Start 11: cbs-delta-energy; 25/411 Test #11: cbs-delta-energy ................. Passed 28.35 sec; Start 12: cbs-parser; 26/411 Test #12: cbs-parser ....................... Passed 10.90 sec; Start 13: cbs-xtpl-alpha; 27/411 Test #13: cbs-xtpl-alpha ................... Passed 73.68 sec; Start 14: cbs-xtpl-energy; 28/411 Test #14: cbs-xtpl-energy .................. Passed 8.11 sec; Start 15: cbs-xtpl-freq; 29/411 Test #15: cbs-xtpl-freq .................... Passed 6.02 sec; Start 16: cbs-xtpl-gradient; 30/411 Test #16: cbs-xtpl-gradient ................ Passed 11.17 sec; Start 17: cbs-xtpl-opt; 31/411 Test #17: cbs-xtpl-opt ..................... Passed 33.93 sec; Start 19: cbs-xtpl-wrapper; 32/411 Test #19: cbs-xtpl-wrapper ................. Passed 39.62 sec; Start 20: cc1; 33/411 Test #20: cc1 .............................. Passed 8.61 sec; Start 21: cc10; 34/411 Test #21: cc10 ............................. Passed 4.22 sec; Start 22: cc11; 35/411 Test #22: cc11 ............................. Passed 4.24 sec; Start 23: cc12; 36/411 Test #23: cc12 ............................. Passed 4.36 sec; Start 24: cc13; 37/411 Test #24: cc13 ............................. Passed 21.72 sec; Start 26: cc13b; 38/411 Test #26: cc13b ............................ Passed 8.83 sec; Start 27: cc13c; 39/411 Test #27: c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:2623,energy,energy,2623,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,2,['energy'],['energy']
Energy Efficiency,18/411 Test #286: props3 ........................... Passed 13.58 sec; Start 7: casscf-sp; 219/411 Test #164: dft-grad1 ........................ Passed 14.37 sec; Start 23: cc12; 220/411 Test #105: dcft-grad3 ....................... Passed 16.71 sec; Start 217: mints6; 221/411 Test #366: dft-smoke ........................ Passed 17.02 sec; Start 143: dfomp2-grad1; 222/411 Test #176: extern1 .......................... Passed 17.35 sec; Start 226: mp2-1; 223/411 Test #133: dfmp2-ecp ........................ Passed 12.76 sec; Start 338: scf7; 224/411 Test #5: casscf-sa-sp ..................... Passed 14.84 sec; Start 368: scf-freq1; 225/411 Test #217: mints6 ........................... Passed 11.92 sec; Start 285: props2; 226/411 Test #226: mp2-1 ............................ Passed 8.62 sec; Start 98: cisd-sp; 227/411 Test #143: dfomp2-grad1 ..................... Passed 9.47 sec; Start 201: fnocc3; 228/411 Test #7: casscf-sp ........................ Passed 18.41 sec; Start 14: cbs-xtpl-energy; 229/411 Test #23: cc12 ............................. Passed 18.39 sec; Start 139: dfomp2-1; 230/411 Test #368: scf-freq1 ........................ Passed 11.13 sec; Start 122: dfccd-grad1; 231/411 Test #338: scf7 ............................. Passed 13.09 sec; Start 268: opt2-fd; 232/411 Test #98: cisd-sp .......................... Passed 9.44 sec; Start 369: dft-jk; 233/411 Test #139: dfomp2-1 ......................... Passed 8.89 sec; Start 127: dfccsdt1; 234/411 Test #285: props2 ........................... Passed 14.75 sec; Start 372: dft-custom-hybrid; 235/411 Test #14: cbs-xtpl-energy .................. Passed 14.69 sec; Start 101: cubeprop; 236/411 Test #201: fnocc3 ........................... Passed 17.46 sec; Start 393: python-3-index-transforms; 237/411 Test #268: opt2-fd .......................... Passed 12.91 sec; Start 266: opt1-fd; 238/411 Test #122: dfccd-grad1 ...................... Passed 13.35 sec; Start 141: dfomp2-3; 239/411 Test #127: dfccsdt1 .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:21307,energy,energy,21307,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,"18066774 -0.004114360797; @IRC 8 -92.841889747803 -0.003871681030; @IRC 9 -92.845625951635 -0.003736203832; @IRC 10 -92.849260395757 -0.003634444122; @IRC 11 -92.852777598444 -0.003517202687; @IRC 12 -92.856140015989 -0.003362417545; @IRC 13 -92.859308223013 -0.003168207024; @IRC 14 -92.862250220465 -0.002941997452; @IRC 15 -92.864943075409 -0.002692854944; @IRC 16 -92.867368006399 -0.002424930990; @IRC 17 -92.869505711996 -0.002137705597; @IRC 18 -92.871329201900 -0.001823489904; @IRC 19 -92.872798961306 -0.001469759406; @IRC 20 -92.873862613736 -0.001063652429; @IRC 21 -92.874464128325 -0.000601514589; @IRC 22 -92.874561860949 -0.000097732624; @IRC 23 -92.874559174537 0.000002686412; @IRC 24 -92.874584188151 -0.000025013614; @IRC 25 -92.874518478044 0.000065710108; @IRC 26 -92.874584083068 -0.000065605025; @IRC 27 -92.874584016106 0.000000066962; @IRC ----------------------------------------------; ```. Compared to the reference from 2017, the first step has an energy difference on the order of 1e-4, and the energy difference remains at or below 1e-4 up to step 22. If I had to guess, this is due to PR #1663, where I fixed an error in the initial displacement for the IRC. At step 22, the geometry is very close to the minimum, so the next step ends up raising the energy. The two IRCs then bounce around, with the reference IRC bouncing in the fourth decimal place and the current IRC bouncing in the fifth. This is enough bounce for the final energies to be outside convergence criteria. Unless somebody has the time and drive to improve the IRC termination cutoff in C-Optking, I recommend changing the reference value for now and investigating this in Py-Optking, whenever that comes out. Meanwhile, I have most of the occ tests fixed locally, but `ocepa-grad2` is proving more difficult. My Psi4Numpy converges with no problems, so the issue probably isn't in the coupled-DIIS approach itself... My current guess is that it's the fact that the ""residuals"" `occ` throws into DII",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226:1876,energy,energy,1876,https://psicode.org,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226,2,['energy'],['energy']
Energy Efficiency,"185 Test #502: python-mints9 .................... Passed 2.66 sec; Start 503: python-mints2; 171/185 Test #503: python-mints2 .................... Passed 3.51 sec; Start 504: python-cc54; 172/185 Test #504: python-cc54 ...................... Passed 9.24 sec; Start 505: python-3-index-transforms; 173/185 Test #505: python-3-index-transforms ........ Passed 56.49 sec; Start 506: python-mints13; 174/185 Test #506: python-mints13 ................... Passed 2.17 sec; Start 507: python-mints14; 175/185 Test #507: python-mints14 ................... Passed 2.67 sec; Start 508: python-cc-amps; 176/185 Test #508: python-cc-amps ................... Passed 31.08 sec; Start 509: python-databases; 177/185 Test #509: python-databases ................. Passed 50.67 sec; Start 510: json-schema-1-energy; 178/185 Test #510: json-schema-1-energy ............. Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:16932,energy,energy,16932,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,2,['energy'],['energy']
Energy Efficiency,"186 7A1 1.471866 ; 8A1 43.203538 										 8A1 43.203538 . Beta Occupied: 				 Beta Occupied: . 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 					 1A1 -20.594556 2A1 -1.235213 3A1 -0.621110 ; 1B1 -0.505839 									 |	 1B2 -0.505839 . Beta Virtual: 				 Beta Virtual: . 1B2 0.107995 4A1 0.237507 2B1 0.858087 				 |	 1B1 0.107995 4A1 0.237507 2B2 0.858087 ; 5A1 0.910618 2B2 0.972383 6A1 1.128016 				 |	 5A1 0.910618 2B1 0.972383 6A1 1.128016 ; 7A1 1.521957 8A1 43.228970 								 7A1 1.521957 8A1 43.228970 . Final Occupation by Irrep:										 Final Occupation by Irrep:; A1 A2 B1 B2 									 A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 0 ]								 |	 DOCC [ 3, 0, 0, 1 ]; SOCC [ 0, 0, 0, 1 ]								 |	 SOCC [ 0, 0, 1, 0 ]. @UHF Final Energy: -75.38631122050272							 |	 @UHF Final Energy: -75.38631122050275. => Energetics <=											 => Energetics <=. Nuclear Repulsion Energy = 4.3626885085570546						 Nuclear Repulsion Energy = 4.3626885085570546; One-Electron Energy = -112.6306119634574259					 |	 One-Electron Energy = -112.6306119634574543; Two-Electron Energy = 32.8816122343976502					 |	 Two-Electron Energy = 32.8816122343976573; Total Energy = -75.3863112205027193					 |	 Total Energy = -75.3863112205027335. UHF NO Occupations:											 UHF NO Occupations:; HONO-2 : 1 B1 1.9996187									 |	 HONO-2 : 1 B2 1.9996187; HONO-1 : 3 A1 1.9985538										 HONO-1 : 3 A1 1.9985538; HONO-0 : 1 B2 1.0000000									 |	 HONO-0 : 1 B1 1.0000000; LUNO+0 : 4 A1 0.0014462										 LUNO+0 : 4 A1 0.0014462; LUNO+1 : 2 B1 0.0003813									 |	 LUNO+1 : 2 B2 0.0003813; LUNO+2 : 5 A1 0.0003240										 LUNO+2 : 5 A1 0.0003240; LUNO+3 : 6 A1 0.0000002										 LUNO+3 : 6 A1 0.0000002. Computation Completed											Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]					Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix							Properties computed using the SCF density matrix. Nuclear Dipole",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:16973,Energy,Energy,16973,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,"18; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of abc combinations: 46194526. Computing (T) correction... % complete total time; ```. Stderr. ```; PSIO_ERROR: unit = 255, errv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:5069,energy,energy,5069,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,"19 [cal/(mol K)] 279.152 [J/(mol K)] 0.10632347 [mEh/K]; Correction Cp 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]. ==> Thermochemistry Energy Analysis <==. Raw electronic energy, E0; Total E0, Electronic energy at well bottom at 0 [K] -1226.44775184 [Eh]. Zero-point energy, ZPE_vib = Sum_i nu_i / 2; Electronic ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Rotational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Vibrational ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Correction ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Total ZPE, Electronic energy at 0 [K] -1226.18577804 [Eh]. Thermal Energy, E (includes ZPE); Electronic E 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Rotational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational E 174.027 [kcal/mol] 728.129 [kJ/mol] 0.27732956 [Eh]; Correction E 175.804 [kcal/mol] 735.566 [kJ/mol] 0.28016212 [Eh]; Total E, Electronic energy at 298.15 [K] -1226.16758972 [Eh]. Enthalpy, H_trans = E_trans + k_B * T; Electronic H 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational H 1.481 [kcal/mol] 6.197 [kJ/mol] 0.00236046 [Eh]; Rotational H 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational H 174.027 [kcal/mol] 728.129 [kJ/mol] 0.27732956 [Eh]; Correction H 176.397 [kcal/mol] 738.044 [kJ/mol] 0.28110630 [Eh]; Total H, Enthalpy at 298.15 [K] -1226.16664554 [Eh]. Gibbs free energy, G = H - T * S; Electronic G 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational G -11.260 [kcal/mol] -47.112 [kJ/mol] -0.01794389 [Eh]; Rotational G -9.357 [kcal/mol] -39.149 [kJ/mol] -0.01491116 [Eh]; Vibrational G 153.839 [kcal/mol] 643.664 [kJ/mol] 0.24515871 [Eh]; Correction G 133.223 [kcal/mol] 557.403 [kJ/mol] 0.21230366 [Eh]; Total G, Free enthalpy at 298.15 [K] -1226.23544818 [Eh]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079:7187,energy,energy,7187,https://psicode.org,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079,2,['energy'],['energy']
Energy Efficiency,194: fd-freq-gradient ................. Passed 31.45 sec; Start 340: soscf-large; 190/411 Test #254: omp2p5-2 ......................... Passed 30.57 sec; Start 72: cc54; 191/411 Test #218: mints8 ........................... Passed 19.91 sec; Start 22: cc11; 192/411 Test #324: sapt8 ............................ Passed 20.43 sec; Start 5: casscf-sa-sp; 193/411 Test #301: pywrap-basis ..................... Passed 21.14 sec; Start 49: cc33; 194/411 Test #303: pywrap-checkrun-convcrit ......... Passed 44.50 sec; Start 164: dft-grad1; 195/411 Test #146: dfomp3-1 ......................... Passed 27.79 sec; Start 248: omp2-3; 196/411 Test #340: soscf-large ...................... Passed 15.12 sec; Start 138: dfmp2-grad5; 197/411 Test #275: opt9 ............................. Passed 29.14 sec; Start 350: dft-custom; 198/411 Test #80: cc8c ............................. Passed 57.00 sec; Start 286: props3; 199/411 Test #366: dft-smoke ........................ Passed 20.42 sec; Start 14: cbs-xtpl-energy; 200/411 Test #54: cc38 ............................. Passed 43.19 sec; Start 258: omp3-2; 201/411 Test #5: casscf-sa-sp ..................... Passed 18.54 sec; Start 53: cc37; 202/411 Test #142: dfomp2-4 ......................... Passed 45.56 sec; Start 357: tu4-h2o-freq; 203/411 Test #148: dfomp3-grad1 ..................... Passed 28.40 sec; Start 133: dfmp2-ecp; 204/411 Test #14: cbs-xtpl-energy .................. Passed 11.68 sec; Start 105: dcft-grad3; 205/411 Test #164: dft-grad1 ........................ Passed 15.73 sec; Start 252: omp2-grad2; 206/411 Test #72: cc54 ............................. Passed 29.77 sec; Start 152: dfomp2p5-grad1; 207/411 Test #51: cc35 ............................. Passed 49.20 sec; Start 285: props2; 208/411 Test #286: props3 ........................... Passed 13.73 sec; Start 21: cc10; 209/411 Test #350: dft-custom ....................... Passed 14.96 sec; Start 217: mints6; 210/411 Test #138: dfmp2-grad5 ...................... Passed 17.05 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:18787,energy,energy,18787,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,"1: ; 401: ; 401: ; 401: Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; 401: ; 401: Properties computed using the HF density matrix; 401: ; 401: Nuclear Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0191; 401: ; 401: Electronic Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401: XX: -1.5309 YY: 1.6335 ZZ: -0.1027; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Mulliken Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.39836 4.39836 0.00000 -0.79673; 401: 2 H 0.30082 0.30082 0.00000 0.39836; 401: 3 H 0.30082 0.30082 0.00000 0.39836; 401: ; 401: Total alpha = 5.00000, Total beta = 5.00000, Total charge = 0.00000; 401: ; 401: Lowdin Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.29726 4.29726 0.00000 -0.59451; 401: 2 H 0.35137 0.35137 0.00000 0.29726; 401: 3 H 0.35137 0.35137 0.00000 0.29726; 401: ; 401: Total alpha = 5.00000, Total beta = 5.00000, Total charge = 0.00000; 401: ; 401: ; 401: Mayer Bond Indices:; 401: ; 401: Irrep: 1 Size: 3 x 3; 401: ; 401: 1 2 3; 401: ; 401: 1 0.00000000000000 0.80206409286279 0.80206409286279; 401: 2 0.80206409286279 0.00000000000000 0.00302003360260; 401: 3 0.80206409286279 0.00302003360260 0.00000000000000; 401: ; 401: ; 401: ; 401: Atomic Valences: ; 401: ; 401: # #; 401: Irrep: 1; 401: 1: 1.6041282; 401: 2: 0.8050841; 401: 3: 0.8050841; 401: ; 401: ; 401: ; 401: Wiberg Bond Indices using Orthogonal Lowdin Orbitals:; 401: ; 401: Irrep: 1 Size: 3 x 3; 401: ; 401: 1 2 3; 401: ; 401: 1 0.00000000000000 0.92373852221608 0.92373852221608; 401: 2 0.92373852221608 0.00000000000000 0.00699264970980; 401: 3 0.92373852221608 0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:7603,charge,charge,7603,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['charge'],['charge']
Energy Efficiency,1; 54/413 Test #44: cc28 ............................. Passed 92.11 sec; Start 60: cc42; 55/413 Test #76: cc6 .............................. Passed 100.66 sec; Start 170: dft1; 56/413 Test #117: dcft9 ............................ Passed 107.45 sec; Start 47: cc30; 57/413 Test #349: sapt-dft2 ........................ Passed 128.95 sec; Start 232: mp2-module; 58/413 Test #58: cc40 ............................. Passed 75.37 sec; Start 62: cc44; 59/413 Test #151: dfomp3-grad2 ..................... Passed 82.19 sec; Start 252: omp2-5; 60/413 Test #60: cc42 ............................. Passed 60.53 sec; Start 75: cc5a; 61/413 Test #304: pywrap-cbs1 ...................... Passed 127.97 sec; Start 244: ocepa-grad2; 62/413 Test #156: dft-grad-lr2 ..................... Passed 111.05 sec; Start 19: cbs-xtpl-nbody; 63/413 Test #185: isapt2 ........................... Passed 119.08 sec; Start 26: cc13a; 64/413 Test #70: cc51 ............................. Passed 92.88 sec; Start 115: dcft7; 65/413 Test #195: fd-freq-energy-large ............. Passed 547.93 sec; Start 207: frac-traverse; 66/413 Test #183: fsapt-allterms ................... Passed 566.39 sec; Start 318: sapt2; 67/413 Test #47: cc30 ............................. Passed 80.66 sec; Start 320: sapt4; 68/413 Test #170: dft1 ............................. Passed 111.14 sec; Start 327: scf-bz2; 69/413 Test #232: mp2-module ....................... Passed 104.71 sec; Start 17: cbs-xtpl-opt; 70/413 Test #62: cc44 ............................. Passed 97.23 sec; Start 149: dfomp3-2; 71/413 Test #252: omp2-5 ........................... Passed 94.12 sec; Start 246: ocepa2; 72/413 Test #381: cc-module ........................ Passed 215.27 sec; Start 373: dft-custom-dhdf; 73/413 Test #244: ocepa-grad2 ...................... Passed 91.63 sec; Start 282: opt-irc-1; 74/413 Test #75: cc5a ............................. Passed 101.97 sec; Start 281: opt14; 75/413 Test #19: cbs-xtpl-nbody ................... Passed 99.42 sec; Start 21: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:6370,energy,energy-large,6370,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy-large']
Energy Efficiency,"1; > 192A 2.073995 193A 2.089810 194A 2.098059; > 195A 2.119505 196A 2.136885 197A 2.139951; > 198A 2.143625 199A 2.144516 200A 2.149966; > 201A 2.153416 202A 2.160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 52",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15154,Energy,Energy,15154,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,1; Start 45: cc3; Start 40: cc25; Start 383: cookbook-rohf-orb-rot; Start 75: cc7; Start 25: cc13a; 1/401 Test #401: json-schema_0_properties .........***Failed 3.21 sec; Start 112: dcft7; 2/401 Test #177: fsapt-allterms ................... Passed 136.27 sec; Start 201: frac-traverse; 3/401 Test #277: opt-irc-2 ........................ Passed 159.76 sec; Start 312: sapt2; 4/401 Test #111: dcft6 ............................ Passed 165.22 sec; Start 314: sapt4; 5/401 Test #383: cookbook-rohf-orb-rot ............ Passed 222.55 sec; Start 321: scf-bz2; 6/401 Test #312: sapt2 ............................ Passed 93.85 sec; Start 29: cc14; 7/401 Test #201: frac-traverse .................... Passed 121.71 sec; Start 164: dft1; 8/401 Test #274: opt13 ............................ Passed 292.05 sec; Start 38: cc23; 9/401 Test #178: isapt1 ........................... Passed 299.95 sec; Start 35: cc2; 10/401 Test #191: fd-freq-gradient-large ........... Passed 307.91 sec; Start 223: mp2-def2; 11/401 Test #189: fd-freq-energy-large ............. Passed 319.82 sec; Start 39: cc24; 12/401 Test #13: cbs-xtpl-alpha ................... Passed 330.09 sec; Start 24: cc13; 13/401 Test #321: scf-bz2 .......................... Passed 118.24 sec; Start 17: cbs-xtpl-opt; 14/401 Test #314: sapt4 ............................ Passed 176.27 sec; Start 31: cc16; 15/401 Test #113: dcft8 ............................ Passed 344.19 sec; Start 275: opt14; 16/401 Test #354: tu6-cp-ne2 ....................... Passed 347.59 sec; Start 41: cc26; 17/401 Test #110: dcft5 ............................ Passed 355.89 sec; Start 276: opt-irc-1; 18/401 Test #112: dcft7 ............................ Passed 358.91 sec; Start 90: cepa-module; 19/401 Test #164: dft1 ............................. Passed 106.51 sec; Start 96: cisd-opt-fd; 20/401 Test #223: mp2-def2 ......................... Passed 82.85 sec; Start 28: cc13d; 21/401 Test #42: cc27 ............................. Passed 392.24 sec; Start 44: cc29; 22/401 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:1764,energy,energy-large,1764,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy-large']
Energy Efficiency,"2 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; MINTS: Wrapper to libmints.; by Justin Turney. Calculation informati",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6944,Energy,Energy,6944,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,2 7.34e-03 o ~; > 5 -1771.54991808 -2.94e-04 6.10e-04 1.42e-04 o 4.66e-02 7.34e-03 o ~; > 6 -1771.54999493 -7.68e-05 5.40e-04 1.21e-04 o 1.40e-02 1.83e-03 o ~; > 7 -1771.55001819 -2.33e-05 4.51e-04 8.25e-05 o 1.89e-02 1.84e-03 o ~; > 8 -1771.55002275 -4.56e-06 3.95e-04 7.58e-05 o 4.60e-03 4.59e-04 o ~; > 9 -1771.55002699 -4.24e-06 3.75e-04 4.74e-05 o 4.74e-03 4.59e-04 o ~; > 10 -1771.55002919 -2.20e-06 3.62e-04 3.71e-05 o 1.53e-02 1.38e-03 o ~; > 11 -1771.55003367 -4.48e-06 3.38e-04 3.16e-05 o 1.53e-02 1.38e-03 o ~; > 12 -1771.55003620 -2.53e-06 3.26e-04 3.22e-05 o 1.56e-02 1.38e-03 o ~; > 13 -1771.55003691 -7.15e-07 * 3.21e-04 3.16e-05 o 3.92e-03 3.44e-04 o ~; > 14 -1771.55003705 -1.33e-07 * 3.23e-04 2.89e-05 o 9.90e-04 * 8.66e-05 o ~; > 15 -1771.55003766 -6.15e-07 * 3.24e-04 2.84e-05 o 2.99e-03 2.58e-04 o ~; > 	Raising dynamic level to 2. ~; > --------------------------------------------------------------------------------------------- ~; > Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > --------------------------------------------------------------------------------------------- ~; > Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; > --------------------------------------------------------------------------------------------- ~; > 1 -1771.55003766 -1.77e+03 4.10e-04 6.83e-05 o 1.12e-01 1.18e-02 o ~; > 2 -1771.55004087 -3.21e-06 4.24e-04 6.61e-05 o 1.14e-01 1.18e-02 o ~; > 3 -1771.55000286 3.80e-05 5.17e-04 1.06e-04 o 1.07e-01 1.18e-02 o ~; > 4 -1771.54998378 1.91e-05 8.31e-04 1.67e-04 o 9.19e-02 1.18e-02 o ~; > 	Raising dynamic level to 3. ~; > --------------------------------------------------------------------------------------------- ~; > Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > --------------------------------------------------------------------------------------------- ~; > Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; > ---------------------------------------------------------------,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167:2093,Energy,Energy,2093,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167,1,['Energy'],['Energy']
Energy Efficiency,2 Test #103: decontract ....................... Passed 1.91 sec; Start 310: pywrap-molecule; 366/412 Test #229: mp2-grad1 ........................ Passed 3.12 sec; Start 215: mints3; 367/412 Test #404: json-schema-1-gradient ........... Passed 2.27 sec; Start 411: skeletonsointegrals; 368/412 Test #331: scf-bs ........................... Passed 2.38 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #247: omp2-1 ........................... Passed 3.37 sec; Start 353: stability2; 370/412 Test #408: skeletondfmp2 .................... Passed 2.24 sec; Start 401: json-schema-1-ghost; 371/412 Test #350: sapt-sf1 ......................... Passed 1.19 sec; Start 399: json-v11-gradient; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 2.78 sec; Start 405: json-schema-1-properties; 373/412 Test #221: mints-helper ..................... Passed 1.34 sec; Start 412: skeletonwavefunction; 374/412 Test #381: psi4numpy-cphf ................... Passed 1.38 sec; Start 397: python-memdfjk; 375/412 Test #354: tu1-h2o-energy ................... Passed 1.35 sec; Start 294: psimrcc-pt2; 376/412 Test #409: skeletonmointegrals .............. Passed 1.49 sec; Start 388: python-energy; 377/412 Test #379: mints12 .......................... Passed 1.64 sec; Start 406: skeleton; 378/412 Test #223: mints10 .......................... Passed 1.59 sec; Start 217: mints5; 379/412 Test #215: mints3 ........................... Passed 1.33 sec; Start 407: skeletonaointegrals; 380/412 Test #310: pywrap-molecule .................. Passed 1.44 sec; Start 355: tu2-ch2-energy; 381/412 Test #411: skeletonsointegrals .............. Passed 1.57 sec; Start 212: mcscf3; 382/412 Test #401: json-schema-1-ghost .............. Passed 1.49 sec; Start 383: psi4numpy-rhf; 383/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.69 sec; Start 189: fci-tdm; 384/412 Test #353: stability2 ....................... Passed 1.68 sec; Start 210: mcscf1; 385/412 Test #399: json-v11-gradient ................ Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:35295,energy,energy,35295,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,2 Test #155: dft-grad-lr2 ..................... Passed 112.86 sec; Start 262: omp3-5; 52/412 Test #92: cepa-module ...................... Passed 134.25 sec; Start 372: dft-custom-dhdf; 53/412 Test #27: cc13b ............................ Passed 61.84 sec; Start 281: opt-irc-1; 54/412 Test #260: omp3-3 ........................... Passed 75.45 sec; Start 17: cbs-xtpl-opt; 55/412 Test #262: omp3-5 ........................... Passed 37.38 sec; Start 116: dcft9; 56/412 Test #169: dft1 ............................. Passed 111.17 sec; Start 76: cc6; 57/412 Test #116: dcft9 ............................ Passed 29.49 sec; Start 28: cc13c; 58/412 Test #17: cbs-xtpl-opt ..................... Passed 65.63 sec; Start 280: opt14; 59/412 Test #28: cc13c ............................ Passed 20.50 sec; Start 31: cc15; 60/412 Test #281: opt-irc-1 ........................ Passed 90.19 sec; Start 231: mp2-module; 61/412 Test #372: dft-custom-dhdf .................. Passed 101.66 sec; Start 70: cc51; 62/412 Test #194: fd-freq-energy-large ............. Passed 554.36 sec; Start 19: cbs-xtpl-nbody; 63/412 Test #31: cc15 ............................. Passed 28.61 sec; Start 318: sapt3; 64/412 Test #76: cc6 .............................. Passed 69.60 sec; Start 108: dcft1; 65/412 Test #326: scf-bz2 .......................... Passed 138.38 sec; Start 293: psimrcc-fd-freq2; 66/412 Test #108: dcft1 ............................ Passed 21.44 sec; Start 193: fd-freq-energy; 67/412 Test #182: fsapt-allterms ................... Passed 599.68 sec; Start 320: sapt5; 68/412 Test #19: cbs-xtpl-nbody ................... Passed 51.30 sec; Start 157: dfomp2p5-grad2; 69/412 Test #280: opt14 ............................ Passed 85.55 sec; Start 150: dfomp3-grad2; 70/412 Test #70: cc51 ............................. Passed 72.72 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 79.59 sec; Start 245: ocepa2; 72/412 Test #206: frac-traverse .................... Passed 233.30 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:6116,energy,energy-large,6116,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy-large']
Energy Efficiency,2 Test #299: pubchem2 ......................... Passed 16.12 sec; Start 384: psi4numpy-rhf-gradient; 380/412 Test #223: mints10 .......................... Passed 16.21 sec; Start 355: tu2-ch2-energy; 381/412 Test #354: tu1-h2o-energy ................... Passed 16.19 sec; Start 397: python-memdfjk; 382/412 Test #411: skeletonsointegrals .............. Passed 15.60 sec; Start 215: mints3; 383/412 Test #221: mints-helper ..................... Passed 15.41 sec; Start 405: json-schema-1-properties; 384/412 Test #103: decontract ....................... Passed 15.43 sec; Start 399: json-v11-gradient; 385/412 Test #381: psi4numpy-cphf ................... Passed 14.94 sec; Start 401: json-schema-1-ghost; 386/412 Test #384: psi4numpy-rhf-gradient ........... Passed 14.67 sec; Start 379: mints12; 387/412 Test #355: tu2-ch2-energy ................... Passed 14.64 sec; Start 310: pywrap-molecule; 388/412 Test #397: python-memdfjk ................... Passed 14.35 sec; Start 388: python-energy; 389/412 Test #405: json-schema-1-properties ......... Passed 14.49 sec; Start 335: scf3; 390/412 Test #215: mints3 ........................... Passed 15.09 sec; Start 217: mints5; 391/412 Test #399: json-v11-gradient ................ Passed 14.86 sec; Start 212: mcscf3; 392/412 Test #379: mints12 .......................... Passed 14.63 sec; Start 383: psi4numpy-rhf; 393/412 Test #401: json-schema-1-ghost .............. Passed 15.23 sec; Start 210: mcscf1; 394/412 Test #310: pywrap-molecule .................. Passed 14.37 sec; Start 240: numpy-array-interface; 395/412 Test #388: python-energy .................... Passed 14.64 sec; Start 213: mints1; 396/412 Test #335: scf3 ............................. Passed 14.09 sec; Start 309: pywrap-db3; 397/412 Test #217: mints5 ........................... Passed 14.04 sec; Start 175: docs-bases; 398/412 Test #212: mcscf3 ........................... Passed 13.97 sec; Start 216: mints4; 399/412 Test #210: mcscf1 ........................... Passed 13.81 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:36514,energy,energy,36514,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,2 Test #380: cc-module ........................ Passed 544.21 sec; Start 48: cc31; 30/412 Test #113: dcft6 ............................ Passed 264.36 sec; Start 98: cisd-opt-fd; 31/412 Test #282: opt-irc-2 ........................ Passed 316.11 sec; Start 59: cc41; 32/412 Test #13: cbs-xtpl-alpha ................... Passed 691.34 sec; Start 61: cc43; 33/412 Test #387: cookbook-rohf-orb-rot ............ Passed 632.65 sec; Start 159: dfscf-bz2; 34/412 Test #32: cc16 ............................. Passed 437.11 sec; Start 105: dcft-grad2; 35/412 Test #111: dcft4 ............................ Passed 2308.00 sec; Start 47: cc30; 36/412 Test #59: cc41 ............................. Passed 130.64 sec; Start 303: pywrap-cbs1; 37/412 Test #196: fd-freq-gradient-large ........... Passed 333.01 sec; Start 348: sapt-dft2; 38/412 Test #48: cc31 ............................. Passed 158.36 sec; Start 75: cc5a; 39/412 Test #61: cc43 ............................. Passed 139.30 sec; Start 184: isapt2; 40/412 Test #11: cbs-delta-energy ................. Passed 466.92 sec; Start 92: cepa-module; 41/412 Test #98: cisd-opt-fd ...................... Passed 166.82 sec; Start 155: dft-grad-lr2; 42/412 Test #321: sapt6 ............................ Passed 177.06 sec; Start 169: dft1; 43/412 Test #374: dft-custom-mgga .................. Passed 196.38 sec; Start 26: cc13a; 44/412 Test #47: cc30 ............................. Passed 82.76 sec; Start 114: dcft7; 45/412 Test #159: dfscf-bz2 ........................ Passed 150.09 sec; Start 206: frac-traverse; 46/412 Test #105: dcft-grad2 ....................... Passed 127.51 sec; Start 317: sapt2; 47/412 Test #75: cc5a ............................. Passed 90.07 sec; Start 319: sapt4; 48/412 Test #303: pywrap-cbs1 ...................... Passed 101.68 sec; Start 326: scf-bz2; 49/412 Test #92: cepa-module ...................... Passed 93.25 sec; Start 372: dft-custom-dhdf; 50/412 Test #169: dft1 ............................. Passed 117.29 sec; Start 260:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:4121,energy,energy,4121,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,2 Test #404: json-schema-1-gradient ........... Passed 2.27 sec; Start 411: skeletonsointegrals; 368/412 Test #331: scf-bs ........................... Passed 2.38 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #247: omp2-1 ........................... Passed 3.37 sec; Start 353: stability2; 370/412 Test #408: skeletondfmp2 .................... Passed 2.24 sec; Start 401: json-schema-1-ghost; 371/412 Test #350: sapt-sf1 ......................... Passed 1.19 sec; Start 399: json-v11-gradient; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 2.78 sec; Start 405: json-schema-1-properties; 373/412 Test #221: mints-helper ..................... Passed 1.34 sec; Start 412: skeletonwavefunction; 374/412 Test #381: psi4numpy-cphf ................... Passed 1.38 sec; Start 397: python-memdfjk; 375/412 Test #354: tu1-h2o-energy ................... Passed 1.35 sec; Start 294: psimrcc-pt2; 376/412 Test #409: skeletonmointegrals .............. Passed 1.49 sec; Start 388: python-energy; 377/412 Test #379: mints12 .......................... Passed 1.64 sec; Start 406: skeleton; 378/412 Test #223: mints10 .......................... Passed 1.59 sec; Start 217: mints5; 379/412 Test #215: mints3 ........................... Passed 1.33 sec; Start 407: skeletonaointegrals; 380/412 Test #310: pywrap-molecule .................. Passed 1.44 sec; Start 355: tu2-ch2-energy; 381/412 Test #411: skeletonsointegrals .............. Passed 1.57 sec; Start 212: mcscf3; 382/412 Test #401: json-schema-1-ghost .............. Passed 1.49 sec; Start 383: psi4numpy-rhf; 383/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.69 sec; Start 189: fci-tdm; 384/412 Test #353: stability2 ....................... Passed 1.68 sec; Start 210: mcscf1; 385/412 Test #399: json-v11-gradient ................ Passed 1.41 sec; Start 335: scf3; 386/412 Test #405: json-schema-1-properties ......... Passed 1.45 sec; Start 240: numpy-array-interface; 387/412 Test #412: skeletonwavefunction .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:35452,energy,energy,35452,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['energy'],['energy']
Energy Efficiency,2-ch2-energy; 371/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 3.29 sec; Start 215: mints3; 372/412 Test #189: fci-tdm .......................... Passed 3.92 sec; Start 384: psi4numpy-rhf-gradient; 373/412 Test #97: cisd-h2o-clpse ................... Passed 5.09 sec; Start 381: psi4numpy-cphf; 374/412 Test #331: scf-bs ........................... Passed 2.43 sec; Start 405: json-schema-1-properties; 375/412 Test #222: mints9 ........................... Passed 2.16 sec; Start 399: json-v11-gradient; 376/412 Test #404: json-schema-1-gradient ........... Passed 2.15 sec; Start 397: python-memdfjk; 377/412 Test #354: tu1-h2o-energy ................... Passed 1.49 sec; Start 401: json-schema-1-ghost; 378/412 Test #223: mints10 .......................... Passed 1.74 sec; Start 379: mints12; 379/412 Test #103: decontract ....................... Passed 1.22 sec; Start 310: pywrap-molecule; 380/412 Test #396: python-mints13 ................... Passed 2.03 sec; Start 388: python-energy; 381/412 Test #215: mints3 ........................... Passed 1.10 sec; Start 335: scf3; 382/412 Test #411: skeletonsointegrals .............. Passed 1.45 sec; Start 212: mcscf3; 383/412 Test #355: tu2-ch2-energy ................... Passed 1.26 sec; Start 217: mints5; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.45 sec; Start 210: mcscf1; 385/412 Test #405: json-schema-1-properties ......... Passed 1.24 sec; Start 383: psi4numpy-rhf; 386/412 Test #221: mints-helper ..................... Passed 1.60 sec; Start 240: numpy-array-interface; 387/412 Test #399: json-v11-gradient ................ Passed 1.43 sec; Start 213: mints1; 388/412 Test #381: psi4numpy-cphf ................... Passed 1.55 sec; Start 175: docs-bases; 389/412 Test #401: json-schema-1-ghost .............. Passed 1.46 sec; Start 309: pywrap-db3; 390/412 Test #310: pywrap-molecule .................. Passed 1.30 sec; Start 216: mints4; 391/412 Test #388: python-energy .................... Passed 1.27 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:35858,energy,energy,35858,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,2-grad2 ...................... Passed 15.32 sec; Start 327: scf-guess-read1; 321/411 Test #314: sad1 ............................. Passed 5.26 sec; Start 391: python-mints2; 322/411 Test #234: mp3-grad2 ........................ Passed 9.93 sec; Start 362: x2c3; 323/411 Test #284: props1 ........................... Passed 7.76 sec; Start 228: mp2-grad1; 324/411 Test #399: json-schema-1-energy ............. Passed 5.52 sec; Start 271: opt5; 325/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.49 sec; Start 233: mp3-grad1; 326/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 262: omp3-grad1; 327/411 Test #85: cepa0-grad1 ...................... Passed 9.67 sec; Start 121: dfccdl1; 328/411 Test #328: scf-upcast-custom-basis .......... Passed 2.52 sec; Start 356: scf-response1; 329/411 Test #190: fci-coverage ..................... Passed 13.09 sec; Start 361: x2c2; 330/411 Test #327: scf-guess-read1 .................. Passed 2.57 sec; Start 246: omp2-1; 331/411 Test #397: json-v11-energy .................. Passed 3.24 sec; Start 255: omp2p5-grad1; 332/411 Test #225: mom .............................. Passed 3.92 sec; Start 332: scf-occ; 333/411 Test #391: python-mints2 .................... Passed 2.61 sec; Start 345: dfep2-2; 334/411 Test #362: x2c3 ............................. Passed 2.55 sec; Start 229: mp2-grad2; 335/411 Test #136: dfmp2-grad3 ...................... Passed 4.79 sec; Start 407: skeletondfmp2; 336/411 Test #253: omp2p5-1 ......................... Passed 9.34 sec; Start 288: psimrcc-ccsd_t-2; 337/411 Test #228: mp2-grad1 ........................ Passed 2.44 sec; Start 289: psimrcc-ccsd_t-3; 338/411 Test #233: mp3-grad1 ........................ Passed 2.31 sec; Start 363: zaptn-nh2; 339/411 Test #271: opt5 ............................. Passed 2.66 sec; Start 203: frac; 340/411 Test #356: scf-response1 .................... Passed 2.19 sec; Start 381: psi4numpy-dfmp2; 341/411 Test #121: dfccdl1 .......................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:31077,energy,energy,31077,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,"2.021730; > 189A 2.047832 190A 2.054449 191A 2.063391; > 192A 2.073995 193A 2.089810 194A 2.098059; > 195A 2.119505 196A 2.136885 197A 2.139951; > 198A 2.143625 199A 2.144516 200A 2.149966; > 201A 2.153416 202A 2.160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system ti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15077,Energy,Energy,15077,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,2.081511982 -6.077543015; H 4.251078949 -2.431689751 -7.082213768; C 2.689801382 -1.719555434 -5.786078093; H 1.854221802 -1.740304355 -6.500984287; N 2.362569887 -1.315933652 -4.529163145; C 3.275115300 -1.282414836 -3.531254094; H 2.908596400 -0.995167643 -2.544698473; C 4.606802267 -1.617801463 -3.784599319; H 5.321511729 -1.586242512 -2.959208135; C 4.983969180 -2.022014423 -5.070830353; H 6.015494848 -2.315587932 -5.285364808; C 0.935759635 -0.998151030 -4.240851382; H 0.534357988 -0.506562574 -5.138234696; H 0.939562254 -0.291970622 -3.396388025; C 0.153371123 -2.268353181 -3.933202696; H 0.586362975 -2.807317940 -3.077535365; H 0.159008115 -2.912490143 -4.825998788; H -0.891436693 -1.987652772 -3.718583292; C 2.800348332 -4.626744069 -3.792777198; N 2.802665756 -3.966107613 -2.790173312; N 2.684652290 -5.412141057 -4.861486044; C 3.505354375 -5.173049272 -5.878418578; N 4.138355900 -5.018501942 -6.888486303; }; set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. Output. ```; *** at Wed Feb 5 05:26:47 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2690. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -3.880037726127. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 686; Number of virtual orbitals in truncated space: 651. ==> Memory <==. Total memory requirements: 66851.24 mb; 3-index integrals: 10270.29 mb; CCSD intermediates: 56580.95 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 29772.62 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural o,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:2198,energy,energy,2198,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,"2.561534 ; 7A -2.321044 8A -2.321030 9A -2.321028 ; 10A -2.321027 11A -1.493580 12A -1.493579 ; 13A -1.493578 14A -0.152702 15A -0.050078 ; 16A -0.050072 17A -0.050066 . Virtual: . 18A 0.078304 19A 0.097245 20A 0.097248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6609,Energy,Energy,6609,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"2.; Reciprocal condition number of the overlap matrix is 2.1736231954E-02.				 Reciprocal condition number of the overlap matrix is 2.1736231954E-02.; Using symmetric orthogonalization.									 Using symmetric orthogonalization. ==> Pre-Iterations <==										 ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation informat	 SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation informat. -------------------------										 -------------------------; Irrep Nso Nmo 										 Irrep Nso Nmo ; -------------------------										 -------------------------; A1 8 8 										 A1 8 8 ; A2 0 0 										 A2 0 0 ; B1 2 2 										 B1 2 2 ; B2 2 2 										 B2 2 2 ; -------------------------										 -------------------------; Total 12 12										 Total 12 12; -------------------------										 -------------------------. ==> Iterations <==											 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|					 Total Energy Delta E RMS |[F,P]|. @UHF iter SAD: -74.69099268118431 -7.46910e+01 0.00000e+00 				 |	 @UHF iter SAD: -74.69099268118434 -7.46910e+01 0.00000e+00 ; @UHF iter 1: -75.36638207835102 -6.75389e-01 2.07053e-02 DIIS			 |	 @UHF iter 1: -75.36638207835099 -6.75389e-01 2.07053e-02 DIIS; @UHF iter 2: -75.38394424152470 -1.75622e-02 7.43115e-03 DIIS			 |	 @UHF iter 2: -75.38394424152474 -1.75622e-02 7.43115e-03 DIIS; @UHF iter 3: -75.38582621410333 -1.88197e-03 2.33008e-03 DIIS			 |	 @UHF iter 3: -75.38582621410339 -1.88197e-03 2.33008e-03 DIIS; @UHF iter 4: -75.38619478049240 -3.68566e-04 9.29768e-04 DIIS			 |	 @UHF iter 4: -75.38619478049243 -3.68566e-04 9.29768e-04 DIIS; @UHF iter 5: -75.38629447046014 -9.96900e-05 3.08853e-04 DIIS			 |	 @UHF iter 5: -75.38629447046023 -9.96900e-05 3.08853e-04 DIIS; @UHF iter 6: -75.38630883426671 -1.43638e-05 1.16185e-04 DIIS			 |	 @UHF iter 6: -75.38630883426674 -1.43638e-05 1.16185e-04 DIIS; @UHF iter 7: -75.38631113759388 -2.30333e-06 2.55",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:13576,Energy,Energy,13576,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,2,['Energy'],['Energy']
Energy Efficiency,"2021. => Loading Basis Set <=										 => Loading Basis Set <=. Name: CC-PVDZ											 Name: CC-PVDZ; Role: ORBITAL											 Role: ORBITAL; Keyword: BASIS											 Keyword: BASIS; atoms 1 entry NE line 258 file /psi/gits/hrw-tag/objdir39/stage/share/psi4/basis/c |	 atoms 1 entry NE line 258 file /psi/gits/hrw-demo/objdir39/stage/share/psi4/basis/. ---------------------------------------------------------					 ---------------------------------------------------------; SCF									 SCF; by Justin Turney, Rob Parrish, Andy Simmonett						 by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith							 and Daniel G. A. Smith; RKS Reference								 RKS Reference; 1 Threads, 500 MiB Core							 1 Threads, 500 MiB Core; ---------------------------------------------------------					 ---------------------------------------------------------. ==> Geometry <==											 ==> Geometry <==. Molecular point group: d2h										 Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:						 Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass 		 Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------		 ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440176200		 NE 0.000000000000 0.000000000000 0.000000000000 19.992440176200. Running in d2h symmetry.										 Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]			 Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]			 Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000								 Nuclear repulsion = 0.000000000000000. Charge = 0											 Charge = 0; Multiplicity = 1											 Multiplicity = 1; Electrons =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:1662,charge,charge,1662,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,2,['charge'],['charge']
Energy Efficiency,"20623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Dipole Moment: [e a0]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <; 												 <; Dipole Moment: [D]										 <; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000			 <. 												 >	 @RKS iter 6: -59.21347042486877 -5.24575e+01 1.25571e+06 DIIS; 												 >	 Occupation by irrep:; 												 >	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 >	 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. *** tstop() called on psinet at Tue Jan 5 23:59:30 2021					 |	 @RKS iter 7: -6.75599189156470 5.24575e+01 7.49895e+",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10872,Energy,Energy,10872,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,214: mints3; 369/411 Test #253: omp2p5-1 ......................... Passed 2.47 sec; Start 311: rasci-h2o; 370/411 Test #220: mints-helper ..................... Passed 1.21 sec; Start 404: json-schema-1-properties; 371/411 Test #309: pywrap-molecule .................. Passed 1.07 sec; Start 353: tu1-h2o-energy; 372/411 Test #378: mints12 .......................... Passed 1.17 sec; Start 349: sapt-sf1; 373/411 Test #214: mints3 ........................... Passed 1.00 sec; Start 383: psi4numpy-rhf-gradient; 374/411 Test #102: decontract ....................... Passed 1.26 sec; Start 293: psimrcc-pt2; 375/411 Test #311: rasci-h2o ........................ Passed 1.36 sec; Start 400: json-schema-1-ghost; 376/411 Test #96: cisd-h2o-clpse ................... Passed 1.56 sec; Start 398: json-v11-gradient; 377/411 Test #404: json-schema-1-properties ......... Passed 1.09 sec; Start 405: skeleton; 378/411 Test #349: sapt-sf1 ......................... Passed 1.04 sec; Start 406: skeletonaointegrals; 379/411 Test #353: tu1-h2o-energy ................... Passed 1.12 sec; Start 396: python-memdfjk; 380/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.25 sec; Start 411: skeletonwavefunction; 381/411 Test #293: psimrcc-pt2 ...................... Passed 1.38 sec; Start 408: skeletonmointegrals; 382/411 Test #108: dcft2 ............................ Passed 2.92 sec; Start 410: skeletonsointegrals; 383/411 Test #400: json-schema-1-ghost .............. Passed 1.34 sec; Start 352: stability2; 384/411 Test #405: skeleton ......................... Passed 1.30 sec; Start 354: tu2-ch2-energy; 385/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 330: scf-bs; 386/411 Test #398: json-v11-gradient ................ Passed 1.38 sec; Start 382: psi4numpy-rhf; 387/411 Test #406: skeletonaointegrals .............. Passed 1.11 sec; Start 387: python-energy; 388/411 Test #411: skeletonwavefunction ............. Passed 0.91 sec; Start 209: mcscf1; 389/411 Test #408: skele,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:35500,energy,energy,35500,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,219: mints-benchmark .................. Passed 37.75 sec; Start 144: dfomp2-grad2; 96/411 Test #107: dcft1 ............................ Passed 129.28 sec; Start 299: pywrap-alias; 97/411 Test #348: sapt-compare ..................... Passed 47.37 sec; Start 68: cc50; 98/411 Test #244: ocepa2 ........................... Passed 137.21 sec; Start 131: dfmp2-3; 99/411 Test #27: cc13c ............................ Passed 202.73 sec; Start 66: cc49; 100/411 Test #68: cc50 ............................. Passed 85.78 sec; Start 307: pywrap-db1; 101/411 Test #30: cc15 ............................. Passed 162.12 sec; Start 26: cc13b; 102/411 Test #299: pywrap-alias ..................... Passed 96.48 sec; Start 250: omp2-5; 103/411 Test #131: dfmp2-3 .......................... Passed 41.77 sec; Start 249: omp2-4; 104/411 Test #144: dfomp2-grad2 ..................... Passed 145.90 sec; Start 147: dfomp3-2; 105/411 Test #307: pywrap-db1 ....................... Passed 42.56 sec; Start 260: omp3-4; 106/411 Test #11: cbs-delta-energy ................. Passed 361.79 sec; Start 82: cc9a; 107/411 Test #66: cc49 ............................. Passed 69.98 sec; Start 77: cc8; 108/411 Test #250: omp2-5 ........................... Passed 135.32 sec; Start 34: cc19; 109/411 Test #147: dfomp3-2 ......................... Passed 121.15 sec; Start 73: cc55; 110/411 Test #82: cc9a ............................. Passed 101.46 sec; Start 261: omp3-5; 111/411 Test #249: omp2-4 ........................... Passed 143.33 sec; Start 312: rasci-ne; 112/411 Test #26: cc13b ............................ Passed 169.08 sec; Start 63: cc46; 113/411 Test #77: cc8 .............................. Passed 121.13 sec; Start 206: ghosts; 114/411 Test #312: rasci-ne ......................... Passed 36.29 sec; Start 256: omp2p5-grad2; 115/411 Test #260: omp3-4 ........................... Passed 172.67 sec; Start 237: nbody-he-cluster; 116/411 Test #206: ghosts ........................... Passed 37.33 sec; Start 64: cc47; 11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:10000,energy,energy,10000,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,23_0 conda-forge; chardet 4.0.0 py37h89c1867_1 conda-forge; chemps2 1.8.10 hbe8a562_0 psi4; conda 4.12.0 py37h89c1867_0 conda-forge; conda-package-handling 1.7.2 py37hb5d75c8_0 conda-forge; cryptography 3.4.5 py37h5d9358c_1 conda-forge; cudatoolkit 11.1.1 h6406543_8 conda-forge; cycler 0.11.0 pyhd3eb1b0_0 ; dbus 1.13.6 h5008d03_3 conda-forge; debtcollector 2.5.0 pyhd8ed1ab_0 conda-forge; debugpy 1.5.1 py37hcd2ae1e_0 conda-forge; decorator 5.1.1 pyhd3eb1b0_0 ; defusedxml 0.7.1 pyhd8ed1ab_0 conda-forge; dftd3 3.2.1 h84218bc_2 psi4; dkh 1.2 h173d85e_2 psi4; entrypoints 0.4 pyhd8ed1ab_0 conda-forge; expat 2.4.7 h27087fc_0 conda-forge; flit-core 3.7.1 pyhd8ed1ab_0 conda-forge; fontconfig 2.13.1 h6c09931_0 ; fonttools 4.25.0 pyhd3eb1b0_0 ; freetype 2.11.0 h70c0345_0 ; gau2grid 2.0.7 hd18ef5c_0 psi4; gcp 2.0.2 he991be0_2 psi4; gdma 2.2.6 h0e1e685_6 psi4; gettext 0.19.8.1 h73d1719_1008 conda-forge; giflib 5.2.1 h7b6447c_0 ; glib 2.70.2 h780b84a_4 conda-forge; glib-tools 2.70.2 h780b84a_4 conda-forge; greenlet 1.1.1 py37h295c915_0 ; gst-plugins-base 1.14.5 h0935bb2_2 conda-forge; gstreamer 1.18.5 h9f60fe5_3 conda-forge; hdf5 1.10.6 hb1b8bf9_0 ; icu 68.1 h58526e2_0 conda-forge; idna 2.10 pyh9f0ad1d_0 conda-forge; importlib-metadata 4.8.2 py37h06a4308_0 ; importlib_metadata 4.8.2 hd3eb1b0_0 ; importlib_resources 5.2.0 pyhd3eb1b0_1 ; iniconfig 1.1.1 pyhd3eb1b0_0 ; intel-openmp 2021.4.0 h06a4308_3561 ; ipykernel 6.10.0 py37h25bab4e_0 conda-forge; ipython 7.32.0 py37h89c1867_0 conda-forge; ipython_genutils 0.2.0 py_1 conda-forge; ipywidgets 7.7.0 pyhd8ed1ab_0 conda-forge; jbig 2.1 h7f98852_2003 conda-forge; jedi 0.18.1 py37h89c1867_0 conda-forge; jinja2 3.1.1 pyhd8ed1ab_0 conda-forge; jpeg 9d h7f8727e_0 ; jsonschema 4.4.0 pyhd8ed1ab_0 conda-forge; jupyter 1.0.0 py37h89c1867_7 conda-forge; jupyter_client 7.1.2 pyhd8ed1ab_0 conda-forge; jupyter_console 6.4.3 pyhd8ed1ab_0 conda-forge; jupyter_core 4.9.2 py37h89c1867_0 conda-forge; jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge; j,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510#issuecomment-1081031693:2304,green,greenlet,2304,https://psicode.org,https://github.com/psi4/psi4/issues/2510#issuecomment-1081031693,1,['green'],['greenlet']
Energy Efficiency,247: omp2-1 ........................... Passed 3.62 sec; Start 229: mp2-grad1; 307/412 Test #234: mp3-grad1 ........................ Passed 3.09 sec; Start 120: dfcasscf-sp; 308/412 Test #237: mpn-bh ........................... Passed 4.49 sec; Start 266: opt1; 309/412 Test #121: dfccd1 ........................... Passed 2.00 sec; Start 230: mp2-grad2; 310/412 Test #232: mp2p5-grad1 ...................... Passed 1.89 sec; Start 356: tu3-h2o-opt; 311/412 Test #377: pywrap-align ..................... Passed 6.42 sec; Start 226: mom; 312/412 Test #340: scf-property ..................... Passed 4.87 sec; Start 272: opt5; 313/412 Test #235: mp3-grad2 ........................ Passed 2.29 sec; Start 122: dfccdl1; 314/412 Test #94: cisd-h2o+-0 ...................... Passed 4.94 sec; Start 295: psimrcc-sp1; 315/412 Test #180: fsapt2 ........................... Passed 5.12 sec; Start 192: fcidump; 316/412 Test #229: mp2-grad1 ........................ Passed 3.11 sec; Start 400: json-schema-1-energy; 317/412 Test #95: cisd-h2o+-1 ...................... Passed 5.23 sec; Start 378: pywrap-align-chiral; 318/412 Test #204: frac ............................. Passed 3.89 sec; Start 344: stability1; 319/412 Test #332: scf1 ............................. Passed 5.47 sec; Start 345: dfep2-1; 320/412 Test #378: pywrap-align-chiral .............. Passed 3.24 sec; Start 389: python-curve; 321/412 Test #120: dfcasscf-sp ...................... Passed 6.79 sec; Start 236: mp2-property; 322/412 Test #356: tu3-h2o-opt ...................... Passed 5.64 sec; Start 398: json-v11-energy; 323/412 Test #400: json-schema-1-energy ............. Passed 4.36 sec; Start 119: dfcasscf-fzc-sp; 324/412 Test #295: psimrcc-sp1 ...................... Passed 5.67 sec; Start 258: omp3-1; 325/412 Test #226: mom .............................. Passed 6.16 sec; Start 352: dft-reference; 326/412 Test #272: opt5 ............................. Passed 6.07 sec; Start 385: psi4numpy-rhf-hessian; 327/412 Test #230: mp2-gra,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:29705,energy,energy,29705,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,24: cc12 ............................. Passed 30.79 sec; Start 367: dft-smoke; 216/412 Test #276: opt9 ............................. Passed 23.44 sec; Start 339: scf7; 217/412 Test #302: pywrap-basis ..................... Passed 16.95 sec; Start 165: dft-grad1; 218/412 Test #139: dfmp2-grad5 ...................... Passed 23.97 sec; Start 91: cepa1; 219/412 Test #154: dft-grad-lr1 ..................... Passed 17.34 sec; Start 286: props2; 220/412 Test #166: dft-grad2 ........................ Passed 17.73 sec; Start 351: dft-custom; 221/412 Test #5: casscf-sa-sp ..................... Passed 15.81 sec; Start 287: props3; 222/412 Test #90: cepa3 ............................ Passed 13.41 sec; Start 198: freq-isotope1; 223/412 Test #325: sapt8 ............................ Passed 16.64 sec; Start 267: opt1-fd; 224/412 Test #106: dcft-grad3 ....................... Passed 19.65 sec; Start 218: mints6; 225/412 Test #255: omp2p5-2 ......................... Passed 19.89 sec; Start 14: cbs-xtpl-energy; 226/412 Test #91: cepa1 ............................ Passed 10.97 sec; Start 123: dfccd-grad1; 227/412 Test #219: mints8 ........................... Passed 16.12 sec; Start 369: scf-freq1; 228/412 Test #341: soscf-large ...................... Passed 15.54 sec; Start 358: tu4-h2o-freq; 229/412 Test #339: scf7 ............................. Passed 15.00 sec; Start 242: ocepa-grad1; 230/412 Test #165: dft-grad1 ........................ Passed 15.13 sec; Start 342: soscf-ref; 231/412 Test #367: dft-smoke ........................ Passed 15.50 sec; Start 373: dft-custom-hybrid; 232/412 Test #123: dfccd-grad1 ...................... Passed 6.25 sec; Start 269: opt2-fd; 233/412 Test #286: props2 ........................... Passed 14.05 sec; Start 370: dft-jk; 234/412 Test #267: opt1-fd .......................... Passed 11.73 sec; Start 99: cisd-sp; 235/412 Test #351: dft-custom ....................... Passed 15.52 sec; Start 9: castup2; 236/412 Test #198: freq-isotope1 .................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:21207,energy,energy,21207,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['energy'],['energy']
Energy Efficiency,25 ............................. Passed 464.40 sec; Start 307: pywrap-checkrun-rohf; 5/413 Test #39: cc23 ............................. Passed 467.64 sec; Start 32: cc16; 6/413 Test #116: dcft8 ............................ Passed 546.67 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 674.21 sec; Start 157: dft-grad-lr3; 8/413 Test #36: cc2 .............................. Passed 736.38 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 744.74 sec; Start 229: mp2-def2; 10/413 Test #32: cc16 ............................. Passed 318.84 sec; Start 113: dcft5; 11/413 Test #25: cc13 ............................. Passed 288.74 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #308: pywrap-checkrun-uhf .............. Passed 858.01 sec; Start 29: cc13d; 13/413 Test #105: dcft-grad1 ....................... Passed 867.96 sec; Start 184: isapt1; 14/413 Test #77: cc7 .............................. Passed 433.83 sec; Start 11: cbs-delta-energy; 15/413 Test #306: pywrap-checkrun-rhf .............. Passed 876.28 sec; Start 48: cc31; 16/413 Test #40: cc24 ............................. Passed 876.40 sec; Start 114: dcft6; 17/413 Test #302: pywrap-all ....................... Passed 905.57 sec; Start 45: cc29; 18/413 Test #242: ocepa-freq1 ...................... Passed 456.03 sec; Start 18: cbs-xtpl-func; 19/413 Test #46: cc3 .............................. Passed 974.02 sec; Start 183: fsapt-allterms; 20/413 Test #307: pywrap-checkrun-rohf ............. Passed 520.29 sec; Start 195: fd-freq-energy-large; 21/413 Test #29: cc13d ............................ Passed 133.06 sec; Start 197: fd-freq-gradient-large; 22/413 Test #48: cc31 ............................. Passed 119.81 sec; Start 280: opt13; 23/413 Test #11: cbs-delta-energy ................. Passed 124.12 sec; Start 375: dft-custom-mgga; 24/413 Test #45: cc29 ............................. Passed 101.10 sec; Start 361: tu6-cp-ne2; 25/413 Test #13: cbs-xtpl-alpha .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:1730,energy,energy,1730,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['energy'],['energy']
Energy Efficiency,"26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (DISP); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_disp.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (FIXED); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_fixed.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST. ```; * I think it should be clear from the output file what exch-disp scheme/scale is applied. So perhaps add a couple lines to the printout like below. This should also satisfy Jonathon's request that the output file show the change in scaling defaults. ```; ==> E20 Dispersion (MP2) <==. Disp20 (MP2) -0.37881730 [mEh]; Exch-Disp20,u 0.02037338 [mEh]; Scaling Scheme: Disp; Scaling Factor: 0.707. SAPT(DFT) Results; ---------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:2620,energy,energy,2620,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,2,['energy'],['energy']
Energy Efficiency,"28.85010519995217 -9.85835e-10 7.24431e-06 DIIS			 <; Energy and wave function converged.								 <; 												 <; 												 <; ==> Post-Iterations <==									 <; 												 <; Electrons on quadrature grid:								 <; Ntotal = 9.9999999997 ; deviation = -3.407e-10 					 <; 												 <; Orbital Energies [Eh]									 <; ---------------------									 <; 												 <; Doubly Occupied: 			 <; 												 <; 1Ag -30.481683 2Ag -1.294447 1B1u -0.437312 				 <; 1B3u -0.437312 1B2u -0.437308 							 <; 												 <; Virtual: 			 <; 												 <; 2B1u 1.320623 2B3u 1.320623 2B2u 1.320642 				 <; 3Ag 1.748199 4Ag 4.628379 1B2g 4.628379 				 <; 1B3g 4.628379 1B1g 4.628379 5Ag 4.628380 				 <. Final Occupation by Irrep:									 |	 @RKS iter 4: -64.85356066083639 1.85276e+00 2.38223e+04 DIIS; 												 >	 Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u 						 Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]						 DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. @RKS Final Energy: -128.85010519995217							 |	 @RKS iter 5: -6.75599189156451 5.80976e+01 1.01095e+00 DIIS; 												 |	 Occupation by irrep:; => Energetics <=										 |	 Ag B1g B2g B3g Au B1u B2u B3u ; 												 |	 DOCC [ 2, 1, 1, 1, 0, 0, 0, 0 ]; Nuclear Repulsion Energy = 0.0000000000000000					 <; One-Electron Energy = -182.5700580338770465					 <; Two-Electron Energy = 66.1959588591321619					 <; DFT Exchange-Correlation Energy = -12.4760060252072993					 <; Empirical Dispersion Energy = 0.0000000000000000					 <; VV10 Nonlocal Energy = 0.0000000000000000					 <; Total Energy = -128.8501051999521962					 <; 												 <; Computation Completed										 <; 												 <; 												 <; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]				 <; 												 <; Properties computed using the SCF density matrix						 <; 												 <; Nuclear Dipole Moment: [e a0]									 <; X: 0.0000 Y: 0.0000 Z: 0.0000					 <; 												 <; Electronic Dipole Moment: [e a0]								",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124:10292,Energy,Energy,10292,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755088124,1,['Energy'],['Energy']
Energy Efficiency,"2e-10 3.34e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 20: -112.523829840596 -3.6948e-12 2.10e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 21: -112.523829840597 -8.2423e-13 1.56e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 22: -112.523829840597 -6.2528e-13 7.02e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 23: -112.523829840598 -1.5632e-13 6.16e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 24: -112.523829840598 -2.8422e-14 4.59e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 25: -112.523829840598 -1.1369e-13 2.09e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 26: -112.523829840598 0.0000e+00 3.15e-09 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 27: -112.523829840598 2.8422e-14 1.21e-09 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 28: -112.523829840598 -4.2633e-14 2.51e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 29: -112.523829840598 -4.2633e-14 2.29e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 30: -112.523829840588 4.2633e-14 1.05e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 31: -112.523829840588 -2.8422e-14 2.75e-11 0.00e+00 12 1 TS, DIIS. @DF-MCSCF has converged!. @DF-MCSCF Final Energy: -112.523829840588462. Computing CI Semicanonical Orbitals. ==> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Attempting to use 1 previous converged vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -111.417799029788 -2.4659E+01 1.1817E+00 ; @CI 1: 0 -112.189379709492 -7.7158E-01 3.5706E-01 ; @CI 2: 0 -112.250278204452 -6.0898E-02 3.1809E-01 ; @CI 3: 0 -112.324883713784 -7.4606E-02 2.2146E-01 ; @CI 4: 0 -112.352310238893 -2.7427E-02 1.2530E-01 ; @CI 5: 0 -112.358631917780 -6.3217E-03 9.7660E-02 ; @CI 6: 0 -112.365095716692 -6.4638E-03 7.3202E-02 ; @CI 7: 0 -112.366948614338 -1.8529E-03 5.3732E-02 ; @CI 8: 0 -112.372824198774 -5.8756E-03 1.1022E-01 ; @CI 9: 0 -112.387582513115 -1.4758E-02 1.8337E-01 ; @CI 10: 0 -112.410692911567 -2.3110E-02 2.3866E-01 ; @CI 11: 0 -112.444565012608 -3.3872E-02 2.3335E-01 ; @CI 12: 0 -112.483195864884 -3.8631E-02 1.9437E-01 . Warning! CI diagonalization did not fully ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:2651,Energy,Energy,2651,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,1,['Energy'],['Energy']
Energy Efficiency,"2u 11.798691 ; 7B1u 11.798691 14Ag 14.696251 15Ag 34.149342 . Beta Occupied: . . Beta Virtual: . 1Ag 0.016098 2Ag 0.109076 1B2u 0.211108 ; 1B1u 0.211108 1B3u 0.211108 3Ag 0.385413 ; 2B1u 0.802773 2B2u 0.802773 2B3u 0.802773 ; 4Ag 0.900610 1B3g 0.900610 1B2g 0.900610 ; 1B1g 0.900610 5Ag 0.900610 6Ag 1.071716 ; 3B1u 2.265097 3B3u 2.265097 3B2u 2.265097 ; 7Ag 2.575158 8Ag 2.953058 2B2g 2.953058 ; 2B3g 2.953058 2B1g 2.953058 9Ag 2.953058 ; 4B1u 4.243456 4B3u 4.243456 4B2u 4.243456 ; 5B1u 4.243456 1Au 4.243456 5B3u 4.243456 ; 5B2u 4.243456 10Ag 5.042050 6B3u 5.416218 ; 6B1u 5.416218 6B2u 5.416218 11Ag 8.101653 ; 12Ag 8.311198 3B3g 8.311198 3B2g 8.311198 ; 3B1g 8.311198 13Ag 8.311198 7B3u 11.838258 ; 7B2u 11.838258 7B1u 11.838258 14Ag 14.727369 ; 15Ag 34.174361 . Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]. @UHF Final Energy: -0.49999200764259. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -0.4999920076425929; Two-Electron Energy = 0.0000000000000002; Total Energy = -0.4999920076425927. UHF NO Occupations:; HONO-0 : 1 Ag 1.0000000; LUNO+0 : 2 Ag 0.0000000; LUNO+1 : 3 Ag 0.0000000; LUNO+2 : 4 Ag 0.0000000; LUNO+3 : 5 Ag 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on psinet at Mon Apr 29 11:26:27 2019; Module time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168:7630,Energy,Energy,7630,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168,1,['Energy'],['Energy']
Energy Efficiency,3 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097.75 mb; memory requirements = 433739.41 mb. Number of ijk combinations: 50116. Com,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3385,energy,energy,3385,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,3 -0.0002486628 0.0017743273 25192; 7 7 9 -3.9688426840 0.0000610183 0.0009217340 25030; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. ***********************************************,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3172,energy,energy,3172,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,3 0.0003794817 6897; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of a,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4944,energy,energy,4944,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,3 Test #232: mp2-module ....................... Passed 104.71 sec; Start 17: cbs-xtpl-opt; 70/413 Test #62: cc44 ............................. Passed 97.23 sec; Start 149: dfomp3-2; 71/413 Test #252: omp2-5 ........................... Passed 94.12 sec; Start 246: ocepa2; 72/413 Test #381: cc-module ........................ Passed 215.27 sec; Start 373: dft-custom-dhdf; 73/413 Test #244: ocepa-grad2 ...................... Passed 91.63 sec; Start 282: opt-irc-1; 74/413 Test #75: cc5a ............................. Passed 101.97 sec; Start 281: opt14; 75/413 Test #19: cbs-xtpl-nbody ................... Passed 99.42 sec; Start 21: cc1; 76/413 Test #149: dfomp3-2 ......................... Passed 52.68 sec; Start 80: cc8b; 77/413 Test #246: ocepa2 ........................... Passed 63.98 sec; Start 158: dfomp2p5-grad2; 78/413 Test #17: cbs-xtpl-opt ..................... Passed 82.27 sec; Start 65: cc47; 79/413 Test #80: cc8b ............................. Passed 39.55 sec; Start 194: fd-freq-energy; 80/413 Test #21: cc1 .............................. Passed 62.73 sec; Start 64: cc46; 81/413 Test #281: opt14 ............................ Passed 79.81 sec; Start 35: cc19; 82/413 Test #373: dft-custom-dhdf .................. Passed 92.67 sec; Start 265: omp3-grad2; 83/413 Test #327: scf-bz2 .......................... Passed 127.64 sec; Start 109: dcft1; 84/413 Test #65: cc47 ............................. Passed 41.31 sec; Start 20: cbs-xtpl-wrapper; 85/413 Test #282: opt-irc-1 ........................ Passed 95.47 sec; Start 258: omp2p5-grad2; 86/413 Test #158: dfomp2p5-grad2 ................... Passed 61.57 sec; Start 144: dfomp2-4; 87/413 Test #35: cc19 ............................. Passed 58.05 sec; Start 319: sapt3; 88/413 Test #194: fd-freq-energy ................... Passed 85.55 sec; Start 82: cc9; 89/413 Test #64: cc46 ............................. Passed 87.60 sec; Start 153: dfomp2p5-2; 90/413 Test #207: frac-traverse .................... Passed 238.30 sec; Start 321: s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:7716,energy,energy,7716,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,3 Test #282: opt-irc-1 ........................ Passed 94.89 sec; Start 50: cc33; 100/413 Test #327: scf-bz2 .......................... Passed 118.72 sec; Start 33: cc17; 101/413 Test #391: python-pubchem ................... Passed 60.41 sec; Start 63: cc45; 102/413 Test #319: sapt3 ............................ Passed 76.94 sec; Start 56: cc39; 103/413 Test #17: cbs-xtpl-opt ..................... Passed 105.69 sec; Start 206: frac-ip-fitting; 104/413 Test #321: sapt5 ............................ Passed 74.14 sec; Start 68: cc4a; 105/413 Test #69: cc50 ............................. Passed 50.27 sec; Start 101: ci-property; 106/413 Test #247: ocepa3 ........................... Passed 59.63 sec; Start 169: dft-b3lyp; 107/413 Test #50: cc33 ............................. Passed 44.16 sec; Start 275: opt7; 108/413 Test #63: cc45 ............................. Passed 27.72 sec; Start 150: dfomp3-grad1; 109/413 Test #33: cc17 ............................. Passed 42.65 sec; Start 49: cc32; 110/413 Test #194: fd-freq-energy ................... Passed 91.14 sec; Start 299: pubchem1; 111/413 Test #294: psimrcc-fd-freq2 ................. Passed 76.06 sec; Start 379: pywrap-align-chiral; 112/413 Test #56: cc39 ............................. Passed 54.19 sec; Start 278: opt11; 113/413 Test #49: cc32 ............................. Passed 28.02 sec; Start 164: dft-grad-meta; 114/413 Test #379: pywrap-align-chiral .............. Passed 8.08 sec; Start 304: pywrap-cbs1; 115/413 Test #68: cc4a ............................. Passed 50.42 sec; Start 202: fnocc2; 116/413 Test #150: dfomp3-grad1 ..................... Passed 36.83 sec; Start 85: cdomp2-2; 117/413 Test #101: ci-property ...................... Passed 55.52 sec; Start 154: dfomp2p5-grad1; 118/413 Test #275: opt7 ............................. Passed 53.16 sec; Start 378: pywrap-align; 119/413 Test #206: frac-ip-fitting .................. Passed 71.01 sec; Start 239: nbody-he-cluster; 120/413 Test #378: pywrap-align .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:10430,energy,energy,10430,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,"3, in <module>\n import psi4 # isort:skip\n File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>\n from . import core\nImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh\n'); Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 477, in trace_task; R = retval = fun(*args, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 760, in __protected_call__; return self.run(*args, **kwargs); File ""/code/bigchem/tasks.py"", line 52, in compute; return qcop_compute(program, inp_obj, raise_exc=raise_exc, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/qcop/main.py"", line 35, in compute; return adapter.compute(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/base.py"", line 143, in compute; results, stdout = self.compute_results(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/qcengine.py"", line 42, in compute_results; qcng_output = qcng_compute(; File ""/opt/conda/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 141, in compute; pversion = parse_version(self.get_version()); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>; from . import core; ImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh. ```. **EDIT:** The issue appears ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124:1283,adapt,adapters,1283,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124,1,['adapt'],['adapters']
Energy Efficiency,"3.1809E-01 ; @CI 3: 0 -112.324883713784 -7.4606E-02 2.2146E-01 ; @CI 4: 0 -112.352310238893 -2.7427E-02 1.2530E-01 ; @CI 5: 0 -112.358631917780 -6.3217E-03 9.7660E-02 ; @CI 6: 0 -112.365095716692 -6.4638E-03 7.3202E-02 ; @CI 7: 0 -112.366948614338 -1.8529E-03 5.3732E-02 ; @CI 8: 0 -112.372824198774 -5.8756E-03 1.1022E-01 ; @CI 9: 0 -112.387582513115 -1.4758E-02 1.8337E-01 ; @CI 10: 0 -112.410692911567 -2.3110E-02 2.3866E-01 ; @CI 11: 0 -112.444565012608 -3.3872E-02 2.3335E-01 ; @CI 12: 0 -112.483195864884 -3.8631E-02 1.9437E-01 . Warning! CI diagonalization did not fully converge!. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.483195864884152; ```. However, with line 371, I get:; ```; @DF-MCSCF 30: -112.523829840588 4.2633e-14 1.05e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 31: -112.523829840588 -2.8422e-14 2.75e-11 0.00e+00 12 1 TS, DIIS. @DF-MCSCF has converged!. @DF-MCSCF Final Energy: -112.523829840588462. Computing CI Semicanonical Orbitals. ==> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -112.523829840638 -2.5765E+01 4.3475E-11 ; Warning: Norm of correction (root 0) is < 1.0E-13; @CI 1: 0 -112.523829840638 0.0000E+00 2.2840E-10 c. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.523829840637774; ```. I am not sure why reading the old guess leads to very slow convergence. It seems the old vector is not a good guess anymore: the energy from the first sigma build is way off. I actually wonder how the old vector remains to be a good guess during the MCSCF orbital optimization procedure. There is a subtle issue using H0BLOCK for the final CASCI. The MCSCF sets CI max iteration to 12 by default, which",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:4073,Energy,Energy,4073,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,1,['Energy'],['Energy']
Energy Efficiency,30 ............................. Passed 68.93 sec; Start 265: omp3-grad2; 73/413 Test #244: ocepa-grad2 ...................... Passed 64.99 sec; Start 281: opt14; 74/413 Test #58: cc40 ............................. Passed 77.29 sec; Start 20: cbs-xtpl-wrapper; 75/413 Test #19: cbs-xtpl-nbody ................... Passed 78.00 sec; Start 194: fd-freq-energy; 76/413 Test #327: scf-bz2 .......................... Passed 122.73 sec; Start 60: cc42; 77/413 Test #373: dft-custom-dhdf .................. Passed 91.90 sec; Start 246: ocepa2; 78/413 Test #282: opt-irc-1 ........................ Passed 84.38 sec; Start 319: sapt3; 79/413 Test #265: omp3-grad2 ....................... Passed 64.41 sec; Start 21: cc1; 80/413 Test #60: cc42 ............................. Passed 60.49 sec; Start 158: dfomp2p5-grad2; 81/413 Test #20: cbs-xtpl-wrapper ................. Passed 71.25 sec; Start 301: pywrap-alias; 82/413 Test #17: cbs-xtpl-opt ..................... Passed 84.79 sec; Start 294: psimrcc-fd-freq2; 83/413 Test #194: fd-freq-energy ................... Passed 71.76 sec; Start 321: sapt5; 84/413 Test #281: opt14 ............................ Passed 84.37 sec; Start 12: cbs-parser; 85/413 Test #246: ocepa2 ........................... Passed 62.00 sec; Start 64: cc46; 86/413 Test #207: frac-traverse .................... Passed 228.24 sec; Start 258: omp2p5-grad2; 87/413 Test #301: pywrap-alias ..................... Passed 54.99 sec; Start 74: cc55; 88/413 Test #319: sapt3 ............................ Passed 78.46 sec; Start 142: dfomp2-2; 89/413 Test #21: cc1 .............................. Passed 73.87 sec; Start 149: dfomp3-2; 90/413 Test #64: cc46 ............................. Passed 60.35 sec; Start 206: frac-ip-fitting; 91/413 Test #294: psimrcc-fd-freq2 ................. Passed 79.90 sec; Start 35: cc19; 92/413 Test #321: sapt5 ............................ Passed 73.63 sec; Start 79: cc8a; 93/413 Test #158: dfomp2p5-grad2 ................... Passed 84.82 sec; Start 153: dfomp2p5-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:8061,energy,energy,8061,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,"30000 -1.159784510000 ; C -0.088845540000 1.208129230000 1.696445160000 ; N -0.815424450000 3.890690130000 2.392010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3353,energy,energy,3353,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651,1,['energy'],['energy']
Energy Efficiency,"31,1.58968679653742); Chrgfield.extern.addCharge(0.51284666666666,-0.5368448001839,0.76409901660701,1.68091218839000); Chrgfield.extern.addCharge(-0.5989622639259,-0.6555196025224,0.88290988008439,1.76339755120860); Chrgfield.extern.addCharge(0.67347739012079,-0.6438897872665,0.70591173929468,1.82289520346257); Chrgfield.extern.addCharge(0.51284666666666,-0.7965191998160,-0.7640990166070,1.73166881160999); Chrgfield.extern.addCharge(-0.5989622639259,-0.6555195917165,-0.8829099272347,1.76339645099940); Chrgfield.extern.addCharge(0.85696271562354,-0.6894742074413,-0.8222861644302,1.58968574746033); Chrgfield.extern.addCharge(0.51284666666666,-0.5368448001839,-0.7640989833929,1.68091118839000); Chrgfield.extern.addCharge(-1.7440911751517,-0.6778444082834,-0.6452880727652,1.64918354900059); Chrgfield.extern.addCharge(0.67347739012079,-0.6438897925586,-0.7059118355697,1.82289425253966); psi4.set_global_option_python('EXTERN',Chrgfield.extern). Eqm = energy('PBE0'); print('Energy: '+`Eqm`); oeprop('MULLIKEN_CHARGES',bypass_scf=True); ```. ```; [output file]. --------------------------------------------------------------------------. Memory set to 256.000 MiB by Python script. *** tstart() called on machtiani1; *** at Wed Feb 10 19:35:38 2016. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RKS Reference; 8 Threads, 256 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: Cs. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.872736000000 0.000000000000 -1.246754000000 15.994914619560; H 0.288273000000 0.000000000000 -2.010853000000 1.007825032070; H 0.288273000000 0.000000000000 -0.482655000000 1.007825032070. Running in c1 symmetry. Rotational constants: A = 21.70025 B = 0.41373 C = 0.40599 [cm^-1]; Rotational const",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:2786,energy,energy,2786,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"3378250504, # ORCA; ""ft97"" : -128.850056371480 , # NWCHEM xfine xc ft97 screening 1-e14; ""bop"" : -128.892404778404, # NWCHEM; #""b86bpbe"" : , # ???; ""pw86pbe"" : -128.946484366 , # G09 iop(3/74=809); ""sogga11"" : -128.889273547 , # G09.D01 ""SOGGA11/cc-pVDZ 5D SP Int(Grid=99770)""; }. molecule ne {; 0 1; Ne; }. set df_scf_guess false; set basis cc-pvdz; set reference rks; set dft_radial_points 99; set dft_spherical_points 770; set scf_type direct. for func, val in ggaval.items():; edft = energy(func); label=func.upper(); compare_values(val, edft, 4, 'Ne: '+label) #TEST; clean(). # special flower BP86; low accuracy; # #G09 LDA-PW86; edft = energy('bp86'); compare_values(-128.903070321, edft, 3, 'Ne: BP86(PW)') #TEST; clean(). #=== from dft1 ===; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; print 2; basis sto-3g. guess core; scf_type direct; dft_spherical_points 302; dft_radial_points 99; reference rks; }. E15 = -75.2976775610; activate(h2o); edft=energy('scf', dft_functional=""b86bpbe""); compare_values(E15,edft, 4, ""H2O: B86BPBE "") #TEST. --------------------------------------------------------------------------. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:26 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:3341,energy,energy,3341,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['energy'],['energy']
Energy Efficiency,36 sec; Start 399: json-schema_0_throws; 348/401 Test #212: mints5 ........................... Passed 1.05 sec; Start 305: pywrap-molecule; 349/401 Test #394: json-v11_energy .................. Passed 3.76 sec; Start 211: mints4; 350/401 Test #171: docs-dft ......................... Passed 0.95 sec; Start 330: scf3; 351/401 Test #392: python-mints13 ................... Passed 2.38 sec; Start 380: psi4numpy-rhf-gradient; 352/401 Test #357: x2c3 ............................. Passed 2.63 sec; Start 349: tu2-ch2-energy; 353/401 Test #133: dfmp2-grad1 ...................... Passed 3.71 sec; Start 290: psimrcc-sp1; 354/401 Test #399: json-schema_0_throws ............. Passed 0.76 sec; Start 101: decontract; 355/401 Test #211: mints4 ........................... Passed 0.73 sec; Start 379: psi4numpy-rhf; 356/401 Test #170: docs-bases ....................... Passed 0.83 sec; Start 205: mcscf1; 357/401 Test #351: scf-response1 .................... Passed 1.97 sec; Start 384: python-energy; 358/401 Test #324: scf-upcast-custom-basis .......... Passed 2.26 sec; Start 204: matrix1; 359/401 Test #323: scf-guess-read1 .................. Passed 2.16 sec; Start 235: numpy-array-interface; 360/401 Test #356: x2c2 ............................. Passed 2.85 sec; Start 359: options1; 361/401 Test #328: scf-occ .......................... Passed 3.01 sec; Start 208: mints1; 362/401 Test #247: omp2-grad1 ....................... Passed 4.60 sec; Start 284: psimrcc-ccsd_t-2; 363/401 Test #400: json-schema_0_gradient ........... Passed 2.33 sec; Start 285: psimrcc-ccsd_t-3; 364/401 Test #115: ao-dfcasscf-sp ................... Passed 3.19 sec; Start 283: psimrcc-ccsd_t-1; 365/401 Test #396: json-schema_0_energy ............. Passed 3.72 sec; Start 289: psimrcc-pt2; 366/401 Test #378: psi4numpy-dfmp2 .................. Passed 2.24 sec; Start 86: cepa1; 367/401 Test #8: castup1 .......................... Passed 2.70 sec; Start 360: cubeprop-esp; 368/401 Test #118: dfcasscf-sp ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:33907,energy,energy,33907,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,360417 ; N -0.090392634757 0.011818668014 -1.930850360417 ; C 0.380407365243 0.011818668014 -0.711250360417 ; N -0.598892634757 0.005218668014 0.343749639583 ; C -1.918692634757 0.001718668014 -0.128850360417 ; N -2.920292634757 -0.021381331986 0.692349639583 ; C -4.267092634757 -0.022581331986 0.274749639583 ; O -4.572492634757 -0.014581331986 -0.897450360417 ; C -5.238992634757 -0.031881331986 1.408749639583 ; C -0.276592634757 0.147418668014 1.729149639583 ; C 0.475607365243 1.248918668014 2.154149639583 ; C 0.801207365243 1.363418668014 3.501949639583 ; C 0.368607365243 0.401118668014 4.413949639583 ; C -0.397892634757 -0.680381331986 3.982449639583 ; C -0.725892634757 -0.816981331986 2.636249639583 ; N 1.714507365243 0.032718668014 -0.333650360417 ; C 2.783407365243 -0.139581331986 -1.254650360417 ; C 2.720707365243 0.307318668014 -2.578350360417 ; C 3.838007365243 0.163518668014 -3.395850360417 ; C 5.008507365243 -0.412181331986 -2.905450360417 ; C 5.065807365243 -0.847981331986 -1.582450360417 ; C 3.960507365243 -0.717181331986 -0.749250360417 ; H -5.042492634757 -0.867781331986 2.098449639583 ; H -6.272792634757 -0.114281331986 1.044849639583 ; H -5.154492634757 0.890718668014 2.005349639583 ; H 0.788407365243 2.013318668014 1.442549639583 ; H 1.389307365243 2.214918668014 3.843749639583 ; H 0.623207365243 0.499418668014 5.467849639583 ; H -0.748492634757 -1.422181331986 4.699449639583 ; H -1.343692634757 -1.647681331986 2.292449639583 ; H 1.920307365243 -0.204681331986 0.639249639583 ; H 1.809107365243 0.759418668014 -2.978250360417 ; H 3.792107365243 0.505518668014 -4.429450360417 ; H 5.874807365243 -0.522581331986 -3.552550360417 ; H 5.980307365243 -1.297781331986 -1.198150360417 ; H 4.013407365243 -1.064281331986 0.279049639583 ; }; #memory 8 GiB; #set wcombine false; #set scf_type mem_df. energy('WB97X-D/def2-SVP'); # disk_df disk -1309.4741157753082916; # mem_df in-core -1309.4749504976896333; # mem_df in-core wcombine=false -1309.4741157748148908; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-975326494:2193,energy,energy,2193,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-975326494,1,['energy'],['energy']
Energy Efficiency,36: scf3 ............................. Passed 1.28 sec; Start 217: mints4; 388/413 Test #241: numpy-array-interface ............ Passed 0.68 sec; Start 213: mcscf3; 389/413 Test #218: mints5 ........................... Passed 1.04 sec; Start 214: mints1; 390/413 Test #366: options1 ......................... Passed 0.66 sec; Start 177: docs-dft; 391/413 Test #300: pubchem2 ......................... Passed 1.76 sec; Start 211: mcscf1; 392/413 Test #217: mints4 ........................... Passed 1.08 sec; Start 311: pywrap-molecule; 393/413 Test #214: mints1 ........................... Passed 0.71 sec; Start 310: pywrap-db3; 394/413 Test #177: docs-dft ......................... Passed 0.61 sec; Start 176: docs-bases; 395/413 Test #176: docs-bases ....................... Passed 0.54 sec; Start 162: dft-grac; 396/413 Test #310: pywrap-db3 ....................... Passed 0.68 sec; Start 210: matrix1; 397/413 Test #311: pywrap-molecule .................. Passed 1.08 sec; Start 88: cepa1; 398/413 Test #356: tu2-ch2-energy ................... Passed 3.20 sec; 399/413 Test #210: matrix1 .......................... Passed 0.66 sec; 400/413 Test #211: mcscf1 ........................... Passed 2.13 sec; 401/413 Test #212: mcscf2 ........................... Passed 3.62 sec; 402/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 4.39 sec; 403/413 Test #213: mcscf3 ........................... Passed 2.91 sec; 404/413 Test #329: scf-guess-read1 .................. Passed 4.72 sec; 405/413 Test #162: dft-grac ......................... Passed 2.31 sec; 406/413 Test #330: scf-upcast-custom-basis .......... Passed 4.85 sec; 407/413 Test #8: castup1 .......................... Passed 4.98 sec; 408/413 Test #313: rasci-h2o ........................ Passed 5.23 sec; 409/413 Test #132: dfmp2-2 .......................... Passed 5.73 sec; 410/413 Test #88: cepa1 ............................ Passed 3.93 sec; 411/413 Test #18: cbs-xtpl-func .................... Passed 1465.89 sec; 412/413 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:37472,energy,energy,37472,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['energy'],['energy']
Energy Efficiency,"375; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (JUN-CC-PVDZ AUX); Blend: DEF2-QZVPP-JKFIT; Number of shells: 18; Number of basis function: 46; Number of Cartesian functions: 50; Spherical Harmonics?: true; Max angular momentum: 2. Minimum eigenvalue in the overlap matrix is 3.6142168109E-01.; Using Symmetric Orthogonalization. SCF Guess: Orbitals guess was supplied from a previous computation. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -2.85515015411516 -2.85515e+00 1.19401e-03 ; @DF-UHF iter 1: -2.85520007568163 -4.99216e-05 7.84987e-05 DIIS; @DF-UHF iter 2: -2.85520042336024 -3.47679e-07 7.68575e-06 DIIS; @DF-UHF iter 3: -2.85520042767878 -4.31854e-09 3.18063e-07 DIIS; @DF-UHF iter 4: -2.85520042768697 -8.19389e-12 7.59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: -4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: -4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.914188 . Alpha Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Beta Occupied: . 1A -0.914188 . Beta Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.85520042768698. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8820241745672806; Two-Electron Energy = 1.0268237468803001; Total Energy = -2.8552004276869805. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000; LUNO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:8638,Energy,Energy,8638,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,"3763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1833,energy,energy,1833,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,377/412 Test #404: json-schema-1-gradient ........... Passed 16.86 sec; Start 103: decontract; 378/412 Test #396: python-mints13 ................... Passed 17.37 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 16.12 sec; Start 384: psi4numpy-rhf-gradient; 380/412 Test #223: mints10 .......................... Passed 16.21 sec; Start 355: tu2-ch2-energy; 381/412 Test #354: tu1-h2o-energy ................... Passed 16.19 sec; Start 397: python-memdfjk; 382/412 Test #411: skeletonsointegrals .............. Passed 15.60 sec; Start 215: mints3; 383/412 Test #221: mints-helper ..................... Passed 15.41 sec; Start 405: json-schema-1-properties; 384/412 Test #103: decontract ....................... Passed 15.43 sec; Start 399: json-v11-gradient; 385/412 Test #381: psi4numpy-cphf ................... Passed 14.94 sec; Start 401: json-schema-1-ghost; 386/412 Test #384: psi4numpy-rhf-gradient ........... Passed 14.67 sec; Start 379: mints12; 387/412 Test #355: tu2-ch2-energy ................... Passed 14.64 sec; Start 310: pywrap-molecule; 388/412 Test #397: python-memdfjk ................... Passed 14.35 sec; Start 388: python-energy; 389/412 Test #405: json-schema-1-properties ......... Passed 14.49 sec; Start 335: scf3; 390/412 Test #215: mints3 ........................... Passed 15.09 sec; Start 217: mints5; 391/412 Test #399: json-v11-gradient ................ Passed 14.86 sec; Start 212: mcscf3; 392/412 Test #379: mints12 .......................... Passed 14.63 sec; Start 383: psi4numpy-rhf; 393/412 Test #401: json-schema-1-ghost .............. Passed 15.23 sec; Start 210: mcscf1; 394/412 Test #310: pywrap-molecule .................. Passed 14.37 sec; Start 240: numpy-array-interface; 395/412 Test #388: python-energy .................... Passed 14.64 sec; Start 213: mints1; 396/412 Test #335: scf3 ............................. Passed 14.09 sec; Start 309: pywrap-db3; 397/412 Test #217: mints5 ........................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:36351,energy,energy,36351,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,378/412 Test #404: json-schema-1-gradient ........... Passed 16.61 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 17.11 sec; Start 215: mints3; 380/412 Test #223: mints10 .......................... Passed 16.49 sec; Start 384: psi4numpy-rhf-gradient; 381/412 Test #354: tu1-h2o-energy ................... Passed 18.71 sec; Start 401: json-schema-1-ghost; 382/412 Test #411: skeletonsointegrals .............. Passed 17.04 sec; Start 355: tu2-ch2-energy; 383/412 Test #221: mints-helper ..................... Passed 17.55 sec; Start 399: json-v11-gradient; 384/412 Test #103: decontract ....................... Passed 16.77 sec; Start 397: python-memdfjk; 385/412 Test #381: psi4numpy-cphf ................... Passed 17.48 sec; Start 405: json-schema-1-properties; 386/412 Test #215: mints3 ........................... Passed 17.22 sec; Start 379: mints12; 387/412 Test #384: psi4numpy-rhf-gradient ........... Passed 16.81 sec; Start 388: python-energy; 388/412 Test #355: tu2-ch2-energy ................... Passed 16.29 sec; Start 310: pywrap-molecule; 389/412 Test #399: json-v11-gradient ................ Passed 16.02 sec; Start 383: psi4numpy-rhf; 390/412 Test #401: json-schema-1-ghost .............. Passed 16.97 sec; Start 335: scf3; 391/412 Test #397: python-memdfjk ................... Passed 16.57 sec; Start 217: mints5; 392/412 Test #405: json-schema-1-properties ......... Passed 15.81 sec; Start 212: mcscf3; 393/412 Test #379: mints12 .......................... Passed 16.68 sec; Start 210: mcscf1; 394/412 Test #388: python-energy .................... Passed 15.79 sec; Start 213: mints1; 395/412 Test #310: pywrap-molecule .................. Passed 15.68 sec; Start 410: skeletonscf; 396/412 Test #335: scf3 ............................. Passed 16.05 sec; Start 240: numpy-array-interface; 397/412 Test #383: psi4numpy-rhf .................... Passed 16.60 sec; Start 175: docs-bases; 398/412 Test #217: mints5 ...........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:36416,energy,energy,36416,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,2,['energy'],['energy']
Energy Efficiency,382/411 Test #388: python-curve ..................... Passed 4.75 sec; Start 389: python-pubchem; 383/411 Test #359: tu6-cp-ne2 ....................... Passed 240.77 sec; Start 390: python-mints9; 384/411 Test #390: python-mints9 .................... Passed 1.89 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 2.96 sec; Start 392: python-cc54; 386/411 Test #389: python-pubchem ................... Passed 50.14 sec; Start 393: python-3-index-transforms; 387/411 Test #373: dft-custom-mgga .................. Passed 175.62 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.81 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 0.95 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.53 sec; Start 398: json-v11-gradient; 391/411 Test #393: python-3-index-transforms ........ Passed 10.54 sec; Start 399: json-schema-1-energy; 392/411 Test #398: json-v11-gradient ................ Passed 2.05 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 1.58 sec; Start 401: json-schema-1-orient; 394/411 Test #399: json-schema-1-energy ............. Passed 4.08 sec; Start 402: json-schema-1-throws; 395/411 Test #401: json-schema-1-orient ............. Passed 2.72 sec; Start 403: json-schema-1-gradient; 396/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 404: json-schema-1-properties; 397/411 Test #403: json-schema-1-gradient ........... Passed 1.76 sec; Start 405: skeleton; 398/411 Test #404: json-schema-1-properties ......... Passed 1.78 sec; Start 406: skeletonaointegrals; 399/411 Test #392: python-cc54 ...................... Passed 25.14 sec; Start 407: skeletondfmp2; 400/411 Test #405: skeleton ......................... Passed 1.92 sec; Start 408: skeletonmointegrals; 401/411 Test #406: skeletonaointegrals .............. Passed 2.03 sec; Start 4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:36602,energy,energy,36602,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency,382/411 Test #388: python-curve ..................... Passed 9.75 sec; Start 389: python-pubchem; 383/411 Test #389: python-pubchem ................... Passed 57.20 sec; Start 390: python-mints9; 384/411 Test #390: python-mints9 .................... Passed 1.93 sec; Start 391: python-mints2; 385/411 Test #391: python-mints2 .................... Passed 3.30 sec; Start 392: python-cc54; 386/411 Test #373: dft-custom-mgga .................. Passed 177.04 sec; Start 393: python-3-index-transforms; 387/411 Test #393: python-3-index-transforms ........ Passed 10.00 sec; Start 395: python-mints13; 388/411 Test #395: python-mints13 ................... Passed 1.96 sec; Start 396: python-memdfjk; 389/411 Test #396: python-memdfjk ................... Passed 0.99 sec; Start 397: json-v11-energy; 390/411 Test #397: json-v11-energy .................. Passed 3.99 sec; Start 398: json-v11-gradient; 391/411 Test #398: json-v11-gradient ................ Passed 1.80 sec; Start 399: json-schema-1-energy; 392/411 Test #399: json-schema-1-energy ............. Passed 6.76 sec; Start 400: json-schema-1-ghost; 393/411 Test #400: json-schema-1-ghost .............. Passed 2.03 sec; Start 401: json-schema-1-orient; 394/411 Test #401: json-schema-1-orient ............. Passed 3.12 sec; Start 402: json-schema-1-throws; 395/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 403: json-schema-1-gradient; 396/411 Test #403: json-schema-1-gradient ........... Passed 2.54 sec; Start 404: json-schema-1-properties; 397/411 Test #404: json-schema-1-properties ......... Passed 3.37 sec; Start 405: skeleton; 398/411 Test #405: skeleton ......................... Passed 4.85 sec; Start 406: skeletonaointegrals; 399/411 Test #406: skeletonaointegrals .............. Passed 5.08 sec; Start 407: skeletondfmp2; 400/411 Test #392: python-cc54 ...................... Passed 73.15 sec; Start 408: skeletonmointegrals; 401/411 Test #407: skeletondfmp2 .................... Passed 3.74 sec; Start 40,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:36585,energy,energy,36585,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,2,['energy'],['energy']
Energy Efficiency,3: cbs-xtpl-alpha ................... Passed 119.40 sec; Start 183: isapt1; 23/412 Test #360: tu6-cp-ne2 ....................... Passed 92.67 sec; Start 380: cc-module; 24/412 Test #387: cookbook-rohf-orb-rot ............ Passed 58.33 sec; Start 45: cc29; 25/412 Test #380: cc-module ........................ Passed 43.51 sec; Start 32: cc16; 26/412 Test #112: dcft5 ............................ Passed 143.69 sec; Start 11: cbs-delta-energy; 27/412 Test #32: cc16 ............................. Passed 37.14 sec; Start 71: cc52; 28/412 Test #11: cbs-delta-energy ................. Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:3240,energy,energy-large,3240,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy-large']
Energy Efficiency,3: cisd-h2o+-0 ...................... Passed 3.98 sec; Start 94: cisd-h2o+-1; 288/411 Test #95: cisd-h2o+-2 ...................... Passed 4.00 sec; Start 199: fnocc1; 289/411 Test #6: ao-casscf-sp ..................... Passed 3.18 sec; Start 331: scf1; 290/411 Test #339: scf-property ..................... Passed 4.12 sec; Start 262: omp3-grad1; 291/411 Test #179: fsapt2 ........................... Passed 4.96 sec; Start 265: opt1; 292/411 Test #241: ocepa-grad1 ...................... Passed 3.33 sec; Start 121: dfccdl1; 293/411 Test #99: cisd-sp-2 ........................ Passed 4.38 sec; Start 294: psimrcc-sp1; 294/411 Test #94: cisd-h2o+-1 ...................... Passed 4.20 sec; Start 351: dft-reference; 295/411 Test #331: scf1 ............................. Passed 4.43 sec; Start 355: tu3-h2o-opt; 296/411 Test #121: dfccdl1 .......................... Passed 4.09 sec; Start 130: dfmp2-2; 297/411 Test #265: opt1 ............................. Passed 5.13 sec; Start 397: json-v11-energy; 298/411 Test #351: dft-reference .................... Passed 3.24 sec; Start 246: omp2-1; 299/411 Test #262: omp3-grad1 ....................... Passed 5.74 sec; Start 136: dfmp2-grad3; 300/411 Test #294: psimrcc-sp1 ...................... Passed 4.69 sec; Start 226: mp2-1; 301/411 Test #199: fnocc1 ........................... Passed 7.10 sec; Start 120: dfccd1; 302/411 Test #246: omp2-1 ........................... Passed 1.40 sec; Start 269: opt3; 303/411 Test #130: dfmp2-2 .......................... Passed 2.10 sec; Start 243: ocepa1; 304/411 Test #355: tu3-h2o-opt ...................... Passed 2.86 sec; Start 251: omp2-grad1; 305/411 Test #136: dfmp2-grad3 ...................... Passed 1.72 sec; Start 190: fci-coverage; 306/411 Test #397: json-v11-energy .................. Passed 1.89 sec; Start 344: dfep2-1; 307/411 Test #120: dfccd1 ........................... Passed 1.33 sec; Start 134: dfmp2-grad1; 308/411 Test #251: omp2-grad1 ....................... Passed 2.95 sec; Start 388:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:27727,energy,energy,27727,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['energy'],['energy']
Energy Efficiency,3d ............................ Passed 66.58 sec; Start 380: cc-module; 23/412 Test #360: tu6-cp-ne2 ....................... Passed 75.72 sec; Start 45: cc29; 24/412 Test #387: cookbook-rohf-orb-rot ............ Passed 66.55 sec; Start 183: isapt1; 25/412 Test #380: cc-module ........................ Passed 44.91 sec; Start 32: cc16; 26/412 Test #112: dcft5 ............................ Passed 141.21 sec; Start 11: cbs-delta-energy; 27/412 Test #45: cc29 ............................. Passed 106.00 sec; Start 71: cc52; 28/412 Test #32: cc16 ............................. Passed 96.05 sec; Start 282: opt-irc-2; 29/412 Test #11: cbs-delta-energy ................. Passed 76.41 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.85 sec; Start 18: cbs-xtpl-func; 31/412 Test #282: opt-irc-2 ........................ Passed 104.33 sec; Start 182: fsapt-allterms; 32/412 Test #113: dcft6 ............................ Passed 130.50 sec; Start 194: fd-freq-energy-large; 33/412 Test #395: python-vibanalysis ............... Passed 734.63 sec; Start 196: fd-freq-gradient-large; 34/412 Test #156: dft-grad-lr3 ..................... Passed 451.76 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 428.14 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 433.43 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 185.89 sec; Start 48: cc31; 38/412 Test #196: fd-freq-gradient-large ........... Passed 270.86 sec; Start 98: cisd-opt-fd; 39/412 Test #48: cc31 ............................. Passed 55.67 sec; Start 59: cc41; 40/412 Test #321: sapt6 ............................ Passed 165.07 sec; Start 61: cc43; 41/412 Test #59: cc41 ............................. Passed 47.85 sec; Start 159: dfscf-bz2; 42/412 Test #61: cc43 ............................. Passed 35.33 sec; Start 105: dcft-grad2; 43/412 Test #18: cbs-xtpl-func .................... Passed 455.40 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:3241,energy,energy-large,3241,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy-large']
Energy Efficiency,4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097.75 mb; memory requirements = 433739.41 mb. Number of ijk combinations: 50116. Computing (T) correction... % complete total ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3423,energy,energy,3423,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,4 .......................... Passed 4.10 sec; Start 3: casscf-fzc-sp; 241/404 Test #270: opt4 ............................. Passed 7.71 sec; Start 5: casscf-sa-sp; 242/404 Test #358: tu5-sapt ......................... Passed 8.52 sec; Start 192: fd-freq-energy; 243/404 Test #3: casscf-fzc-sp .................... Passed 1.83 sec; Start 370: scf-coverage; 244/404 Test #290: psimrcc-ccsd_t-4 ................. Passed 9.60 sec; Start 135: dfmp2-grad2; 245/404 Test #5: casscf-sa-sp ..................... Passed 3.49 sec; Start 369: dft-jk; 246/404 Test #370: scf-coverage ..................... Passed 3.11 sec; Start 241: ocepa-grad1; 247/404 Test #165: dft-grad2 ........................ Passed 9.14 sec; Start 127: dfccsdt1; 248/404 Test #321: sapt-dft-api ..................... Passed 8.99 sec; Start 226: mp2-1; 249/404 Test #133: dfmp2-ecp ........................ Passed 8.06 sec; Start 285: props2; 250/404 Test #135: dfmp2-grad2 ...................... Passed 1.84 sec; Start 253: omp2p5-1; 251/404 Test #192: fd-freq-energy ................... Passed 5.20 sec; Start 255: omp2p5-grad1; 252/404 Test #101: cubeprop ......................... Passed 9.11 sec; Start 86: cepa0-grad2; 253/404 Test #127: dfccsdt1 ......................... Passed 2.46 sec; Start 295: psithon1; 254/404 Test #241: ocepa-grad1 ...................... Passed 2.76 sec; Start 83: cdomp2-1; 255/404 Test #253: omp2p5-1 ......................... Passed 1.72 sec; Start 123: dfccsd1; 256/404 Test #255: omp2p5-grad1 ..................... Passed 2.83 sec; Start 10: castup3; 257/404 Test #226: mp2-1 ............................ Passed 3.95 sec; Start 199: fnocc1; 258/404 Test #83: cdomp2-1 ......................... Passed 2.31 sec; Start 243: ocepa1; 259/404 Test #369: dft-jk ........................... Passed 5.86 sec; Start 15: cbs-xtpl-freq; 260/404 Test #86: cepa0-grad2 ...................... Passed 3.02 sec; Start 218: mints8; 261/404 Test #123: dfccsd1 .......................... Passed 2.54 sec; Start 198: fre,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:23241,energy,energy,23241,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,"4.92966e-04 DIIS; @DF-RKS iter 4: -308.55582354785412 -1.91862e-02 1.78690e-04 DIIS; @DF-RKS iter 5: -308.55841981379780 -2.59627e-03 4.24843e-05 DIIS; @DF-RKS iter 6: -308.55870799442886 -2.88181e-04 2.96248e-05 DIIS; @DF-RKS iter 7: -308.55881660865606 -1.08614e-04 1.50957e-05 DIIS; @DF-RKS iter 8: -308.55887443471090 -5.78261e-05 8.58740e-06 DIIS; @DF-RKS iter 9: -308.55891429039167 -3.98557e-05 5.23007e-06 DIIS ; @DF-RKS iter 10: -308.55893438187678 -2.00915e-05 3.97102e-06 DIIS ; @DF-RKS iter 11: -308.55897076821287 -3.63863e-05 3.09810e-06 DIIS ; @DF-RKS iter 12: -308.55899251437626 -2.17462e-05 1.29222e-06 DIIS ; @DF-RKS iter 13: -308.55899611302931 -3.59865e-06 5.63064e-07 DIIS ; @DF-RKS iter 14: -308.55899645885273 -3.45823e-07 2.29741e-07 DIIS ; Energy and wave function converged.; ```. And with `set wcombine false`:; ```...; ==> Integral Setup <==; ; DFHelper Memory: AOs need 6.464 GiB; user supplied 6.464 GiB. Using in-core AOs.; ...; ==> Iterations <==; ; Total Energy Delta E RMS |[F,P]|; ; @DF-RKS iter SAD: -306.90916690803959 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -306.98727406041530 -7.81072e-02 1.83756e-03 DIIS; @DF-RKS iter 2: -307.13667252428678 -1.49398e-01 1.47236e-03 DIIS; @DF-RKS iter 3: -307.32880507487312 -1.92133e-01 1.25216e-04 DIIS; @DF-RKS iter 4: -307.32990958370664 -1.10451e-03 7.65745e-05 DIIS; @DF-RKS iter 5: -307.33036354773054 -4.53964e-04 1.70705e-05 DIIS; @DF-RKS iter 6: -307.33039129462924 -2.77469e-05 5.09682e-06 DIIS; @DF-RKS iter 7: -307.33039390006070 -2.60543e-06 1.20852e-06 DIIS; @DF-RKS iter 8: -307.33039428809019 -3.88029e-07 4.42881e-07 DIIS; Energy and wave function converged.; ```. Both jobs were run with 8 threads and 29337MB of memory, on the same machine (An `Intel(R) Xeon(R) Gold 6126 CPU @ 2.60GHz`). As my be relevant, other settings are:; ```set {; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_v",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182:2152,Energy,Energy,2152,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182,1,['Energy'],['Energy']
Energy Efficiency,40 0.000440 0.000000; # 1 -0.166781714187105 2.912e-02 0.003397 0.008427 0.008427 0.000000; # 2 -0.170234135862397 1.036e-02 0.004356 0.011185 0.011185 0.000000; # 3 -0.170533030368765 3.269e-03 0.004712 0.012280 0.012280 0.000000; # 4 -0.170520797742350 1.364e-03 0.004743 0.012467 0.012467 0.000000; # 5 -0.170530231230523 5.667e-04 0.004748 0.012499 0.012499 0.000000; # 6 -0.170534925559369 1.852e-04 0.004747 0.012487 0.012487 0.000000; # 7 -0.170534620418104 6.567e-05 0.004746 0.012484 0.012484 0.000000; # 8 -0.170534869316551 1.694e-05 0.004747 0.012485 0.012485 0.000000; # 9 -0.170534904690435 3.137e-06 0.004747 0.012486 0.012486 0.000000; # 10 -0.170534914990853 8.802e-07 0.004747 0.012486 0.012486 0.000000; # 11 -0.170534902081469 2.450e-07 0.004747 0.012486 0.012486 0.000000; # 12 -0.170534896808386 6.485e-08 0.004747 0.012486 0.012486 0.000000; # 13 -0.170534896376153 1.539e-08 0.004747 0.012486 0.012486 0.000000. # <<< UHF 0 2; #; # Solving CC Amplitude Equations; # ------------------------------; # Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; # ---- --------------------- --------- ---------- ---------- ---------- --------; # 0 -0.151977581658240 0.000e+00 0.000000 0.000000 0.000000 0.000000; # 1 -0.162681999947581 2.938e-02 0.005213 0.000000 0.000000 0.000000; # 2 -0.166308992560651 1.058e-02 0.006944 0.000000 0.000000 0.000000; # 3 -0.166660093741321 3.466e-03 0.007594 0.000000 0.000000 0.000000; # 4 -0.166661277725523 1.547e-03 0.007724 0.000000 0.000000 0.000000; # 5 -0.166677647024115 6.654e-04 0.007758 0.000000 0.000000 0.000000; # 6 -0.166683473651993 2.053e-04 0.007754 0.000000 0.000000 0.000000; # 7 -0.166682599714116 5.860e-05 0.007753 0.000000 0.000000 0.000000; # 8 -0.166682521547769 1.601e-05 0.007754 0.000000 0.000000 0.000000; # 9 -0.166682485121206 3.774e-06 0.007754 0.000000 0.000000 0.000000; # 10 -0.166682476022498 1.246e-06 0.007754 0.000000 0.000000 0.000000; # 11 -0.166682454455366 2.896e-07 0.007754 0.000000 0.000000 0.000000; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878:3885,Energy,Energy,3885,https://psicode.org,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878,1,['Energy'],['Energy']
Energy Efficiency,401 Test #276: opt-irc-1 ........................ Passed 89.12 sec; Start 316: sapt6; 26/401 Test #17: cbs-xtpl-opt ..................... Passed 104.19 sec; Start 114: dcft9; 27/401 Test #40: cc25 ............................. Passed 450.80 sec; Start 179: isapt2; 28/401 Test #36: cc21 ............................. Passed 451.45 sec; Start 69: cc52; 29/401 Test #96: cisd-opt-fd ...................... Passed 87.68 sec; Start 74: cc6; 30/401 Test #368: dft-custom-mgga .................. Passed 62.73 sec; Start 200: frac-ip-fitting; 31/401 Test #19: cbs-xtpl-wrapper ................. Passed 62.39 sec; Start 166: dft1-alt; 32/401 Test #90: cepa-module ...................... Passed 125.09 sec; Start 343: sapt-dft2; 33/401 Test #236: ocepa-freq1 ...................... Passed 489.86 sec; Start 58: cc41; 34/401 Test #179: isapt2 ........................... Passed 46.85 sec; Start 366: dft-custom-dhdf; 35/401 Test #316: sapt6 ............................ Passed 72.26 sec; Start 11: cbs-delta-energy; 36/401 Test #25: cc13a ............................ Passed 519.27 sec; Start 27: cc13c; 37/401 Test #47: cc31 ............................. Passed 131.54 sec; Start 61: cc44; 38/401 Test #74: cc6 .............................. Passed 78.78 sec; Start 12: cbs-parser; 39/401 Test #200: frac-ip-fitting .................. Passed 56.76 sec; Start 255: omp3-3; 40/401 Test #343: sapt-dft2 ........................ Passed 53.47 sec; Start 60: cc43; 41/401 Test #166: dft1-alt ......................... Passed 54.05 sec; Start 163: dft-b3lyp; 42/401 Test #44: cc29 ............................. Passed 150.02 sec; Start 233: nbody-he-cluster; 43/401 Test #29: cc14 ............................. Passed 290.28 sec; Start 46: cc30; 44/401 Test #31: cc16 ............................. Passed 204.91 sec; Start 143: dfomp2-grad2; 45/401 Test #114: dcft9 ............................ Passed 101.63 sec; Start 57: cc40; 46/401 Test #366: dft-custom-dhdf .................. Passed 49.28 sec; Start 257: omp3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:4021,energy,energy,4021,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['energy'],['energy']
Energy Efficiency,411 Test #106: dcft-grad4 ....................... Passed 33.82 sec; Start 66: cc49; 89/411 Test #115: dcft9 ............................ Passed 26.24 sec; Start 359: tu6-cp-ne2; 90/411 Test #259: omp3-3 ........................... Passed 42.02 sec; Start 11: cbs-delta-energy; 91/411 Test #323: sapt7 ............................ Passed 33.21 sec; Start 244: ocepa2; 92/411 Test #342: soscf-dft ........................ Passed 30.10 sec; Start 276: opt11; 93/411 Test #237: nbody-he-cluster ................. Passed 35.76 sec; Start 374: dft-custom-gga; 94/411 Test #66: cc49 ............................. Passed 30.67 sec; Start 68: cc50; 95/411 Test #244: ocepa2 ........................... Passed 36.96 sec; Start 273: opt7; 96/411 Test #374: dft-custom-gga ................... Passed 28.59 sec; Start 59: cc42; 97/411 Test #276: opt11 ............................ Passed 43.58 sec; Start 156: dft-b2plyp; 98/411 Test #68: cc50 ............................. Passed 32.32 sec; Start 1: adc1; 99/411 Test #11: cbs-delta-energy ................. Passed 58.90 sec; Start 264: opt-lindep-change; 100/411 Test #59: cc42 ............................. Passed 20.74 sec; Start 173: dft-omega; 101/411 Test #359: tu6-cp-ne2 ....................... Passed 74.91 sec; Start 375: pywrap-bfs; 102/411 Test #273: opt7 ............................. Passed 36.48 sec; Start 149: dfomp3-grad2; 103/411 Test #1: adc1 ............................. Passed 24.56 sec; Start 55: cc39; 104/411 Test #156: dft-b2plyp ....................... Passed 25.95 sec; Start 34: cc19; 105/411 Test #264: opt-lindep-change ................ Passed 25.13 sec; Start 65: cc48; 106/411 Test #173: dft-omega ........................ Passed 23.97 sec; Start 379: cc-module; 107/411 Test #55: cc39 ............................. Passed 13.65 sec; Start 299: pywrap-alias; 108/411 Test #375: pywrap-bfs ....................... Passed 25.71 sec; Start 27: cc13c; 109/411 Test #149: dfomp3-grad2 ..................... Passed 26.64 sec; Start 32,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:9328,energy,energy,9328,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,411 Test #157: dft-grac ......................... Passed 1.79 sec; Start 220: mints-helper; 368/411 Test #222: mints10 .......................... Passed 2.06 sec; Start 405: skeleton; 369/411 Test #293: psimrcc-pt2 ...................... Passed 1.62 sec; Start 398: json-v11-gradient; 370/411 Test #353: tu1-h2o-energy ................... Passed 1.11 sec; Start 400: json-schema-1-ghost; 371/411 Test #406: skeletonaointegrals .............. Passed 1.69 sec; Start 404: json-schema-1-properties; 372/411 Test #298: pubchem2 ......................... Passed 1.36 sec; Start 309: pywrap-molecule; 373/411 Test #401: json-schema-1-orient ............. Passed 2.44 sec; Start 408: skeletonmointegrals; 374/411 Test #403: json-schema-1-gradient ........... Passed 2.11 sec; Start 410: skeletonsointegrals; 375/411 Test #330: scf-bs ........................... Passed 1.83 sec; Start 387: python-energy; 376/411 Test #378: mints12 .......................... Passed 1.28 sec; Start 354: tu2-ch2-energy; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.68 sec; Start 188: fci-tdm; 378/411 Test #309: pywrap-molecule .................. Passed 1.09 sec; Start 411: skeletonwavefunction; 379/411 Test #220: mints-helper ..................... Passed 2.03 sec; Start 349: sapt-sf1; 380/411 Test #398: json-v11-gradient ................ Passed 2.22 sec; Start 396: python-memdfjk; 381/411 Test #209: mcscf1 ........................... Passed 3.10 sec; Start 239: numpy-array-interface; 382/411 Test #405: skeleton ......................... Passed 3.04 sec; Start 211: mcscf3; 383/411 Test #387: python-energy .................... Passed 2.65 sec; Start 334: scf3; 384/411 Test #396: python-memdfjk ................... Passed 0.90 sec; Start 382: psi4numpy-rhf; 385/411 Test #96: cisd-h2o-clpse ................... Passed 4.24 sec; Start 308: pywrap-db3; 386/411 Test #400: json-schema-1-ghost .............. Passed 3.33 sec; Start 175: docs-dft; 387/411 Test #404: json-schema-1-properties ......... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:35454,energy,energy,35454,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['energy'],['energy']
Energy Efficiency,411 Test #4: casscf-semi ...................... Passed 2.66 sec; Start 5: casscf-sa-sp; 4/411 Test #2: adc2 ............................. Passed 42.07 sec; Start 6: ao-casscf-sp; 5/411 Test #6: ao-casscf-sp ..................... Passed 4.18 sec; Start 7: casscf-sp; 6/411 Test #5: casscf-sa-sp ..................... Passed 16.65 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 2.19 sec; Start 9: castup2; 8/411 Test #9: castup2 .......................... Passed 8.79 sec; Start 10: castup3; 9/411 Test #7: casscf-sp ........................ Passed 13.45 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 5.96 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 25.52 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 63.99 sec; Start 14: cbs-xtpl-energy; 13/411 Test #325: scf-bz2 .......................... Passed 128.53 sec; Start 15: cbs-xtpl-freq; 14/411 Test #14: cbs-xtpl-energy .................. Passed 15.43 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 11.30 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 17.01 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt ..................... Passed 51.38 sec; Start 20: cc1; 18/411 Test #13: cbs-xtpl-alpha ................... Passed 121.61 sec; Start 21: cc10; 19/411 Test #19: cbs-xtpl-wrapper ................. Passed 55.81 sec; Start 22: cc11; 20/411 Test #20: cc1 .............................. Passed 24.98 sec; Start 23: cc12; 21/411 Test #21: cc10 ............................. Passed 12.69 sec; Start 24: cc13; 22/411 Test #22: cc11 ............................. Passed 12.25 sec; Start 26: cc13b; 23/411 Test #23: cc12 ............................. Passed 9.41 sec; Start 27: cc13c; 24/411 Test #205: frac-traverse .................... Passed 226.61 sec; Start 28: cc13d; 25/411 Test #26: c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:1691,energy,energy,1691,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['energy'],['energy']
Energy Efficiency,411 Test #76: cc7 .............................. Passed 57.56 sec; Start 112: dcft6; 28/411 Test #24: cc13 ............................. Passed 44.47 sec; Start 302: pywrap-cbs1; 29/411 Test #302: pywrap-cbs1 ...................... Passed 22.59 sec; Start 13: cbs-xtpl-alpha; 30/411 Test #18: cbs-xtpl-func .................... Passed 352.83 sec; Start 320: sapt6; 31/411 Test #13: cbs-xtpl-alpha ................... Passed 65.50 sec; Start 114: dcft8; 32/411 Test #114: dcft8 ............................ Passed 30.70 sec; Start 28: cc13d; 33/411 Test #112: dcft6 ............................ Passed 124.86 sec; Start 31: cc16; 34/411 Test #31: cc16 ............................. Passed 27.72 sec; Start 155: dfscf-bz2; 35/411 Test #28: cc13d ............................ Passed 36.88 sec; Start 183: isapt2; 36/411 Test #373: dft-custom-mgga .................. Passed 180.02 sec; Start 281: opt-irc-2; 37/411 Test #320: sapt6 ............................ Passed 146.10 sec; Start 44: cc29; 38/411 Test #193: fd-freq-energy-large ............. Passed 471.67 sec; Start 97: cisd-opt-fd; 39/411 Test #44: cc29 ............................. Passed 47.89 sec; Start 379: cc-module; 40/411 Test #379: cc-module ........................ Passed 19.81 sec; Start 70: cc52; 41/411 Test #281: opt-irc-2 ........................ Passed 78.54 sec; Start 347: sapt-dft2; 42/411 Test #97: cisd-opt-fd ...................... Passed 100.96 sec; Start 25: cc13a; 43/411 Test #181: fsapt-allterms ................... Passed 615.37 sec; Start 113: dcft7; 44/411 Test #155: dfscf-bz2 ........................ Passed 142.35 sec; Start 205: frac-traverse; 45/411 Test #183: isapt2 ........................... Passed 139.06 sec; Start 316: sapt2; 46/411 Test #70: cc52 ............................. Passed 58.41 sec; Start 318: sapt4; 47/411 Test #347: sapt-dft2 ........................ Passed 116.92 sec; Start 325: scf-bz2; 48/411 Test #325: scf-bz2 .......................... Passed 118.46 sec; Start 386: cookbook-roh,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:3740,energy,energy-large,3740,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy-large']
Energy Efficiency,412 Test #169: dft1 ............................. Passed 111.17 sec; Start 76: cc6; 57/412 Test #116: dcft9 ............................ Passed 29.49 sec; Start 28: cc13c; 58/412 Test #17: cbs-xtpl-opt ..................... Passed 65.63 sec; Start 280: opt14; 59/412 Test #28: cc13c ............................ Passed 20.50 sec; Start 31: cc15; 60/412 Test #281: opt-irc-1 ........................ Passed 90.19 sec; Start 231: mp2-module; 61/412 Test #372: dft-custom-dhdf .................. Passed 101.66 sec; Start 70: cc51; 62/412 Test #194: fd-freq-energy-large ............. Passed 554.36 sec; Start 19: cbs-xtpl-nbody; 63/412 Test #31: cc15 ............................. Passed 28.61 sec; Start 318: sapt3; 64/412 Test #76: cc6 .............................. Passed 69.60 sec; Start 108: dcft1; 65/412 Test #326: scf-bz2 .......................... Passed 138.38 sec; Start 293: psimrcc-fd-freq2; 66/412 Test #108: dcft1 ............................ Passed 21.44 sec; Start 193: fd-freq-energy; 67/412 Test #182: fsapt-allterms ................... Passed 599.68 sec; Start 320: sapt5; 68/412 Test #19: cbs-xtpl-nbody ................... Passed 51.30 sec; Start 157: dfomp2p5-grad2; 69/412 Test #280: opt14 ............................ Passed 85.55 sec; Start 150: dfomp3-grad2; 70/412 Test #70: cc51 ............................. Passed 72.72 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 79.59 sec; Start 245: ocepa2; 72/412 Test #206: frac-traverse .................... Passed 233.30 sec; Start 261: omp3-4; 73/412 Test #318: sapt3 ............................ Passed 83.47 sec; Start 251: omp2-5; 74/412 Test #157: dfomp2p5-grad2 ................... Passed 32.79 sec; Start 20: cbs-xtpl-wrapper; 75/412 Test #150: dfomp3-grad2 ..................... Passed 42.64 sec; Start 62: cc44; 76/412 Test #193: fd-freq-energy ................... Passed 70.15 sec; Start 243: ocepa-grad2; 77/412 Test #293: psimrcc-fd-freq2 ................. Passed 76.91 sec; Start 20,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:6555,energy,energy,6555,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,"413,-0.8222861644302,1.58968574746033); Chrgfield.extern.addCharge(0.51284666666666,-0.5368448001839,-0.7640989833929,1.68091118839000); Chrgfield.extern.addCharge(-1.7440911751517,-0.6778444082834,-0.6452880727652,1.64918354900059); Chrgfield.extern.addCharge(0.67347739012079,-0.6438897925586,-0.7059118355697,1.82289425253966); psi4.set_global_option_python('EXTERN',Chrgfield.extern). Eqm = energy('PBE0'); print('Energy: '+`Eqm`); oeprop('MULLIKEN_CHARGES',bypass_scf=True); ```. ```; [output file]. --------------------------------------------------------------------------. Memory set to 256.000 MiB by Python script. *** tstart() called on machtiani1; *** at Wed Feb 10 19:35:38 2016. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RKS Reference; 8 Threads, 256 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: Cs. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.872736000000 0.000000000000 -1.246754000000 15.994914619560; H 0.288273000000 0.000000000000 -2.010853000000 1.007825032070; H 0.288273000000 0.000000000000 -0.482655000000 1.007825032070. Running in c1 symmetry. Rotational constants: A = 21.70025 B = 0.41373 C = 0.40599 [cm^-1]; Rotational constants: A = 650557.09010 B = 12403.20112 C = 12171.15193 [MHz]; Nuclear repulsion = 9.147558094236395. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: 6-31G*; Number of shells: 10; Number of basis function: 19; Number of Cartesian functions: 19; Spherical Harmonics?: false; Max angular moment",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:3389,charge,charge,3389,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['charge'],['charge']
Energy Efficiency,"41997 (eV); 	2 A state: 0.4215815 (a.u.), 11.4718175 (eV); 	3 A state: 0.4538994 (a.u.), 12.3512305 (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1569,energy,energy,1569,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,41: ocepa-freq1 ...................... Passed 322.81 sec; Start 13: cbs-xtpl-alpha; 17/412 Test #25: cc13 ............................. Passed 164.06 sec; Start 179: fsapt1; 18/412 Test #30: cc14 ............................. Passed 144.79 sec; Start 112: dcft5; 19/412 Test #115: dcft8 ............................ Passed 195.18 sec; Start 29: cc13d; 20/412 Test #36: cc2 .............................. Passed 211.45 sec; Start 360: tu6-cp-ne2; 21/412 Test #29: cc13d ............................ Passed 59.38 sec; Start 387: cookbook-rohf-orb-rot; 22/412 Test #13: cbs-xtpl-alpha ................... Passed 119.40 sec; Start 183: isapt1; 23/412 Test #360: tu6-cp-ne2 ....................... Passed 92.67 sec; Start 380: cc-module; 24/412 Test #387: cookbook-rohf-orb-rot ............ Passed 58.33 sec; Start 45: cc29; 25/412 Test #380: cc-module ........................ Passed 43.51 sec; Start 32: cc16; 26/412 Test #112: dcft5 ............................ Passed 143.69 sec; Start 11: cbs-delta-energy; 27/412 Test #32: cc16 ............................. Passed 37.14 sec; Start 71: cc52; 28/412 Test #11: cbs-delta-energy ................. Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:2681,energy,energy,2681,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,"42) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module (#1873) ; - Remove debugging and timing code from psimrcc (#1879, #1901) ; - Add cython (#1889) ; - Update tolerances for mkl 2020.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:1457,charge,charge,1457,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['charge'],['charge']
Energy Efficiency,"44 8A -2.321030 9A -2.321028 ; 10A -2.321027 11A -1.493580 12A -1.493579 ; 13A -1.493578 14A -0.152702 15A -0.050078 ; 16A -0.050072 17A -0.050066 . Virtual: . 18A 0.078304 19A 0.097245 20A 0.097248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6638,Energy,Energy,6638,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of threads: 1; Number of ato",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6977,Energy,Energy,6977,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"4640870842 3.23041e-02 2.57661e-02 DIIS; @DF-RKS iter 3: -76.33537346510494 -8.54271e-02 5.64978e-04 DIIS; @DF-RKS iter 4: -76.33541666733151 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system ti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8128,Energy,Energy,8128,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,"4942958 -1 -195.27629857 1 -76.47288217 1; HEAVY28-11 0.8000 0.1821 -0.6179 -2.5853 -656.12844746 -1 -195.27629857 1 -460.85185870 1; HEAVY28-12 1.0400 0.4064 -0.6336 -2.6510 -2770.12088792 -1 -195.27629857 1 -2574.84394169 1; HEAVY28-13 1.2900 0.0679 -1.2221 -5.1133 -493.68358516 -1 -195.27629857 1 -298.40717839 1; HEAVY28-14 0.7000 0.1020 -0.5980 -2.5019 -464.58500012 -1 -195.27629857 1 -269.30853894 1; HEAVY28-15 1.3000 0.2426 -1.0574 -4.4240 -484.24282026 -1 -242.12121680 2; HEAVY28-16 1.7000 1.7156 0.0156 0.0653 -318.59683296 -1 -242.12121680 1 -76.47288217 1; HEAVY28-17 1.1400 0.7054 -0.4346 -1.8184 -641.56356522 -1 -242.12121680 1 -399.44122431 1; HEAVY28-18 2.2000 2.1130 -0.0870 -0.3641 -702.97644274 -1 -242.12121680 1 -460.85185870 1; HEAVY28-19 2.0700 1.9609 -0.1091 -0.4563 -2816.96828346 -1 -242.12121680 1 -2574.84394169 1; HEAVY28-20 1.6400 1.1654 -0.4746 -1.9859 -540.53025230 -1 -242.12121680 1 -298.40717839 1; HEAVY28-22 0.5800 -0.0821 -0.6621 -2.7702 -538.61694704 -1 -269.30853894 2; HEAVY28-24 0.5000 -0.0901 -0.5901 -2.4690 -668.74961966 -1 -269.30853894 1 -399.44122431 1; HEAVY28-25 1.2400 0.7192 -0.5208 -2.1790 -730.16154377 -1 -269.30853894 1 -460.85185870 1; HEAVY28-26 1.2400 0.7729 -0.4671 -1.9542 -2844.15371239 -1 -269.30853894 1 -2574.84394169 1; HEAVY28-27 0.8400 0.2215 -0.6185 -2.5876 -567.71607039 -1 -269.30853894 1 -298.40717839 1; --------------------------------------------------------------------------------------------------------------------------; Minimal Dev 0.0156 0.0653; Maximal Dev -1.2548 -5.2502; Mean Signed Dev -0.5805 -2.4287; Mean Absolute Dev 0.5965 2.4956; RMS Dev 0.6837 2.8605; --------------------------------------------------------------------------------------------------------------------------; ```; when col ""Energy Calc"" should match http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN30/funcsGMTKN30/HEAVY28B3LYP.html. Sorry, that's D2 vs D3, will post correction shortly. Just wanted to make materials available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/795#issuecomment-326351281:3152,Energy,Energy,3152,https://psicode.org,https://github.com/psi4/psi4/pull/795#issuecomment-326351281,1,['Energy'],['Energy']
Energy Efficiency,"4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE...........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:27 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7589,Energy,Energy,7589,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"4e-04 DIIS; @RHF iter 5: -76.01729299826569 -6.80560e-05 1.02319e-04 DIIS; @RHF iter 6: -76.01729647642517 -3.47816e-06 1.57456e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total ti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6232,Energy,Energy,6232,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,4numpy-cphf; 370/404 Test #157: dft-grac ......................... Passed 1.29 sec; Start 293: psimrcc-pt2; 371/404 Test #102: decontract ....................... Passed 1.00 sec; Start 289: psimrcc-ccsd_t-3; 372/404 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.26 sec; Start 287: psimrcc-ccsd_t-1; 373/404 Test #210: mcscf2 ........................... Passed 1.25 sec; Start 404: json-schema-1-properties; 374/404 Test #333: scf2 ............................. Passed 1.18 sec; Start 309: pywrap-molecule; 375/404 Test #380: psi4numpy-cphf ................... Passed 1.08 sec; Start 378: mints12; 376/404 Test #381: psi4numpy-dfmp2 .................. Passed 1.45 sec; Start 220: mints-helper; 377/404 Test #293: psimrcc-pt2 ...................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 378/404 Test #298: pubchem2 ......................... Passed 1.40 sec; Start 214: mints3; 379/404 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.22 sec; Start 387: python-energy; 380/404 Test #404: json-schema-1-properties ......... Passed 1.02 sec; Start 402: json-schema-1-throws; 381/404 Test #383: psi4numpy-rhf-gradient ........... Passed 0.98 sec; Start 188: fci-tdm; 382/404 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.18 sec; Start 396: python-memdfjk; 383/404 Test #309: pywrap-molecule .................. Passed 1.10 sec; Start 334: scf3; 384/404 Test #378: mints12 .......................... Passed 1.13 sec; Start 211: mcscf3; 385/404 Test #220: mints-helper ..................... Passed 1.23 sec; Start 209: mcscf1; 386/404 Test #214: mints3 ........................... Passed 1.05 sec; Start 382: psi4numpy-rhf; 387/404 Test #402: json-schema-1-throws ............. Passed 0.57 sec; Start 308: pywrap-db3; 388/404 Test #387: python-energy .................... Passed 0.81 sec; Start 239: numpy-array-interface; 389/404 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 364: options1; 390/404 Test #334: scf3 ............................. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:35357,energy,energy,35357,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['energy'],['energy']
Energy Efficiency,5 Test #86: cdomp2-2 ......................... Passed 86.06 sec; Start 128: dfccsd-grad1; 28/415 Test #181: fsapt1 ........................... Passed 520.50 sec; Start 50: cc32; 29/415 Test #15: cbs-xtpl-freq .................... Passed 68.74 sec; Start 112: dcft3; 30/415 Test #7: casscf-sp ........................ Passed 52.30 sec; Start 94: ci-multi; 31/415 Test #16: cbs-xtpl-gradient ................ Passed 43.54 sec; Start 3: casscf-fzc-sp; 32/415 Test #50: cc32 ............................. Passed 47.12 sec; Start 210: gibbs; 33/415 Test #129: dfccsd-t-grad1 ................... Passed 103.60 sec; Start 149: dfomp3-1; 34/415 Test #309: pywrap-alias ..................... Passed 141.43 sec; Start 346: scf5; 35/415 Test #94: ci-multi ......................... Passed 59.86 sec; Start 317: pywrap-db1; 36/415 Test #112: dcft3 ............................ Passed 75.08 sec; Start 136: dfmp2-ecp; 37/415 Test #128: dfccsd-grad1 ..................... Passed 94.95 sec; Start 263: omp2p5-2; 38/415 Test #11: cbs-delta-energy ................. Passed 615.43 sec; Start 102: ci-property; 39/415 Test #3: casscf-fzc-sp .................... Passed 55.64 sec; Start 256: omp2-2; 40/415 Test #210: gibbs ............................ Passed 51.08 sec; Start 403: python-cc54; 41/415 Test #136: dfmp2-ecp ........................ Passed 32.87 sec; Start 323: rasscf-sp; 42/415 Test #149: dfomp3-1 ......................... Passed 52.09 sec; Start 14: cbs-xtpl-energy; 43/415 Test #346: scf5 ............................. Passed 46.11 sec; Start 5: casscf-sa-sp; 44/415 Test #317: pywrap-db1 ....................... Passed 41.80 sec; Start 85: cdomp2-1; 45/415 Test #263: omp2p5-2 ......................... Passed 30.33 sec; Start 179: extern1; 46/415 Test #102: ci-property ...................... Passed 28.56 sec; Start 386: pywrap-bfs; 47/415 Test #256: omp2-2 ........................... Passed 32.02 sec; Start 127: dfccsdl1; 48/415 Test #371: x2c1 ............................. Passed 130.82 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:3921,energy,energy,3921,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,"5, -1.00837593, -0.99842865],; [-0.41241445, -1.33766393, 0.12858235],; [ 0.35232355, -0.92987693, 1.24440635],; [-0.00657745, -1.20355993, -2.13075665],; [-0.14947445, -1.00267793, 2.20235835],; [ 2.42478555, -0.18029193, 1.17515335],; [ 2.85402655, 2.28807407, 1.17704435],; [ 3.91722855, 3.22559407, 1.59750135],; [ 4.48916555, 3.69442507, 0.51191135],; [ 3.90246455, 3.14933007, -0.59139665],; [ 2.91594555, 2.34754307, -0.13364465],; [ 5.41812755, 4.46140507, 0.48393635],; [ 2.40009555, 1.78156907, -0.90001365],; [ 2.44725055, 1.74621807, 2.02374335]]); # net_charge = -1; net_charge = 0. bigmol = psi4.core.Molecule.from_arrays(geom=xyz, molecular_charge=net_charge, elez=atomic_numbers). theory = ""wB97X/6-31G*""; psi4.set_options({; 'scf_type': 'disk_DF',; #'scf_type': 'mem_DF',; ""guess"": ""sad"",; ""maxiter"": 20,; }); psi4.set_memory(""10.0 gib""); E = psi4.energy(theory, molecule=bigmol); print(E); psi4.compare_values(-1023.23875023455, E, 6, ""matches disk_df""); ```. mem_df; ```; Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -946.81473095199294 -9.46815e+02 0.00000e+00; @DF-RKS iter 1: -853.16313969519842 9.36516e+01 2.49164e-02 DIIS; @DF-RKS iter 2: 205.11141330156607 1.05827e+03 9.66100e-02 DIIS; @DF-RKS iter 3: 51.44551681524645 -1.53666e+02 8.25708e-02 DIIS; @DF-RKS iter 4: 32.72889827880818 -1.87166e+01 8.07939e-02 DIIS; @DF-RKS iter 5: 30.01651359226875 -2.71238e+00 8.03146e-02 DIIS; @DF-RKS iter 6: 20.71735979257003 -9.29915e+00 7.94275e-02 DIIS; @DF-RKS iter 7: 20.19073835153742 -5.26621e-01 7.92802e-02 DIIS; @DF-RKS iter 8: 19.59649838936669 -5.94240e-01 7.91696e-02 DIIS; @DF-RKS iter 9: 18.59642511624830 -1.00007e+00 7.89379e-02 DIIS; @DF-RKS iter 10: 18.52526838311312 -7.11567e-02 7.89828e-02 DIIS; @DF-RKS iter 11: 17.83802341987538 -6.87245e-01 7.89175e-02 DIIS; @DF-RKS iter 12: 36.67699286161224 1.88390e+01 8.41411e-02 DIIS; @DF-RKS iter 13: 40.04638640903951 3.36939e+00 8.47035e-02 DIIS; @DF-RKS iter 14: 40.73405734710366 6.87671e-01 8.49685e-02 DIIS;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-900816518:2233,Energy,Energy,2233,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-900816518,1,['Energy'],['Energy']
Energy Efficiency,5-grad2 ..................... Passed 20.64 sec; Start 107: dcft1; 180/411 Test #72: cc54 ............................. Passed 15.94 sec; Start 285: props2; 181/411 Test #32: cc17 ............................. Passed 18.71 sec; Start 242: ocepa-grad2; 182/411 Test #366: dft-smoke ........................ Passed 13.42 sec; Start 101: cubeprop; 183/411 Test #238: nbody-intermediates .............. Passed 15.61 sec; Start 296: psithon2; 184/411 Test #324: sapt8 ............................ Passed 13.51 sec; Start 133: dfmp2-ecp; 185/411 Test #16: cbs-xtpl-gradient ................ Passed 20.70 sec; Start 14: cbs-xtpl-energy; 186/411 Test #107: dcft1 ............................ Passed 12.94 sec; Start 177: extern2; 187/411 Test #285: props2 ........................... Passed 12.15 sec; Start 73: cc55; 188/411 Test #101: cubeprop ......................... Passed 10.22 sec; Start 105: dcft-grad3; 189/411 Test #73: cc55 ............................. Passed 6.89 sec; Start 148: dfomp3-grad1; 190/411 Test #14: cbs-xtpl-energy .................. Passed 9.50 sec; Start 142: dfomp2-4; 191/411 Test #242: ocepa-grad2 ...................... Passed 18.47 sec; Start 200: fnocc2; 192/411 Test #133: dfmp2-ecp ........................ Passed 10.76 sec; Start 207: gibbs; 193/411 Test #296: psithon2 ......................... Passed 13.53 sec; Start 393: python-3-index-transforms; 194/411 Test #105: dcft-grad3 ....................... Passed 10.78 sec; Start 194: fd-freq-gradient; 195/411 Test #177: extern2 .......................... Passed 15.79 sec; Start 77: cc8; 196/411 Test #148: dfomp3-grad1 ..................... Passed 13.18 sec; Start 125: dfccsd-grad1; 197/411 Test #393: python-3-index-transforms ........ Passed 9.92 sec; Start 275: opt9; 198/411 Test #207: gibbs ............................ Passed 17.38 sec; Start 84: cdomp2-2; 199/411 Test #142: dfomp2-4 ......................... Passed 20.28 sec; Start 23: cc12; 200/411 Test #194: fd-freq-gradient ................. Passed 18.11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:17738,energy,energy,17738,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,5/413 Test #144: dfomp2-4 ......................... Passed 62.74 sec; Start 142: dfomp2-2; 86/413 Test #67: cc49 ............................. Passed 54.95 sec; Start 83: cc9a; 87/413 Test #79: cc8a ............................. Passed 53.51 sec; Start 282: opt-irc-1; 88/413 Test #158: dfomp2p5-grad2 ................... Passed 80.48 sec; Start 20: cbs-xtpl-wrapper; 89/413 Test #81: cc8c ............................. Passed 52.58 sec; Start 17: cbs-xtpl-opt; 90/413 Test #21: cc1 .............................. Passed 86.44 sec; Start 78: cc8; 91/413 Test #82: cc9 .............................. Passed 67.08 sec; Start 34: cc18; 92/413 Test #142: dfomp2-2 ......................... Passed 51.07 sec; Start 319: sapt3; 93/413 Test #373: dft-custom-dhdf .................. Passed 90.03 sec; Start 321: sapt5; 94/413 Test #83: cc9a ............................. Passed 56.13 sec; Start 391: python-pubchem; 95/413 Test #265: omp3-grad2 ....................... Passed 78.67 sec; Start 194: fd-freq-energy; 96/413 Test #34: cc18 ............................. Passed 48.82 sec; Start 247: ocepa3; 97/413 Test #78: cc8 .............................. Passed 62.52 sec; Start 69: cc50; 98/413 Test #20: cbs-xtpl-wrapper ................. Passed 78.50 sec; Start 294: psimrcc-fd-freq2; 99/413 Test #282: opt-irc-1 ........................ Passed 94.89 sec; Start 50: cc33; 100/413 Test #327: scf-bz2 .......................... Passed 118.72 sec; Start 33: cc17; 101/413 Test #391: python-pubchem ................... Passed 60.41 sec; Start 63: cc45; 102/413 Test #319: sapt3 ............................ Passed 76.94 sec; Start 56: cc39; 103/413 Test #17: cbs-xtpl-opt ..................... Passed 105.69 sec; Start 206: frac-ip-fitting; 104/413 Test #321: sapt5 ............................ Passed 74.14 sec; Start 68: cc4a; 105/413 Test #69: cc50 ............................. Passed 50.27 sec; Start 101: ci-property; 106/413 Test #247: ocepa3 ........................... Passed 59.63 sec; Start 169: df,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:9121,energy,energy,9121,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,5030; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 25349; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; **************************************************,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3250,energy,energy,3250,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,"543745, 0.5345655452, 3.830479889], [-0.1642482084, -4.8870667374, -1.3346361942], [-0.4246651863, -3.3287027858, -2.1574341496], [7.835478458, 0.065926779, -0.9217655086], [0.2801993817, 0.956672257, 2.7286499313], [1.7470023071, 1.3598969122, 3.3460428246], [-3.829442847, -2.5711178289, 0.8127942519], [4.203697503, 3.8694521886, 2.5508165156], [2.7646312712, -0.6072610943, 2.0709963606], [1.8229417322, 3.9989502928, 2.3471195754], [2.8732914, 3.4283145737, -0.4584330667], [1.4232745887, 4.3450459859, -0.0530997127], [4.329620552, 2.5614196883, 1.3839267312], [2.8817086248, 6.0173146394, 1.1617793827], [3.6252554546, 2.2719743014, 2.9830155292], [-7.4434855186, 0.4410405616, -2.5890974162], [3.2010845698, 5.9140326326, -0.5704640658], [0.5088426041, 2.4245642089, 0.9265473367], [6.0893550874, 2.0422571744, -0.1530407297], [-1.862134336, 0.4034738095, 2.2937204065], [-1.4138901004, 0.644406742, 0.0455352137], [-0.7095180298, -1.2632553768, -1.1676109686], [-0.6142721952, -3.2938004635, -0.1006904859], [1.97840289, -3.6814323378, 0.1492620683], [-0.9437197295, 0.7707072186, -2.1950994456], [3.0305830988, -0.7745567723, -0.0274639225], [2.1393686347, 1.0406513402, -0.6640047053], [2.7240826757, -0.0248994808, -1.0779442116], [0.9643448844, 1.7016817799, 2.7995701586], [-1.1897838302, -1.4434141329, 1.1398546593], [-4.6504826146, 0.9351211172, 3.0300907006], [0.5539503234, 2.3790185178, -3.9384263268], [-6.3763829627, 0.5740180369, 0.5055913646], [-5.5478006374, -0.1317291531, -2.5089137294], [3.352889237, -3.2422161861, 1.8787720858]]]); }. psi4.set_memory(""8 GB""); psi4.set_num_threads(4); types = np.array(data[""atom_names""])[data[""atom_types""]]; buff = [""0 1""]; for tt, cc in zip(types, data[""coords""][0]):; buff.append("" "".join([tt] + [str(x) for x in cc])); psi4.geometry(""\n"".join(buff)). G, wfn = psi4.gradient(""WB97M-D3BJ/def2-TZVPPD"", return_wfn=True); energy = wfn.energy(); wfn.gradient().print_out(); gradient = np.array(G). # post process energy and gradient; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970#issuecomment-1565673938:5705,energy,energy,5705,https://psicode.org,https://github.com/psi4/psi4/issues/2970#issuecomment-1565673938,3,['energy'],['energy']
Energy Efficiency,"5589; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 19.8770; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 373; Number of basis functions: 1133; Number of Cartesian functions: 1345; Spherical Harmonics?: true; Max angular momentum: 4. Cached 100.0% of DFT collocation blocks in 2.950 [GiB]. Minimum eigenvalue in the overlap matrix is 1.9770003531E-04.; Reciprocal condition number of the overlap matrix is 2.3108928958E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Orbitals guess was supplied from a previous computation. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 451 451 50 50 50 0; -------------------------------------------------------; Total 451 451 50 50 50 0; -------------------------------------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter 0: -756.64880960182893 -7.56649e+02 4.38886e-03; @DF-RKS iter 1: -756.47890146930581 1.69908e-01 5.20818e-03 DIIS; @DF-RKS iter 2: -697.36076163484927 5.91181e+01 1.70568e-02 DIIS; @DF-RKS iter 3: -757.82971261323712 -6.04690e+01 5.09847e-03 DIIS; @DF-RKS iter 4: -757.19091118720712 6.38801e-01 4.14460e-03 SOKS, nmicro=40; Did not take a SOSCF step, using normal convergence methods; @DF-RKS iter 5: -753.42073594199746 3.77018e+00 5.11526e-03 DIIS; Did not take a SOSCF step, using normal convergence methods; @DF-RKS iter 6: -757.34771004358015 -3.92697e+00 4.08067e-03 DIIS; @DF-RKS iter 7: -759.80182889745129 -2.45412e+00 2.00291e-03 SOKS, nmicro=40; @DF-RKS iter 8: -758.44571377525983 1.35612e+00 2.42949e-03 SOKS, nmicro=40; ```; This SCF converged, and it is continuing on, but this is the same trend as before. It will manage to converge a few more, but eventually it will fail and hit the 100 iteration limit. Is there a way to strictly force SAD?. I used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-952880914:4761,Energy,Energy,4761,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-952880914,1,['Energy'],['Energy']
Energy Efficiency,"568849893678 -9.80996e-08 1.09058e-05 DIIS; @DF-UHF iter 3: -2.83568850042063 -1.48385e-09 4.55093e-08 DIIS; @DF-UHF iter 4: -2.83568850042064 -1.28786e-14 1.52740e-10 DIIS; @DF-UHF iter 5: -2.83568850042064 -8.88178e-16 9.96306e-12 DIIS; @DF-UHF iter 6: -2.83568850042064 2.22045e-15 2.48440e-16 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: 4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: 4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.903583 . Alpha Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Beta Occupied: . 1A -0.903583 . Beta Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.83568850042064. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8642104942204210; Two-Electron Energy = 1.0285219937997820; Total Energy = -2.8356885004206389. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000. Computation Completed. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SCF //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. => Loading Basis Set <=. Name: JUN-CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 46 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/jun-cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:5089,Energy,Energy,5089,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,"570008684 7.96382e-07 6.89584e-08 DIIS; @RHF iter 9: -24.23681570008748 -6.39488e-13 7.72849e-09 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -8.185320 2Ag -0.873753. Virtual:. 1B3u -0.275716 1B1u -0.275716 1B2u -0.275716; 3Ag -0.110068 2B1u -0.075684 2B2u -0.075684; 2B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7006,Energy,Energy,7006,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,"570008748 -6.39488e-13 7.72849e-09 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -8.185320 2Ag -0.873753. Virtual:. 1B3u -0.275716 1B1u -0.275716 1B2u -0.275716; 3Ag -0.110068 2B1u -0.075684 2B2u -0.075684; 2B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7075,Energy,Energy,7075,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,"57466 -1.23056e+02 5.15651e-01; @RKS iter 2: -123.10132047688978 -4.49697e-02 6.79382e-01 DIIS; @RKS iter 3: -128.77814169956412 -5.67682e+00 1.11592e-01 DIIS; @RKS iter 4: -128.89363525981292 -1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLY",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12393,Energy,Energy,12393,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP..........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:28 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12623,Energy,Energy,12623,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,5: cc13 ............................. Passed 164.06 sec; Start 179: fsapt1; 18/412 Test #30: cc14 ............................. Passed 144.79 sec; Start 112: dcft5; 19/412 Test #115: dcft8 ............................ Passed 195.18 sec; Start 29: cc13d; 20/412 Test #36: cc2 .............................. Passed 211.45 sec; Start 360: tu6-cp-ne2; 21/412 Test #29: cc13d ............................ Passed 59.38 sec; Start 387: cookbook-rohf-orb-rot; 22/412 Test #13: cbs-xtpl-alpha ................... Passed 119.40 sec; Start 183: isapt1; 23/412 Test #360: tu6-cp-ne2 ....................... Passed 92.67 sec; Start 380: cc-module; 24/412 Test #387: cookbook-rohf-orb-rot ............ Passed 58.33 sec; Start 45: cc29; 25/412 Test #380: cc-module ........................ Passed 43.51 sec; Start 32: cc16; 26/412 Test #112: dcft5 ............................ Passed 143.69 sec; Start 11: cbs-delta-energy; 27/412 Test #32: cc16 ............................. Passed 37.14 sec; Start 71: cc52; 28/412 Test #11: cbs-delta-energy ................. Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:2802,energy,energy,2802,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,"6 . Virtual: . 18A 0.078304 19A 0.097245 20A 0.097248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	sy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6792,Energy,Energy,6792,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"6.02663274) does not match (-176.02663273) to atol=1e-06 by difference (100.00000000).', return_message = False, quiet = False. def _psi4_true_raise_handler(passfail, label, message, return_message=False, quiet=False):; """"""Handle comparison result by printing to screen, printing to Psi output file, raising TestComparisonError, and (incidently) returning.""""""; ; width = 86; if passfail:; if not quiet:; core.print_out(f' {label:.<{width}}PASSED\n'); print(f' {label:.<{width}}PASSED'); sys.stdout.flush(); else:; core.print_out(f' {label:.<{width}}FAILED'); print(f' {label:.<{width}}FAILED'); sys.stdout.flush(); > raise TestComparisonError(message); E psi4.driver.p4util.exceptions.TestComparisonError: 	SCF energy: computed value (-76.02663274) does not match (-176.02663273) to atol=1e-06 by difference (100.00000000). stage/lib/psi4/driver/p4util/testing.py:195: TestComparisonError; ----------------------------------------------------------------------------------------------------------- Captured stdout call ------------------------------------------------------------------------------------------------------------; SCF energy............................................................................FAILED; ____________________________________________________________________________________________________________ test_tu1_h2o_energy ____________________________________________________________________________________________________________. @ctest_labeler(""tutorial;quick;smoke""); def test_tu1_h2o_energy():; > ctest_runner(__file__). stage/lib/psi4/tests/tu1-h2o-energy/test_input.py:5: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. inputdatloc = '/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/tests/tu1-h2o-energy/test_input.py', extra_infiles = None, outfiles = None. def cte",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:4254,energy,energy,4254,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['energy'],['energy']
Energy Efficiency,"6.25426884215133 -7.62543e+01 8.25166e-02 ; @DF-RKS iter 1: -76.28225054480332 -2.79817e-02 2.00561e-02 ; @DF-RKS iter 2: -76.24994640870842 3.23041e-02 2.57661e-02 DIIS; @DF-RKS iter 3: -76.33537346510494 -8.54271e-02 5.64978e-04 DIIS; @DF-RKS iter 4: -76.33541666733151 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:7986,Energy,Energy,7986,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,"60 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of threads: 1; Number of atoms: 3; Number of AO shells: 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6401,Energy,Energy,6401,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"60000000 ; C -0.250620000000 3.033490000000 -1.830910000000 ; C 0.367510000000 3.482590000000 -0.594640000000 ; C 1.749690000000 3.033490000000 -0.594640000000 ; C -1.580280000000 2.601460000000 -1.830910000000 ; C -1.962310000000 1.425700000000 -2.594960000000 ; C -2.962470000000 0.699040000000 -1.830910000000 ; C -3.198570000000 1.425700000000 -0.594640000000 ; C -2.344340000000 2.601460000000 -0.594640000000 ; C -2.962470000000 -0.699040000000 -1.830910000000 ; C -1.962310000000 -1.425700000000 -2.594960000000 ; C -1.580280000000 -2.601460000000 -1.830910000000 ; C -2.344340000000 -2.601460000000 -0.594640000000 ; C -3.198570000000 -1.425700000000 -0.594640000000 ; C -1.000160000000 -0.726660000000 -3.329980000000 ; C -1.000160000000 0.726660000000 -3.329980000000 ; C 0.382030000000 1.175760000000 -3.329980000000 ; C 1.236260000000 -0.000000000000 -3.329980000000 ; C 0.382030000000 -1.175760000000 -3.329980000000 ; }; ```. The energy is about 17 Hartree lower than for the other isomers in this set, and there's the same tiny band gap observed:. ```. Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -4.532636 2A -2.786368 3A -1.250402 ; 4A -1.089303 5A -1.072010 6A -1.069172 ; 7A -1.066179 8A -1.033189 9A -1.032723 ; 10A -1.030891 11A -1.028656 12A -1.027962 ; 13A -0.991803 14A -0.990535 15A -0.987342 ; 16A -0.973125 17A -0.960409 18A -0.959419 ; 19A -0.958304 20A -0.956895 21A -0.908137 ; 22A -0.907635 23A -0.907511 24A -0.906906 ; 25A -0.906315 26A -0.891379 27A -0.891257 ; 28A -0.890707 29A -0.890398 30A -0.839042 ; 31A -0.837178 32A -0.834818 33A -0.833934 ; 34A -0.833813 35A -0.817752 36A -0.817322 ; 37A -0.816951 38A -0.773550 39A -0.772891 ; 40A -0.772830 41A -0.741258 42A -0.741108 ; 43A -0.738895 44A -0.738043 45A -0.737386 ; 46A -0.736864 47A -0.735958 48A -0.735127 ; 49A -0.704822 50A -0.667369 51A -0.666237 ; 52A -0.665137 53A -0.664185 54A -0.645333 ; 55A -0.645019 56A -0.644751 57A -0.643862 ; 58A -0.643693 59A -0.626239 60A -0.625011",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221#issuecomment-2356307438:3123,energy,energy,3123,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2356307438,1,['energy'],['energy']
Energy Efficiency,"6185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/driver.py:494: in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); ../lib/python3.6/site-packages/psi4/driver/driver_nbody.py:266: in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); ../lib/python3.6/site-packages/psi4/driver/driver_nbody.py:475: in compute_nbody_components; ptype_dict[pair], wfn = func(method_string, molecule=current_mol, return_wfn=True, **kwargs); ../lib/python3.6/site-packages/psi4/driver/driver.py:556: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ../lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:2002: in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ../lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1351: in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule()); ../lib/python3.6/site-packages/psi4/driver/procrouting/empirical_dispersion.py:195: in compute_energy; verbose=1); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. molrec = {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}; name_hint = 'pbeh3c', level_hint = 'd3bj', param_tweaks = {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}; ptype = 'energy'; dashcoeff_supplement = defaultdict(<function <lambda> at 0x7f5e8db768c8>, {'d2': defaultdict(<class 'dict'>, {'definitions': {'opbe-d2': {'ty...0093}, 'citation': ' M. K. Kesharwani, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:18182,energy,energy,18182,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,2,['energy'],['energy']
Energy Efficiency,622e-02 7.43115e-03 DIIS; @UHF iter 3: -75.38582621410333 -1.88197e-03 2.33008e-03 DIIS			 |	 @UHF iter 3: -75.38582621410339 -1.88197e-03 2.33008e-03 DIIS; @UHF iter 4: -75.38619478049240 -3.68566e-04 9.29768e-04 DIIS			 |	 @UHF iter 4: -75.38619478049243 -3.68566e-04 9.29768e-04 DIIS; @UHF iter 5: -75.38629447046014 -9.96900e-05 3.08853e-04 DIIS			 |	 @UHF iter 5: -75.38629447046023 -9.96900e-05 3.08853e-04 DIIS; @UHF iter 6: -75.38630883426671 -1.43638e-05 1.16185e-04 DIIS			 |	 @UHF iter 6: -75.38630883426674 -1.43638e-05 1.16185e-04 DIIS; @UHF iter 7: -75.38631113759388 -2.30333e-06 2.55403e-05 DIIS			 |	 @UHF iter 7: -75.38631113759392 -2.30333e-06 2.55403e-05 DIIS; @UHF iter 8: -75.38631121690256 -7.93087e-08 5.57003e-06 DIIS			 |	 @UHF iter 8: -75.38631121690257 -7.93086e-08 5.57003e-06 DIIS; @UHF iter 9: -75.38631122050272 -3.60016e-09 6.77022e-07 DIIS			 |	 @UHF iter 9: -75.38631122050275 -3.60018e-09 6.77022e-07 DIIS; Energy and wave function converged.									 Energy and wave function converged. ==> Post-Iterations <==										 ==> Post-Iterations <==. @Spin Contamination Metric: 4.301100511E-03							 @Spin Contamination Metric: 4.301100511E-03; @S^2 Expected: 7.500000000E-01							 @S^2 Expected: 7.500000000E-01; @S^2 Observed: 7.543011005E-01							 @S^2 Observed: 7.543011005E-01; @S Expected: 5.000000000E-01							 @S Expected: 5.000000000E-01; @S Observed: 5.000000000E-01							 @S Observed: 5.000000000E-01. Orbital Energies [Eh]										 Orbital Energies [Eh]; ---------------------										 ---------------------. Alpha Occupied: 				 Alpha Occupied: . 1A1 -20.635786 2A1 -1.392584 3A1 -0.673509 					 1A1 -20.635786 2A1 -1.392584 3A1 -0.673509 ; 1B2 -0.647734 1B1 -0.561066 							 |	 1B1 -0.647734 1B2 -0.561066 . Alpha Virtual: 				 Alpha Virtual: . 4A1 0.223681 2B2 0.784656 2B1 0.835171 				 |	 4A1 0.223681 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.122186 7A1 1.471866 ; 8A1 43.203538 										 8A,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:14994,Energy,Energy,14994,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,"6341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1899,energy,energy,1899,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"663418; S 1 1.00; 1.04455407 1.0000000; S 1 1.00; 0.30382295 1.0000000; S 1 1.00; 0.07271795 1.0000000; P 4 1.00; 34.75998468 0.0199871; 7.80757529 0.1258380; 2.29096903 0.3939784; 0.71677956 0.6260029; P 1 1.00; 0.21323853 1.0000000; P 1 1.00; 0.05887653 1.0000000; D 1 1.00; 1.25011953 1.0000000; D 1 1.00; 0.34100653 1.0000000; ****; I 0; S 8 1.00; 5464702.08060097 0.0001093; 849942.52168504 0.0007913; 207458.86762606 0.0036900; 64929.86485391 0.0131833; 23909.80880875 0.0395406; 9850.71275593 0.1040723; 4222.34623514 0.2741166; 1781.76403452 0.6488818; S 2 1.00; 749.21394356 -0.5595941; 318.75246448 -0.4728234; S 1 1.00; 118.02205930 -1.0000000; S 2 1.00; 59.88344918 -0.7200351; 29.50227605 -0.2987074; S 2 1.00; 12.24593624 -0.5061450; 6.20345391 -0.5148945; S 2 1.00; 2.43764323 0.5412411; 1.14985168 0.4841938; S 1 1.00; 0.30638210 -1.0000000; S 1 1.00; 0.11926836 -1.0000000; S 1 1.00; 0.03719760 1.0000000; P 7 1.00; 20182.20166081 0.0004988; 4999.21100888 0.0038641; 1768.53795847 0.0174910; 734.77528080 0.0632147; 317.51165410 0.1951982; 139.60118455 0.4117047; 63.12833732 0.4496355; P 1 1.00; 28.34086632 1.0000000; P 2 1.00; 13.45203045 -0.6861431; 6.52579989 -0.3486363; P 3 1.00; 3.02467901 0.5601269; 1.38040546 0.4313665; 0.52669045 0.0821826; P 1 1.00; 0.22217820 1.0000000; P 1 1.00; 0.08328104 1.0000000; P 1 1.00; 0.04062406 1.0000000; D 6 1.00; 565.98837950 0.0067496; 168.69681731 0.0529920; 63.14306896 0.2071444; 26.10306850 0.4270744; 11.24530421 0.4189456; 4.63907320 0.1167256; D 1 1.00; 1.91572411 1.0000000; D 1 1.00; 0.72024616 1.0000000; D 1 1.00; 0.07663996 1.0000000; F 1 1.00; 2.20029999 1.0000000; F 1 1.00; 0.52320000 1.0000000; ****; }. set basis jorge; set {; 	memory 16GB; 	freeze_core false; 	reference RHF; 	scf_type PK; 	ints_tolerance 1.0E-14; 	E_CONVERGENCE 1.0E-10; 	D_CONVERGENCE 1.0E-10; 	#maxiter 250; #STABILITY_ANALYSIS check; 	#FAIL_ON_MAXITER False; 	#cachelevel 0; }; #scf_e, scf_wfn = energy('scf', return_wfn=True); energy('BCCD'). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226040293:3317,energy,energy,3317,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226040293,2,['energy'],['energy']
Energy Efficiency,69 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of abc combinations: 46194526. Computing (T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4989,energy,energy,4989,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,696; H 0.939562254 -0.291970622 -3.396388025; C 0.153371123 -2.268353181 -3.933202696; H 0.586362975 -2.807317940 -3.077535365; H 0.159008115 -2.912490143 -4.825998788; H -0.891436693 -1.987652772 -3.718583292; C 2.800348332 -4.626744069 -3.792777198; N 2.802665756 -3.966107613 -2.790173312; N 2.684652290 -5.412141057 -4.861486044; C 3.505354375 -5.173049272 -5.878418578; N 4.138355900 -5.018501942 -6.888486303; }; set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. Output. ```; *** at Wed Feb 5 05:26:47 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2690. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -3.880037726127. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 686; Number of virtual orbitals in truncated space: 651. ==> Memory <==. Total memory requirements: 66851.24 mb; 3-index integrals: 10270.29 mb; CCSD intermediates: 56580.95 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 29772.62 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 66; Number of active virtual orbitals: 651; Number of frozen virtual orbitals: 35. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 -3.8800058511 -3.8800058511 1.0189008043 350; 1 1 3 -3.8152481716 0.0647576795 0.2191661024 6471; 2 2 4 -3.9577344796 -0.1424863080 0.0847277059 6428; 3 3 5 -3.96829,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:2661,energy,energy,2661,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,6: mints3 ........................... Passed 1.18 sec; Start 97: cisd-h2o-clpse; 359/413 Test #364: x2c3 ............................. Passed 2.31 sec; Start 173: dft2; 360/413 Test #355: tu1-h2o-energy ................... Passed 1.87 sec; Start 336: scf3; 361/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 2.49 sec; Start 138: dfmp2-grad3; 362/413 Test #224: mints10 .......................... Passed 2.36 sec; Start 334: scf-occ; 363/413 Test #190: fci-tdm .......................... Passed 1.95 sec; Start 345: stability1; 364/413 Test #331: scf-guess-read2 .................. Passed 7.29 sec; Start 351: sapt-sf1; 365/413 Test #223: mints9 ........................... Passed 2.00 sec; Start 121: dfcasscf-sp; 366/413 Test #222: mints-helper ..................... Passed 1.96 sec; Start 347: dfep2-2; 367/413 Test #336: scf3 ............................. Passed 1.57 sec; Start 300: pubchem2; 368/413 Test #354: stability2 ....................... Passed 2.80 sec; Start 356: tu2-ch2-energy; 369/413 Test #335: scf2 ............................. Passed 3.39 sec; Start 290: psimrcc-ccsd_t-2; 370/413 Test #97: cisd-h2o-clpse ................... Passed 2.89 sec; Start 122: dfccd1; 371/413 Test #351: sapt-sf1 ......................... Passed 1.54 sec; Start 332: scf-bs; 372/413 Test #86: cepa0-grad1 ...................... Passed 4.82 sec; Start 241: numpy-array-interface; 373/413 Test #356: tu2-ch2-energy ................... Passed 1.07 sec; Start 218: mints5; 374/413 Test #347: dfep2-2 .......................... Passed 2.24 sec; Start 329: scf-guess-read1; 375/413 Test #300: pubchem2 ......................... Passed 1.45 sec; Start 366: options1; 376/413 Test #334: scf-occ .......................... Passed 3.01 sec; Start 217: mints4; 377/413 Test #241: numpy-array-interface ............ Passed 0.81 sec; Start 289: psimrcc-ccsd_t-1; 378/413 Test #332: scf-bs ........................... Passed 1.53 sec; Start 136: dfmp2-grad1; 379/413 Test #345: stability1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:34709,energy,energy,34709,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,6: mints4 ........................... Passed 0.78 sec; Start 218: mints6; 208/412 Test #217: mints5 ........................... Passed 1.01 sec; Start 219: mints8; 209/412 Test #201: fnocc2 ........................... Passed 36.04 sec; Start 220: mints-benchmark; 210/412 Test #169: dft1 ............................. Passed 101.86 sec; Start 221: mints-helper; 211/412 Test #208: gibbs ............................ Passed 20.62 sec; Start 222: mints9; 212/412 Test #159: dfscf-bz2 ........................ Passed 147.05 sec; Start 223: mints10; 213/412 Test #221: mints-helper ..................... Passed 1.97 sec; Start 224: molden1; 214/412 Test #222: mints9 ........................... Passed 2.02 sec; Start 225: molden2; 215/412 Test #223: mints10 .......................... Passed 2.02 sec; Start 226: mom; 216/412 Test #218: mints6 ........................... Passed 12.96 sec; Start 227: mp2-1; 217/412 Test #224: molden1 .......................... Passed 3.38 sec; Start 228: mp2-def2; 218/412 Test #193: fd-freq-energy ................... Passed 61.77 sec; Start 229: mp2-grad1; 219/412 Test #226: mom .............................. Passed 3.66 sec; Start 230: mp2-grad2; 220/412 Test #225: molden2 .......................... Passed 3.82 sec; Start 231: mp2-module; 221/412 Test #219: mints8 ........................... Passed 15.95 sec; Start 232: mp2p5-grad1; 222/412 Test #229: mp2-grad1 ........................ Passed 3.19 sec; Start 233: mp2p5-grad2; 223/412 Test #230: mp2-grad2 ........................ Passed 3.94 sec; Start 234: mp3-grad1; 224/412 Test #207: ghosts ........................... Passed 34.34 sec; Start 235: mp3-grad2; 225/412 Test #232: mp2p5-grad1 ...................... Passed 4.41 sec; Start 236: mp2-property; 226/412 Test #234: mp3-grad1 ........................ Passed 3.21 sec; Start 237: mpn-bh; 227/412 Test #233: mp2p5-grad2 ...................... Passed 6.31 sec; Start 238: nbody-he-cluster; 228/412 Test #227: mp2-1 ............................ Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:20276,energy,energy,20276,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy']
Energy Efficiency,"6A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > ; > **\* tstart() called on shukla-pc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15358,Energy,Energy,15358,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,"6e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of threads: 1; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6366,Energy,Energy,6366,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"7 is fairly tight unless your energy convergence thresholds are commensurately tight. I think we usually test in the 5-6 range... something we have talked about standardizing, but have yet to do so.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-501326522:30,energy,energy,30,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-501326522,1,['energy'],['energy']
Energy Efficiency,"7, 1.96334535],; [ 1.55245855, -0.55730393, 0.79347735],; [ 1.57807055, -0.59638793, -0.58135765],; [ 0.33353455, -1.00837593, -0.99842865],; [-0.41241445, -1.33766393, 0.12858235],; [ 0.35232355, -0.92987693, 1.24440635],; [-0.00657745, -1.20355993, -2.13075665],; [-0.14947445, -1.00267793, 2.20235835],; [ 2.42478555, -0.18029193, 1.17515335],; [ 2.85402655, 2.28807407, 1.17704435],; [ 3.91722855, 3.22559407, 1.59750135],; [ 4.48916555, 3.69442507, 0.51191135],; [ 3.90246455, 3.14933007, -0.59139665],; [ 2.91594555, 2.34754307, -0.13364465],; [ 5.41812755, 4.46140507, 0.48393635],; [ 2.40009555, 1.78156907, -0.90001365],; [ 2.44725055, 1.74621807, 2.02374335]]); # net_charge = -1; net_charge = 0. bigmol = psi4.core.Molecule.from_arrays(geom=xyz, molecular_charge=net_charge, elez=atomic_numbers). theory = ""wB97X/6-31G*""; psi4.set_options({; 'scf_type': 'disk_DF',; #'scf_type': 'mem_DF',; ""guess"": ""sad"",; ""maxiter"": 20,; }); psi4.set_memory(""10.0 gib""); E = psi4.energy(theory, molecule=bigmol); print(E); psi4.compare_values(-1023.23875023455, E, 6, ""matches disk_df""); ```. mem_df; ```; Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -946.81473095199294 -9.46815e+02 0.00000e+00; @DF-RKS iter 1: -853.16313969519842 9.36516e+01 2.49164e-02 DIIS; @DF-RKS iter 2: 205.11141330156607 1.05827e+03 9.66100e-02 DIIS; @DF-RKS iter 3: 51.44551681524645 -1.53666e+02 8.25708e-02 DIIS; @DF-RKS iter 4: 32.72889827880818 -1.87166e+01 8.07939e-02 DIIS; @DF-RKS iter 5: 30.01651359226875 -2.71238e+00 8.03146e-02 DIIS; @DF-RKS iter 6: 20.71735979257003 -9.29915e+00 7.94275e-02 DIIS; @DF-RKS iter 7: 20.19073835153742 -5.26621e-01 7.92802e-02 DIIS; @DF-RKS iter 8: 19.59649838936669 -5.94240e-01 7.91696e-02 DIIS; @DF-RKS iter 9: 18.59642511624830 -1.00007e+00 7.89379e-02 DIIS; @DF-RKS iter 10: 18.52526838311312 -7.11567e-02 7.89828e-02 DIIS; @DF-RKS iter 11: 17.83802341987538 -6.87245e-01 7.89175e-02 DIIS; @DF-RKS iter 12: 36.67699286161224 1.88390e+01 8.41411e-02 DIIS; @DF-RKS iter 13: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-900816518:2101,energy,energy,2101,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-900816518,1,['energy'],['energy']
Energy Efficiency,7.49 sec; Start 407: skeletonaointegrals; 365/412 Test #406: skeleton ......................... Passed 17.68 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 17.83 sec; Start 8: castup1; 367/412 Test #357: scf-response1 .................... Passed 18.48 sec; Start 331: scf-bs; 368/412 Test #408: skeletondfmp2 .................... Passed 17.11 sec; Start 391: python-mints9; 369/412 Test #350: sapt-sf1 ......................... Passed 17.11 sec; Start 222: mints9; 370/412 Test #211: mcscf2 ........................... Passed 16.68 sec; Start 404: json-schema-1-gradient; 371/412 Test #407: skeletonaointegrals .............. Passed 16.90 sec; Start 396: python-mints13; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 17.50 sec; Start 299: pubchem2; 373/412 Test #8: castup1 .......................... Passed 17.96 sec; Start 223: mints10; 374/412 Test #331: scf-bs ........................... Passed 17.01 sec; Start 354: tu1-h2o-energy; 375/412 Test #391: python-mints9 .................... Passed 18.84 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.91 sec; Start 221: mints-helper; 377/412 Test #404: json-schema-1-gradient ........... Passed 16.86 sec; Start 103: decontract; 378/412 Test #396: python-mints13 ................... Passed 17.37 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 16.12 sec; Start 384: psi4numpy-rhf-gradient; 380/412 Test #223: mints10 .......................... Passed 16.21 sec; Start 355: tu2-ch2-energy; 381/412 Test #354: tu1-h2o-energy ................... Passed 16.19 sec; Start 397: python-memdfjk; 382/412 Test #411: skeletonsointegrals .............. Passed 15.60 sec; Start 215: mints3; 383/412 Test #221: mints-helper ..................... Passed 15.41 sec; Start 405: json-schema-1-properties; 384/412 Test #103: decontract ....................... Passed 15.43 sec; Start 399: json-v11-gradient,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:35118,energy,energy,35118,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy']
Energy Efficiency,7/412 Test #374: dft-custom-mgga .................. Passed 185.89 sec; Start 48: cc31; 38/412 Test #196: fd-freq-gradient-large ........... Passed 270.86 sec; Start 98: cisd-opt-fd; 39/412 Test #48: cc31 ............................. Passed 55.67 sec; Start 59: cc41; 40/412 Test #321: sapt6 ............................ Passed 165.07 sec; Start 61: cc43; 41/412 Test #59: cc41 ............................. Passed 47.85 sec; Start 159: dfscf-bz2; 42/412 Test #61: cc43 ............................. Passed 35.33 sec; Start 105: dcft-grad2; 43/412 Test #18: cbs-xtpl-func .................... Passed 455.40 sec; Start 348: sapt-dft2; 44/412 Test #105: dcft-grad2 ....................... Passed 18.64 sec; Start 184: isapt2; 45/412 Test #98: cisd-opt-fd ...................... Passed 126.02 sec; Start 303: pywrap-cbs1; 46/412 Test #303: pywrap-cbs1 ...................... Passed 32.17 sec; Start 47: cc30; 47/412 Test #47: cc30 ............................. Passed 22.71 sec; Start 75: cc5a; 48/412 Test #194: fd-freq-energy-large ............. Passed 481.49 sec; Start 155: dft-grad-lr2; 49/412 Test #348: sapt-dft2 ........................ Passed 128.00 sec; Start 92: cepa-module; 50/412 Test #159: dfscf-bz2 ........................ Passed 149.44 sec; Start 169: dft1; 51/412 Test #75: cc5a ............................. Passed 46.97 sec; Start 26: cc13a; 52/412 Test #184: isapt2 ........................... Passed 124.37 sec; Start 114: dcft7; 53/412 Test #182: fsapt-allterms ................... Passed 584.96 sec; Start 206: frac-traverse; 54/412 Test #92: cepa-module ...................... Passed 39.12 sec; Start 317: sapt2; 55/412 Test #155: dft-grad-lr2 ..................... Passed 99.99 sec; Start 319: sapt4; 56/412 Test #169: dft1 ............................. Passed 105.11 sec; Start 326: scf-bz2; 57/412 Test #114: dcft7 ............................ Passed 220.51 sec; Start 372: dft-custom-dhdf; 58/412 Test #326: scf-bz2 .......................... Passed 127.87 sec; Start 281: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:4661,energy,energy-large,4661,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['energy'],['energy-large']
Energy Efficiency,"70538 ; H 0.000000000000 -0.759061990794 0.521953018295 ; H 0.000000000000 0.759061990794 0.521953018295 . ```; ## Single Core. To actually address your problem, can you try the following edits? If you edit the installed copy, no recompile needed. Hopefully this solves it -- thanks for the report!; ```; diff --git a/psi4/driver/procrouting/empirical_dispersion.py b/psi4/driver/procrouting/empirical_dispersion.py; index d23f016..ea4f79d 100644; --- a/psi4/driver/procrouting/empirical_dispersion.py; +++ b/psi4/driver/procrouting/empirical_dispersion.py; @@ -213,7 +213,7 @@ class EmpiricalDispersion(object):; resi,; self.engine,; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path(), ""ncores"": core.get_num_threads()}); ; dashd_part = float(jobrec.extras['qcvars']['DISPERSION CORRECTION ENERGY']); if wfn is not None:; @@ -231,7 +231,7 @@ class EmpiricalDispersion(object):; resi,; ""gcp"",; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path(), ""ncores"": core.get_num_threads()}); gcp_part = jobrec.return_result; dashd_part += gcp_part; ; @@ -283,7 +283,7 @@ class EmpiricalDispersion(object):; resi,; self.engine,; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path(), ""ncores"": core.get_num_threads()}); ; dashd_part = core.Matrix.from_array(jobrec.extras['qcvars']['DISPERSION CORRECTION GRADIENT']); if wfn is not None:; @@ -296,7 +296,7 @@ class EmpiricalDispersion(object):; resi,; ""gcp"",; raise_error=True,; - local_options={""scratch_directory"": core.IOManager.shared_object().get_default_path()}); + local_options={""scratch_directory"": core.IOManager.s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938:1845,ENERGY,ENERGY,1845,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100294938,1,['ENERGY'],['ENERGY']
Energy Efficiency,"7248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3 seconds = 0.05 minutes; Total time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6848,Energy,Energy,6848,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"73. Number of irreps: 1; Integral cutoff 0.00e+00; Number of functions per irrep: [ 73 ]. OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. Computing two-electron integrals...done; Computed 3549448 non-zero two-electron integrals.; Stored in file 33. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:40 2017. *******************************************************; * *; * Frozen Natural Orbitals *; * *; *******************************************************. ==> Transform (OV|OV) integrals <==. 	Presorting SO-basis two-electron integrals.; 	Sorting File: SO Ints (nn|nn) nbuckets = 1; 	Transforming the one-electron integrals and constructing Fock matrices; 	Starting first half-transformation.; 	Sorting half-transformed integrals.; 	First half integral transformation complete.; 	Starting second half-transformation.; 	Two-electron integral transformation complete. ==> Build MP2 amplitudes, OPDM, and NOs <==. OS MP2 correlation energy: -0.209233828319; SS MP2 correlation energy: -0.076503424385; MP2 correlation energy: -0.285737252704; * MP2 total energy: -0.285737252704. Cutoff for significant NO occupancy: 1.000e-06. No. virtuals per irrep (original): [ 56 ]; No. virtuals per irrep (truncated): [ 56 ]. Retaining 56 of 56 virtual orbitals. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:41 2017; Module time:; 	user time = 0.68 seconds = 0.01 minutes; 	system time = 0.14 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 3.48 seconds = 0.06 minutes; 	system time = 0.20 seconds = 0.00 minutes; 	total time = 4 seconds = 0.07 minutes. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:41 2017. ==> Transform all two-electron integrals <==. 	Presorting SO-basis two-electron integrals.; 	Sorting File: SO Ints (nn|nn) nbuckets = 1; 	Transforming the one-electron integrals and constructing Fock matrices; 	Starting first half-t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:9118,energy,energy,9118,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['energy'],['energy']
Energy Efficiency,739.08 sec; Start 387: cookbook-rohf-orb-rot; 17/412 Test #104: dcft-grad1 ....................... Passed 1433.59 sec; Start 282: opt-irc-2; 18/412 Test #25: cc13 ............................. Passed 617.71 sec; Start 380: cc-module; 19/412 Test #228: mp2-def2 ......................... Passed 401.25 sec; Start 113: dcft6; 20/412 Test #112: dcft5 ............................ Passed 395.55 sec; Start 32: cc16; 21/412 Test #45: cc29 ............................. Passed 271.40 sec; Start 18: cbs-xtpl-func; 22/412 Test #30: cc14 ............................. Passed 418.86 sec; Start 182: fsapt-allterms; 23/412 Test #71: cc52 ............................. Passed 249.62 sec; Start 194: fd-freq-energy-large; 24/412 Test #36: cc2 .............................. Passed 801.63 sec; Start 196: fd-freq-gradient-large; 25/412 Test #29: cc13d ............................ Passed 420.42 sec; Start 279: opt13; 26/412 Test #282: opt-irc-2 ........................ Passed 233.89 sec; Start 11: cbs-delta-energy; 27/412 Test #183: isapt1 ........................... Passed 423.36 sec; Start 374: dft-custom-mgga; 28/412 Test #40: cc24 ............................. Passed 958.14 sec; Start 48: cc31; 29/412 Test #360: tu6-cp-ne2 ....................... Passed 427.69 sec; Start 59: cc41; 30/412 Test #113: dcft6 ............................ Passed 223.52 sec; Start 321: sapt6; 31/412 Test #13: cbs-xtpl-alpha ................... Passed 500.97 sec; Start 61: cc43; 32/412 Test #380: cc-module ........................ Passed 316.28 sec; Start 98: cisd-opt-fd; 33/412 Test #32: cc16 ............................. Passed 277.18 sec; Start 47: cc30; 34/412 Test #387: cookbook-rohf-orb-rot ............ Passed 373.24 sec; Start 159: dfscf-bz2; 35/412 Test #111: dcft4 ............................ Passed 1816.21 sec; Start 105: dcft-grad2; 36/412 Test #59: cc41 ............................. Passed 136.95 sec; Start 348: sapt-dft2; 37/412 Test #48: cc31 ............................. Passed 161.28 sec; Start 7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:2890,energy,energy,2890,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,74: cc5a; 61/411 Test #307: pywrap-db1 ....................... Passed 39.70 sec; Start 17: cbs-xtpl-opt; 62/411 Test #41: cc26 ............................. Passed 280.38 sec; Start 29: cc14; 63/411 Test #19: cbs-xtpl-wrapper ................. Passed 77.77 sec; Start 42: cc27; 64/411 Test #74: cc5a ............................. Passed 97.39 sec; Start 276: opt11; 65/411 Test #318: sapt4 ............................ Passed 1909.66 sec; Start 47: cc31; 66/411 Test #276: opt11 ............................ Passed 105.52 sec; Start 273: opt7; 67/411 Test #17: cbs-xtpl-opt ..................... Passed 206.55 sec; Start 36: cc21; 68/411 Test #273: opt7 ............................. Passed 91.44 sec; Start 206: ghosts; 69/411 Test #110: dcft4 ............................ Passed 800.05 sec; Start 312: rasci-ne; 70/411 Test #206: ghosts ........................... Passed 33.57 sec; Start 359: tu6-cp-ne2; 71/411 Test #312: rasci-ne ......................... Passed 35.28 sec; Start 11: cbs-delta-energy; 72/411 Test #47: cc31 ............................. Passed 436.66 sec; Start 323: sapt7; 73/411 Test #323: sapt7 ............................ Passed 36.88 sec; Start 76: cc7; 74/411 Test #38: cc23 ............................. Passed 950.03 sec; Start 342: soscf-dft; 75/411 Test #342: soscf-dft ........................ Passed 35.67 sec; Start 129: dfmp2-1; 76/411 Test #129: dfmp2-1 .......................... Passed 36.11 sec; Start 237: nbody-he-cluster; 77/411 Test #29: cc14 ............................. Passed 989.95 sec; Start 31: cc16; 78/411 Test #40: cc25 ............................. Passed 1076.69 sec; Start 374: dft-custom-gga; 79/411 Test #237: nbody-he-cluster ................. Passed 88.19 sec; Start 259: omp3-3; 80/411 Test #374: dft-custom-gga ................... Passed 62.74 sec; Start 43: cc28; 81/411 Test #359: tu6-cp-ne2 ....................... Passed 858.79 sec; Start 106: dcft-grad4; 82/411 Test #106: dcft-grad4 ....................... Passed 51.14 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:6884,energy,energy,6884,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,"75.98014095901934 -1.92525e-05 8.89529e-05 DIIS; 401: @DF-RHF iter 6: -75.98014186620988 -9.07191e-07 9.85581e-06 DIIS; 401: @DF-RHF iter 7: -75.98014187224302 -6.03315e-09 1.00607e-06 DIIS; 401: @DF-RHF iter 8: -75.98014187231389 -7.08695e-11 1.20203e-07 DIIS; 401: ; 401: ==> Post-Iterations <==; 401: ; 401: Orbital Energies [Eh]; 401: ---------------------; 401: ; 401: Doubly Occupied: ; 401: ; 401: 1A1 -20.568888 2A1 -1.334711 1B2 -0.686874 ; 401: 3A1 -0.554298 1B1 -0.499284 ; 401: ; 401: Virtual: ; 401: ; 401: 4A1 0.193417 2B2 0.287599 3B2 1.041506 ; 401: 5A1 1.130379 2B1 1.164432 6A1 1.220999 ; 401: 4B2 1.368964 7A1 1.693510 ; 401: ; 401: Final Occupation by Irrep:; 401: A1 A2 B1 B2 ; 401: DOCC [ 3, 0, 1, 1 ]; 401: ; 401: Energy converged.; 401: ; 401: @DF-RHF Final Energy: -75.98014187231389; 401: ; 401: => Energetics <=; 401: ; 401: Nuclear Repulsion Energy = 8.8014620606294294; 401: One-Electron Energy = -122.2750929709242769; 401: Two-Electron Energy = 37.4934890379809431; 401: Total Energy = -75.9801418723139079; 401: ; 401: ; 401: ; 401: Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; 401: ; 401: Properties computed using the HF density matrix; 401: ; 401: Nuclear Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0191; 401: ; 401: Electronic Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 0.0213; 401: ; 401: Dipole Moment: [e a0]; 401: X: 0.0000 Y: 0.0000 Z: 1.0404 Total: 1.0404; 401: ; 401: Dipole Moment: [D]; 401: X: 0.0000 Y: 0.0000 Z: 2.6444 Total: 2.6444; 401: ; 401: Quadrupole Moment: [D A]; 401: XX: -7.3007 YY: -4.1363 ZZ: -5.8725; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Traceless Quadrupole Moment: [D A]; 401: XX: -1.5309 YY: 1.6335 ZZ: -0.1027; 401: XY: -0.0000 XZ: 0.0000 YZ: -0.0000; 401: ; 401: Mulliken Charges: (a.u.); 401: Center Symbol Alpha Beta Spin Total; 401: 1 O 4.39836 4.39836 0.00000 -0.79673; 401: 2 H 0.30082 0.30082 0.00000 0.39836; 401: 3 H 0.30082 0.30082 0.00000 0.39836; 401: ; 401: Total alp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:6569,Energy,Energy,6569,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency,7508 0.0001579755 24900; 10 8 3 -3.9688036163 -0.0000122594 0.0000701594 25130; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 24791; 12 8 6 -3.9687961342 -0.0000018693 0.0000116248 24666; 13 8 5 -3.9687949038 0.0000012304 0.0000064734 24643; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 24607; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 24850; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 24767; 17 8 2 -3.9687942776 -0.0000000239 0.0000003851 24603; 18 8 3 -3.9687943096 -0.0000000320 0.0000002062 24718; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 25198. CCSD iterations converged!. T1 diagnostic: 0.014742939319; D1 diagnostic: 0.048426600222. OS MP2 FNO correction: -0.000025194191; SS MP2 FNO correction: -0.000006680779; MP2 FNO correction: -0.000031874970. OS MP2 correlation energy: -2.840624216126; SS MP2 correlation energy: -1.039413510200; MP2 correlation energy: -3.880037726326; * MP2 total energy: -1132.741364989949. OS CCSD correlation energy: -3.064993697148; SS CCSD correlation energy: -0.903832488652; CCSD correlation energy: -3.968826185800; * CCSD total energy: -1132.830153449423. Total time for CCSD iterations: 4253910.43 s (user); 6108342.47 s (system); 475421 s (total). Time per iteration: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097.75 mb; memory requirements = 433739.41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:3343,energy,energy,3343,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,"78 -4.31854e-09 3.18063e-07 DIIS; @DF-UHF iter 4: -2.85520042768697 -8.19389e-12 7.59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: -4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: -4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.914188 . Alpha Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Beta Occupied: . 1A -0.914188 . Beta Virtual: . 2A 0.431249 3A 1.399267 4A 2.524088 ; 5A 2.524090 6A 2.524090 7A 3.187532 ; 8A 3.187532 9A 3.187564 10A 4.214194 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.85520042768698. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8820241745672806; Two-Electron Energy = 1.0268237468803001; Total Energy = -2.8552004276869805. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000; LUNO+3 : 5 A 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: -5.6000. Electronic Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: 5.5998. Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: -0.0002 Total: 0.0002. Dipole Moment: [D]; X: -0.0000 Y: -0.0000 Z: -0.0005 Total: 0.0005. /home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py:538: FutureWarning: Object arrays will not be saved by default in the future because `allow_pickle` will default to False. You should add `allow_pickle=True` explicitly to elminate this warning.; pickle_kwargs=pickle_kwargs); Traceback (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:9419,Energy,Energy,9419,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,8 -3.9689037022 -0.0002486628 0.0017743273 6798; 7 7 9 -3.9688426839 0.0000610183 0.0009217340 6861; 8 8 2 -3.9687941077 0.0000485763 0.0003794817 6897; 9 8 1 -3.9687913569 0.0000027508 0.0001579755 6928; 10 8 3 -3.9688036162 -0.0000122594 0.0000701594 6918; 11 8 4 -3.9687942649 0.0000093514 0.0000293354 6938; 12 8 6 -3.9687961341 -0.0000018693 0.0000116248 6933; 13 8 5 -3.9687949037 0.0000012304 0.0000064734 6873; 14 8 8 -3.9687942464 0.0000006574 0.0000032732 6946; 15 8 7 -3.9687942780 -0.0000000316 0.0000016867 6933; 16 8 1 -3.9687942537 0.0000000243 0.0000008407 6973; 17 8 2 -3.9687942775 -0.0000000239 0.0000003851 6956; 18 8 3 -3.9687943095 -0.0000000320 0.0000002062 6997; 19 8 6 -3.9687943108 -0.0000000012 0.0000000881 6968. CCSD iterations converged!. T1 diagnostic: 0.014742939325; D1 diagnostic: 0.048426600123. OS MP2 FNO correction: -0.000025194213; SS MP2 FNO correction: -0.000006680788; MP2 FNO correction: -0.000031875001. OS MP2 correlation energy: -2.840624216016; SS MP2 correlation energy: -1.039413510111; MP2 correlation energy: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *********************,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:4818,energy,energy,4818,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['energy'],['energy']
Energy Efficiency,8 sec; Start 340: scf-bs; 119/415 Test #350: serial-wfn ....................... Passed 1.95 sec; Start 363: stability2; 120/415 Test #338: scf-upcast-custom-basis .......... Passed 2.38 sec; Start 303: psimrcc-pt2; 121/415 Test #395: psi4numpy-rhf-hessian ............ Passed 3.23 sec; Start 414: json-schema-1-gradient; 122/415 Test #299: psimrcc-ccsd_t-3 ................. Passed 1.93 sec; Start 392: psi4numpy-dfmp2; 123/415 Test #105: decontract ....................... Passed 1.50 sec; Start 337: scf-guess-read1; 124/415 Test #343: scf2 ............................. Passed 2.48 sec; Start 401: python-mints9; 125/415 Test #340: scf-bs ........................... Passed 1.78 sec; Start 360: sapt-sf1; 126/415 Test #342: scf-occ .......................... Passed 2.41 sec; Start 406: python-mints13; 127/415 Test #372: x2c2 ............................. Passed 2.55 sec; Start 297: psimrcc-ccsd_t-1; 128/415 Test #363: stability2 ....................... Passed 1.67 sec; Start 398: python-energy; 129/415 Test #356: dfep2-2 .......................... Passed 2.54 sec; Start 367: scf-response1; 130/415 Test #324: sad1 ............................. Passed 3.08 sec; Start 364: tu1-h2o-energy; 131/415 Test #303: psimrcc-pt2 ...................... Passed 1.68 sec; Start 212: mcscf1; 132/415 Test #414: json-schema-1-gradient ........... Passed 1.69 sec; Start 365: tu2-ch2-energy; 133/415 Test #392: psi4numpy-dfmp2 .................. Passed 1.94 sec; Start 394: psi4numpy-rhf-gradient; 134/415 Test #401: python-mints9 .................... Passed 2.41 sec; Start 344: scf3; 135/415 Test #406: python-mints13 ................... Passed 2.29 sec; Start 319: pywrap-molecule; 136/415 Test #337: scf-guess-read1 .................. Passed 3.82 sec; Start 407: python-memdfjk; 137/415 Test #360: sapt-sf1 ......................... Passed 3.67 sec; Start 393: psi4numpy-rhf; 138/415 Test #398: python-energy .................... Passed 3.51 sec; Start 215: mints1; 139/415 Test #319: pywrap-molecule .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:12447,energy,energy,12447,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['energy'],['energy']
Energy Efficiency,"8.11263e-03 1.56037e-03 DIIS; @RHF iter 4: -76.01722494225463 -4.94330e-04 5.00914e-04 DIIS; @RHF iter 5: -76.01729299826569 -6.80560e-05 1.02319e-04 DIIS; @RHF iter 6: -76.01729647642517 -3.47816e-06 1.57456e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6139,Energy,Energy,6139,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (DISP); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_disp.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (FIXED); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_fixed.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST. ```; * I think it should be clear from the output file what exch-disp scheme/scale is applied. So perhaps add a couple lines to the printout like below. This should also satisfy Jonathon's request that the o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:2349,energy,energy,2349,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,2,['energy'],['energy']
Energy Efficiency,"826569 -6.80560e-05 1.02319e-04 DIIS; @RHF iter 6: -76.01729647642517 -3.47816e-06 1.57456e-05 DIIS; @RHF iter 7: -76.01729655361160 -7.71864e-08 2.57884e-06 DIIS; @RHF iter 8: -76.01729655525962 -1.64802e-09 3.36940e-07 DIIS; @RHF iter 9: -76.01729655528302 -2.34053e-11 2.79546e-08 DIIS; @RHF iter 10: -76.01729655528305 -2.84217e-14 2.79199e-09 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A1 -20.569000 2A1 -1.320609 1B2 -0.678724 ; 3A1 -0.563930 1B1 -0.495004 . Virtual: . 4A1 0.202466 2B2 0.292719 3B2 0.981164 ; 5A1 1.056318 6A1 1.129179 2B1 1.168639 ; 4B2 1.294985 7A1 1.413596 1A2 1.802875 ; 8A1 1.806916 3B1 1.918871 9A1 2.513248 ; 5B2 2.537822 6B2 2.713577 2A2 2.921065 ; 4B1 2.947486 10A1 3.291755 11A1 3.620730 ; 7B2 3.874917 12A1 4.077740 . Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 3, 0, 1, 1 ]. Energy converged. @RHF Final Energy: -76.01729655528305. => Energetics <=. Nuclear Repulsion Energy = 8.8046866186390567; One-Electron Energy = -122.3894315902240919; Two-Electron Energy = 37.5674484163019855; PCM Polarization Energy = 0.0000000000000000; Total Energy = -76.0172965552830533. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 1.0351. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: -0.1532. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.8819 Total: 0.8819. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 2.2414 Total: 2.2414. *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.39 seconds = 0.01 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; MINTS: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:6274,Energy,Energy,6274,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['Energy'],['Energy']
Energy Efficiency,"8526 12Ag 8.272193 ; 3B3g 8.272193 3B2g 8.272193 3B1g 8.272193 ; 13Ag 8.272193 7B3u 11.798691 7B2u 11.798691 ; 7B1u 11.798691 14Ag 14.696251 15Ag 34.149342 . Beta Occupied: . . Beta Virtual: . 1Ag 0.016098 2Ag 0.109076 1B2u 0.211108 ; 1B1u 0.211108 1B3u 0.211108 3Ag 0.385413 ; 2B1u 0.802773 2B2u 0.802773 2B3u 0.802773 ; 4Ag 0.900610 1B3g 0.900610 1B2g 0.900610 ; 1B1g 0.900610 5Ag 0.900610 6Ag 1.071716 ; 3B1u 2.265097 3B3u 2.265097 3B2u 2.265097 ; 7Ag 2.575158 8Ag 2.953058 2B2g 2.953058 ; 2B3g 2.953058 2B1g 2.953058 9Ag 2.953058 ; 4B1u 4.243456 4B3u 4.243456 4B2u 4.243456 ; 5B1u 4.243456 1Au 4.243456 5B3u 4.243456 ; 5B2u 4.243456 10Ag 5.042050 6B3u 5.416218 ; 6B1u 5.416218 6B2u 5.416218 11Ag 8.101653 ; 12Ag 8.311198 3B3g 8.311198 3B2g 8.311198 ; 3B1g 8.311198 13Ag 8.311198 7B3u 11.838258 ; 7B2u 11.838258 7B1u 11.838258 14Ag 14.727369 ; 15Ag 34.174361 . Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]. @UHF Final Energy: -0.49999200764259. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -0.4999920076425929; Two-Electron Energy = 0.0000000000000002; Total Energy = -0.4999920076425927. UHF NO Occupations:; HONO-0 : 1 Ag 1.0000000; LUNO+0 : 2 Ag 0.0000000; LUNO+1 : 3 Ag 0.0000000; LUNO+2 : 4 Ag 0.0000000; LUNO+3 : 5 Ag 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on psinet at Mon Apr 29 11:26:27 2019; Module time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 0.87 seconds = 0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168:7525,Energy,Energy,7525,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168,1,['Energy'],['Energy']
Energy Efficiency,"86; > 183A 1.950596 184A 1.955082 185A 1.962510; > 186A 1.987883 187A 1.992233 188A 2.021730; > 189A 2.047832 190A 2.054449 191A 2.063391; > 192A 2.073995 193A 2.089810 194A 2.098059; > 195A 2.119505 196A 2.136885 197A 2.139951; > 198A 2.143625 199A 2.144516 200A 2.149966; > 201A 2.153416 202A 2.160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15018,Energy,Energy,15018,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,8: json-v11-gradient; 379/411 Test #333: scf2 ............................. Passed 1.23 sec; Start 411: skeletonwavefunction; 380/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 404: json-schema-1-properties; 381/411 Test #410: skeletonsointegrals .............. Passed 0.89 sec; Start 400: json-schema-1-ghost; 382/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.47 sec; Start 353: tu1-h2o-energy; 383/411 Test #220: mints-helper ..................... Passed 1.12 sec; Start 330: scf-bs; 384/411 Test #411: skeletonwavefunction ............. Passed 0.90 sec; Start 378: mints12; 385/411 Test #398: json-v11-gradient ................ Passed 0.97 sec; Start 349: sapt-sf1; 386/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.48 sec; Start 387: python-energy; 387/411 Test #404: json-schema-1-properties ......... Passed 1.01 sec; Start 309: pywrap-molecule; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.03 sec; Start 293: psimrcc-pt2; 389/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 396: python-memdfjk; 390/411 Test #330: scf-bs ........................... Passed 0.85 sec; Start 354: tu2-ch2-energy; 391/411 Test #349: sapt-sf1 ......................... Passed 0.93 sec; Start 175: docs-dft; 392/411 Test #387: python-energy .................... Passed 0.82 sec; Start 382: psi4numpy-rhf; 393/411 Test #378: mints12 .......................... Passed 1.15 sec; Start 334: scf3; 394/411 Test #293: psimrcc-pt2 ...................... Passed 0.97 sec; Start 216: mints5; 395/411 Test #309: pywrap-molecule .................. Passed 1.09 sec; Start 208: matrix1; 396/411 Test #396: python-memdfjk ................... Passed 0.89 sec; Start 308: pywrap-db3; 397/411 Test #175: docs-dft ......................... Passed 0.57 sec; Start 364: options1; 398/411 Test #354: tu2-ch2-energy ................... Passed 0.81 sec; Start 215: mints4; 399/411 Test #382: psi4numpy-rhf .................... Passed 0.81 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:36448,energy,energy,36448,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,8: pywrap-db1 ....................... Passed 44.70 sec; Start 246: ocepa3; 129/412 Test #85: cdomp2-2 ......................... Passed 52.50 sec; Start 107: dcft-grad4; 130/412 Test #49: cc32 ............................. Passed 31.36 sec; Start 337: scf5; 131/412 Test #349: sapt-compare ..................... Passed 44.19 sec; Start 93: ci-multi; 132/412 Test #132: dfmp2-3 .......................... Passed 42.20 sec; Start 12: cbs-parser; 133/412 Test #27: cc13b ............................ Passed 151.23 sec; Start 51: cc34; 134/412 Test #64: cc46 ............................. Passed 56.40 sec; Start 134: dfmp2-ecp; 135/412 Test #313: rasci-ne ......................... Passed 35.25 sec; Start 195: fd-freq-gradient; 136/412 Test #1: adc1 ............................. Passed 24.46 sec; Start 201: fnocc2; 137/412 Test #143: dfomp2-4 ......................... Passed 54.17 sec; Start 324: sapt7; 138/412 Test #152: dfomp2p5-2 ....................... Passed 83.00 sec; Start 130: dfmp2-1; 139/412 Test #11: cbs-delta-energy ................. Passed 312.41 sec; Start 127: dfccsd-t-grad1; 140/412 Test #33: cc17 ............................. Passed 40.44 sec; Start 149: dfomp3-grad1; 141/412 Test #51: cc34 ............................. Passed 25.66 sec; Start 207: ghosts; 142/412 Test #338: scf6 ............................. Passed 43.58 sec; Start 343: soscf-dft; 143/412 Test #107: dcft-grad4 ....................... Passed 41.08 sec; Start 375: dft-custom-gga; 144/412 Test #246: ocepa3 ........................... Passed 50.41 sec; Start 50: cc33; 145/412 Test #337: scf5 ............................. Passed 42.96 sec; Start 34: cc18; 146/412 Test #93: ci-multi ......................... Passed 40.23 sec; Start 52: cc35; 147/412 Test #134: dfmp2-ecp ........................ Passed 35.02 sec; Start 275: opt8; 148/412 Test #324: sapt7 ............................ Passed 33.88 sec; Start 126: dfccsd-grad1; 149/412 Test #195: fd-freq-gradient ................. Passed 42.38 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:13147,energy,energy,13147,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,"8d_1 ; ruamel_yaml 0.15.37 py36h14c3975_2 ; setuptools 39.2.0 py36_0 ; simint 0.7 h642920c_1 psi4; six 1.11.0 py36h372c433_1 ; sqlite 3.23.1 he433501_0 ; tk 8.6.7 hc745277_3 ; urllib3 1.22 py36hbe7ace6_0 ; wheel 0.31.1 py36_0 ; xz 5.2.4 h14c3975_4 ; yaml 0.1.7 had09818_2 ; zlib 1.2.11 ha838bed_2; ```; ```; >>> ldd --version; ldd (GNU libc) 2.12; Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; Written by Roland McGrath and Ulrich Drepper.; ```; ```; >>> which conda python psi4; ~/.local/opt/PSI4/v1.2/bin/conda; ~/.local/opt/PSI4/v1.2/bin/python; ~/.local/opt/PSI4/v1.2/bin/psi4; ```; ```; >>> cat /proc/cpuinfo | grep flags; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms.......; ```; ```; >>> cat /proc/version ; Linux version 2.6.32-431.el6.x86_64 (mockbuild@x86-023.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Nov 10 22:19:54 EST 2013; ```; ```; >>> lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.5 (Santiago); Release:	6.5; Codename:	Santiago; ```; ```; >>> ldd -v lib/python3.6/site-packages/psi4/core.so ; 	linux-vdso.so.1 => (0x00007fffe3ffd000); 	libambit.so => /home/usrname/.local/opt/PSI4/v1.2/lib/python3.6/site-packages/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690:2607,monitor,monitor,2607,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-405831690,1,['monitor'],['monitor']
Energy Efficiency,9 ............................ Passed 17.82 sec; Start 46: cc30; 70/411 Test #144: dfomp2-grad2 ..................... Passed 12.75 sec; Start 61: cc44; 71/411 Test #167: dft-b3lyp ........................ Passed 61.83 sec; Start 149: dfomp3-grad2; 72/411 Test #204: frac-ip-fitting .................. Passed 58.04 sec; Start 11: cbs-delta-energy; 73/411 Test #149: dfomp3-grad2 ..................... Passed 14.73 sec; Start 43: cc28; 74/411 Test #46: cc30 ............................. Passed 23.10 sec; Start 259: omp3-3; 75/411 Test #19: cbs-xtpl-wrapper ................. Passed 46.33 sec; Start 17: cbs-xtpl-opt; 76/411 Test #292: psimrcc-fd-freq2 ................. Passed 55.91 sec; Start 100: ci-property; 77/411 Test #61: cc44 ............................. Passed 42.92 sec; Start 389: python-pubchem; 78/411 Test #43: cc28 ............................. Passed 33.97 sec; Start 159: dft-grad-meta; 79/411 Test #259: omp3-3 ........................... Passed 34.08 sec; Start 147: dfomp3-2; 80/411 Test #11: cbs-delta-energy ................. Passed 49.88 sec; Start 244: ocepa2; 81/411 Test #147: dfomp3-2 ......................... Passed 9.52 sec; Start 297: pubchem1; 82/411 Test #17: cbs-xtpl-opt ..................... Passed 44.69 sec; Start 170: dft1-alt; 83/411 Test #244: ocepa2 ........................... Passed 20.83 sec; Start 242: ocepa-grad2; 84/411 Test #100: ci-property ...................... Passed 45.67 sec; Start 153: dfomp2p5-grad2; 85/411 Test #389: python-pubchem ................... Passed 45.96 sec; Start 260: omp3-4; 86/411 Test #242: ocepa-grad2 ...................... Passed 16.91 sec; Start 2: adc2; 87/411 Test #153: dfomp2p5-grad2 ................... Passed 15.19 sec; Start 57: cc40; 88/411 Test #159: dft-grad-meta .................... Passed 48.81 sec; Start 249: omp2-4; 89/411 Test #260: omp3-4 ........................... Passed 19.43 sec; Start 151: dfomp2p5-2; 90/411 Test #297: pubchem1 ......................... Passed 45.74 sec; Start 299: pywrap-ali,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:7676,energy,energy,7676,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,"9 seconds.; Leucine energy: -440.3830677856804 Hartrees, time taken: 13.360224716999994 seconds.; Lysine energy: -495.9450901408551 Hartrees, time taken: 17.004098473 seconds.; Methionine energy: -798.8557355673612 Hartrees, time taken: 15.174141779999957 seconds.; Phenylalanine energy: -553.2067571527756 Hartrees, time taken: 21.84562706899999 seconds.; Proline energy: -400.01014403056064 Hartrees, time taken: 8.192189529000018 seconds.; Serine energy: -397.9050930788871 Hartrees, time taken: 6.108175248000009 seconds.; Threonine energy: -437.0635748952652 Hartrees, time taken: 8.374118565999936 seconds.; Tryptophan energy: -684.4098345276545 Hartrees, time taken: 37.255489416000046 seconds.; Tyrosine energy: -628.2533259038854 Hartrees, time taken: 25.399482511999963 seconds.; Valine energy: -401.1991694876506 Hartrees, time taken: 10.574376873999995 seconds.; ```. ## Summit stdout:; ```; Alanine energy: -322.83024417229103 Hartrees, time taken: 68.54604168608785 seconds.; Arginine energy: -605.1514689384549 Hartrees, time taken: 215.84501126222312 seconds.; Asparagine energy: -491.04432100071995 Hartrees, time taken: 177.1454620063305 seconds.; Aspartic_acid energy: -510.3043230853464 Hartrees, time taken: 198.31190185248852 seconds.; Cysteine energy: -720.4219957102104 Hartrees, time taken: 151.35190648585558 seconds.; Glutamic_acid energy: -549.4951112606502 Hartrees, time taken: 136.0041107479483 seconds.; Glutamine energy: -530.2261895601027 Hartrees, time taken: 136.45657246001065 seconds.; Glycine energy: -283.5893524874689 Hartrees, time taken: 110.86536369845271 seconds.; Histidine energy: -547.1545219389225 Hartrees, time taken: 190.28457425907254 seconds.; Isoleucine energy: -440.3258760616588 Hartrees, time taken: 176.21623157337308 seconds.; Leucine energy: -440.33076955681287 Hartrees, time taken: 154.9296657089144 seconds.; Lysine energy: -495.8966574116915 Hartrees, time taken: 167.91756228543818 seconds.; Methionine energy: -798.7987813339455 Hart",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595:2348,energy,energy,2348,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2375594595,1,['energy'],['energy']
Energy Efficiency,"9, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (DISP); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_disp.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (FIXED); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_fixed.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:2051,ENERGY,ENERGY,2051,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,2,['ENERGY'],['ENERGY']
Energy Efficiency,"9.00011e-05 DIIS; @DF-UHF iter 2: -2.83568849893678 -9.80996e-08 1.09058e-05 DIIS; @DF-UHF iter 3: -2.83568850042063 -1.48385e-09 4.55093e-08 DIIS; @DF-UHF iter 4: -2.83568850042064 -1.28786e-14 1.52740e-10 DIIS; @DF-UHF iter 5: -2.83568850042064 -8.88178e-16 9.96306e-12 DIIS; @DF-UHF iter 6: -2.83568850042064 2.22045e-15 2.48440e-16 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: 4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: 4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.903583 . Alpha Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Beta Occupied: . 1A -0.903583 . Beta Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.83568850042064. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8642104942204210; Two-Electron Energy = 1.0285219937997820; Total Energy = -2.8356885004206389. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000. Computation Completed. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SCF //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. => Loading Basis Set <=. Name: JUN-CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 46 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/jun-cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.48169297000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:5054,Energy,Energy,5054,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,"9.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the ca",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1800,energy,energy,1800,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"9.187; N 32.575 19.445 27.669; C 32.087 18.889 26.432; C 31.731 17.414 26.713; C 31.321 16.545 25.541; C 31.013 15.137 26.058; C 30.543 14.205 24.939; N 30.199 12.899 25.479; H 31.224 19.458 26.087; H 32.557 18.953 28.374; H 32.758 18.931 25.732; H 32.498 16.999 27.137; H 31.008 17.401 27.36; H 30.542 16.92 25.101; H 32.031 16.513 24.881; H 31.806 14.766 26.475; H 30.329 15.188 26.744; H 29.773 14.59 24.492; H 31.241 14.112 24.272; H 29.548 12.991 26.078; H 29.922 12.373 24.817; H 30.914 12.537 25.867; C 31.761 21.869 21.802; C 32.242 20.403 21.82; C 33.766 20.25 22.033; C 34.219 19.883 23.454; N 33.896 18.494 23.771; C 34.834 17.555 23.931; N 36.131 17.833 23.815; N 34.474 16.305 24.204; H 31.663 22.232 22.825; H 30.794 21.929 21.302; H 32.406 22.415 21.326; H 31.776 19.927 22.525; H 31.997 19.98 20.982; H 34.092 19.569 21.424; H 34.194 21.084 21.782; H 35.175 20.022 23.537; H 33.79 20.472 24.095; H 33.07 18.269 23.849; H 36.39 18.633 23.634; H 36.712 17.209 23.924; H 33.641 16.105 24.278; H 35.074 15.698 24.31; C 38.551 24.807 28.833; C 39.217 23.791 29.752; O 40.012 23.0 29.251; H 39.174 24.9 27.944; H 37.55 24.41 28.664; H 38.405 25.701 29.18; N 38.994 23.745 31.065; C 39.394 22.611 31.867; C 38.505 22.665 33.102; O 37.885 23.692 33.416; C 40.943 22.687 32.147; C 41.446 23.269 33.424; O 41.297 21.311 32.139; H 38.613 24.41 31.455; H 39.273 21.75 31.437; H 41.327 23.294 31.495; H 42.122 21.236 32.281; H 42.415 23.239 33.434; H 41.151 24.19 33.499; H 41.099 22.757 34.172; N 38.365 21.521 33.776; C 37.444 21.422 34.889; H 36.713 20.636 34.701; H 37.974 21.174 35.809; H 38.903 20.867 33.627; H 36.998 22.28 34.969. units angstrom; no_reorient; symmetry c1; }. set globals {; basis jun-cc-pvdz; df_basis_scf jun-cc-pvdz-jkfit; df_basis_sapt jun-cc-pvdz-ri; guess sad; scf_type df; freeze_core true; }. set sapt {; print 1; }. energy('fisapt0-d3mbj'); ```. Hello, We are having the same pairwise sum error . ! !; ! pairwise sum -2.401299138175176 != energy -2.40130245 !; ! !",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2914#issuecomment-1720232923:8757,energy,energy,8757,https://psicode.org,https://github.com/psi4/psi4/issues/2914#issuecomment-1720232923,2,['energy'],['energy']
Energy Efficiency,9/413 Test #106: dcft-grad2 ....................... Passed 122.59 sec; Start 151: dfomp3-grad2; 40/413 Test #58: cc40 ............................. Passed 84.64 sec; Start 47: cc30; 41/413 Test #160: dfscf-bz2 ........................ Passed 131.53 sec; Start 349: sapt-dft2; 42/413 Test #60: cc42 ............................. Passed 81.75 sec; Start 251: omp2-4; 43/413 Test #151: dfomp3-grad2 ..................... Passed 88.57 sec; Start 261: omp3-3; 44/413 Test #195: fd-freq-energy-large ............. Passed 515.62 sec; Start 262: omp3-4; 45/413 Test #117: dcft9 ............................ Passed 104.53 sec; Start 76: cc6; 46/413 Test #183: fsapt-allterms ................... Passed 542.80 sec; Start 263: omp3-5; 47/413 Test #47: cc30 ............................. Passed 83.62 sec; Start 27: cc13b; 48/413 Test #283: opt-irc-2 ........................ Passed 193.34 sec; Start 185: isapt2; 49/413 Test #306: pywrap-checkrun-rhf .............. Passed 792.80 sec; Start 156: dft-grad-lr2; 50/413 Test #11: cbs-delta-energy ................. Passed 262.37 sec; Start 65: cc47; 51/413 Test #349: sapt-dft2 ........................ Passed 118.82 sec; Start 62: cc44; 52/413 Test #302: pywrap-all ....................... Passed 857.48 sec; Start 149: dfomp3-2; 53/413 Test #251: omp2-4 ........................... Passed 120.68 sec; Start 92: cepa-module; 54/413 Test #76: cc6 .............................. Passed 115.05 sec; Start 35: cc19; 55/413 Test #261: omp3-3 ........................... Passed 125.78 sec; Start 75: cc5a; 56/413 Test #65: cc47 ............................. Passed 60.15 sec; Start 70: cc51; 57/413 Test #262: omp3-4 ........................... Passed 148.99 sec; Start 252: omp2-5; 58/413 Test #27: cc13b ............................ Passed 133.63 sec; Start 244: ocepa-grad2; 59/413 Test #185: isapt2 ........................... Passed 112.43 sec; Start 64: cc46; 60/413 Test #263: omp3-5 ........................... Passed 173.45 sec; Start 232: mp2-module; 61/413 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:4980,energy,energy,4980,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['energy'],['energy']
Energy Efficiency,"90903258181044 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -308.38044687527724 -1.47141e+00 1.27547e-03 DIIS; @DF-RKS iter 2: -308.40241691478502 -2.19700e-02 1.31335e-03 DIIS; @DF-RKS iter 3: -308.53663731037796 -1.34220e-01 4.92966e-04 DIIS; @DF-RKS iter 4: -308.55582354785412 -1.91862e-02 1.78690e-04 DIIS; @DF-RKS iter 5: -308.55841981379780 -2.59627e-03 4.24843e-05 DIIS; @DF-RKS iter 6: -308.55870799442886 -2.88181e-04 2.96248e-05 DIIS; @DF-RKS iter 7: -308.55881660865606 -1.08614e-04 1.50957e-05 DIIS; @DF-RKS iter 8: -308.55887443471090 -5.78261e-05 8.58740e-06 DIIS; @DF-RKS iter 9: -308.55891429039167 -3.98557e-05 5.23007e-06 DIIS ; @DF-RKS iter 10: -308.55893438187678 -2.00915e-05 3.97102e-06 DIIS ; @DF-RKS iter 11: -308.55897076821287 -3.63863e-05 3.09810e-06 DIIS ; @DF-RKS iter 12: -308.55899251437626 -2.17462e-05 1.29222e-06 DIIS ; @DF-RKS iter 13: -308.55899611302931 -3.59865e-06 5.63064e-07 DIIS ; @DF-RKS iter 14: -308.55899645885273 -3.45823e-07 2.29741e-07 DIIS ; Energy and wave function converged.; ```. And with `set wcombine false`:; ```...; ==> Integral Setup <==; ; DFHelper Memory: AOs need 6.464 GiB; user supplied 6.464 GiB. Using in-core AOs.; ...; ==> Iterations <==; ; Total Energy Delta E RMS |[F,P]|; ; @DF-RKS iter SAD: -306.90916690803959 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -306.98727406041530 -7.81072e-02 1.83756e-03 DIIS; @DF-RKS iter 2: -307.13667252428678 -1.49398e-01 1.47236e-03 DIIS; @DF-RKS iter 3: -307.32880507487312 -1.92133e-01 1.25216e-04 DIIS; @DF-RKS iter 4: -307.32990958370664 -1.10451e-03 7.65745e-05 DIIS; @DF-RKS iter 5: -307.33036354773054 -4.53964e-04 1.70705e-05 DIIS; @DF-RKS iter 6: -307.33039129462924 -2.77469e-05 5.09682e-06 DIIS; @DF-RKS iter 7: -307.33039390006070 -2.60543e-06 1.20852e-06 DIIS; @DF-RKS iter 8: -307.33039428809019 -3.88029e-07 4.42881e-07 DIIS; Energy and wave function converged.; ```. Both jobs were run with 8 threads and 29337MB of memory, on the same machine (An `Intel(R) Xeon(R) Gold 6126 CPU ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182:1929,Energy,Energy,1929,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182,1,['Energy'],['Energy']
Energy Efficiency,90: python-mints9 .................... Passed 1.81 sec; Start 408: skeletonmointegrals; 374/411 Test #102: decontract ....................... Passed 1.35 sec; Start 288: psimrcc-ccsd_t-2; 375/411 Test #311: rasci-h2o ........................ Passed 1.02 sec; Start 410: skeletonsointegrals; 376/411 Test #211: mcscf3 ........................... Passed 0.85 sec; Start 289: psimrcc-ccsd_t-3; 377/411 Test #408: skeletonmointegrals .............. Passed 0.92 sec; Start 220: mints-helper; 378/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.40 sec; Start 398: json-v11-gradient; 379/411 Test #333: scf2 ............................. Passed 1.23 sec; Start 411: skeletonwavefunction; 380/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 404: json-schema-1-properties; 381/411 Test #410: skeletonsointegrals .............. Passed 0.89 sec; Start 400: json-schema-1-ghost; 382/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.47 sec; Start 353: tu1-h2o-energy; 383/411 Test #220: mints-helper ..................... Passed 1.12 sec; Start 330: scf-bs; 384/411 Test #411: skeletonwavefunction ............. Passed 0.90 sec; Start 378: mints12; 385/411 Test #398: json-v11-gradient ................ Passed 0.97 sec; Start 349: sapt-sf1; 386/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.48 sec; Start 387: python-energy; 387/411 Test #404: json-schema-1-properties ......... Passed 1.01 sec; Start 309: pywrap-molecule; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.03 sec; Start 293: psimrcc-pt2; 389/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 396: python-memdfjk; 390/411 Test #330: scf-bs ........................... Passed 0.85 sec; Start 354: tu2-ch2-energy; 391/411 Test #349: sapt-sf1 ......................... Passed 0.93 sec; Start 175: docs-dft; 392/411 Test #387: python-energy .................... Passed 0.82 sec; Start 382: psi4numpy-rhf; 393/411 Test #378: mints12 .......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:35849,energy,energy,35849,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['energy'],['energy']
Energy Efficiency,"92010950000 ; C 0.721496910000 -1.670643360000 -2.152443790000 ; C -1.063549680000 -3.841420440000 -1.557776710000 ; O -1.948096970000 -5.099106660000 -3.182663630000 ; O 1.029493160000 -1.398900900000 -4.725495590000 ; H -2.189705850000 1.155308030000 -1.806092140000 ; H 0.894874330000 2.306678020000 -2.081542830000 ; H -1.363017000000 0.001652010000 2.739108210000 ; H 1.809322310000 0.937803050000 2.399286530000 ; H -0.721859200000 4.189879560000 4.278063110000 ; H -2.598701020000 4.299216180000 1.837344180000 ; H 0.339726220000 5.162960950000 1.554139510000 ; H 2.524391750000 -2.097515210000 -1.247187970000 ; H -1.472639020000 -4.216240700000 0.431691060000 ; H 0.318200660000 -2.817364330000 -5.576682870000 ; units bohr; no_com; no_reorient; }; # create the psi4 job; set {; basis def2-TZVPPD; dft_radial_points 99; dft_spherical_points 590; maxiter 200; }. e,wfn = energy('pbe0',return_wfn=True). set {; basis def2-TZVPPD; ddx True; ddx_model pcm; ddx_solvent water; ddx_solvent_epsilon 78.4; maxiter 200; guess read; ddx_radii_set bondi; ddx_radii_scaling 1.2; }. properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""dipole"",""lowdin_charges"",""wiberg_lowdin_indices"",""mayer_indices"", ]); ```. The vacuum energy is `-363.11142404607966`, whereas both PCM calculations converge to something around `-653.5` with unphysical MBIS (and Mulliken) charge results:; ```; MBIS Charges: (a.u.) ; Center Symbol Z Pop. Charge ; 1 C 6 1.926149 4.073851 ; 2 C 6 1.943924 4.056076 ; 3 N 7 1.982558 5.017442 ; 4 C 6 1.933209 4.066791 ; 5 C 6 1.957089 4.042911 ; 6 O 8 6.764062 1.235938 ; 7 O 8 14.772552 -6.772552 ; 8 H 1 8.534492 -7.534492 ; 9 H 1 4.599147 -3.599147 ; 10 H 1 6.329483 -5.329483 ; 11 H 1 1.995757 -0.995757 ; 12 H 1 0.000000 1.000000 ; 13 H 1 0.000000 1.000000 ; 14 H 1 0.000000 1.000000 ; 15 H 1 3.263884 -2.263884 ; 16 H 1 0.000000 1.000000 ; 17 H 1 0.000003 0.999997 ; ```. I've tried using different initial guesses, VDW radii, etc but nothing has helped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651:3718,energy,energy,3718,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2394818651,4,"['Charge', 'charge', 'energy']","['Charge', 'Charges', 'charge', 'energy']"
Energy Efficiency,"92e-01 DIIS; @RKS iter 4: -128.89363525981292 -1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP..........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:28 2018. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12545,Energy,Energy,12545,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"93 ; 13Ag 8.272193 7B3u 11.798691 7B2u 11.798691 ; 7B1u 11.798691 14Ag 14.696251 15Ag 34.149342 . Beta Occupied: . . Beta Virtual: . 1Ag 0.016098 2Ag 0.109076 1B2u 0.211108 ; 1B1u 0.211108 1B3u 0.211108 3Ag 0.385413 ; 2B1u 0.802773 2B2u 0.802773 2B3u 0.802773 ; 4Ag 0.900610 1B3g 0.900610 1B2g 0.900610 ; 1B1g 0.900610 5Ag 0.900610 6Ag 1.071716 ; 3B1u 2.265097 3B3u 2.265097 3B2u 2.265097 ; 7Ag 2.575158 8Ag 2.953058 2B2g 2.953058 ; 2B3g 2.953058 2B1g 2.953058 9Ag 2.953058 ; 4B1u 4.243456 4B3u 4.243456 4B2u 4.243456 ; 5B1u 4.243456 1Au 4.243456 5B3u 4.243456 ; 5B2u 4.243456 10Ag 5.042050 6B3u 5.416218 ; 6B1u 5.416218 6B2u 5.416218 11Ag 8.101653 ; 12Ag 8.311198 3B3g 8.311198 3B2g 8.311198 ; 3B1g 8.311198 13Ag 8.311198 7B3u 11.838258 ; 7B2u 11.838258 7B1u 11.838258 14Ag 14.727369 ; 15Ag 34.174361 . Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]. @UHF Final Energy: -0.49999200764259. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -0.4999920076425929; Two-Electron Energy = 0.0000000000000002; Total Energy = -0.4999920076425927. UHF NO Occupations:; HONO-0 : 1 Ag 1.0000000; LUNO+0 : 2 Ag 0.0000000; LUNO+1 : 3 Ag 0.0000000; LUNO+2 : 4 Ag 0.0000000; LUNO+3 : 5 Ag 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on psinet at Mon Apr 29 11:26:27 2019; Module time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 0.87 seconds = 0.01 minutes; 	system time = 0.02 seconds = 0.00 minutes; 	to",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168:7588,Energy,Energy,7588,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487627168,1,['Energy'],['Energy']
Energy Efficiency,"9461 -2.83568e+00 0.00000e+00 ; @DF-UHF iter 1: -2.83568840083719 -7.04164e-06 9.00011e-05 DIIS; @DF-UHF iter 2: -2.83568849893678 -9.80996e-08 1.09058e-05 DIIS; @DF-UHF iter 3: -2.83568850042063 -1.48385e-09 4.55093e-08 DIIS; @DF-UHF iter 4: -2.83568850042064 -1.28786e-14 1.52740e-10 DIIS; @DF-UHF iter 5: -2.83568850042064 -8.88178e-16 9.96306e-12 DIIS; @DF-UHF iter 6: -2.83568850042064 2.22045e-15 2.48440e-16 DIIS; Energy and wave function converged. ==> Post-Iterations <==. @Spin Contamination Metric: 4.440892099E-16; @S^2 Expected: 0.000000000E+00; @S^2 Observed: 4.440892099E-16; @S Expected: 0.000000000E+00; @S Observed: 0.000000000E+00. Orbital Energies [Eh]; ---------------------. Alpha Occupied: . 1A -0.903583 . Alpha Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Beta Occupied: . 1A -0.903583 . Beta Virtual: . 2A 0.556192 3A 2.081751 4A 5.330969 . Final Occupation by Irrep:; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.83568850042064. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8642104942204210; Two-Electron Energy = 1.0285219937997820; Total Energy = -2.8356885004206389. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000. Computation Completed. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SCF //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. => Loading Basis Set <=. Name: JUN-CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 46 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/jun-cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- -----",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:4969,Energy,Energy,4969,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Energy'],['Energy']
Energy Efficiency,96: python-mints13; 371/412 Test #391: python-mints9 .................... Passed 15.88 sec; Start 404: json-schema-1-gradient; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 16.63 sec; Start 299: pubchem2; 373/412 Test #211: mcscf2 ........................... Passed 17.01 sec; Start 223: mints10; 374/412 Test #407: skeletonaointegrals .............. Passed 16.26 sec; Start 354: tu1-h2o-energy; 375/412 Test #331: scf-bs ........................... Passed 16.05 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.85 sec; Start 221: mints-helper; 377/412 Test #396: python-mints13 ................... Passed 17.11 sec; Start 103: decontract; 378/412 Test #404: json-schema-1-gradient ........... Passed 16.61 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 17.11 sec; Start 215: mints3; 380/412 Test #223: mints10 .......................... Passed 16.49 sec; Start 384: psi4numpy-rhf-gradient; 381/412 Test #354: tu1-h2o-energy ................... Passed 18.71 sec; Start 401: json-schema-1-ghost; 382/412 Test #411: skeletonsointegrals .............. Passed 17.04 sec; Start 355: tu2-ch2-energy; 383/412 Test #221: mints-helper ..................... Passed 17.55 sec; Start 399: json-v11-gradient; 384/412 Test #103: decontract ....................... Passed 16.77 sec; Start 397: python-memdfjk; 385/412 Test #381: psi4numpy-cphf ................... Passed 17.48 sec; Start 405: json-schema-1-properties; 386/412 Test #215: mints3 ........................... Passed 17.22 sec; Start 379: mints12; 387/412 Test #384: psi4numpy-rhf-gradient ........... Passed 16.81 sec; Start 388: python-energy; 388/412 Test #355: tu2-ch2-energy ................... Passed 16.29 sec; Start 310: pywrap-molecule; 389/412 Test #399: json-v11-gradient ................ Passed 16.02 sec; Start 383: psi4numpy-rhf; 390/412 Test #401: json-schema-1-ghost .............. Passed 16.97 sec; Start 335: scf3; 391/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:35748,energy,energy,35748,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,99: pubchem2; 373/412 Test #211: mcscf2 ........................... Passed 17.01 sec; Start 223: mints10; 374/412 Test #407: skeletonaointegrals .............. Passed 16.26 sec; Start 354: tu1-h2o-energy; 375/412 Test #331: scf-bs ........................... Passed 16.05 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.85 sec; Start 221: mints-helper; 377/412 Test #396: python-mints13 ................... Passed 17.11 sec; Start 103: decontract; 378/412 Test #404: json-schema-1-gradient ........... Passed 16.61 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 17.11 sec; Start 215: mints3; 380/412 Test #223: mints10 .......................... Passed 16.49 sec; Start 384: psi4numpy-rhf-gradient; 381/412 Test #354: tu1-h2o-energy ................... Passed 18.71 sec; Start 401: json-schema-1-ghost; 382/412 Test #411: skeletonsointegrals .............. Passed 17.04 sec; Start 355: tu2-ch2-energy; 383/412 Test #221: mints-helper ..................... Passed 17.55 sec; Start 399: json-v11-gradient; 384/412 Test #103: decontract ....................... Passed 16.77 sec; Start 397: python-memdfjk; 385/412 Test #381: psi4numpy-cphf ................... Passed 17.48 sec; Start 405: json-schema-1-properties; 386/412 Test #215: mints3 ........................... Passed 17.22 sec; Start 379: mints12; 387/412 Test #384: psi4numpy-rhf-gradient ........... Passed 16.81 sec; Start 388: python-energy; 388/412 Test #355: tu2-ch2-energy ................... Passed 16.29 sec; Start 310: pywrap-molecule; 389/412 Test #399: json-v11-gradient ................ Passed 16.02 sec; Start 383: psi4numpy-rhf; 390/412 Test #401: json-schema-1-ghost .............. Passed 16.97 sec; Start 335: scf3; 391/412 Test #397: python-memdfjk ................... Passed 16.57 sec; Start 217: mints5; 392/412 Test #405: json-schema-1-properties ......... Passed 15.81 sec; Start 212: mcscf3; 393/412 Test #379: mints12 ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:35916,energy,energy,35916,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,"99A 2.144516 200A 2.149966; > 201A 2.153416 202A 2.160845 203A 2.177753; > 204A 2.193917 205A 2.249401 206A 2.259315; > 207A 2.260884 208A 2.264073 209A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15248,Energy,Energy,15248,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,": 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2064,energy,energy,2064,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,": 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000; LUNO+3 : 5 A 0.0000000. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: -5.6000. Electronic Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: 5.5998. Dipole Moment: [e a0]; X: -0.0000 Y: -0.0000 Z: -0.0002 Total: 0.0002. Dipole Moment: [D]; X: -0.0000 Y: -0.0000 Z: -0.0005 Total: 0.0005. /home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py:538: FutureWarning: Object arrays will not be saved by default in the future because `allow_pickle` will default to False. You should add `allow_pickle=True` explicitly to elminate this warning.; pickle_kwargs=pickle_kwargs); Traceback (most recent call last):; File ""minimal.py"", line 34, in <module>; scf_e_A, wfnA = psi4.energy(""SCF"", return_wfn=True, molecule=monomerA); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/procrouting/proc.py"", line 2058, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/procrouting/proc.py"", line 1423, in scf_helper; scf_wfn.to_file(write_filename); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/p4util/python_helpers.py"", line 303, in _core_wavefunction_to_file; np.save(filename, wfn_data); File ""/home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/npyio.py"", line 538, in save; pickle_kwargs=pickle_kwargs); File ""/home/filip/software/intel-parallel/intelpython3/lib/python3.6/site-packages/numpy/lib/format.py"", line 637, in write_array; raise ValueError(""Object arrays cannot be saved when ""; ValueError: Object arrays cannot be saved when allow_pickle=False. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:10631,energy,energy,10631,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,4,['energy'],['energy']
Energy Efficiency,: 223890.02 s (user); 321491.71 s (system); 25022.16 s (total). *** tstop() called on pn029.its.monash.edu.au at Thu Mar 13 03:02:13 2014; Module time:; user time = 4263649.92 seconds = 71060.83 minutes; system time = 6115066.90 seconds = 101917.78 minutes; total time = 484147 seconds = 8069.12 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 6115258.31 seconds = 101920.97 minutes; total time = 484647 seconds = 8077.45 minutes. *** tstart() called on pn029.its.monash.edu.au; *** at Thu Mar 13 03:19:32 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 64; available memory = 43097.75 mb; memory requirements = 433739.41 mb. Number of ijk combinations: 50116. Computing (T) correction... % complete total time; 10.0 54071 s; 20.0 107105 s; 30.1 161098 s; 40.0 214685 s; 50.1 268763 s; 60.0 322003 s; 70.1 378258 s; 80.1 435809 s; 90.1 493509 s. (T) energy -0.198672700359. CCSD(T) correlation energy -4.167498886158; * CCSD(T) total energy -1133.028826149781. *** tstop() called on pn029.its.monash.edu.au at Wed Mar 19 13:22:06 2014; Module time:; user time = 0.00 seconds = 0.00 minutes; system time = 32946184.58 seconds = 549103.08 minutes; total time = 554554 seconds = 9242.57 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 39077777.68 seconds = 651296.29 minutes; total time = 1040240 seconds = 17337.33 minutes. *** tstop() called on pn029.its.monash.edu.au at Wed Mar 19 13:22:08 2014; Module time:; user time = 0.00 seconds = 0.00 minutes; system time = 32946186.58 seconds = 549103.11 minutes; total time = 554556 seconds = 9242.60 minutes; Total time:; user time = 4279640.89 seconds = 71327.35 minutes; system time = 39077779.68 seconds = 651296.33 minutes; total time = 1040242 seconds = 17337.37 minutes. *** PSI4 exiting successfully. Buy a developer a beer!; ```. ```; **************************,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-38020193:4561,energy,energy,4561,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-38020193,1,['energy'],['energy']
Energy Efficiency,": 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bond_length}: {str(e)}""); energies = {method: {state: [float('nan')] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [None] for state in range(1, num_states + 1)} for method in methods_to_try}. return energies, wfns. def generate_potential_energy_curves():; bond_lengths = np.arange(1.0, 10.2, 0.2); num_states = 6; methods_to_try = ['EOM-CCSD', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in rang",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:1459,energy,energy,1459,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,1,['energy'],['energy']
Energy Efficiency,": [ 73 ]. OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. Computing two-electron integrals...done; Computed 3549448 non-zero two-electron integrals.; Stored in file 33. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:40 2017. *******************************************************; * *; * Frozen Natural Orbitals *; * *; *******************************************************. ==> Transform (OV|OV) integrals <==. 	Presorting SO-basis two-electron integrals.; 	Sorting File: SO Ints (nn|nn) nbuckets = 1; 	Transforming the one-electron integrals and constructing Fock matrices; 	Starting first half-transformation.; 	Sorting half-transformed integrals.; 	First half integral transformation complete.; 	Starting second half-transformation.; 	Two-electron integral transformation complete. ==> Build MP2 amplitudes, OPDM, and NOs <==. OS MP2 correlation energy: -0.209233828319; SS MP2 correlation energy: -0.076503424385; MP2 correlation energy: -0.285737252704; * MP2 total energy: -0.285737252704. Cutoff for significant NO occupancy: 1.000e-06. No. virtuals per irrep (original): [ 56 ]; No. virtuals per irrep (truncated): [ 56 ]. Retaining 56 of 56 virtual orbitals. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:41 2017; Module time:; 	user time = 0.68 seconds = 0.01 minutes; 	system time = 0.14 seconds = 0.00 minutes; 	total time = 1 seconds = 0.02 minutes; Total time:; 	user time = 3.48 seconds = 0.06 minutes; 	system time = 0.20 seconds = 0.00 minutes; 	total time = 4 seconds = 0.07 minutes. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:41 2017. ==> Transform all two-electron integrals <==. 	Presorting SO-basis two-electron integrals.; 	Sorting File: SO Ints (nn|nn) nbuckets = 1; 	Transforming the one-electron integrals and constructing Fock matrices; 	Starting first half-transformation.; 	Sorting half-transformed integrals.; 	First half integral trans",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:9203,energy,energy,9203,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['energy'],['energy']
Energy Efficiency,: cc6 .............................. Passed 49.07 sec; Start 259: omp3-3; 66/411 Test #316: sapt2 ............................ Passed 354.02 sec; Start 74: cc5a; 67/411 Test #115: dcft9 ............................ Passed 13.18 sec; Start 317: sapt3; 68/411 Test #319: sapt5 ............................ Passed 67.31 sec; Start 167: dft-b3lyp; 69/411 Test #259: omp3-3 ........................... Passed 18.77 sec; Start 30: cc15; 70/411 Test #279: opt14 ............................ Passed 74.61 sec; Start 153: dfomp2p5-grad2; 71/411 Test #30: cc15 ............................. Passed 12.46 sec; Start 104: dcft-grad2; 72/411 Test #153: dfomp2p5-grad2 ................... Passed 15.20 sec; Start 61: cc44; 73/411 Test #292: psimrcc-fd-freq2 ................. Passed 62.74 sec; Start 204: frac-ip-fitting; 74/411 Test #104: dcft-grad2 ....................... Passed 16.24 sec; Start 144: dfomp2-grad2; 75/411 Test #74: cc5a ............................. Passed 46.64 sec; Start 11: cbs-delta-energy; 76/411 Test #144: dfomp2-grad2 ..................... Passed 11.68 sec; Start 26: cc13b; 77/411 Test #167: dft-b3lyp ........................ Passed 64.40 sec; Start 244: ocepa2; 78/411 Test #26: cc13b ............................ Passed 16.81 sec; Start 250: omp2-5; 79/411 Test #317: sapt3 ............................ Passed 72.42 sec; Start 230: mp2-module; 80/411 Test #61: cc44 ............................. Passed 45.71 sec; Start 151: dfomp2p5-2; 81/411 Test #250: omp2-5 ........................... Passed 18.02 sec; Start 19: cbs-xtpl-wrapper; 82/411 Test #151: dfomp2p5-2 ....................... Passed 12.10 sec; Start 147: dfomp3-2; 83/411 Test #11: cbs-delta-energy ................. Passed 43.01 sec; Start 280: opt-irc-1; 84/411 Test #244: ocepa2 ........................... Passed 23.63 sec; Start 249: omp2-4; 85/411 Test #204: frac-ip-fitting .................. Passed 60.44 sec; Start 17: cbs-xtpl-opt; 86/411 Test #147: dfomp3-2 ......................... Passed 8.76 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:7186,energy,energy,7186,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['energy'],['energy']
Energy Efficiency,: cc7 .............................. Passed 682.74 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 1064.72 sec; Start 113: dcft5; 10/413 Test #116: dcft8 ............................ Passed 1093.28 sec; Start 29: cc13d; 11/413 Test #32: cc16 ............................. Passed 458.97 sec; Start 307: pywrap-checkrun-rohf; 12/413 Test #40: cc24 ............................. Passed 1133.10 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #36: cc2 .............................. Passed 1137.87 sec; Start 184: isapt1; 14/413 Test #105: dcft-grad1 ....................... Passed 1187.32 sec; Start 48: cc31; 15/413 Test #242: ocepa-freq1 ...................... Passed 651.24 sec; Start 45: cc29; 16/413 Test #396: python-vibanalysis ............... Passed 1355.01 sec; Start 114: dcft6; 17/413 Test #29: cc13d ............................ Passed 265.22 sec; Start 59: cc41; 18/413 Test #48: cc31 ............................. Passed 179.36 sec; Start 11: cbs-delta-energy; 19/413 Test #157: dft-grad-lr3 ..................... Passed 434.88 sec; Start 61: cc43; 20/413 Test #302: pywrap-all ....................... Passed 1394.91 sec; Start 18: cbs-xtpl-func; 21/413 Test #113: dcft5 ............................ Passed 339.46 sec; Start 183: fsapt-allterms; 22/413 Test #229: mp2-def2 ......................... Passed 401.24 sec; Start 195: fd-freq-energy-large; 23/413 Test #13: cbs-xtpl-alpha ................... Passed 339.68 sec; Start 197: fd-freq-gradient-large; 24/413 Test #59: cc41 ............................. Passed 137.70 sec; Start 280: opt13; 25/413 Test #45: cc29 ............................. Passed 218.43 sec; Start 375: dft-custom-mgga; 26/413 Test #61: cc43 ............................. Passed 139.20 sec; Start 71: cc52; 27/413 Test #46: cc3 .............................. Passed 1535.28 sec; Start 28: cc13c; 28/413 Test #184: isapt1 ........................... Passed 416.48 sec; Start 283: opt-irc-2; 29/413 Test #114: dcft6 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:2088,energy,energy,2088,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,: dfccd1 ........................... Passed 1.64 sec; Start 253: omp2p5-1; 304/411 Test #3: casscf-fzc-sp .................... Passed 3.57 sec; Start 119: dfcasscf-sp; 305/411 Test #88: cepa2 ............................ Passed 2.64 sec; Start 130: dfmp2-2; 306/411 Test #137: dfmp2-grad4 ...................... Passed 3.41 sec; Start 139: dfomp2-1; 307/411 Test #253: omp2p5-1 ......................... Passed 1.33 sec; Start 136: dfmp2-grad3; 308/411 Test #391: python-mints2 .................... Passed 2.45 sec; Start 284: props1; 309/411 Test #388: python-curve ..................... Passed 2.06 sec; Start 116: ao-dfcasscf-sp; 310/411 Test #119: dfcasscf-sp ...................... Passed 1.71 sec; Start 135: dfmp2-grad2; 311/411 Test #235: mp2-property ..................... Passed 2.60 sec; Start 225: mom; 312/411 Test #130: dfmp2-2 .......................... Passed 1.55 sec; Start 213: mints2; 313/411 Test #136: dfmp2-grad3 ...................... Passed 1.73 sec; Start 397: json-v11-energy; 314/411 Test #139: dfomp2-1 ......................... Passed 1.95 sec; Start 363: zaptn-nh2; 315/411 Test #116: ao-dfcasscf-sp ................... Passed 2.81 sec; Start 201: fnocc3; 316/411 Test #284: props1 ........................... Passed 3.35 sec; Start 224: molden2; 317/411 Test #135: dfmp2-grad2 ...................... Passed 3.18 sec; Start 289: psimrcc-ccsd_t-3; 318/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 343: stability1; 319/411 Test #225: mom .............................. Passed 3.26 sec; Start 121: dfccdl1; 320/411 Test #397: json-v11-energy .................. Passed 2.69 sec; Start 226: mp2-1; 321/411 Test #363: zaptn-nh2 ........................ Passed 2.93 sec; Start 85: cepa0-grad1; 322/411 Test #224: molden2 .......................... Passed 2.15 sec; Start 251: omp2-grad1; 323/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.87 sec; Start 399: json-schema-1-energy; 324/411 Test #343: stability1 ....................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:29215,energy,energy,29215,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['energy'],['energy']
Energy Efficiency,: dfep2-2 .......................... Passed 1.82 sec; Start 397: json-v11-energy; 310/411 Test #221: mints9 ........................... Passed 1.93 sec; Start 199: fnocc1; 311/411 Test #83: cdomp2-1 ......................... Passed 2.27 sec; Start 4: casscf-semi; 312/411 Test #139: dfomp2-1 ......................... Passed 2.64 sec; Start 395: python-mints13; 313/411 Test #363: zaptn-nh2 ........................ Passed 1.87 sec; Start 271: opt5; 314/411 Test #86: cepa0-grad2 ...................... Passed 3.41 sec; Start 234: mp3-grad2; 315/411 Test #395: python-mints13 ................... Passed 1.71 sec; Start 361: x2c2; 316/411 Test #397: json-v11-energy .................. Passed 2.95 sec; Start 362: x2c3; 317/411 Test #191: fcidump .......................... Passed 3.66 sec; Start 223: molden1; 318/411 Test #232: mp2p5-grad2 ...................... Passed 3.51 sec; Start 119: dfcasscf-sp; 319/411 Test #271: opt5 ............................. Passed 3.06 sec; Start 399: json-schema-1-energy; 320/411 Test #361: x2c2 ............................. Passed 1.96 sec; Start 224: molden2; 321/411 Test #362: x2c3 ............................. Passed 2.32 sec; Start 130: dfmp2-2; 322/411 Test #4: casscf-semi ...................... Passed 4.96 sec; Start 228: mp2-grad1; 323/411 Test #234: mp3-grad2 ........................ Passed 3.56 sec; Start 136: dfmp2-grad3; 324/411 Test #119: dfcasscf-sp ...................... Passed 4.30 sec; Start 118: dfcasscf-fzc-sp; 325/411 Test #399: json-schema-1-energy ............. Passed 3.59 sec; Start 262: omp3-grad1; 326/411 Test #130: dfmp2-2 .......................... Passed 2.96 sec; Start 255: omp2p5-grad1; 327/411 Test #223: molden1 .......................... Passed 5.46 sec; Start 190: fci-coverage; 328/411 Test #228: mp2-grad1 ........................ Passed 3.17 sec; Start 134: dfmp2-grad1; 329/411 Test #199: fnocc1 ........................... Passed 8.69 sec; Start 88: cepa2; 330/411 Test #224: molden2 .......................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:29863,energy,energy,29863,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,": fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests passed, 0 tests failed out of 20. Label Time Summary:; addon = 178.52 sec*proc (2 tests); cart = 1182.47 sec*proc (6 tests); casscf = 12.07 sec*proc (1 test); cc = 6.74 sec*proc (1 test); d2ints = 2.55 sec*proc (1 test); df = 78.01 sec*proc (1 test); dfmp2 = 78.01 sec*proc (1 test); dftd3 = 49.54 sec*proc (1 test); dftd4 = 128.98 sec*proc (1 test); fcidump = 4.32 sec*proc (1 test); findif = 17.49 sec*proc (1 test); fsapt = 487.00 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:1435,energy,energy,1435,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523,2,['energy'],['energy']
Energy Efficiency,: ocepa1 ........................... Passed 7.37 sec; Start 247: omp2-1; 304/412 Test #235: mp3-grad2 ........................ Passed 4.62 sec; Start 237: mpn-bh; 305/412 Test #332: scf1 ............................. Passed 4.99 sec; Start 120: dfcasscf-sp; 306/412 Test #119: dfcasscf-fzc-sp .................. Passed 2.91 sec; Start 340: scf-property; 307/412 Test #258: omp3-1 ........................... Passed 2.90 sec; Start 285: props1; 308/412 Test #192: fcidump .......................... Passed 3.82 sec; Start 135: dfmp2-grad1; 309/412 Test #180: fsapt2 ........................... Passed 5.27 sec; Start 272: opt5; 310/412 Test #311: rasci-c2-active .................. Passed 5.31 sec; Start 232: mp2p5-grad1; 311/412 Test #389: python-curve ..................... Passed 3.46 sec; Start 86: cepa0-grad1; 312/412 Test #95: cisd-h2o+-1 ...................... Passed 5.74 sec; Start 312: rasci-h2o; 313/412 Test #94: cisd-h2o+-0 ...................... Passed 5.81 sec; Start 398: json-v11-energy; 314/412 Test #266: opt1 ............................. Passed 4.69 sec; Start 121: dfccd1; 315/412 Test #295: psimrcc-sp1 ...................... Passed 4.47 sec; Start 236: mp2-property; 316/412 Test #284: opt-freeze-coords ................ Passed 7.09 sec; Start 392: python-mints2; 317/412 Test #312: rasci-h2o ........................ Passed 3.63 sec; Start 230: mp2-grad2; 318/412 Test #398: json-v11-energy .................. Passed 4.16 sec; Start 406: skeleton; 319/412 Test #236: mp2-property ..................... Passed 3.97 sec; Start 352: dft-reference; 320/412 Test #247: omp2-1 ........................... Passed 7.17 sec; Start 204: frac; 321/412 Test #340: scf-property ..................... Passed 5.94 sec; Start 225: molden2; 322/412 Test #272: opt5 ............................. Passed 5.79 sec; Start 226: mom; 323/412 Test #285: props1 ........................... Passed 6.02 sec; Start 122: dfccdl1; 324/412 Test #237: mpn-bh ........................... Passed 7.07 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:29473,energy,energy,29473,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['energy'],['energy']
Energy Efficiency,: ocepa2 ........................... Passed 63.98 sec; Start 158: dfomp2p5-grad2; 78/413 Test #17: cbs-xtpl-opt ..................... Passed 82.27 sec; Start 65: cc47; 79/413 Test #80: cc8b ............................. Passed 39.55 sec; Start 194: fd-freq-energy; 80/413 Test #21: cc1 .............................. Passed 62.73 sec; Start 64: cc46; 81/413 Test #281: opt14 ............................ Passed 79.81 sec; Start 35: cc19; 82/413 Test #373: dft-custom-dhdf .................. Passed 92.67 sec; Start 265: omp3-grad2; 83/413 Test #327: scf-bz2 .......................... Passed 127.64 sec; Start 109: dcft1; 84/413 Test #65: cc47 ............................. Passed 41.31 sec; Start 20: cbs-xtpl-wrapper; 85/413 Test #282: opt-irc-1 ........................ Passed 95.47 sec; Start 258: omp2p5-grad2; 86/413 Test #158: dfomp2p5-grad2 ................... Passed 61.57 sec; Start 144: dfomp2-4; 87/413 Test #35: cc19 ............................. Passed 58.05 sec; Start 319: sapt3; 88/413 Test #194: fd-freq-energy ................... Passed 85.55 sec; Start 82: cc9; 89/413 Test #64: cc46 ............................. Passed 87.60 sec; Start 153: dfomp2p5-2; 90/413 Test #207: frac-traverse .................... Passed 238.30 sec; Start 321: sapt5; 91/413 Test #258: omp2p5-grad2 ..................... Passed 77.83 sec; Start 294: psimrcc-fd-freq2; 92/413 Test #109: dcft1 ............................ Passed 84.01 sec; Start 67: cc49; 93/413 Test #144: dfomp2-4 ......................... Passed 69.24 sec; Start 79: cc8a; 94/413 Test #20: cbs-xtpl-wrapper ................. Passed 95.04 sec; Start 78: cc8; 95/413 Test #265: omp3-grad2 ....................... Passed 116.89 sec; Start 83: cc9a; 96/413 Test #153: dfomp2p5-2 ....................... Passed 53.80 sec; Start 81: cc8c; 97/413 Test #319: sapt3 ............................ Passed 78.68 sec; Start 206: frac-ip-fitting; 98/413 Test #82: cc9 .............................. Passed 72.01 sec; Start 391: python-pubchem; 99/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:8481,energy,energy,8481,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['energy'],['energy']
Energy Efficiency,": option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRU",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5633,energy,energy,5633,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['energy'],['energy']
Energy Efficiency,":. > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > ; > # (a) for HF; > ; > energy(‘scf’); > ; > # (b) for unrestricted HF; > ; > set reference uhf; > energy(‘scf’); > ; > # (c) for B3LYP; > ; > set dft_functional b3lyp; > set reference rks; > energy(‘scf’); > ; > # (d) also for B3LYP; > ; > energy(‘b3lyp’); > ; > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > ; > set dft_functional b3lyp; > energy(‘scf'); > ; > # (e) for unrestricted B3LYP; > ; > set dft_functional b3lyp; > set reference uks; > energy(‘scf’); > ; > # (f) also for unrestricted B3LYP; > ; > set reference uks; > energy(‘b3lyp’); > ; > # (g) also for unrestricted B3LYP (since energy command trumps options,; > ; > uhf gets translated to uks); > set reference uhf; > energy(‘b3lyp’); > ; > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > reference into the energy() call for HF or DFT (though for the latter you’d; > have to use dft_functional keyword.; > ; > Francesco brings up a related and overdue point. If you specify an; > open-shell molecule and no reference, it complains at you b/c rhf (the; > default) is unsuitable. I couldn’t say concretely, but some other programs; > will switch to an appropriate reference for open-shell. For psi4, it would; > have to be rhf/rks because we don’t have roks. This would be convenient at; > times, for instance, running databases of mixed closed/open shell.; > ; > Propositions to be considered:; > ; > (i) Keeping reference in one place, that is, as a keyword. Consequences:; > retire rhf/uhf/rohf & rscf/uscf/roscf; > ; > (ii) If molecule is open-shell _and_ no reference has been specified,; > switch to uhf. This could be tricky b/c we’re not set up to do this; > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > a series of molecules w/o explicitly setting reference.; > ; > Lori; > ; > > On Jun 8,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110194494:1677,energy,energy,1677,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110194494,1,['energy'],['energy']
Energy Efficiency,"::shared_ptr<Matrix> Var = Matrix::triplet(Cocc0A, V_B, Cvir0A, true, false, false);	 <; Var->scale(2.0);										 <; std::shared_ptr<Matrix> VBas = Matrix::triplet(Matrix::triplet(Cocc0A, S, D_B, true, false, <; VBas->scale(-1.0);										 <; std::shared_ptr<Matrix> VAbr = Matrix::triplet(Matrix::triplet(Cocc0B, S, D_A, true, false, <; VAbr->scale(-1.0);										 <; std::shared_ptr<Matrix> VRas = Matrix::triplet(Matrix::triplet(Cocc0A, V_B, P_A, true, false <; VRas->scale(1.0);										 <; std::shared_ptr<Matrix> VSbr = Matrix::triplet(Matrix::triplet(Cocc0B, V_A, P_B, true, false <; VSbr->scale(1.0);										 <. std::shared_ptr<Matrix> Sas = Matrix::triplet(Cocc0A, S, Cvir0B, true, false, false);	 |	 // => Intermolelcular overlap matrix and inverse <= //; std::shared_ptr<Matrix> Sbr = Matrix::triplet(Cocc0B, S, Cvir0A, true, false, false);	 |	 std::shared_ptr<Matrix> Sab = Matrix::triplet(Cocc0A, S, Cocc0B, true, false, false);; 												 >	 double** Sabp = Sab->pointer();; 												 >	 auto D = std::make_shared<Matrix>(""D"", na + nb, na + nb);; 												 >	 D->identity();; 												 >	 double** Dp = D->pointer();; 												 >	 for (int a = 0; a < na; a++) {; 												 >	 for (int b = 0; b < nb; b++) {; 												 >	 Dp[a][b + na] = Dp[b + na][a] = Sabp[a][b];; 												 >	 }; 												 >	 }; 												 >	 D->power(-1.0, 1.0E-12);; 												 >	 Dp = D->pointer();. std::shared_ptr<Matrix> Qbr(Jbr->clone());							 |	 // => New Stuff <= //; Qbr->zero();										 |	 // Start with T's; Qbr->add(Jbr);										 |	 std::shared_ptr<Matrix> Sbr = Matrix::triplet(Cocc0B, S, Cvir0A, true, false, false);; Qbr->add(Kbr);										 |	 std::shared_ptr<Matrix> Sas = Matrix::triplet(Cocc0A, S, Cvir0B, true, false, false);; Qbr->add(KObr);										 |	 auto Tar = std::make_shared<Matrix>(""Tar"", na, nr);; Qbr->add(JAbr);										 |	 auto Tbr = std::make_shared<Matrix>(""Tbr"", nb, nr);; Qbr->add(JBbr);										 |	 auto Tas = std::make_shared<Matr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1490#issuecomment-456614790:8176,power,power,8176,https://psicode.org,https://github.com/psi4/psi4/pull/1490#issuecomment-456614790,2,['power'],['power']
Energy Efficiency,"; 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.10",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1767,energy,energy,1767,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.6.0 (#2028) ; - Fix memory bug in libtrans (#2027) ; - Fix to large DF-MP2 (#2033) ; - Make sure psi populates qcschema wfn with orbital occupations (#2036) ; - Options reading ignores spaces (#2051) ; - Fix to Treutler grid call (#2044) ; - Fix diffuse external potential after L2 (#2068) ; - Fixes to PCM/qcschema (#2037) ; - Bug in ccresponse (#2077) ; - Fix error throwing in some threaded blocks (#2082) ; - Better error printing (#2083) ; - Fix in EOM CC3 (#2085) ; - Deprecate Matrix::Savetype::Full (#2092) ; - Fix getting of CC amplitudes in frozen core jobs (#2095) ; - QCSchema export bug fix (#2112) ; - Fix TD-SCF computations when using DF and symmetry (#2124) ; - Fix DF-DCT energy, grad, properties, and densities (#2100) ; - Fix bug by closing DPD file in DF grad (#2137) ; - Fix method/basis bug when using DiskDF (#2141) ; - Fix bug by triggering error in CC code (#2150) ; - Fix indexing bug in DCT (#2165) ; - Fix gcc-related bug (#2175) ; - Fix stability of mcscf test (#2173) ; - Citation type fix in dft builder (#2176) ; - Keep internal coordinate files in optking (#2188) ; - Bugfix in parallelization of DF gradients (#2193) ; - Fix bug in qcvars for nbody computations (#2191) ; - Use correct libxc functional for wB97X-D3 (#2207) ; - Fix shell core freezing with ECPs (#2222) ; - Fix linear dependency bugs in DCT (#2232, #2233) ; - Return correct energy for ccsd(at) (#2241) ; - Bug in detci printing (2245)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:7217,energy,energy,7217,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,2,['energy'],['energy']
Energy Efficiency,"; - int atom_at_position1(double*, double tol = 0.05) const;; - int atom_at_position2(Vector3&, double tol = 0.05) const;; - int atom_at_position3(const std::array<double, 3>&, const double tol = 0.05) const;; + int atom_at_position1(double*, double tol = 1.e-6) const;; + int atom_at_position2(Vector3&, double tol = 1.e-6) const;; + int atom_at_position3(const std::array<double, 3>&, const double tol = 1.e-6) const;; /// @}; ; /// Do we reinterpret coordentries during a call to update_geometry?; @@ -505,7 +505,7 @@ class PSI_API Molecule {; * Force the molecule to have the symmetry specified in pg_.; * This is to handle noise coming in from optking.; */; - void symmetrize(double tol = 0.05, bool suppress_mol_print_in_exc = false);; + void symmetrize(double tol = 1.e-6, bool suppress_mol_print_in_exc = false);; /// @}; ; /**; @@ -668,7 +668,7 @@ class PSI_API Molecule {; /// Returns the Schoenflies symbol; std::string schoenflies_symbol() const;; /// Check if current geometry fits current point group; - bool valid_atom_map(double tol = 0.05) const;; + bool valid_atom_map(double tol = 1.e-6) const;; /// Return point group name such as C3v or S8.; std::string full_point_group() const;; /// Return point group name such as Cnv or Sn.; ```. input; ```; import psi4. mol = psi4.core.Molecule.from_arrays(; elez=[2, 4, 2],; #fix_com=True,; #fix_orientation=True,; fix_symmetry='c1',; tooclose=1.e-6,; real=[True, False, True],; geom=[; 1.0, 0.0, -0.01,; 1.0, 0.0, 0.0,; 1.0, 0.0, 0.01]); activate(mol). set basis cc-pvdz #ugbs; energy('scf'). # fix_symmetry needed to avoid:; #Program received signal SIGFPE, Arithmetic exception.; #0x00007fffe1b5700e in psi::PetiteList::init (this=0x0, tol=0) at /home/psilocaluser/gits/hrw-direct/psi4/src/psi4/libmints/petitelist.cc:567; #567 lamij_[ij] = (char)(ng_ / nij);. # now ends with; #Fatal Error: SOBasis::SOBasis: shell changed; #Error occurred in file: /home/psilocaluser/gits/hrw-direct/psi4/src/psi4/libmints/sobasis.cc on line: 257; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879:3429,energy,energy,3429,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879,1,['energy'],['energy']
Energy Efficiency,"; 2.194550D+00 8.829680D-01; 1.109110D+00 4.620610D-01; 3.746410D-01 2.228600D-02; 1.770800D-01 -4.353000D-03; 8.106100D-02 1.102000D-03; S 11 1.00; 5.546500D+03 -7.300000D-05; 8.382140D+02 -5.080000D-04; 1.821870D+02 -1.158000D-03; 3.121230D+01 1.219300D-02; 1.953140D+01 -8.785400D-02; 8.240990D+00 3.382000D-01; 2.194550D+00 -5.765500D-01; 1.109110D+00 -4.092980D-01; 3.746410D-01 5.674590D-01; 1.770800D-01 6.124890D-01; 8.106100D-02 1.432310D-01; S 1 1.00; 3.746410D-01 1.000000D+00; S 1 1.00; 1.770800D-01 1.000000D+00; S 1 1.00; 1.001000D-01 1.000000D+00; S 1 1.00; 4.120000D-02 1.0000000; P 9 1.00; 1.889880D+02 5.850000D-04; 2.128680D+01 3.692300D-02; 1.003960D+01 -2.353240D-01; 3.451800D+00 3.414830D-01; 1.974560D+00 5.347880D-01; 1.024200D+00 2.651410D-01; 4.494370D-01 2.578700D-02; 1.866480D-01 5.220000D-04; 7.348100D-02 6.060000D-04; P 9 1.00; 1.889880D+02 -2.560000D-04; 2.128680D+01 -1.168200D-02; 1.003960D+01 8.319200D-02; 3.451800D+00 -1.569700D-01; 1.974560D+00 -2.245180D-01; 1.024200D+00 -1.144510D-01; 4.494370D-01 3.753560D-01; 1.866480D-01 5.751360D-01; 7.348100D-02 2.459170D-01; P 1 1.00; 5.981000D-01 1.000000D+00; P 1 1.00; 9.618000D-02 1.000000D+00; P 1 1.00; 3.590000D-02 1.0000000; D 9 1.00; 1.326620D+02 5.720000D-04; 3.760540D+01 4.402000D-03; 1.038910D+01 -4.092200D-02; 6.490170D+00 9.966100D-02; 3.454510D+00 3.226630D-01; 1.844130D+00 4.003430D-01; 9.624780D-01 2.683060D-01; 4.728530D-01 8.484700D-02; 1.932000D-01 7.632000D-03; D 1 1.00; 4.728530D-01 1.000000D+00; D 1 1.00; 1.932000D-01 1.000000D+00; D 1 1.00; 7.820000D-02 1.0000000; F 1 1.00; 4.064000D-01 1.000000D+00; F 1 1.00; 1.848000D-01 1.0000000. ****. """""",; key=""basis"",; name=""only_valence"",; ). psi4.set_options(; {; ""e_convergence"": 1e-8,; ""d_convergence"": 1e-8,; }; ). psi4.core.set_output_file(""output_only_valence.dat"", False). psi4.energy(""scf""); e2 = psi4.variable(""HF TOTAL ENERGY""). ### Compare; diff = e2 - e1. assert compare_values(0.0, diff, 7, ""ECP + valence vs. only valence""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202:5356,energy,energy,5356,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2121013202,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,; 21/411 Test #14: cbs-xtpl-energy .................. Passed 12.98 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 13.65 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #12: cbs-parser ....................... Passed 59.21 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 35.82 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #316: sapt2 ............................ Passed 358.15 sec; Start 20: cc1; 26/411 Test #19: cbs-xtpl-wrapper ................. Passed 80.51 sec; Start 21: cc10; 27/411 Test #17: cbs-xtpl-opt ..................... Passed 109.54 sec; Start 22: cc11; 28/411 Test #20: cc1 .............................. Passed 109.00 sec; Start 23: cc12; 29/411 Test #21: cc10 ............................. Passed 45.45 sec; Start 24: cc13; 30/411 Test #23: cc12 ............................. Passed 31.10 sec; Start 26: cc13b; 31/411 Test #22: cc11 ............................. Passed 47.18 sec; Start 27: cc13c; 32/411 Test #11: cbs-delta-energy ................. Passed 255.04 sec; Start 28: cc13d; 33/411 Test #26: cc13b ............................ Passed 101.66 sec; Start 29: cc14; 34/411 Test #13: cbs-xtpl-alpha ................... Passed 311.67 sec; Start 30: cc15; 35/411 Test #27: cc13c ............................ Passed 122.44 sec; Start 31: cc16; 36/411 Test #30: cc15 ............................. Passed 120.35 sec; Start 32: cc17; 37/411 Test #32: cc17 ............................. Passed 55.67 sec; Start 33: cc18; 38/411 Test #24: cc13 ............................. Passed 310.59 sec; Start 34: cc19; 39/411 Test #18: cbs-xtpl-func .................... Passed 1426.34 sec; Start 35: cc2; 40/411 Test #28: cc13d ............................ Passed 274.84 sec; Start 36: cc21; 41/411 Test #33: cc18 ............................. Passed 46.09 sec; Start 37: cc22; 42/411 Test #31: cc16 ............................. Passed 216.03 sec; Start 38: cc23; 43/411 Test #37: cc22 ...........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:3169,energy,energy,3169,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['energy'],['energy']
Energy Efficiency,"; 24 14 1 4.026e-05 8.053e-05 0.0042 y n ; 25 16 1 2.143e-05 4.286e-05 0.0042 y n ; 26 18 1 1.583e-05 3.165e-05 0.0042 y n ; 27 20 1 1.594e-05 3.188e-05 0.0042 y n ; 28 4 1 1.087e-05 2.174e-05 0.0042 y n Subspace collapsed.; 29 6 1 1.321e-05 2.642e-05 0.0042 y n ; 30 8 1 1.632e-05 3.264e-05 0.0042 y n ; 31 10 1 1.548e-05 3.097e-05 0.0042 y n ; 32 12 1 1.273e-05 2.545e-05 0.0042 y n ; 33 14 1 8.743e-06 1.749e-05 0.0042 y n ; 34 16 1 6.470e-06 1.294e-05 0.0042 y n ; 35 18 1 4.029e-06 8.058e-06 0.0042 y n ; 36 20 1 3.371e-06 6.743e-06 0.0042 y n ; 37 4 1 2.548e-06 5.096e-06 0.0042 y n Subspace collapsed.; 38 6 1 3.507e-06 7.014e-06 0.0042 y n ; 39 8 1 2.837e-06 5.674e-06 0.0042 y n ; 40 9 1 2.146e-06 4.292e-06 0.0042 y n ; 41 10 1 1.649e-06 3.299e-06 0.0042 y n ; 42 11 1 1.116e-06 2.232e-06 0.0042 y n ; 43 12 1 7.351e-07 1.470e-06 0.0042 y n ; 44 13 2 4.965e-07 9.931e-07 0.0042 y y Converged.; --------------------------------------------------------------------------------; Davidson Summary: ; ------------------------------------------------------------; State 0: excitation energy = 0.0042 a.u. (converged); State 1: excitation energy = 0.0607 a.u. (converged); ------------------------------------------------------------. --------------------------------------------------------------------------------; Excited State Summary; --------------------------------------------------------------------------------; --------------------------------------------------------------------------------. Excited state 1 (singlet, A) [converged]; ----------------------------------------------------------------------------; Term symbol: 2 (1) A R^2 = 4.36142e-13. Total energy: -908.4624177856 a.u.; Excitation energy: 0.113938 eV. Osc. strength: 0.006302; Trans. dip. moment [a.u.]: [ 0.022562, -1.502315, -0.006471]; <i|r^2|0> [a.u.]: [ 0.119363, -0.062262, 0.001507]. V1^2 = 0.8818, V2^2 = 0.1182. Important amplitudes:; occ i occ j vir a vir b v ; ----------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190:3679,energy,energy,3679,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190,1,['energy'],['energy']
Energy Efficiency,; 371/412 Test #363: x2c3 ............................. Passed 2.61 sec; Start 355: tu2-ch2-energy; 372/412 Test #382: psi4numpy-dfmp2 .................. Passed 2.24 sec; Start 384: psi4numpy-rhf-gradient; 373/412 Test #404: json-schema-1-gradient ........... Passed 1.74 sec; Start 405: json-schema-1-properties; 374/412 Test #223: mints10 .......................... Passed 1.62 sec; Start 381: psi4numpy-cphf; 375/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 1.97 sec; Start 401: json-schema-1-ghost; 376/412 Test #411: skeletonsointegrals .............. Passed 1.40 sec; Start 399: json-v11-gradient; 377/412 Test #215: mints3 ........................... Passed 1.22 sec; Start 379: mints12; 378/412 Test #103: decontract ....................... Passed 1.68 sec; Start 397: python-memdfjk; 379/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.31 sec; Start 388: python-energy; 380/412 Test #355: tu2-ch2-energy ................... Passed 1.33 sec; Start 310: pywrap-molecule; 381/412 Test #354: tu1-h2o-energy ................... Passed 1.74 sec; Start 335: scf3; 382/412 Test #221: mints-helper ..................... Passed 1.51 sec; Start 212: mcscf3; 383/412 Test #391: python-mints9 .................... Passed 2.12 sec; Start 217: mints5; 384/412 Test #396: python-mints13 ................... Passed 2.00 sec; Start 383: psi4numpy-rhf; 385/412 Test #222: mints9 ........................... Passed 2.10 sec; Start 210: mcscf1; 386/412 Test #405: json-schema-1-properties ......... Passed 1.36 sec; Start 240: numpy-array-interface; 387/412 Test #401: json-schema-1-ghost .............. Passed 1.16 sec; Start 175: docs-bases; 388/412 Test #381: psi4numpy-cphf ................... Passed 1.45 sec; Start 213: mints1; 389/412 Test #399: json-v11-gradient ................ Passed 1.47 sec; Start 309: pywrap-db3; 390/412 Test #388: python-energy .................... Passed 1.16 sec; Start 216: mints4; 391/412 Test #240: numpy-array-interface ............ Passed 0.92 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:35882,energy,energy,35882,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['energy'],['energy']
Energy Efficiency,; 375/411 Test #311: rasci-h2o ........................ Passed 1.36 sec; Start 400: json-schema-1-ghost; 376/411 Test #96: cisd-h2o-clpse ................... Passed 1.56 sec; Start 398: json-v11-gradient; 377/411 Test #404: json-schema-1-properties ......... Passed 1.09 sec; Start 405: skeleton; 378/411 Test #349: sapt-sf1 ......................... Passed 1.04 sec; Start 406: skeletonaointegrals; 379/411 Test #353: tu1-h2o-energy ................... Passed 1.12 sec; Start 396: python-memdfjk; 380/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.25 sec; Start 411: skeletonwavefunction; 381/411 Test #293: psimrcc-pt2 ...................... Passed 1.38 sec; Start 408: skeletonmointegrals; 382/411 Test #108: dcft2 ............................ Passed 2.92 sec; Start 410: skeletonsointegrals; 383/411 Test #400: json-schema-1-ghost .............. Passed 1.34 sec; Start 352: stability2; 384/411 Test #405: skeleton ......................... Passed 1.30 sec; Start 354: tu2-ch2-energy; 385/411 Test #396: python-memdfjk ................... Passed 0.93 sec; Start 330: scf-bs; 386/411 Test #398: json-v11-gradient ................ Passed 1.38 sec; Start 382: psi4numpy-rhf; 387/411 Test #406: skeletonaointegrals .............. Passed 1.11 sec; Start 387: python-energy; 388/411 Test #411: skeletonwavefunction ............. Passed 0.91 sec; Start 209: mcscf1; 389/411 Test #408: skeletonmointegrals .............. Passed 0.89 sec; Start 188: fci-tdm; 390/411 Test #354: tu2-ch2-energy ................... Passed 0.76 sec; Start 308: pywrap-db3; 391/411 Test #352: stability2 ....................... Passed 0.85 sec; Start 211: mcscf3; 392/411 Test #410: skeletonsointegrals .............. Passed 0.91 sec; Start 334: scf3; 393/411 Test #382: psi4numpy-rhf .................... Passed 0.82 sec; Start 239: numpy-array-interface; 394/411 Test #330: scf-bs ........................... Passed 0.83 sec; Start 409: skeletonscf; 395/411 Test #387: python-energy .................... Passed 0.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:36065,energy,energy,36065,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['energy'],['energy']
Energy Efficiency,; 58/412 Test #26: cc13a ............................ Passed 269.35 sec; Start 281: opt-irc-1; 59/412 Test #47: cc30 ............................. Passed 40.10 sec; Start 280: opt14; 60/412 Test #114: dcft7 ............................ Passed 260.64 sec; Start 318: sapt3; 61/412 Test #92: cepa-module ...................... Passed 48.34 sec; Start 70: cc51; 62/412 Test #372: dft-custom-dhdf .................. Passed 97.85 sec; Start 76: cc6; 63/412 Test #281: opt-irc-1 ........................ Passed 72.44 sec; Start 193: fd-freq-energy; 64/412 Test #280: opt14 ............................ Passed 89.89 sec; Start 260: omp3-3; 65/412 Test #70: cc51 ............................. Passed 73.29 sec; Start 320: sapt5; 66/412 Test #76: cc6 .............................. Passed 70.93 sec; Start 261: omp3-4; 67/412 Test #318: sapt3 ............................ Passed 90.41 sec; Start 231: mp2-module; 68/412 Test #260: omp3-3 ........................... Passed 33.57 sec; Start 17: cbs-xtpl-opt; 69/412 Test #193: fd-freq-energy ................... Passed 58.53 sec; Start 116: dcft9; 70/412 Test #317: sapt2 ............................ Passed 354.70 sec; Start 293: psimrcc-fd-freq2; 71/412 Test #261: omp3-4 ........................... Passed 31.51 sec; Start 21: cc1; 72/412 Test #116: dcft9 ............................ Passed 25.23 sec; Start 20: cbs-xtpl-wrapper; 73/412 Test #21: cc1 .............................. Passed 21.49 sec; Start 250: omp2-4; 74/412 Test #231: mp2-module ....................... Passed 55.07 sec; Start 19: cbs-xtpl-nbody; 75/412 Test #17: cbs-xtpl-opt ..................... Passed 47.15 sec; Start 251: omp2-5; 76/412 Test #250: omp2-4 ........................... Passed 22.47 sec; Start 205: frac-ip-fitting; 77/412 Test #320: sapt5 ............................ Passed 82.22 sec; Start 168: dft-b3lyp; 78/412 Test #251: omp2-5 ........................... Passed 18.07 sec; Start 62: cc44; 79/412 Test #19: cbs-xtpl-nbody ................... Passed 29.87 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:6588,energy,energy,6588,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['energy'],['energy']
Energy Efficiency,"; > H -1.240 2.147 0.000; > H -2.479 0.000 0.000; > H -1.240 -2.147 0.000; > H 1.240 -2.147 0.000; > C 2.798 0.000 0.000; > C 4.020 0.000 0.000; > C 5.422 0.000 0.000; > C 8.214 0.000 0.000; > C 7.516 1.209 0.000; > C 6.120 1.209 0.000; > C 6.120 -1.209 0.000; > C 7.516 -1.209 0.000; > H 8.058 2.147 0.000; > H 5.578 2.147 0.000; > H 9.297 0.000 0.000; > H 5.578 -2.147 0.000; > H 8.058 -2.147 0.000; > ; > symmetry c1; > units angstrom; > }; > ; > set globals {; > reference rhf; > basis cc-pvdz; > freeze_core true; > scf_type out_of_core; > dipmom true; > num_roots 4; > }; > ; > set scf d_convergence 10; > set detci e_convergence 8; > thisenergy = energy('fci'); > ; > Memory set to 5.000 GiB by Python script.; > ; > **\* tstart() called on shukla-pc.localdomain; > **\* at Thu Oct 9 10:39:34 2014; > ; > ```; > ---------------------------------------------------------; > SCF; > by Justin Turney, Rob Parrish, and Andy Simmonett; > RHF Reference; > 1 Threads, 5000 MiB Core; > ---------------------------------------------------------; > ```; > ; > ==> Geometry <==; > ; > Molecular point group: c1; > Full point group: D2h; > ; > Geometry (in Angstrom), charge = 0, multiplicity = 1:; > ; > Center X Y Z; > ; > ---; > ; > ```; > C -2.013000000000 0.000000000000 0.000000000000; > C -2.711000000000 1.209000000000 0.000000000000; > C -4.107000000000 1.209000000000 0.000000000000; > C -4.805000000000 0.000000000000 0.000000000000; > C -4.107000000000 -1.209000000000 0.000000000000; > C -2.711000000000 -1.209000000000 0.000000000000; > H -2.169000000000 2.147000000000 0.000000000000; > H -4.649000000000 2.147000000000 0.000000000000; > H -5.888000000000 0.000000000000 0.000000000000; > H -4.649000000000 -2.147000000000 0.000000000000; > H -2.169000000000 -2.147000000000 0.000000000000; > C -0.611000000000 0.000000000000 0.000000000000; > C 0.611000000000 0.000000000000 0.000000000000; > C 2.013000000000 0.000000000000 0.000000000000; > C 4.805000000000 0.000000000000 0.000000000000;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:4563,charge,charge,4563,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['charge'],['charge']
Energy Efficiency,"; > const&>::operator()(unsigned long const&) const in python.cc.o; > boost::python::converter::arg_to_python<unsigned; > long>::arg_to_python(unsigned long const&) in libmints.a(matrix.cc.o); > boost::python::converter::arg_to_python<unsigned; > long>::arg_to_python(unsigned long const&) in; > libboost_python-1_57.a(class.o); > boost::python::converter::arg_to_python<unsigned; > int>::arg_to_python(unsigned int const&) in; > libboost_python-1_57.a(function.o); > boost::python::converter::arg_to_python<unsigned; > int>::arg_to_python(unsigned int const&) in libboost_python-1_57.a(enum.o); > ...; > ""_PyLong_Type"", referenced from:; > boost::python::converter::(anonymous; > namespace)::long_long_rvalue_from_python_base::get_pytype() in; > libboost_python-1_57.a(builtin_converters.o); > ""_PyMem_Free"", referenced from:; > boost::python::instance_holder::deallocate(_object_, void_) in; > libboost_python-1_57.a(class.o); > ""_PyMem_Malloc"", referenced from:; > boost::python::instance_holder::allocate(_object_, unsigned long,; > unsigned long) in libboost_python-1_57.a(class.o); > ""_PyMethod_New"", referenced from:; > boost::python::objects::function_descr_get(_object_, _object_,; > _object*) in libboost_python-1_57.a(function.o); > ""_PyModule_GetDict"", referenced from:; > ; > psi::BasisSet::pyconstruct_auxiliary(boost::shared_ptrpsi::Molecule; > const&, std::__1::basic_string<char, std::__1::char_traits<char>,; > std::__1::allocator<char> > const&, std::__1::basic_string<char,; > std::__1::char_traits<char>, std::__1::allocator<char> > const&,; > std::__1::basic_string<char, std::__1::char_traits<char>,; > std::__1::allocator<char> > const&, std::__1::basic_string<char,; > std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) in; > libmints.a(basisset.cc.o); > ; > psi::BasisSet::pyconstruct_combined(boost::shared_ptrpsi::Molecule; > const&, std::__1::vector<std::__1::basic_string<char,; > std::__1::char_traits<char>, std::__1::allocator<char> >,; > std::__1::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:44176,allocate,allocate,44176,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['allocate'],['allocate']
Energy Efficiency,"; @RKS iter 2: -124.26578841108680 -1.29365e+00 6.24312e-01 DIIS; @RKS iter 3: -128.75874780675335 -4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE...........................................................PASSED. *** tstart() called on scy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7459,Energy,Energy,7459,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"; @RKS iter 3: -128.77814169956412 -5.67682e+00 1.11592e-01 DIIS; @RKS iter 4: -128.89363525981292 -1.15494e-01 1.11421e-02 DIIS; @RKS iter 5: -128.89481463928649 -1.17938e-03 2.07054e-03 DIIS; @RKS iter 6: -128.89485608871536 -4.14494e-05 8.00321e-05 DIIS; @RKS iter 7: -128.89485614958289 -6.08675e-08 1.05214e-05 DIIS; @RKS iter 8: -128.89485615065263 -1.06974e-09 2.89771e-07 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.509932 2Ag -1.282862 1B3u -0.438441; 1B2u -0.438441 1B1u -0.438441. Virtual:. 2B3u 1.301627 2B2u 1.301627 2B1u 1.301627; 3Ag 1.757418 1B1g 4.636294 1B2g 4.636294; 1B3g 4.636294 4Ag 4.636294 5Ag 4.636294. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.89485615065263. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5988982401030682; Two-Electron Energy = 66.2281289694592061; DFT Exchange-Correlation Energy = -12.5240868800087686; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.8948561506526289. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP..........................................................PASSED. *** tstart() called on scy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:12493,Energy,Energy,12493,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"; A ; DOCC [ 1 ]; SOCC [ 0 ]. @DF-UHF Final Energy: -2.83568850042064. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -3.8642104942204210; Two-Electron Energy = 1.0285219937997820; Total Energy = -2.8356885004206389. UHF NO Occupations:; HONO-0 : 1 A 2.0000000; LUNO+0 : 2 A 0.0000000; LUNO+1 : 3 A 0.0000000; LUNO+2 : 4 A 0.0000000. Computation Completed. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SCF //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. => Loading Basis Set <=. Name: JUN-CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 46 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/jun-cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000 0.000000000000 1.481692970000 4.002603254130. Running in c1 symmetry. Rotational constants: A = ************ B = 0.95920 C = 0.95920 [cm^-1]; Rotational constants: A = ************ B = 28755.98304 C = 28755.98304 [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 2; Nalpha = 1; Nbeta = 1. ==> Algorithm <==. SCF Algorithm Type is MEM_DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-12; Density threshold = 1.00e-12; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: JUN-CC-PVDZ; Blend: JUN-CC-PVDZ; Number of shells: 6; Number of basis function: 10; Number of Cartesian functions: 10; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:5860,charge,charge,5860,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,2,['charge'],['charge']
Energy Efficiency,"; Electronic Cv 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]; Translational Cv 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Rotational Cv 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Vibrational Cv 58.770 [cal/(mol K)] 245.894 [J/(mol K)] 0.09365622 [mEh/K]; Total Cv 64.732 [cal/(mol K)] 270.838 [J/(mol K)] 0.10315665 [mEh/K]; Correction Cv 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]. Constant pressure heat capacity, Cp; Electronic Cp 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]; Translational Cp 4.968 [cal/(mol K)] 20.786 [J/(mol K)] 0.00791703 [mEh/K]; Rotational Cp 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Vibrational Cp 58.770 [cal/(mol K)] 245.894 [J/(mol K)] 0.09365622 [mEh/K]; Total Cp 66.719 [cal/(mol K)] 279.152 [J/(mol K)] 0.10632347 [mEh/K]; Correction Cp 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]. ==> Thermochemistry Energy Analysis <==. Raw electronic energy, E0; Total E0, Electronic energy at well bottom at 0 [K] -1226.44775184 [Eh]. Zero-point energy, ZPE_vib = Sum_i nu_i / 2; Electronic ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Rotational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Vibrational ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Correction ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Total ZPE, Electronic energy at 0 [K] -1226.18577804 [Eh]. Thermal Energy, E (includes ZPE); Electronic E 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Rotational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational E 174.027 [kcal/mol] 728.129 [kJ/mol] 0.27732956 [Eh]; Correction E 175.804 [kcal/mol] 735.566 [kJ/mol] 0.28016212 [Eh]; Total E, Electronic energy at 298.15 [K] -1226.16758972 [Eh]. Enthalpy, H_trans = E_trans + k_B * T; Electronic H ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079:6254,energy,energy,6254,https://psicode.org,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079,2,['energy'],['energy']
Energy Efficiency,; Start 196: fd-freq-gradient-large; Start 279: opt13; Start 26: cc13a; Start 114: dcft7; Start 206: frac-traverse; Start 317: sapt2; Start 319: sapt4; Start 326: scf-bz2; Start 1: adc1; Start 2: adc2; 1/412 Test #1: adc1 ............................. Passed 40.38 sec; Start 3: casscf-fzc-sp; 2/412 Test #3: casscf-fzc-sp .................... Passed 7.58 sec; Start 4: casscf-semi; 3/412 Test #4: casscf-semi ...................... Passed 3.39 sec; Start 5: casscf-sa-sp; 4/412 Test #2: adc2 ............................. Passed 68.12 sec; Start 6: ao-casscf-sp; 5/412 Test #5: casscf-sa-sp ..................... Passed 17.41 sec; Start 7: casscf-sp; 6/412 Test #6: ao-casscf-sp ..................... Passed 8.11 sec; Start 8: castup1; 7/412 Test #8: castup1 .......................... Passed 3.07 sec; Start 9: castup2; 8/412 Test #7: casscf-sp ........................ Passed 14.70 sec; Start 10: castup3; 9/412 Test #9: castup2 .......................... Passed 10.03 sec; Start 11: cbs-delta-energy; 10/412 Test #10: castup3 .......................... Passed 8.30 sec; Start 12: cbs-parser; 11/412 Test #12: cbs-parser ....................... Passed 37.55 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #11: cbs-delta-energy ................. Passed 64.49 sec; Start 14: cbs-xtpl-energy; 13/412 Test #14: cbs-xtpl-energy .................. Passed 15.23 sec; Start 15: cbs-xtpl-freq; 14/412 Test #15: cbs-xtpl-freq .................... Passed 9.08 sec; Start 16: cbs-xtpl-gradient; 15/412 Test #326: scf-bz2 .......................... Passed 188.03 sec; Start 17: cbs-xtpl-opt; 16/412 Test #16: cbs-xtpl-gradient ................ Passed 24.11 sec; Start 19: cbs-xtpl-nbody; 17/412 Test #19: cbs-xtpl-nbody ................... Passed 51.60 sec; Start 20: cbs-xtpl-wrapper; 18/412 Test #17: cbs-xtpl-opt ..................... Passed 74.20 sec; Start 21: cc1; 19/412 Test #206: frac-traverse .................... Passed 282.86 sec; Start 22: cc10; 20/412 Test #21: cc1 .............................. Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:1277,energy,energy,1277,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['energy'],['energy']
Energy Efficiency,; Start 352: dft-reference; 318/412 Test #247: omp2-1 ........................... Passed 22.97 sec; Start 329: scf-upcast-custom-basis; 319/412 Test #263: omp3-grad1 ....................... Passed 24.21 sec; Start 204: frac; 320/412 Test #328: scf-guess-read1 .................. Passed 23.52 sec; Start 117: ao-dfcasscf-sp; 321/412 Test #392: python-mints2 .................... Passed 24.57 sec; Start 362: x2c2; 322/412 Test #142: dfomp2-3 ......................... Passed 26.52 sec; Start 402: json-schema-1-orient; 323/412 Test #315: sad1 ............................. Passed 24.75 sec; Start 236: mp2-property; 324/412 Test #252: omp2-grad1 ....................... Passed 25.97 sec; Start 344: stability1; 325/412 Test #284: opt-freeze-coords ................ Passed 26.18 sec; Start 345: dfep2-1; 326/412 Test #385: psi4numpy-rhf-hessian ............ Passed 25.08 sec; Start 398: json-v11-energy; 327/412 Test #135: dfmp2-grad1 ...................... Passed 23.71 sec; Start 400: json-schema-1-energy; 328/412 Test #346: dfep2-2 .......................... Passed 23.48 sec; Start 389: python-curve; 329/412 Test #312: rasci-h2o ........................ Passed 23.59 sec; Start 235: mp3-grad2; 330/412 Test #333: scf-occ .......................... Passed 23.80 sec; Start 232: mp2p5-grad1; 331/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 23.57 sec; Start 229: mp2-grad1; 332/412 Test #329: scf-upcast-custom-basis .......... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf-sp ................... Passed 24.09 sec; Start 234: mp3-grad1; 334/412 Test #352: dft-reference .................... Passed 26.09 sec; Start 294: psimrcc-pt2; 335/412 Test #204: frac ............................. Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ............................. Passed 23.73 sec; Start 412: skeletonwavefunction; 337/412 Test #402: json-schema-1-orient ............. Passed 24.09 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #344: stability1 ....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:30870,energy,energy,30870,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['energy'],['energy']
Energy Efficiency,"; Using Symmetric Orthogonalization. SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -122.97213766263802 -1.22972e+02 5.13141e-01; @RKS iter 2: -124.26578841108680 -1.29365e+00 6.24312e-01 DIIS; @RKS iter 3: -128.75874780675335 -4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7252,Energy,Energy,7252,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1588,energy,energy,1588,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469,2,['energy'],['energy']
Energy Efficiency,"=. Total Energy Delta E RMS |[F,P]|. @RKS iter 1: -122.97213766263802 -1.22972e+02 5.13141e-01; @RKS iter 2: -124.26578841108680 -1.29365e+00 6.24312e-01 DIIS; @RKS iter 3: -128.75874780675335 -4.49296e+00 6.03176e-02 DIIS; @RKS iter 4: -128.79292051117602 -3.41727e-02 3.60017e-03 DIIS; @RKS iter 5: -128.79304881103522 -1.28300e-04 3.68316e-04 DIIS; @RKS iter 6: -128.79305011369129 -1.30266e-06 6.11487e-06 DIIS; @RKS iter 7: -128.79305011405475 -3.63457e-10 1.42312e-08 DIIS. ==> Post-Iterations <==. Orbital Energies [Eh]; ---------------------. Doubly Occupied:. 1Ag -30.472472 2Ag -1.291608 1B2u -0.442005; 1B3u -0.442005 1B1u -0.442005. Virtual:. 2B1u 1.309754 2B3u 1.309754 2B2u 1.309754; 3Ag 1.759040 4Ag 4.620812 1B1g 4.620812; 1B2g 4.620812 1B3g 4.620812 5Ag 4.620812. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]. Energy converged. @RKS Final Energy: -128.79305011405475. => Energetics <=. Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -182.5667771440329830; Two-Electron Energy = 66.1914406060751901; DFT Exchange-Correlation Energy = -12.4177135760969506; Empirical Dispersion Energy = 0.0000000000000000; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -128.7930501140547506. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Nuclear Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: [e a0]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: [D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:7359,Energy,Energy,7359,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['Energy'],['Energy']
Energy Efficiency,"==; 401: ; 401: Molecular point group: c2v; 401: Full point group: C2v; 401: ; 401: Geometry (in Bohr), charge = 0, multiplicity = 1:; 401: ; 401: Center X Y Z Mass ; 401: ------------ ----------------- ----------------- ----------------- -----------------; 401: O 0.000000000000 0.000000000000 -0.129476941194 15.994914619560; 401: H 0.000000000000 -1.494187339480 1.027446507924 1.007825032070; 401: H -0.000000000000 1.494187339480 1.027446507924 1.007825032070; 401: ; 401: Running in c2v symmetry.; 401: ; 401: Rotational constants: A = 25.12553 B = 13.37732 C = 8.72954 [cm^-1]; 401: Rotational constants: A = 753244.47204 B = 401041.84791 C = 261705.04646 [MHz]; 401: Nuclear repulsion = 8.801462060629429; 401: ; 401: Charge = 0; 401: Multiplicity = 1; 401: Electrons = 10; 401: Nalpha = 5; 401: Nbeta = 5; 401: ; 401: ==> Algorithm <==; 401: ; 401: SCF Algorithm Type is DF.; 401: DIIS enabled.; 401: MOM disabled.; 401: Fractional occupation disabled.; 401: Guess Type is SAD.; 401: Energy threshold = 1.00e-06; 401: Density threshold = 1.00e-06; 401: Integral threshold = 0.00e+00; 401: ; 401: ==> Primary Basis <==; 401: ; 401: Basis Set: 6-31G; 401: Blend: 6-31G; 401: Number of shells: 9; 401: Number of basis function: 13; 401: Number of Cartesian functions: 13; 401: Spherical Harmonics?: false; 401: Max angular momentum: 1; 401: ; 401: => Loading Basis Set <=; 401: ; 401: Name: (6-31G AUX); 401: Role: JKFIT; 401: Keyword: DF_BASIS_SCF; 401: atoms 1 entry O line 221 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/cc-pvdz-jkfit.gbs ; 401: atoms 2-3 entry H line 51 file /home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4/basis/cc-pvdz-jkfit.gbs ; 401: ; 401: ==> Pre-Iterations <==; 401: ; 401: -------------------------------------------------------; 401: Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; 401: -------------------------------------------------------; 401: A1 7 7 0 0 0 0; 401: A2 0 0 0 0 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174:3088,Energy,Energy,3088,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403466174,1,['Energy'],['Energy']
Energy Efficiency,"===========================================================; platform linux -- Python 3.10.0, pytest-7.1.0, pluggy-0.13.1; rootdir: /psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4, configfile: pytest.ini; plugins: forked-1.3.0, xdist-2.3.0; collected 3507 items / 3504 deselected / 3 selected . stage/lib/psi4/tests/test_psi4.py F [ 33%]; stage/lib/psi4/tests/test_psi4_qcschema.py . [ 66%]; stage/lib/psi4/tests/tu1-h2o-energy/test_input.py F [100%]. ================================================================================================================= FAILURES ==================================================================================================================; ______________________________________________________________________________________________________________ test_psi4_basic ______________________________________________________________________________________________________________. @pytest.mark.smoke; def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation; ; h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""); ; psi4.set_options({'basis': ""cc-pVDZ""}); psi4.energy('scf'); ; > assert psi4.compare_values(-176.0266327341067125, psi4.variable('SCF TOTAL ENERGY'), 6, 'SCF energy'). stage/lib/psi4/tests/test_psi4.py:23: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/lib/psi4/driver/qcdb/testing.py:104: in _mergedapis_compare_values; return qcel.testing.compare_values(expected, computed, **kwargs); /psi/toolchainconda/envs/defenv10/lib/python3.10/site-packages/qcelemental/testing.py:178: in compare_values; return return_handler(allclose, label, message, return_message, quiet); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:1916,energy,energy,1916,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['energy'],['energy']
Energy Efficiency,"=> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Attempting to use 1 previous converged vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -111.417799029788 -2.4659E+01 1.1817E+00 ; @CI 1: 0 -112.189379709492 -7.7158E-01 3.5706E-01 ; @CI 2: 0 -112.250278204452 -6.0898E-02 3.1809E-01 ; @CI 3: 0 -112.324883713784 -7.4606E-02 2.2146E-01 ; @CI 4: 0 -112.352310238893 -2.7427E-02 1.2530E-01 ; @CI 5: 0 -112.358631917780 -6.3217E-03 9.7660E-02 ; @CI 6: 0 -112.365095716692 -6.4638E-03 7.3202E-02 ; @CI 7: 0 -112.366948614338 -1.8529E-03 5.3732E-02 ; @CI 8: 0 -112.372824198774 -5.8756E-03 1.1022E-01 ; @CI 9: 0 -112.387582513115 -1.4758E-02 1.8337E-01 ; @CI 10: 0 -112.410692911567 -2.3110E-02 2.3866E-01 ; @CI 11: 0 -112.444565012608 -3.3872E-02 2.3335E-01 ; @CI 12: 0 -112.483195864884 -3.8631E-02 1.9437E-01 . Warning! CI diagonalization did not fully converge!. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.483195864884152; ```. However, with line 371, I get:; ```; @DF-MCSCF 30: -112.523829840588 4.2633e-14 1.05e-10 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 31: -112.523829840588 -2.8422e-14 2.75e-11 0.00e+00 12 1 TS, DIIS. @DF-MCSCF has converged!. @DF-MCSCF Final Energy: -112.523829840588462. Computing CI Semicanonical Orbitals. ==> Starting CI iterations <==. H0 Block Eigenvalue = -112.52382984. Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors. Iter Root Total Energy Delta E C RMS. @CI 0: 0 -112.523829840638 -2.5765E+01 4.3475E-11 ; Warning: Norm of correction (root 0) is < 1.0E-13; @CI 1: 0 -112.523829840638 0.0000E+00 2.2840E-10 c. ==> Energetics <==. SCF energy = -112.061077881343110; Total MCSCF energy = -112.523829840588462. ==> MCSCF root 0 information <==. MCSCF Root 0 energy = -112.523829840637774; ```. I am not sure why reading the old guess leads to ve",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:3727,energy,energy,3727,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,1,['energy'],['energy']
Energy Efficiency,"> # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); > compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); > compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(odd_g_start, g0, 3, 'start grad'); > ; > def test_badodd_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); > compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); > compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'); > ; > test_norm_start(normz); > test_zero_grad(normz); > ; > # And behold, the initial gradient matches Q-Chem, the optimization; > ; > # progresses nicely, the RMS Force column goes to zero, and the gradient; > ; > # at the end is zero.; > ; > # start nre.........................................................PASSED; > ; > # start ene.........................................................PASSED; > ; > # start rms grad...................................................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:3693,ENERGY,ENERGY,3693,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['ENERGY'],['ENERGY']
Energy Efficiency,> (Though not always. We still have to delete `MP2 TOTAL ENERGY` after a double-hybrid DFT job.). I don't follow - what's wrong with keeping the MP2 total energy around?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1375#issuecomment-444498869:57,ENERGY,ENERGY,57,https://psicode.org,https://github.com/psi4/psi4/issues/1375#issuecomment-444498869,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"> * Why have separate `form_C` and `form_C_level_shift`? I could imagine a single `form_C` function that takes a level shift `int` that defaults to 0. I didn't want to change the signature of `form_C`. However, having one function is, of course, the cleanest solution. Since the level shifting is a tiny bit more work, I use plain diagonalization if the shift vanishes. > * This needs user docs on when to use level shifts, how to select a good level shift, and whether this will change the converged energy/orbitals/density-matrix/Fock-matrix. Added. > * To get the build working, please commit the `CMakeLists.txt` file for `scf-level-shift-rks`. Done",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2225#issuecomment-871777423:501,energy,energy,501,https://psicode.org,https://github.com/psi4/psi4/pull/2225#issuecomment-871777423,1,['energy'],['energy']
Energy Efficiency,"> . > PSI4 has UBCC(T) `energy('bcc(t)')` on a ROHF reference, but only conventional integrals with the `ccenergy` module. Maybe you already found it. o_O No, in fact I would have completely missed that! I checked the method table [here](http://www.psicode.org/psi4manual/master/notes_c.html#alternate-implementations) and thought Psi4 cannot do BCCD(T) at all. Perhaps BCCD and BCCD(T) could be added as methods to that docpage?. > ; > You may want to have a look at Piecuch's methods (and his group's general work) for which now there is a plugin available https://github.com/piecuch-group/psi4_cct3 . Thanks, I will check it out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-611929316:24,energy,energy,24,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-611929316,1,['energy'],['energy']
Energy Efficiency,"> ...Well, thanks Molpro. We have a legitimate ambiguity after all. :-). > cepa(0) stays lccsd for energy, gradient, etc. purposes. sounds good -- can avoid deprecation warnings. > Any time cepa(0) appears in an output file, we clarify what we're talking about. Explicitly saying ""Linearized CCD"" or ""Linearized CCSD"" is ideal. If we need to abbreviate, I've seen some Bartlett papers where they use LinCCD. Crawford has a good point about LCCD referring to localization. If we try to eliminate cepa(0) meaning lccd entirely, we create havoc with Bozkaya's papers. If we have a logging module, we print out a warning there too. * overall sounds good to add very specific text clarifying CCD/CCSD. I'm less concerned about linearized/local since psi has none of the latter.; * should try to keep output of cepa-0,1,2,etc. cohesive for fnocc; * I'd like to not disrupt the qcvars, presently e.g., `LCCD OPPOSITE-SPIN CORRELATION ENERGY`, `LCCSD TOTAL ENERGY`, but I'm not adamant.; * I'm less concerned about cohesiveness with UB papers. After all, once upon a time, the occ/dfocc code was ""using lccd for non-orbital-optimized and ocepa0 for orbital-optimized"". Any firm connections btwn code and paper can be cemented by pasting some DOIs. IMO, psi should try to be cohesive from the face, not from the lit perspective. > cepa is eliminated from dct. Andy put that in there years ago to facilitate comparison between Kutzelnigg's first stab at DCT and LCCD. Without getting into the theory weeds, that's not a useful comparison now, and it's going to be an even less useful comparison after I've published my next two papers. It's an awkward addition given the DCT logic. It's easiest to get rid of it and direct users to occ, dfocc, or fnocc. sounds good.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1872#issuecomment-616909231:99,energy,energy,99,https://psicode.org,https://github.com/psi4/psi4/issues/1872#issuecomment-616909231,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"> 7 is fairly tight unless your energy convergence thresholds are commensurately tight. I think we usually test in the 5-6 range... something we have talked about standardizing, but have yet to do so. I used 6 now and seems to work fine with the old ref values",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-502073114:32,energy,energy,32,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-502073114,1,['energy'],['energy']
Energy Efficiency,"> ; > # the gradient that any fully optimized molecule should match, more or less; > ; > zerograd = psi4.Matrix(5,3); > refgrad = [; > [ 0.0, 0.0, 0.0],; > [ 0.0, 0.0, 0.0],; > [ 0.0, 0.0, 0.0],; > [ 0.0, 0.0, 0.0],; > [ 0.0, 0.0, 0.0]]; > zerograd.set(refgrad); > ; > # this is the first system, a fluoromethane that looks pretty good to the eye; > ; > # zmat version, normz; > ; > molecule normz {; > C; > H 1 1.2; > H 1 1.2 2 104; > H 1 1.2 2 105 3 120; > F 1 1.3 2 106 4 121; > }; > ; > # reference start NRE, E, G; > ; > norm_nre_start = 37.6824945882 # Q-Chem; > norm_e_start = -139.5307182946 # Q-Chem; > norm_g_start = psi4.Matrix(5, 3) # Q-Chem; > contents = [ # have to swap x & y, and -x; > [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; > [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; > [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; > norm_g_start.set(zip(*contents)); > norm_rmsg_start = 0.041309 # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; > ; > # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; > ; > # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243; > ; > # reference optimized NRE, E (G should be 0); > ; > nre_opt = 37.5276022922 # Q-Chem; > e_opt = -139.5573922 # Q-Chem; > #norm_g_opt # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; > ; > # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:2136,Energy,Energy,2136,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['Energy'],['Energy']
Energy Efficiency,"> ; > ; > @ TiborGY I would not know how to monitor the health of my SSD, so I cannot speak to that. I have a 16GB M1 Mac mini sitting on my desk using most of the cores 24/7, but all of the program memory requirements fit comfortably within 16GB, so little or no swap is being used. Edit: We are going off topic here, but I am going to answer because I think this could be useful information.; I am not just talking about swap here, a lot of quantum chemistry programs create temporary files that they intensely read and write to. Usually called ""conventional integrals"" or ""out-of-core"" algorithms for historical reasons. I once guesstimated the amount of writes running non-DF CCSD(T) generates to be around 1 to 5 TB per day on a fast 8-14 core machine. Not something that most SSDs can be expected to reliably handle for long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-961542615:44,monitor,monitor,44,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-961542615,1,['monitor'],['monitor']
Energy Efficiency,"> ; > ; > I am still completely lost when I try to read `_validate_cbs_inputs`.; > ; > What I understand is that the user provides the energy call with metadata information in the form of either a structured dictionary or a string using special CBS syntax that is then converted into a structured dictionary. There's actually a third option - a legacy subset of keywords, such as `scf_wfn`, `corl_scheme`, etc. I agree, it's a mess, and someone should do something about it. . Basically, if it's a `method/basis` string, that gets parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:135,energy,energy,135,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373,2,['energy'],['energy']
Energy Efficiency,"> ; > ; > Since the energy is considerably higher in the failing example I wonder if the geometry is okay?. I can't share a screenshot of the initial geometry, but viewing it in VMD (I just copy and pasted the initial geometry into a text file, added 42 on the top line, and a space after and saved as an xyz file) the geometry appeared okay (to me)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-952846346:20,energy,energy,20,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-952846346,1,['energy'],['energy']
Energy Efficiency,"> ; > ; > Since the energy is considerably higher in the failing example I wonder if the geometry is okay?; ```. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RKS Reference; 20 Threads, 38146 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C1. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; C -0.307454099736 2.318040119853 2.468014008990 12.000000000000; C 1.300641336649 1.982051764266 2.628513431266 12.000000000000; O 1.962879504944 1.527519081165 1.701537918018 15.994914619570; O 1.949815296586 2.221805215180 3.963571605577 15.994914619570; C -1.263227046773 1.797657004499 1.088791427805 12.000000000000; C -2.839131270643 2.322807276281 1.010388877282 12.000000000000; C -3.752400842965 1.681186132670 2.291416403566 12.000000000000; O -3.851847835551 2.315197878420 3.362195561957 15.994914619570; O -4.520670030782 0.390895820977 2.072626060060 15.994914619570; C -1.377050447085 0.091845270869 1.099868725444 12.000000000000; O -0.826222069895 -0.735798730434 2.093681084093 15.994914619570; O -2.067189679130 -0.398960257209 -0.140659708132 15.994914619570; O -0.619838397578 2.486797319375 -0.194822309932 15.994914619570; H -0.321249410252 3.502673117209 2.443953635699 1.007825032230; H -0.790556820613 1.846088754841 3.478981374859 1.007825032230; H 2.968518076418 1.991382231036 3.914876855494 1.007825032230; H -3.446932645042 2.023821120010 -0.028125540174 1.007825032230; H -2.751482207601 3.525725481575 0.978750254628 1.007825032230; H -5.041124717719 0.143747881126 2.985491874213 1.007825032230; H -1.897047410743 -1.511749253062 -0.052863913919 1.007825032230; H -0.075772329213 1.770882773042 -0.598697666704 1.007825032230; Gh(C) 0.474241568549 -1.806355440989 -3.081314925013 12.0000000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-952851437:20,energy,energy,20,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-952851437,2,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"> ; > > (ii) If molecule is open-shell _and_ no reference has been specified,; > > switch to uhf. This could be tricky b/c we’re not set up to do this; > > driver-side. Also, there’d still be no way to use r/ro, as appropriate, in; > > a series of molecules w/o explicitly setting reference.; > > ; > > Lori; > > ; > > > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com; > > > wrote:; > > > ; > > > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > > > That sounds ok to me (then reference just has to be defined properly).; > > > ; > > > What about DFT, do we define functional properly and do energy('dft'),; > > > etc.?; > > > ; > > > David; > > > ; > > > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns <notifications@github.com; > > > ; > > > wrote:; > > > ; > > > > Fixed by 6f6d3aa; > > > > <; > > > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > > > ; > > > > though I rather think now that defining; > > > > hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > > > energy() was a bad idea (by me) a few years ago (except for ""hf""; > > > > itself).; > > > > Nevertheless, as this ticket points out, having defined these names; > > > > only; > > > > for energy() confounds the driver logic. These convenience names are; > > > > now in; > > > > place for gradient() and property().; > > > > ; > > > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > > > prop() if others concur with my present assessment.; > > > > ; > > > > —; > > > > Reply to this email directly or view it on GitHub; > > > > <https://github.com/psi4/psi4public/issues/103#issuecomment-109846967; > > > > .; > > > > ; > > > > —; > > > > Reply to this email directly or view it on GitHub <; > > > > https://github.com/psi4/psi4public/issues/103#issuecomment-110021718>.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/103#issuecomment-110183382.; > > ; > >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:4752,energy,energy,4752,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['energy'],['energy']
Energy Efficiency,"> > ""Maybe you're just observing noise because you haven't converged the equations fully tightly.""; > ; > How can I converge the equations fully tightly? Which parameter do I need to modify?. Set `d_convergence`. The default is 1e-6. You could set it to smaller numbers and see if the correlation improves. If you set it too low, the equations may not converge. You will see this problem if you try to set it below 1e-12, but you will probably see it at a larger number. . > > ""There was a bugfix between 1.4 and 1.4.1 that specifically affected computations with density-fitted integrals (which you use by default), an omega functional, and a linearly dependent auxiliary basis set like you would see in large systems.""; > ; > From the calculation results, the results of v1.4 seems to be more reasonable, because it has a higher correlation with other results. For v1.4.1, did I use it wrong? how to modify the code?; > . I feel like you are not listening to me. I don't trust your ORCA and Psi4 comparisons, and it's perfectly reasonable for 1.3.2 and 1.4 to agree with each other but not 1.4.1, if both 1.3.2 and 1.4 had a bug. I do not trust that the results of 1.4 are more reasonable. Like I said before. Find the system where the energy changes the most between 1.4 and 1.4.1, tell us what the energies are, and tell us the system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-968823767:1238,energy,energy,1238,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-968823767,1,['energy'],['energy']
Energy Efficiency,"> > > > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.; > ; > Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema. in that case, we could in theory store the specific rotation in ""atomic units"" if such a thing even exists. it's computed in `ccresponse` from the trace of the G' tensor (in a.u.) which is then normalized for path length, concentration, and molecular weight to give the ""specific"" rotation, so I suppose we'd need atomic units for those quantities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022#issuecomment-716630918:525,energy,energy,525,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716630918,2,['energy'],['energy']
Energy Efficiency,"> > > lgtm, thanks! Is there any atomic unit for specific rotation?; > > ; > > ; > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. The G' tensor is stored in atomic units (as it's reported in the output file), while the specific rotation itself is stored in deg/[dm (g/cm^3)] since it is only one additional float. For now, since the syntax is `CCxx xPROPERTYx @ xxNM`, it's a bit easier to use NM. But you're right that the field strength in a.u. should be available at the python level to an arbitrary number of digits. perhaps the `omega` dict passed in (as `psi4.set_options({""omega"":[x,x,unit]})`) is available on the wfn already?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491:527,energy,energy,527,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491,2,['energy'],['energy']
Energy Efficiency,"> > Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf); > ; > Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on; > ; > 1. the Coulomb contribution; > 2. the alpha and beta exchange contributions; > ; > If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved.; > ; > The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy. That makes sense, thank you Susi, I will modify the code (prob tomorrow), and rerun the UHF tests, as well as some RHF tests to make sure the RHF still works",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841:437,energy,energy,437,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841,2,['energy'],['energy']
Energy Efficiency,"> > Are you also zeroing out the diagonal for FMI in the UHF case? I looks like only the Fmi matrix is cleared there.; > ; > Yes, on lines 75-77. Look for the little patch of green _between_ the red. OK, now I see what you're doing. My only suggestion is that you modify the comment under RHF to read:. // This is because the amplitude update in RHF uses the full residual while the ROHF and UHF updates separate out the diagonal contributions from the Fock matrix [cf. Eqs. (1) and (2) of Stanton et al., J. Chem. Phys. 94, 4334-4345 (1991)].",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2703#issuecomment-1227100111:175,green,green,175,https://psicode.org,https://github.com/psi4/psi4/pull/2703#issuecomment-1227100111,2,['green'],['green']
Energy Efficiency,"> > I wonder if it's the syntax qc_module=""ccenergy"" is confusing since that's the name of the CC energy code, but it's signaling to compute gradients analytically. I'm not sure what I'd prefer, but I don't think this will be obvious to most users.; > ; > I agree there's not a great name for the cc suite. Only alternative I've seen is `cc*`. `cc` alone seems too generic.; > ; > It looks like the `qc_module=ccenergy` came about for this role between beta5 and v1.0: https://github.com/psi4/psi4archive/blob/1.0.x/src/bin/psi4/read_options.cc#L165-L168 . So it's longstanding, though probably little used. If you think of a preferred alias, it'd be easy enough to re-route, I suspect. OK, then let's go ahead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2943#issuecomment-1533165946:98,energy,energy,98,https://psicode.org,https://github.com/psi4/psi4/pull/2943#issuecomment-1533165946,1,['energy'],['energy']
Energy Efficiency,"> > Iirc, @andysim said that the old libmints solidharmonics.cc code is outdated anyways, and the Helgaker recursions are better. Feel free to comment Andy.; > ; > Both codes use regular solid harmonics with the exact same normalization (assuming that your Helgaker recursions match that code that I sent to you a while ago, Andy). The code in libmints is stuff that was taken from MPQC, but becomes painfully slow around L=9 or so. We had to reduce the default maximum L a while ago because it was dramatically slowing the Psi4 startup time. So I think that, if it turns out not to be a huge task, replacing the libmints code with smarter recursions is probably not a bad idea. Failing that, the Helgaker version is not really introducing any redundancy because the libmints version won't be able to support high enough a.m. efficiently. Since the Helgaker code is more efficient, should I do that replacement in this PR or the next? Also, does that mean we need to just move everything in libfmm to libmints? @jturney thoughts?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2665#issuecomment-1209579441:443,reduce,reduce,443,https://psicode.org,https://github.com/psi4/psi4/pull/2665#issuecomment-1209579441,3,"['efficient', 'reduce']","['efficient', 'efficiently', 'reduce']"
Energy Efficiency,"> > Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated.; > ; > I think it'd be most useful to continue scf5 as a regression test. That is, record new refs for the in-between-conv-and-df algorithms collected at tight convergences, then check them against usual 6 decimal places. Then we'll know in future if code changes affect the algorithms.; > ; > How are you generating the `samples/` files? If it's any other way than autogenerated via the docs build, please don't go to the trouble. We can catch the changes en masse before release. > I strongly agree with Lori about having this as a regression test rather than an accuracy test. Put the new, approximate energies with all the others. That should be a good indicator to others working with the SCF system of what accuracy to expect. All right, sounds like a plan! I will do this, then!. Also, Lori, to answer your question about samples, I have been editing them manually. Thank you for letting me know about their autogeneration!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1310407815:271,energy,energy,271,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1310407815,4,['energy'],['energy']
Energy Efficiency,"> > The atom vs shell loop structure is an open question of the PR:; > > > My algorithm is slightly modified from the Oschenfeld version since we perform our DirectJK algorithm in atom-task pairs instead of shell pairs, in order to preserve the old DirectJK loop. Is that a bad idea?; > > ; > > ; > > What is the effort of changing the loop structure and what would be the gain? A small-ish efficiency loss is IMO acceptable if the effort is large.; > ; > I missed that, thanks. I don't have the experience to give efficiency estimates, and it also isn't clear to me what the reason for keeping the old loop structure is. Is the question ""is atom task vs shell pair"" more efficient, or ""is shell pair so much more efficient that it's worth doing some intensive refactoring to use shell pair""?. @susilehtola Based on your experience, what do you think should be done? Should we preserve the old loop structure of DirectJK (atom blocking) or try shell blocking (and refactor this code heavily)? I would think that performance gain is minimal because the shell screening is performed inside the atom blocking loop, but that is only my suspicion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-992619129:672,efficient,efficient,672,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-992619129,4,['efficient'],['efficient']
Energy Efficiency,"> > Warning that orbital energies then become ambiguous as well. Do you want the ""orbital energies"" at the correlated level of theory or the reference?; > > If there's no standard either way, then it may be best to let the user toggle which one they want in this corner case.; > ; > I don't know what behavior is expected; energy expectation value might be one option but there might be different definitions for the Fock operator. Most of all, you can't reorder the orbitals... This seems like a difficult issue to get right.; At this point I'd prefer to give a warning in the manual and output about the orbital energy field and print whatever the respective theory module puts there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-671863488:323,energy,energy,323,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-671863488,2,['energy'],['energy']
Energy Efficiency,"> > Yeah, it's perfectly fine to split things up into multiple PRs. One sensible order I can come up with is:; > ; > > ; > ; > > 1. Edit the incremental Fock in the derived `DirectJK` class so that it is efficient and maintainable (no SCF iteration counts associated with the object, minimal number of matrices cached on the object, etc.) [some other PR]; > ; > > 2. Move this improved incremental Fock to the parent `JK` class. [this PR]; > ; > > ; > ; > > In a previous comment, I suggested doing away with the cached `J`/`K`/`wK`/`dJ`/`dK`/`dwK` matrices by changing the behavior of the `JK` object so that the buffers aren't cleared between SCF iterations. If you find that difficult to do, I think an acceptable compromise would be to retain those cached matrices, but initialize them in the SCF driver (rather than make them a property of the JK object).; > ; > ; > ; > Since this PR is already opened, I would actually prefer 2 before 1. I am slammed with my schedule right now, and I think 2 before 1 would be WAYYY easier for me. Is that okay with you @zachglick @JonathonMisiewicz? This PR also immediately fixes the `incfock` issues with `DFJCOSK`, as opposed to punting those fixes down to a future PR. I could also do both 1 and 2 in this PR, if that makes things easier. Which do y'all prefer (2 then 1, or 1 and 2) @zachglick @JonathonMisiewicz ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1253891035:204,efficient,efficient,204,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1253891035,4,"['efficient', 'schedul']","['efficient', 'schedule']"
Energy Efficiency,"> > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022#issuecomment-716595355:508,energy,energy,508,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716595355,2,['energy'],['energy']
Energy Efficiency,"> @JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?. It should be. We need one other reviewer, and then to troubleshoot the failing test... The failure is unrelated to this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305:69,CHARGE,CHARGES,69,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457645305,1,['CHARGE'],['CHARGES']
Energy Efficiency,"> @JonathonMisiewicz the test in question is `dfmp2-ecp` which has been unreliable for some time, way before #1456 was merged. See #1433. I can't tell if we're disagreeing about facts or best practices. Peter added new tests of SCF energies to `dfmp2-ecp`. A few days ago, his new tests passed. Before the force-push, his tests failed. This tipped us off that _some_ other PR changed the energy to which frozen core ECP computations converge. Peter was able to reproduce the change in energies on a non-PR branch, confirming it. The first problem is that unless I missed something, there _shouldn't_ have been a PR that would change those energies. Apparently, there is one, and we don't know how many computations it afflicts. Probably just frozen core ECP, but there is a question mark on that one. Second, one of these two answers has to be wrong. I cannot believe this is a case of computations being insufficiently converged or landing on different states. If Psi is giving or was giving wrong answers, then at the absolute minimum, we have an obligation to let people know. And if this test is just meant to detect changes in energies without worrying about why, that needs to be said in the test itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-452670933:388,energy,energy,388,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-452670933,1,['energy'],['energy']
Energy Efficiency,"> @SinaMostafanejad Are you interested in continuing this PR? A PR that I have in the works also needs to export functions from PSIO, so there could be merge conflicts. Not at this time. I can reopen and work on it as soon as my schedule allows it. Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1821#issuecomment-951147533:229,schedul,schedule,229,https://psicode.org,https://github.com/psi4/psi4/pull/1821#issuecomment-951147533,1,['schedul'],['schedule']
Energy Efficiency,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:310,allocate,allocated,310,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904,1,['allocate'],['allocated']
Energy Efficiency,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:129,energy,energy,129,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001,2,['energy'],['energy']
Energy Efficiency,"> Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > ; > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf). Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on. 1. the Coulomb contribution; 2. the alpha and beta exchange contributions. If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved. The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-758898999:431,energy,energy,431,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758898999,2,['energy'],['energy']
Energy Efficiency,"> After coding this all up, I'm inclined to remove the last access call. I'd definitely retain the access call with the symmetry of the transition. How about `TD-HF ROOT 0 -> ROOT 2 EXCITATION ENERGY - A2 TRANSITION` to make the distinction to the ""legacy"" version more clear?. Even though `adcc` does not support point group symmetry, ping @mfherbst for another opinion on excited states 😄",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2462#issuecomment-1060884379:193,ENERGY,ENERGY,193,https://psicode.org,https://github.com/psi4/psi4/pull/2462#issuecomment-1060884379,1,['ENERGY'],['ENERGY']
Energy Efficiency,"> After further discussion, including with Dr. Sherrill, we have decided to keep the current atom-blocking structure of LinK, since we can avoid situations ""of too-small workloads in the inner loops"" in the words of Dr. Sherrill when we run DirectJK in parallel. Changing the linK code to shell-blocking instead of atom-blocking would be outside the scope of this PR. Whether ""changing the linK code to shell-blocking instead of atom-blocking would be outside the scope of this PR"" is a definition game. Is the goal of this PR ""implement a linK derivative with atom-blocking"" or ""implement the most efficient linK derivative we can think of""? If it's the former, then it's out-of-scope, and if it's the latter, then it's in-scope. Since you are not implementing the Ochsenfeld algorithm but a derivative thereof, give me a pseudocode version of your linK derivative that tells me _exactly_ what the loops are, what's getting parallelized, whether your screening is atom-based or shell-based, and what integrals you're computing based on your screening. My chief concern is this: It looks to me like you are computing integrals that you already know are insignificant (if the shell pair was screened out, but some other shell pair on the atom pair was not) because you can parallelize more efficiently. Parallelization efficiency is not the primary metric we care about, runtime is. It isn't clear to me how giving ourselves extra work is reducing runtime. If it's more efficient to screen out irrelevant shell pairs but distribute all relevant shell pairs between two atoms to a single thread, go for it: we're not computing extra integrals in that case. But if we distribute all shell pairs between relevant atoms to a single thread... that could be a lot of extra work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-999662496:599,efficient,efficient,599,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-999662496,6,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,"> After rebase, `cookbook-manual-fd-hess-grad` and `cookbook-manual-fd-hess-energy` fail due to `set_frequencies` missing. Is there something I should replace those with? I don't see an alternative recommended in the deprecation notice. No. `wfn.frequencies()` will return the frequencies automagically thanks to `wfn.frequency_analysis = vibinfo`. @loriab can probably confirm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1332583820:76,energy,energy,76,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1332583820,1,['energy'],['energy']
Energy Efficiency,"> Also I'm not sure how to deal with the ambivalence between DDX and PCM in terms of the user-facing flags to enable the models and the Psi variables to store results / energy terms. > PCMsolver can do PCM and COSMO, but DDX can provide domain-decomposition variants of these plus in the future linearised Poisson-Boltzmann (LPB), which is in some sense an extension to PCM. So looking ahead it feels weird to have a flag PCM to decide whether LPB is run. Similar DDX and PCMsolver will not give the same values for the solvation energy, but are still sort of doing the same thing (continuum solvation models). Any thoughts?. Psi likes to have a uniform interface when one can get the same value from different engines, but this has really only worked out for empirical dispersion. So the other principle is that it's fine for options to be a passthrough to the upstream project. Then PCM, PE, and DDX are effectually engine/upstream specifiers rather than the method flags that ""PCM"" suggests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767#issuecomment-1336353358:169,energy,energy,169,https://psicode.org,https://github.com/psi4/psi4/pull/2767#issuecomment-1336353358,2,['energy'],['energy']
Energy Efficiency,"> Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe. I have extensively verified the correctness of this approach, across many different molecules, basis sets, etc. I have never observed an error of ""2 Hartrees"". The worst I have ever observed is on the order of 1.0e-5 Hartrees, better than density fitting. Here is a link to my ""benzene case study"". https://docs.google.com/spreadsheets/d/1HDMZ5PV6GhnK4i68Y1t86VhauTwqMP_X2kII21GCsiY/edit?usp=sharing. I empirically discovered that the best screening threshold given an energy convergence of 1.0e-n is 1.0e-(n+3) for non-augmented basis sets and 1.0e-(n+5) for augmented basis sets. For example, for an e_convergence of 1.0e-8 in cc-pVTZ, the ideal threshold is 1.0e-11, while it is 1.0e-13 in aug-cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029:101,energy,energy,101,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029,2,['energy'],['energy']
Energy Efficiency,"> Are you also zeroing out the diagonal for FMI in the UHF case? I looks like only the Fmi matrix is cleared there. Yes, on lines 75-77. Look for the little patch of green _between_ the red.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2703#issuecomment-1227086053:166,green,green,166,https://psicode.org,https://github.com/psi4/psi4/pull/2703#issuecomment-1227086053,2,['green'],['green']
Energy Efficiency,"> As an additional note, the energy that the program was giving with that output is exactly 9.3609016111309238, the nuclear repulsion energy. So, for whatever reason, the electronic energy is 0 in that state. That sounds highly unlikely. Maybe PySCF isn't getting a properly formatted density matrix, and is not really evaluating anything?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692#issuecomment-518570167:29,energy,energy,29,https://psicode.org,https://github.com/psi4/psi4/issues/1692#issuecomment-518570167,3,['energy'],['energy']
Energy Efficiency,"> As long as the threads are only reduced during the PK steps it would only have benefits. No threads that do no work and allocate memory (Even if it doesn't matter in practice). This is all true. Any opposition I would have to reducing thread counts is from a principle standpoint - essentially having the code forcibly doing something in opposition to what the user wanted it to do. That said, this is a minor qualm on my part, and everything you said here is correct regardless. > The automatic selection probably ensures the in-core algorithm for these small calculations but could you test pk_algo = YOSHIMINE/REORDER and PK_NO_INCORE True as well? We probably have no test coverage.; Limiting nthreads in the PKManager https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/PKmanagers.cc#L154 might solve headaches in the other algorithms. I saw a ntask < nthreads check in Yoshimine. Sure! I tested the Yoshimine and Reorder algorithms (with PK_NO_INCORE set to True) with a slightly modified form of the minimal_example.py file provided in issue https://github.com/psi4/psi4/issues/2760; and as it turns out, using PK_ALGO=REORDER leads to a segfault when using my implementation. Your suggestion of changing nthreads directly fixes that REORDER segfault issue as well. In light of that, I will be happy to use your suggested methodology for this PR!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2763#issuecomment-1298684102:34,reduce,reduced,34,https://psicode.org,https://github.com/psi4/psi4/pull/2763#issuecomment-1298684102,2,"['allocate', 'reduce']","['allocate', 'reduced']"
Energy Efficiency,"> As mentioned by @PeterKraus can you run the `dft-bench-interaction` and `dft-bench-ionization` tests? Feel free to modify those tests to only run the wPBE0 part. A bit surprised the tests pass previously as the results were taken from other programs. Which tests?; ```; $ pwd; /home/work/psi4/psi4/tests; $ grep -i LC-WPBE0 -R */input.dat; $; ```; If I grep for wPBE0 - another alias for the functional in psi4 - I get; ```; $ grep -i wPBE0 -R */input.dat; dft-custom-hybrid/input.dat:# ""wpbe0"" : build_wpbe0_superfunctional,; dft-custom-hybrid/input.dat:#edft = energy('wpbe0'); dft-custom-hybrid/input.dat:#compare_values(, edft, 5, 'Ne: wPBE0') ; dft-custom/input.dat:compare_values(reference_wpbe_4, func_call, 6, ""wPBE0 omega=0.4"") #TEST; dft-custom/input.dat:compare_values(reference_wpbe_5, func_call, 6, ""wPBE0 omega=0.5"") #TEST; dft-custom/input.dat:compare_values(reference_wpbe_6, func_call, 6, ""wPBE0 omega=0.6"") #TEST; ```; but that section isn't even testing wPBE0 but wPBE!; ```; set dft_omega 0.4; func_call = energy('SCF', dft_functional=""wPBE"") #TEST; compare_values(reference_wpbe_4, func_call, 6, ""wPBE0 omega=0.4"") #TEST. set dft_omega 0.5; func_call = energy('SCF', dft_functional=""wPBE"") #TEST; compare_values(reference_wpbe_5, func_call, 6, ""wPBE0 omega=0.5"") #TEST. set dft_omega 0.6; func_call = energy('SCF', dft_functional=""wPBE"") #TEST; compare_values(reference_wpbe_6, func_call, 6, ""wPBE0 omega=0.6"") #TEST; ```; Also, the file doesn't say anything about where the reference values have been taken from. E.g. Q-Chem doesn't appear to have these functionals, at least not with the Weintraub 2009 reference.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1260#issuecomment-424374131:565,energy,energy,565,https://psicode.org,https://github.com/psi4/psi4/pull/1260#issuecomment-424374131,4,['energy'],['energy']
Energy Efficiency,"> BTW the energy agreement b/w PySCF and psi4 for Ethane with the above script is up to 1e-11 a.u. so I guess, this is as good as it is gonna get. So what did you change from the earlier try? Just the system?. I think it is important to dig out why the programs are giving different total energies in large calculations, since this may hint to a bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1488546315:10,energy,energy,10,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1488546315,1,['energy'],['energy']
Energy Efficiency,"> Can you provide a before-and-after example of what error messages look like?. Hmm, yes I reckon if I ran something with a ~50 MB ramdisk as the scratch drive, that should be a reliable way to trigger a write failure. My immediate-term schedule just got a lot busier, so I might not get around to doing this for a week or so.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1291906441:237,schedul,schedule,237,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1291906441,1,['schedul'],['schedule']
Energy Efficiency,> Can you provide me with some literature where I can read up on those things? Also this point charge embedding is new to me. No sorry. Need to look for yourself. I know this from talking to people and watching conference talks. No first hand experience,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2709#issuecomment-1234106730:95,charge,charge,95,https://psicode.org,https://github.com/psi4/psi4/issues/2709#issuecomment-1234106730,1,['charge'],['charge']
Energy Efficiency,"> Certainly. Polluted might have been too harsh, cluttered may be a more appropriate word for it.; > ; > All variables are currently declared at the beginning of the function. Depending on the type of sort requested, some of them may never be initialized/used, but because they are declared at the top they are always visible and mutable inside the switch cases, loops, etc.; > ; > This makes debugging more challenging than it has to be, as it is not possible to tell at a glance which of the variables with suspicious (negative or power-of-two) values are just uninitialized, as seen in the stack trace in [#2261 (comment)](https://github.com/psi4/psi4/issues/2261#issuecomment-1227164277); > ; > In general variables should enter scope when they are needed and go out of scope when they are no longer required, and be `const` if they are never modified. All fair criticisms, and that clears it up. The code was originally pure C and later modified to fit (nominally) within a C++ framework, hence the structure of the variable declarations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2717#issuecomment-1244241467:533,power,power-of-two,533,https://psicode.org,https://github.com/psi4/psi4/pull/2717#issuecomment-1244241467,2,['power'],['power-of-two']
Energy Efficiency,"> Conceptual questions before I start a proper review: is it possible to have a J and K algorithm where implementing the two _in a single algorithm_ is more efficient than implementing both in a mix-and-match fashion? If so, how are going to take advantage of the efficiency gains from combining them?. Assuming I'm understanding this question correctly, implementing both J and K together in a single algorithm (as done in DirectJK) is generally more efficient than mix-and-match separate J and K algorithms for smaller systems, but less so for larger systems. This is because, generally, algorithms designed to build J and K separately exploit properties specific to those matrices (e.g. the exponential decay of the Density matrix with distance between basis function pairs in Exchange contributions) to lower algorithmic scaling, with the trade-off of a higher prefactor due to recomputation of integrals across separate J and K algorithms. . If we're talking about, say, trying to compute parts of one matrix within the algorithm meant to compute the other (say, partially building J within the LinK algorithm and building the rest of J in a separate algorithm), this may be possible, and I believe Ochsenfeld discusses this possibility shortly in his LinK paper. But, I'm not so sure of the benefits of doing so, if there are any benefits at all compared to something like DirectJK. Additionally, one of the big benefits of CompositeJK (effective J or K construction in cases where only one such matrix is needed, e.g., DFT with GGA functionals) would be lost.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762#issuecomment-1302473673:157,efficient,efficient,157,https://psicode.org,https://github.com/psi4/psi4/pull/2762#issuecomment-1302473673,2,['efficient'],['efficient']
Energy Efficiency,"> Didn't try to reproduce ORCA exactly (not sure what PCM settings are needed in detail, if possible at all), but it looks similar enough. I am not familiar with ORCA's implementation, but you could try to set the same exact permittivity and a very fine discretization of the cavity to get as close as possible.; ; > @robertodr, can you have another look? static casting for the int<->double conversion OK for visibility?. Yes, `static_cast` is reasonable here. > Are there similar cases inside pcmsolver where one needs to differentiate between cavity-building-atoms and charge-carrying atoms?. This is the only case where I can think a reasonable default can be devised.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1977#issuecomment-671317861:572,charge,charge-carrying,572,https://psicode.org,https://github.com/psi4/psi4/pull/1977#issuecomment-671317861,1,['charge'],['charge-carrying']
Energy Efficiency,"> Doing as you suggest indeed improves the results to something reasonable. Just wondering whether this is like a systematic solution. For the specific problem of obtaining a smooth curve that continues a particular SCF energy, using guess read is about as much of a systematic solution as you can have. There are cases where an SCF solution simply ceases to exist along a potential energy curve, associated with near-singularities in the MO hessian. In such a case, no convergence trick can help you. If the ""guess read"" technique doesn't work, try adding `set soscf true`. If that still doesn't work, odds are that the solution ceases to exist. (Note: SOSCF is not implemented for DFT functionals with meta or iterative VV10 components.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2901#issuecomment-1473868464:220,energy,energy,220,https://psicode.org,https://github.com/psi4/psi4/issues/2901#issuecomment-1473868464,4,['energy'],['energy']
Energy Efficiency,"> Dumping debug information for `libxc`'s purposes sounds good to me. What do you need printed, and where should I put the print statements? (I'm guessing `lbfunctional/LibXCfunctional.cc`.) I'm still learning this part of the codebase. The point-wise density data, i.e. `rhoa rhob sigmaaa sigmaab sigmabb lapla laplb taua taub` for unrestricted and `rho sigma lapl tau` for restricted, where `rho` is density, `sigma` is reduced gradient, `lapl` is density Laplacian, and `tau` is local kinetic energy density.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611#issuecomment-1159839361:422,reduce,reduced,422,https://psicode.org,https://github.com/psi4/psi4/pull/2611#issuecomment-1159839361,4,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"> First, your initial geometry has a dihedral of 180, but your initial step is 0, so that's an enormous perturbation to introduce through constraints; setting start_angle = 181.0. > I also added symmetry c1 to the molecule definition section, to make sure weird things don't happen as the symmetry changes. I had done both of these things too (Sorry, I probably should've posted that too) and while the optimizations did converge (although not for all structures), the structures were still of very high energy when compared to the molecular mechanics energy of the optimized structure. When I generated the starting structures outside of psi4, the molecular mechanics energies were much closer to the QM energies (as it should be since the parameters were fit to reproduce this scan). [Here](https://github.com/ChayaSt/torsionfit/blob/ddg/examples/butane/torsion_scans/psi4_archive/Psi4_QM_MM_comparison.pdf) is a figure comparing the QM and MM energies from structures generated with psi4; [Here](https://github.com/ChayaSt/torsionfit/blob/ddg/examples/butane/torsion_scans/psi4_archive/Pymol_scan_comparison.pdf) is one comparing QM and MM energies from structures generated outside of psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/647#issuecomment-288896856:504,energy,energy,504,https://psicode.org,https://github.com/psi4/psi4/issues/647#issuecomment-288896856,2,['energy'],['energy']
Energy Efficiency,"> For reference, this issue is _also_ known to cause problems in geometry optimizations. You read in the orbitals from the previous geometry but don't correct for orthogonality. Fock matrix diagonalization will correct for orthogonality due to the explicit S^(-1/2), but it costs you all the good orbital information. That also means that the first energy is non-variational...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/758#issuecomment-869305662:349,energy,energy,349,https://psicode.org,https://github.com/psi4/psi4/issues/758#issuecomment-869305662,1,['energy'],['energy']
Energy Efficiency,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:757,energy,energy,757,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679,2,['energy'],['energy']
Energy Efficiency,"> Good work Andy. I like the intent of this PR, which is to consolidate incremental Fock code between different derived `JK` classes. I think that if the incremental Fock feature is to be promoted to the parent `JK` class, it is important that the implementation be as efficient and maintainable as possible. In that respect, I think there are some general improvements to be made:; > ; > The way you've structured incremental Fock keeps eight lists of matrices attached to each `JK` object: copies of the previous `J`, `K`, `wK`, and `D` matrices, and differences between the last two iterations `J`, `K`, `wK`, `D`. In the interest of efficiency, I think it would be best to not store these matrices. Incremental Fock as implemented in the `DFJCOSK` class is a little better about this. That code adds the difference in `J`/`K`/`wK` to the appropriate buffer, which is not zeroed out between SCF iterations. This requires keeping only one list of matrices, the previous iteration `D`, which in my opinion is cleaner. (I have some thoughts on getting around storing the previous `D` matrix too.); > ; > Speaking more broadly about the design of the `JK` class, one valuable aspect of the `JK` class is that it is stateless and decoupled from the SCF procedure. `JK` classes have a well-defined [interface](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.h#L175-L209). The variables like `incfock_count_` that you've proposed adding to the `JK` class break this statelessness, and my opinion that kind of logic should be in the SCF driver, not the `JK` object.; > ; > Let me know if any of these thoughts are unclear. I agree with your points. However, making that change would require a refactor of `DirectJK` (which zero out the J/K matrices at the beginning of every iteration) as well, as well as an overhaul of the previous `INCFOCK` code that exists in the Psi4 code. For the sake of PR brevity, I suggest punting those changes down to a future PR. The scope of this PR is to f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623:269,efficient,efficient,269,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623,1,['efficient'],['efficient']
Energy Efficiency,"> Have you tried with Python 3.11 yet?. update, I've built python 3.11 rc and numpy from source (first time ever). I did have to use the most recent v2.10.0 pb11. By turning off some diis (see below), I can get the variant on test tu1 to run through 6 SCF iterations (not to convergence) before segfaulting. major things still to investigate -- installing scipy, what lapack libraries for numpy is pip hiding from me, are the timer files closing cleanly when it throws the install-scipy-or-disable-accelerator message. and, of course, all this is on master, not the 1.3.2 of interest to you. . ```; memory 600 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; set scf scf_initial_accelerator none; set diis off; energy('scf'). compare_values(-76.0266327341067125, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1235824357:736,energy,energy,736,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1235824357,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"> Hey all,; > ; > I have compiled a folder of all the important density screening results, with interaction energies, conformation energies (in progress), and reaction energies:; > ; > https://drive.google.com/drive/folders/10gbJYR7pzrdkbLy1AcKgRigSikwYIYL4?usp=sharing; > ; > Hope this helps!. For reference, the energy values for conformation and reaction energies are in kcal/mol",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-752960304:314,energy,energy,314,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-752960304,1,['energy'],['energy']
Energy Efficiency,"> Hi @kzinovjev just checking over this again and noticed that the [populations](https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/src/psi4/libmints/oeprop.cc#L2099-L2104) and [widths](https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/src/psi4/libmints/oeprop.cc#L2182-L2188) might already be printed can you check they match what you are printing?. Hi @jthorton, currently only the atomic charges (so, the sum of populations of all the shells) and the widths of the last shell for each atom are printed. In contrast, with this patch the full result of MBIS density fitting is printed, so populations and widths of all the shells. This is helpful if one wants to split the atomic charges into core/valence shells, as in [MEDFF](http://dx.doi.org/10.1021/acs.jctc.6b00969), [IPML](https://doi.org/10.1063/1.5009502) or [EMLE](https://doi.org/10.1021/acs.jctc.2c00914) methods.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3102#issuecomment-1919813943:450,charge,charges,450,https://psicode.org,https://github.com/psi4/psi4/pull/3102#issuecomment-1919813943,2,['charge'],['charges']
Energy Efficiency,"> Hi @susilehtola, I've been following Libxc v5.1 https://gitlab.com/libxc/libxc/-/issues/186 with interest. When I compiled this branch (after rebase; including your fixes from the spring, thanks!) in late December against the the Libxc 5.0 branch, I got about the same Psi4 test results as recorded above -- lots of `Matrix::power: C_DSYEV failed`.; > ; > However, when I compile this branch against the new Libxc 5.1 hotfix branch, I don't even get that far. After disabling OpenMP, I get segfaults (dft-psivar):; > ; > ```; > (gdb) bt; > #0 0x00007ffff78351d7 in raise () from /lib64/libc.so.6; > #1 0x00007ffff78368c8 in abort () from /lib64/libc.so.6; > #2 0x00007ffff782e146 in __assert_fail_base () from /lib64/libc.so.6; > #3 0x00007ffff782e1f2 in __assert_fail () from /lib64/libc.so.6; > #4 0x00007fffed70db12 in xc_mix_func (func=func@entry=0x555556ca7500, np=np@entry=255, rho=rho@entry=0x555556e575c0, sigma=sigma@entry=0x555556ccda80, lapl=lapl@entry=0x0, tau=tau@entry=0x0, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, vlapl=0x0, vtau=0x0, v2rho2=0x0, v2rhosigma=0x0, v2rholapl=0x0, v2rhotau=0x0, v2sigma2=0x0, ; > v2sigmalapl=0x0, v2sigmatau=0x0, v2lapl2=0x0, v2lapltau=0x0, v2tau2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rho2lapl=0x0, v3rho2tau=0x0, v3rhosigma2=0x0, v3rhosigmalapl=0x0, v3rhosigmatau=0x0, v3rholapl2=0x0, v3rholapltau=0x0, v3rhotau2=0x0, v3sigma3=0x0, v3sigma2lapl=0x0, v3sigma2tau=0x0, v3sigmalapl2=0x0, v3sigmalapltau=0x0, v3sigmatau2=0x0, ; > v3lapl3=0x0, v3lapl2tau=0x0, v3lapltau2=0x0, v3tau3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho3lapl=0x0, v4rho3tau=0x0, v4rho2sigma2=0x0, v4rho2sigmalapl=0x0, v4rho2sigmatau=0x0, v4rho2lapl2=0x0, v4rho2lapltau=0x0, v4rho2tau2=0x0, v4rhosigma3=0x0, v4rhosigma2lapl=0x0, v4rhosigma2tau=0x0, v4rhosigmalapl2=0x0, v4rhosigmalapltau=0x0, ; > v4rhosigmatau2=0x0, v4rholapl3=0x0, v4rholapl2tau=0x0, v4rholapltau2=0x0, v4rhotau3=0x0, v4sigma4=0x0, v4sigma3lapl=0x0, v4sigma3tau=0x0, v4sigma2lapl2=0x0, v4sigma2lapltau",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798:327,power,power,327,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798,1,['power'],['power']
Energy Efficiency,"> Hi Yi,; > ; > Thanks for your work and the comments. I've been discussing some with Jonathon, and I think if you could do the below, that will clarify all the scaling factor and testing aspects of the PR, so we can move on to the I/O optimization and routing logic parts. Please let me know of any concerns.; > ; > * accept the various GH suggestions clarifying the scaling scheme changes (only if you agree with them, of course). Feel free to make the changes locally, rather than through the GH interface, if that makes the git operations easier.; > * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; > ; > ```; > #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms.; > ; > DHF = -0.01189736 #TEST; > Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; > ""SAPT EXCH ENERGY"": 0.36545706, #TEST; > ""SAPT IND ENERGY"": -0.00840483, #TEST; > ""SAPT DISP ENERGY"": -0.24398704, #TEST; > ""CURRENT ENERGY"": 0.01122234} #TEST; > ; > Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26658499, #TEST; > ""CURRENT ENERGY"": -0.01126250} #TEST; > ; > Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26605283, #TEST; > ""CURRENT ENERGY"": -0.01073034} #TEST; > ; > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > se",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:986,energy,energy,986,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,2,['energy'],['energy']
Energy Efficiency,"> Hmmm...the cc_index file refers to cc16 as ""UHF-B-CCD(T)"", but the input file in that test appears to execute ROHF-B-CCD(T) twice. The output.ref file, on the other hand starts with a UHF initial guess, and then switches to ROHF. Strange that it still passes. I'm not quite following that, and I'm seeing both halves of cc16 pass independently. Below is my grep from a current run (albeit with this PR implemented). Looks like UHF executed twice, consistent with your explanation above. ```; >>> grep -e ""CCENERGY"" -e ""UHF"" -e ""ROHF"" ../tests/cc16/input.out ; #! ROHF and UHF-B-CCD(T)/cc-pVDZ $^{3}B@@1$ CH2 single-point energy (fzc, MO-basis $\langle ab|cd \rangle$ ); UHF Reference; SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information).; @UHF iter SAD: -38.17324740294831 -3.81732e+01 0.00000e+00 ; @UHF iter 1: -38.90234369081286 -7.29096e-01 9.18281e-03 DIIS/ADIIS; @UHF iter 2: -38.91513874101264 -1.27951e-02 2.96594e-03 DIIS/ADIIS; @UHF iter 3: -38.91704192221893 -1.90318e-03 9.12227e-04 DIIS/ADIIS; @UHF iter 4: -38.91728769227936 -2.45770e-04 4.46390e-04 DIIS/ADIIS; @UHF iter 5: -38.91736714064817 -7.94484e-05 1.57015e-04 DIIS/ADIIS; @UHF iter 6: -38.91737800453875 -1.08639e-05 3.99078e-05 DIIS; @UHF iter 7: -38.91737866710707 -6.62568e-07 8.99030e-06 DIIS; @UHF iter 8: -38.91737869146961 -2.43625e-08 1.73779e-06 DIIS; @UHF iter 9: -38.91737869233113 -8.61519e-10 4.12144e-07 DIIS; @UHF iter 10: -38.91737869238197 -5.08393e-11 6.23767e-08 DIIS; @UHF iter 11: -38.91737869238317 -1.20082e-12 1.38186e-08 DIIS; @UHF iter 12: -38.91737869238320 -3.55271e-14 2.41469e-09 DIIS; @UHF Final Energy: -38.91737869238320; UHF NO Occupations:; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; 	Reference = UHF; * CCENERGY *; Reference wfn = UHF; Reference wfn = UHF; ROHF Reference; SCF Guess: Superposition of Atomic Densities via on-th",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708#issuecomment-1243123504:623,energy,energy,623,https://psicode.org,https://github.com/psi4/psi4/pull/2708#issuecomment-1243123504,1,['energy'],['energy']
Energy Efficiency,"> I am a bit confused what the graphs show, could you explain them a bit more?. Yes, those graphs represent the distribution of differences expected from using density screening (or density screening + incremental Fock build) compared to not using density screening at all, on the total B3LYP energy of dimers, as well as the interaction energies in the S22 set (not S22x7). Results suggest that there is no harm in using density screening.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821184039:293,energy,energy,293,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821184039,1,['energy'],['energy']
Energy Efficiency,"> I am all for moving forward with this as it blocks other PRs.; We could make an issue about MKL instabilities and keep monitoring it for now?. I agree. We know how to coerce any MKL into a correct answer. Poor cholesky-basis is exonerated and instead lauded as the coal mine canary. Time to get PRs moving again. > (CI runs on intel for now, right?). I don't think we have any guarantee of hardware brand or instruction set. Agree that should try threaded non-MKL again someday.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896#issuecomment-633708219:121,monitor,monitoring,121,https://psicode.org,https://github.com/psi4/psi4/pull/1896#issuecomment-633708219,1,['monitor'],['monitoring']
Energy Efficiency,"> I am the one one doing this kind of research in my school and my supervisor doesn't know much in this area. That is not a good position to be in, unless you are very ambitious and able to work autonomously. It is unlikely that you will find someone that would be so generous with their time, that they would schedule video calls with you and do the job of your supervisor for free.; If you are truly stuck, ask your supervisor for advice anyways. If they really cannot give you any useful advice, that should make them realize that this research direction is not a good fit for either of you and come up with something else for you to do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2184967018:310,schedul,schedule,310,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184967018,1,['schedul'],['schedule']
Energy Efficiency,> I do think we should try to get the changes into one psi4 release cycle. Regarding the deprecation message/schedule: do you mean that they should be deprecated now and then removed before 1.7 RC1?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2693#issuecomment-1256964070:109,schedul,schedule,109,https://psicode.org,https://github.com/psi4/psi4/pull/2693#issuecomment-1256964070,1,['schedul'],['schedule']
Energy Efficiency,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:127,charge,charges,127,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855,4,['charge'],['charges']
Energy Efficiency,"> I have added a test case similar to the test case for the gradient. I prefer a simpler test: test VMFC _analytic hessian_ against VMFC hessian by _finite difference of single point_. I don't see a need for this test to test against its own implementation of the VMFC energy formula. That's a job for a different test. Including it in this one obscures the point of the test. > The `_sum_cluster_ptype_data` function is supposed to construct the total cluster gradient or Hessian from the fragment computations. Documentation is beyond the scope of this trivial PR. I disagree. It is _always_ within the scope of the PR to get the documentation to such a state that the problem the PR solves is intelligible. I am not asking you to document the entire nbody module. I am asking you to document the expected behavior of the function whose behavior you are changing - that is perfectly in-scope. `Sums gradient and hessian data from compute_list.` is a poor docstring. ""data"" could mean anything, and sums them to get what? ""Sum gradients/hessians from n-body computations to obtain the BSSE corrected gradient/hessian"" is much clearer. If that much isn't clear, then the purpose of this PR is not clear.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2389#issuecomment-1003785509:269,energy,energy,269,https://psicode.org,https://github.com/psi4/psi4/pull/2389#issuecomment-1003785509,2,['energy'],['energy']
Energy Efficiency,"> I honestly don't recognize what you're trying to contribute. Are you proposing a course of action? Are you listing potentially relevant considerations for a more robust solution? Are you trying to say that ""algorithms that are both more robust and harder to implement exist""?. I was trying to bounce some ideas off the community, in the hope that it would ultimately lead to a better solution. To some extent that included all three of the above. I am sorry if that was frustrating, will try to clarify. In my first post:; 1. I proposed an alternative algorithm, which I guess is a course of action.; 2. I highlighted two potential problems with my alternative algorithm.; 3. I suggested that looking for existing algorithms in the literature may lead to something better than any of the proposals here, mine included. In my second post:; 1. I interpreted your response as ""SCF instability literature is unlikely to have anything better"". So I tried to clarify that I meant that the broader literature might contain useful ideas, not just SCF instability literature, but also the geometry optimization literature and possibly even the machine learning literature.; 2. I suggested a particular paper and algorithm, which claims to be able to minimize functions effectively, while avoiding saddle points. This is the ""both more robust and harder to implement"" part. The idea that I should have explicitly written out, is that if it could be implemented as an SOSCF method, it may greatly reduce the chances of getting an unstable solution in the first place, which would make having smart SCF instability following less important.; 3. I was trying to explain what thought process has lead me to believe that using the predicted/actual SCF energy may be a good idea for checking the quality of the Taylor expansion. I hope no offense was caused.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045#issuecomment-1707160470:1488,reduce,reduce,1488,https://psicode.org,https://github.com/psi4/psi4/issues/3045#issuecomment-1707160470,4,"['energy', 'reduce']","['energy', 'reduce']"
Energy Efficiency,"> I kinda thought you solved all the the DFOCC convergence issues recently, at great effort. OCC convergence issues, not DFOCC convergence issues. The same trick should solve the convergence issues in DFOCC, but DFOCC is a much more difficult module to work with, so I'm avoiding fixing things there unless absolutely necessary for my research. > Unfortunately, open-shell Brueckner or OO coupled cluster does not seem to be a common feature in QC programs, so I am trying to survey which programs have open-shell capable OO methods. Also, a performant OMP2 or OMP2.5 implementation could potentially be useful for us, even if it does not directly solve the lack of an RBCCD(T) implementation. I don't know if your Robosurfer can use this, but depending on your orbital-optimized method, once you have the energy, the gradient is free. All the orbital-optimized methods in Psi have this property. > o_O No, in fact I would have completely missed that! I checked the method table [here](http://www.psicode.org/psi4manual/master/notes_c.html#alternate-implementations) and thought Psi4 cannot do BCCD(T) at all. Perhaps BCCD and BCCD(T) could be added as methods to that docpage?. That page is for methods that _multiple modules_ support, so you can straighten out which module you want given your specific use for a method. That said, is there a place in the manual where we list all the methods we have? I genuinely don't think so. We should add it, if there isn't one. If you want to see all the energy keywords that Psi recognizes, you can find it in the code [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L41). I'd be remiss if I didn't point out that the `dct` module _also_ has some orbital optimized methods. The best one is the default upon entering `energy(dct)`, ODC-12. Use of the others is not recommended for _any_ purpose other than benchmarking. We also have density-fitting for ODC-12. I'll warn you that there is some slight error in the DF grad",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450:806,energy,energy,806,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450,1,['energy'],['energy']
Energy Efficiency,"> I may not be following this right. I'd say the state of the psi4 active mol during an optimization is arbitrary -- whatever works for you. In cpp-optking, I think the communication was through legacymolecule anyways. The molecule optking is acting on should be updated by the time control returns to the user at the end of the opt. I thought this was already happening through https://github.com/psi4/psi4/pull/2727/files#diff-acf663ccea13592c4c656cf89c7b62e6f5bd3b2e8b4f12ba354129bd39d096f8R1296-R1297 . That's consistent with cpp-optking, and I think that must be happening b/c many of the tests check NRE before and after opt. I want to make sure that the active molecule behavior is as expected. Whatever molecule the driver uses will be updated. This will be either the active molecule OR the passed molecule. If the molecule is passed the active molecule is not updated in any way. All the asserts pass here. ```python; import math. molecule h2o {; pubchem:water; }. molecule h2o2 {; pubchem:hydrogen peroxide; }. # quick comparison. h2o2 is active molecule; h2o2_nre = h2o2.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_nre, active_nre). # optimize h2o2 (active molecule) expect repulsion energy to match; E = optimize(""scf/sto-3g""); h2o2_opt_nre = h2o2.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_opt_nre, active_nre). # optimize h2o. nuclear repulsion does not match. active molecule is still h2o2; # Currently (next commit will fix) h2o2 would be optimized by this call. (optking side issue); E = optimize(""scf/sto-3g"", molecule=h2o); h2o_opt_nre = h2o.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_opt_nre, active_nre); ```; The whole wrong molecule being optimized thing is an optking side issue that is fixed on optking/master.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262796555:1273,energy,energy,1273,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262796555,1,['energy'],['energy']
Energy Efficiency,"> I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). . Done! Everything you suggested seems to check out as expected/desired. >And if you ask for a snlink gradient, it does something sensible? Thanks. From a quick test case, it looks like it uses `SNLINK` for the SCF energy, then switches to another JK build algorithm for the gradient scheme (I observed `DFJKGrad`). I suppose the question is whether this is reasonable or not. I don't consider this necessarily _unreasonable_ since composite JK builds algorithms can have specialized implementations for gradient calculations (e.g. COSX), but that's just my thoughts.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793:407,energy,energy,407,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2175947793,1,['energy'],['energy']
Energy Efficiency,"> I recall that the restriction arises from an assumption I made about; > storage requirements. I think I was assuming that o^4 and o^3v arrays could; > be stored in a block of memory the size of t2, but I can’t be sure without; > looking through the code a bit. I’m not sure how difficult it would be to; > remove this restriction, but I will look into it.; >; >; > > On Oct 25, 2017, at 3:44 PM, David Sherrill <notifications@github.com>; > wrote:; > >; > > Well, yes, he relative sizes would effect efficiency of contraction; > order,; > > but I don't see why they would make the code not working at all... I; > > suppose this restriction is in there somewhere but I don't see why.; > >; > > On Oct 25, 2017 3:40 PM, ""Susi Lehtola"" <notifications@github.com>; > wrote:; > >; > > @CDSherrill <https://github.com/cdsherrill> @edeprince3; > > <https://github.com/edeprince3> could it be that that nvirt > ndocc is; > an; > > assumption that's made in the contraction order? If nvirt < ndocc then it; > > might be more efficient to contract first over the occupied orbitals?; > >; > > —; > > You are receiving this because you were mentioned.; > >; > > Reply to this email directly, view it on GitHub; > > <https://github.com/psi4/psi4/issues/828#issuecomment-339447402>, or; > mute; > > the thread; > > <https://github.com/notifications/unsubscribe-; > auth/AC9Qdui004ARGwSkbS7HK_Zd_43SDnHZks5sv466gaJpZM4QGSFE>; > > .; > > —; > > You are receiving this because you were mentioned.; > > Reply to this email directly, view it on GitHub <; > https://github.com/psi4/psi4/issues/828#issuecomment-339448378>, or mute; > the thread <https://github.com/notifications/unsubscribe-; > auth/AClSGmYfMcECV7ZQzR0tDtg_pRqgv-OTks5sv4-MgaJpZM4QGSFE>.; > >; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/828#issuecomment-339458114>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339460309:1165,efficient,efficient,1165,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339460309,1,['efficient'],['efficient']
Energy Efficiency,"> I think I favor REMP to REMP2 in QCVariables, just to be specific. Hmm, that means the the calls change also to e.g., `energy(""oremp2"")`. That's consistent with `energy(""mp2"")`, so fine by me. But others can weigh in before I start a grand search-and-replace.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2633#issuecomment-1200063040:121,energy,energy,121,https://psicode.org,https://github.com/psi4/psi4/pull/2633#issuecomment-1200063040,2,['energy'],['energy']
Energy Efficiency,"> I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. Yes, there's some graphs to prove it I should dig up. Thanks for reading the printouts -- I glanced at the logic but not the warnings. Now memory and algorithm are printed with ""high-memory""/""low-memory"" labels and without efficiency judgements.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537:44,adapt,adapted,44,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537,1,['adapt'],['adapted']
Energy Efficiency,"> I wonder if it's the syntax qc_module=""ccenergy"" is confusing since that's the name of the CC energy code, but it's signaling to compute gradients analytically. I'm not sure what I'd prefer, but I don't think this will be obvious to most users. I agree there's not a great name for the cc suite. Only alternative I've seen is `cc*`. `cc` alone seems too generic. It looks like the `qc_module=ccenergy` came about for this role between beta5 and v1.0: https://github.com/psi4/psi4archive/blob/1.0.x/src/bin/psi4/read_options.cc#L165-L168 . So it's longstanding, though probably little used. If you think of a preferred alias, it'd be easy enough to re-route, I suspect.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2943#issuecomment-1533160060:96,energy,energy,96,https://psicode.org,https://github.com/psi4/psi4/pull/2943#issuecomment-1533160060,1,['energy'],['energy']
Energy Efficiency,"> I would keep the ""COSX"" for recognition. That's a good point; ""COSX"" is a fairly well-known algorithm. For consistency throughout the psi4's `libfock` library, I think it would be good to call it ""COSK"" over ""COSX""; all reference to the exchange matrix use the variable ""K"". > This PR implements 2 grids instead of 3? That Turbomole team showed it worked well, just asking. Yes, the SCF is first converged on a small grid (specified by `COSK_RADIAL_POINTS` and `COSK_SPHERICAL_POINTS`). Afterwards, a single iteration is performed on a larger grid (specified by `COSK_RADIAL_POINTS_FINAL` and `COSK_SPHERICAL_POINTS_FINAL`). A good future mini-optimization would be to add a third medium grid, which would be used to converge the SCF after the small grid but before the final grid evaluation. > I am in general for a simple way of setting quadrature grids, psi4-specific named grids. That is a bigger project though. Here it would be enough to have an efficient default and in the manual a suggestion how to make a tight/accurate one. After we gain experience with the psi4 COSX we can make a couple useful defaults. I agree, it would be nice to have named quadrature grids. For now, I'll update the manual with some recommended spherical/radial point values.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567#issuecomment-1116516160:954,efficient,efficient,954,https://psicode.org,https://github.com/psi4/psi4/pull/2567#issuecomment-1116516160,2,['efficient'],['efficient']
Energy Efficiency,"> I'm able to confirm the report and also simplify the example. (We appreciate the report. We also appreciate examples that are as simple as possible.); > ; > ```; > ### Setup; > ; > molecule dimer {; > He; > X 1 R ; > He 2 1.0 1 180 ; > }; > ; > set basis 6-31G(d); > ; > Rvals = [1.4, 1.5]; > ; > ### Compute; > ecp = {}; > for R in Rvals:; > dimer.R = R ; > ecp[R] = energy(""mp2""); > ; > ### Printout; > psi4.print_out(""\n""); > psi4.print_out("" R [Ang] E_int [kcal/mol] \n""); > psi4.print_out(""-----------------------------------------------------\n""); > ; > for R in Rvals:; > psi4.print_out("" %3.1f %10.6f\n"" % (R, ecp[R])); > ```; > ; > The position of atoms defined relative to a dummy atom in a Z-matrix aren't getting updated, it seems. @loriab. Thank you for the confirmation. We are undertaking a couple of force field optimization project which will require 30K or more energy surface scan using PSI4. We would highly appreciate if this issue could be solved soon. Thank you.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2880#issuecomment-1440673966:370,energy,energy,370,https://psicode.org,https://github.com/psi4/psi4/issues/2880#issuecomment-1440673966,4,['energy'],['energy']
Energy Efficiency,"> I'm in favor of deprecating Da and Db for anything other than internal SCF use and creating a new wavefunction member to store all the densities, with proper labeling. This will of course be a lot of code refactoring, but that is quite literally the entire point of me doing all this cc PRs. And of course, somebody will need to tell dfocc about this API change. 🙂. Thanks for the enumeration of the organizational state of all the densities. The new Wfn member for finalized, labeled densities sounds good to me. Are the ES CC densities ready for that state yet, or are they still in preparation? For any that are still in preparation but still in need of saving, I guess I propose a temporary member of Wfn that is marked as having a finite lifetime. Same as Wfn.arrays, just not Wfn.arrays :-) Ben's already nervous about storing the per-atom charges that end up in qcvars, so I'm just not in favor of densities there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2541#issuecomment-1094491672:848,charge,charges,848,https://psicode.org,https://github.com/psi4/psi4/pull/2541#issuecomment-1094491672,1,['charge'],['charges']
Energy Efficiency,"> I'm not sure how often `oeprop` really gets called directly in an input. There's a very good reason to call `oeprop` directly, thanks to Psi4Numpy: I'm prototyping an electronic structure method, I have its OPDM, and I want to get some properties from it. That said, the reason for calling `oeprop` in this case is much simpler. There's a section in the manual titled ""Evaluation of One-Electron Properties — oeprop()"", so a user who wanted to evaluate one-electron properties used `oeprop`. > the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals?. CCSD energy calls don't solved lambda equations. I would _hope_ that there is no density on the CCSD wavefunction, but I haven't checked. Still, I'm agreed with your bigger point: properties using built-in Psi methods should just go through `properties`. In my view, manual `oeprop` calls should be the province of people who custom-set the density, and it would be good for us to put in a warning to encourage this. I don't have strong feeling on what this distinction means for `psivars`. I think that's for Lori to weigh in on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979:599,energy,energy,599,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979,4,['energy'],['energy']
Energy Efficiency,"> I've lost your `D_CONVERGENCE` comment, so answering here. Looks like expanding the functions that classify to SCF [here](https://github.com/psi4/psi4/blob/master/psi4/driver/driver_util.py#L96) will get the right 1.e-6 value. Thanks for the pointer. Now fixed with the following contraption:; ```python; if (procedures['energy'][method_name] == proc.run_scf; or procedures['energy'][method_name] == proc.run_tdscf_energy):; ```; so that TDSCF closely follows SCF. Probably there's a better way?. I'm also slightly puzzled at the following. TDSCF will fail to converge for non totally symmetric roots when running with symmetry _and_ density-fitting (which is by and large the default behavior for small-ish molecules, I believe) I thought this was a fluke for one particular system I was testing, but it does indeed show up consistently for irrep >= 1. The solver will either stall and die exceeding the maximum number of iterations (the subspace never grows after a certain, early iteration) or it will (falsely, I believe) identify a negative eigenvalue in the subspace representation of the Hessian (instability) and consequently fail.; Is there something in JK that I am misusing? @andysim @dgasmith",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644666491:323,energy,energy,323,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644666491,2,['energy'],['energy']
Energy Efficiency,"> Iirc, @andysim said that the old libmints solidharmonics.cc code is outdated anyways, and the Helgaker recursions are better. Feel free to comment Andy. Both codes use regular solid harmonics with the exact same normalization (assuming that your Helgaker recursions match that code that I sent to you a while ago, Andy). The code in libmints is stuff that was taken from MPQC, but becomes painfully slow around L=9 or so. We had to reduce the default maximum L a while ago because it was dramatically slowing the Psi4 startup time. So I think that, if it turns out not to be a huge task, replacing the libmints code with smarter recursions is probably not a bad idea. Failing that, the Helgaker version is not really introducing any redundancy because the libmints version won't be able to support high enough a.m. efficiently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2665#issuecomment-1209572192:434,reduce,reduce,434,https://psicode.org,https://github.com/psi4/psi4/pull/2665#issuecomment-1209572192,2,"['efficient', 'reduce']","['efficiently', 'reduce']"
Energy Efficiency,"> In any case, in the conf call yesterday, we pledged to reform and have ghosted mean ghosted, charge mean effective nuclear charge and Z mean atomic number (or something similarly sane). Super, I'm keen to help when that comes around. As for this one, merge away.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1109#issuecomment-410002151:95,charge,charge,95,https://psicode.org,https://github.com/psi4/psi4/pull/1109#issuecomment-410002151,2,['charge'],['charge']
Energy Efficiency,"> Incidentally, why don't we just apply set_ghosted to each coordentry that's actually ghosted, instead of messing with Z and charge in Molecule::create_molecule_from_string?. Good question. Partly expedience wrt ECP. Partly my uneven approach to libmints Molecule through the years (sacrosanct, change!, sacrosanct, change!). In any case, in the conf call yesterday, we pledged to reform and have ghosted mean ghosted, charge mean effective nuclear charge and Z mean atomic number (or something similarly sane). I think that'll happen in a separate pass, though. I'm good with this PR fixing the immediate known issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1109#issuecomment-409945859:126,charge,charge,126,https://psicode.org,https://github.com/psi4/psi4/pull/1109#issuecomment-409945859,3,['charge'],['charge']
Energy Efficiency,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:668,energy,energy,668,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961,3,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"> Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated. I think it'd be most useful to continue scf5 as a regression test. That is, record new refs for the in-between-conv-and-df algorithms collected at tight convergences, then check them against usual 6 decimal places. Then we'll know in future if code changes affect the algorithms. How are you generating the `samples/` files? If it's any other way than autogenerated via the docs build, please don't go to the trouble. We can catch the changes en masse before release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1309119956:269,energy,energy,269,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1309119956,4,['energy'],['energy']
Energy Efficiency,"> Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Is there any potential harm to this when VV10 is done self consistently?; Only issue I see is breaking old user or p4numpy scripts that rely on the energy being summed up. Is this PR a 1.4 target? If not, could we put a warning or similar in place somewhere that it is subject to change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-802058786:39,ENERGY,ENERGY,39,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802058786,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"> Just out of interest, can the power or R used in the Thole damping exponential be changed?. I guess anything could in principle be customized... (probably not in the current version) 😄 Anything specific you have in mind?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1922#issuecomment-641532970:32,power,power,32,https://psicode.org,https://github.com/psi4/psi4/pull/1922#issuecomment-641532970,1,['power'],['power']
Energy Efficiency,"> Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?. Yes sir that is right :) The point of the plots is to show that the errors are irrelavent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641:54,energy,energy,54,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641,2,['energy'],['energy']
Energy Efficiency,"> Looks like I'm still failing the Cholesky convergence test after a rebase. Well, you're not hitting the same error. This one is down the sequence at 1e-10, not 1e-7. And always by about same amt. . ``` Energy with Cholesky 1e-10: computed value (-230.6415254219) does not !; ! match (-230.6415254333) to atol=1e-08 by difference (0.0000000114).; ```. I wonder if this is associated with the new 2020.1 mkl set that's ~9 days old.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1895#issuecomment-632118171:204,Energy,Energy,204,https://psicode.org,https://github.com/psi4/psi4/pull/1895#issuecomment-632118171,1,['Energy'],['Energy']
Energy Efficiency,"> Now I also get it :); > ; > Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option.; > ; > The incremental Fock build can be compared against a standard build. They have to agree.; > Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement. This is already done, as I turn off incremental Fock build after the density drops below 1.0e-5, to reduce the differences, though I could make this a user option. :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821204441:641,reduce,reduce,641,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821204441,1,['reduce'],['reduce']
Energy Efficiency,> ORCA kindly provides a table with their definitions: https://sites.google.com/site/orcainputlibrary/frozen-core-calculations. We could possible adapt it after checking it out. That site also states; > An automatic frozencore checker was also implemented that reorders orbitals for situations where the assigned molecular frozen core (based on counting core orbitals) is wrong because valence orbitals on light atoms happen to be lower in energy than the core orbitals of heavy atoms.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2343#issuecomment-961190042:146,adapt,adapt,146,https://psicode.org,https://github.com/psi4/psi4/issues/2343#issuecomment-961190042,2,"['adapt', 'energy']","['adapt', 'energy']"
Energy Efficiency,"> Please explain the bug in more detail. Is the expected behavior that Psi reports some jobs in the plan can't run? If the expected behavior is that you get a number, why are any PsiExceptions appearing in the plan?. Good point. The new driver_util tech separates figuring out what derivative psi can do analytically under the specified conditions from what derivative requested or demanded by user. So those error strings you see in `analytic` are just being stored _in case_ user demanded analytic gradient. In the given case, energy was requested and the error strings were never used. If the user wanted gradient, calc would fall back to findif by E and the error strings wouldn't be used. If the user wanted gradient and also gave `dertype=1` for analytic, the error string pops up. For the last case, this needs to be improved in future to show the user _all_ the errors, not just the first (mp2) one. But that's more than a couple-line fix, so not suitable for backport.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2590#issuecomment-1145418829:529,energy,energy,529,https://psicode.org,https://github.com/psi4/psi4/pull/2590#issuecomment-1145418829,1,['energy'],['energy']
Energy Efficiency,"> Simplified test case; > ; > ```; > molecule dimer {; > 0 1; > Ne 0.0 0.0 0.0; > --; > 0 1; > Xe 0.0 0.0 3.0; > }; > ; > set {; > basis def2-svp; > print 2; > }; > ; > set guess core; > Eall = energy('scf'); > ```. I tried this with 1.6, including `ecpint`. _With_ ADIIS on, we are able to find the correct minimum readily. _Without_ ADIIS on, we see oscillatory convergenceat -316 E_h, well above the -457 E_h. ```; molecule LiF {; 1 1; Li 0.000000000 0.000000000 0.000000000; --; -1 1; F 16.000000000 0.000000000 0.000000000; }; set basis cc-pVDZ; set df_scf_guess false; set scf_type direct. energy('scf'); ```. This fails, per Susi's earlier report, with 1.6 and ADIIS off. With ADIIS on, we observe frequent occupation flips, but also no convergence. Tragically, I'm still unconvinced that the ECPs are in good shape.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433#issuecomment-1133523511:194,energy,energy,194,https://psicode.org,https://github.com/psi4/psi4/issues/1433#issuecomment-1133523511,2,['energy'],['energy']
Energy Efficiency,"> So far I think this looks great - type safe python with a lot of testing, and a great modular design for the solvers. . All AJ's work!. > I really like the line broadening plot generation. . Thanks, it took me an embarrassingly long amount of time to check that units of measure all made sense... > If there's some kind of provenance info that can be added to the json reference data file that would be handy. I have the raw G09 input and output files, together with the notebook that extracts the data from the formatted checkpoint files. Should I include that in the `pytests` folder?. @loriab I'm seeing some funny behavior (or most likely I don't understand what the normal behavior actually is); ```; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; }. set {; tdscf_states 10; scf_type pk; }. energy('td-scf/cc-pvdz'); ```; I'd expect this to converge the wavefunction to `D_CONVERGENCE` 1e-6 and then compute the 10 states to `TDSCF_R_CONVERGENCE` 1e-4 The thresholds seems however to be 1e-8 (and 1e-6) respectively. I can't figure out where `D_CONVERGENCE` gets tightened from what stated in the [table](http://psicode.org/psi4manual/master/scf.html#convergence-and-algorithm-defaults)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644236820:894,energy,energy,894,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644236820,1,['energy'],['energy']
Energy Efficiency,"> Sorry to keep making you write, but is the ""big picture"" view of nbody documented anywhere? I can't follow what energy_body_dict means, or why the value of one of its entries is coupled to whether the total energy is available. > I fear this is a case where there is a lot of ""developer was only coding to be comprehensible to themselves"" code debt. I confess to being lost in nbody, too. And some of the psivars set aren't as descriptive as I'd like (e.g., `2CP`. However, any changes to nbody make DDD especially painful to rebase. And I think a good time to rationalize and document the pieces are when we take the nbody communication dictionary DDD uses and formulate/propose a proper schema. I guess I'm ok leaving it inscrutable (and without binding contracts :-) until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2221#issuecomment-871799597:209,energy,energy,209,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871799597,1,['energy'],['energy']
Energy Efficiency,"> Thanks for the feedback @loriab! I don't think that either a charged molecule or a presence of external potential mean that new ISAPT is a no-go (just the printed dipole moments will be origin-dependent, which is no big deal). We just haven't tested such cases yet. Let me think of a good ionic system to try out. I don't have any particular concerns -- I just noticed your paper was on neutrals and the PR intro mentioned ""Not tested with external potentials."".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2899#issuecomment-1522632182:63,charge,charged,63,https://psicode.org,https://github.com/psi4/psi4/pull/2899#issuecomment-1522632182,2,['charge'],['charged']
Energy Efficiency,"> Thanks, the basis set name makes sense. I will start naming my basis sets, but would it be possible to use a deterministic name for basis sets instead of a random one?. This feels like a @loriab question. > The `gradient` method does not use the `restart_file` keyword. I tried it, and it defaulted to the SAD guess. the SCF took 13 iterations to converge for the molecule in the original input file. As far as I can tell, only `energy` will utilize the guess from the restart file. I suppose I could call `energy(..., restart_file=X)`, then use `set guess read`, and then call `gradient`. That feels like more juggling than should be necessary. If `energy` takes this, then `gradient`, `frequencies`, and `properties`, etc. _should_ as well. We (meaning @loriab) are currently refactoring the above functions, to better support for embarrassingly parallel computations. I recommend that we wait until _after_ that refactoring to make the necessary changes here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2571#issuecomment-1121447923:431,energy,energy,431,https://psicode.org,https://github.com/psi4/psi4/issues/2571#issuecomment-1121447923,3,['energy'],['energy']
Energy Efficiency,"> The atom vs shell loop structure is an open question of the PR:; > ; > > My algorithm is slightly modified from the Oschenfeld version since we perform our DirectJK algorithm in atom-task pairs instead of shell pairs, in order to preserve the old DirectJK loop. Is that a bad idea?; > ; > What is the effort of changing the loop structure and what would be the gain? A small-ish efficiency loss is IMO acceptable if the effort is large. I missed that, thanks. I don't have the experience to give efficiency estimates, and it also isn't clear to me what the reason for keeping the old loop structure is. Is the question ""is atom task vs shell pair"" more efficient, or ""is shell pair so much more efficient that it's worth doing some intensive refactoring to use shell pair""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-992575381:655,efficient,efficient,655,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-992575381,4,['efficient'],['efficient']
Energy Efficiency,"> The code looks anodyne, but I would appreciate information about how this fixes #2272. From my understanding, #2272 is that when QCEngine tasks Psi with computing MBIS charges, Psi (a) would try to compute atom volumes but (b) would not have set some necessary variables. I would like to understand why the call coming from QCEngine rather than a Psi input file means we get both (a) and (b) and how this PR disrupts that mechanism. * pre-MBIS-volume-capability behavior: requesting the mbis_charges property through `set scf_properties [""mbis_chargs""]; energy()` route _or_ `energy(); oeprop(..., ""mbis_charges"")` route called the ""mbis"" fns in oeprop.cc which were self-contained like all the other oeprop fns. This is the behavior that #2272 used (former route in particular) and want to use again.; * current / post-MBIS-volume-capability behavior: the ""mbis"" fns in oeprop.cc now compute two properties -- the original self-contained charges and the volume ratios that need atom volumes for each atom, info that's pre-computed (from energy() calcs) on orders from a line in oeprop() fn. So only the latter route works, and the former route fails for lack of atom volumes. All well and good if you want mbis volumes but a regression if you only care about mbis charges.; * this PR behavior: there are now two oeprop properties and ""mbis"" fns in oeprop.cc -- one for charges and one for volume ratios. so ""mbis_charges"" works with both routes (healing 2272), and ""mbis_volume_ratios"" still works only for the latter route (behavior unchanged, except you don't get volumes for free when request charges).; * future after #2299 addressed: mbis volumes will work with both routes. Is this any clearer? It isn't the QCEngine involvement that causes trouble -- it's the breakdown in consistency btwn the two calling routes. And if you try the straightforward way of making them consistent (compute free atom volumes in scf_helper fn like the oeprop fn does), you fall into recursion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2273#issuecomment-926677567:170,charge,charges,170,https://psicode.org,https://github.com/psi4/psi4/pull/2273#issuecomment-926677567,16,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"> The contraption you show above could also be written as `if procedures['energy'][method_name] in [proc.run_scf, proc.run_tdscf_energy]:`. . Yep, much cleaner syntax. > Regarding the nirrep>1 problem, it sounds like the backtransformation is either not numerically sound or is not being applied correctly. I didn't see anything wrong in the first pass through but I'll look again. The (probably faulty) code should be in `twoel_Hx` (and deeper) which was not touched in this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644794380:74,energy,energy,74,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644794380,1,['energy'],['energy']
Energy Efficiency,"> The conversion to traceless form can be done for any order of multipole, but I'm not really sure it's got a use case at this point. Quadrupoles in traceless form can be useful for force field definitions. Our CFMM code uses very high orders of multipoles, but they're converted to spherical harmonics to work with all the efficient machinery we've developed so that doesn't need the traceless definition. Max and I have traded Slack messages, and we're agreed on adding traceless quadrupoles so those still exist, but not to bother with the other multipoles for the time being. I'll add that to the PR hopefully today. I've been too busy fixing `ambit` to respond to PR feedback here at my usual pace.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2485#issuecomment-1075186676:324,efficient,efficient,324,https://psicode.org,https://github.com/psi4/psi4/pull/2485#issuecomment-1075186676,2,['efficient'],['efficient']
Energy Efficiency,"> The energy is not a smooth function of the distance, however all the calculations have converged SCF. Complete input script which takes a few minutes to run is attached as well as output. There are more examples. Am I missing something in checking for convergence? . Sort of. There is no guarantee that an SCF solution for a particular geometry is unique. The SCF iterations may converge to an ustable HF solution, you can check for this by running the stability analysis. But even if you find a stable HF solution, it is usually impossible to prove that you have found the global minimum. If you are using UHF, you may also want to look into the various forms of symmetry breaking, it is possible that you actually do not want the global minimum UHF solution if it is too spin-symmetry-broken. But if you _are_ looking to find the global minimum for every point of your scan, you are going to have to employ some sort of nonlinear global optimization strategy, the simplest of which is to try a bunch of guesses for every point and use the lowest solution found.; You may get some ideas you could adapt to Psi4 from [this paper of mine.](https://doi.org/10.1063/5.0080817)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2901#issuecomment-1473846718:6,energy,energy,6,https://psicode.org,https://github.com/psi4/psi4/issues/2901#issuecomment-1473846718,4,"['adapt', 'energy']","['adapt', 'energy']"
Energy Efficiency,"> The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. With psi4 1.9.1 from conda I get -43.40752609176465 for H2C-C5-CH2 and -42.04595200805039 for heptatriyne. My numbers are oddly different from yours, but they do show a difference of 854 kcal/mol.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665:6,energy,energy,6,https://psicode.org,https://github.com/psi4/psi4/issues/3221#issuecomment-2407578665,3,['energy'],['energy']
Energy Efficiency,"> The energy should be approximately -1965.2319, but will instead give something like -1963.3023. How do you know the correct energy? Have you run the calculation with a completely independent implementation?. I think there might also be a difference in libxc between Psi4 1.3.2 and 1.4.0: range separated hybrids were basically fully rewritten in libxc 5.1.0, and should now be correct. addendum: of course if the calculations match in small basis sets, it can't be a libxc issue",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-900697059:6,energy,energy,6,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-900697059,2,['energy'],['energy']
Energy Efficiency,"> The first SAD energy gives you a general feeling of how well SAD is doing. We do mark this as ""Iteration 0"", but we could bump up the documentation level there. Either way very much not in favor of removing it wholesale. Right, but it's still a RHF/RKS energy, and for e.g. ROHF it just gives total nonsense. I'll have a look if there's a way to fix the initial energy evaluation so that the guess outputs the same energy regardless of the reference, and also put in @loriab's suggestion to mark the iteration with ```!```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1493#issuecomment-457487462:16,energy,energy,16,https://psicode.org,https://github.com/psi4/psi4/pull/1493#issuecomment-457487462,4,['energy'],['energy']
Energy Efficiency,"> The other major issue is the docs. I'll need to update the section describing excite state psivars, but @loriab, how do you feel about grouping psivars together? See discussion https://github.com/psi4/psi4/pull/2462#discussion_r822344906. I'd still strongly favor something like the below. It lets the variables (n,m,h,i) be defined in the definition, and new methods can join existing psivar entries. Also just less visual clutter when all but the methods line up. What do you think?. ```; .. psivar:: ADC ROOT n TOTAL ENERGY; TDDFT ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY; CCSD ROOT n TOTAL ENERGY; ... def incl n. .. psivar:: TDDFT ROOT n (h) -> ROOT m (i) OSCILLATOR ENERGY; CCSD ROOT n (h) -> ROOT m (i) OSCILLATOR ENERGY. def incl n, m, h, i; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2569#issuecomment-1129510593:522,ENERGY,ENERGY,522,https://psicode.org,https://github.com/psi4/psi4/pull/2569#issuecomment-1129510593,6,['ENERGY'],['ENERGY']
Energy Efficiency,"> The three new(ish) beyond-S^2 corrections, E(20)exch-ind, E(20)exch-disp, and E(30)exch-ind cannot be currently calculated by a single SAPT call: the first two require energy('sapt(dft)') and the last one energy('sapt2+3'). That's quite unfortunate and we need a better workflow, possibly by making the non-S^2 E(20)exch-ind,resp and E(20)exch-disp available as part of energy('sapt0'). This is the topic that probably needs most discussion between @konpat and @CDSherrill, particularly as sapt-dft is now involved. Agreed that split ""non-s^2"" is an unsatisfactory state of affairs. perhaps psicon?. > What should go into aggregate SAPT energy values, S^2 or non-S^2? I made the code pick the non-S^2 value of E(30)exch-ind,resp if available, but I'd be happy to revert it back to picking E(30)exch-ind,resp(S^2). At present, I don't think the non-S^2 values of E(20)exch-ind,resp and E(20)exch-disp are ever included in total SAPT numbers, maybe they should?. I think we've accumulated enough changes for another adjustment to psi's SAPT definitions -- 3 non-S^2 for S^2 terms and evening up the fit basis sets btwn Ed/Rob so that sapt0 is exactly the same from both. > Finally, the option names such as do_ind30_exch_sinf are somewhat unfortunate because they propagate the misconception that you include effects all the way to S^infinity. In reality, the largest power of overlap integral S you ever need is min(NelA,NelB) - after that, you run out of electrons to exchange between A and B. Nonapproximated, Nonexpanded, and beyond-S^2 are all formally more correct names than S^infinity. I'm mostly concerned with the qcvars that need terse names. And it looks like only pure-exch vars have been given S^2 designations https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/driver/qcdb/psivardefs.py . So we'd need some existing vars to turn into two flavors `SAPT EXCH-IND30,R ENERGY` --> `SAPT EXCH-IND30,R(S^2) ENERGY` and `SAPT EXCH-IND30,R(!S^2) ENERGY`, perhaps? W",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2314#issuecomment-938713375:170,energy,energy,170,https://psicode.org,https://github.com/psi4/psi4/pull/2314#issuecomment-938713375,4,['energy'],['energy']
Energy Efficiency,"> This is really cool to see and looks very good overall. Can you describe the testing process in more details and what you are comparing to to ensure the overall implementation is correct?. So in general, we have so far tested for total interaction energy against CCSD(T)/CBS benchmark on S22, and separate SAPT terms against SAPT(CCSD) results provided by Korona, Mol. Phys. 111, 3705(2013). We are planning to add S66 and SSI into the tests, but we would use SAPT2+3(CCD)δMP2 as the benchmark for individual terms.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1865#issuecomment-662022217:250,energy,energy,250,https://psicode.org,https://github.com/psi4/psi4/pull/1865#issuecomment-662022217,1,['energy'],['energy']
Energy Efficiency,"> This lgtm after some whitespace tidying for clarity. Would it be useful to add a check to existing tests of each of the JK classes that can use incfock along the lines of `compare(1, variable(""SCF ITERATIONS"") < 15.0, ""incfock efficient"")`?. Thanks; whitespace issues cleaned up!. Regarding the test you suggest, I do think that is a good idea. In principle, if we wanted to measure IncFock efficiency in a test, it might be better measured using a difference in SCF iteration counts between IncFock and corresponding non-IncFock runs, rather than using a raw SCF iteration count for the IncFock run. But none of the tests, as far as I am aware, have both IncFock and non-IncFock runs for the same SCF method executed simultaneously. Your suggested method works with the current tests, and it should still work quite well for testing IncFock efficiency since it will catch any cases where IncFock causes serious convergence issues. I will implement it!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792#issuecomment-1329336404:229,efficient,efficient,229,https://psicode.org,https://github.com/psi4/psi4/pull/2792#issuecomment-1329336404,1,['efficient'],['efficient']
Energy Efficiency,"> Unless your molecule has a couple hundred atoms, that does sound slow. The molecule is big, but not that big -- about 50 atoms (mostly C and H). . > You're setting PSI_SCRATCH to a local disk, not a network disk?. I started running on a remote machine, and even though I have `PSI_SCRATCH` set on my local machine, I don't have it set on the remote machine (probably didn't re-source `~/.bashrc` after installing `psi4`. However, it should be writing to local disks. I can see `psi...clean` files in the local directory, are those scratch files?. > Go ahead and run this to make sure you're getting threading. Based on the script you sent, it does appear that threading is working (see below), however, I have noticed that during my geometry optimization and single point energy that most of the time `psi4` is running with a single thread according to `top`. I ran `psi4` using `psi4 input -o output -n 12`, is that correct?. ```; Threads set to 1 by Python driver.; Time for threads 1, size 200: Psi4: 0.000708 NumPy: 0.000670; Time for threads 1, size 500: Psi4: 0.009402 NumPy: 0.009941; Time for threads 1, size 2000: Psi4: 1.583517 NumPy: 0.586573; Time for threads 1, size 4000: Psi4: 4.562361 NumPy: 4.587518; Threads set to 6 by Python driver.; Time for threads 6, size 200: Psi4: 0.000143 NumPy: 0.000212; Time for threads 6, size 500: Psi4: 0.001804 NumPy: 0.002355; Time for threads 6, size 2000: Psi4: 0.105539 NumPy: 0.108854; Time for threads 6, size 4000: Psi4: 0.839776 NumPy: 0.858277; NumPy@n6 : Psi4@n6 ratio (want ~1): 1.02; Psi4@n1 : Psi4@n6 ratio (want ~6): 5.43; 7fc910341000-7fc91244e000 r-xp 00000000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91244e000-7fc91264e000 ---p 0210d000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91264e000-7fc912653000 r--p 0210d000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc912653000-7fc91265b000 rw-p 02112000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91265b000-7fc9126",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-347904720:774,energy,energy,774,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-347904720,1,['energy'],['energy']
Energy Efficiency,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:56,energy,energy,56,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945,2,['energy'],['energy']
Energy Efficiency,"> Warning that orbital energies then become ambiguous as well. Do you want the ""orbital energies"" at the correlated level of theory or the reference?; > ; > If there's no standard either way, then it may be best to let the user toggle which one they want in this corner case. I don't know what behavior is expected; energy expectation value might be one option but there might be different definitions for the Fock operator. Most of all, you can't reorder the orbitals...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-670696518:316,energy,energy,316,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-670696518,1,['energy'],['energy']
Energy Efficiency,"> Where is libplugin called for?. I'm not 100% sure if this is necessary or not -- I was trying to adapt my old plugin from a couple years ago (for RESP charge fitting) that no longer compiles, so that might be just accidental on my part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172149347:99,adapt,adapt,99,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172149347,2,"['adapt', 'charge']","['adapt', 'charge']"
Energy Efficiency,"> Wow, that's quite the involved method. I found a few comments, but lgtm! Main question is: are unsuitable complications like extern-in-system, charged molecule?, etc. stopped early? Thanks for the contribution!. Thanks for the feedback @loriab! I don't think that either a charged molecule or a presence of external potential mean that new ISAPT is a no-go (just the printed dipole moments will be origin-dependent, which is no big deal). We just haven't tested such cases yet. Let me think of a good ionic system to try out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2899#issuecomment-1522545737:145,charge,charged,145,https://psicode.org,https://github.com/psi4/psi4/pull/2899#issuecomment-1522545737,4,['charge'],['charged']
Energy Efficiency,"> Yeah, it's perfectly fine to split things up into multiple PRs. One sensible order I can come up with is:; > ; > 1. Edit the incremental Fock in the derived `DirectJK` class so that it is efficient and maintainable (no SCF iteration counts associated with the object, minimal number of matrices cached on the object, etc.) [some other PR]; > 2. Move this improved incremental Fock to the parent `JK` class. [this PR]; > ; > In a previous comment, I suggested doing away with the cached `J`/`K`/`wK`/`dJ`/`dK`/`dwK` matrices by changing the behavior of the `JK` object so that the buffers aren't cleared between SCF iterations. If you find that difficult to do, I think an acceptable compromise would be to retain those cached matrices, but initialize them in the SCF driver (rather than make them a property of the JK object). Since this PR is already opened, I would actually prefer 2 before 1. I am slammed with my schedule right now, and I think 2 before 1 would be WAYYY easier for me. Is that okay with you @zachglick @JonathonMisiewicz? This PR also immediately fixes the `incfock` issues with `DFJCOSK`, as opposed to punting those fixes down to a future PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1253878406:190,efficient,efficient,190,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1253878406,4,"['efficient', 'schedul']","['efficient', 'schedule']"
Energy Efficiency,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:642,energy,energy,642,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069,2,['energy'],['energy']
Energy Efficiency,"> `${DESTDIR}` is also implicitly prepended to ${CMAKE_INSTALL_PREFIX} by makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:729,energy,energy,729,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,2,['energy'],['energy']
Energy Efficiency,"> what about `guided`?. All that matters is that we avoid `static`, which can lead to an uneven distribution of work across threads. `guided` is about as good as `dynamic` here. `dynamic` has optimal load balancing at the cost of slightly more overhead than `guided`. The work/iteration is large for these loops, making this additional overhead is negligible. . Here's a comparison of the different schedules (wall time in seconds, large alkane on an 18 core CPU):. | Code | `static` | `guided` | `dynamic` |; |------|-----------|--------|---------|; | Numerical Integration (Loop 1) | 36.9 | 36.9 | 36.7 |; | DF Integrals (Loop 2) | 299.0 | 278.7 | 279.7 |; | PNO Transform (Loop 3) | 80.9 | 80.4 | 78.4 |; | PNO Overlap (Loop 4) | 29.8 | 29.3 | 24.4 |; | Total DLPNO-MP2 | 528.2 | 506.6 | 498.2 |. You can see that `dynamic` is possibly a hair better than `guided`, but both are better than `static`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2378#issuecomment-989020297:399,schedul,schedules,399,https://psicode.org,https://github.com/psi4/psi4/pull/2378#issuecomment-989020297,2,['schedul'],['schedules']
Energy Efficiency,"> yay for new functionality!; > ; > Your mp2_type/qc_module question is an incisive one. Generally, a new approach will show up in either the method name (`energy(methodname-mp2)`) or in the algorithm option (`mp2_type=dlpno`), not both. So algorithm options (disk_df vs. mem_df) are definitely mp2_type. broad categories that give different answers (conv, df, cd) have usually been formuated as mp2_type. methods that give different answers and are known by name (e.g., fno) have been forulated by method name. I can see dlpno going either way. But the most straightforward for now would be to continue following fno, and use energy(""dlpno-mp2"") and not define a qc_module or mp2_type for dlpno at present.; > ; > For conv options, it'd be good to tie those options (if not set explicitly) into the main e_conv, d/r_conv options.; > ; > In fnocc, AED allows setting some conv crit by percentage, energy, and cutoff. relevant here?. Good to know the difference between module and type, I'll leave as `dlpno-mp2` for now. Per Holger's suggestion, I've added a single `PNO_CONVERGENCE` option that controls the many thresholds and cutoffs specific to this method. DLPNO's `T_CUT_PNO` keyword is analogous to fnocc's `OCC_TOLERANCE`, both control the truncation of natural orbitals based on occupation number. Keywords to truncate by energy or percentage could also be added, I'll have to see if that's offers any improvement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849:156,energy,energy,156,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849,4,['energy'],['energy']
Energy Efficiency,">> I do think we should try to get the changes into one psi4 release cycle. > Regarding the deprecation message/schedule: do you mean that they should be deprecated now and then removed before 1.7 RC1?. I think deprecation warnings (with code still functional) need to be in at least one release. So the code can be broken as soon as ~Dec (after 1.7.0 release). But what I was meaning to say with ""get the changes into one psi4 release cycle"" was let's aim to get all the immediate-breaks and/or notifications in before 1.7.0 so that downstream users have the info to do a single overhaul after 1.7.0. Keep pinging me if this doesn't make sense :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2693#issuecomment-1259615160:112,schedul,schedule,112,https://psicode.org,https://github.com/psi4/psi4/pull/2693#issuecomment-1259615160,1,['schedul'],['schedule']
Energy Efficiency,">>> lgtm, thanks! Is there any atomic unit for specific rotation?. >> since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022#issuecomment-716616770:507,energy,energy,507,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716616770,2,['energy'],['energy']
Energy Efficiency,"@ TiborGY I would not know how to monitor the health of my SSD, so I cannot speak to that. I have a 16GB M1 Mac mini sitting on my desk using most of the cores 24/7, but all of the program memory requirements fit comfortably within 16GB, so little or no swap is being used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-961470227:34,monitor,monitor,34,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-961470227,1,['monitor'],['monitor']
Energy Efficiency,"@AlexHeide, your suggestion to compute an energy is an excellent one. How do we do it? I'm available to work on this, but not sure where to start putting the catch. Feel free to cue me on Slack if that's more convenient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2971#issuecomment-1571236559:42,energy,energy,42,https://psicode.org,https://github.com/psi4/psi4/issues/2971#issuecomment-1571236559,1,['energy'],['energy']
Energy Efficiency,"@CDSherrill , good to hear as I quite agree. This is just what the dfmp2 module does presently for gradients: switches `scf_type` to `df` unless the user has reqested _not_ `df`, in which case it reveals its cause of death. I'm imitating this behavior now for the other mp2 gradient routes. My Q1 for Ugur was that a conv+df gradient was proceeding, and I wanted to confirm that failing it was the correct thing to do. The complication/confusion (it even caught me last night) is that although all scf calculations _run df by default_ (handled in the driver), the `scf_type` keyword _does not default to df_ (since there's a lot more post-scf than scf out there, it's easier to handle the latter as the exception), so setting solely `mp2_type df` in a `gradient('mp2')` leads to that conv+df case (even though someone knowing psi's df-philia might expect that to lead to df+df). But don't worry about that– for mp2, at least, I'll try all combinations and arrange that only good ones get through and that the advanced defaulting is handled right. By the way, back to energies, would you expect OCC's conventional ROHF mp2 energy to match DETCI's? It doesn't, and that's the only check remaining commented out in my great mp2 cross-module comparison (https://github.com/psi4/psi4/blob/master/tests/mp2-module/input.dat#L191) OCC's df ROHF mp2 _does_ match DFMP2's.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192928974:1122,energy,energy,1122,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192928974,1,['energy'],['energy']
Energy Efficiency,"@CDSherrill , the halfway-corrected version of bullet 2nd energy above is. ```; molecule ne {\nNe\n}; set basis cc-pVDZ; set transqt2 delete_tei false; energy('cisd'); energy('fci', bypass_scf='True'); ```. where the integrals from the CISD aren't available for the FCI calc. I think we had seen this earlier with the file numbers used by detci aren't registered in psifiles.h . This input is in a docstring in `lib/python/energy.py`, not `tests/` so we could just drop it from there for now and add an issue if it's an involved fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-122484876:58,energy,energy,58,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-122484876,4,['energy'],['energy']
Energy Efficiency,"@CDSherrill - I don't think the noise in the gradients is a problem. Psi3 routed all gradient computations through `cints`, which symmetrizes everything automagically in `src/bin/cints/Default_Deriv1/symmetrize_deriv1.cc`, which is called from `src/bin/cints/Default_Deriv1/deriv1.cc` . @JonathonMisiewicz - the fix that I put in for DF-MP2 doesn't symmetrize the individual components of the gradient. Only the total. I didn't bother with the components just because they're only really for debugging and aren't printed by default. I guess they probably should be symmetrized if they're printed out by a power user though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504#issuecomment-459002869:605,power,power,605,https://psicode.org,https://github.com/psi4/psi4/issues/1504#issuecomment-459002869,1,['power'],['power']
Energy Efficiency,"@CDSherrill . Oh, and if an error's raised but not caught, it just shows the traceback and triggers coffee:. ```; PsiException: Could not converge SCF iterations in 4 iterations. Failed to converge. Traceback (most recent call last):; File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:459,energy,energy,459,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,2,['energy'],['energy']
Energy Efficiency,@CDSherrill @edeprince3 could it be that that nvirt > ndocc is an assumption that's made in the contraction order? If nvirt < ndocc then it might be more efficient to contract first over the occupied orbitals?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339447402:154,efficient,efficient,154,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339447402,1,['efficient'],['efficient']
Energy Efficiency,"@CDSherrill Here's a numpy-free input, should you want to test. Problem is NUM_ROOTS, not loop or zmat. ```; memory 20 Gb. molecule H2 {; 0 1; He; He 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; ## NUM_ROOTS 5; basis cc-pvdz; num_roots 2 # toggle this on/off for badness; }. rlist = [1.00, 10.1, 0.5]. for r in rlist:; H2.R = r; energy('fci') # or cisd; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83#issuecomment-96099675:351,energy,energy,351,https://psicode.org,https://github.com/psi4/psi4/issues/83#issuecomment-96099675,1,['energy'],['energy']
Energy Efficiency,"@CDSherrill Yes, I did try that. Removing line 371 yields the original problem (using the input in the forum, CI space: 792 determinants):; ```; ==> Starting DF-MCSCF iterations <==. Iter Total Energy Delta E Orb RMS CI RMS NCI NORB; @DF-MCSCF 1: -112.452176153325 -3.9110e-01 3.88e-02 1.11e-11 1 1 Initial CI; Warning! Maxstep = 0.10, scaling to 0.10; @DF-MCSCF 2: -112.515943250091 -6.3767e-02 1.81e-02 0.00e+00 12 1 TS; @DF-MCSCF 3: -112.522488962067 -6.5457e-03 6.14e-03 0.00e+00 12 1 TS; @DF-MCSCF 4: -112.523535480248 -1.0465e-03 2.40e-03 0.00e+00 12 1 TS; @DF-MCSCF 5: -112.523757306710 -2.2183e-04 1.06e-03 0.00e+00 12 1 TS; @DF-MCSCF 6: -112.523809657459 -5.2351e-05 4.44e-04 0.00e+00 12 1 TS; @DF-MCSCF 7: -112.523823448504 -1.3791e-05 3.18e-04 0.00e+00 12 1 TS; @DF-MCSCF 8: -112.523827480498 -4.0320e-06 1.33e-04 0.00e+00 12 1 TS; @DF-MCSCF 9: -112.523828813577 -1.3331e-06 1.79e-04 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 10: -112.523829321491 -5.0791e-07 6.79e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 11: -112.523829546801 -2.2531e-07 1.38e-04 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 12: -112.523829698540 -1.5174e-07 9.78e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 13: -112.523829801775 -1.0324e-07 1.30e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 14: -112.523829823173 -2.1397e-08 1.93e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 15: -112.523829813293 9.8798e-09 5.67e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 16: -112.523829832174 -1.8881e-08 2.90e-05 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 17: -112.523829839177 -7.0027e-09 7.35e-06 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 18: -112.523829840344 -1.1669e-09 3.02e-06 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 19: -112.523829840592 -2.4842e-10 3.34e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 20: -112.523829840596 -3.6948e-12 2.10e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 21: -112.523829840597 -8.2423e-13 1.56e-07 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 22: -112.523829840597 -6.2528e-13 7.02e-08 0.00e+00 12 1 TS, DIIS; @DF-MCSCF 23: -112.523829840598 -1.5632e-13 6.16e-08 0.00e+00 12 1 TS, DIIS; @DF-M",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785:194,Energy,Energy,194,https://psicode.org,https://github.com/psi4/psi4/pull/2259#issuecomment-934313785,1,['Energy'],['Energy']
Energy Efficiency,"@CDSherrill modifying the nuclear charge is the correct thing to do, to be consistent with the ECP formulation, where some of the nuclear charge is folded into the definition of the core. I have verified this by running other codes with and without ECPs; this changes the nuclear repulsion energy in all cases. I'll drop a note in the manual that anybody doing advanced stuff should use [this funciton](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.h#L286) if they want the ""real"" charge. @fevangelista sorry this took me some time to get working. I'll throw some finite difference gradients in there either tonight or tomorrow. The energies should be all correct, so feel free to play with this. Wavefunction has an [`ecpbasisset()`](https://github.com/andysim/psi4/blob/ecp/psi4/src/psi4/libmints/wavefunction.h#L312) that you can query to find the [total number of core electrons excluded](https://github.com/andysim/psi4/blob/ecp/psi4/src/psi4/libmints/basisset.h#L262) or [the number of core electrons excluded on a given atom](https://github.com/andysim/psi4/blob/ecp/psi4/src/psi4/libmints/basisset.h#L259). Between these functions and that I linked above, you should have all the info you need. Please let me know if you need any extra information / code to get your work done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681#issuecomment-295549661:34,charge,charge,34,https://psicode.org,https://github.com/psi4/psi4/pull/681#issuecomment-295549661,4,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"@DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.00000020668995 0.00000049737307; @Atomic UHF Final Energy for atom XE: -7299.97190876705281; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -7255.00101065488798 -7.25500e+03 0.00000e+00 ; @DF-RHF iter 1: -7259.15010997926129 -4.14910e+00 1.35868e-02 DIIS; @DF-RHF iter 2: -7259.17972994142656 -2.96200e-02 3.74973e-03 DIIS; @DF-RHF iter 3: -7259.18676197489549 -7.03203e-03 1.53495e-03 DIIS; @DF-RHF iter 4: -7259.18756584481798 -8.03870e-04 4.30106e-05 DIIS; @DF-RHF iter 5: -7259.18756735798888 -1.51317e-06 2.08951e-06 DIIS; @DF-RHF iter 6: -725",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:2037,energy,energy,2037,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,1,['energy'],['energy']
Energy Efficiency,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:496,energy,energy,496,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"@JonathonMisiewicz ; Thanks for you reply. Your comments summarized my questions very nicely. Now, I am just focusing on the CASSCF part first. ; I realized that there was a mistake in the 'docc' assignment in my previous run. The docc part should be: [3, 0, 0, 0, 0, 1, 1, 0]. I thought that I needed to exclude the restricted_docc in the docc input.; After correcting this mistake, I started calculating the potential energy curves (the lowest 6 Pi_g symmetry). However, I obtained some mysterious roots that I initially did not know what they were, but now I think these extra roots are the quintet (S=2) states that somehow show up in the calculation results, even though I asked for only the singlet (S=0) . In the figure titled as Singlet_pig, the blue dots are the singlet states and the yellow dots are what I believe the quintet states. Note that straight from the calculations, there are two states that converge to the lowest C+C dissociation limit (triplet P+triplet P). This can't happen because triplet P+triplet P dissociation channel correlates with only one singlet Pi_g state. Now, the red curves are from a calculation that explicitly calculates quintet Pi_g states. The red curves overlap well with the yellow dots (except for one curve, which I don't understand). If I took out the quintet states (by looking at the coefficients of the CI determinants), the remaining singlet potential energy curves (Pi_g +Phi_g symmetry) agree with CASSCF calculations from Molpro (provided by my collaborator; I was trying to reproduce his curves). I am wondering why do those quintet states show up in the calculation of singlet states. Similar things happen when I tried to calculate the triplet Pi_g states. More importantly, what should I do to avoid having higher multiplicity states from the calculation? Is there a keyword that I missed?. ![singlet_Pigs](https://user-images.githubusercontent.com/65833552/83825292-c1c90e00-a68d-11ea-9a30-1c0d8cdbdfe3.png)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-639202060:420,energy,energy,420,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-639202060,2,['energy'],['energy']
Energy Efficiency,"@JonathonMisiewicz After successfully completing one step, it appears to be switching from using SAD, to using previous orbitals despite my having set guess to sad. ```; Successfully symmetrized geometry. ==> Convergence Check <==. Measures of convergence in internal coordinates in au.; Criteria marked as inactive (o), active & met (*), and active & unmet ( ).; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria o 4.50e-04 * 3.00e-04 * 1.80e-03 * 1.20e-03 * ~; --------------------------------------------------------------------------------------------- ~; 1 -1520.83247764 -1.52e+03 o 2.87e-02 6.52e-03 1.12e+00 2.74e-01 ~; ---------------------------------------------------------------------------------------------. Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.3082647324 2.3190588090 2.4662144199; C 1.2994401676 1.9841371839 2.6252591212; O 1.9613330035 1.5293126579 1.6982686350; O 1.9487730658 2.2253118158 3.9589994443; C -1.2637575308 1.7972383826 1.0887300503; C -2.8394127991 2.3213315802 1.0116494590; C -3.7509980721 1.6807278062 2.2931752326; O -3.8504096207 2.3153516037 3.3633546508; O -4.5178176253 0.3904174599 2.0757387449; C -1.3759292896 0.0921611935 1.1005734307; O -0.8241227821 -0.7339800728 2.0937447856; O -2.0658921497 -0.3998131349 -0.1385874282; O -0.6219920417 2.4852394292 -0.1951904942; H -0.3231747331 3.5031540765 2.4416857576; H -0.7901754068 1.8479833570 3.4773721250; H 2.9672568222 1.9953691785 3.9096102485; H -3.4471447933 2.0212696600 -0.0256899111; H -2.7529115441 3.5237308050 0.9794914513; H -5.0374668500 0.1438676436 2.9887272170; H -1.8948356360 -1.5118861166 -0.0506847242; H -0.0777476573 1.7695454328 -0.5991466202; C 0.4741700051 -1.8080097129 -3.0796",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-952880914:472,Energy,Energy,472,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-952880914,1,['Energy'],['Energy']
Energy Efficiency,@JonathonMisiewicz I think I did it right -- I added `MBIS VALENCE CHARGES` (`MBIS VALENCE WIDTHS` was already present) to the glossary and got things pulled in. Does this lgty now?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3226#issuecomment-2457640228:67,CHARGE,CHARGES,67,https://psicode.org,https://github.com/psi4/psi4/pull/3226#issuecomment-2457640228,1,['CHARGE'],['CHARGES']
Energy Efficiency,"@JonathonMisiewicz Thanks a lot for the advice!. Yes for larger alkanes like Decane the energy agreement was not more 3-4 decimal places. Based on your advice I modified the script, however, there is not much of an improvement in the agreement. In fact the total number of grid points also differ. ```python; import os. ncores = 8; os.environ['OMP_NUM_THREADS'] = str(ncores); os.environ[""OPENBLAS_NUM_THREADS""] = str(ncores) # export OPENBLAS_NUM_THREADS=4; os.environ[""MKL_NUM_THREADS""] = str(ncores) # export MKL_NUM_THREADS=4; os.environ[""VECLIB_MAXIMUM_THREADS""] = str(ncores) # export VECLIB_MAXIMUM_THREADS=4; os.environ[""NUMEXPR_NUM_THREADS""] = str(ncores) # export NUMEXPR_NUM_THREADS=4; # Set the max memory for PySCF; os.environ[""PYSCF_MAX_MEMORY""] = str(120000). import psi4; psi4.set_memory(int(120000*1e6)); numpy_memory = 40; import pyscf; from pyscf import dft; # pyscf.lib.misc.num_threads(n=8). xyzFilename = 'Decane_C10H22.xyz'. with open(xyzFilename,""r"") as f:; xyz_string = f.read(). psi4_geo = psi4.core.Molecule.from_string(xyz_string, dtype='xyz',fix_symmetry='c1', fix_orientation=True,fix_com=True). # run psi4 calculation; psi4.core.set_num_threads(ncores); psi4.set_options(; {; ""scf__reference"": ""rks"",; ""scf_type"": ""df"",; ""scf__maxiter"": 50,; ""basis"": 'def2-svp',; ""df_basis_scf"": 'def2-universal-jfit',; ""puream"":False,; ""guess"": ""sap"",; ""SCF_INITIAL_ACCELERATOR"":""none"",; ""dft_spherical_points"":302,; ""dft_radial_points"" :75,; ""diis_max_vecs"" : 6,; #""DFT_NUCLEAR_SCHEME"":""becke"",; ""E_CONVERGENCE"":1e-7,; }; ); energy = psi4.energy(name=""scf"",dft_functional=""svwn"", molecule=psi4_geo, return_wfn=False); energy = 0. # run PySCF calculation; mol = pyscf.M(; atom=xyzFilename, ; basis=""def2-svp"",; symmetry=False,; verbose=4,; cart=True,; ); # mol.max_memory = 10_000; mf = dft.rks.RKS(mol, xc=""LDA,VWNRPA"").density_fit(auxbasis='def2-universal-jfit'); mf.init_guess = 'vsap'; # mf.grids.level = 5; mf.verbose = 4; mf.grids.prune = None; mf.grids.atom_grid = (75, 302); mf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1487278053:88,energy,energy,88,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1487278053,1,['energy'],['energy']
Energy Efficiency,"@JonathonMisiewicz Thanks for your response; In the loop over R that I used to calculate the potential energy curves, I do have the ""c2 = psi4.geometry(c2_geometry.format(R))"" command, with c2_geometry defined in an earlier thread. Regarding why I use a singlet diradical ROHF reference: it looks like, based on the DETCI module manual, DETCI only calculates excited states with the same irrep as the reference, and there is not a keyword for me to select irrep symmetry (please correct me if I am wrong here). As a result, in order for me to calculate the Pi_g manifold states (B2g+B3g in D2h), I need to use a B2g (or B3g) reference state, which for C2 (with an even number of total electron) is at least a biradical state. Also, as I mentioned before, I encountered the same problem when I calculated the triplet Pi_g manifold states, for which the issue with the alpha electrons in the ROHF reference shouldn't be an issue, right? (see the figure below for the triplet-state manifold, the yellow dots are what I think the quintet states). ![triplet_Pigs](https://user-images.githubusercontent.com/65833552/84192270-9871fe80-aa4e-11ea-84b3-9b8dd486edfe.png)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-641531132:103,energy,energy,103,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-641531132,1,['energy'],['energy']
Energy Efficiency,"@JonathonMisiewicz for completeness, at each R value, my CASSCF code is as follows. I change whether I want singlet, triplet, or quintet states by changing the number '1' in the c2_geometry section. I tried explicitly set S=0 in the detci module option, but did not change the results. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). c2_geometry = """"""; 0 1; c ; c 1 {0}; symmetry d2h; """"""; psi4.set_module_options('detci',{'num_roots': 24,'follow_root': 0,'NUM_DETS_PRINT': 40}); #'follow_root' is set to either 0 or 1, depending on the R value. casscf_energy = psi4.energy('casscf')",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-639202988:761,energy,energy,761,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-639202988,1,['energy'],['energy']
Energy Efficiency,"@JonathonMisiewicz for completeness, here is my full code (the indentation doesn't come out right...). Note that in order to create smooth curves, in the loop over R, I switch from following root 0 to root 1 due to the crossing of the lowest quintet state with the lowest singlet state. import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). c2_geometry = """"""; 0 1; c ; c 1 {0}; symmetry d2h; """""". #singlet; a_end=1.325; b_start=1.355; b_num=20; aa=np.linspace(1,1.2,6); a=np.linspace(1.25,a_end,3) ; b=np.linspace(b_start,2.5,b_num); c=np.linspace(2.6,4,8); Rvals=np.concatenate((aa,a, b, c), axis=None). ecp = {}. for R in Rvals:; if R<=a_end:; psi4.set_module_options('detci',{'num_roots': 3,'follow_root': 0,'NUM_DETS_PRINT': 40}); elif R>=b_start:; psi4.set_module_options('detci',{'num_roots': 3,'follow_root': 1,'NUM_DETS_PRINT': 40}); c2 = psi4.geometry(c2_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' %0),; psi4.core.variable('ci root %d TOTAL ENERGY' %1),; psi4.core.variable('ci root %d TOTAL ENERGY' %2)]; psi4.core.clean()",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-641533432:1155,energy,energy,1155,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-641533432,4,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"@JonathonMisiewicz, you're right. Although it is easy to guarantee the root has the desired M_s, by construction of the determinant space, there is no guarantee that the wavefunction will have the correct S^2. . I wrote some code to try to handle situations like this. The user can specify the value of S that they desire (default 0.0 for closed-shell systems). If they want to guarantee that all guess roots have the same spin as this, they can set `CALC_S_SQUARED TRUE`. This will then toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the fin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:927,energy,energy,927,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020,1,['energy'],['energy']
Energy Efficiency,"@PeterKraus And, as I'm looking at it now, it would be also nice to have an equilibrium energy in the returned dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483565607:88,energy,energy,88,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483565607,1,['energy'],['energy']
Energy Efficiency,"@PeterKraus I have a dream that (barring SCF convergence, FC/non-FC, DF/CONV, etc.) `MP2 TOTAL ENERGY` for a molecular system should have one value. The contrasting view is that `MP2 TOTAL ENERGY` is whatever is the final result of a MP2 module, regardless of whether the SS/OS components have been SCS-ed or the input reference wavefunction changed from HF to B3LYP. So for the DH case where the MP2 is using DFT orbitals and the MP2 energies won't be canonical, I'd rather delete the vars. I'm fairly settled on this, but I'm glad to hear other views.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1375#issuecomment-444533735:95,ENERGY,ENERGY,95,https://psicode.org,https://github.com/psi4/psi4/issues/1375#issuecomment-444533735,2,['ENERGY'],['ENERGY']
Energy Efficiency,"@PeterKraus Not currently -- I arrive at exactly the same `TestComparisonError` that you have provided. It appears that `bsse_type` isn't a recognized kwarg of the CBS driver, so `energy(cbs, bsse_type='cp', ...)` still just returns a total energy. In the spirit of smaller PR's, I'd suggest that you make it into a new issue, which I'm happy to work on :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/975#issuecomment-383604532:180,energy,energy,180,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383604532,2,['energy'],['energy']
Energy Efficiency,"@PeterKraus Thank you! That explains it. So, one last question - is it possible to get the dissociation energy somehow?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483535360:104,energy,energy,104,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483535360,1,['energy'],['energy']
Energy Efficiency,"@PeterKraus cc-pVDZ is too small:; | Basis | HF energy| Correlation energy|; |---------|---------------|-------------------------|; |cc-pvdz|-1.40116327670| 0.0000000000E+00|; |cc-pvtz |-1.91416855862|-0.7824302424E-03|; |cc-pvqz|-1.99159607277| -0.1181868464E-02|; |cc-pv5z|-2.04034123742| -0.1285572449E-02|; |aug-cc-pvdz|-2.15018916592 |-0.7346161967E-03|; |aug-cc-pvtz |-2.16888956528|-0.7616780920E-03|; |aug-cc-pvqz |-2.17117882318|-0.7862458950E-03|; |aug-cc-pv5z |-2.17181734050|-0.7961769119E-03|. The triplet ground state is 1s2s, but the outer orbital is very diffuse. The real HF ground state energy is -2.17425077799 so even av5z is quite far off!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682380332:48,energy,energy,48,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682380332,3,['energy'],['energy']
Energy Efficiency,"@PeterKraus thanks for this helpful update. This will eliminate some redundant computations, which is helpful (especially for people who just want a dimer IE). Thanks also for testing the gradients. I have one quibble with the user interface. What happens if a user tries to run an optimization but only uses bsse_type=['cp']? The monomer energies in the monomer basis sets need to be calculated so that we have total energies... trying to optimize the interaction energy only, without some special constraints in the optimizer to keep the monomers frozen (a capability we do not have automated right now), will give garbage. 99% of users will not be clever enough to realize that if they want the counterpoise-corrected geometry of a dimer, they need to include ""nocp"" in their bsse_type list. Can you solve this by forcibly adding monomers (and perhaps option ""nocp"" internally, if you want) when an optimization is requested? I would like to head off a lot of posts on the user forum about CP-corrected optimizations that went wrong :). Minor question about printing. I agree that things that are not total energies should not be printed in the total energy column. However, what are you doing if bsse_type='cp'? Leaving it blank? That might cause a problem for anyone trying to scrape the output file. Should there be something there, like ""n/a"" or something?. Also, when you do print the total energy, it's the same total energy as before your PR, right? The total energy of a dimer should be E_AB(AB) minus the Boys-Bernardi estimate of the BSSE, which is [E_A(AB) - E_A(A) + E_B(AB) - E_B(B)]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869885254:465,energy,energy,465,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869885254,5,['energy'],['energy']
Energy Efficiency,"@PeterKraus yes, something like 0.78 mEh of alpha-alpha correlation energy for He triplet in cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682339122:68,energy,energy,68,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682339122,1,['energy'],['energy']
Energy Efficiency,"@TiborGY is right. Even though you've set ""uhf"", that switches to ""uks"" behind the scenes (so you're not having to set DFT in two places). When I release the error you hit, the further error shows: . ```. Printing out the relevant lines from the Psithon --> Python processed input file:; psi4.set_options({'reference': 'uks', 'stability_analysis': 'follow'}); mol = psi4.geometry(""""""; 0 1; O; """""");; --> psi4.energy('wB97M-D3BJ/def2-TZVPPD', molecule=mol). !-----------------------------------------------------------!; ! !; ! Stability analysis not yet supported for XC functionals. !; ! !; !-----------------------------------------------------------!; ```. Agree that the existing error looks contradictory. I've adjusted it to show:. ```; Printing out the relevant lines from the Psithon --> Python processed input file:; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'follow'}); mol = psi4.geometry(""""""; 0 1; O; """""");; --> psi4.energy('wB97M-D3BJ/def2-TZVPPD', molecule=mol). !----------------------------------------------------------------------------------!; ! !; ! Stability analysis root following is only available for unrestricted Hartree-- !; ! Fock, not present UKS !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2577#issuecomment-1125639718:409,energy,energy,409,https://psicode.org,https://github.com/psi4/psi4/issues/2577#issuecomment-1125639718,2,['energy'],['energy']
Energy Efficiency,"@amjames Sorry for not being more clear - the output generated by the different calls to `MoldenWriter` is different if you directly interact with the interface via `molden()` versus the `set print mos` route. I have attached two examples. `test.molden` is output generated by using the `molden()` call, and `test.default.22773.molden` is generated using the `set print mos` route (I added to .txt extension to the attachments so that Github would upload them). Per the molden example in the manual (example 4 [](http://www.psicode.org/psi4manual/master/molden.html)), I passed in the densities from the returned wavefunction. I'm not sure if the DF-MP2 generates densities (I would think it needs to in order to do the density fitting), but if not the SCF call certainly generates a density which should be available in the wavefunction if no MP2 density is generated. Below is my input. > E, wfn = energy('mp2/aug-cc-pvdz', properties=['dipole'], return_wfn=True); > ; > Da_so = wfn.Da(); > Db_so = wfn.Db(); > ; > Da_mo = Matrix.triplet(wfn.Ca(), Da_so, wfn.Ca(), True, False, False); > Db_mo = Matrix.triplet(wfn.Cb(), Db_so, wfn.Cb(), True, False, False); > ; > molden(wfn, 'test.molden', density_a=Da_mo, density_b=Db_mo, dovirtual=True); > . [test.molden.txt](https://github.com/psi4/psi4/files/992976/test.molden.txt); [test.default.22773.molden.txt](https://github.com/psi4/psi4/files/992977/test.default.22773.molden.txt). The energies end up being set equal to the occupancies (which are incorrect - noninteger and in some instances in the thousands). I think this is due to the call to `MoleculeWriter.writeNO`. I did not find this call in `writer.cc`; all I could find was a header file. It does not appear to take energies in as arguments, so I'm not sure why/where from it is passing energies to the molden output. I don't understand all of the procedure in going from the density to the occupancies; why is the number of MOs per irrep used as the rotation matrix in `NO_Ra = core.Matri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/699#issuecomment-300777718:900,energy,energy,900,https://psicode.org,https://github.com/psi4/psi4/pull/699#issuecomment-300777718,2,['energy'],['energy']
Energy Efficiency,"@andysim The Molpro devs claim their choice is more computationally efficient, see the bottom of this page: [https://www.molpro.net/info/2015.1/doc/manual/node374.html](url)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/311#issuecomment-597618813:68,efficient,efficient,68,https://psicode.org,https://github.com/psi4/psi4/issues/311#issuecomment-597618813,1,['efficient'],['efficient']
Energy Efficiency,@andysim Try now. I can understand where they are coming from on the security side. There are not too many layers between log printing and security tokens. Very powerful tool however.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235131408:161,power,powerful,161,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235131408,1,['power'],['powerful']
Energy Efficiency,"@andysim Well, I've tried to add more points with the same 0.005A step. . Results are as following:; ```; Equilibrium Energy -108.68016248232071 Hartrees; Gradient -0.00000000054148; Quadratic Force Constant 23.1018206 MDYNE/A; Cubic Force Constant -201.1767529 MDYNE/A**2; Quartic Force Constant 945.5330232 MDYNE/A**3. re = 1.080176 A check: 1.080176; r0 = 1.083206 A; we = 2366.4716 cm-1; wexe = 25.7210 cm-1; nu = 2315.0297 cm-1; ZPVE(nu) = 1176.8056 cm-1; Be = 2.0635 cm-1; B0 = 2.0520 cm-1; ae = 0.0231 cm-1; De = 0.0000063 cm-1; ```; And [fit.pdf](https://github.com/psi4/psi4/files/3082699/fit.pdf) looks really well. The only value which looks really off is `De`. Is it really computed in `cm-1`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483482031:118,Energy,Energy,118,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483482031,1,['Energy'],['Energy']
Energy Efficiency,@andysim great. Since the weird thing is that I can't find any errors in the build log that @loriab linked:; ```; 2020-01-06T17:54:37.8471030Z Energy with Cholesky 1e-4.........................................PASSED; 2020-01-06T17:54:37.8471436Z Energy with Cholesky 1e-4.........................................PASSED; 2020-01-06T17:55:04.0834277Z Energy with Cholesky 1e-5.........................................PASSED; 2020-01-06T17:55:04.0834591Z Energy with Cholesky 1e-5.........................................PASSED; ```; The crash comes suddenly; ```; 2020-01-06T17:55:21.8639362Z ; 2020-01-06T17:55:21.8712539Z Using partial Cholesky orthogonalization (doi:10.1063/1.5139948).; 2020-01-06T17:55:30.8500954Z ##[error]Cmd.exe exited with code '-1073741819'.; 2020-01-06T17:55:30.9285461Z ##[section]Finishing: CHolesky basis Spot Test; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-571269056:143,Energy,Energy,143,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-571269056,4,['Energy'],['Energy']
Energy Efficiency,"@andysim, I noticed that [`fd-freq-energy-large`](https://github.com/psi4/psi4/blob/master/tests/fd-freq-energy-large/input.dat) was timing out locally. It has various tests; the first is set up for findif-by-E, the rest are unspecified but partial freqs. The test was doing the first by findif fine, then going into `SCF HESS` and timing out. The intent of the test is clear- to test findif-by-E, so I've made that explicit. My real question for you is: is that testing change contrary to anything you intended? It doesn't look like you touched the test in your PR. (And yes, looks like some re-routing from analytic to findif is in order if a partial freq is requested.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-235363935:35,energy,energy-large,35,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-235363935,4,['energy'],['energy-large']
Energy Efficiency,@andysim: I am super excited about this code! I was wondering if you could answer a few questions so that I can start to think about how to write the interface with forte. How do you handle the reduced number of electrons? Do you redefine the atomic charge (Z) or just subtract the number of core electrons? Is this info available from Wavefunction? Let us know if we can be of any help!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681#issuecomment-295521147:194,reduce,reduced,194,https://psicode.org,https://github.com/psi4/psi4/pull/681#issuecomment-295521147,2,"['charge', 'reduce']","['charge', 'reduced']"
Energy Efficiency,"@ashutoshvt I believe this will only be used in experimental code as you likely should contract the integrals on the fly for efficient code. Nothing really stands out at me as coded in a way that would take a lot of extra time, what kind of performance improvements are you looking for?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/757#issuecomment-349813447:125,efficient,efficient,125,https://psicode.org,https://github.com/psi4/psi4/pull/757#issuecomment-349813447,1,['efficient'],['efficient']
Energy Efficiency,"@bast, could you post the end of the output file for the failed test case `<objdir>/tests/extern1/output.dat`? I'm perplexed as to what went wrong since the end of the test is simply:; ```; total time = 6 seconds = 0.10 minutes; Finite difference (3-pt.) vs. analytic gradient to 10^-5..........PASSED; Finite difference energy..........................................PASSED; Analytic energy...................................................PASSED. *** Psi4 exiting successfully. Buy a developer a beer!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/591#issuecomment-276534257:321,energy,energy,321,https://psicode.org,https://github.com/psi4/psi4/pull/591#issuecomment-276534257,4,['energy'],['energy']
Energy Efficiency,"@bozkaya, regarding `READ_SCF_3INDEX` for CD calcs, I'll just believe you. For this (https://github.com/psi4/psi4/issues/245#issuecomment-186302823) comment, though, for DF calcs, I'm not seeing that that keyword can make a difference. Toggling its presence and value in the below makes no difference to the energies. So fyi, I'm not implementing the advice in your comment for now. ```. mp2totg = psi4.Matrix(2, 3); mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028301835],; [ 0.0000000000, 0.0000000000, -0.0028301835]]; mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028193375],; [ 0.0000000000, 0.0000000000, -0.0028193375]]; mp2totg.set(mp2tot_vals). molecule hf {; H; F 1 0.917; }. set basis cc-pvdz; set scf_type pk; set mp2_type df; set points 5; set freeze_core false; set reference rhf; set READ_SCF_3INDEX true #FALSE # TOGGLE. set qc_module dfmp2 #occ # TOGGLE; energy('mp2'). compare_values(-100.0194112690226973, get_variable('scf total energy'), 6, 'scf'); compare_values(-0.203779972647527, get_variable('mp2 correlation energy'), 6, 'mp2corl'); compare_values(-100.2231912416702215, get_variable('mp2 total energy'), 6, 'mp2tot'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-193199034:877,energy,energy,877,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-193199034,4,['energy'],['energy']
Energy Efficiency,"@bozkaya, so if one runs a df-mp2 gradient that effectively but not explicitly does conventional HF, as through the input below, which yields the output pattern below, then this is actually a bad error of routing, which I should correct?. ```; molecule hf {; H; F 1 0.917; }. set basis cc-pvdz; set mp2_type df; set qc_module occ. gradient('mp2'); ```. ```; ...; @RHF Final Energy: -100.01941126902265; ...; Computing DF-MP2 energy using SCF MOs (Canonical DF-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 5.19366944090513; DF-HF Energy (a.u.) : -100.01941126902265; REF Energy (a.u.) : -100.01941126902265; DF-MP2 Correlation Energy (a.u.) : -0.20376310280949; DF-MP2 Total Energy (a.u.) : -100.22317437183214; ======================================================================= ; ...; DFGRAD ; A General Analytic Gradients Code ; for Density-Fitted Methods ; ...; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 -0.000000000000 0.000000000000 0.002795941505; 2 0.000000000000 -0.000000000000 -0.002795941505; ...; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192816600:374,Energy,Energy,374,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192816600,7,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"@bozkaya, sorry to bombard, but any thoughts on why occ analytic doesn't want to match occ findif?. ```. mp2totg = psi4.Matrix(2, 3); mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028301835],; [ 0.0000000000, 0.0000000000, -0.0028301835]]; mp2totg.set(mp2tot_vals). molecule hf {; H; F 1 0.917; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv. set qc_module detci; fdgrad = gradient('mp2', dertype='energy'); compare_matrices(mp2totg, fdgrad, 5, 'detci fd'); clean(). set qc_module fnocc; fdgrad = gradient('mp2', dertype='energy'); compare_matrices(mp2totg, fdgrad, 5, 'fnocc fd'); clean(). set qc_module occ; fdgrad = gradient('mp2', dertype='energy'); compare_matrices(mp2totg, fdgrad, 5, 'occ fd'); clean(). set qc_module occ; realgrad = gradient('mp2'); compare_matrices(mp2totg, realgrad, 5, 'occ analytic'); clean(); ```. ```; Performing finite difference calculations; 3 displacements needed ... 1 2 3; detci fd..........................................................PASSED; Performing finite difference calculations; 3 displacements needed ... 1 2 3; fnocc fd..........................................................PASSED; Performing finite difference calculations; 3 displacements needed ... 1 2 3; occ fd............................................................PASSED; occ analytic: computed value (0.0028301835) does not match (0.00281933825282).; occ analytic: computed value (-0.0028301835) does not match (-0.00281933825299).; Check your output file for reporting of the matrices.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192822036:410,energy,energy,410,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192822036,3,['energy'],['energy']
Energy Efficiency,"@cdsherrill yes 15.0 is recent enough. 14.0 is the minimum for full C; ++11 support based on the internets. On Wed, 2016-02-10 at 13:27 -0800, David Sherrill wrote:. > Fewer compilers working is less of an issue as we push more users; > towards; > the binary distribution. And is only a temporary problem, anyway. Is; > icpc; > 15.0 recent enough to support all the standards we need?; > ; > On Wed, Feb 10, 2016 at 3:50 PM, Ben Pritchard; > notifications@github.com; > wrote:; > ; > > For me the biggest pro of C++11 is that is reduces the amount of; > > code I; > > have to write/maintain/debug.; > > - Defaulted (and deleted) constructors and assignment operators; > > (mentiond by @dgasmith https://github.com/dgasmith); > > - Liberal use of STL containers and unique_ptr means you should; > > rarely; > > have to write a destructor, and often don't have to write a copy; > > constructor; > > - Constructor delegation; > > ; > > Cons:; > > - Template programming results in nasty compiler error messages that; > > take experience to figure out; > > - Overuse of templates, auto, decltype, etc, can result unreadable; > > code; > > - This can somewhat be fixed in the new PR workflow. Don't accept; > > PRs which are a mess; > > - Some C++11 patterns can be intimidating to people who are still; > > learning basic C++; > > ; > > As more libraries require C++11 (I think Ambit, TiledArray, and; > > Cyclops; > > all do), it should generally be embraced, with some reservations.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > ; > > https://github.com/psi4/psi4public/issues/238#issuecomment-182577836.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/238#issuecomment-182596162:529,reduce,reduces,529,https://psicode.org,https://github.com/psi4/psi4/issues/238#issuecomment-182596162,2,['reduce'],['reduces']
Energy Efficiency,"@davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?. ```; Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416:300,allocate,allocated,300,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1935022416,1,['allocate'],['allocated']
Energy Efficiency,"@dgasmith , maybe keep an eye out for test ""casscf-fzc-sp"". That's what failed on distelli (below), though it passed locally and on travis. May be another clue to the #322 intermittent failure. ```; ==> Setting up CI strings <==. There are 15 alpha and 15 beta strings; The CI space requires 65 (6.50E+01) determinants and 4 blocks. ==> Setting up MCSCF integrals <==. ==> Starting MCSCF iterations <==. Total Energy Delta E RMS Grad NCI. @MCSCF Iter 1: -76.02993400953443 -1.2637e-02 9.9525e-03 1 Initial CI; @MCSCF Iter 2: -76.06895156963408 -3.9018e-02 1.3537e-02 9 APPROX; @MCSCF Iter 3: -76.07302175257405 -4.0702e-03 4.4001e-03 7 APPROX; @MCSCF Iter 4: -76.07362055903870 -5.9881e-04 1.6406e-03 7 APPROX; @MCSCF Iter 5: -76.07373579006990 -1.1523e-04 7.9473e-04 7 APPROX, DIIS; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/456#issuecomment-238002601:410,Energy,Energy,410,https://psicode.org,https://github.com/psi4/psi4/pull/456#issuecomment-238002601,1,['Energy'],['Energy']
Energy Efficiency,"@dgasmith @robertodr . A simple example:. Without PCM, the working directory does not change:; ```python; import os. geometry('H -.5 0 0\nH .5 0 0\nsymmetry c1'). #pcm = { ; # Medium { Solvent = Water }; # Cavity { Type = GePol }; #}. energy('HF/3-21G'). print(os.getcwd()); ```; ```bash; $ psi4 test.py ; /home/raimis/debug/psi4_PCM; ```. With PCM, the working directory changes:; ```python; import os. geometry('H -.5 0 0\nH .5 0 0\nsymmetry c1'). pcm = { ; Medium { Solvent = Water }; Cavity { Type = GePol }; }. energy('HF/3-21G'). print(os.getcwd()); ```; ```bash; $ psi4 test.py ; /tmp/psi.12147.pcmsolver.604855c3; ```. A small detail, but it messes up our pipeline.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-351739145:235,energy,energy,235,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-351739145,4,['energy'],['energy']
Energy Efficiency,"@dgasmith @schiebermc. As discussed in https://github.com/psi4/psi4/issues/933#issuecomment-423183802, *clang-cl* supports *OpenMP* 4.0, so the adaptation to *OpenMP* 2.0 is not necessary. So this PR just fixes some missing `for` clauses and clean up *OpenMP* pragmas.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1200#issuecomment-443178956:144,adapt,adaptation,144,https://psicode.org,https://github.com/psi4/psi4/pull/1200#issuecomment-443178956,1,['adapt'],['adaptation']
Energy Efficiency,"@dgasmith Here's the MOLPRO output; [dfmp2.out.txt](https://github.com/psi4/psi4/files/316840/dfmp2.out.txt). @bozkaya Here's the output for DFOCC. Interestingly, the canonical DF-MP2 energy is now -603.599 (which is close to the MOLPRO value). The DF-OMP2 energy reported is -603.628; [dfomp2.out.txt](https://github.com/psi4/psi4/files/316848/dfomp2.out.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/408#issuecomment-226272722:184,energy,energy,184,https://psicode.org,https://github.com/psi4/psi4/issues/408#issuecomment-226272722,2,['energy'],['energy']
Energy Efficiency,"@dgasmith I understand, though my intuition is that the values in our `geometries` dict should be dicts themselves that store properties at that geometry in addition to the geometry. Definitely agreed on porting the C-side code and worrying about the metadata implementation afterwards. I'll get up a PR when I have the geometry generator ported and tested. The coding isn't bad, but my schedule is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884#issuecomment-360994628:387,schedul,schedule,387,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360994628,2,['schedul'],['schedule']
Energy Efficiency,"@dgasmith Uggh. And to think that DFT-SAPT is worse ... For reference, alpha is presently incorporated into the psivar name (https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/psivardefs.py#L42). The way I'd frame the question is:; * Is `S^2`/`S^inf` an _option_ that modifies the infinite-precision value of the same physical quantity (like `PK`/`DF` `HF TOTAL ENERGY`)?; * or Are `S^2`/`S^inf` terms distinctly different physical quantities computed (e.g., Ind20/Ind30 or singlet/triplet MP2 correlation energy). * Another point, is there ever safe mixing of s2/sinf?; * Can we compute Sinf terms and incorporate them into post-0 SAPT?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/921#issuecomment-366087579:369,ENERGY,ENERGY,369,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366087579,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,@dgasmith `mp2-module` has the line `set guess sad` before any energy computations. I don't see how the behavior for the `auto` guess would affect the output.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-447910881:63,energy,energy,63,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-447910881,1,['energy'],['energy']
Energy Efficiency,"@dgasmith yes, `opt10` and `sapt4` no longer complain. However, I've got two new failures: `opt7` and `opt-irc-2`.; For `opt7`:. ```; PsiException: Int. Coord. RHF opt of HOOH with O-O-H fixed to 105, energy: computed value (-150.7861731) does not match (-150.7861769) to 6 decimal places.; ```. For `opt-irc-2`:. ```; PsiException: Energy of last IRC point: computed value (-92.869134) does not match (-92.868901) to 5 decimal places.; ```. I used 13bf41bd1b0dd2a39d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-190689367:201,energy,energy,201,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-190689367,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"@dgasmith, fyi that the scf5 problem has surfaced on your box with 2016 compilers. Sometimes fails on Singlet PK UHF, like above error. Sometimes passes. Below is diff of the key SCF with new (failing) on L, output.ref on R. Further below is diff of the key SCF with new (passing) on L, output.ref on R. Note the changing occupancies. ```; ==> Iterations <== ==> Iterations <==. Total Energy Delta E RMS |[F,P]| | Total Energy Delta E Density RMS. > Forming PK and K matrices.; > @UHF iter 1: -130.87953989478825 -1.78522e+01 0.00000e+00 ; Occupation by irrep: Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 3, 0, 0, 0, 0, 2, 1, 1 ] | DOCC [ 3, 0, 1, 0, 0, 2, 1, 1 ]; SOCC [ 0, 0, 1, 1, 0, 0, 0, 0 ] | SOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; | @UHF iter 2: -140.04253152363862 -9.16299e+00 2.20869e-01 DIIS; @UHF iter 1: -130.87953989478828 -1.30880e+02 3.53419e-01 | @UHF iter 3: -149.17635355329770 -9.13382e+00 2.03083e-01 DIIS; @UHF iter 2: -140.07431434746931 -9.19477e+00 1.82031e-01 DIIS | @UHF iter 4: -149.57809876181395 -4.01745e-01 1.46708e-02 DIIS; @UHF iter 3: -149.23552613462837 -9.16121e+00 4.96906e-02 DIIS | @UHF iter 5: -149.59038744607500 -1.22887e-02 3.98344e-03 DIIS; @UHF iter 4: -149.63524139545771 -3.99715e-01 7.44669e-03 DIIS | @UHF iter 6: -149.59059079586575 -2.03350e-04 4.93283e-04 DIIS; @UHF iter 5: -149.64817974336708 -1.29383e-02 9.02194e-04 DIIS | @UHF iter 7: -149.59059711351466 -6.31765e-06 9.62861e-05 DIIS; @UHF iter 6: -149.64843348113254 -2.53738e-04 1.48299e-04 DIIS | @UHF iter 8: -149.59059723201250 -1.18498e-07 1.30989e-05 DIIS; @UHF iter 7: -149.64844078492737 -7.30379e-06 2.61364e-05 DIIS | @UHF iter 9: -149.59059723617770 -4.16520e-09 2.01100e-06 DIIS; @UHF iter 8: -149.64844097370053 -1.88773e-07 5.78597e-06 DIIS | @UHF iter 10: -149.59059723621087 -3.31681e-11 1.77929e-07 DIIS; @UHF iter 9: -149.64844098588614 -1.21856e-08 1.04113e-06 DIIS | @UHF iter 11: -149.59059723621158 -7.10543e-13 3.00170e-08 DIIS",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/322#issuecomment-200629470:385,Energy,Energy,385,https://psicode.org,https://github.com/psi4/psi4/issues/322#issuecomment-200629470,2,['Energy'],['Energy']
Energy Efficiency,@dgasmith: I realized that there was a typo in the fix that I suggested and when I corrected it the issue persisted. I think the current (and the previous) procedures were correct and that's because if I take the MOs from psi4's CASSCF and run FCI in forte I get the correct energy and the orbitals are semi-canonical. So I suspect the problem is in this snippet of code where we compute the energy after semi-canonicalization:; https://github.com/psi4/psi4/blob/1662c5d7669e80eb32864e62e73df41d929621eb/psi4/driver/procrouting/mcscf/mcscf_solver.py#L358-L372; Am I missing some step here?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1847#issuecomment-598747236:275,energy,energy,275,https://psicode.org,https://github.com/psi4/psi4/pull/1847#issuecomment-598747236,2,['energy'],['energy']
Energy Efficiency,"@dgasmith: The problems was with modifying the orbitals. In the old code I created a unique unitary U and used it to rotate the space ""ROT"", but that caused the energy to differ. In this solution I rotate each space separately (""DOCC"", ""ACT"", ""VIR""). However, I am not sure why ""ROT"" did not work. How is this space defined? Any idea?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1847#issuecomment-597266781:161,energy,energy,161,https://psicode.org,https://github.com/psi4/psi4/pull/1847#issuecomment-597266781,1,['energy'],['energy']
Energy Efficiency,"@fevangelista correct, future plan is to use Bohr. An ang input example is https://github.com/psi4/psi4/pull/1351/files#diff-87670b13951f7da58a7e608cbf6309a1 . I did try to keep the current tie-units-to-Mol pattern, but it didn't work easily. And with the charges passed in as argument, it seemed disconnected from Mol. Too objectionable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1881#issuecomment-625580521:256,charge,charges,256,https://psicode.org,https://github.com/psi4/psi4/issues/1881#issuecomment-625580521,1,['charge'],['charges']
Energy Efficiency,"@fevangelista, @andysim : It would be great if all post-HF codes relied on DPD. This way, we could replace IWL with something more efficient easily.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/296#issuecomment-192782077:131,efficient,efficient,131,https://psicode.org,https://github.com/psi4/psi4/pull/296#issuecomment-192782077,1,['efficient'],['efficient']
Energy Efficiency,"@fevangelista, I noticed that neither `psimrcc` nor `psimrcc_scf` are in the table of eligible arguments to `energy()` that generates this page: http://psicode.org/psi4manual/master/energy.html . Are they excluded for a reason or would you like them added?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/360#issuecomment-212550131:109,energy,energy,109,https://psicode.org,https://github.com/psi4/psi4/pull/360#issuecomment-212550131,2,['energy'],['energy']
Energy Efficiency,"@gruckion, you're running `energy('mp2'`, so you'll need a `df_basis_mp2` block identical to the `df_basis_cc` one. With `df_basis_scf`, `df_basis_mp2`, and `df_basis_cc`, that should cover most everything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626#issuecomment-281382831:27,energy,energy,27,https://psicode.org,https://github.com/psi4/psi4/issues/626#issuecomment-281382831,1,['energy'],['energy']
Energy Efficiency,@hokru Apologies for the copy-paste mistake. I fixed it. Could it be that the unit in the molecule block also affects the unit of the external charge coordinates in the input and in the output (despite the fact that the output mentions a.u. in both cases)? That could explain the differences.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1881#issuecomment-625234647:143,charge,charge,143,https://psicode.org,https://github.com/psi4/psi4/issues/1881#issuecomment-625234647,1,['charge'],['charge']
Energy Efficiency,"@hokru For ωB97M-V, it doesn't seem to be possible to change the ω parameter directly from the psithon interface—there's a check at https://github.com/psi4/psi4/blob/d9093c75c71c2b33fbe86f32b25d138675ac22eb/psi4/src/psi4/libfunctional/LibXCfunctional.cc#L218 that disallows it. I want to be on the safe side and not manually change it without knowing why the limitation is put in place. . As for DFT_VV10_POSTSCF—it does make things faster by quite a bit, but when I move to nonstandard values of (b,c), it yields deviations ≥ 0.1 Hartree in energy calculations (e.g. using the above geometry with b = 0.5 and c unchanged, I go from -456.38 to -456.17 when I turn on DFT_VV10_POSTSCF).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641#issuecomment-1194156054:542,energy,energy,542,https://psicode.org,https://github.com/psi4/psi4/issues/2641#issuecomment-1194156054,1,['energy'],['energy']
Energy Efficiency,"@hokru Mathematically speaking, you should never get a non-symmetric solution. But, as @dgasmith says, it depends on the math library, whether or not there is tiny numerical noise introduced, etc. Since the computer uses finite precision arithmetic, there is always a chance that noise messes up things. . I investigated this case a little today, since it captured my interest. What's going on is actually even more tricky than has been suggested so far. Normally, we don't like these symmetry-breaking solutions because they do bad things, like give unphysical dipole moments. For example, the symmetry-breaking UHF solution for NO3 radical gives very unequal charges for the O atoms [-0.0867 -0.3789 -0.3789] compared to the symmetric UHF solution [-0.2990 -0.2990 -0.2990]. I think most people would agree the asymmetric solution is just wrong, even though it has a lower energy [-278.774 819 vs -278.757 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert ar",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349737355:661,charge,charges,661,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355,2,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"@hokru Thank you for giving it a try! . Yes, with my fixes it completed MP2 ; DF-MP2 Total Energy (a.u.) : -419.66275196620722; wrote out recalculated T2_2 (IA|JB) amplitudes in mp3_WmnijT2AA, ; succeeded through mp3_WmbejT2,; and then died in mp3_WabefT2. I omitted diffuse function for debugging only. All research work is with aug-cc-pVXZ or zapa-nr. The latter, while not as diffuse as aug-cc-pVXZ, gave me very nice basis set convergence for E2. For this system, mar-cc-pV5Z was actually not an obvious improvement over aug-cc-pVQZ ... Proton affinity with the latter was closer to aug-cc-pV5Z result compared to proton affinity with mar-cc-pV5Z.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561974472:91,Energy,Energy,91,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561974472,1,['Energy'],['Energy']
Energy Efficiency,"@hokru, thanks for the reference. It would seem based on that paper that we should:; - allow the `roos-ano-[dt]z` basis sets into CBS as well; - are the `pcseg-[0-4]` basis sets (double- to six-zeta, I believe) the segmented versions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/963#issuecomment-381392778:961,power,power,961,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778,1,['power'],['power']
Energy Efficiency,@jeffschriber Thanks for the quick fix this unblocks a lot of work! and mbis charges should be fine for now thanks.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299#issuecomment-985342525:77,charge,charges,77,https://psicode.org,https://github.com/psi4/psi4/issues/2299#issuecomment-985342525,1,['charge'],['charges']
Energy Efficiency,"@jgonthier In the latest SAD PR I reduced the tolerance to `1.e-2` up from `1.e-4`. ""Failing"" is a strong word here as the eigenvalue is still positive. Im guessing this is just small flutter in the Davidson iterations which are not converged strongly to begin with.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/385#issuecomment-224908411:34,reduce,reduced,34,https://psicode.org,https://github.com/psi4/psi4/issues/385#issuecomment-224908411,1,['reduce'],['reduced']
Energy Efficiency,"@jgonthier Thanks a lot for your effort. Now I could calculate each sapt0 term separately. ; But when I tried to use restart option ( energy('sapt0',restart_file=['f1','f2'])), programs runs as usual, scf doesn't finish in 1 step. How to fix this problem ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/51#issuecomment-179278518:134,energy,energy,134,https://psicode.org,https://github.com/psi4/psi4/issues/51#issuecomment-179278518,1,['energy'],['energy']
Energy Efficiency,"@jturney I have move `dK` allocation to `init`. Moving `dzn` doesn't make sense: it is small (`double[6]`) and constant size, so it is more efficient if left on the stack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598172:140,efficient,efficient,140,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598172,1,['efficient'],['efficient']
Energy Efficiency,"@jturney It is true if you have `timer` and `#pragma omp parallel` both in the plugin.; However, if I have; ```; void timer_on(const char *key, int thread_rank); {; ...; if (thread_rank != 0 and thread_rank != omp_get_thread_num()) {; printf(""\nTimer_on::Thread rank does not agree! arg=%d, %d=omp_get_thread_num()"",thread_rank, omp_get_thread_num());; }; ...; }; ```; in `/psi4/src/psi4/libqt/timer.cc`, and a plugin with; ```; double SCF::compute_energy(); {; timer_on(""energy"");. #pragma omp parallel; for (int a = 0; a < 100; a++); {; timer_on(""inner"",omp_get_thread_num());; printf(""Hello World from thread = %d\n"", omp_get_thread_num());; timer_off(""inner"",omp_get_thread_num());; } ; timer_off(""energy"");; return 0.0;; }; ```; It will print:; ```; Timer_on::Thread rank does not agree! arg=2, 0=omp_get_thread_num(); ```; That's what I don't understand here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/743#issuecomment-308820958:472,energy,energy,472,https://psicode.org,https://github.com/psi4/psi4/pull/743#issuecomment-308820958,2,['energy'],['energy']
Energy Efficiency,"@kaljugit It goes past the MP2 printout so it might work.; Anion without diffuse functions, though. Are you sure? `fno-mp3/mar-cc-pV5Z` should work very well with the 4-fold symmetry, btw. Only the integral writing after the scf is painfully slow (single-threaded). ```; set globals {; basis mar-cc-pV5Z; freeze_core true; ints_tolerance 1e-11; s_tolerance 1e-9; }; energy('fno-mp3'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561722952:366,energy,energy,366,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561722952,1,['energy'],['energy']
Energy Efficiency,"@kis-gergely-dzsi . > I have looked into your suggestion about enabling and disabling BrianQC with an input file option instead of (or in addition to) an env var, and I think there is a minor issue here. Normally, BrianQC's initialization should happen once, preferably during Psi4's own initialization. But, due to the way Psi4 is normally used from Python (first doing import psi4, and then calling psi4.set_options()), the input options are not yet available when psi4_python_module_initialize() is called (from which brianAPIInit() had been called until now). > As far as I could tell, there is no function that normally runs between setting the options and performing a calculation. So, to enable BrianQC through an input option, I have two choices: either I add the check-and-initialize to the options setter method itself (py_psi_set_global_option_int()), or I add it to every high-level computation function (like energy() and optimize()) that could potentially use BrianQC. Which way would be better in your opinion?. Sorry, I only noticed the docs query and not this one. Looking through the code you've added I think I understand your difficulty. It looks like right now, initialization brianAPIInit() sets briancookie boolean, and that setting governs in the SCF code and otherwise whether brianqc is used or bypassed. So in the course of an input file with several togglings of brianqc on/off, then brianqc gets initiated and torn down multiple times. Is this correct? And is the multiple teardowns wanted? It's fine to add a hook to each of the major fns like energy/gradient/hessian/properties. But could there instead be a single initiation, then checking the option `options.get_bool(""brianqc"");` as needed in the scf, grid, etc.?. ```; import psi4 # brianqc init happens alongside psi4 init. psi4.geometry(A). psi4.set_options({'brianqc': False}). energy('b3lyp/cc-pvdz') # runs all CPU. psi4.set_options({'brianqc': True}). energy('b3lyp/cc-pvdz') # runs w/GPU; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1893#issuecomment-659131975:922,energy,energy,922,https://psicode.org,https://github.com/psi4/psi4/pull/1893#issuecomment-659131975,4,['energy'],['energy']
Energy Efficiency,"@loriab @PeterKraus @andysim Thank you all for valuable advice!. I've computed 9 points as @loriab suggested:; ```; r=[1.08, 1.085, 1.09, 1.095, 1.1, 1.105, 1.11, 1.115, 1.12]; eng=[-108.679699, -108.679654, -108.6794818, -108.679188, -108.6787779, -108.6782569, -108.6776548, -108.6769276, -108.6761047]; ```. Fit now looks much better, as can be seen in the file [fit.pdf](https://github.com/psi4/psi4/files/3082472/fit.pdf). The results:; ```; Equilibrium Energy -108.67970105590722 Hartrees; Gradient 0.00000000002038; Quadratic Force Constant 24.8569214 MDYNE/A; Cubic Force Constant -505.1574283 MDYNE/A**2; Quartic Force Constant 17972.8369840 MDYNE/A**3. re = 1.080957 A check: 1.080957; r0 = 1.089667 A; we = 2454.7194 cm-1; wexe = -10.4449 cm-1; nu = 2475.6093 cm-1; ZPVE(nu) = 1229.9709 cm-1; Be = 2.0606 cm-1; B0 = 2.0278 cm-1; ae = 0.0656 cm-1; De = 0.0000058 cm-1; ```. seem quite good, except `wexe`, `ae` and `De`. Let's take [this paper](https://www.researchgate.net/publication/257738988_Spectroscopic_constants_and_molecular_properties_of_X2Sg_A2Pu_B2Su_and_D2Pg_electronic_states_of_the_N2_ion) as a reference, or let's see a summary of their results compared with results from other publications; ![header](https://user-images.githubusercontent.com/8162544/56172997-1b82fa80-5fec-11e9-970f-cc318f6e422d.png); ![sigmau+_reference](https://user-images.githubusercontent.com/8162544/56172944-fa220e80-5feb-11e9-9dc1-48b50ab25730.png). Apart from `wexe` and `ae`, which are clearly different from the results of the paper, `De` has a value of `0.0000058 cm-1 = 7.1910832e-10 eV`, which is significantly different from the reference results. What am I missing now?. And thank you for your help once more!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483463166:459,Energy,Energy,459,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483463166,1,['Energy'],['Energy']
Energy Efficiency,"@loriab @PeterKraus I agree that the `energy('hf/cc-pvdz', mdi=True)` input format is the way to go. The MDI Standard doesn't include commands for sending information about method type or related parameters, since there are so many possible ways of representing this information in various codes (i.e., Gaussian codes, plane wave codes, molecular dynamics codes, etc.). Calling energy with an `mdi` argument seems like the most sensible way for the user to set this information in Psi4. I've made the change in 403e742.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-642818175:38,energy,energy,38,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-642818175,2,['energy'],['energy']
Energy Efficiency,"@loriab @andysim Can you guys check into the EFP failure when you get a moment, not completely sure what to do about that one. If we *only* have EFP frags:; ```; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 83, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib/psi4/driver/driver.py"", line 427, in energy; molecule.update_geometry(); RuntimeError: ; Fatal Error: Molecule::geometry(): molecule does not contain any atoms. Try calling `molecule.update_geometry(); to ensure the molecule is properly constructed.; Error occurred in file: /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/molecule.cc on line: 541; The most recent 5 function calls were:; psi::PsiException::PsiException(std::string, char const*, int); psi::Molecule::geometry() const; psi::Molecule::set_full_point_group(double); psi::Molecule::update_geometry(); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/760#issuecomment-317918961:493,energy,energy,493,https://psicode.org,https://github.com/psi4/psi4/pull/760#issuecomment-317918961,1,['energy'],['energy']
Energy Efficiency,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-371075180:665,energy,energy,665,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180,1,['energy'],['energy']
Energy Efficiency,"@loriab @jeffschriber Hi is there any update on this issue as it is breaking a workflow I have where I calculate MBIS charges using wavefunctions stored in QCArchive the attached script shows how this works and results in the following error when using psi4-1.4.1.; ```; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; Computing free-atom volumes; Traceback (most recent call last):; File ""charges_from_wavefunction.py"", line 72, in <module>; psi4.oeprop(hf_wfn, ""MBIS_CHARGES""); File ""/Users/joshua/mambaforge/envs/test_psi4/lib/python3.7/site-packages/psi4/driver/p4util/util.py"", line 72, in oeprop; free_atom_volumes(wfn); ; File ""/Users/joshua/mambaforge/envs/test_psi4/lib/python3.7/site-packages/psi4/driver/p4util/prop_util.py"", line 54, in free_atom_volumes; current_en = wfn.scalar_variable('CURRENT ENERGY'); RuntimeError: ; Fatal Error: Wavefunction::scalar_variable: Requested variable CURRENT ENERGY was not set!. Error occurred in file: /Users/github/builds/conda-builds/psi4-multiout_1633712094436/work/psi4/src/psi4/libmints/wavefunction.cc on line: 1335; The most recent 5 function calls were:; ```. [charges_from_wavefunction.txt](https://github.com/psi4/psi4/files/7624873/charges_from_wavefunction.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299#issuecomment-982487534:118,charge,charges,118,https://psicode.org,https://github.com/psi4/psi4/issues/2299#issuecomment-982487534,3,"['ENERGY', 'charge']","['ENERGY', 'charges']"
Energy Efficiency,"@loriab Could potentially be [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/df_helper.cc#L1335) line. Could you change the schedule to simply `schedule(static)`? Either way we now have a reproducible error that can be fixed, thanks so much!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-384625713:148,schedul,schedule,148,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384625713,4,['schedul'],['schedule']
Energy Efficiency,"@loriab I have looked into your suggestion about enabling and disabling BrianQC with an input file option instead of (or in addition to) an env var, and I think there is a minor issue here. Normally, BrianQC's initialization should happen once, preferably during Psi4's own initialization. But, due to the way Psi4 is normally used from Python (first doing `import psi4`, and then calling `psi4.set_options()`), the input options are not yet available when `psi4_python_module_initialize()` is called (from which `brianAPIInit()` had been called until now). As far as I could tell, there is no function that normally runs between setting the options and performing a calculation. So, to enable BrianQC through an input option, I have two choices: either I add the check-and-initialize to the options setter method itself (`py_psi_set_global_option_int()`), or I add it to every high-level computation function (like `energy()` and `optimize()`) that could potentially use BrianQC. Which way would be better in your opinion?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1893#issuecomment-654282045:917,energy,energy,917,https://psicode.org,https://github.com/psi4/psi4/pull/1893#issuecomment-654282045,1,['energy'],['energy']
Energy Efficiency,"@loriab I just ran the original branch of Bozkaya's and confirmed that all six pytest failures, where `MP2 SINGLES ENERGY` is zero for MP3 calculations on top of ROHF references, originate there. The test failures do not appear for MP2 computations, so this is a regression in Bozkaya's fork. The 98% is confirmed. Keep me in the loop. For behnle, this means that you don't need to worry about the test failures. _Someone_ will deal with it, the main devs just need to figure out who that is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2354#issuecomment-974321512:115,ENERGY,ENERGY,115,https://psicode.org,https://github.com/psi4/psi4/pull/2354#issuecomment-974321512,1,['ENERGY'],['ENERGY']
Energy Efficiency,"@loriab I tested the new c-f packages and the conda dep solving just works out of the box (even in a complex and large conda env). So far all my test suite (single point energy) works perfectly. Thanks again for the effort!. On my side, I think that issue can be closed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1527993988:170,energy,energy,170,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1527993988,1,['energy'],['energy']
Energy Efficiency,"@loriab I'll try to do it, but, as we can see, the grid is already computed with 0.05A step - that should be enough for an efficient interpolation, in my opinion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483058661:123,efficient,efficient,123,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483058661,1,['efficient'],['efficient']
Energy Efficiency,@loriab It looks like I forget to reimplement in driver. My plan was to move it to energy/gradient/etc so that it would be universal. I need to add MOWriter to `proc/scf_helper` and probably `proc/mcscf` as well. Should I just add it to this PR?. Also need to look into MCSCF failings on distelli. I dont understand why its both random and mac only.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/472#issuecomment-249191367:83,energy,energy,83,https://psicode.org,https://github.com/psi4/psi4/pull/472#issuecomment-249191367,1,['energy'],['energy']
Energy Efficiency,"@loriab It might be just because I recently updated my workstation and I don't have a recent version of psi4 compiled. Psi4 1.1 runs energy('cisd') through fnocc.; ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.1 release. Git: Rev {} zzzzzzz . R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,; A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. in press (2017).; (doi: 10.1021/acs.jctc.7b00174). -----------------------------------------------------------------------. Psi4 started on: Wednesday, 25 October 2017 09:00PM. Process ID: 25797; PSIDATADIR: /usr/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; -1 1; Sc -1.7965316343 1.5540711104 0.6577410753; Li -3.8411511549 1.3293390591 3.1887862983; Li 0.7306020220 3.4504713202 1.4667051175; Li -0.7149951920 -1.4193774032 -0.1334886497; Li -3.3605940408 2.8558659134 -1.8910238414; }. set basis aug-pcseg-0; set reference rhf; set ci_maxiter 100; set scf_type pk; set nat_orbs true. scf_e, scf_wfn = energy('scf', return_wfn = True); ci_e, ci_wfn = energy('cisd', ref_wfn = scf_wfn, return_wfn = True); --------------------------------------------------------------------------. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:37 2017. => Loading Basis Set <=. Name: AUG-PCSEG-0; Role: ORBITAL; Keyword: BASIS; atoms 1 entry SC line 478 file /usr/share/psi4/basis/aug-pcseg-0.gbs ; atoms 2-5 entry LI line 30 file /usr/share/psi4/basis/aug-pcseg-0.gbs . ------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:133,energy,energy,133,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['energy'],['energy']
Energy Efficiency,"@loriab JavaScript is gone and the builds are green. I'm stashing the converged response vectors in the `Wavefunction` too, this should enable the computation of other transition quantities, if desired.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-634602868:46,green,green,46,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-634602868,1,['green'],['green']
Energy Efficiency,"@loriab Problem is, the FittingMetric didn't have the cutoff passed to it. FittingMetric therefore defaulted back to a cutoff of `1.e-10` in the power for the past 3 years.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1472#issuecomment-454239307:145,power,power,145,https://psicode.org,https://github.com/psi4/psi4/pull/1472#issuecomment-454239307,1,['power'],['power']
Energy Efficiency,"@loriab Thanks for these comments!. I now have some simple documentation [for running Psi4 with MDI](https://molssi.github.io/MDI_Library/html/mdi_ecosystem.html#ecosystem_psi4) as part of the MDI_Library documentation pages. Its still very basic, but thankfully there isn't much more to the process than what is described in the [general MDI launch documentation](https://molssi.github.io/MDI_Library/html/library_page.html#library_launching_sec). I've tried to work on adding some how-to-use documentation to Psi4 proper, but I can't seem to get my Sphinx environment set up correctly:. ```; Building html documentation ...; Running Sphinx v2.2.0; making output directory... done; /Users/tbarnes/anaconda3/envs/psi4/lib/python3.7/site-packages/sphinx/events.py:103: RemovedInSphinx30Warning: autodoc_default_flags is now deprecated. Please use autodoc_default_options instead.; results.append(callback(self.app, *args)). Theme error:; no theme named 'cloud' found, inherited by 'sphinx_psi_theme'; make[3]: *** [sphinxman] Error 2; make[2]: *** [doc/sphinxman/CMakeFiles/sphinxman.dir/all] Error 2; make[1]: *** [doc/sphinxman/CMakeFiles/sphinxman.dir/rule] Error 2; make: *** [sphinxman] Error 2; ```. This is despite having a conda installation of `cloud_sptheme`. Regarding the `mdi('hf/cc-pvdz')` command, I would be fine with something more like your suggestion of `energy('hf/cc-pvdz', mdi=True)`. One alternative possibility would be to say that if the `--mdi` runtime option is provided, the mdi code is just automatically called after everything in the input file has executed; this approach would still require some mechanism of setting the method used, of course, and I have no idea whether this would fit into the broader Psi4 design philosophy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-533313015:1373,energy,energy,1373,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-533313015,2,['energy'],['energy']
Energy Efficiency,"@loriab [This line](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1382) for hess-by-energies and [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1529) for hess-by-grad. The mechanism is the same in both cases. The reinterpretation-forbidden-molecule eventually goes to the density-fitted energy/gradient step. To force the computation to be done in c1, the scf helper gets called in the [energy case](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1591) and in the [gradient case](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1669). Now the two mechanisms unify. The atom_/full_atom_ mirroring gets broken at the [clone step](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1436), which would be re-synced during [update geometry](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1440) if not for that forbidding of reinterpretation. We might be able to forgive reorienting in the case of hess-from-energies, but I don't see a way for difference of gradients. We need all our gradient vectors to be in the same coordinate system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108#issuecomment-408954158:334,energy,energy,334,https://psicode.org,https://github.com/psi4/psi4/pull/1108#issuecomment-408954158,2,['energy'],['energy']
Energy Efficiency,"@loriab and @tovrstra: Can we find a compromise where we keep the interface consistent but make sure that the inner workings of C++ classes is all in a.u.? I agree that having the logic deep down the code is not the right way to go. I would keep the current automatic conversion for several reasons:; 1. **Continuity**. People are already using it, so switching could create some challenges since one would have to be careful when setting up computations for different version of psi4; 1. **Potential confusion**. The potential for confusing bohr/ang with the external field is greater than that of confusing bohr/ang in the molecule geometry. For molecules if one confuses bohr vs. ang you easily run into convergence problems or get nonsensical results. But for the external field corrections it's not obvious, unless one does some testing. We, for example, could entirely miss this change in our computations.; 1. **Practicality**. We use the external charges and in our typical workflow we prepare a geometry for a lattice of atoms and then separate the QM from the MM region. It's just simpler to keep everything consistent in one set of units. I have to say, that from the user perspective, the current way we handle the input is not ideal. I am not familiar with QMMM codes, but what would be the most convenient input format is something like we have for the molecular fragments:; ```; molecule {; C ; O ; <some delimiter>; Q X1 Y1 Z1 CHARGE1; Q X2 Y2 Z2 CHARGE2; }; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1881#issuecomment-625885345:955,charge,charges,955,https://psicode.org,https://github.com/psi4/psi4/issues/1881#issuecomment-625885345,2,['charge'],['charges']
Energy Efficiency,"@loriab full tests are running, although I have the default libint which is handicapped. Your failures were most likely caused by #1451: since the occupation numbers weren't included, e.g. the Sc atom would have been calculated in the charge state -15(!).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451553569:235,charge,charge,235,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451553569,1,['charge'],['charge']
Energy Efficiency,"@loriab the issue is not the multiple invocation. Whatever method I use (davidson, olsen, ...), whatever start guess vector, etc: in ALL cases (except exact diagonalization), detci finds an impossible energy value. The way the OPDM is currently being build requires information from the davidson algorithm. It can be work around but the current code doesn't allow you to build an opdm with rsp.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/175#issuecomment-137667288:201,energy,energy,201,https://psicode.org,https://github.com/psi4/psi4/issues/175#issuecomment-137667288,1,['energy'],['energy']
Energy Efficiency,"@loriab, #843 is related but not fixed: see attached calculations with (a relatively old) master and patched versions:; [master.txt](https://github.com/psi4/psi4/files/2246477/master.txt); [patched.txt](https://github.com/psi4/psi4/files/2246478/patched.txt); ```; pk@dream:~/psi4/tests/ecp_fix_tests/issue-843::grep ""Final E"" master.txt ; @DF-RHF Final Energy: -594.38702051330188; @DF-RHF Final Energy: -297.22774750033523; pk@dream:~/psi4/tests/ecp_fix_tests/issue-843::grep ""Final E"" patched.txt ; @DF-RHF Final Energy: -594.38702051366886; @DF-RHF Final Energy: -297.22774750056516; ```; While the current patch fixes _a_ bug, it doesn't fix _the_ bug. I'll have a look if I can figure out why ghosts still posess ECP's.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1109#issuecomment-409309750:354,Energy,Energy,354,https://psicode.org,https://github.com/psi4/psi4/pull/1109#issuecomment-409309750,4,['Energy'],['Energy']
Energy Efficiency,"@loriab, I would have thought DETCI ROHF MP2 would agree with other codes,; but I can think of at least a couple little reasons it might not. I should; check into this next couple weeks (help me remember). David. On Mon, Mar 7, 2016 at 5:37 AM, Lori A. Burns notifications@github.com; wrote:. > @bozkaya https://github.com/bozkaya, regarding READ_SCF_3INDEX for CD; > calcs, I'll just believe you. For this (#245 (comment); > https://github.com/psi4/psi4/issues/245#issuecomment-186302823); > comment, though, for DF calcs, I'm not seeing that that keyword can make a; > difference. Toggling its presence and value in the below makes no; > difference to the energies. So fyi, I'm not implementing the advice in your; > comment for now.; > ; > mp2totg = psi4.Matrix(2, 3); > mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028301835],; > [ 0.0000000000, 0.0000000000, -0.0028301835]]; > mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028193375],; > [ 0.0000000000, 0.0000000000, -0.0028193375]]; > mp2totg.set(mp2tot_vals); > ; > molecule hf {; > H; > F 1 0.917; > }; > ; > set basis cc-pvdz; > set scf_type pk; > set mp2_type df; > set points 5; > set freeze_core false; > set reference rhf; > set READ_SCF_3INDEX true #FALSE # TOGGLE; > ; > set qc_module dfmp2 #occ # TOGGLE; > energy('mp2'); > ; > compare_values(-100.0194112690226973, get_variable('scf total energy'), 6, 'scf'); > compare_values(-0.203779972647527, get_variable('mp2 correlation energy'), 6, 'mp2corl'); > compare_values(-100.2231912416702215, get_variable('mp2 total energy'), 6, 'mp2tot'); > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/245#issuecomment-193199034.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-193492980:1280,energy,energy,1280,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-193492980,4,['energy'],['energy']
Energy Efficiency,"@loriab: I think I agree with you but perhaps @psi-rking can help disentangle this. This is the code in `findidf/fd_freq_0.cc`:. ```; if (print_lvl >= 3) {; outfile->Printf(""\n\tForce Constants for irrep %s in mass-weighted, "", irrep_lbls[h]);; outfile->Printf(""symmetry-adapted cartesian coordinates.\n"");; mat_print(H_irr[h], salcs_pi[h].size(), salcs_pi[h].size(), ""outfile"");; }. // diagonalize force constant matrix; int dim = salcs_pi[h].size();; double *evals = init_array(dim);; double **evects = block_matrix(dim, dim);. sq_rsp(dim, dim, H_irr[h], evals, 3, evects, 1e-14);. // Build Bu^1/2 matrix for this irrep; SharedMatrix B_irr_shared = salc_list.matrix_irrep(h);; double **B_irr = B_irr_shared->pointer();. for (int i = 0; i < dim; ++i); for (int a = 0; a < Natom; ++a); for (int xyz = 0; xyz < 3; ++xyz); B_irr[i][3 * a + xyz] /= sqrt(mol->mass(a));. double **normal_irr = block_matrix(3 * Natom, dim);; C_DGEMM('t', 'n', 3 * Natom, dim, dim, 1.0, B_irr[0], 3 * Natom, evects[0],; dim, 0, normal_irr[0], dim);. if (print_lvl >= 3) {; outfile->Printf(""\n\tNormal coordinates (non-mass-weighted) for irrep %s:\n"", irrep_lbls[h]);; eivout(normal_irr, evals, 3 * Natom, dim, ""outfile"");; }; ```. It looks to me that contrary to what the print functions say, we first compute the Hessian (non-mass weighted), diagonalize it, and then mass-weight and symmetrize the eigenvectors?. @loriab, the normal coordinates that we print out now are not normalized. It's unclear what the Molden requirement are when it comes to mass-weighting or normalization.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/644#issuecomment-286474443:271,adapt,adapted,271,https://psicode.org,https://github.com/psi4/psi4/pull/644#issuecomment-286474443,1,['adapt'],['adapted']
Energy Efficiency,"@loriab: This sounds good --- I think die+traceback is probably the right; default if the exception isn't caught. On Wed, Aug 8, 2018 at 6:02 PM Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>; >; > Oh, and if an error's raised but not caught, it just shows the traceback; > and triggers coffee:; >; > PsiException: Could not converge SCF iterations in 4 iterations.; >; > Failed to converge.; >; > Traceback (most recent call last):; > File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:715,energy,energy,715,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,2,['energy'],['energy']
Energy Efficiency,"@psi-rking . I have the IRC mostly fixed, but the final step is difficult to control. For comparison, have the energies that result from the exact same job being run six times:. ```@IRC ----------------------------------------------; @IRC **** IRC Report ****; @IRC ----------------------------------------------; @IRC Step Energy Change in Energy ; @IRC ----------------------------------------------; @IRC 0 -148.750562902668 -148.750562902668; @IRC 1 -148.750914020851 -0.000351118183; @IRC 2 -148.751921813112 -0.001007792261; @IRC 3 -148.753458618899 -0.001536805787; @IRC 4 -148.755338547024 -0.001879928125; @IRC 5 -148.757353153707 -0.002014606684; @IRC 6 -148.759306859301 -0.001953705594; @IRC 7 -148.761045995024 -0.001739135723; @IRC 8 -148.762474848946 -0.001428853922; @IRC 9 -148.763557315982 -0.001082467035; @IRC 10 -148.764306952597 -0.000749636616; @IRC 11 -148.764771570120 -0.000464617522; @IRC 12 -148.765017199697 -0.000245629578; @IRC 13 -148.765113810944 -0.000096611247; @IRC 14 -148.765124130978 -0.000010320034; @IRC 15 -148.764729734758 0.000394396220; @IRC ----------------------------------------------. @IRC ----------------------------------------------; @IRC **** IRC Report ****; @IRC ----------------------------------------------; @IRC Step Energy Change in Energy ; @IRC ----------------------------------------------; @IRC 0 -148.750562902668 -148.750562902668; @IRC 1 -148.750914020605 -0.000351117937; @IRC 2 -148.751921813098 -0.001007792493; @IRC 3 -148.753458618748 -0.001536805651; @IRC 4 -148.755338547153 -0.001879928405; @IRC 5 -148.757353153742 -0.002014606589; @IRC 6 -148.759306859354 -0.001953705612; @IRC 7 -148.761045994942 -0.001739135587; @IRC 8 -148.762474848816 -0.001428853874; @IRC 9 -148.763557315945 -0.001082467129; @IRC 10 -148.764306952816 -0.000749636871; @IRC 11 -148.764771569962 -0.000464617146; @IRC 12 -148.765017199740 -0.000245629777; @IRC 13 -148.765113810834 -0.000096611095; @IRC 14 -148.765124130995 -0.000010320161; @IRC 15",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-351195913:324,Energy,Energy,324,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-351195913,2,['Energy'],['Energy']
Energy Efficiency,"@psi-rking @AlexHeide ping. I don't know if I've loaded all the details, but a table like below may organize discussion (or at least provide something to write a test against) even if my rightmost column is wrong. cmd | bsse_type | return_total_data | performs; ---- | ---- | ---- | ----; energy | cp | true | 5 ene, return CP tot; energy | cp | false (default) | 3 ene, return CP IE; energy | cp, uncp | true | 5 ene, return CP tot; energy | cp, uncp | false (default) | 5 ene, return CP IE; gradient | cp | true | 5 grad, return CP tot; gradient | cp | false (default) | 3 grad, return CP IE; gradient | cp, uncp | true | 5 grad, return CP tot; gradient | cp, uncp | false (default) | 5 grad, return CP IE. users aren't calling `gradient(... bsse_type)` directly -- either `optimize()` or an optimizer program are making that call, and I think the latter can hard-wire the correct choice they need (5th line?).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869918783:289,energy,energy,289,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869918783,4,['energy'],['energy']
Energy Efficiency,"@psi-rking, great, thanks for the prototype. Maybe put your post at https://github.com/psi4/psi4/issues/402 and mention it in the newdev slack channel. Also,; * is there anything particular to MP2 or is that just what you tested against?; * general fyi is that there's multi-QC-package vib outputs in the isotope-1 test cases that also may have some intensities; * how rigorous is that c1/no_com/no_reorient req. in your input file. Absolutely required to get the right charge origin? Or could we run with symmetry if we knew how to transform the Hessian or perturbation vectors into better frame? Is it different for charged species?; * why ""roa""? Just because it brings dipole derivatives for free?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/347#issuecomment-347215160:470,charge,charge,470,https://psicode.org,https://github.com/psi4/psi4/issues/347#issuecomment-347215160,2,['charge'],"['charge', 'charged']"
Energy Efficiency,"@psi-rking, my concern is your insistence that the rot SALCs _aren't_ needed at non-stationary geometries (""3 rotational degrees for which the energy is invariant"", ""don't have to do the extra displacements"") vs. Stanton's insistence that they _are_ (""At a stationary point on the potential energy surface, both options will give equivalent harmonic force fields, but OFF [retains the rotational degrees of freedom] should be used at non-stationary points."" Since pyvib2 has to start from Cartesian Hessians (findif or anal.), I'm just trying to gauge what situations the former is valid for.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884#issuecomment-359053844:143,energy,energy,143,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359053844,2,['energy'],['energy']
Energy Efficiency,"@rlaplaza but the issue is exactly as I suspected. Look at the log file:; ```. Final Occupation by Irrep:; A1 A2 B1 B2 ; DOCC [ 0, 0, 0, 0 ]; SOCC [ 0, 0, 0, 0 ]; NA [ 0, 0, 0, 0 ]; NB [ 0, 0, 0, 0 ]. @DF-UHF Final Energy: 9.36090161113092; ```. There are **no** electrons in the calculation. Getting zero contributions from the energy just doesn't happen otherwise, usually you just get nonsense.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692#issuecomment-518786574:215,Energy,Energy,215,https://psicode.org,https://github.com/psi4/psi4/issues/1692#issuecomment-518786574,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"@rmcgibbo, I made a [PR](https://github.com/rmcgibbo/psi4public/pull/1) to your PR so that variable labels stay consistent. This/your PR also needs rebasing. So please either (a) pull in my PR and rebase this one or (b) let me know, and I'll rebase my branch and do a PR (with your commit) directly. Thanks for the contribution kick-starting our Wavefunction.variables_ work. Btw, the git history rewrite this fall reduced repo size by 90%. If you wanted much quicker clones, you could delete your fork and re-fork.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/643#issuecomment-284940969:415,reduce,reduced,415,https://psicode.org,https://github.com/psi4/psi4/pull/643#issuecomment-284940969,1,['reduce'],['reduced']
Energy Efficiency,"@robertodr , #668 corrected the nuclear repulsion energy, which didn't feel the effect of a field before (and it should). I missed the fact that there's a PCM test that uses the `perturb_h` machinery, so I didn't fix the test. Sorry about that. [This](https://github.com/psi4/psi4/blob/master/tests/props1/input.dat) test does essentially the same thing that you do in the dipole test. Because the NRE now feels the applied field, you can just remove the nuclear_dipole terms entirely (that function still exists, but now lives in molecule). The `perturb_with` syntax will work, but will be deprecated. Please change it to `perturb_with dipole` and `perturb_dipole [0, 0, $l]` as in the test case that I linked. Sorry for the confusion!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-291542176:50,energy,energy,50,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-291542176,1,['energy'],['energy']
Energy Efficiency,"@robertodr: I think the only real difference in the PR for the cc-pVDZ basis is a change in the exponent of a d function. No d orbitals are occupied in Mg, so an energy difference would show up only in the correlation energy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/728#issuecomment-308229047:162,energy,energy,162,https://psicode.org,https://github.com/psi4/psi4/pull/728#issuecomment-308229047,2,['energy'],['energy']
Energy Efficiency,"@ryanmrichard My changes were mostly to allow GTFock to work on separate processor subgroups. I used libparallel2 (or maybe libparallel) just to create communicators. I did not really try any of the task schedulings. I guess I really only use boost::mpi, but it should be a simple change to just normal MPI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-248339239:204,schedul,schedulings,204,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-248339239,2,['schedul'],['schedulings']
Energy Efficiency,"@sbembenek18 yes, this issue can either happen at random during the intermediate of solving SCF or by the physics of the ground state solution. If the issue is the latter, then you can't run the calculation with Psi4 at present. Also, I am not sure why you are using Dunning type basis sets for DFT; the pcseg-n or def2 series are much more efficient for SCF level calculations. I was able to converge the system in the def2-SVPD basis; I do not know if it converges in def2-TZVPD or def2-TZVPPD but I expect these solutions to be at least the same quality as the aug-cc-pVTZ result. Maybe the level splitting won't happen, maybe it will; you never know till you try. You may also to try out varying the occupations set by the initial guess, as well as testing other codes. If the calculation ran in version 1.5, the issue is not about the character of the ground state but simply that something has changed in the SCF code. If you fix the right occupations, the master branch should be able to find the same solution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2594#issuecomment-1149297603:341,efficient,efficient,341,https://psicode.org,https://github.com/psi4/psi4/issues/2594#issuecomment-1149297603,2,['efficient'],['efficient']
Energy Efficiency,"@schiebermc @dgasmith . I have one more question. In several OpenMP blocks, `omp_get_thread_num()` is called within a loop, although it value doesn't change during a given thread execution: ; ```c++; #pragma omp parallel for ; for (...) {. int rank = 0;; #ifdef _OPENMP; rank = omp_get_thread_num();; #endif. // Do the stuff and use ""rank"". }; ```; Won't it be more efficient to do like this?; ```c++; #pragma omp parallel; {; int rank = 0;; #ifdef _OPENMP; rank = omp_get_thread_num();; #endif. #pragma omp for ; for (...) {; // Do the stuff and use ""rank""; }. }; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1200#issuecomment-419025984:366,efficient,efficient,366,https://psicode.org,https://github.com/psi4/psi4/pull/1200#issuecomment-419025984,1,['efficient'],['efficient']
Energy Efficiency,"@similt I just added options to compute only specific SAPT0 terms (e4070d0024742579a445e084da9dde078310094d). You should be able to use it if you pull Psi4 latest version from Github. I will update the manual shortly, but in the meantime, here is how it works.; The three options are; - sapt0_e10; - sapt0_e20ind; - sapt0_e20disp; If none of these options is specified, SAPT0 proceeds as usual. If one or more of these is specified, only the specified terms are computed. Be aware that the driver will still perform the 3 SCF computations for the monomers and the dimer, and that all preparative work (computing integrals) will always be done.; Also, the \delta_{HF} term is computed from first- and second-order terms, so if some of them are not computed, \delta_{HF} will be wrong. Similarly, exchange scaling is computed from first-order exchange, so it will not be valid if first-order exchange is not computed. However, you can easily compute these terms (see the manual for their definition) from gathering all SAPT0 data from different output files. Simple example to compute only dispersion terms:; molecule dimer {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561; }. set {; basis jun-cc-pvdz; scf_type df; e_convergence 10; guess sad; sapt0_e20disp true; }. energy('sapt0'). Finally, if redoing the 3 SCF is too much of a hassle, you could write the final orbitals and feed them to the SCF so that they converge in 1 iteration. It's not really ideal but it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/51#issuecomment-178215766:1420,energy,energy,1420,https://psicode.org,https://github.com/psi4/psi4/issues/51#issuecomment-178215766,1,['energy'],['energy']
Energy Efficiency,"@ssh2, thank you very much, I will read this article and try to use the DMRG method. . @ryanmrichard, the same calculation of Li+ at FCI/aug-cc-pVTZ was successfull. However, B+ at FCI/aug-cc-pVTZ failed suddenly with the following error:. PSIO_ERROR: unit = 51, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 26, in <module>; File ""./lib/python/driver.py"", line 617, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""./lib/python/proc.py"", line 2300, in run_detci; psi4.detci(); RuntimeError: PSIO Error. Input file was:. memory 48000 mb; molecule B {; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). The output file is:. ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Sat Jan 9 01:41:42 2016. Process ID: 17178; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---. #! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule B {; 1 1; B .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOMan",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:435,energy,energy,435,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,3,['energy'],['energy']
Energy Efficiency,"@susilehtola . Regarding your first suggestion about charges, I would like to make that change, however, that information is not available at the time of construction of the JK object. More general changes will need to be made to the codebase for that to be possible. . Separating the Coulomb and Exchange bits in a way that does not require extra AO ERI determination is beyond me. If you have a suggestion as to how to do it, I will consider implementing it in the limited time I have left. Otherwise, I will regard the task as impossible. I'm confused about the perceived assumption that all integrals fit into memory. No such assumption is made. In fact, this code can be seen as an extension of Weigend's work to the case in which they *don't* all fit in memory, and working with the assumption that integrals do *not* fit in memory is the reason for many of the strange choices made in writing this code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2040#issuecomment-748409140:53,charge,charges,53,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-748409140,1,['charge'],['charges']
Energy Efficiency,"@susilehtola Applying random perturbations to the initial guess (without having a converged SCF solution) was just pure conjecture from my part.; Of course in general, applying the random rotation scheme may lead to a number of different outcomes, the SCF procedure may converge to the same solution, a solution with a different energy or not converge at all.; So ideally, one would first obtain a converged SCF solution, then use the random rotations to generate a few (say, 3-15, user configurable) perturbed initial guesses from it, run SCF on all of them, and see if any of them converges to a lower minima.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-352287278:329,energy,energy,329,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352287278,1,['energy'],['energy']
Energy Efficiency,"@susilehtola good news, thank you!. I downloaded the 3.0.1 tarball, compiled with -fPIC and replaced the libxc.a and header files in my psi4 installation with the new ones. Then re-linked psi4. Seemed the quickest way, but not 100% sure this is fully correct. Instead of a segmentation fault I get nans; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter 0: -nan -nan -nan . ```. edit: replacing C_SCAN with C_TPSS works gives normal results.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863#issuecomment-345706660:335,Energy,Energy,335,https://psicode.org,https://github.com/psi4/psi4/issues/863#issuecomment-345706660,1,['Energy'],['Energy']
Energy Efficiency,"@susilehtola indeed. The question is, what is really happening in this step, the 2nd MOM activation:. ```; ==> MOM Excited-State Iterations <==; Excitations:; A -> A : 1A1 -> 4A1; Total Energy Delta E Density RMS; @DF-UHF iter 0: -75.32089478045290 -1.26766e+00 1.13211e-02 DIIS/MOM; @DF-UHF iter 1: 9.36090161113092 8.46818e+01 0.00000e+00 DIIS/MOM; @DF-UHF iter 2: 9.36090161113092 0.00000e+00 0.00000e+00 DIIS/MOM; Energy and wave function converged.; ```. Are the electrons anihilated in that MOM activation step? Are all the occ. orbitals wrongly deleted, leading to an awkward situation? Maybe then some iterator does not check the virtuals? And, most importantly, what is the change from 1.1 to 1.4(...) that makes this ""a thing"". I really have no hypothesis. My point is, this is not a ""MOM converging to some weird state"" thing: this is probably some sort of bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692#issuecomment-518801826:186,Energy,Energy,186,https://psicode.org,https://github.com/psi4/psi4/issues/1692#issuecomment-518801826,2,['Energy'],['Energy']
Energy Efficiency,"@susilehtola, I'm not seeing what you're seeing. A plain `energy('cisd')` (below) does run through DePrince's module `fnocc` but FNO is off. I quite agree that what you describe shouldn't be happening. What's your input?. ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.2a1.dev612 . Git: Rev {macintelclang} 94b2ae0 dirty. R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,; A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). -----------------------------------------------------------------------. Psi4 started on: Wednesday, 25 October 2017 01:40PM. Process ID: 40933; PSIDATADIR: /Users/github/Git/tmppsi/objdir-ompclang3/stage/usr/local/psi4/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; #! 6-31G** H2O+ Test CISD Energy Point. refnuc = 8.8046866186391 #TEST; refscf = -75.6213422266812 #TEST; refci = -75.7850671871149 #TEST; refcorr = refci - refscf #TEST. molecule h2o {; 0 1; O; H 1 1.00; H 1 1.00 2 103.1; }. set {; # reference rohf; basis 6-31G**; freeze_core true; # icore 0; }. thisenergy = energy('cisd'). #compare_values(refnuc, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST ; #compare_values(refscf, get_variable(""SCF total energy""), 7, ""SCF energy"") #TEST; #compare_values(refci, thisenergy, 7, ""CI energy"") #TEST; #compare_values(refcorr, get_variable(""CI CORRELATION ENERGY""), 7, ""CI correlation energy"") #TEST; --------------------------------------------------------------------------.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:58,energy,energy,58,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['energy'],['energy']
Energy Efficiency,"@tomspur @andysim @dgasmith . I added another commit to this that largely does away with the options dict passed to `ipi_broker`. chg/mult weren't being used and should be read off the molecule anyway to avoid input clash. LOT is now a req'd option so the fn looks a lot more like `energy`. (It's returning a broker object, so I didn't work it into `energy()` itself.) Any concerns, particularly if I'm impairing its intended usage?. Also, at present any calls to `ipi_broker` with `import ipi` unavailable run just fine as ordinary psi4 calls. I was a little surprised by this compensating for user's expressed intent. Is this the wanted behavior?. If there aren't actually any wanted changes, I have another commit to make for lgtm and to remove the `@using_ipi` that aren't strictly needed, then it's rtg.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-653148607:282,energy,energy,282,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-653148607,2,['energy'],['energy']
Energy Efficiency,"@tomspur I had a feeling you would run into something like this eventually. I would suspect that you are getting a segfault when calling these functions because the `global_dpd_` object has been broken down. When `CCEnergyWavefunction::compute_energy` is called the `DPD` object that `global_dpd_` is pointing to is constructed [(example for UHF)](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/ccenergy/ccenergy.cc#L122-L131) before iterations begin, and then [deleted](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/ccenergy/ccenergy.cc#L504) before the function returns. . So if when you do something like this:. ```python; e, wfn = psi4.energy('ccsd', return_wfn=True); t2 = wfn.T2(); ```; At the time when the python bound function is called and the code for `CCEenergyWavefunction::T2()` is executed the `global_dpd_` the dpd object that the `global_dpd_` points to has been deleted out from under it (you can see [here](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/libdpd/init.cc#L59) that `dpd_set_default` will assign the `global_dpd_` pointer to `dpd_list[0]`, and below it is the code for `dpd_close` that will delete the object. I see two possible solutions. . - The easiest to implement would be to have the getters/setters check that `global_dpd_` is not `nullptr`, and if it is construct the dpd. Before doing the geting/setting. The function would also have to free the dpd object as well as other modules will assume that `global_dpd_` is null until they initialize it and `dpd_init` will throw when they try to create it. - The other option is to simply start phasing out the `global_dpd_` entirely. A data member can be added to the `CCEnergyWavefunction` and the member functions of the class can be modified to use that data member instead of the `global_dpd_`. The initialization of the data member is moved into the construtor and the dpd will be val",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978:725,energy,energy,725,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978,2,['energy'],['energy']
Energy Efficiency,@tonigi 's problem can be reproduced with just:; ```python; import psi4; psi4.geometry('\n'.join(f'Ne 0 0 {i}' for i in range(40))); psi4.energy('HF/6-311++G**'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-447383378:138,energy,energy,138,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-447383378,1,['energy'],['energy']
Energy Efficiency,"@tsexton, yes, it's a pity that the name `Z` which should properly be `int` atomic number has devolved into `float` nuclear charge. I support all documentation clarifications. You can even edit [them](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L985-L993) online with the little pencil. GH will turn your edits into a pull request.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363505467:124,charge,charge,124,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363505467,1,['charge'],['charge']
Energy Efficiency,"@wadejong, the trick is that some of our codes can't handle symmetry, so; frequently users ask for C1 even though they really don't mean it, due to; parts of the code being C1 only (although maybe some recent code I added; fixes this?). Most of these users will want the symmetric solution because; it tends to be more free of unphysical values for properties like; vibrational frequencies. The situation is analogous to running a closed shell molecule with UHF. It; will always give the RHF solution, not a UHF solution, unless the user; intervenes and deliberately breaks the alpha / beta symmetry that is; naturally there. Some programs have special keywords to do this. Or do; you automatically mix alpha and beta in NWChem when a user asks for UHF on; a closed shell molecule?. On Dec 5, 2017 7:52 PM, ""Bert de Jong"" <notifications@github.com> wrote:. Communicating with Daniel, the challenge is that the solver somehow was; sticking to a symmetry solution inherent in the molecule, this while a no; symmetry solution was requested. I would expect a symmetry broken solution; if I tell the calculation to assume a symmetry lower than possible; (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com>; wrote:; >; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken; sol'n (perhaps through geometry tweaks or stability analysis) or with it; being the default sol'n?; >; > —; > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or mute the thread.; >. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/psi4/psi4/issues/875#issuecomment-349492637>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/AC9Qdkqkvy84OvbrJRm6E6z73AM6ZWBXks5s9eU_gaJpZM4Q25IB>; .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349516046:1176,energy,energy,1176,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349516046,1,['energy'],['energy']
Energy Efficiency,"@ymshi449, when you post error reports, _please_ be explicit. We need to know exactly what you are asking and exactly what the problem is. Including the details is more important than the grammar. > > Also, it seems that for `sadno`, `guess_mix` is not implemented.; > ; > wym? It should work out-of-the-box, since the `sadno` guess has orbitals like GWH. `huckel` is another possible choice. It might be that DIIS just pulls you back into the spin-restricted solution... @susilehtola ; Using your H2 example. ```; ==> Pre-Iterations <== . SCF Guess: Superposition of Atomic Densities' Natural Orbitals via on-the-fly atomic UHF (doi:10.1021/acs.jctc.8b01089). -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 1 1 1 0 ; -------------------------------------------------------; Total 10 10 1 1 1 0 ; -------------------------------------------------------. ==> Iterations <== . Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -0.82625214180248 -8.26252e-01 1.90467e-03 DIIS; @DF-UHF iter 2: -0.82648067782379 -2.28536e-04 2.30464e-04 DIIS; @DF-UHF iter 3: -0.82648407824246 -3.40042e-06 4.94088e-07 DIIS; @DF-UHF iter 4: -0.82648407827432 -3.18513e-11 3.29102e-08 DIIS; @DF-UHF iter 5: -0.82648407827446 -1.41887e-13 2.57430e-14 DIIS; Energy and wave function converged.; ```. Even though `set guess_mix True` is set in my input file, the output that _should_ appear (and does for `guess gwh` instead of `guess sadno`) when `guess_mix` runs does not.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2410#issuecomment-1016642737:996,Energy,Energy,996,https://psicode.org,https://github.com/psi4/psi4/issues/2410#issuecomment-1016642737,2,['Energy'],['Energy']
Energy Efficiency,"@yxie326 how much should the SAPT(HF) from your calcs match a conventional SAPT0? Below, the ""Total HF"" from a SAPT0 and the ""Total HF"" from your ""SAPT(HF) Results"" match exactly and the induction terms nearly but not so much the elst or exch. Can the deltaHF join the Induction section?. I assume the differences in labels btwn HF and DFT SAPT (Elst10 vs Elst1, Ind20,r vs Ind2,r) are correct since that's what I recall from Molpro, too, but now would be a good time to look over them and confirm that all differences are intentional. wfn sapt input; ```; molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; }; energy(""sapt0""); ```. wfn sapt output; ```; SAPT Results ; --------------------------------------------------------------------------------------------------------; Electrostatics -0.08863776 [mEh] -0.05562103 [kcal/mol] -0.23271841 [kJ/mol]; Elst10,r -0.08863776 [mEh] -0.05562103 [kcal/mol] -0.23271841 [kJ/mol]. Exchange 0.32126855 [mEh] 0.20159906 [kcal/mol] 0.84349046 [kJ/mol]; Exch10 0.32126855 [mEh] 0.20159906 [kcal/mol] 0.84349046 [kJ/mol]; Exch10(S^2) 0.32120420 [mEh] 0.20155868 [kcal/mol] 0.84332151 [kJ/mol]. Induction -0.01300161 [mEh] -0.00815863 [kcal/mol] -0.03413572 [kJ/mol]; Ind20,r -0.09189525 [mEh] -0.05766514 [kcal/mol] -0.24127094 [kJ/mol]; Exch-Ind20,r 0.09502640 [mEh] 0.05962997 [kcal/mol] 0.24949178 [kJ/mol]; delta HF,r (2) -0.01613276 [mEh] -0.01012346 [kcal/mol] -0.04235656 [kJ/mol]. Dispersion -0.26779778 [mEh] -0.16804565 [kcal/mol] -0.70310299 [kJ/mol]; Disp20 -0.28239464 [mEh] -0.17720531 [kcal/mol] -0.74142701 [kJ/mol]; Exch-Disp20 0.01459685 [mEh] 0.00915966 [kcal/mol] 0.03832403 [kJ/mol]; Disp20 (SS) -0.14119732 [mEh] -0.08860265 [kcal/mol] -0.37071351 [kJ/mol]; Disp20 (OS) -0.14119732 [mEh] -0.08860265 [kcal/mol] -0.37071351 [kJ/mol]; Exch-Disp20 (SS) 0.00826777 [mEh] 0.00518811 [kcal/mol] 0.02170704 [kJ/mol]; Exch-Disp20 (OS) 0.00632908 [mEh] 0.00397156 [kcal/mol] 0.01661699 [kJ/mol]. Total HF 0.21",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1865#issuecomment-707400670:650,energy,energy,650,https://psicode.org,https://github.com/psi4/psi4/pull/1865#issuecomment-707400670,1,['energy'],['energy']
Energy Efficiency,"@zachglick reports he was able to get the same seg fault with just ; `conda create -n test_env4 -c psi4 python=3.7 psi4==1.5+e9f4d6d`; and ; ```; molecule mol {; 0 1 ; O ; H 1 1.0 ; H 1 1.0 2 109.5; }. set basis sto-3g; energy, wfn = energy(""HF"", return_wfn=True); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2593#issuecomment-1145503237:220,energy,energy,220,https://psicode.org,https://github.com/psi4/psi4/issues/2593#issuecomment-1145503237,2,['energy'],['energy']
Energy Efficiency,"@zachglick this is just about how you calculate a range-separated functional. The point is that when you have a functional that has A% exact exchange at the short-range and B% exact exchange in the long-range, you can evaluate it either as B% full Hartree-Fock exchange and (A-B)% short-range exchange, or as A% full Hartree-Fock exchange and (B-A)% long-range exchange. Psi4 is currently doing it the latter way. My intuition is that the former way of using short-range integrals would be more efficient for screening, since fewer terms can contribute at the short range and the more numerous long-range terms are killed by the range separation, but it might also be that since exchange integrals die off more rapidly in the long range than Coulomb integrals, the evaluating the long-range part is faster than the short-range part. Of course, if you have both long- and short-range exchange, then you anyway have to evaluate the full exact exchange and the speedup isn't going to be mind-blowing. But, some functionals like HSE are short-range-only, and there it might make a difference if you don't have to evaluate the long-range part at all. I guess the optimal implementation would include both and pick on a case by case basis: e.g. if you only have short-range exchange, then just do the short-range part and skip the full exact exchange.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1499#issuecomment-497468619:495,efficient,efficient,495,https://psicode.org,https://github.com/psi4/psi4/pull/1499#issuecomment-497468619,2,['efficient'],['efficient']
Energy Efficiency,"A -1.493579 ; 13A -1.493578 14A -0.152702 15A -0.050078 ; 16A -0.050072 17A -0.050066 . Virtual: . 18A 0.078304 19A 0.097245 20A 0.097248 ; 21A 0.097249 22A 0.112922 23A 0.112923 ; 24A 0.112923 25A 0.113993 26A 0.116451 ; 27A 0.116452 28A 0.133456 29A 0.133457 ; 30A 0.133457 31A 0.144405 32A 0.154794 ; 33A 0.154799 34A 0.154803 35A 0.171872 ; 36A 0.171874 37A 0.171880 38A 0.182327 ; 39A 0.182328 40A 0.195145 41A 0.195148 ; 42A 0.195151 43A 0.207055 44A 0.266927 ; 45A 0.266928 46A 0.283654 47A 0.283658 ; 48A 0.283662 49A 0.288897 50A 0.288898 ; 51A 0.288899 52A 0.333946 53A 0.337328 ; 54A 0.337329 55A 0.337330 56A 0.383705 ; 57A 0.383705 58A 0.383706 59A 0.424706 ; 60A 0.424707 61A 0.470452 62A 0.470453 ; 63A 0.470455 64A 0.472868 65A 0.509891 ; 66A 0.538119 67A 0.538120 68A 0.538121 ; 69A 0.791769 70A 0.791770 71A 0.831182 ; 72A 0.831183 73A 0.831185 . Final Occupation by Irrep:; A ; DOCC [ 17 ]. Energy converged. @RHF Final Energy: -787.84782771441280. => Energetics <=. Nuclear Repulsion Energy = 46.2526770994017653; One-Electron Energy = -1168.6473048717509755; Two-Electron Energy = 334.5468000579363661; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -787.8478277144128015. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: -0.0000 Z: -0.0000. Electronic Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0001 Y: -0.0001 Z: 0.0000 Total: 0.0002. Dipole Moment: (Debye); X: 0.0003 Y: -0.0002 Z: 0.0000 Total: 0.0004. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:40 2017; Module time:; 	user time = 2.36 seconds = 0.04 minutes; 	system time = 0.04 seconds = 0.00 minutes; 	total time = 3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:6703,Energy,Energy,6703,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Energy'],['Energy']
Energy Efficiency,"A 2.270343; > 210A 2.290240 211A 2.296245 212A 2.304338; > 213A 2.316737 214A 2.379290 215A 2.453589; > 216A 2.461743 217A 2.495632 218A 2.498678; > 219A 2.519294 220A 2.562708 221A 2.608244; > 222A 2.726412 223A 2.739216 224A 2.753717; > 225A 2.766537 226A 2.769494 227A 2.781755; > 228A 2.786035 229A 2.802889 230A 2.877816; > 231A 2.934217 232A 2.946283 233A 2.971176; > 234A 2.978125 235A 3.021450 236A 3.025068; > 237A 3.055308 238A 3.105407 239A 3.192416; > 240A 3.230170 241A 3.237091 242A 3.270263; > 243A 3.501427 244A 3.509120 245A 3.988816; > 246A 4.002956; > ; > Final Occupation by Irrep:; > A; > DOCC [ 47 ]; > ; > Energy converged.; > ; > @RHF https://github.com/RHF Final Energy: -535.97469065986820; > ; > => Energetics <=; > ; > Nuclear Repulsion Energy = 697.1131782964378090; > One-Electron Energy = -2106.2189353611356637; > Two-Electron Energy = 873.1310664048263561; > DFT Exchange-Correlation Energy = 0.0000000000000000; > Empirical Dispersion Energy = 0.0000000000000000; > Total Energy = -535.9746906598714986; > ; > Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; > ==> Properties <==; > ; > Properties computed using the SCF density density matrix; > Nuclear Dipole Moment: (a.u.); > X: 0.0000 Y: 0.0000 Z: 0.0000; > ; > Electronic Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000; > ; > Dipole Moment: (a.u.); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Dipole Moment: (Debye); > X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000; > ; > Saving occupied orbitals to File 180.; > ; > **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; > Module time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > Total time:; > user time = 515.17 seconds = 8.59 minutes; > system time = 10.04 seconds = 0.17 minutes; > total time = 527 seconds = 8.78 minutes; > ; > **\* tstart() called on shukla-pc.localdomain; > **\* at Thu Oct 9 10:48:21 201",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61#issuecomment-58650322:15395,Energy,Energy,15395,https://psicode.org,https://github.com/psi4/psi4/issues/61#issuecomment-58650322,1,['Energy'],['Energy']
Energy Efficiency,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:121,energy,energy,121,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546,2,['energy'],['energy']
Energy Efficiency,"A good test of when this is fixed: the `scf-property` test line `#compare_values(-39.14134740550916, variable('B3LYP TOTaL ENERGY'), 6, ""B3LYP energy"") #TEST # waiting for dft fctl psivars` should pass, uncommented.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2477#issuecomment-1068078956:123,ENERGY,ENERGY,123,https://psicode.org,https://github.com/psi4/psi4/issues/2477#issuecomment-1068078956,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"A little worried damping is not being applied correctly. We build JK matrices from C matrices and not the density, the only time the density is used is in the DIIS error vector and for the energy. We probably need to scale the Fock matrices as well. @jturney @andysim Did I miss something here?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/422#issuecomment-228439151:189,energy,energy,189,https://psicode.org,https://github.com/psi4/psi4/pull/422#issuecomment-228439151,1,['energy'],['energy']
Energy Efficiency,"A single basis function only covers a single center, but an element of a density matrix is made up of two basis functions which can exist on separate centers. You may need to define a core density more, but usually we think of the ""core"" as molecular orbitals (not basis functions) that do not belong in the valence. In general you can remove the `n` lowest eigenvalues from a density as follows:; ```; Da = np.array(wfn.Da()); Ca = np.array(wfn.Ca()). ncore = 5; D_valence = Da - np.einsum('pi,qi->pq', Ca[:, : ncore], Ca[:, : ncore]). # psi4.core.Matrix.from_array(D_valence) # Convert back to a Psi4 matrix object.; ```. The lowest energy eigenvalues are typically the `S` densities close to a nuclei. From the above molecule we see an eigenvalue spectrum:. ```; Doubly Occupied:. 1A -481.016510 2A -61.827320 3A -55.742925; 4A -55.738646 5A -55.738646 6A -9.947341; 7A -8.413043 8A -6.292052 9A -6.277230; 10A -6.277230 11A -2.489635 12A -2.485739; ```. Where 1A/2A are the 1S/2S core molecular orbitals and 3A-5A is the first P shell. I would not guess the others without plotting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-436440670:635,energy,energy,635,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-436440670,1,['energy'],['energy']
Energy Efficiency,"A solution for multi-invocation tests going forward would be much appreciated. We used to incorporate this into the Makefile build system (https://github.com/psi4/psi4/blob/4.0b5/tests/pywrap-freq-e-sowreap/Makefile.in), but I never got around to converting it for CMake. I modified the old script (below) and checked the tests file, and it still looks ok. ``` bash; >>> psi4/tests/pywrap-freq-e-sowreap: bash script.sh ; Performing finite difference calculations by energies; 13 displacements needed.; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; >>> psi4/tests/pywrap-freq-e-sowreap: cat script.sh ; PSIDATADIR=../../lib. ../../objdir2/bin/psi4 -p PSIDATADIR input.dat ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-1.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-2.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-3.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-4.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-5.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-6.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-7.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-8.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-9.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-10.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-11.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-12.in ; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-13.in ; /bin/cat tests >> FREQ-master.in; ../../objdir2/bin/psi4 -p PSIDATADIR FREQ-master.in ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/168#issuecomment-157541405:758,energy,energy,758,https://psicode.org,https://github.com/psi4/psi4/issues/168#issuecomment-157541405,1,['energy'],['energy']
Energy Efficiency,"A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:1866,energy,energy,1866,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation energy: 34.740876 eV; Excitation energy: 34.873378 eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by QChem reproduce the results provided in the Trofimov, Stelter, Schirmer paper. However, the energies provided by Psi4 seem to have an inconsistent deviation from the values: for so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:2356,energy,energy,2356,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['energy'],['energy']
Energy Efficiency,"A troubling example:; ```; molecule {; 0 2; Mg; F 1 2.8 ; }. set reference uhf ; set soscf true; set soscf_print true; set stability_analysis follow. energy('hf/cc-pvdz'); ```. Even towards the end, we're seeing non-monotonic convergence.; ```; -----------------------------------------------------; Iter Residual RMS Max RMS Remain Time [s]; -----------------------------------------------------; Guess 1.771e+00 1.771e+00 1 0; 1 5.715e-01 5.715e-01 1 0; 2 4.809e-01 4.809e-01 1 0; 3 2.494e-01 2.494e-01 1 0; 4 2.512e-01 2.512e-01 1 0; -----------------------------------------------------; ```. This should be impossible for CG, preconditioned or otherwise, applied to a positive-semidefinite problem. But stability analysis swears we're PSD.; ```; DLUSolver converged. Wavefunction stable under totally symmetric rotations.; Lowest totally symmetric eigenvalue: 0.018307; Lowest UHF->UHF stability eigenvalues:; B2 0.018307 B1 0.018307 A1 0.038290 A2 0.424251; ```. I'm chalking this up to a bug somewhere in our SOSCF code. _siiiiiiiiigh_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2204#issuecomment-868509190:150,energy,energy,150,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-868509190,1,['energy'],['energy']
Energy Efficiency,"AJ made this comment:. My implementation involved handling cases where the user sets a hf reference and calls a dft method. For example if the input is,. set reference rhf. energy('b3lyp). the reference option will be set to rks. The goal there was to keep the energy('method') interface user friendly. If/when psi4public/118 is implemented the smart-reference should be able to handle those conflicts and my checks for these conflicts can probably be removed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/118#issuecomment-170147040:173,energy,energy,173,https://psicode.org,https://github.com/psi4/psi4/issues/118#issuecomment-170147040,2,['energy'],['energy']
Energy Efficiency,"Actually @awvwgk, i am just trying to set the D4 paramters and notice that also the charge-scaling parameters need to be adjusted. Not sure how to do that with the current setup. The QCEngine supports those parameters?. also `r2scan3c` is not recognized by the dftd4 binary?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2121#issuecomment-1367996918:84,charge,charge-scaling,84,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1367996918,1,['charge'],['charge-scaling']
Energy Efficiency,"Actually, it seems the ordering is *still* wrong. Comparing coefficients with and without symmetry, there are huge differences. I'm at my wit's end... So, for a simple test case; ```; molecule {; H 0.0 0.0 0.0; H 0.0 1.0 0.0; H 0.0 0.0 1000.0; H 0.0 1.0 1000.0; }. set basis 6-31G; scf_e, scf_wfn = energy('s_x', return_wfn=True). set reference rhf; set r_convergence 1e-10; set dump_vectors true; energy('fci', ref_wfn=scf_wfn); ```; when run without symmetry, the 00000202 configuration turns up with zero weight. When symmetry is used, however, the configuration gets an amplitude of 5.949876123577e-04...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301289886:299,energy,energy,299,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301289886,4,['energy'],['energy']
Energy Efficiency,"Actually, the stability without symmetry is missing the lower eigenvalue. That can happen when the guess for the Davidson solver does not contain the solution you are looking for. The following input:. ```; molecule fluorine {; 0 1; F; F 1 1.4113. symmetry c1; }. set globals {; basis cc-pvdz; reference uhf; scf_type pk; e_convergence 10; d_convergence 10; stability_analysis follow; solver_n_guess 6; }. energy ('scf'); ```. finds the wavefunction is unstable with the eigenvalue -0.098916 and then reoptimizes the SCF in the non-totally symmetric state to get to the stable solution.; (This is also documented in the manual along with what to do when the Davidson solver does not converge.); Maybe we should increase `solver_n_guess` default ? I don't know how the number of guess vectors to include scales with system size though. And I would expect this kind of problem to appear only in very symmetric systems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1125#issuecomment-412417037:406,energy,energy,406,https://psicode.org,https://github.com/psi4/psi4/issues/1125#issuecomment-412417037,1,['energy'],['energy']
Energy Efficiency,"Adding purely for the sake of search results for anyone else who goes down this rabbit hole:. If you are getting a mismatch between Orca and Psi4 on, say, a dimer interaction energy, and your system contains Xe or I, and you've been tearing your hair out trying to reconcile the difference, **this is probably why**. Orca removes the ECPs on ghost sites.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1968#issuecomment-1764917353:175,energy,energy,175,https://psicode.org,https://github.com/psi4/psi4/issues/1968#issuecomment-1764917353,1,['energy'],['energy']
Energy Efficiency,"Admittedly the error message should be updated to be more informative, but; the short answer is a single atom doesn't have a vibrational frequency. More generally any molecular system has 3 times the number of atoms, total; degrees of freedom; the difference between that and the number of external; degrees of freedom is the internal degrees of freedom, i.e. the; vibrations. An atom has three external degrees of freedom and thus in turn; has 0 internal degrees of freedom. Hope that helps.; On Mar 31, 2016 8:07 PM, ""drhaney"" notifications@github.com wrote:. > Attempting frequency() on atomic species fails irrespective of charge,; > multiplicity, and reference type.; > ; > Typical error message:; > ; > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > : basic_string::replace: File """", line 26, in; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in; > frequency; > psi4.thermo(wfn, wfn.frequencies()); > ; > Thanks,; > -drhaney, -- that's ""D. R."", not Doctor.; > ; > Typical input file attached (C atom, neutral triplet).; > C.txt https://github.com/psi4/psi4/files/198782/C.txt; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204210196:627,charge,charge,627,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204210196,1,['charge'],['charge']
Energy Efficiency,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:744,energy,energy,744,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790,2,['energy'],['energy']
Energy Efficiency,"After memory profiling, I've discovered that this PR _improves_ memory efficiency. For my 384 basis function DF-DCT system, memory requirements plummet from 14.0 GB to 7.8 GB. I've run some tests on a single benzene system instead of a two benzene system, and I understand the behavior:. This isn't due to shifting to Python, but shifting how we clear some large arrays. The C-DIIS code uses `clear()`, which [doesn't necessarily de-allocate the memory.](https://www.cplusplus.com/reference/vector/vector/clear/) PyDIIS makes that not our problem. On taking the existing C-side code and forcibly de-allocating the memory, I observe a memory profile indistinguishable from the PyDIIS one. The large change in memory is most likely because C-DIIS was keeping the allocation space for multiple T2 tensors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2369#issuecomment-994862260:433,allocate,allocate,433,https://psicode.org,https://github.com/psi4/psi4/pull/2369#issuecomment-994862260,2,['allocate'],['allocate']
Energy Efficiency,"After rebase, `cookbook-manual-fd-hess-grad` and `cookbook-manual-fd-hess-energy` fail due to `set_frequencies` missing. Is there something I should replace those with? I don't see an alternative recommended in the deprecation notice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1332578549:74,energy,energy,74,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1332578549,1,['energy'],['energy']
Energy Efficiency,"After the changes in #2254, the input fails with; ```. psi4.driver.qcdb.exceptions.ValidationError: Gaussian94BasisSetParser::parse: Unable to match an exponent with one contraction: line 4: 1 3.386500000000E+01 2.549380000000E-02. Printing out the relevant lines from the Psithon --> Python processed input file:; """"""; return basstrings; qcdb.libmintsbasisset.basishorde['ANONYMOUSF8B47625'] = basisspec_psi4_yo__anonymousf8b47625; core.set_global_option(""BASIS"", ""anonymousf8b47625""); core.set_global_option(""STABILITY_ANALYSIS"", ""check""); --> energy('scf'). !----------------------------------------------------------------------------------!; ! !; ! Gaussian94BasisSetParser::parse: Unable to match an exponent with one !; ! contraction: line 4: 1 3.386500000000E+01 2.549380000000E-02 !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2253#issuecomment-882953081:546,energy,energy,546,https://psicode.org,https://github.com/psi4/psi4/issues/2253#issuecomment-882953081,1,['energy'],['energy']
Energy Efficiency,"Ah yes, this is an issue. Neither of the three works as one would expect them to work: the first two don't do anything as the fctl stage is not specified, and the third one does a full extrapolation. I'm not sure what the first two cases should return - neither of those requests anything resembling a ""total energy""; ; - aborting with a warning would be in order, ; - or we can do the same as for correlated methods, where the fctl step is implied as a non-extrapolated one with highest. For the third case, this is clearly a bug which I'll work on fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-965333017:309,energy,energy,309,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-965333017,2,['energy'],['energy']
Energy Efficiency,"Ah yes, this is no longer a used test case in wavefunction_pass. @psi-rking is it possible to reduce the basis set to something fairly quick?. > On Feb 15, 2016, at 9:01 AM, Justin Turney notifications@github.com wrote:; > ; > opt10 is too big for a test case: 15 atoms, C1 symmetry, 322 basis functions, requests 32 GB of memory, and performing a transition state geometry optimization with an initial Hessian by finite difference of gradients. The calculation timed out on the 13 of 79 gradient displacements of the initial Hessian. The only thing that does help is that it's a DF-MP2 calculation.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/253#issuecomment-184219439.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-184220315:94,reduce,reduce,94,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-184220315,1,['reduce'],['reduce']
Energy Efficiency,"Ah yes, when you set `active` you are effectively setting `RAS 2`. What you really want to do is set the restricted space like so:. `restricted_uocc [12]`. From the output:. The CI space requires 876 (8.76E+02) determinants and 6 blocks. Cheers,; Daniel Smith. > On Feb 1, 2017, at 22:03, Susi Lehtola <notifications@github.com> wrote:; > ; > molecule {; > 1 1; > symmetry c1; > O; > O 1 R1; > O 2 R2 1 A1; > H 3 R3 2 A2 1 D1; > ; > R1=1.228; > R2=1.587; > R3=0.968; > A1=109.80; > A2=97.10; > D1=180.0; > }; > ; > set basis 6-31G; > set reference rohf; > set scf_type pk; > set nat_orbs true; > scf_e, scf_wfn = energy('scf', return_wfn=True); > ; > set restricted_docc [7]; > set active [10]; > set qc_module detci; > ci_e, ci_wfn = energy('cisd', return_wfn=True, ref_wfn=scf_wfn); > has Nmo = 29 and docc = 12, so a (10e,10o) active space.; > ; > I get with cisd; > ; > There are 252 alpha and 252 beta strings; > The CI space requires 63504 (6.35E+04) determinants and 1 blocks; > with cisdt; > ; > There are 252 alpha and 252 beta strings; > The CI space requires 63504 (6.35E+04) determinants and 1 blocks; > and with cisdtq; > ; > There are 252 alpha and 252 beta strings; > The CI space requires 63504 (6.35E+04) determinants and 1 blocks; > 63504 is the dimension of the FCI space.; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/600#issuecomment-276855493>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABsBcV_cGQ1EW9w8Oa9ZEN44L9ON6ReZks5rYUeagaJpZM4LzeQz>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/600#issuecomment-276856487:613,energy,energy,613,https://psicode.org,https://github.com/psi4/psi4/issues/600#issuecomment-276856487,2,['energy'],['energy']
Energy Efficiency,"Ah yes, you can't have an electron kinetic energy if you don't have electrons...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3156#issuecomment-2066957346:43,energy,energy,43,https://psicode.org,https://github.com/psi4/psi4/issues/3156#issuecomment-2066957346,1,['energy'],['energy']
Energy Efficiency,"Ah, ok it just sounded like there was a bug in the JK `out_of_core` algorithm. I wouldn't worry about that too much, we have a new DF class coming along that will be able to handle these kinds of things very efficiently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-233000428:208,efficient,efficiently,208,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-233000428,1,['efficient'],['efficiently']
Energy Efficiency,"Ah, we recently changed some Psi4 infrastructure and there is no longer a global wavefunction as the error mentions. This is either occurring because:; 1) Your PSIDATADIR path is pointing to an older library version; 2) You wrote a custom plugin that still uses this functionality. Please view the following topic: http://forum.psicode.org/t/wavefunction-passing-update/139. Cheers,; Daniel Smith. > On Mar 10, 2016, at 9:58 AM, hernan3009 notifications@github.com wrote:; > ; > It was possible to compile and install psi4 without problems, but the make command returned; > ; > hernan@carlos:~/Power Method/Psi4/pluginintegrales$ make; > /usr/bin/g++ -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DFC_SYMBOL=2 -DHAVE_SYSTEM_NATIVE_LAPACK -DHAVE_SYSTEM_NATIVE_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused -I/home/hernan/Programas/psi4/instalacion/interfaces/include -I/home/hernan/Programas/psi4/instalacion/src/lib -I/home/hernan/Programas/psi4/psi4/src/lib -I/home/hernan/Programas/psi4/psi4/include -I/home/hernan/Programas/psi4/instalacion/include -I/home/hernan/Programas/psi4/instalacion/boost/include -I/usr/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include -c pluginintegrales.cc; > pluginintegrales.cc: In function ‘psi::PsiReturnType psi::pluginintegrales::pluginintegrales(psi::Options&)’:; > pluginintegrales.cc:63:64: error: ‘class psi::Process::Environment’ has no member named ‘wavefunction’; > boost::shared_ptr<Wavefunction> wfn = Process::environment.wavefunction();; > ^; > make: **\* [pluginintegrales.o] Error 1; > ; > —; > Reply to this email dire",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-194993406:594,Power,Power,594,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-194993406,1,['Power'],['Power']
Energy Efficiency,"Ah, yes you are right. I have a class wrapper around psi4 that sets the initial configurations and that has the default value 64. That must be why I have the spikes. Because psi4 knows that is available to it because I requested it in the initial configurations. . Okay so I set up tests where I am generating an interaction energy surface scan for a dimer. I am using `mp2/cc-pvqz-ri`. I didn't know if the resolution identity error was implied like gaussian or if I had to explicitly state it. It's about 72 point single point energy scans. . **Test 1**. I reduced down the `64` to `16`. ```bash; -pe smp 16; ```. Reset the default where this is happening to set the thread to one. with the OMP and MKL flags set in the job submission script. . ```bash; export MKL_NUM_THREADS=12; export OMP_NUM_THREADS=12; ```; ```python. psi4.set_num_threads(1). ```; **Test 2**. Only rely on the flags in the job submission script. ```; export MKL_NUM_THREADS=12; export OMP_NUM_THREADS=12; ```. ```python. # psi4.set_num_threads(1); ```. It seems like so far the loads seem to be continuously used. I will get some graphs in the morning for you to look at.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2747#issuecomment-1278373201:325,energy,energy,325,https://psicode.org,https://github.com/psi4/psi4/issues/2747#issuecomment-1278373201,3,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"Ahhh. Commenting it out was a bad idea indeed. Thank you for pointing this out @susilehtola. It looks like the simplest way I can enable the functionality I need without breaking other things is to add a new protected variable `persistent_external_potentials_` and associated public methods `push_back_persistent_external_potential()` and `clear_persistent_external_potential()` to the `HF` class. Then the persistent potentials will not be cleared at each iteration. However, then we would have three mechanisms for doing nearly the same thing: `HF::external_potentials_` for dealing with PCM/DDX/PE, `HF::persistent_external_potentials_` for my user-supplied one-electron operators, and the `ExternalPotential` class for external point charges. Perhaps a better strategy would be to extend the `ExternalPotential` capabilities? It does seem to already allow for a diffuse charge density expanded in an auxiliary bases, but I couldn't find an example that uses this option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920:738,charge,charges,738,https://psicode.org,https://github.com/psi4/psi4/pull/3228#issuecomment-2391707920,4,['charge'],"['charge', 'charges']"
Energy Efficiency,"All right, bug fixed, and IncFock tests added! The new IncFock efficiency tests compare against an SCF ITERATIONS value of x+3, where x is the number of SCF iterations observed in the corresponding non-IncFock run (which also matches the iteration count seen in each output.ref file). I can reduce the 3 component down to something else if desired.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792#issuecomment-1329450057:291,reduce,reduce,291,https://psicode.org,https://github.com/psi4/psi4/pull/2792#issuecomment-1329450057,1,['reduce'],['reduce']
Energy Efficiency,"All tests ran through except for:; FAILED tests/fsapt1/test_input.py::test_fsapt1 - AssertionError: Traceback (most recent call last):; with the message:; E !----------------------------------------------------------------------------------!; E ! !; E ! Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to !; E ! do in-core! Increase the amount of memory allocated to Psi4 or allow for !; E ! out-of-core to be used. !; E ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4nm_171103 !; E ! 8779956/work/psi4/src/psi4/lib3index/dfhelper.cc on line: 261 !; E ! The most recent 5 function calls were: !; E ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; E ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; E ! psi::DFHelper::initialize() !; E ! !; E !----------------------------------------------------------------------------------!. I think this is independent of this PR and the PR would be good to go",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817:384,allocate,allocated,384,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2013170817,1,['allocate'],['allocated']
Energy Efficiency,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:197,Energy,Energy,197,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560,1,['Energy'],['Energy']
Energy Efficiency,"Alright, I'm having a go at this - fixing the number of calculations is trivial, but knowing what we want to print is not. For the `bsse_type=[""nocp""]` case, we want to calculate `AB in AB`, `A in A` and `B in B`. We can print the total no-CP energy at nbody(1) = `A in A` + `B in B`, nbody(2) = `AB in AB`, and the interaction energy is the difference of the two. For the `bsse_type=[""cp""]` case, we want `AB in AB`, `A in AB` and `B in AB`. We _cannot_ print any total CP energies, because for those we need the monomer terms. But we _can_ print the CP interaction energy. In my view, the table as printed by the driver currently is wrong for `bsse_type=[""cp""]` case. Also, the `return_total_data` keyword has no effect on the returned energy, or the ""CURRENT ENERGY"" in the returned `wfn` object. For the `bsse_type=[""cp"", ""nocp""]` case, we want to calculate `A in A` and `B in B` in addition to the above. This allows us to calculate the counterpoise corrections to the total energies for A and B, and by extension, to AB. I think the table should be modified so that only total energies are printed in the total energies column, which means printing an empty column for `bsse_type=""cp""`, but a populated column for `bsse_type=[""cp"", ""nocp""]`. Also, it might make sense if `return_total_data=""True""` with `bsse_type=""cp""` triggered calculation essentially equivalent to `bsse_type=[""cp"", ""nocp""]`, or at least printed an error that total energies are not available with only `bsse_type=""cp""`. Thoughts?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869394243:243,energy,energy,243,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869394243,5,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"Also I'm not sure how to deal with the ambivalence between DDX and PCM in terms of the user-facing flags to enable the models and the Psi variables to store results / energy terms. PCMsolver can do PCM and COSMO, but DDX can provide domain-decomposition variants of these plus in the future linearised Poisson-Boltzmann (LPB), which is in some sense an extension to PCM. So looking ahead it feels weird to have a flag PCM to decide whether LPB is run. Similar DDX and PCMsolver will not give the same values for the solvation energy, but are still sort of doing the same thing (continuum solvation models). Any thoughts?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767#issuecomment-1326705824:167,energy,energy,167,https://psicode.org,https://github.com/psi4/psi4/pull/2767#issuecomment-1326705824,2,['energy'],['energy']
Energy Efficiency,"Also, @rmcgibbo, did you want to settle on `energy('sns-mp2')` or `energy('nnmp2')` for the call? I'm guessing the former, so changing w/i the p4 test suite. Latter appears [here](https://github.com/DEShawResearch/sns-mp2/blob/master/tests/2x%7BCC%7D.in#L30-L35). (Note that unless you're doing something I didn't notice, setting memory w/i `set ...` isn't valid; memory is a plain `memory 7 gb` statement.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/850#issuecomment-345778933:44,energy,energy,44,https://psicode.org,https://github.com/psi4/psi4/pull/850#issuecomment-345778933,2,['energy'],['energy']
Energy Efficiency,"Also, Psi4 is probably not going to get much help from the additional screening, since IIRC range-separated functionals aren't evaluated using the short-range kernel that leads to efficient screening, but the long-range kernels that **don't** become sparse even the exchange is very short-range. :disappointed:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1499#issuecomment-458518083:180,efficient,efficient,180,https://psicode.org,https://github.com/psi4/psi4/pull/1499#issuecomment-458518083,1,['efficient'],['efficient']
Energy Efficiency,"Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821086361:99,energy,energy,99,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821086361,1,['energy'],['energy']
Energy Efficiency,"Also; ```; mol = psi4.core.Molecule.from_arrays([0, 0, -0.01, 0, 0, 0.01], elez=[2,2]); activate(mol); set basis ugbs; energy('scf'); ```; fails with; ```; qcelemental.exceptions.ValidationError: Following atoms are too close: [(0, 1, 0.0)]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595613132:119,energy,energy,119,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595613132,1,['energy'],['energy']
Energy Efficiency,"Ambitious to hand-format read_options :-). What's wrong with the c-f of it, though? I can see that things like the below might need adjustment, but at a glance, it looked pretty respectful. line-break formatting isn't conveyed to the manual anyways. ```; options.add_str(""CFOUR_BASIS"", ""SPECIAL"",; ""STO-3G 3-21G 4-31G 6-31G 6-31G* 6-31G** 6-311G 6-311G* 6-311G** DZ DZP TZ TZP TZ2P PVDZ PVTZ ""; ""PVQZ PV5Z PV6Z PCVDZ PCVTZ PCVQZ PCV5Z PCV6Z AUG-PVDZ AUG-PVTZ AUG-PVTZ AUG-PVQZ AUG-PV5Z ""; ""AUG-PV6Z D-AUG-PVDZ D-AUG-PVTZ D-AUG-PVQZ D-AUG-PV5Z D-AUG-PV6Z cc-pVDZ cc-pVTZ cc-pVQZ ""; ""cc-pV5Z cc-pV6Z cc-pCVDZ cc-pCVTZ cc-pCVQZ cc-pCV5Z cc-pCV6Z PWCVDZ PWCVTZ PWCVQZ PWCV5Z ""; ""PWCV6Z PwCVDZ PwCVTZ PwCVQZ PwCV5Z PwCV6Z svp dzp tzp tzp2p qz2p pz3d2f 13s9p4d3f WMR ANO0 ""; ""ANO1 ANO2 EVEN_TEMPERED SPECIAL"");; ```. ```; if (name == ""FINDIF"" || options.read_globals()) {; /*- MODULEDESCRIPTION Performs finite difference computations of energy derivative, with respect to nuclear; displacements; for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are; not; available. -*/; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1192#issuecomment-417061812:932,energy,energy,932,https://psicode.org,https://github.com/psi4/psi4/pull/1192#issuecomment-417061812,1,['energy'],['energy']
Energy Efficiency,"An input deck would be nice. I'm sure Ed Hohenstein could probably answer; in more detail, but the SAPT codes in PSI4 are designed for SMP parallelism; on a single node, using a mix of OpenMP and threaded BLAS. Moreover, with; high-level SAPT jobs (2+3, etc), there is a non-trivial amount of I/O to be; performed (certainly much less than without DF, but still non-trivial).; Using a build with icpc/MKL, a dedicated scratch array, 64 GB of memory,; and 6 or 8 cores (a single i7 or two quad-core Xeons), we are able to run; SAPT2+3(CCD) jobs with up to 1100 nbf/30 atoms (in an aTZ basis) in about a; week of wall time. Much larger than this and the memory will certainly; become rate limiting. Are you guys trying to run this over a pNFS or something? What BLAS are you; linking against?. -Rob. On Mon, Apr 28, 2014 at 8:03 PM, rxk900 notifications@github.com wrote:. > Hello,; > One of our users hit a problem last year on our supercomputer with his; > SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation; > for his jobs for which we decided that 4 cpus would give him optimum; > efficiency. However, the jobs were large enough as to take > 1000 hours; > (also frowned upon by our sysadmins) so I was asked to look into whether he; > could make better parallel use of the processors. We had some teething; > problems bringing our new supercomputer on line last year so I wanted to; > rule out issues on our side and I think I have now ruled out issues with; > IO, memory and threading (that had affected other programs).; > Furthermore, during the investigations we noticed that ""top"" showed an; > almost equal alternation between one cpu and maximum cpus thus averaging; > above/below 50% use no matter how many cpus were requested. Roger Amos and; > I had a quick look at the SAPT papers and decided there wasn't anything; > intrinsic about the method that wouldn't allow it to parallel or would; > cause this behaviour (note I initially thought it might be a load imbala",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/57#issuecomment-41629946:963,energy,energy,963,https://psicode.org,https://github.com/psi4/psi4/issues/57#issuecomment-41629946,1,['energy'],['energy']
Energy Efficiency,"An issue relevant to `reference_wavefunction_` is how post-scf codes are getting their ref energy. Many are pulling from initialized wfn's `energy()`. As more post-scf codes set `energy_` (e.g., dfmp2, which returns a `RHFWavefunction`), this is not always guaranteed to be the expected `HF TOTAL ENERGY`. See https://github.com/psi4/psi4/pull/1381#discussion_r237680985 for a scenario.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1292#issuecomment-443474152:91,energy,energy,91,https://psicode.org,https://github.com/psi4/psi4/issues/1292#issuecomment-443474152,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"An updated script that works with current master:; ```; from qcengine.programs.dftd3 import get_dispersion_aliases; from qcengine.programs.dftd3 import dashcoeff; from psi4.driver.procrouting.dft import dft_builder; from psi4.driver import procedures; import psi4. for dtype in dashcoeff.keys() :; for func in dashcoeff[dtype][""definitions""]:; check=func in procedures['energy']; if check == False:; check=""{0:s}-{1:s}"".format(func,dtype) in procedures['energy']; if check == False:; alt= psi4.p4util.find_approximate_string_matches(func,dft_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/996#issuecomment-481998433:370,energy,energy,370,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-481998433,2,['energy'],['energy']
Energy Efficiency,"And in this special case, we can probably bypass most of the energy computation, except for some integral generation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2713#issuecomment-1239555559:61,energy,energy,61,https://psicode.org,https://github.com/psi4/psi4/issues/2713#issuecomment-1239555559,1,['energy'],['energy']
Energy Efficiency,"And with #2336 one can easily build the atomic overlap matrices, which are the only thing needed to implement generalized Pipek-Mezey of [J. Chem. Theory Comput. 10, 642 (2014)](https://doi.org/10.1021/ct401016x). All variants of generalized Pipek-Mezey (Mulliken charges, IAO charges, Becke charges) should have the share the same implementation; the only difference is how the overlap matrix is defined.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2379#issuecomment-988891390:264,charge,charges,264,https://psicode.org,https://github.com/psi4/psi4/issues/2379#issuecomment-988891390,3,['charge'],['charges']
Energy Efficiency,"Another instance of triggering the same ""Failed to converge"" print message, carried forward from [the forums](http://forum.psicode.org/t/failed-to-converge-error/1811). ```; memory 48 Gb. molecule {; 0 1; Au 0.456697 -1.333264 0.040916; C 2.603870 -0.838096 0.229755; H 2.763370 -0.719170 1.301892; C 2.477106 -2.135791 -0.222006; H 2.550111 -2.348345 -1.284567; H 2.591715 -2.990149 0.439107; B 2.865868 0.484463 -0.740811; F 1.800945 0.626222 -1.684345; F 2.929814 1.631672 0.055078; F 4.060740 0.285067 -1.428702. units angstrom; no_reorient; symmetry c1; }. set globals {; basis def2-svpd; }. energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1856#issuecomment-638995737:597,energy,energy,597,https://psicode.org,https://github.com/psi4/psi4/issues/1856#issuecomment-638995737,1,['energy'],['energy']
Energy Efficiency,"Another problematic case:; ```; molecule {; 0 2; C 0.000000000000 0.000000000000 -0.645482303943; N 0.000000000000 0.000000000000 0.553149090326; }. set basis cc-pcvdz; set reference uhf . energy('scf'); ```. I can converge the SCF if I delay DIIS start until a few iterations in, but I cannot converge the SCF with the default settings.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-509672801:189,energy,energy,189,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-509672801,1,['energy'],['energy']
Energy Efficiency,"Another small test case, from the W4-11 benchmark set of atomisation energies.; Converges with `SOSCF` just fine, but otherwise struggles. . ```; molecule mol {; 0 2; O 1.143943 0.075354 0.000000; O 0.000000 0.576945 0.000000; O -1.082114 -0.493872 0.000000; H -0.494634 -1.267419 0.000000; }. memory 2 GiB; set {; ints_tolerance 1e-12; basis aug-cc-pVTZ; # soscf true; reference uhf; }; energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-512354183:388,energy,energy,388,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-512354183,1,['energy'],['energy']
Energy Efficiency,"Anyone getting this should change the `SCF` and `SCF TOTAL ENERGY` in https://github.com/psi4/psi4/blob/master/share/python/driver_cbs.py#L430 to `HF` and `HF TOTAL ENERGY` like in the ""ccsd"" entry just below. I'll prepare a PR fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/455#issuecomment-237962287:59,ENERGY,ENERGY,59,https://psicode.org,https://github.com/psi4/psi4/issues/455#issuecomment-237962287,2,['ENERGY'],['ENERGY']
Energy Efficiency,"Anyway, the logical place to start debugging is SAD and the first iteration after it. |System|Difference in SAD energy|Difference in energy of first iteration|; |----------|----------------------------------|-----------------------------------------------|; |1| 2.387e-12|-1.405e-03|; |2| 6.253e-12|-3.704e+00|; |3| 1.364e-11|-5.389e-01|; |4| 8.868e-12|-1.833e+00|; |5|-8.868e-12|-3.321e+00|. The SAD energies are an exact match, so one would assume that the SAD densities also agree exactly. Something is causing the energy of the first iteration to change by quite a lot. This shouldn't happen: if the SAD density matrices are the same, the Fock matrices built from the SAD density matrices should also match; the orbitals in the first iteration should be practically the same. One can't compare after the first iteration, since the orbitals and densities will not be the same. So, here are the possibilities for disagreeing results. 1. Atoms in SAD converge to different solutions; 2. SAD Fock matrix is not computed properly (same input density leads to differences between runs); 3. First Fock matrix is not computed properly (same input density leads to differences between runs). 1 and 2 are unlikely, since the SAD energies agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766:112,energy,energy,112,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766,3,['energy'],['energy']
Energy Efficiency,"Apart from #442, the PRs are normally quite small so it's not much work to review them. I think we should have at least three or four signees, especially given that most of the recent PRs have had feedback from many developers anyway. If we start high, we can reduce the demands if it becomes too burdensome.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/459#issuecomment-238314013:260,reduce,reduce,260,https://psicode.org,https://github.com/psi4/psi4/issues/459#issuecomment-238314013,2,['reduce'],['reduce']
Energy Efficiency,"Apparently the problem is not completely fixed. Running (H2O)30 results in:. ```; 	MO spaces... . 	 FC OCC VIR FV ; 	----------------------; 	 30 120 570 0. 	Number of basis functions in the DF-CC basis: 2520. 	Available memory : 667572.02 MB ; 	Memory requirement for 3-index ints : 7838.47 MB ; 	Memory requirement for DF-CC int trans: 24103.73 MB ; 	Memory requirement for CC contractions: 142778.32 MB ; 	Total memory requirement for DF+CC int: 150616.79 MB ; 	Memory requirement for Wabef term : 49600.59 MB . Traceback (most recent call last):; File ""/users/damatthews/apps/psi4/bin/psi4"", line 289, in <module>; exec(content); File ""<string>"", line 121, in <module>; File ""/users/damatthews/apps/psi4/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/users/damatthews/apps/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/users/damatthews/apps/psi4/lib/psi4/driver/procrouting/proc.py"", line 1620, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn). MemoryError: std::bad_array_new_length; ```. Any ideas where to look next?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-562216701:749,energy,energy,749,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-562216701,2,['energy'],['energy']
Energy Efficiency,Apparently very easy to fall into endless recursion with MBIS volumes due to some necessary inputs also calculated by `oeprop()` and involving calls to `energy()`. You're interested in MBIS CHARGES as standalone (w/o volumes and extents) to avoid the cost of all the atomic calcs since you don't need the volume?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272#issuecomment-896976501:153,energy,energy,153,https://psicode.org,https://github.com/psi4/psi4/issues/2272#issuecomment-896976501,2,"['CHARGE', 'energy']","['CHARGES', 'energy']"
Energy Efficiency,"Are both solutions stable ? For UHF computations, it seems to me always; more safe to do a stability analysis. In some cases, it allowed me to; eliminate the higher energy solution as unstable. However, in other cases, both solutions are actually SCF minima... Trying; with different guesses then seems the only way to find the lowest energy; solution. 2016-01-14 2:42 GMT-05:00 Rob Parrish notifications@github.com:. > I have seen this before (for this exact system) - the SAD guess converges; > to the correct root, but Core does not. Not really much more to it than; > that.; > ; > -Rob; > ; > On Wed, Jan 13, 2016 at 11:33 PM, Roberto Di Remigio <; > notifications@github.com> wrote:; > ; > > Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+; > > gives very different energies.; > > The following input with the core guess gives a total energy of; > > -75.5488580481183476; > > ; > > memory 250 mb; > > molecule h2o {; > > symmetry c1; > > 1 2; > > O 0.0000000000 0.0000000000 -0.2249058930; > > H 1.4523499293 0.0000000000 0.8996235720; > > H -1.4523499293 0.0000000000 0.8996235720; > > units bohr; > > no_reorient; > > no_com; > > }; > > ; > > set {; > > basis cc-pVDZ; > > scf_type direct; > > guess core; > > reference uhf; > > e_convergence 7; > > d_convergence 7; > > }; > > ; > > energy_scf1 = energy('scf'); > > ; > > while this input with the SAD guess gives a total energy of; > > -75.6330881795159655; > > ; > > memory 250 mb; > > molecule h2o {; > > symmetry c1; > > 1 2; > > O 0.0000000000 0.0000000000 -0.2249058930; > > H 1.4523499293 0.0000000000 0.8996235720; > > H -1.4523499293 0.0000000000 0.8996235720; > > units bohr; > > no_reorient; > > no_com; > > }; > > ; > > set {; > > basis cc-pVDZ; > > scf_type direct; > > guess sad; > > reference uhf; > > e_convergence 7; > > d_convergence 7; > > }; > > ; > > energy_scf1 = energy('scf'); > > ; > > Of course, the initial guess has always a huge impact on the calculation,; > > but is the reported difference ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/211#issuecomment-171646769:165,energy,energy,165,https://psicode.org,https://github.com/psi4/psi4/issues/211#issuecomment-171646769,3,['energy'],['energy']
Energy Efficiency,"Are there other ways to deal with Douglas-Kroll-Hess (DKH) Hamiltonian? When running dk input:. molecule {; Mg; }; set basis aug-cc-pvdz-dk; set relativistic dkh; energy('scf'). ---. I got this error output:; Traceback (most recent call last):; File ""<string>"", line 20, in <module>; RuntimeError: DKH is not a valid choice",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-124904274:163,energy,energy,163,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-124904274,1,['energy'],['energy']
Energy Efficiency,"Are you thinking equilibrium and dissociated points along a potential energy curve for the standard testing suite? I favor a couple single points since couple dozen methods * 3 ref * E/G/H accumulates a lot of reference data. A hydrogen-only could be a good system to throw a high AM basis at to check puream, provided d&f make a material change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2371#issuecomment-986977719:70,energy,energy,70,https://psicode.org,https://github.com/psi4/psi4/issues/2371#issuecomment-986977719,1,['energy'],['energy']
Energy Efficiency,"Are you trying to use a Libint2 release? Keep in mind that Psi4 needs changes to the upstream buildsystem (these can be worked around) and changes to the default upstream build configuration (such that a built library won't work with any other open-source QC package). I'll collect some links here since it's worth having an issue open on this for packagers to consult (hence pinging @mbanck, @susilehtola). * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward Psi4 using a upstream Libint2 release in common with other open-source QC programs:; - [x] transition psi4 TEI #1721; - [ ] reconcile LAB's l2 cmake (that psi uses at present) https://github.com/loriab/libint/tree/l2cmake with EFV's adaptations https://github.com/evaleev/libint/pull/205; - [ ] merge https://github.com/evaleev/libint/pull/205 and release; - [ ] expand current integrals config requirements beyond current set in notes (needed before #2388); - [ ] transition psi4 OEI #2388 ; - [ ] transition psi4 integral ordering from `gss` to `sss`; - [ ] coordinate with packagers and other QC programs for a AM and integrals types l2 config options set that is adequate for all. If I'm off base @yurivict and you're already using a psi-configured l2 and this is simply a detection issue, let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2398#issuecomment-1008078498:1016,adapt,adaptations,1016,https://psicode.org,https://github.com/psi4/psi4/issues/2398#issuecomment-1008078498,2,['adapt'],['adaptations']
Energy Efficiency,"Are you using a detected pre-build pybind11? Pybind11 changes so often just now (we usually update to their HEAD once a month and need to adapt the Psi4 code) that we can't guarantee that any but the [tag](https://github.com/psi4/psi4/blob/master/external/pybind11/CMakeLists.txt#L11) works. In case you're alarmed by the fork, the alterations are just changes to the build, not to pybind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261727164:138,adapt,adapt,138,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261727164,1,['adapt'],['adapt']
Energy Efficiency,"As a note our general take it to shuffle more up to the Python layer as well, especially [solvers](https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/solvers.py). The plugin approach is defiantly the best solution I think. It has been a bit, but we should be able to register codes with Psi4 automatically to gain functionality through `psi4.energy/gradient/etc`. @loriab Can make the final call, but I suspect if adcc is on conda, we will just add it to our meta package of `psi4-rt` that will pull down all the run time dependancies (including this one) so there shouldn't be too much of a need for close coupling. . --. The Wavefunction object has the ability to store arrays, matrices, and values in a key:value fashion. Can you give a bit of a description of how complex your return objects are? You may want to consider adding to the MolSSI [QCSchema](https://github.com/MolSSI/QCSchema) project the properties that you are returning so that we can have a schema-based definition of these objects that other codes can use and conform to. --. This looks really amazing, it is awesome to see projects adopt this kind of project structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547410509:351,energy,energy,351,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547410509,1,['energy'],['energy']
Energy Efficiency,"As it never worked before, it is also not crucial to add this again. For large grids the OpenMP speedup at this place would be nearly perfect, because it parallelizes quite trivially. It would lead to a linear speedup in something like an ESP charge fit (the sample code does thankfully not use this function yet, but a rather very slow write to disk, read from disk cycle, so fallout should be quite minimal). It would be quite simple for me to add threading back to this function if required. The only thing necessary (in my opinion, need to check the code better) would be to make the buffer object in OneBodyAOInt thread-local.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1900#issuecomment-633045614:243,charge,charge,243,https://psicode.org,https://github.com/psi4/psi4/pull/1900#issuecomment-633045614,2,['charge'],['charge']
Energy Efficiency,As long as the threads are only reduced during the PK steps it would only have benefits. No threads that do no work and allocate memory (Even if it doesn't matter in practice). The automatic selection probably ensures the in-core algorithm for these small calculations but could you test `pk_algo = YOSHIMINE/REORDER` and `PK_NO_INCORE True` as well? We probably have no test coverage.; Limiting `nthreads` in the PKManager https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/PKmanagers.cc#L154 might solve headaches in the other algorithms. I saw a `ntask < nthreads` check in Yoshimine. If that exceeds time you planned to invest for the PK bug fix that is also fine.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2763#issuecomment-1298619970:32,reduce,reduced,32,https://psicode.org,https://github.com/psi4/psi4/pull/2763#issuecomment-1298619970,2,"['allocate', 'reduce']","['allocate', 'reduced']"
Energy Efficiency,"As mentioned in the documentation @loriab quotes above, there is also a test case available of a QM computation in an MM point-charge field, the extern1 test case (psi4/tests/extern1).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/341#issuecomment-209534925:127,charge,charge,127,https://psicode.org,https://github.com/psi4/psi4/issues/341#issuecomment-209534925,1,['charge'],['charge']
Energy Efficiency,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/937#issuecomment-376595463:384,energy,energy,384,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463,2,['energy'],['energy']
Energy Efficiency,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:872,energy,energy,872,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303,5,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"As the above posts have stated Ag is your problem. That being said STO-3G is defined for Ag, without an ECP, so the calculation you are trying to do should work with the correct set of options (and if it doesn't that's a bug). I suspect the problem is that conv-mp2 is still trying to use a DF-HF reference, so let's turn that off too. Try this input:. ```; molecule {; 1 1; Ag 0.37900000 -2.54600000 8.09100000; }. set{; basis sto-3g; df_scf_guess false; scf_type direct; guess sad; }; energy('conv-mp2'); set molden_write true; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/105#issuecomment-144746819:487,energy,energy,487,https://psicode.org,https://github.com/psi4/psi4/issues/105#issuecomment-144746819,1,['energy'],['energy']
Energy Efficiency,"At least the speed issue is probably fundamental. Calculating the potential and the field at a grid point amounts to calculating a full set of one-electron Coulomb integrals for every one of these points. (Physically, the potential caused by a distribution of electron density onto a point r is the same as evaluating the effect of a charged nucleus at r onto the distribution of electrons.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1614#issuecomment-487980493:334,charge,charged,334,https://psicode.org,https://github.com/psi4/psi4/issues/1614#issuecomment-487980493,1,['charge'],['charged']
Energy Efficiency,"Awesome. I'll merge this into my PR and rebase tomorrow morning. On Tue, Mar 7, 2017 at 11:05 PM, Lori A. Burns <notifications@github.com>; wrote:. > @rmcgibbo <https://github.com/rmcgibbo>, I made a PR; > <https://github.com/rmcgibbo/psi4public/pull/1> to your PR so that; > variable labels stay consistent. This/your PR also needs rebasing. So; > please either (a) pull in my PR and rebase this one or (b) let me know, and; > I'll rebase my branch and do a PR (with your commit) directly. Thanks for; > the contribution kick-starting our Wavefunction.variables_ work.; >; > Btw, the git history rewrite this fall reduced repo size by 90%. If you; > wanted much quicker clones, you could delete your fork and re-fork.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/643#issuecomment-284940969>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAnI_gsl1aKAenbQoYI_7elUN9aYliQyks5rjikCgaJpZM4MWI2g>; > .; >. -- ; -Robert",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/643#issuecomment-284949491:615,reduce,reduced,615,https://psicode.org,https://github.com/psi4/psi4/pull/643#issuecomment-284949491,1,['reduce'],['reduced']
Energy Efficiency,"B3u -0.075684 1B3g -0.003943 1B1g -0.003943; 4Ag -0.003943 1B2g -0.003943 5Ag -0.003943; 3B1u 0.121472 3B3u 0.121472 3B2u 0.121472; 6Ag 0.225602 7Ag 0.375520 8Ag 0.375520; 2B3g 0.375520 2B2g 0.375520 2B1g 0.375520; 4B2u 0.414098 1Au 0.414098 4B3u 0.414098; 5B3u 0.414098 4B1u 0.414098 5B2u 0.414098; 5B1u 0.414098 6B1u 1.165651 6B2u 1.165651; 6B3u 1.165651 9Ag 1.739906 10Ag 1.739906; 3B3g 1.739906 3B1g 1.739906 3B2g 1.739906; 7B1u 1.850114 8B1u 1.850114 7B3u 1.850114; 8B3u 1.850114 7B2u 1.850114 2Au 1.850114; 8B2u 1.850114 11Ag 2.783091. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @RHF Final Energy: -24.23681570008748. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -30.3554852212569273; Two-Electron Energy = 6.1186695211694495; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -24.2368157000874760. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-10 at Sat Jan 9 01:41:54 2016; Module time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes; Total time:; user time = 14.36 seconds = 0.24 minutes; system time = 0.33 seconds = 0.01 minutes; total time = 3 seconds = 0.05 minutes. **\* tstart() called on node5-027-10; **\* at Sat Jan 9 01:41:54 2016.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:7344,Energy,Energy,7344,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,1,['Energy'],['Energy']
Energy Efficiency,"BTW the energy agreement b/w PySCF and psi4 for Ethane with the above script is up to 1e-11 a.u. so I guess, this is as good as it is gonna get.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1487635966:8,energy,energy,8,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1487635966,1,['energy'],['energy']
Energy Efficiency,"Back to the examples from https://github.com/psi4/psi4/issues/817#issuecomment-351739145, @robertodr has a scheme that won't get the dir right from within the psi input file, but it will fix the dir upon completion of psi4 execution, as shown below. Would that fix your pipeline for now?. ```; >>> cat test.py; import os. geometry('H -.5 0 0\nH .5 0 0\nsymmetry c1'). pcm = { ; Medium { Solvent = Water }; Cavity { Type = GePol }; }. energy('HF/3-21G'). print(os.getcwd()). >>> psi4 test.py ; /tmp/psi.12147.pcmsolver.604855c3; >>> pwd; /home/raimis/debug/psi4_PCM; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-356990910:434,energy,energy,434,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-356990910,1,['energy'],['energy']
Energy Efficiency,"Based on the output file, `nalpha` and `nbeta` are obviously wrong (up from 5 to 6 for this computation), presumably due to `num_frozen_docc` handling. I doubt this second issue is related to the `num_frozen_docc` segfault. ```; Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ... ==> Pre-Iterations <==. SCF Guess: Orbitals guess was supplied from a previous computation. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 28 28 6 6 6 0; -------------------------------------------------------; Total 28 28 6 6 6 0; -------------------------------------------------------; ```. I can look into what's contaminating the occupation count for (2), but #2619 needs to come in first. Is there anything _else_ that's wrong in my summary?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1209930732:229,Charge,Charge,229,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1209930732,1,['Charge'],['Charge']
Energy Efficiency,"Because this would be a very lengthy digression in the eventual PR, I'll include this here:; One of the hard parts of implementing this PR is accounting for reorientation. Consider the following input:; ```; molecule {; noreorient; nocom; 0 2; N; C 1 r1; H 2 r2 1 a1 ; H 2 r2 1 a1 3 d1. r1 = 1.0 ; r2 = 1.0 ; a1 = 120 ; d1 = 180 ; }. set {; basis cc-pvdz; reference uhf ; }. energy('scf'); clean(). molecule {; noreorient; nocom; 0 2; N; C 1 r1; H 2 r2 1 a1 ; H 2 r2 1 a1 3 d1. r1 = 1.0 ; r2 = 1.0 ; a1 = 120 ; d1 = 178 ; }. energy('scf'); clean(). molecule {; noreorient; nocom; 0 2; N; C 1 r1; H 2 r2 1 a1 ; H 2 r2 1 a2 3 d1. r1 = 1.0 ; r2 = 1.0 ; a1 = 120 ; a2 = 118 ; d1 = 180 ; }. energy('scf'); ```. Although these molecules only differ by two degrees, Psi puts them in different coordinate systems. Molecule 2 swaps the y and z axes compared to Molecule 1. The y axis of Molecule 1 becomes the -x axis of Molecule 3. Accordingly, correlation tables will fail to correlate the point groups properly. Both molecules have reflection across the z-axis as a symmetry element. Those correlate to y-reflection and x-reflection respectively for Molecule 1, which has no z-reflection. Findif displacements preserve orientation because `fix_orientation` is applied to a clone of the reference molecule in `driver.py` before the displaced geometry is loaded, and the geometries loaded are Cartesian. ZMAT geometries are automatically reoriented in `reinterpret_coordinates`. So in the easily forseeable cases that a user wants to use a displaced ZMAT, or the molecule reading orbitals isn't a geometry-shifted clone of the molecule the guess came from, reorientation must be explicitly accounted for.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1297#issuecomment-443296950:375,energy,energy,375,https://psicode.org,https://github.com/psi4/psi4/issues/1297#issuecomment-443296950,3,['energy'],['energy']
Energy Efficiency,"Before anyone else tries to track down what's going on: I've found the ""problem"", working on a sustainable fix with @loriab 😬",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1604#issuecomment-806174930:95,sustainab,sustainable,95,https://psicode.org,https://github.com/psi4/psi4/issues/1604#issuecomment-806174930,1,['sustainab'],['sustainable']
Energy Efficiency,"Before, ""SAPT0 DISP ENERGY"" did not match ""SAPT DISP ENERGY"" for a SAPT0 job. Now, the values are identical.; [waterdim_oldsatpvar.txt](https://github.com/psi4/psi4/files/366399/waterdim_oldsatpvar.txt); [waterdim_newsaptvar.txt](https://github.com/psi4/psi4/files/366400/waterdim_newsaptvar.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/433#issuecomment-232994845:20,ENERGY,ENERGY,20,https://psicode.org,https://github.com/psi4/psi4/pull/433#issuecomment-232994845,2,['ENERGY'],['ENERGY']
Energy Efficiency,Btw according to Henrik Koch's recent paper [doi:10.1021/acs.jctc.0c00686](https://pubs.acs.org/doi/10.1021/acs.jctc.0c00686) the CC3 implementation in Psi4 is slower by an order or two of magnitude than the most efficient implementations in other codes...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085#issuecomment-763014073:213,efficient,efficient,213,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763014073,1,['efficient'],['efficient']
Energy Efficiency,"Bumping up just the eri3 for energy to 8 would likely be manageable, but I don't know about 10 or 12. I'm curious what EFV thinks at your query https://github.com/evaleev/libint/issues/250",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1124275738:29,energy,energy,29,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1124275738,1,['energy'],['energy']
Energy Efficiency,But the energy is still going down all the time!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1716#issuecomment-530374708:8,energy,energy,8,https://psicode.org,https://github.com/psi4/psi4/issues/1716#issuecomment-530374708,1,['energy'],['energy']
Energy Efficiency,"By the way, @ajmisquitta, I noticed you have a fork of psi4 from last summer. In October we re-wrote our git history to reduce the repository size by 90%. This makes pre-history-rewrite and post-history-rewrite repositories unreconcilable. If this is the source you are compiling from and you want to continue with psi4 1.0 era code, stick with your repository. Likewise if you have local development associated with your psi4 fork. Otherwise, I strongly recommend deleting your repository and re-forking. This will give you access to 1.1 era code and can interact with the main psi4/psi4 repo. (It will cut off access to building 1.0.) There's some significant build changes with 1.1, but a lot of [good features](https://github.com/psi4/psi4/issues/485), too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626#issuecomment-281235825:120,reduce,reduce,120,https://psicode.org,https://github.com/psi4/psi4/issues/626#issuecomment-281235825,1,['reduce'],['reduce']
Energy Efficiency,"CH 14 A 15 D180; C 16 RCs 17 A 14 D180; H 18 RCH 16 A 17 D180; H 18 RCH 16 A 19 D180. RCs=1.45; RCd=1.36; RCH=1.08; A=120.0; D=0.0; D180=180.0; }. set basis STO-3G; set reference rohf; set scf_type pk; set docc [ 28, 4 ]; set socc [ 0, 1 ]; set e_convergence 1e-13; set d_convergence 1e-13; set ints_tolerance 0.0; # Include 20% old density; set damping_percentage 20; # and stop damping once density has converged to 1e-3; set damping_convergence 1e-3. set dmrg_irrep 1; set dmrg_multiplicity 2; set restricted_docc [ 9, 0 ]; set active [ 38, 9 ]. set dmrg_sweep_states [ 250, 250 ]; set dmrg_sweep_energy_conv [ 1e-8, 1e-8 ]; set dmrg_sweep_max_sweeps [ 10, 10 ]; set dmrg_sweep_noise_prefac [ 0.05, 0.00 ]; set dmrg_sweep_dvdson_rtol [ 1e-5, 1e-8 ]; set dmrg_print_corr false; set dmrg_mps_write false. set dmrg_scf_active_space loc; set dmrg_local_init true. set dmrg_molden_write true # DMRG-CI pseudocanonical orbitals; set dmrg_opdm_ao_print true # DMRG-CI density in the AO basis. energy('dmrg-ci'); ```. ```; @ROHF iter 32: -342.84910912994206 -1.13687e-13 7.97882e-15 DIIS; @ROHF iter 33: -342.84910912994206 0.00000e+00 5.47136e-15 DIIS; ```. ```; Psi4 symmetry group was found to be <cs>.; wfn_irrep = 1; wfn_multp = 2; numOrbitals = [ 47 , 9 ]; R(O)HF DOCC = [ 28 , 4 ]; R(O)HF SOCC = [ 0 , 1 ]; frozen_docc = [ 9 , 0 ]; active = [ 38 , 9 ]; virtual = [ 0 , 0 ]; nElectrons = 65; nEl. active = 47; ###########################################################; ### ###; ### DMRG-SCF ###; ### ###; ### CheMPS2 by Sebastian Wouters ###; ### https://github.com/SebWouters/CheMPS2 ###; ### Comput. Phys. Commun. 185 (6), 1501-1514 (2014) ###; ### ###; ###########################################################. Number of variables in the x-matrix = 342; CheMPS2 output is temporarily written to the file susi2.out.chemps2 and will be copied here.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Transforming the one-electron integrals and constructi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464#issuecomment-244580097:1528,energy,energy,1528,https://psicode.org,https://github.com/psi4/psi4/issues/464#issuecomment-244580097,1,['energy'],['energy']
Energy Efficiency,"CISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0; 11 8 4 -0.2003286173 -0.0000000000 0.0000000230 0. CISD iterations converged!. CISD variational energy: -0.200328617292; CISD transition energy: -0.200328617850. OS SCS-MP2 correlation energy: -0.179813193864; SS SCS-MP2 correlation energy: -0.016670275217; SCS-MP2 correlation energy: -0.196483469081; * SCS-MP2 total energy: -76.213780024364. OS MP2 correlation energy: -0.149844328220; SS MP2 correlation energy: -0.050010825651; MP2 correlation energy: -0.199855153871; * MP2 total energy: -76.217151709154. OS CISD correlation energy: -0.158048399059; SS CISD correlation energy: -0.042280218791; CISD correlation energy: -0.200328617292; * CISD total energy: -76.217625172575. Total time for CISD iterations: 0.06 s (user); 0.11 s (system); 0 s (total). Time per iteration: 0.01 s (user); 0.01 s (system); 0.00 s (total). *** tstop() called on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.06 seconds = 0.00 minutes; 	system time = 0.11 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.52 sec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:11497,energy,energy,11497,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['energy'],['energy']
Energy Efficiency,"Can confirm it, but had to fiddle with the input to see the error because coordinates were returning all 0s (integer rounding). This input work on my machine:; ```; molecule mol {; 0 1; symmetry c1; H 0.0 0.0 0.0; H 0.0 0.0 R1; H 0.0 0.0 R2; H 0.0 0.0 R3; }. set basis STO-3G; set ci_maxiter 100. # This crashes at R=0.68; #for ir in range(60, 80, 2):; # This crashes at R=0.74; for ir in range(68, 80, 2):; mol.R1 = 1.*(float(ir)/100.); mol.R2 = 2.*(float(ir)/100.); mol.R3 = 3.*(float(ir)/100.); ci_e=energy('fci'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/759#issuecomment-313824229:503,energy,energy,503,https://psicode.org,https://github.com/psi4/psi4/issues/759#issuecomment-313824229,1,['energy'],['energy']
Energy Efficiency,Can you add the water dimer and excitation energy tests back in? Meta-GGA UKS should be fixed in latest master.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-360958436:43,energy,energy,43,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-360958436,1,['energy'],['energy']
Energy Efficiency,"Can you clarify what was giving you trouble? A buf4_init() call shouldn't yield any data, because it doesn't attempt to allocate memory for the tensor data itself, just meta-data like row/column lookups. The underlying file4_init() call *can* be associated with data that's already in cache (in which case I wouldn't describe it as ""loading"", just assigning a pointer to data in memory). Sorry to be picky; I just want to the docs to match what's happening in the code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/550#issuecomment-267189874:120,allocate,allocate,120,https://psicode.org,https://github.com/psi4/psi4/pull/550#issuecomment-267189874,1,['allocate'],['allocate']
Energy Efficiency,"Cannot replicate this bug. Iterations are oscillating like crazy, but no; singularity. I get similar oscillations for singlet cation in cc-pVDZ; (eventually converges) with both DF and ID. -Rob. On Fri, Apr 29, 2016 at 1:54 PM, Rob Parrish robparrish@gmail.com wrote:. > Does the singlet cation exhibit the same failure with RHF/SAD? Could be a; > bad eigenvalue in the DF metric, though I have traps in for this. Compiling; > a fork to check this out.; > ; > -Rob; > ; > On Fri, Apr 29, 2016 at 12:56 PM, Daniel Smith notifications@github.com; > wrote:; > ; > > The following either gives NaN energy or (positive) 60,000 [Eh]; > > depending on MKL version and compile options. All basis sets smaller than; > > aug-cc-pVQZ seem to check out, did not try larger.; > > ; > > molecule mol {; > > 0 2; > > C -2.83891 -0.84747 -0.20778; > > N -2.06959 -0.27604 0.77905; > > C -0.85937 -0.82512 0.74757; > > N -0.82980 -1.74677 -0.21226; > > C -2.05910 -1.77487 -0.83179; > > C -2.45490 0.86620 1.59959; > > C 0.35903 -2.49473 -0.61265; > > F -1.01767 1.46174 -1.11980; > > B 0.28985 1.63764 -0.63648; > > F 0.23738 1.82826 0.77419; > > F 0.89453 2.73957 -1.24020; > > F 1.05039 0.46734 -0.88673; > > H -0.02604 -0.54755 1.38339; > > H -2.27287 -2.45330 -1.64959; > > H -3.86751 -0.55086 -0.37733; > > H -3.45079 0.68580 2.01748; > > H -1.72185 0.98138 2.40249; > > H -2.44673 1.75972 0.96603; > > H 0.98379 -1.85263 -1.24323; > > H 0.91655 -2.78676 0.28358; > > H 0.03922 -3.39046 -1.15377; > > C 2.81822 0.12352 1.52490; > > C 3.26768 -0.78277 0.56145; > > H 3.28632 0.11977 2.50813; > > H 2.01109 0.81253 1.27433; > > N 3.64537 -1.55240 -0.23308; > > }; > > ; > > set {; > > basis cc-pVQZ; > > scf_type df; > > guess gwh; > > reference rohf; > > }; > > ; > > energy('SCF'); > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/371",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/371#issuecomment-215889548:594,energy,energy,594,https://psicode.org,https://github.com/psi4/psi4/issues/371#issuecomment-215889548,2,['energy'],['energy']
Energy Efficiency,"Carrying forward another case that SOSCF can't get. It can converge to a saddle point on the orbital surface, but not to a minimum. This is yet another case that originates from open-shell SAPT on the forums. We'll need to investigate whether the numerical problem is simply ill-conditioned, or if this means we need to improve open-shell SOSCF. ```; molecule {; 0 3; C 2.146191145 -2.250869610 -0.229432545; H 2.796153988 -3.111981487 -0.362347932; H 1.465215175 -2.173397551 -1.073297820; H 1.533174247 -2.389665597 0.657575818; C 2.900923223 -0.952856733 -0.096839038; O 2.324207776 0.122438123 0.059749704; N 4.251556346 -1.050359417 -0.161457007; H 4.652507974 -1.960893396 -0.290972105; C 5.119798458 0.101611043 -0.052013925; H 4.483304328 0.969911486 0.082770682; H 5.785387965 0.010155845 0.804078956; H 5.714264181 0.231031532 -0.954273112; --; 0 1; O -0.392018453 -0.384718737 0.076071325; H -0.911460851 0.413812040 0.177648774; H 0.524903820 -0.068484694 0.090511364; }. set {; reference uhf; basis jun-cc-pVDZ; maxiter 200; stability_analysis follow; soscf true; soscf_print true; soscf_max_iter 50; soscf_conv 1e-4; }. energy('hf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1716#issuecomment-546623859:1134,energy,energy,1134,https://psicode.org,https://github.com/psi4/psi4/issues/1716#issuecomment-546623859,2,['energy'],['energy']
Energy Efficiency,"Case in point, I was doing a CAS(4,6)CI calculation on HBr at 1.5A/cc-pVDZ/cc-pVDZ-JKFIT (default DF basis), and DETCI returned a ~700 mEh correclation energy from the tiny 16-determinant CAS. @JonathonMisiewicz quickly figured out DETCI wasn't using DF integrals. It turned out that cc-pVDZ-JKFIT is a very bad DF basis for Br, and should probably not have been used anyway, but it would have been nice to at least get a CASCI energy consistent with the SCF calculation, imho.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2883#issuecomment-1440866212:152,energy,energy,152,https://psicode.org,https://github.com/psi4/psi4/issues/2883#issuecomment-1440866212,2,['energy'],['energy']
Energy Efficiency,Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------		 ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.057517917037 15.994914619570		 O 0.000000000000 0.000000000000 -0.057517917037 15.994914619570; H 0.000000000000 0.000000000000 0.912851082963 1.007825032230		 H 0.000000000000 0.000000000000 0.912851082963 1.007825032230. Running in c2v symmetry.										 Running in c2v symmetry. Rotational constants: A = ************ B = 18.88315 C = 18.88315 [cm^-1]			 Rotational constants: A = ************ B = 18.88315 C = 18.88315 [cm^-1]; Rotational constants: A = ************ B = 566102.67788 C = 566102.67788 [MHz]			 Rotational constants: A = ************ B = 566102.67788 C = 566102.67788 [MHz]; Nuclear repulsion = 4.362688508557055								 Nuclear repulsion = 4.362688508557055. Charge = 0											 Charge = 0; Multiplicity = 2											 Multiplicity = 2; Electrons = 9											 Electrons = 9; Nalpha = 5											 Nalpha = 5; Nbeta = 4											 Nbeta = 4. ==> Algorithm <==											 ==> Algorithm <==. SCF Algorithm Type is PK.										 SCF Algorithm Type is PK.; DIIS enabled.												 DIIS enabled.; MOM disabled.												 MOM disabled.; Fractional occupation disabled.									 Fractional occupation disabled.; Guess Type is SAD.											 Guess Type is SAD.; Energy threshold = 1.00e-06										 Energy threshold = 1.00e-06; Density threshold = 1.00e-06										 Density threshold = 1.00e-06; Integral threshold = 1.00e-12										 Integral threshold = 1.00e-12. ==> Primary Basis <==											 ==> Primary Basis <==. Basis Set: DZ												 Basis Set: DZ; Blend: DZ												 Blend: DZ; Number of shells: 8											 Number of shells: 8; Number of basis functions: 12									 Number of basis functions: 12; Number of Cartesian functions: 12									 Number of Cartesian functions: 12; Spherical Harmonics?: false										 Spherical Harm,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:10038,Charge,Charge,10038,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,2,['Charge'],['Charge']
Energy Efficiency,"Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; F 1.054979085535 0.279491800552 0.000000000000 18.998403162730; C -0.000320914465 -0.577108199448 0.000000000000 12.000000000000; C -1.279120914465 0.226491800552 0.000000000000 12.000000000000; H 0.072379085535 -1.206508199448 -0.891000000000 1.007825032230; H 0.072279085535 -1.206508199448 0.891000000000 1.007825032230; H -2.153920914465 -0.429408199448 -0.000100000000 1.007825032230; H -1.322020914465 0.874191800552 0.881000000000 1.007825032230; H -1.321920914465 0.874291800552 -0.880900000000 1.007825032230. Running in c1 symmetry. Rotational constants: A = 1.21162 B = 0.32319 C = 0.28216 [cm^-1]; Rotational constants: A = 36323.59189 B = 9689.02155 C = 8459.03982 [MHz]; Nuclear repulsion = 80.019990391667150; ```. Reading this into IQmol and running ""Symmetrize geometry"", I get; ```; ==> Geometry <==. Molecular point group: cs; Full point group: Cs. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; F -0.264271602373 1.058895456489 0.000000000000 18.998403162730; C 0.577048397627 -0.008634543511 0.000000000000 12.000000000000; C -0.244891602373 -1.275724543511 0.000000000000 12.000000000000; H 1.207428397627 0.054945456489 -0.891000000000 1.007825032230; H 1.207428397627 0.054945456489 0.891000000000 1.007825032230; H 0.398348397627 -2.159884543511 0.000000000000 1.007825032230; H -0.893191602373 -1.309244543511 0.880950000000 1.007825032230; H -0.893191602373 -1.309244543511 -0.880950000000 1.007825032230. Running in cs symmetry. Rotational constants: A = 1.21161 B = 0.32319 C = 0.28216 [cm^-1]; Rotational constants: A = 36323.26201 B = 9689.02376 C = 8459.02361 [MHz]; Nuclear repulsion = 80.019847421417836; ```. However, the HF/cc-pVDZ energies appear almost identical: `-178.08964068212876` for the pubchem structure vs `-178.08964078908636` for th",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2463#issuecomment-1062277252:1232,charge,charge,1232,https://psicode.org,https://github.com/psi4/psi4/issues/2463#issuecomment-1062277252,1,['charge'],['charge']
Energy Efficiency,"Certainly the flexibility of the optimizer oughtn't be reduced. In the absence of fixed/frozen keywords or user supplied/edited intco (do you need a keyword to signal do-read-intco instead of accepting any it finds?), it's probably reasonable to assume a full optimization is desired. Maybe `grep '~'` needs to catch a `gradient.rms()`, too, next to the optking-active rms gradient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196021110:55,reduce,reduced,55,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196021110,1,['reduce'],['reduced']
Energy Efficiency,"Certainly. Polluted might have been too harsh, cluttered may be a more appropriate word for it. All variables are currently declared at the beginning of the function. Depending on the type of sort requested, some of them may never be initialized/used, but because they are declared at the top they are always visible and mutable inside the switch cases, loops, etc. This makes debugging more challenging than it has to be, as it is not possible to tell at a glance which of the variables with suspicious (negative or power-of-two) values are just uninitialized, as seen in the stack trace in https://github.com/psi4/psi4/issues/2261#issuecomment-1227164277 . In general variables should enter scope when they are needed and go out of scope when they are no longer required, and be `const` if they are never modified.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2717#issuecomment-1243470370:517,power,power-of-two,517,https://psicode.org,https://github.com/psi4/psi4/pull/2717#issuecomment-1243470370,1,['power'],['power-of-two']
Energy Efficiency,Change energy() function reference to be clickable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/493#issuecomment-258531474:7,energy,energy,7,https://psicode.org,https://github.com/psi4/psi4/pull/493#issuecomment-258531474,1,['energy'],['energy']
Energy Efficiency,"Change:. scf_type pk. Justin Turney, Ph.D.; Senior Research Scientist; CCQC/UGA. On Thu, Oct 1, 2015 at 10:50 AM, mberdakin notifications@github.com wrote:. > I don't want to take more of your time.; > I tried the input that you sent me and the calculation ends with the; > ; > ## following error; > ; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File """", line 23, in; > File ""/home/matias/anaconda/share/psi/python/driver.py"", line 637, in; > energy; > procedures['energy']lowername http://lowername,%20**kwargs; > File ""/home/matias/anaconda/share/psi/python/proc.py"", line 582, in run_mp2; > run_conv_omp2(name, **kwargs); > File ""/home/matias/anaconda/share/psi/python/proc.py"", line 538, in; > run_conv_omp2; > psi4.occ(); > ; > ## RuntimeError: PSIO Error; > ; > In the input you used some keywords that i'm not familiar with, so i have; > to study the manual a little more, to understand the error.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/105#issuecomment-144750805.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/105#issuecomment-144751892:563,energy,energy,563,https://psicode.org,https://github.com/psi4/psi4/issues/105#issuecomment-144751892,2,['energy'],['energy']
Energy Efficiency,"Changing the nuclear charge is the easiest thing to do. But it makes me; nervous because now the nuclear charge is not really the nuclear charge,; and others who are not ""in the know"" could fail to take account of this; when accessing the nuclear charge. On Apr 19, 2017 8:58 PM, ""fevangelista"" <notifications@github.com> wrote:. > @andysim <https://github.com/andysim>: I am super excited about this; > code! I was wondering if you could answer a few questions so that I can; > start to think about how to write the interface with forte. How do you; > handle the reduced number of electrons? Do you redefine the atomic charge; > (Z) or just subtract the number of core electrons? Is this info available; > from Wavefunction? Let us know if we can be of any help!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/681#issuecomment-295521147>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QducGsSjAdZ3Wa5g8-sa46HZa75tbks5rxq3MgaJpZM4NCEGk>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681#issuecomment-295524802:21,charge,charge,21,https://psicode.org,https://github.com/psi4/psi4/pull/681#issuecomment-295524802,6,"['charge', 'reduce']","['charge', 'reduced']"
Energy Efficiency,Check the output for the water+_homo-4.out in the Psi4 1.4(...) version. **That's the converged energy in PSI4!** Hence this issue. Its clearly converging to some crazy unphysical state. I would not worry if it was just a strange energy... MOM is like that. But this is an impossible energy!. The whole PySCF thing is a different ordeal that probably has to do with some weird reordering in the .fchk writer.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692#issuecomment-518740195:96,energy,energy,96,https://psicode.org,https://github.com/psi4/psi4/issues/1692#issuecomment-518740195,6,['energy'],['energy']
Energy Efficiency,"Closing the issue because of ADIIS. The first example here converges with ADIIS and/or a better SCF guess.; The second example here converges with a suitable basis set (please use augmented functions for anions). With a slight (ADIIS-enabled) modification of the original input file:; ```; molecule LiF {; symmetry c1; 1 1; Li 0.000000000 0.000000000 0.000000000; --; -1 1; F 16.000000000 0.000000000 0.000000000; }; set basis cc-pVDZ; set stability_analysis follow; set reference uhf ; set max_attempts 5; set SCF_INITIAL_START_DIIS_TRANSITION 1e-2. energy('scf'); ```. I converge to a solution with an instability eigenvalue of: -0.000001. Given the choice between using a physical basis set or trying to deal with _that_ instability, I'd rather use the physical basis set.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433#issuecomment-1156915793:551,energy,energy,551,https://psicode.org,https://github.com/psi4/psi4/issues/1433#issuecomment-1156915793,1,['energy'],['energy']
Energy Efficiency,"Commenting out an extra cmake line fixes the `coreNone` to `core.so`. Basic, but works. ```; >>> (1.3.x) ll stage/lib/psi4/; total 25704; -rwxr-xr-x. 1 psilocaluser psilocaluser 26286096 Nov 1 16:43 core.so; drwxr-xr-x. 7 psilocaluser psilocaluser 4096 Nov 1 15:58 driver; -rw-r--r--. 1 psilocaluser psilocaluser 5898 Nov 1 15:08 extras.py; -rw-r--r--. 1 psilocaluser psilocaluser 2934 Nov 1 14:50 header.py; -rw-r--r--. 1 psilocaluser psilocaluser 3693 Nov 1 15:08 __init__.py; -rw-r--r--. 1 psilocaluser psilocaluser 1144 Nov 1 16:43 metadata.py; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 16:14 __pycache__; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 15:20 tests; ```; ```; >>> (1.3.x) stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; 	SCF energy........................................................PASSED; ```; ```; >>> (1.3.x) git diff; diff --git a/psi4/src/CMakeLists.txt b/psi4/src/CMakeLists.txt; index da11518..b287b0d 100644; --- a/psi4/src/CMakeLists.txt; +++ b/psi4/src/CMakeLists.txt; @@ -134,6 +134,6 @@ message(STATUS ""Psi4 rpath: ${psi4_RPATH}""); set_target_properties(core PROPERTIES PREFIX ""${PYTHON_MODULE_PREFIX}"" # for python module; OUTPUT_NAME core; EXPORT_NAME core; - SUFFIX ""${PYTHON_MODULE_EXTENSION}"" # for python module; + #SUFFIX ""${PYTHON_MODULE_EXTENSION}"" # for python module; INSTALL_RPATH ""${psi4_RPATH}""; BUILD_WITH_INSTALL_RPATH ON); diff --git a/psi4/src/create_new_plugin.cc b/psi4/src/create_new_plugin.cc; index 3734a7b..6f2bde2 100644; --- a/psi4/src/create_new_plugin.cc; +++ b/psi4/src/create_new_plugin.cc; @@ -32,6 +32,7 @@; #include <regex>; #include <sstream>; #include <string>; +#include <iterator>; ; #include ""psi4/psi4-dec.h""; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299120848:737,energy,energy,737,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299120848,2,['energy'],['energy']
Energy Efficiency,"Communicating with Daniel, the challenge is that the solver somehow was sticking to a symmetry solution inherent in the molecule, this while a no symmetry solution was requested. I would expect a symmetry broken solution if I tell the calculation to assume a symmetry lower than possible (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com> wrote:; > ; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken sol'n (perhaps through geometry tweaks or stability analysis) or with it being the default sol'n?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349492637:315,energy,energy,315,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349492637,1,['energy'],['energy']
Energy Efficiency,"Conceptual questions before I start a proper review: is it possible to have a J and K algorithm where implementing the two _in a single algorithm_ is more efficient than implementing both in a mix-and-match fashion? If so, how are going to take advantage of the efficiency gains from combining them?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762#issuecomment-1302399200:155,efficient,efficient,155,https://psicode.org,https://github.com/psi4/psi4/pull/2762#issuecomment-1302399200,1,['efficient'],['efficient']
Energy Efficiency,Confirmed this bug. The CI DIPOLE and CI QUADROPOLE is exactly zero. Probably not getting set in the code. . Energy is correct.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/126#issuecomment-121706906:109,Energy,Energy,109,https://psicode.org,https://github.com/psi4/psi4/issues/126#issuecomment-121706906,1,['Energy'],['Energy']
Energy Efficiency,"Confirmed to also be broken on `1.2a1.dev508` which is pre-DFHelper and pre-gau2grid. Psi's `molinstance.Z(atomindex)` returns nuclear charge (so `0.0` for ghosts), not atomic number (as one might think from the function name), so I can see room for programming error there. But I'm not seeing anywhere that CAM is singled out from other functional, so I share your confusion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/900#issuecomment-360582523:135,charge,charge,135,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360582523,1,['charge'],['charge']
Energy Efficiency,"Constrained optimizations are so often poorly (overly) interpreted and; erratic (dependent on initial guess, finite steps, ...) in their behavior; that I have never invested much time into them. It would not surprise me; if there were a problem with them in PSI4. However, I don't understand the; point of your first plot. The HF energies of the structures are fine, but; the MM ones are way too high? Or are these plots of different structures?. On Thu, Mar 23, 2017 at 7:06 PM, Chaya Stern <notifications@github.com>; wrote:. > First, your initial geometry has a dihedral of 180, but your initial step; > is 0, so that's an enormous perturbation to introduce through constraints;; > setting start_angle = 181.0; >; > I also added symmetry c1 to the molecule definition section, to make sure; > weird things don't happen as the symmetry changes.; >; > I had done both of these things too (Sorry, I probably should've posted; > that too) and while the optimizations did converge (although not for all; > structures), the structures were still of very high energy when compared to; > the molecular mechanics energy of the optimized structure. When I generated; > the starting structures outside of psi4, the molecular mechanics energies; > were much closer to the QM energies (as it should be since the parameters; > were fit to reproduce this scan); >; > Here; > <https://github.com/ChayaSt/torsionfit/blob/ddg/examples/butane/torsion_scans/psi4_archive/Psi4_QM_MM_comparison.pdf>; > is a figure comparing the QM and MM energies from structures generated with; > psi4; > Here; > <https://github.com/ChayaSt/torsionfit/blob/ddg/examples/butane/torsion_scans/psi4_archive/Pymol_scan_comparison.pdf>; > is one comparing QM and MM energies from structures generated outside of; > psi4.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/647#issuecomment-288896856>, or mute; > the thread; > <https://git",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/647#issuecomment-288899031:1056,energy,energy,1056,https://psicode.org,https://github.com/psi4/psi4/issues/647#issuecomment-288899031,2,['energy'],['energy']
Energy Efficiency,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/993#issuecomment-385707749:791,energy,energy,791,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749,2,['energy'],['energy']
Energy Efficiency,"Cool, no worries - convincing the scientific community to accept ARM as normal will be a slog in every field, but it seems like the direction the world is going. There are real energy efficiency arguments for ditching x86, as I'm sure you know, and it's likely that hyperscalers will try to promote ARM more and more.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3198#issuecomment-2285262248:177,energy,energy,177,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2285262248,1,['energy'],['energy']
Energy Efficiency,"Correction (I have a very bad cold at the moment so my mind is even less reliable than usual):; The spherical harmonics expressed in terms of cartesians in the th transformation matrix in gdma.f90 are not normalized to unity but they should be orthogonal with respect to integration over a sphere. Note that the x^i y^j z^k are not the normalized v(i,j,k) of Schlegel and Frisch but literal products of powers of x, y and z.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574#issuecomment-472388875:403,power,powers,403,https://psicode.org,https://github.com/psi4/psi4/issues/1574#issuecomment-472388875,1,['power'],['powers']
Energy Efficiency,"Correction to the above: ; You can converge the max MO gradient for that example upon fixing of #1143, if you are willing to go through many iterations, including several where the gradient is effectively unchanged. See steps 27-32 for one of many, many examples. Note that due to this, the previous input reported energy convergence in the 10th decimal place, when careful convergence shows it is not even converged to the 8th.; ```; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2 ; ---- --------------- ---------- ----------- ----------- ---------- ; 1 -74.6982915209 -5.23e-04 3.51e-03 8.93e-03 1.79e-04 ; 2 -74.6983423996 -5.09e-05 1.67e-03 4.17e-03 3.54e-05 ; 3 -74.6983595520 -1.72e-05 1.00e-03 2.68e-03 2.02e-05 ; 4 -74.6983666105 -7.06e-06 6.72e-04 1.69e-03 1.02e-05 ; 5 -74.6983696889 -3.08e-06 4.49e-04 1.09e-03 6.05e-06 ; 6 -74.6983714517 -1.76e-06 3.21e-04 8.17e-04 6.97e-06 ; 7 -74.6983719578 -5.06e-07 3.01e-04 7.10e-04 3.32e-06 ; 8 -74.6983718807 7.71e-08 2.62e-04 6.15e-04 1.69e-06 ; 9 -74.6983718914 -1.07e-08 2.90e-04 6.78e-04 4.24e-07 ; 10 -74.6983718846 6.82e-09 2.89e-04 6.75e-04 6.90e-08 ; 11 -74.6983718499 3.47e-08 3.11e-04 7.23e-04 2.75e-07 ; 12 -74.6983717213 1.29e-07 3.74e-04 8.64e-04 8.61e-07 ; 13 -74.6983721102 -3.89e-07 1.12e-04 2.83e-04 3.81e-06 ; 14 -74.6983721230 -1.27e-08 1.45e-04 3.69e-04 7.65e-07 ; 15 -74.6983721226 3.91e-10 1.45e-04 3.69e-04 8.53e-08 ; 16 -74.6983721232 -6.62e-10 1.44e-04 3.66e-04 5.95e-08 ; 17 -74.6983721249 -1.62e-09 1.43e-04 3.63e-04 1.28e-08 ; 18 -74.6983721237 1.19e-09 1.44e-04 3.66e-04 1.20e-08 ; 19 -74.6983721440 -2.03e-08 1.22e-04 3.12e-04 1.67e-07 ; 20 -74.6983721946 -5.06e-08 7.60e-05 1.77e-04 8.39e-07 ; 21 -74.6983721957 -1.12e-09 8.62e-05 2.01e-04 1.88e-07 ; 22 -74.6983721958 -1.55e-11 8.64e-05 2.02e-04 3.63e-08 ; 23 -74.6983721957 9.48e-12 8.65e-05 2.02e-04 1.27e-08 ; 24 -74.6983721957 5.68e-13 8.65e-05 2.02e-04 3.17e-09 ; 25 -74.6983721958 -9.09e-11 8.63e-05 2.01e-04 2.19e-09 ; 26 -74.6983722093 -1.35e-08 5.20e-05 1.2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1371#issuecomment-450269266:315,energy,energy,315,https://psicode.org,https://github.com/psi4/psi4/issues/1371#issuecomment-450269266,1,['energy'],['energy']
Energy Efficiency,"Could you edit your post to have the right inputs? Right now both cases specify `angstrom` (your zipped inputs are different). > The atomic charge is specified in atomic units, and the coordinates always use the same units as the geometry specification in the regular QM region. Which means your charge sits at different positions in case1/2 since in both you use `x-coordinate = 1.0`. Unless I misunderstand the problem at hand.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1881#issuecomment-625214232:140,charge,charge,140,https://psicode.org,https://github.com/psi4/psi4/issues/1881#issuecomment-625214232,2,['charge'],['charge']
Energy Efficiency,"Could you try running:. ```; scf_energy, scf_wfn = energy('scf', return_wfn=True); energy('dmrg-ci', ref_wfn=scf_wfn); ```. I see this error quite a bit, but it is usually because I forget to use an scf_type that writes the integrals to disk. I am not really confident that this would work, but it is worth a shot. . The other thing you could do is. ```; scf_energy, scf_wfn = energy('scf', return_wfn=True); mints(scf_wfn); energy('dmrg-ci', ref_wfn=scf_wfn); ```. I may have the syntax wrong for the above calls. The main thing you need to do is make sure the integrals are actually written to disk.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464#issuecomment-244579713:51,energy,energy,51,https://psicode.org,https://github.com/psi4/psi4/issues/464#issuecomment-244579713,4,['energy'],['energy']
Energy Efficiency,"Cv 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Rotational Cv 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Vibrational Cv 58.770 [cal/(mol K)] 245.894 [J/(mol K)] 0.09365622 [mEh/K]; Total Cv 64.732 [cal/(mol K)] 270.838 [J/(mol K)] 0.10315665 [mEh/K]; Correction Cv 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]. Constant pressure heat capacity, Cp; Electronic Cp 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]; Translational Cp 4.968 [cal/(mol K)] 20.786 [J/(mol K)] 0.00791703 [mEh/K]; Rotational Cp 2.981 [cal/(mol K)] 12.472 [J/(mol K)] 0.00475022 [mEh/K]; Vibrational Cp 58.770 [cal/(mol K)] 245.894 [J/(mol K)] 0.09365622 [mEh/K]; Total Cp 66.719 [cal/(mol K)] 279.152 [J/(mol K)] 0.10632347 [mEh/K]; Correction Cp 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K]. ==> Thermochemistry Energy Analysis <==. Raw electronic energy, E0; Total E0, Electronic energy at well bottom at 0 [K] -1226.44775184 [Eh]. Zero-point energy, ZPE_vib = Sum_i nu_i / 2; Electronic ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Rotational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Vibrational ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Correction ZPE 164.391 [kcal/mol] 687.812 [kJ/mol] 0.26197380 [Eh] 57496.603 [cm^-1]; Total ZPE, Electronic energy at 0 [K] -1226.18577804 [Eh]. Thermal Energy, E (includes ZPE); Electronic E 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Rotational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational E 174.027 [kcal/mol] 728.129 [kJ/mol] 0.27732956 [Eh]; Correction E 175.804 [kcal/mol] 735.566 [kJ/mol] 0.28016212 [Eh]; Total E, Electronic energy at 298.15 [K] -1226.16758972 [Eh]. Enthalpy, H_trans = E_trans + k_B * T; Electronic H 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational H 1.481 [kcal/mol] 6.197 [",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079:6350,energy,energy,6350,https://psicode.org,https://github.com/psi4/psi4/issues/2297#issuecomment-925160079,1,['energy'],['energy']
Energy Efficiency,"D', 'EOM-CC2', 'EOM-CC3', 'EOM-CCSDT']. energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:3374,Energy,Energy,3374,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,1,['Energy'],['Energy']
Energy Efficiency,"DETCI was designed in the old Psi days where each module simply terminated; after it executed. So, something like your example was never envisioned,; and if the user wanted the TPDM, they had to request that in the input; before executing DETCI. DETCI can generate an awful lot of intermediate and; bookkeeping data, which is why all that stuff gets blown away after each; energy call. Do you just want the TPDM on disk? If so you could just set the expert; user option 'tpdm' to 'true'. If you somehow need to be able to form it through this kind of API, then I; don't have an immediate answer other than to say it sounds like Daniel or I; would have to dig into the details. The decode matrix itself is not really; so large and so if that's literally the only problem, maybe it could be; kept around. But I suspect that there is other stuff that would be needed; that isn't being kept. On Fri, Feb 14, 2020 at 1:08 PM Jonathon Misiewicz <notifications@github.com>; wrote:. > The following input file segfaults:; >; > molecule {; > symmetry c1; > H; > H 1 1.0; > }; >; > set basis cc-pvdz; > e, wfn = energy('fci', return_wfn=True); > wfn.form_tpdm(); >; > The issue is that the driver cleans up DETCI after every energy call; > <https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3579>.; > That cleanup frees the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ciwave.cc#L458>.; > But form_tpdm works by creating a new CI vector; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/tpdm.cc#L56>,; > which is set with the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/civect.cc#L115>,; > which the driver freed, giving rise to a bad access exception.; >; > So which code is supposed to be responsible for DETCI cleanup? If that's; > the responsibility of procrouting, then form_tpdm is always going to; > segfault, so form_tpdm shouldn't be exposed to Python at all, and the; > user should have the TP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160:373,energy,energy,373,https://psicode.org,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160,2,['energy'],['energy']
Energy Efficiency,DIIS			 |	 @UHF iter 2: -75.38394424152474 -1.75622e-02 7.43115e-03 DIIS; @UHF iter 3: -75.38582621410333 -1.88197e-03 2.33008e-03 DIIS			 |	 @UHF iter 3: -75.38582621410339 -1.88197e-03 2.33008e-03 DIIS; @UHF iter 4: -75.38619478049240 -3.68566e-04 9.29768e-04 DIIS			 |	 @UHF iter 4: -75.38619478049243 -3.68566e-04 9.29768e-04 DIIS; @UHF iter 5: -75.38629447046014 -9.96900e-05 3.08853e-04 DIIS			 |	 @UHF iter 5: -75.38629447046023 -9.96900e-05 3.08853e-04 DIIS; @UHF iter 6: -75.38630883426671 -1.43638e-05 1.16185e-04 DIIS			 |	 @UHF iter 6: -75.38630883426674 -1.43638e-05 1.16185e-04 DIIS; @UHF iter 7: -75.38631113759388 -2.30333e-06 2.55403e-05 DIIS			 |	 @UHF iter 7: -75.38631113759392 -2.30333e-06 2.55403e-05 DIIS; @UHF iter 8: -75.38631121690256 -7.93087e-08 5.57003e-06 DIIS			 |	 @UHF iter 8: -75.38631121690257 -7.93086e-08 5.57003e-06 DIIS; @UHF iter 9: -75.38631122050272 -3.60016e-09 6.77022e-07 DIIS			 |	 @UHF iter 9: -75.38631122050275 -3.60018e-09 6.77022e-07 DIIS; Energy and wave function converged.									 Energy and wave function converged. ==> Post-Iterations <==										 ==> Post-Iterations <==. @Spin Contamination Metric: 4.301100511E-03							 @Spin Contamination Metric: 4.301100511E-03; @S^2 Expected: 7.500000000E-01							 @S^2 Expected: 7.500000000E-01; @S^2 Observed: 7.543011005E-01							 @S^2 Observed: 7.543011005E-01; @S Expected: 5.000000000E-01							 @S Expected: 5.000000000E-01; @S Observed: 5.000000000E-01							 @S Observed: 5.000000000E-01. Orbital Energies [Eh]										 Orbital Energies [Eh]; ---------------------										 ---------------------. Alpha Occupied: 				 Alpha Occupied: . 1A1 -20.635786 2A1 -1.392584 3A1 -0.673509 					 1A1 -20.635786 2A1 -1.392584 3A1 -0.673509 ; 1B2 -0.647734 1B1 -0.561066 							 |	 1B1 -0.647734 1B2 -0.561066 . Alpha Virtual: 				 Alpha Virtual: . 4A1 0.223681 2B2 0.784656 2B1 0.835171 				 |	 4A1 0.223681 2B1 0.784656 2B2 0.835171 ; 5A1 0.887882 6A1 1.122186 7A1 1.471866 					 5A1 0.887882 6A1 1.1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284:14949,Energy,Energy,14949,https://psicode.org,https://github.com/psi4/psi4/pull/2264#issuecomment-890681284,1,['Energy'],['Energy']
Energy Efficiency,"DIIS; @DF-RKS iter 4: -76.33541666733151 -4.32022e-05 7.02182e-05 DIIS; @DF-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; [Error prints before oeprop",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8225,Energy,Energy,8225,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,"DISP ENERGY"": -0.26658499, #TEST; > ""CURRENT ENERGY"": -0.01126250} #TEST; > ; > Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26605283, #TEST; > ""CURRENT ENERGY"": -0.01073034} #TEST; > ; > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (DISP); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_disp.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (FIXED); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; > set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_fixed.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST; > ```; > ; > * I think it should be clear from the output file what exch-disp scheme/scale is applied. So perhaps add a couple lines to t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:2491,energy,energy,2491,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,2,['energy'],['energy']
Energy Efficiency,"D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:27 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.03 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Ne: PBE...........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:27 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DIRECT.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Blend: CC-PVDZ; Number of shells: 6; Number of basis function: 14; Number of Cartesian functions: 15; Spherical Harmonics?: true; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: BLYP <=. BLYP GGA Excha",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:8961,charge,charge,8961,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['charge'],['charge']
Energy Efficiency,"D]; X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. *** tstop() called on scychon-OptiPlex-7010 at Wed Jun 13 11:12:28 2018; Module time:; user time = 0.92 seconds = 0.02 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 1 seconds = 0.02 minutes; Total time:; user time = 1.84 seconds = 0.03 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Ne: BLYP..........................................................PASSED. *** tstart() called on scychon-OptiPlex-7010; *** at Wed Jun 13 11:12:28 2018. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry NE line 258 file /root/psi4/build/stage/share/psi4/share/psi4/basis/cc-pvdz.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; NE 0.000000000000 0.000000000000 0.000000000000 19.992440175420. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DIRECT.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Blend: CC-PVDZ; Number of shells: 6; Number of basis function: 14; Number of Cartesian functions: 15; Spherical Harmonics?: true; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: FT97 <=. FT97 GGA Excha",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775:13995,charge,charge,13995,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-396997775,1,['charge'],['charge']
Energy Efficiency,"Dear @dgasmith: currently, optimisations with VV10, LC-VV10 and B97M-V fail due to the lack of the analytical gradients for VV10. This can be, of course, circumvented by passing `dertype=""energy""` to the optimize command. However, it's not necessary to do this for wB97M-V and wB97M-X - they do numerical gradients automatically. I was wondering if it's possible to set the default for VV10 etc. in the meantime?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/897#issuecomment-361602213:188,energy,energy,188,https://psicode.org,https://github.com/psi4/psi4/pull/897#issuecomment-361602213,1,['energy'],['energy']
Energy Efficiency,"Dear Anthony,. Thank you for the detailed explanation. In terms of spherical harmonics in Psi4, there are no hard coded terms anywhere as far as I can remember: all integrals are transformed on the fly, using a general regular solid harmonic generating routine. Therefore, G and H functions are both handled by the same arbitrary-order transformation code. Your illness-addled brain is still more powerful than mine, so apologies if I'm wrong here, but I think I have confirmed my error diagnosis from last night. I found my old Mathematica code for generating (real) regular solid harmonics and can exactly match the [L=5 transformation coefficients](https://git.uis.cam.ac.uk/x/ch-stone/u/ajs1/gdma.git/blob/HEAD:/src/gdma.f90#l275), as well as the the coefficients listed in Table 1 of the GDMA manual. However, for the L<5 coefficients in gdma.f90 my RSH generating code does not match. I can get exact agreement for these lower angular momentum terms by adding a factor of; ![image](https://user-images.githubusercontent.com/201881/54278407-a47bc180-4568-11e9-8875-e9ea637c3c1b.png); to the generating code. Therefore it appears that there is an inconsistency in the Cartesian normalization convention between the {s,p,d,f,g} and the {h} functions in gdma.f90. I hope this helps,. Best regards,. Andy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574#issuecomment-472403253:397,power,powerful,397,https://psicode.org,https://github.com/psi4/psi4/issues/1574#issuecomment-472403253,1,['power'],['powerful']
Energy Efficiency,"Dear Jonathon,. The idea is that ones orbitals are optimized there is no need to rotate MOs further. Hence, just semi-canolicalize MOs and compute energies. However, after original implementation there has been lot of revisions in convergence criteria. I think during these modifications the equality of Lagrangian and usual energy is somewhat slightly broken. I will update DFOCC module in this week and push it to Lori's repo. During this update I will fix this issue. @JonathonMisiewicz . Best regards,; Ugur.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1509#issuecomment-459946532:325,energy,energy,325,https://psicode.org,https://github.com/psi4/psi4/issues/1509#issuecomment-459946532,1,['energy'],['energy']
Energy Efficiency,"Dear Vladimir,. We have two kind of orbital-optimized (OO) methods now. The old codes are using conventional integrals and they can be called by energy('conv-omp2'), energy('omp3'), energy('omp2.5'), and energy('ocepa). All these methods are available in the OCC module and all methods of the OCC module take advantages of real Abelian point group symmetry. Recently, I have introduced a new module for OO methods as well as standard MP and CC methods, which is called as DFOCC module. In DFOCC module, we have density-fitting and Cholesky decomposition approximations for molecular integrals. Hence, the OO methods of DFOCC module are df-omp2, cd-omp2, df-omp3, cd-omp3, df-omp2.5, and cd-omp2.5. Df/cd-ocepa methods are coming soon. These methods can be called by energy('df-omp2'), energy('df-omp3'), energy('df-omp2.5'), and cd versions can be run similarly. All methods of DFOCC module has energy and gradients (RHF and UHF). Please note that when you asked df and cd methods you should set ""scf_type df"" and ""scf_type cd"", respectively. Further, DFOCC module does NOT use the molecular symmetry. All DFOCC methods are greatly faster than their conventional counterparts. For a discussion of timing for OMP2, OO-RI-MP2 of orca, and our new DF/CD-OMP2 you may want to read our recent paper, J. Chem. Theory Comput., 2014, 10 (6), pp 2371–2378 (DOI:10.1021/ct500231c). Finally, please note when you set energy('omp2') the df-omp2 code runs, for old code you should use energy('conv-omp2'). For more details please refer to our manual section OCC/DFOCC. . As a conclusion, do not worry about the symmetry if your main concern is the efficiency . The present DF/CD-OO methods are greatly faster than the conventional OO methods. Best regards,; Ugur Bozkaya",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/186#issuecomment-152699151:145,energy,energy,145,https://psicode.org,https://github.com/psi4/psi4/issues/186#issuecomment-152699151,10,['energy'],['energy']
Energy Efficiency,"Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; Iter=44 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016043 -7.30e-10 7.68e-07 Y; 2 0.3285655297 -2.33e-11 3.26e-06 N; Iter=45 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016047 4.83e-10 7.73e-07 Y; 2 0.3285655297 -1.39e-12 3.26e-06 N; Collapsing to only 2 vector(s). Procedure converged for 1 root(s). Algorithm failure: No vectors could be added, though not all",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:2150,Energy,Energy,2150,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency,"Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; Iter=41 L=19 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 1.05e-10 7.91e-07 Y; 2 0.3285655298 -2.41e-11 3.31e-06 N; Iter=42 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016056 5.33e-10 7.73e-07 Y; 2 0.3285655297 -9.36e-11 3.26e-06 N; Iter=43 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016050 -5.70e-10 7.66e-07 Y; 2 0.3285655297 1.62e-11 3.26e-06 N; Iter=44 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016043 -7.30e-10 7.68e-07 Y; 2 0.3285655297 -2.33e-11 3.26e-06 N; Iter=45 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016047 4.83e-10 7.73e-07 Y; 2 0.3285655297 -1.39e-12 3.26e-06 N; Collapsing to only 2 vector(s). Procedure converged for 1 root(s). Algorithm failure: No vectors could be added, though not all roots converged!. EOM CCSD R0 for root 0 = 0.00000000000. Final Energetic Summary for Converged Roots of Irrep B1g; Excitation Energy Total Energy; (eV) (cm^-1) (au) (au); EOM State 1 8.825 71176.0 0.3243016047 -231.251027700721. Largest components of ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:2403,Energy,Energy,2403,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency,Delta E Res. Norm Conv?; 1 0.3243016099 4.24e-09 2.38e-05 N; 2 0.3285655293 5.00e-16 6.43e-07 Y; Iter=25 L=20 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016127 2.80e-09 1.56e-05 N; 2 0.3285655293 -3.89e-16 6.43e-07 Y; Iter=26 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016234 1.06e-08 9.79e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=27 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016107 -1.26e-08 5.76e-06 N; 2 0.3285655293 2.78e-16 6.43e-07 Y; Iter=28 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016097 -1.01e-09 3.48e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=29 L=24 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1262,Energy,Energy,1262,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency,Delta E Res. Norm Conv?; 1 0.3243016127 2.80e-09 1.56e-05 N; 2 0.3285655293 -3.89e-16 6.43e-07 Y; Iter=26 L=21 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016234 1.06e-08 9.79e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=27 L=22 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016107 -1.26e-08 5.76e-06 N; 2 0.3285655293 2.78e-16 6.43e-07 Y; Iter=28 L=23 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016097 -1.01e-09 3.48e-06 N; 2 0.3285655293 -1.11e-16 6.43e-07 Y; Iter=29 L=24 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 2.73e-09 3.28e-06 N; 2 0.3285655293 -5.55e-17 6.43e-07 Y; Iter=30 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016125 8.40e-14 3.28e-06 N; 2 0.3285655291 -2.62e-10 9.81e-06 N; Iter=31 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243015959 -1.66e-08 3.58e-06 N; 2 0.3285655309 1.79e-09 9.85e-06 N; Iter=32 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 7.49e-09 2.77e-06 N; 2 0.3285655292 -1.67e-09 8.87e-06 N; Iter=33 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016058 2.42e-09 1.52e-06 N; 2 0.3285655299 6.91e-10 7.75e-06 N; Iter=34 L=12 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016030 -2.78e-09 9.27e-07 Y; 2 0.3285655320 2.15e-09 6.23e-06 N; Iter=35 L=13 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016033 2.53e-10 9.26e-07 Y; 2 0.3285655298 -2.26e-09 4.11e-06 N; Iter=36 L=14 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016026 -6.98e-10 9.41e-07 Y; 2 0.3285655295 -2.30e-10 3.70e-06 N; Iter=37 L=15 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016027 1.05e-10 9.64e-07 Y; 2 0.3285655298 2.71e-10 3.50e-06 N; Iter=38 L=16 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016031 4.09e-10 9.77e-07 Y; 2 0.3285655296 -2.10e-10 3.48e-06 N; Iter=39 L=17 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016034 2.70e-10 8.97e-07 Y; 2 0.3285655295 -6.61e-11 3.51e-06 N; Iter=40 L=18 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3243016049 1.54e-09 8.13e-07 Y; 2 0.3285655298 2.62e-10 3.34e-06 N; It,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-279097344:1389,Energy,Energy,1389,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-279097344,1,['Energy'],['Energy']
Energy Efficiency,"Depends on how impatient the user is :) Actually, very nice, example.; Thanks!. On Fri, Apr 12, 2019 at 6:02 PM Lori A. Burns <notifications@github.com>; wrote:. > *still going*; >; > @psi-rking <https://github.com/psi-rking>, here's an example where; > dynamic level 2 might have kicked in a bit early?; >; > base) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-quaternary/objdir37: (1.3.x) grep '~' bgobbi_wb97x.out; > --------------------------------------------------------------------------------------------- ~; > Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; > --------------------------------------------------------------------------------------------- ~; > Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; > --------------------------------------------------------------------------------------------- ~; > 1 -1771.54871790 -1.77e+03 8.23e-03 1.77e-03 o 2.50e-01 2.94e-02 o ~; > 2 -1771.54896434 -2.46e-04 4.20e-03 7.85e-04 o 3.99e-02 7.34e-03 o ~; > 3 -1771.54708256 1.88e-03 1.22e-02 2.75e-03 o 3.09e-02 7.32e-03 o ~; > 4 -1771.54962420 -2.54e-03 1.84e-03 4.35e-04 o 5.76e-02 7.34e-03 o ~; > 5 -1771.54991808 -2.94e-04 6.10e-04 1.42e-04 o 4.66e-02 7.34e-03 o ~; > 6 -1771.54999493 -7.68e-05 5.40e-04 1.21e-04 o 1.40e-02 1.83e-03 o ~; > 7 -1771.55001819 -2.33e-05 4.51e-04 8.25e-05 o 1.89e-02 1.84e-03 o ~; > 8 -1771.55002275 -4.56e-06 3.95e-04 7.58e-05 o 4.60e-03 4.59e-04 o ~; > 9 -1771.55002699 -4.24e-06 3.75e-04 4.74e-05 o 4.74e-03 4.59e-04 o ~; > 10 -1771.55002919 -2.20e-06 3.62e-04 3.71e-05 o 1.53e-02 1.38e-03 o ~; > 11 -1771.55003367 -4.48e-06 3.38e-04 3.16e-05 o 1.53e-02 1.38e-03 o ~; > 12 -1771.55003620 -2.53e-06 3.26e-04 3.22e-05 o 1.56e-02 1.38e-03 o ~; > 13 -1771.55003691 -7.15e-07 * 3.21e-04 3.16e-05 o 3.92e-03 3.44e-04 o ~; > 14 -1771.55003705 -1.33e-07 * 3.23e-04 2.89e-05 o 9.90e-04 * 8.66e-05 o ~; > 15 -1771.55003766 -6.15e-07 * 3.24e-04 2.84e-05 o 2.99e-03 2.58e-04 o ~; > 	Raising dynamic level to 2. ~; > ------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167:537,Energy,Energy,537,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482755167,1,['Energy'],['Energy']
Energy Efficiency,"Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). Additional Contributions by; P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,; A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz. -----------------------------------------------------------------------. Psi4 started on: Monday, 29 April 2019 07:36PM. Process ID: 6146; Host: molmod00.ugent.be; PSIDATADIR: /home/toon/miniconda3/envs/p4dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; H; }. set {; scf_type pk; basis ano-rcc; relativistic x2c; reference uhf; }. energy('hf'); --------------------------------------------------------------------------. *** tstart() called on molmod00.ugent.be; *** at Mon Apr 29 19:36:44 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 16 file /home/toon/Downloads/jobs/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Cha",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:2076,energy,energy,2076,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['energy'],['energy']
Energy Efficiency,"Diazonium, I believe your assessment is correct and I have little to add here unfortunately. While thread safety in the pthread code has been improved recently, OpenMP is still considered the safer option. (Though you could try a pthread build - ideally of the current ""develop"" branch that should soon become the 0.3.0 release - with USE_SIMPLE_THREADED_LEVEL3=1 which should work around at least some of the remaining bugs.) ; Please create issues for any OpenBLAS bugs you find, ideally with some standalone code that makes it easy to reproduce and track down the problem. I am anything but an expert on multithreading, but at least there are powerful debugging tools available now that simply did not exist when K.Goto wrote; the library that OpenBLAS builds upon. ; (Incidentally my own involvement with OpenBLAS came about through dft as well, though in my case it is condensed matter codes like Elk and Wien2k)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-390436926:646,power,powerful,646,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-390436926,2,['power'],['powerful']
Energy Efficiency,"Did you compile the code with a Fortran compiler? One is required for using DKH. > On Jul 25, 2015, at 6:07 PM, Hassenky notifications@github.com wrote:; > ; > Are there other ways to deal with Douglas-Kroll-Hess (DKH) Hamiltonian? When running dk input:; > ; > molecule {; > Mg; > }; > set basis aug-cc-pvdz-dk; > set relativistic dkh; > energy('scf'); > ; > I got this error output:; > Traceback (most recent call last):; > File """", line 20, in ; > RuntimeError: DKH is not a valid choice; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-124907212:339,energy,energy,339,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-124907212,1,['energy'],['energy']
Energy Efficiency,"Distance on x-axis, energy on y-axis. Calculations done using Psi4 1.7.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2901#issuecomment-1473309599:20,energy,energy,20,https://psicode.org,https://github.com/psi4/psi4/issues/2901#issuecomment-1473309599,1,['energy'],['energy']
Energy Efficiency,"Do you happen to know if there's a lit citation for extrapolating the def2 basis sets or if they need a different extrapolation formula? I know Orca does def2 extrapolations; I've just never looked up how or what procedure they use. I'd defer the -PP fallbacks from this PR. That means changing the basis set compositing which is a huge pain. I'm hoping the MolSSI basisset project can be API-accessed to cover this (very sensible) case. Hand-pieced, other program, or `energy(cbs, ...)` call with calculator spot-checks will do fine for tests. If def2's need their own extrapolation formula, tests should probably check that those default correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/963#issuecomment-381265832:470,energy,energy,470,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381265832,1,['energy'],['energy']
Energy Efficiency,"Do you have the equations for reintegrating the kinetic energy density from grid to AO space? I could likely guess, but best to be sure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1734#issuecomment-541328605:56,energy,energy,56,https://psicode.org,https://github.com/psi4/psi4/issues/1734#issuecomment-541328605,1,['energy'],['energy']
Energy Efficiency,"Does the overall energy look sensible when you've got the additional diffuse functions? . I occasionally find that def2-TZVPD converges to some odd state with strange properties (energy, dipole etc). I'd put it down to some form of numerical difficulties as I could usually use a mixed basis of def2-TZVP on some atoms and def2-TZVPD on others and get logical values (identity of which atoms to change was system dependent, but often H is the main culprit).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698:17,energy,energy,17,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-1954490698,2,['energy'],['energy']
Energy Efficiency,"Does the singlet cation exhibit the same failure with RHF/SAD? Could be a; bad eigenvalue in the DF metric, though I have traps in for this. Compiling; a fork to check this out. -Rob. On Fri, Apr 29, 2016 at 12:56 PM, Daniel Smith notifications@github.com; wrote:. > The following either gives NaN energy or (positive) 60,000 [Eh] depending; > on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ; > seem to check out, did not try larger.; > ; > molecule mol {; > 0 2; > C -2.83891 -0.84747 -0.20778; > N -2.06959 -0.27604 0.77905; > C -0.85937 -0.82512 0.74757; > N -0.82980 -1.74677 -0.21226; > C -2.05910 -1.77487 -0.83179; > C -2.45490 0.86620 1.59959; > C 0.35903 -2.49473 -0.61265; > F -1.01767 1.46174 -1.11980; > B 0.28985 1.63764 -0.63648; > F 0.23738 1.82826 0.77419; > F 0.89453 2.73957 -1.24020; > F 1.05039 0.46734 -0.88673; > H -0.02604 -0.54755 1.38339; > H -2.27287 -2.45330 -1.64959; > H -3.86751 -0.55086 -0.37733; > H -3.45079 0.68580 2.01748; > H -1.72185 0.98138 2.40249; > H -2.44673 1.75972 0.96603; > H 0.98379 -1.85263 -1.24323; > H 0.91655 -2.78676 0.28358; > H 0.03922 -3.39046 -1.15377; > C 2.81822 0.12352 1.52490; > C 3.26768 -0.78277 0.56145; > H 3.28632 0.11977 2.50813; > H 2.01109 0.81253 1.27433; > N 3.64537 -1.55240 -0.23308; > }; > ; > set {; > basis cc-pVQZ; > scf_type df; > guess gwh; > reference rohf; > }; > ; > energy('SCF'); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/371",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/371#issuecomment-215879353:298,energy,energy,298,https://psicode.org,https://github.com/psi4/psi4/issues/371#issuecomment-215879353,2,['energy'],['energy']
Energy Efficiency,"Doesn't really look like a bug. Either we up the convergence criterion or; we check only 5 decimals. On Tue, Mar 1, 2016 at 5:14 PM, Lori A. Burns notifications@github.com; wrote:. > Sorry @avcopan https://github.com/avcopan, I saw all the @IRCs in that; > gist above and thought opt7 was an unlabeled IRC. But that was for; > opt-irc-2, which should be fixed now.; > ; > opt7 fails on a few systems (; > https://testboard.org/cdash/testSummary.php?project=3&name=opt7&date=2016-03-01).; > This (https://testboard.org/cdash/testDetails.php?test=7810317&build=63640); > looks like the most coherent error message (also copied below), if; > @psi-rking https://github.com/psi-rking would like to examine it.; > ; > Optimizer: Optimization complete!; > Int. Coord. RHF opt of HOOH with O-H fixed to 0.95, energy........PASSED; > Optimizer: Optimization complete!; > Int. Coord. RHF opt of HOOH with O-O-H fixed to 105, energy: computed value (-150.7861731) does not match (-150.7861769) to 6 decimal places.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/253#issuecomment-190956405.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-191034927:801,energy,energy,801,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-191034927,2,['energy'],['energy']
Energy Efficiency,"Doesn't seem to be working too great; I get on my machine; ```; $ psi4 -n 8 ; 	SAPT0 energy with Ca2+, without ECP: computed value (-0.095615678) does not match (-0.095616042) to 8 digits.; Traceback (most recent call last):; File ""/home/work/psi4/install.susi/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 38, in <module>; File ""/home/work/psi4/install.susi/lib/psi4/driver/p4util/util.py"", line 230, in compare_values; raise TestComparisonError(message). TestComparisonError: 	SAPT0 energy with Ca2+, without ECP: computed value (-0.095615678) does not match (-0.095616042) to 8 digits.; ```; and the result is the same regardless of the guess...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-455380290:85,energy,energy,85,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-455380290,2,['energy'],['energy']
Energy Efficiency,"E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; @using_gcp; def test_grimme_3c():. s16di = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/driver.py:494: in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); ../lib/python3.6/site-packages/psi4/driver/driver_nbody.py:266: in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); ../lib/python3.6/site-packages/psi4/driver/driver_nbody.py:475: in compute_nbody_components; ptype_dict[pair], wfn = func(method_string, molecule=current_mol, return_wfn=True, **kwargs); ../lib/python3.6/site-packages/psi4/driver/driver.py:556: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ../lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:2002: in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ../lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1351: in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule()); ../lib/python3.6/site-packages/psi4/driver/procrouting/empirical_dispersion.py:195: in compute_energy; verbose=1); _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:17694,energy,energy,17694,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['energy'],['energy']
Energy Efficiency,"E: Libint2ErfERI (eri.h:300); ==2802== by 0x1CC3A0EE: psi::Libint2ErfERI::clone() const (eri.h:305); ==2802== by 0x1C740620: psi::DFHelper::prepare_AO_wK_core() (dfhelper.cc:571); ==2802== by 0xD265ED2: __kmp_invoke_microtask (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0xD228725: __kmp_invoke_task_func (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0xD22771B: __kmp_launch_thread (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0xD26630A: _INTERNAL_26_______src_z_Linux_util_cpp_20354e55::__kmp_launch_worker(void*) (in /u/andysim/anaconda3/envs/psi4dev/lib/libiomp5.so); ==2802== by 0x4E3EEA4: start_thread (in /usr/lib64/libpthread-2.17.so); ==2802== by 0x51519FC: clone (in /usr/lib64/libc-2.17.so); ==2802== Address 0x2866b120 is 0 bytes after a block of size 73,440 alloc'd; ==2802== at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344); ==2802== by 0x1CA85F62: allocate (new_allocator.h:104); ==2802== by 0x1CA85F62: allocate (alloc_traits.h:491); ==2802== by 0x1CA85F62: _M_allocate (stl_vector.h:170); ==2802== by 0x1CA85F62: _M_fill_insert (vector.tcc:491); ==2802== by 0x1CA85F62: std::vector<long, std::allocator<long> >::insert(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, unsigned long, long const&) (stl_vector.h:1054); ==2802== by 0x1CA7E37F: resize (stl_vector.h:696); ==2802== by 0x1CA7E37F: psi::TwoBodyAOInt::create_sieve_pair_info(std::shared_ptr<psi::BasisSet>, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >&, bool) (twobody.cc:244); ```; This is a harmless copy construction of a vector that is well defined. I tried to remove the AVX2 code path using the [MKL options](https://software.intel.com/content/www/us/en/develop/documentation/onemkl-developer-reference-c/top/support-functions/miscellaneous/mkl-enable-instructions.html) but the problem persisted. Finding an old pre-AVX box and running on there did the trick, and Valg",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-904787207:2802,allocate,allocate,2802,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-904787207,1,['allocate'],['allocate']
Energy Efficiency,"ECP calculations work as well as ordinary ones, so this can finally be merged. Here's the HF/def2-SVP calculation on Xe; ```; Initial Atomic UHF Energy: -315.3634326754. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -280.36015363156582 35.00327904384721 0.17438162869310; @Atomic UHF iteration 2 energy: -260.70364549276712 19.65650813879870 0.20108587638483; @Atomic UHF iteration 3 energy: -320.59517730813167 -59.89153181536454 0.01619483472434; @Atomic UHF iteration 4 energy: -320.87131145782928 -0.27613414969761 0.00341002372407; @Atomic UHF iteration 5 energy: -320.87922264084102 -0.00791118301174 0.00056898557067; @Atomic UHF iteration 6 energy: -320.87957561560631 -0.00035297476529 0.00008011419372; @Atomic UHF iteration 7 energy: -320.87958210143461 -0.00000648582829 0.00000325221580; @Atomic UHF Final Energy for atom XE: -320.87958210143461; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -324.53314738271274 -3.24533e+02 0.00000e+00 ; @DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.0150",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:145,Energy,Energy,145,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,11,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"Eh (Hartree energy) is the [atomic unit of energy](https://physics.nist.gov/cgi-bin/cuu/Value?thr), while a0 (Bohr radius) is the [atomic unit of length](https://physics.nist.gov/cgi-bin/cuu/Value?tbohrrada0|search_for=nonsi_in!)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/815#issuecomment-333639899:12,energy,energy,12,https://psicode.org,https://github.com/psi4/psi4/issues/815#issuecomment-333639899,2,['energy'],['energy']
Energy Efficiency,"Either of those dft gradients calls works, though I exclusively use the former. They work b/c all functionals are added to procedures[‘energy’] and all but dh are added to procedures[‘gradient’]. (see snippet below.) (They’re missing from procedures['property’] and that should probably be remedied. So DFT is generally in good shape: energies work, gradients work (analytic except findif for dh), r/u ks set exclusively by option. You can use ‘scf’ to mean HF, and then it works just the same as DFT. I’d advocate thoroughly adding ‘hf’ (that is not just to energy() like it has been) so it’s on-par with DFT. The r/u/ro options were a nice thought, but not thoroughly carried out, with disturbing consequences, as you found. # Integrate DFT with driver routines. for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft. for ssuper in superfunctional_list():; if ((not ssuper.is_c_hybrid()) and (not ssuper.is_c_lrc()) and (not ssuper.is_x_lrc())):; procedures['gradient'][ssuper.name().lower()] = run_dft_gradient. > On Jun 8, 2015, at 9:49 PM, David Sherrill notifications@github.com wrote:; > ; > Is there an advantage to doing; > ; > gradient('b3lyp'); > ; > instead of; > ; > set reference rks; > set dft_functional b3lyp; > gradient('scf')?; > ; > I guess the former is certainly shorter. But primarily I'm wondering; > whether one is easier to check than the other regarding whether the; > gradient is available. We need to know on a functional-by-functional basis; > whether we have analytic gradients or not. If that's much easier to handle; > with one style vs the other, that would be an argument for doing it that; > way. Then we can decide what to do with the HF cases to make them play; > nicely with our desired solution for the DFT ones.; > ; > David; > ; > On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > > ; > > # (a) for HF; > > ; > > ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:135,energy,energy,135,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,3,['energy'],['energy']
Energy Efficiency,"Error is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/usr/lib64//python3.9/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""x_functionals"": {""GGA_X_PBE"": {}},; ""c_functionals"": {""GGA_C_PBE"": {}}; }; core.set_global_option(""BASIS"", ""pcseg-2""); core.set_global_option(""BASIS_GUESS"", ""true""); --> energy('scf', dft_functional=my_pbe); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975:229,energy,energy,229,https://psicode.org,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975,3,['energy'],['energy']
Energy Efficiency,"Even using **guess huckel**, I am getting _Fatal Error: Monomer B: A Matrix is not SPD_ while calculatin SAPT(0) energy with UHF reference.; Using Psi4 1.3.2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1747#issuecomment-549455459:113,energy,energy,113,https://psicode.org,https://github.com/psi4/psi4/issues/1747#issuecomment-549455459,1,['energy'],['energy']
Energy Efficiency,"Even when using all the parameters suggested by @PhillCli in a test sript, the calculation does not complete. The SCF part is executed, but it seems that there is a problem when building the basis set for the SAPT calculation. Calculation stops at this point. ![Screenshot from 2023-06-27 09-54-28](https://github.com/psi4/psi4/assets/17604953/24f20f18-3708-46dc-b80b-681a98083799). Displaying the following message in the executation terminal. ![Screenshot from 2023-06-27 09-57-24](https://github.com/psi4/psi4/assets/17604953/6fdd54b8-3210-4b4e-a000-ed640f187e7c). The script I am using for the test . ```python; import psi4; import time; psi4.core.set_output_file('output.dat', False). he2_geometry = """"""; He; --; He 1 {0}; """""". Rvals = [2.5, 3.0,]. start = time.time(); psi4.set_num_threads(4); psi4.set_memory(""30000 MB""). psi4.set_options(; {; ""reference"": ""uhf"",; ""scf_type"": ""direct"",; ""df_basis_scf"": ""def2-universal-JKFIT"",; ""df_basis_sapt"": ""aug-cc-pv6z-ri"",; ""basis_guess"": ""aug-cc-pvdz"",; ""basis"": ""d-aug-cc-pv5z"",; ""guess"": ""sad"",; ""maxiter"": 300,; ""e_convergence"": 1e-10,; ""d_convergence"": 1e-10,; }; ). ecp = {}. for R in Rvals:; he2 = psi4.geometry(he2_geometry.format(R)); ecp[R] = psi4.energy('sapt0', molecule=he2). # Prints to screen; print(""Interaction Energies\n\n""); print("" R E_int ""); print(""---------------------------------------------------------""); for R in Rvals:; e = ecp[R] ; print("" {:3.1f} {:1.6f}"".format(R, e)); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2989#issuecomment-1609461172:1206,energy,energy,1206,https://psicode.org,https://github.com/psi4/psi4/issues/2989#issuecomment-1609461172,1,['energy'],['energy']
Energy Efficiency,"Example; ```; molecule {; 0 1; Ne; }. set basis aug-cc-pV5Z; set dft_spherical_points 974; set dft_radial_points 450. camlda0 = {; ""name"": ""CAM-LDA0"",; ""xc_functionals"": { ""HYB_LDA_XC_CAM_LDA0"": {""use_libxc"": True} }; }; lda0 = {; ""name"": ""LDA0"",; ""xc_functionals"": { ""HYB_LDA_XC_LDA0"": {""use_libxc"": True} }; }; ```; I've just merged these into libxc master. The hybrid LDA family and these two functionals will appear in the next (major?) release. Unfortunately, these aren't available anywhere else, so I can't be 100% sure the functionals themselves are correct. I just checked that the energies appear to be sane, i.e. the Ne energy is somewhere around -128 hartree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1645#issuecomment-492620323:631,energy,energy,631,https://psicode.org,https://github.com/psi4/psi4/pull/1645#issuecomment-492620323,1,['energy'],['energy']
Energy Efficiency,"Excellent, thanks, Rollin. Daniel Smith brought up the possibility that we might add a little function; to the driver to automate dihedral scans. That seems like a good idea.; This input isn't super complicated, but nevertheless I suspect some users; would appreciate automating these loops in a pre-packaged library routine. On Mon, Mar 28, 2016 at 4:55 PM, Rollin King notifications@github.com; wrote:. > I've just issued a pull request with some changes to the fixed-coordinate; > optimizations. With that code, I am able to get a good dihedral scan for; > HOOH in C2 with the input below. (A reminder that, in general, such scans; > can have erratic jumps since this is not following an IRC, but HOOH is so; > well-behaved the result is smooth and symmetric anyway.); > ; > molecule HOOH {; > 0 1; > H; > O 1 0.90; > O 2 1.40 1 100.0; > H 3 0.90 2 100.0 1 -175.0; > }; > ; > set {; > basis 6-31G*; > scf_type df; > guess sad; > ints_tolerance 1.0E-8; > }; > ; > start_angle = -175.0; > steps = 36; > step_size = 10; > ; > dihedrals = [""1 2 3 4 {}"".format((counter \* step_size) + start_angle) for counter in range(0, steps)]; > ; > SCF_Energies = []; > ; > for dihedral in dihedrals:; > set optking { fixed_dihedral = $dihedral }; > optimize('scf'); > SCF_Energies.append( psi4.get_variable('CURRENT ENERGY') ); > ; > for i in range(steps):; > print ""%10s%20.10f"" % (start_angle+i*step_size, SCF_Energies[i]); > ; > Note that at present the optimizer does not of its own volition head; > through the discontinuity at 180, even if that path is the shortest to the; > fixed value. Thus, I began at -175 and started up.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/10#issuecomment-202577523",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-202622738:1304,ENERGY,ENERGY,1304,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-202622738,1,['ENERGY'],['ENERGY']
Energy Efficiency,F = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 2 NUM BET = 2; NUM ALP EXPL = 2 NUM BET EXPL = 2; IOPEN = no; RAS1 LVL = 1 A RAS3 MAX = 2; RAS1 MIN = 0 B RAS3 MAX = 2; A RAS1 LVL = 1 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 2 B RAS4 MAX = 0; B RAS1 LVL = 1 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 2; B RAS1 MAX = 2 B RAS34 MAX = 2; RAS3 LVL = 2 RAS34 MAX = 4; RAS3 MAX = 4. DOCC = 2 0 0 0 0 0 0 0; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 0 0 0; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 8 8 8; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1035 alpha strings; There are 1035 beta strings; CI space contains 8 blocks. CI space requires 136181 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -24.2368157001; Nuclear repulsion energy: 0.0000000000; One-electron energy: -30.3554851372; Two-electron energy: 6.1186694371; Dropped core energy: 0.0000000000; Total electronic energy: -24.2368157001; Total SCF energy: -24.2368157001. CI vector/subblock length = 22201. **\* H0 Block Eigenvalue = -24.29689697. Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Energy convergence = 1e-06; RMS CI vector convergence = 0.0001. Using 1 initial trial vectors; Iter 0 Root 1 = -24.296896966 Delta_E -2.430E+01 Delta_C 3.387E-01; Iter 1 Root 1 = -24.303610361 Delta_E -6.713E-03 Delta_C 2.586E-02; Iter 2 Root 1 = -24.303663850 Delta_E -5.349E-05 Delta_C 2.296E-03,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/204#issuecomment-170152270:12225,Energy,Energy,12225,https://psicode.org,https://github.com/psi4/psi4/issues/204#issuecomment-170152270,9,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"F-RKS iter 5: -76.33541734518556 -6.77854e-07 7.73497e-06 DIIS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; [Error prints before oeprop]; ```. The other crash I saw was just the input/output from the conda inst",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:8293,Energy,Energy,8293,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['Energy'],['Energy']
Energy Efficiency,"FWIW B3LYP/def2-SVP converges in 24 iterations from the default SAD guess, yielding S^2 = 0.7528. PBE/def2-SVP also converges in 25 iterations to S^2 = 0.7538. . The weird convergence is a combination of the non-physical guess which lacks core electrons, combined with the unnecessary use of the second-order scheme which appears to have converged to an extremely high-lying saddle point: the log file on the forum has a B3LYP/def2-SVP energy of -1803.88405461301363 after 77 SOKS iterations, while I get -1820.53977771750078, which is SEVENTEEN HARTREE lower....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1972#issuecomment-664938620:436,energy,energy,436,https://psicode.org,https://github.com/psi4/psi4/issues/1972#issuecomment-664938620,1,['energy'],['energy']
Energy Efficiency,"FWIW, the `VV10` energy contribution is added to the `DFT FUNCTIONAL TOTAL ENERGY` here:; https://github.com/psi4/psi4/blob/9a1853f004977d79b333a89b5fda237732aafe83/psi4/driver/procrouting/scf_proc/scf_iterator.py#L705; so implementing the change would be trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-801585881:17,energy,energy,17,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801585881,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"FYI I tried 64 GB but still the same issue. I guess I will have to stick with a CAS(16,14) as my reference energy (without orbital optimization).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959#issuecomment-660888557:107,energy,energy,107,https://psicode.org,https://github.com/psi4/psi4/issues/1959#issuecomment-660888557,1,['energy'],['energy']
Energy Efficiency,"FYI, although `Psi4 1.4a2.dev215 dfb86f5` is the latest mac developer version on conda. It is already 5 months old now. There have been improvements and fixes to the SAD guess compared to `v1.3.2`. Though the SAD energy here seems to be equal. ; That's the first difference that comes to my mind now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1878#issuecomment-623930205:213,energy,energy,213,https://psicode.org,https://github.com/psi4/psi4/issues/1878#issuecomment-623930205,1,['energy'],['energy']
Energy Efficiency,"FYI, surround terminal output with triple backticks, ` ``` ` to get easy-to-read formatting. Trouble arises through the way you're specifying fitting basis sets. You don't usually don't need to be explicit, as they'll default sensibly via [this table](http://psicode.org/psi4manual/master/basissets_byfamily.html). But because you're setting _orbital_ basis sets into _fitting_ roles, the code runs out of basis functions. Your input runs fine as-is if change Li+ to Li–. But what you really want is for proper JKFIT and RIFIT bases to be used, so the below runs fine as cation. ```; molecule HeLi {; 0 1; He 0.000000000 0.000000000 0.000000000; --; 1 1; Li 3.300000000 0.000000000 0.000000000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVDZ; }. set_memory(32000000000); energy('sapt2+3(ccd)dmp2'); ```; ```. Total HF -0.48110602 [mEh] -0.30189858 [kcal/mol] -1.26314367 [kJ/mol]; Total SAPT0 -0.48230804 [mEh] -0.30265287 [kcal/mol] -1.26629959 [kJ/mol]; Total SAPT2 -0.49001572 [mEh] -0.30748951 [kcal/mol] -1.28653610 [kJ/mol]; Total SAPT2+ -0.49022506 [mEh] -0.30762087 [kcal/mol] -1.28708572 [kJ/mol]; Total SAPT2+(3) -0.49058180 [mEh] -0.30784473 [kcal/mol] -1.28802234 [kJ/mol]; Total SAPT2+3 -0.49061857 [mEh] -0.30786780 [kcal/mol] -1.28811889 [kJ/mol]; Total SAPT2+dMP2 -0.49489433 [mEh] -0.31055088 [kcal/mol] -1.29934488 [kJ/mol]; Total SAPT2+(3)dMP2 -0.49525107 [mEh] -0.31077474 [kcal/mol] -1.30028149 [kJ/mol]; Total SAPT2+3dMP2 -0.49524933 [mEh] -0.31077365 [kcal/mol] -1.30027694 [kJ/mol]; Total SAPT2+(CCD) -0.49023349 [mEh] -0.30762616 [kcal/mol] -1.28710786 [kJ/mol]; Total SAPT2+(3)(CCD) -0.49059023 [mEh] -0.30785002 [kcal/mol] -1.28804448 [kJ/mol]; Total SAPT2+3(CCD) -0.49062701 [mEh] -0.30787309 [kcal/mol] -1.28814102 [kJ/mol]; Total SAPT2+(CCD)dMP2 -0.49490276 [mEh] -0.31055617 [kcal/mol] -1.29936701 [kJ/mol]; Total SAPT2+(3)(CCD)dMP2 -0.49525950 [mEh] -0.31078003 [kcal/mol] -1.30030363 [kJ/mol]; Total SAPT2+3(CCD)dMP2 -0.49525776 [mEh] -0.31077894 [kc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1564#issuecomment-468953723:789,energy,energy,789,https://psicode.org,https://github.com/psi4/psi4/issues/1564#issuecomment-468953723,1,['energy'],['energy']
Energy Efficiency,"Fantastic job on this PR, @EricaCMitchell! It took me a while (I apologize), but I finally translated @mkodrycka 's dispersion-F12 code to an MP2-F12 one and, after some tweaking, was able to reproduce your DF-MP2-F12 correlation energy exactly. . I learned quite a bit in the process: initially, our implementations (both based on the formulas from the same Werner-Adler-Manby paper) gave minimally different results, and I found out that our programmed expressions differ by several terms that vanish in the GBC approximation. This approximation is pretty good but neither one of us makes it explicitly in the implementation (no elements of the Fock matrix are zeroed). I think this is completely OK. One avenue to possibly speed up the code is fully exploiting the fact that our F12 amplitudes are diagonal and we don't need to compute off-diagonal elements of some matrices. For example, out of the entire B matrix, we only use terms of the form `B(i,j,i,j)` and `B(i,j,j,i)`. I know computing just the diagonal elements is easier said than done, but I think there is room for speedup there. Finally, I know this was not directly a part of this PR, but do you happen to know the source of the 6-Gaussian fit of the Slater correlation factor? Here's what Psi4 uses for `GEM_BETA == 1.0`:. https://github.com/psi4/psi4/blob/f20a7c61ca0f4939885aa28f96d7d88058a71816/psi4/src/psi4/libmints/mintshelper.cc#L930-L933. and this is what Molpro 2012.1 prints out (I don't have a newer version):; ` Alpha: 0.19532 0.81920 2.85917 9.50073 35.69989 197.79328`; ` Coeff: 0.27070 0.30552 0.18297 0.10986 0.06810 0.04224`. This discrepancy, if not removed, does lead to small differences in the final results.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110#issuecomment-1941533669:230,energy,energy,230,https://psicode.org,https://github.com/psi4/psi4/pull/3110#issuecomment-1941533669,2,['energy'],['energy']
Energy Efficiency,"Fewer compilers working is less of an issue as we push more users towards; the binary distribution. And is only a temporary problem, anyway. Is icpc; 15.0 recent enough to support all the standards we need?. On Wed, Feb 10, 2016 at 3:50 PM, Ben Pritchard notifications@github.com; wrote:. > For me the biggest pro of C++11 is that is reduces the amount of code I; > have to write/maintain/debug.; > - Defaulted (and deleted) constructors and assignment operators; > (mentiond by @dgasmith https://github.com/dgasmith); > - Liberal use of STL containers and unique_ptr means you should rarely; > have to write a destructor, and often don't have to write a copy constructor; > - Constructor delegation; > ; > Cons:; > - Template programming results in nasty compiler error messages that; > take experience to figure out; > - Overuse of templates, auto, decltype, etc, can result unreadable; > code; > - This can somewhat be fixed in the new PR workflow. Don't accept; > PRs which are a mess; > - Some C++11 patterns can be intimidating to people who are still; > learning basic C++; > ; > As more libraries require C++11 (I think Ambit, TiledArray, and Cyclops; > all do), it should generally be embraced, with some reservations.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/238#issuecomment-182577836.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/238#issuecomment-182588993:334,reduce,reduces,334,https://psicode.org,https://github.com/psi4/psi4/issues/238#issuecomment-182588993,2,['reduce'],['reduces']
Energy Efficiency,"First of all, most structures don't converge. Only a few do. So that is an issue too. When I generated my own structures to calculate the torsion drive, one half of the molecule was ; fixed while I rotated the other half (around the fixed central bond). In that case, most structures converged and when I compared those structures to a molecular mechanics energy (which were fit to reproduce a torsion drive at the same level of QM theory) the energies were very close.; When I used optiking, and looked at the structures, it seemed like both sides of the molecule were bending to achieve the fixed dihedral angle (not sure if I'm being clear here) and when I compared the energy of the structures that did converge to the molecular mechanics energy, the energies were higher by a factor of ~10.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/647#issuecomment-286920989:356,energy,energy,356,https://psicode.org,https://github.com/psi4/psi4/issues/647#issuecomment-286920989,6,['energy'],['energy']
Energy Efficiency,"First, let's make sure we're agreed on what this metadata should look like. I'm envisioning the following skeleton:. ```; {; ""step"": { # Read from here if a displacement doesn't have its own step field; ""units"": str, # ""bohr"" or ""angstroms""; ""size"": float; },; ""stencil_size"": int, # 3 or 5, currently ; ""displacement_space"": str, # ""SALC"", ""normal"", ""internal"", ""cartesian""... always ""SALC"" for us; ""project_translations"": bool,; ""project_rotations"": bool,; ""geoms"": collections.OrderedDict([; disp_label: {; ""geometry"": np.ndarray,; ""energy"": float,; ""gradient"": np.ndarray, # May not be present!; ""step"": step dictionary defined above, # May not be present!; }; ]); }; ```. Feedback greatly appreciated. disp_label is going to be a bit tricky. `GRAD_0_X_+2` is a reasonable way to say the double displacement of atom 0 in the X coordinate, but if you're displacing CdSALCs, it won't do. We can either give labels so abstract they don't care about the coordinate_space, or we can give each coordinate_space its own labels. Either way, we need to specify which basis vector(s) in displacement space are being displaced and how much. Perhaps a tuple of ints? `(2, 0, 0, 0, 0, 0, 0, 0, 0)` would be the analogue of `GRAD_0_X_+2`. I like the abstraction, but typing all those extra 0's gets obnoxious, and it does not scale well with system size. A frozen dictionary might work, which would instead be `{0: 2}`, but frozen dictionaries aren't in the Python standard library.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1148#issuecomment-415834747:536,energy,energy,536,https://psicode.org,https://github.com/psi4/psi4/issues/1148#issuecomment-415834747,1,['energy'],['energy']
Energy Efficiency,"Fix looks good, thanks!. For the test, could you edit it to trigger your original problem and test the solution? I think it's still like extern2 at the moment. > In principle mol.set_nuclear_charge(0,7.05) should work to modify Z. Yeah, I tried for a couple hours once to see about setting fractional nuclear charges in Molecule that made a difference to a calculation; no luck.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1993#issuecomment-683299239:309,charge,charges,309,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-683299239,1,['charge'],['charges']
Energy Efficiency,"Fixed by 6f6d3aa1d039e4501bc5c5dc4190da1758e1c889 though I rather think now that defining hf/rhf/uhf/rohf/rsch/roscf/uscf for energy() was a bad idea (by me) a few years ago (except for ""hf"" itself). Nevertheless, as this ticket points out, having defined these names only for energy() confounds the driver logic. These convenience names are now in place for gradient() and property(). I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(), prop() if others concur with my present assessment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-109846967:126,energy,energy,126,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-109846967,3,['energy'],['energy']
Energy Efficiency,"For CI you can do:. ```; set NAT_ORBS true; cas_wfn, cas_e = energy('CASSCF', return_wfn =True). # Set new active space; energy('CASSCF', ref_wfn=True); ```. MP2 is a bit of a toss up as its difficult to get MP2 densities out of Psi4 at the moment. With the current version of Psi4, DF-MP2 Natural Orbitals are the default guess. A stop gap would be to use OMP2 guess orbitals.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/556#issuecomment-271442227:61,energy,energy,61,https://psicode.org,https://github.com/psi4/psi4/issues/556#issuecomment-271442227,2,['energy'],['energy']
Energy Efficiency,"For QM/MM, since you have many thousands of points, most QM programs use a simple external file for point charges so one does not have to send everything through the slower-but-smarter ""molecule recognition"" machinery. Besides, these external files are easier to write by the MM program interface as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1881#issuecomment-625891857:106,charge,charges,106,https://psicode.org,https://github.com/psi4/psi4/issues/1881#issuecomment-625891857,2,['charge'],['charges']
Energy Efficiency,"For comparison, this is ""Before"":; ```; ==> Energy Analysis <== . Raw electronic energy, E0; Total E0, Electronic energy at well bottom at 0 [K] -76.02703273 [Eh]. Zero-point energy, ZPE_vib = Sum_i nu_i / 2; Electronic ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Rotational ZPE 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Vibrational ZPE 14.440 [kcal/mol] 60.419 [kJ/mol] 0.02301225 [Eh] 5050.605 [cm^-1]; Correction ZPE 14.440 [kcal/mol] 60.419 [kJ/mol] 0.02301225 [Eh] 5050.605 [cm^-1]; Total ZPE, Electronic energy at 0 [K] -76.00402048 [Eh]. Thermal Energy, E (includes ZPE); Electronic E 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Rotational E 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational E 14.441 [kcal/mol] 60.423 [kJ/mol] 0.02301378 [Eh]; Correction E 16.219 [kcal/mol] 67.860 [kJ/mol] 0.02584634 [Eh]; Total E, Electronic energy at 298.15 [K] -76.00118639 [Eh]. Enthalpy, H_trans = E_trans + k_B * T; Electronic H 0.000 [kcal/mol] 0.000 [kJ/mol] 0.00000000 [Eh]; Translational H 1.481 [kcal/mol] 6.197 [kJ/mol] 0.00236046 [Eh]; Rotational H 0.889 [kcal/mol] 3.718 [kJ/mol] 0.00141628 [Eh]; Vibrational H 14.441 [kcal/mol] 60.423 [kJ/mol] 0.02301378 [Eh]; Correction H 16.811 [kcal/mol] 70.339 [kJ/mol] 0.02679052 [Eh]; Total H, Enthalpy at 298.15 [K] -76.00024221 [Eh]. Gibbs free energy, G = H - T * S; Electronic G -0.000 [kcal/mol] -0.000 [kJ/mol] -0.00000000 [Eh]; Translational G -8.837 [kcal/mol] -36.975 [kJ/mol] -0.01408306 [Eh]; Rotational G -2.205 [kcal/mol] -9.226 [kJ/mol] -0.00351384 [Eh]; Vibrational G 14.440 [kcal/mol] 60.418 [kJ/mol] 0.02301206 [Eh]; Correction G 3.398 [kcal/mol] 14.218 [kJ/mol] 0.00541516 [Eh]; Total G, Free enthalpy at 298.15 [K] -76.02161757 [Eh]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2969#issuecomment-1562015995:44,Energy,Energy,44,https://psicode.org,https://github.com/psi4/psi4/pull/2969#issuecomment-1562015995,8,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"For fun, I computed the SCF energy from these DUMP files and both sum to the same SCF energy. It looks more like a representation issue than an actual bug. Its probably worth running these through a downstream program and seeing the result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/980#issuecomment-384474917:28,energy,energy,28,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-384474917,2,['energy'],['energy']
Energy Efficiency,"For me the biggest pro of C++11 is that is reduces the amount of code I have to write/maintain/debug.; - Defaulted (and deleted) constructors and assignment operators (mentiond by @dgasmith); - Liberal use of STL containers and `unique_ptr` means you should rarely have to write a destructor, and often don't have to write a copy constructor; - Constructor delegation. Cons:; - Template programming results in nasty compiler error messages that take experience to figure out; - Overuse of templates, auto, decltype, etc, can result unreadable code; - This can somewhat be fixed in the new PR workflow. Don't accept PRs which are a mess; - Some C++11 patterns can be intimidating to people who are still learning basic C++. As more libraries require C++11 (I think Ambit, TiledArray, and Cyclops all do), it should generally be embraced, with some reservations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/238#issuecomment-182577836:43,reduce,reduces,43,https://psicode.org,https://github.com/psi4/psi4/issues/238#issuecomment-182577836,2,['reduce'],['reduces']
Energy Efficiency,"For methods (or methods in certain circumstances, say reference or conv/df) only available through an external add-on, do we want those opt-in? That is, certainly the external must be (1) installed and detectable. But do we also want to (2) require the user to `set qc_module=mrcc|adcc|chemps2` ? CheMPS2 has a long history of not requiring (2). ADCC has a shorter history of being the preferred backend and automatic choice, if present. I just switched MRCC syntax in #2731 to yes require (2). That was in keeping with the user opt-ing in via `energy(""mrccsd"")`. I can go either way, and I guess I'm now leaning toward not requiring (2) and adjusting MRCC accordingly. But it seems like something to discuss and settle on a consistent treatment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2737#issuecomment-1268969031:545,energy,energy,545,https://psicode.org,https://github.com/psi4/psi4/pull/2737#issuecomment-1268969031,1,['energy'],['energy']
Energy Efficiency,For new methods list we should include followings (all of them were completed):; - DF-CCSD energy and gradient (RHF) ; - DF-CCD energy and gradient (RHF) ; - DF-\LambdaCCSD(T) energy; - DF-MP2.5 energy and gradient (RHF and UHF); - DF-MP3 energy and gradient (RHF and UHF); - DF-LCCD energy and gradient (RHF and UHF); - DF-OMP2.5 energy and gradient (RHF and UHF); - DF-OMP3 energy and gradient (RHF and UHF); - DF-OLCCD energy and gradient (RHF and UHF),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367#issuecomment-214211172:91,energy,energy,91,https://psicode.org,https://github.com/psi4/psi4/issues/367#issuecomment-214211172,9,['energy'],['energy']
Energy Efficiency,"For the ""print error"" line, I get the below on a recent version. ```; ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / jun-cc-pvqz -152.13112737 xtpl_highest_1; corl mp2 / jun-cc-pv[tq]z -0.59785921 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / jun-cc-pvtz -0.02698189 xtpl_highest_1; total CBS -152.75596848 ; ---------------------------------------------------------------------------------------------------------; ```. The above looks ok to me, so I suspect you've hit #455 . You can easily patch your installation by doing https://github.com/psi4/psi4/commit/2e6b373102294cd59faf47d68044ff2402376e73 , no recompile required. Let me know if you think yours is a different issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/528#issuecomment-263048284:198,Energy,Energy,198,https://psicode.org,https://github.com/psi4/psi4/issues/528#issuecomment-263048284,1,['Energy'],['Energy']
Energy Efficiency,"For the reduced PBS file, I think you'll want something like the below. For psidatadir, just ensure non-interference. need to have psipath existing before appending. and jobname must match pbs name. i've tested it on dftd3 at least. ```; #!/bin/tcsh; #PBS -j oe; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end. unsetenv PSI4DATADIR; unsetenv PSIDATADIR; setenv PSI_SCRATCH $myscratch; if ! ( $?PSIPATH ) setenv PSIPATH """"; setenv PSIPATH /path/to/external/modules:${PSIPATH}; setenv PSIPATH /path/to/python/modules:${PSIPATH}; /psi/install/directory/bin/psi4 -i jobname.in -o jobname.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/361#issuecomment-212251160:8,reduce,reduced,8,https://psicode.org,https://github.com/psi4/psi4/pull/361#issuecomment-212251160,1,['reduce'],['reduced']
Energy Efficiency,"For very heavy atoms, the innermost electrons experience a very high charge from the nucleus and have enough kinetic energy that relativistic effects are significant. They're also so tightly bound that they don't matter in most chemical applications, so it's better to treat them using a term that can properly handle these 'core' electrons, and remove them from the calculation. Therefore, only the valence electrons contribute to the density when ECPs are present so there must be some way to tell Chargemol that this is the case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-412870923:69,charge,charge,69,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-412870923,3,"['Charge', 'charge', 'energy']","['Chargemol', 'charge', 'energy']"
Energy Efficiency,"For your first point, do you mean damping or level shifting? Remember that ""level shifting"" in `occ` is a misnomer. It has nothing to do with increasing the energy gap between occupied and virtual orbitals but is a _damping_ scheme that scales the diagonal elements of the DIIS B matrix. I was sloppy about this distinction when I first posted this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783#issuecomment-575614107:157,energy,energy,157,https://psicode.org,https://github.com/psi4/psi4/pull/1783#issuecomment-575614107,1,['energy'],['energy']
Energy Efficiency,"Forcing to disk_jk fixes the spherical-cartesian issue, but reproduces the same incorrect energy for the `dft-bench-ionization`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-385260107:90,energy,energy,90,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385260107,1,['energy'],['energy']
Energy Efficiency,"Forewarning that the [documentation in occ/dfocc](http://www.psicode.org/psi4manual/master/occ.html#) needed reworking even _before_ this commit, and it certainly will afterwards. I'll hold off on rewriting that (and updating the `driver.energy` docstring) until the rest of the PR looks good. How I decide to rewrite the manual will depend on if I need to make other changes, and the docstring updates will depend on the manual changes... Aren't dependencies fun?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789#issuecomment-578806742:238,energy,energy,238,https://psicode.org,https://github.com/psi4/psi4/pull/1789#issuecomment-578806742,1,['energy'],['energy']
Energy Efficiency,"From discussion today, the following tasks:; - [ ] In `driver.py`, delete reference-bearing methods from procedures table (multiple places). Delete `table:energy_scf` rst table and its analogies. Salvage `'hf'` from them and move it into the main rst table.; - [ ] In `proc.py`, remove much of `parse_scf_cases`, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [ ] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [ ] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-121430626:451,adapt,adapt,451,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-121430626,3,"['adapt', 'energy']","['adapt', 'energy']"
Energy Efficiency,"From the manual for Chargemol, eg on page 12 for CP2K input:; ```; <number of core electrons>; 36 28 <-- First number is the element number and second number is num_core; 47 30 <-- First number is the element number and second number is num_core; </number of core electrons>; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-412872503:20,Charge,Chargemol,20,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-412872503,1,['Charge'],['Chargemol']
Energy Efficiency,Full tests pass except DCFT5/6 which attempts to compare the energy to 10 decimal places. On that note it looks like the SCF/CCSD energy difference is about 5.e-10 or so. Not too surprising since the one-electron integrals are slightly different. Might try to rig up a test where we check the norm between the current and previous versions matrix elements for large basis sets and heavy atoms. ```; # 6 core update; nbf ntrial ao_overlap ao_kinetic ao_potential so_overlap so_kinetic so_potential; 0 28 1275 0.001758 0.000034 0.001248 0.001832 0.000177 0.001438; 1 98 104 0.002072 0.000253 0.004509 0.002503 0.000808 0.005072; 2 168 35 0.002780 0.000696 0.017807 0.003713 0.001938 0.019500; 3 238 17 0.003789 0.001310 0.044333 0.005827 0.003503 0.047694; 4 308 10 0.005321 0.002705 0.093579 0.009500 0.006423 0.096568; 5 378 6 0.007993 0.004080 0.178422 0.012842 0.009268 0.173306; 6 448 4 0.011465 0.006115 0.276808 0.017397 0.012930 0.282091; 7 518 3 0.015315 0.007962 0.426757 0.023739 0.018704 0.436435; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-277145466:61,energy,energy,61,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-277145466,2,['energy'],['energy']
Energy Efficiency,"Further note that importing numpy first won't fix everything. Accelerate-linked `import psi4` can still break numpy linalg. Whether it's fixed by Accelerate to Numpy or Accelerate to mkl-rt-linked Numpy is undetermined. Seen in evec of degen pair of hessian ; ```projhess = np.array([[ 0.0159, 0.0000, 0.0000, -0.0069, -0.0000, 0.0000, -0.0069, -0.0000, 0.0000],; [ 0.0000, 0.0159, 0.0000, -0.0000, -0.0069, 0.0000, 0.0000, -0.0069, 0.0000],; [ 0.0000, 0.0000, 0.1832, 0.0000, 0.0000, -0.0793, 0.0000, 0.0000, -0.0793],; [-0.0069, -0.0000, 0.0000, 0.0030, 0.0000, 0.0000, 0.0030, 0.0000, 0.0000],; [-0.0000, -0.0069, 0.0000, 0.0000, 0.0030, 0.0000, -0.0000, 0.0030, 0.0000],; [ 0.0000, 0.0000, -0.0793, 0.0000, 0.0000, 0.0777, 0.0000, 0.0000, -0.0090],; [-0.0069, 0.0000, 0.0000, 0.0030, -0.0000, 0.0000, 0.0030, -0.0000, 0.0000],; [-0.0000, -0.0069, 0.0000, 0.0000, 0.0030, 0.0000, -0.0000, 0.0030, 0.0000],; [ 0.0000, 0.0000, -0.0793, 0.0000, 0.0000, -0.0090, 0.0000, 0.0000, 0.0777]]); ```. And the code turned out to be fully up-to-date. My foolishness was in not using the dev env that properly sets up MKL from conda and instead just using Mac built-ins. CMake does not have the power to select/reject dependencies based on their `ldd` profile.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-340284447:1185,power,power,1185,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-340284447,1,['power'],['power']
Energy Efficiency,"Further, df-mp2 with conventional HF works for energy if user set the ""READ_SCF_3INDEX FALSE"" option. However, for analytic gradients it does not work. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-186302823:47,energy,energy,47,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-186302823,1,['energy'],['energy']
Energy Efficiency,"General philosophy has been that something in the energy/grad/etc call can silently trump an option ( otherwise reference rhf + energy b3lyp wouldn’t work). I think that holds for method, basis, fc, etc for g2. The hf3c isn’t so clear cut imo b/c the basis set is constant, so easy to switch out. Though as peter points out, it’s no longer hf3c then and shouldn’t get the “hf3c total energy “ set, only perhaps “scf total energy”. Comes down to does a method suggest or require certain options. . At one point, fc in this g2 sequence were behaving very strangely for me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1530#issuecomment-486231622:50,energy,energy,50,https://psicode.org,https://github.com/psi4/psi4/issues/1530#issuecomment-486231622,8,['energy'],['energy']
Energy Efficiency,"Gibbs and scf-guess work on clang but not gcc?!. Gibbs fails due to; ```; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 69, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/lib/psi4/driver/driver.py"", line 1026, in optimize; """"""input, such as DOCC, is correct."""""" % (current_sym, initial_sym)). ValidationError: Point group changed! (cs <-- c2v) You should restart using the last geometry in the output, after carefully making sure all symmetry-dependent input, such as DOCC, is correct.; ```; Fixing by setting c2v symmetry. scf-guess fails due to; ```; TestComparisonError: 	UHF energy, SAD guess (a.u.): computed value (-99.3839116) does not match (-99.5312257) to 6 digits.; ```; Fixing by setting right occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-449589237:700,energy,energy,700,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-449589237,1,['energy'],['energy']
Energy Efficiency,"Good day Sir,. Please I am still finding it difficult to generate the potential energy; data for the CF molecule. Would you be pleased to be of help? I don't mind; having a virtual meeting with you so you can assist me. I am the one one; doing this kind of research in my school and my supervisor doesn't know; much in this area. Please help 🙏 me.; If you request any information pertaining this, I will send it across; immediately. Thank you in anticipation. Kind regards; Sanctus. On Tue, Jun 18, 2024, 02:27 Jonathon Misiewicz ***@***.***>; wrote:. > Based on your writing, I assume you're a student researcher.; >; > Posting error messages *like this* is not a good way to get help. Large; > input files like this make it difficult for developers to find the actual; > problem. It's best practice to simplify the input file as much possible; > while still making the error clear. Sometimes, doing that can tell *you*; > where the problem is. If you don't know how to do this kind of; > troubleshooting, consult your seniors in your research group or your; > professor.; >; > I've played around with your latest input file and can confirm that you; > have made a fairly straightforward mistake, but you've discarded important; > information. As an exercise, please post a *simplified* input that; > reproduces your problem, and a *complete* error message. Once you've done; > that, I'll update the error message to be more explicit and offer some; > advice on how to bypass this. (Though once you understand the error, it's; > fairly straightforward.); >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/3181#issuecomment-2174102955>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BA3DXYANKY74HK5CYFXZ6YLZH4TB5AVCNFSM6AAAAABI5T5SNGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNZUGEYDEOJVGU>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549:80,energy,energy,80,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2184941549,2,['energy'],['energy']
Energy Efficiency,"Good idea, now you mention it. I think I would go ahead and spell out `ENERGY`, though. Haven't been sparing characters in psivars thus far. LGTM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253110825:71,ENERGY,ENERGY,71,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253110825,1,['ENERGY'],['ENERGY']
Energy Efficiency,"Good news: it works fine for me. The patch below (n/c from @mlestep, I don't think) gives the output below (it just needed to be told to compute something).; ```; -; - outfile->Printf( ""\nProperties computed using the %s density matrix\n\n"", title_.c_str());; + if (title_ == """") {; + outfile->Printf(""OEProp: No title given, name of density matrix used for the following properties is %s\n"", Da_so_->name().c_str());; + } else {; + outfile->Printf( ""\nProperties computed using the %s density matrix\n\n"", title_.c_str());; + }; ```; ```; e, wfn = energy('MP2', return_wfn=True); oeprop(wfn, ""MULTIPOLES(1)""); ```; ```; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; OEProp: No title given, name of density matrix used for the following properties is SCF density. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electric (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417462300 to convert to Debye; Dipole X : 0.0000000 0.0000000 0.0000000; Dipole Y : 0.0000000 0.0000000 0.0000000; Dipole Z : -0.2704549 1.1770271 0.9065722. --------------------------------------------------------------------------------; ```. Bad news: we [lost a test](https://github.com/psi4/psi4/commit/71bf174e60bc54b6a7424ce13dd28cef264fa850) (one of the two cc properties ones) and it fails. @amjames or TDC group, could you take a look?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1068#issuecomment-402301904:549,energy,energy,549,https://psicode.org,https://github.com/psi4/psi4/pull/1068#issuecomment-402301904,1,['energy'],['energy']
Energy Efficiency,"Good point -- @jeffschriber understands the issue and plans to address it sometime. The summary is that the new MBIS volume ratio functionality is only half available. The `energy(); oeprop(..., ""MBIS_VOLUME_RATIOS"")` route is fine, but `set scf_properties [mbis_volume_ratios]; energy()` fails b/c some necessary data (free atom volumes) isn't available. This isn't a regression. It'd just be nice to even up the capabilities, esp. as a qcschema run can only use the second form.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299#issuecomment-926645575:173,energy,energy,173,https://psicode.org,https://github.com/psi4/psi4/issues/2299#issuecomment-926645575,2,['energy'],['energy']
Energy Efficiency,"Good to know on the `CMAKE_PREFIX_PATH` for python detection. That should probably become the preferred way to detect Anaconda python. To have multiple items in that var, use something like `-DCMAKE_PREFIX_PATH=""${PFXE}/install-libefp-so;${PFXE}/install-libint-6-so;${PFXE}/install-pcmsolver""`, in case you hadn't already worked that out. Quite right about 2.7. At some point I stopped adapting my dictionary comprehensions for the 2.6 folks. I'm guessing it will build/link, but you'd get driver errors at runtime. Should be detecting a 2.7 minimum in cmake. One thing we want to do really soon is allow/switch to 3.5, switch to pythonlibsnew cmake module, and probably to offload python library detection to pybind11, so don't spend too much time playing around with the current python cmake, except for your own edification. Do feel free to switch that line you linked to to 2.7 .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249720030:386,adapt,adapting,386,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249720030,1,['adapt'],['adapting']
Energy Efficiency,"Good, I agree that is the best way to fix the documentation. I just put this in the example as a test:. ```; molecule {; 0 1; O 1.01646 0.05097 0.09714; H 1.98435 0.06069 0.05173; H 0.73761 0.24513 -0.81034; }. set basis cc-pVTZ. E, wfn = properties('ccsd', properties=['dipole'], return_wfn=True). nmopi = wfn.nmopi(); Da_so = wfn.Da(); SCa = core.Matrix(""Overlap times Ca"", nmopi, nmopi); SCa.gemm(False, False, 1.0, wfn.S(), wfn.Ca(), 0.0); Da_mo = Matrix.triplet(SCa, Da_so, SCa, True, False, False); molden(wfn, 'ccsd_no.molden', density_a=Da_mo); ```. and the corresponding output from Molden:. ```; COORDINATES; used for orbitals/density. X Y Z. 1 O -0.103043 0.072862 0.000000; 2 H -0.015287 -1.756185 0.000000; 3 H 1.650657 0.599812 0.000000; ; Mulliken Charges; ================; ; O -0.4661; H 0.2332; H 0.2332; ; Sum of Mulliken Charges: 0.0003; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1485#issuecomment-456160965:763,Charge,Charges,763,https://psicode.org,https://github.com/psi4/psi4/issues/1485#issuecomment-456160965,2,['Charge'],['Charges']
Energy Efficiency,"Gradient and geometry are as follows:; ```; 	 C 0.0000000000 0.0000000000 0.0000000000; 	 H 0.0000000000 1.7065081419 -1.2066834793; 	 H 1.7065081419 0.0000000000 1.2066834793; 	 H -1.7065081419 0.0000000000 1.2066834793; 	 H 0.0000000000 -1.7065081419 -1.2066834793; 	 -0.0000000000 0.0000000000 -0.0000000011; 	 -0.0000000000 0.0054395963 -0.0038463766; 	 0.0054395971 0.0000000000 0.0038463771; 	 -0.0054395971 -0.0000000000 0.0038463771; 	 0.0000000000 -0.0054395963 -0.0038463766; ```. The YZ plane shift surprised me at first, but then I remembered [orientation is discontinuous in Psi](https://github.com/psi4/psi4/issues/1297#issuecomment-443296950). The shift still surprises me. I should have been clearer: it is the very first step that reduces the computational point group. So yes, the point group does change per geometry iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1474#issuecomment-454249120:748,reduce,reduces,748,https://psicode.org,https://github.com/psi4/psi4/issues/1474#issuecomment-454249120,2,['reduce'],['reduces']
Energy Efficiency,"Great thanks! I'll add the tests right away. . And for `energy()` vs `tdscf()`, I don't feel too strongly either way. I like the simplicity of `energy()`, particularly since tdscf is only returning energies for now. `tdscf()` may be the way to go eventually since it is more flexible. One option is to have both work, easy to do since `energy()` is just calling a `tdscf()` function in `run_scf`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1885#issuecomment-626759803:56,energy,energy,56,https://psicode.org,https://github.com/psi4/psi4/pull/1885#issuecomment-626759803,6,['energy'],['energy']
Energy Efficiency,"Great! confirmed that `ctest` on libxc itself is clean for me. and in psi4, above error cleaned up, and `C_DSYEV` error cleaned up, too. For status, the 4 failing ctests are below. I'll run pytests next. ```. Printing out the relevant lines from the Psithon --> Python processed input file:; reference_wpbe_4 = -75.27504649361143; reference_wpbe_5 = -75.28530313989565; reference_wpbe_6 = -75.29249565176227; core.set_global_option(""DFT_OMEGA"", 0.4); func_call = energy('SCF', dft_functional=""wPBE""); --> compare_values(reference_wpbe_4, func_call, 6, ""wPBE0 omega=0.4""); core.set_global_option(""DFT_OMEGA"", 0.5); func_call = energy('SCF', dft_functional=""wPBE""); compare_values(reference_wpbe_5, func_call, 6, ""wPBE0 omega=0.5""); core.set_global_option(""DFT_OMEGA"", 0.6); func_call = energy('SCF', dft_functional=""wPBE""). !----------------------------------------------------------------------------------!; ! !; ! wPBE0 omega=0.4: computed value (-79.03914662) does not match !; ! (-75.27504649) to atol=1e-06 by difference (-3.76410013). !; ! !; !----------------------------------------------------------------------------------!. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 16.57 sec; ----------------------------------------------------------; Test Failed.; ""dft-custom"" end time: Jan 05 15:36 EST; ""dft-custom"" time elapsed: 00:00:16; ----------------------------------------------------------; ```. ```; Printing out the relevant lines from the Psithon --> Python processed input file:; core.IO.set_default_namespace(""ne""); core.set_global_option(""DFT_SPHERICAL_POINTS"", 770); core.set_global_option(""D_CONVERGENCE"", 1e-5); core.set_global_option(""BASIS"", ""cc-pvdz""); activate(ne); --> edft = energy(""ft97""); compare_values(-128.850056371480, edft, 4, ""Ne: FT97""). !-------------------------------------------------------!; ! !; ! Could not converge SCF iterations in 100 iterations. !; ! !; !------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754900620:463,energy,energy,463,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754900620,3,['energy'],['energy']
Energy Efficiency,"Greetings, all. It's time to schedule Kill the Boost week! There are three major parts of this, as I see it: BoostPy, BoostNonPy, and FilterBranch. These are defined in the addendum to the top post of this ticket. I imagine the in-person and through-hangout times will be focused on the BoostPy target, though we should all be working on the BoostNonPy as convenient. So, please to add your availability to the weeks below. Reply or feel free to edit this comment. **Aug 15:** LAB, Jet-ok, best for andy; **Aug 22 (ACS Nat'l Mtg):** LAB, Jet-ok, works for andy; **Aug 29:** LAB, Jet-ok, andy traveling",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/450#issuecomment-237669294:29,schedul,schedule,29,https://psicode.org,https://github.com/psi4/psi4/issues/450#issuecomment-237669294,1,['schedul'],['schedule']
Energy Efficiency,"Guess I'll heed the aggressive `DeprecationWarning`. Anyways, confirmed that your conda setup looks good. Input also segfaults for me locally with a compiled copy, so it's a general psi issue and not isolated to the binary. Your trouble is that the input geometry isn't symmetric enough, so it's optimizing near-linear angles, which the optimizer DoesNotLike. When you clean up the geometry, it optimizes cleanly. ```; >>> cat i1265.in ; molecule PCl5 {; 0 1; P -0.001250 0.001863 -0.000253; Cl -0.017313 2.126472 -0.026384; Cl -0.005958 -2.126884 0.029666; Cl 0.991147 -0.031176 -1.764481; Cl -2.029231 -0.007514 0.039738; Cl 1.062458 0.037458 1.721684; }. PCl5.update_geometry(); PCl5.symmetrize(0.05). set basis def2-tzvp. optimize(""b3lyp""); ```. ```; >>> grep '~' i1265.out ; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -2642.57856550 -2.64e+03 8.58e-03 4.73e-03 o 3.65e-02 1.72e-02 o ~; 2 -2642.57939174 -8.26e-04 2.66e-03 1.41e-03 o 1.48e-02 7.24e-03 o ~; 3 -2642.57947730 -8.56e-05 4.34e-04 1.79e-04 o 1.87e-03 8.01e-04 o ~; 4 -2642.57947965 -2.35e-06 3.44e-04 1.27e-04 o 4.29e-03 1.56e-03 o ~; 5 -2642.57948325 -3.60e-06 1.41e-04 * 5.08e-05 o 2.69e-03 9.60e-04 o ~; 6 -2642.57948452 -1.27e-06 2.69e-05 * 1.27e-05 o 1.57e-04 * 6.33e-05 o ~; --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -2642.578565499663 -2642.578565499663 0.00857526 0.00473269 0.03653776 0.0172",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424906851:888,Energy,Energy,888,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424906851,1,['Energy'],['Energy']
Energy Efficiency,"H 1 1.2 2 104; > H 1 1.2 2 105 3 120; > F 1 1.3 2 106 4 121; > }; > ; > # reference start NRE, E, G; > ; > norm_nre_start = 37.6824945882 # Q-Chem; > norm_e_start = -139.5307182946 # Q-Chem; > norm_g_start = psi4.Matrix(5, 3) # Q-Chem; > contents = [ # have to swap x & y, and -x; > [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; > [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; > [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; > norm_g_start.set(zip(*contents)); > norm_rmsg_start = 0.041309 # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; > ; > # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; > ; > # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243; > ; > # reference optimized NRE, E (G should be 0); > ; > nre_opt = 37.5276022922 # Q-Chem; > e_opt = -139.5573922 # Q-Chem; > #norm_g_opt # Q-Chem; > ; > # Full Analytical Gradient of MP2 Energy (in au.); > ; > # 1 2 3 4 5; > ; > # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; > ; > # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; > ; > # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003; > ; > def test_norm_start(mol):; > g0 = gradient('mp2', molecule=mol); > compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); > compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); > compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); > compare_matrices(norm_g_start, g0, 3, 'start grad'); > ; > def test_zero_grad(mol):; > e, wfn = optimize('mp2', return_wfn=True, molecule=mol); > g = wfn.gradient(); > g.print_out(); > compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); > compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); > compare_matrices(zerograd, g, 3, 'opt ZERO grad'); > ; > def test_odd_start(mol):; > g0 = grad",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-195966638:2567,Energy,Energy,2567,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-195966638,1,['Energy'],['Energy']
Energy Efficiency,"HF iteration 4 energy: -320.87131145782928 -0.27613414969761 0.00341002372407; @Atomic UHF iteration 5 energy: -320.87922264084102 -0.00791118301174 0.00056898557067; @Atomic UHF iteration 6 energy: -320.87957561560631 -0.00035297476529 0.00008011419372; @Atomic UHF iteration 7 energy: -320.87958210143461 -0.00000648582829 0.00000325221580; @Atomic UHF Final Energy for atom XE: -320.87958210143461; Finished UHF Computation!. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -324.53314738271274 -3.24533e+02 0.00000e+00 ; @DF-RHF iter 1: -328.19660724674617 -3.66346e+00 2.76741e-02 DIIS; @DF-RHF iter 2: -328.28542700545580 -8.88198e-02 1.26940e-02 DIIS; @DF-RHF iter 3: -328.29832629846925 -1.28993e-02 5.50180e-04 DIIS; @DF-RHF iter 4: -328.29835689704061 -3.05986e-05 4.43928e-05 DIIS; @DF-RHF iter 5: -328.29835733022713 -4.33187e-07 3.97861e-06 DIIS; @DF-RHF iter 6: -328.29835733491979 -4.69265e-09 2.37557e-07 DIIS; Energy converged.; ```; Works as well as in UGBS; ```; Initial Atomic UHF Energy: -5427.3786402080. Total Energy Delta E Density RMS. @Atomic UHF iteration 1 energy: -6483.96999842770038 -1056.59135821971540 1.04255411296391; @Atomic UHF iteration 2 energy: -6453.45541954978944 30.51457887791094 0.40784617759788; @Atomic UHF iteration 3 energy: -7117.90198205644811 -664.44656250665867 0.36315248442566; @Atomic UHF iteration 4 energy: -7267.18887860081304 -149.28689654436494 0.12758818454125; @Atomic UHF iteration 5 energy: -7299.46498016141504 -32.27610156060200 0.01509870939289; @Atomic UHF iteration 6 energy: -7299.96418197356979 -0.49920181215475 0.00107318606111; @Atomic UHF iteration 7 energy: -7299.97095115772936 -0.00676918415957 0.00050931817172; @Atomic UHF iteration 8 energy: -7299.97187492498688 -0.00092376725752 0.00008205774167; @Atomic UHF iteration 9 energy: -7299.97190856036286 -0.00003363537598 0.00000350327835; @Atomic UHF iteration 10 energy: -7299.97190876705281 -0.00000020668995 0.00000049737307; @Atomic UHF Final En",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590:1500,Energy,Energy,1500,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-454279590,1,['Energy'],['Energy']
Energy Efficiency,"HREADS'] = str(ncores); os.environ[""OPENBLAS_NUM_THREADS""] = str(ncores) # export OPENBLAS_NUM_THREADS=4; os.environ[""MKL_NUM_THREADS""] = str(ncores) # export MKL_NUM_THREADS=4; os.environ[""VECLIB_MAXIMUM_THREADS""] = str(ncores) # export VECLIB_MAXIMUM_THREADS=4; os.environ[""NUMEXPR_NUM_THREADS""] = str(ncores) # export NUMEXPR_NUM_THREADS=4; # Set the max memory for PySCF; os.environ[""PYSCF_MAX_MEMORY""] = str(120000). import psi4; psi4.set_memory(int(120000*1e6)); numpy_memory = 40; import pyscf; from pyscf import dft; # pyscf.lib.misc.num_threads(n=8). xyzFilename = 'Decane_C10H22.xyz'. with open(xyzFilename,""r"") as f:; xyz_string = f.read(). psi4_geo = psi4.core.Molecule.from_string(xyz_string, dtype='xyz',fix_symmetry='c1', fix_orientation=True,fix_com=True). # run psi4 calculation; psi4.core.set_num_threads(ncores); psi4.set_options(; {; ""scf__reference"": ""rks"",; ""scf_type"": ""df"",; ""scf__maxiter"": 50,; ""basis"": 'def2-svp',; ""df_basis_scf"": 'def2-universal-jfit',; ""puream"":False,; ""guess"": ""sap"",; ""SCF_INITIAL_ACCELERATOR"":""none"",; ""dft_spherical_points"":302,; ""dft_radial_points"" :75,; ""diis_max_vecs"" : 6,; #""DFT_NUCLEAR_SCHEME"":""becke"",; ""E_CONVERGENCE"":1e-7,; }; ); energy = psi4.energy(name=""scf"",dft_functional=""svwn"", molecule=psi4_geo, return_wfn=False); energy = 0. # run PySCF calculation; mol = pyscf.M(; atom=xyzFilename, ; basis=""def2-svp"",; symmetry=False,; verbose=4,; cart=True,; ); # mol.max_memory = 10_000; mf = dft.rks.RKS(mol, xc=""LDA,VWNRPA"").density_fit(auxbasis='def2-universal-jfit'); mf.init_guess = 'vsap'; # mf.grids.level = 5; mf.verbose = 4; mf.grids.prune = None; mf.grids.atom_grid = (75, 302); mf.grids.becke_scheme = dft.gen_grid.stratmann; mf.small_rho_cutoff = 1e-15; mf.conv_tol = 1e-7; mf.kernel(); print('Nuc-Nuc PySCF= ', mol.energy_nuc()); print('One electron integrals energy',mf.scf_summary['e1']); print('Coulomb energy ',mf.scf_summary['coul']); print('EXC ',mf.scf_summary['exc']); ```. Is there any further advice that you might have?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1487278053:1542,energy,energy,1542,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1487278053,5,['energy'],['energy']
Energy Efficiency,"Happy to help. I'll reopen this issue as I believe there is a a todo item:. The `np.mean(rvals)` is probably not the best idea as a first guess of `r_e` for the fit. We should probably find the minimum of energy along the `rvals`, and then look at how symmetrically the points are distributed around it: I'd suggest if we have less than 3 points at either side of the minimum, we raise a warning. We could also rise the minimum number of points to 7... Another quick check would be to make sure there's only one minimum in the provided data, but I guess that might be a bit more involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483556131:205,energy,energy,205,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483556131,1,['energy'],['energy']
Energy Efficiency,Have you been using UHF for open-shell? Looks like the diagnostics are defined for RHF and ROHF ([Lee article](https://www.sciencedirect.com/science/article/pii/S0009261403004354) agrees). I get the following print patterns by varying reference. ```. molecule {; #-1 1; 0 2; O 0.0 0.0 0.0; H 1.0 0.0 0.0; }. set {; scf_type pk; e_convergence 8; r_convergence 6; basis cc-pvdz; #reference rhf; #reference rohf; reference uhf; }. energy('ccsd'). print_variables(). # <<< RHF -1 1; #; # Solving CC Amplitude Equations; # ------------------------------; # Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; # ---- --------------------- --------- ---------- ---------- ---------- --------; # 0 -0.197723974784437 0.000e+00 0.000000 0.000000 0.000000 0.116770; # 1 -0.200886440649593 2.613e-02 0.003711 0.010524 0.010524 0.124980; # 2 -0.204664297940221 9.774e-03 0.004249 0.012062 0.012062 0.132065; # 3 -0.205054447874144 2.517e-03 0.004541 0.012898 0.012898 0.134019; # 4 -0.205079571860144 5.102e-04 0.004543 0.012929 0.012929 0.134351; # 5 -0.205083329294564 8.900e-05 0.004542 0.012931 0.012931 0.134394; # 6 -0.205082593077830 2.128e-05 0.004542 0.012931 0.012931 0.134399; # 7 -0.205082451507967 3.672e-06 0.004542 0.012931 0.012931 0.134400; # 8 -0.205082414774114 9.732e-07 0.004542 0.012932 0.012932 0.134400; # 9 -0.205082388497871 3.442e-07 0.004542 0.012932 0.012932 0.134400; # 10 -0.205082395296112 1.014e-07 0.004542 0.012932 0.012932 0.134400; # 11 -0.205082394755246 2.995e-08 0.004542 0.012932 0.012932 0.134400. # <<< ROHF -1 1; #; # Solving CC Amplitude Equations; # ------------------------------; # Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; # ---- --------------------- --------- ---------- ---------- ---------- --------; # 0 -0.197723974731951 0.000e+00 0.000000 0.000000 0.000000 0.000000; # 1 -0.200886440618237 3.243e-02 0.003711 0.010524 0.010524 0.000000; # 2 -0.204564275493213 1.028e-02 0.004234 0.012020 0.012020 0.000000; # 3 -0.205087135995954 3.025e-03 0.004542 0.0,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878:428,energy,energy,428,https://psicode.org,https://github.com/psi4/psi4/issues/1681#issuecomment-516138878,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"Have you tested this against Python 2, too? I'm getting the following error at execution time on my Mac with Python 2.7:. ```; Traceback (most recent call last):; File ""<string>"", line 29, in <module>; File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/driver.py"", line 618, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/proc.py"", line 2123, in run_adc; scf_helper(name, **kwargs); File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/proc.py"", line 1457, in scf_helper; e_scf = psi4.scf(precallback, postcallback); TypeError: No registered converter was able to produce a C++ rvalue of type std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > from this Python object of type unicode; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160#issuecomment-130013400:286,energy,energy,286,https://psicode.org,https://github.com/psi4/psi4/pull/160#issuecomment-130013400,2,['energy'],['energy']
Energy Efficiency,"Having rerun my systems, I'm getting the same answers as before. Here's a sample input file.; ```; molecule {; 0 3; S -0.3387469593 0.0000000000 -1.1908558477; O 0.8847472382 0.0000000000 -0.3445279161; --; 0 1; H 0.4210342108 0.0000000000 1.7275935987; O -0.2480570158 0.0000000000 2.4179317954; H 0.2472257748 0.0000000000 3.2385953098; symmetry c1; no_reorient; no_com; }. set {; reference uhf; scf_type direct; guess sad; basis jun-cc-pV(D+d)Z; df_basis_sapt jun-cc-pV(D+d)Z-ri; }. energy('sapt0'); ```. The output file confirms that I'm running on `2d342fe`, and the SAPT output file is displaying `Open-shell: Jérôme Gonthier`, so this should be running your new code... but it's getting the same answers. Is there a reason for this? Perhaps this bug will only appear for two open-shell systems, but not for one open-shell and one closed-shell?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1948#issuecomment-656211542:486,energy,energy,486,https://psicode.org,https://github.com/psi4/psi4/pull/1948#issuecomment-656211542,1,['energy'],['energy']
Energy Efficiency,Having similar convergence problems in a different method trying to run SAPT2+ as a function of distance between two ions. Frozen core on or off does not fix the problem. Has this been fixed in master? Using 1.2.1 for now. Input:. molecule LiF {; 1 1; Li 0.000000000 0.000000000 0.000000000; --; -1 1; F 16.000000000 0.000000000 0.000000000. units angstrom; no_reorient; }; set globals {; basis cc-pVTZ; freeze_core false; df_scf_guess false; }; set_memory(32000000000); energy('sapt2+'). Output:. @DF-RHF iter 96: -105.75609224148533 -5.68434e-14 1.64830e-02 DIIS; @DF-RHF iter 97: -105.75609224148535 -1.42109e-14 1.64830e-02 DIIS; @DF-RHF iter 98: -105.75609224148535 0.00000e+00 1.64830e-02 DIIS; @DF-RHF iter 99: -105.75609224148502 3.26850e-13 1.64830e-02 DIIS; @DF-RHF iter 100: -105.75609224148509 -7.10543e-14 1.64830e-02 DIIS. ==> Post-Iterations <==. Failed to converge.; Iterations did not converge.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433#issuecomment-465485877:471,energy,energy,471,https://psicode.org,https://github.com/psi4/psi4/issues/1433#issuecomment-465485877,1,['energy'],['energy']
Energy Efficiency,Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==10081==ABORTING; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). =================================================================; ==10025==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 282802 byte(s) in 124 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Direct leak of 2 byte(s) in 2 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f17949fe0 in _PyObject_Alloc.isra.0 (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe6fe0). Indirect leak of 19819 byte(s) in 22 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Indirect leak of 648 byte(s) in 1 object(s) allocated from:; #0 0x7f0f92dd6df8 in __interceptor_realloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:75; #1 0x557f1797673c in _PyObject_GC_Resize (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0x11373c). SUMMARY: AddressSanitizer: 303271 byte(s) leaked in 149 allocation(s). 0% tests passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756:18153,allocate,allocated,18153,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756,1,['allocate'],['allocated']
Energy Efficiency,"Hello David. Single determinant PSI4 output works pretty well and have been tested.; There is nothing special in the code for PSI4 converter https://github.com/Konjkov/molden2qmc/blob/master/molden2qmc.py#L962. CASINO multi-determinant extension composes from some single determinant (i.e. PSI4 CASSCF(3,4) MOLDEN output) and electron promotion data.; 1-st determinant:; ground state; 2-nd determinant:; up electron promote from 2 orbital to 4; down electron promote from 2 orbital to 4; 3-rd determinant:; up electron promote from 2 orbital to 5; down electron promote from 2 orbital to 5; The first determinant is taken into account with the weighting factor = 0.972153; 2-nd with = 0.165709; 3-rd with = 0.165709; as described in PSI4 output:. MCSCF Root 0 energy = -24.563671749133171. Active Space Natural occupation numbers:; ; A 1.890162 A 1.000000 A 0.054919; A 0.054919; ; The 20 most important determinants:; ; * 1 0.972153 ( 0, 0) 2AX 3AA.; * 2 0.165709 ( 4, 3) 3AA 5AX.; * 3 0.165709 ( 2, 2) 3AA 4AX. symmetry is turned out.; For this multi-determinant configuration CASINO outputs (roughly). E = -24.431(1) ; var = 5.3(1) ; Total CASINO CPU time ::: 181.2400 seconds. if I take 2-nd and 3-rd determinants with weighting factor = -0.165709; CASINO outputs (roughly). E = -24.565(1) ; var = 5.0(1) ; Total CASINO CPU time ::: 256.1500 seconds. which very well coincides with the PSI4 output energy. Best, Vladimir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/796#issuecomment-331682241:760,energy,energy,760,https://psicode.org,https://github.com/psi4/psi4/issues/796#issuecomment-331682241,2,['energy'],['energy']
Energy Efficiency,"Hello Francesco. I didn't check exactly the sign. I will try this with very small basis like STO-3G.; But I can take the orbitals from MOLDEN output and coefficients (with signs) and put it into CASINO program input, as I usually do this many times for another systems. Then I can recalculate energy with variational monte calro (VMC) method. I have to get the same energy but I didn't in the case of Boron.; Than I changed coefficients signs by hands and get the right VMC energy.; It makes me think that the sign was wrong. would you suggest a way to check quickly if the sign of coefficients is correct. I will use it. Best, Vladimir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/796#issuecomment-326840681:293,energy,energy,293,https://psicode.org,https://github.com/psi4/psi4/issues/796#issuecomment-326840681,3,['energy'],['energy']
Energy Efficiency,"Hello Francesco.; I don't quite understand you. The only matrix determine orbital coefficients is [MO] section data of the MOLDEN file and different determinants have only different occupation numbers of there orbitals.; I only sort MO orbitals by energy if required before feed it into CASINO. I will upload MOLDEN outputs for CASSCF and ROHF cases approximately in 2 hours when I will have access to the server. But you can also create these files easily from my inputs or you talk about some other matrices. Best, Vladimir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/796#issuecomment-331875695:248,energy,energy,248,https://psicode.org,https://github.com/psi4/psi4/issues/796#issuecomment-331875695,1,['energy'],['energy']
Energy Efficiency,"Hello, I'm the developer who implemented ADIIS in Psi4. Thanks for your patience. Between some life changes and issues compiling Psi4, I haven't been able to look at this issue previously. 1. Following Susi's suggestion, B3LYP converges straightforwardly. The SCF iterations takes one bad step early on, but this happens whether ADIIS is on or off.; 2. If I disable ADIIS completely using your original functional, it _still_ fails. Once the energy gets to around 284 Eh, it doesn't become negative again. **Contrary to the topic title, ADIIS is not at fault**.; 3. The title suggests that you've had previous ADIIS issues previously. If so, please send me specific examples. My experience has been that ADIIS itself is fine, but can break when other parts of the code are badly behaved. I'll do some digging to see if I can suggest an alternate protocol that will actually converge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051#issuecomment-1748931430:442,energy,energy,442,https://psicode.org,https://github.com/psi4/psi4/issues/3051#issuecomment-1748931430,1,['energy'],['energy']
Energy Efficiency,Here an input file : it simply crashes with no specific error. molecule c2h3 {; C .049798 -.576272 .000000; C .049798 .710988 .000000; H -.876750 -1.151844 .000000; H .969183 -1.154639 .000000; H -.690013 1.498185 .000000; units ang; symmetry c1; }; set basis cc-pvdz ; set scf_type df; set cc_type df. set guess GWH; set reference rohf; set MAXITER 1000. set e_convergence 1e-6; set d_convergence 1e-6; set ints_tolerance 1e-8. set FROZEN_DOCC [1]; set frozen_uocc [10]; set roots_per_irrep [4]; energy('eom-cc3'),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/462#issuecomment-240187176:497,energy,energy,497,https://psicode.org,https://github.com/psi4/psi4/issues/462#issuecomment-240187176,2,['energy'],['energy']
Energy Efficiency,"Here are my results from two failed runs, I only see a difference at the CD-MP2 line:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914818; REF Energy (a.u.) : -25.94513055914818; Alpha-Alpha Contribution (a.u.) : -0.00171224383410; Alpha-Beta Contribution (a.u.) : -0.05664222895157; Beta-Beta Contribution (a.u.) : -0.00005535848549; Scaled_SS Correlation Energy (a.u.): -0.00058920077319; Scaled_OS Correlation Energy (a.u.): -0.06797067474188; CD-SCS-MP2 Total Energy (a.u.) : -26.01369043466326; CD-SOS-MP2 Total Energy (a.u.) : -26.01876545678522; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153923064; CD-MP2 Correlation Energy (a.u.) : -0.02055603315430; CD-MP2 Total Energy (a.u.) : -25.96568659230248; ======================================================================= ; ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914819; REF Energy (a.u.) : -25.94513055914819; Alpha-Alpha Contribution (a.u.) : -0.00171224383410; Alpha-Beta Contribution (a.u.) : -0.05664222895157; Beta-Beta Contribution (a.u.) : -0.00005535848549; Scaled_SS Correlation Energy (a.u.): -0.00058920077319; Scaled_OS Correlation Energy (a.u.): -0.06797067474188; CD-SCS-MP2 Total Energy (a.u.) : -26.01369043466327; CD-SOS-MP2 Total Energy (a.u.) : -26.01876545678523; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153923066; CD-MP2 Correlation Energy (a.u.) : -0.05918204371032; CD-MP2 Total Energy (a.u.) : -26.00431260285851; ======================================================================= ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183520260:109,energy,energy,109,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183520260,22,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,Here is another example of this error. ```memory 2 GB; molecule {; 8 0.0000079789 0.0000000002 3.3734612294; 1 -0.7693027984 -0.0000000004 3.9669401984; 1 0.7691761670 -0.0000000031 3.9671249871; }. energy('pbe0/aug-cc-pVDZ'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-1315662300:199,energy,energy,199,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-1315662300,1,['energy'],['energy']
Energy Efficiency,"Here's a few more refs and the original discussion http://forum.psicode.org/t/naming-considerations-for-cepa-0/156 . And more ways it can confuse ppl http://forum.psicode.org/t/cepa-0-singles/1525/11 . My main consideration is that `energy(""cepa(0)"")` is running the same method in all modules. That's what's currently forced by cepa(0) directing all traffic to fnocc (since that's the only module that can do lccsd). `lccd` properly manages direction to fnocc/occ. If the opinion of `cepa0 --> lccsd` has shifted over the years to `cepa0 --> lccd`, that's ok with me, and with a lot of warnings, we can shift the definition. Or, if you'd like `cepa0` to always raise an error and demand sd/d distinction, that's ok, too. Or maybe dct could adjust to the current scheme. Basically, I think the current way is sane. But then I don't use cepa. And the current setup has shown itself to be confusing to new (thread above) and experienced (AED, Jonathon) practitioners. So strong feelings from multiple other parties could overcome my symlink.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1872#issuecomment-616805230:233,energy,energy,233,https://psicode.org,https://github.com/psi4/psi4/issues/1872#issuecomment-616805230,1,['energy'],['energy']
Energy Efficiency,"Here's an update on the effects of your #1988, @JonathonMisiewicz. On the OCC LCCD bullet, no change, since it doesn't hit that mograd code. On the OCC OLCCD bullet, you can see the before and after below of the final iteration of nine cases. No change in number of iterations (final integer) because convergence is energy limited (first inequality) rather than mograd limited (second inequality). Do you think adjusting https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/occwave.cc#L144-L155 is in order?. ### olccd conv ae r/u/ro dz/adz/qz2p. pre-1988 WRONG; ```; iter: abs( 3.92e-07) < 1.00e-06 9.61e-08 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.68e-07 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.32e-08 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 4.03e-07 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.84e-07 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.62e-07 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 8.37e-07 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 1.17e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 1.04e-07 < 1.00e-04 11; ```; post-1988 RIGHT; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.45e-06 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.03e-06 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 4.81e-06 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 9.22e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 9.10e-07 < 1.00e-04 11; ```. By the way, there's more of those rms formulas. Look suspicious to you, too?. ```; >>> grep sqrt ../psi4/src/psi4/occ/* | grep rms_; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2 = std::sqrt(rms_t2 / nElements);; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2AA = std::sqrt(rms_t2AA) / nElements;; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2BB = std::sqrt(rms_t2BB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-682100500:316,energy,energy,316,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682100500,1,['energy'],['energy']
Energy Efficiency,"Here's another case where the energy stagnates but there's still large DIIS error. I don't really understand how this is possible.; ```; memory 8 gb. molecule {; Cr 0.47834117238031 0.45636471654971 0.09285402419506; O 1.55111099616190 1.09138241759496 -0.82993325785254; O -0.61796524632964 1.38903190796852 0.67056903439165; Cl -0.44331553251777 -1.03073713008178 -0.94412856229465; Cl 1.43568861030522 -0.43101191203143 1.65244876156047; }. set basis 6-31G**; set df_basis_scf def2-svp-jfit; set geom_maxiter 250. # Use a (75,302) quadrature grid; set dft_radial_points 75; set dft_spherical_points 302. my_dft = {; ""name"": ""my lda"",; ""x_functionals"": {""lda_x"": {}},; ""c_functionals"": {""lda_c_pw"": {}}; }; energy('scf', dft_functional=my_dft); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-869728286:30,energy,energy,30,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869728286,2,['energy'],['energy']
Energy Efficiency,"Here's one sample case; ```; molecule {; 0 2; V 0.000000 0.000000 0.000000 ; N -0.009654 1.561722 1.062138 ; N 0.009654 -1.561722 1.062138 ; N -1.561722 -0.009654 -1.062138 ; N 1.561722 0.009654 -1.062138 ; C -1.219978 2.113945 1.655979 ; C 1.219978 -2.113945 1.655979 ; C -2.113945 -1.219978 -1.655979 ; C 2.113945 1.219978 -1.655979 ; C 1.188278 2.080402 1.709075 ; C -1.188278 -2.080402 1.709075 ; C -2.080402 1.188278 -1.709075 ; C 2.080402 -1.188278 -1.709075 ; H -2.112996 1.691813 1.177356 ; H 2.112996 -1.691813 1.177356 ; H -1.691813 -2.112996 -1.177356 ; H 1.691813 2.112996 -1.177356 ; H 2.089441 1.627028 1.275983 ; H -2.089441 -1.627028 1.275983 ; H -1.627028 2.089441 -1.275983 ; H 1.627028 -2.089441 -1.275983 ; H -1.254235 3.214541 1.536136 ; H 1.254235 -3.214541 1.536136 ; H -1.905317 -1.281383 -2.742242 ; H 1.905317 1.281383 -2.742242 ; H 1.192045 1.877111 2.798018 ; H -1.192045 -1.877111 2.798018 ; H -3.178469 1.263762 -1.584921 ; H 3.178469 -1.263762 -1.584921 ; H -1.281383 1.905317 2.742242 ; H 1.281383 -1.905317 2.742242 ; H -3.214541 -1.254235 -1.536136 ; H 3.214541 1.254235 -1.536136 ; H 1.263762 3.178469 1.584921 ; H -1.263762 -3.178469 1.584921 ; H -1.877111 1.192045 -2.798018 ; H 1.877111 -1.192045 -2.798018; }. memory 24 gb; set basis aug-pcseg-1; set reference uhf; set guess sad; set scf_type direct; set df_scf_guess false; set diis_rms_error true; set ints_tolerance 1e-14; energy('scf'). set guess read; set diis_rms_error false; energy('scf'); ```. The first step converges as; ```; @UHF iter 19: -1477.30511799303667 -5.87622e-07 5.94954e-07 DIIS; Energy converged.; ```; where the second starts out as; ```; Total Energy Delta E MAX |[F,P]|. @UHF iter 0: -1477.30511823973779 -1.47731e+03 3.66064e-05 ; @UHF iter 1: -1477.30511827087457 -3.11368e-08 2.33361e-05 DIIS; ```; so the absolute norm is larger by two orders of magnitude. And this is still a relatively small system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1460#issuecomment-452429783:1416,energy,energy,1416,https://psicode.org,https://github.com/psi4/psi4/pull/1460#issuecomment-452429783,4,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"Here's same job with more ""normal"" input. ```; memory 2500 mb. molecule struct {; units angstrom; 0 1; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174; N -0.699812 1.158389 -0.000832; N -2.008322 1.432822 0.001677; N 2.267238 1.156444 -0.001011; N 3.565803 1.436891 0.001896; N 2.266013 -1.155613 -0.000583; N 3.563003 -1.435099 0.001415; B -1.131831 -2.605160 -0.011643; B -1.129410 2.608511 -0.010295; B 2.669048 -2.603366 -0.007508; B 2.671738 2.604971 -0.007555; }. set basis 6-31G*; optimize('scf'); ```. and output. ```; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -609.21574955 -6.09e+02 4.65e-02 1.39e-02 o 1.70e-01 5.38e-02 o ~; 2 -609.24416188 -2.84e-02 1.95e-02 4.94e-03 o 3.67e-01 6.90e-02 o ~; 3 -609.26373458 -1.96e-02 4.03e-02 1.34e-02 o 4.00e-01 1.12e-01 o ~; 4 -609.29180689 -2.81e-02 4.13e-02 1.19e-02 o 3.28e-01 7.61e-02 o ~; 5 -609.31034726 -1.85e-02 6.99e-02 1.39e-02 o 3.38e-01 6.27e-02 o ~; 6 -609.33098015 -2.06e-02 4.29e-02 1.03e-02 o 4.77e-01 7.89e-02 o ~; 7 -609.36524125 -3.43e-02 4.11e-02 7.82e-03 o 7.04e-01 1.05e-01 o ~; 8 -609.41234162 -4.71e-02 4.58e-02 8.89e-03 o 5.68e-01 1.12e-01 o ~; 9 -609.44676585 -3.44e-02 4.83e-02 1.17e-02 o 6.15e-01 9.91e-02 o ~; 10 -609.49528129 -4.85e-02 4.44e-02 1.07e-02 o 4.17e-01 1.12e-01 o ~; 11 -609.37833924 1.17e-01 1.22e-01 3.06e-02 o 2.26e-01 6.51e-02 o ~; 12 -609.49194948 -1.14e-01 6.74e-02 1.50e-02 o 2.98e-01 6.15e-02 o ~; 13 -609.50472895 -1.28e-02 4.41e-02 7.46e-03 o 6.15e-01 9.60e-02 o ~; 14 -609.49299554 1.17e-02 5.21e-02 1.31e-02 o 4.25e-01 7.90e-02 o ~; 15 -609.51",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/153#issuecomment-126177998:711,Energy,Energy,711,https://psicode.org,https://github.com/psi4/psi4/issues/153#issuecomment-126177998,1,['Energy'],['Energy']
Energy Efficiency,"Here, I kind of feel like for the returned `jobrec` the dispersion energy is the correct thing for the current energy. I would hazard that this is an issue in reintegration of this energy down the line.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1470#issuecomment-455797642:67,energy,energy,67,https://psicode.org,https://github.com/psi4/psi4/pull/1470#issuecomment-455797642,3,['energy'],['energy']
Energy Efficiency,"Hey,. Q1: The current code can only perturb along the specified axis. We could adapt it to handle rotations we'd just have to be careful with symmetry; it shouldn't be difficult. Q2: Any code that uses the `MintsHelper::so_potential` (not `MintsHelper::ao_potential`) will have the perturbation applied. I had tested this a few years ago for MP2 and CCSD. Might be a good idea to make sure there's a test included for it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/302#issuecomment-192282809:79,adapt,adapt,79,https://psicode.org,https://github.com/psi4/psi4/issues/302#issuecomment-192282809,1,['adapt'],['adapt']
Energy Efficiency,"Hi @JonathonMisiewicz,; Have you heard about the ESCDF library? It might be better adapted to what you want to do. It is also based on HDF5, but it is more low-level and flexible than TREXIO. See https://th.fhi-berlin.mpg.de/site/uploads/Publications/Oliveira_The_CECAM_electronic.pdf section G page 153.; I have never tried it, so I have no opinion on how easy it is to use.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2847#issuecomment-1429418466:83,adapt,adapted,83,https://psicode.org,https://github.com/psi4/psi4/issues/2847#issuecomment-1429418466,1,['adapt'],['adapted']
Energy Efficiency,"Hi @hokru, I uploaded `psi4/label/dev::dftd4-3.5.0` packages (py intf present, so these are equiv to `conda-forge::dftd4-python` and tried out this branch with a mix of packages so that I could add some more helpful error messages. So there's one commit here and two over at qcengine. Also I hopefully got around all the CI checks here, but we'll see. Locally, this passes with `c-f::gcp-correction` and `psi4::dftd4`. ```; # Any line starting with the # character is a comment line; #! Sample HF/cc-pVDZ H2O computation. memory 600 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; ene = energy('r2scan-d4'); compare_values(-76.38149185, ene, 6, 'asdf'). energy('r2scan-3c/') # slash unsets basis from above; compare_values(-76.41834614, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1444523360:613,energy,energy,613,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1444523360,4,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"Hi @jminuse, thanks for the informative bug report. I'm almost certain that this suspicious 1.4rc1 behavior was fixed in 1.4rc2 by #2139, which tightened the integral screening after we switched integral engines from `libint` to `libint2`. . Your observations are consistent with what we saw: very wrong and/or oscillatory SCF energies. I also checked that your test case gives a reasonable energy with 1.4rc1 when I set the keyword `INTS_TOLERANCE` to 0, which was the temporary workaround for that bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302:391,energy,energy,391,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302,1,['energy'],['energy']
Energy Efficiency,"Hi @kzinovjev great job adding this. . @loriab It would be great to have these available via the qcengine interface so we could store them in QCArchive when MBIS charges are requested on a calculation, can you adviseif any other changes would be needed to be made to make this possible?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3102#issuecomment-1860206635:162,charge,charges,162,https://psicode.org,https://github.com/psi4/psi4/pull/3102#issuecomment-1860206635,1,['charge'],['charges']
Energy Efficiency,"Hi @loriab and @robertodr,. Thanks for your effort!. Regarding `Psithon` and `PsiAPI`, we are using both. For older products (e.g. https://github.com/Acellera/htmd/blob/master/htmd/qm/psi4.py), it is still `Psithon`, but will change to `PsiAPI` eventually. For new development, we (at least me) are already using `PsiAPI.` So ideal, the both should work consistently. Regarding a simple specific usage from https://github.com/Acellera/htmd/blob/master/htmd/qm/psi4.py, we have two scripts:; ```bash; $ cat run.sh; #!/bin/sh. export HTMD_PSI4_WORKDIR=$(pwd); psi4 -i psi4.in -o psi4.out &> psi4.log; ```; ```python; $ cat psi4.in; set_num_threads( 8 ); memory 2.000000 gb. set { reference rks }; set { basis cc-pVDZ }. molecule MOL {; 0 1; noreorient; nocom; symmetry c1; O 1.014300 -0.002300 0.060500; O 2.462400 -0.107500 -0.002400; H 0.821200 -0.823600 -0.430600; H 2.655500 0.713700 0.488700; }. pcm = { ; Medium { Solvent = Water }; Cavity { Type = GePol }; }. set optking { dynamic_level = 1 }. energy, wfn = optimize('B3LYP-D3', return_wfn=True). import os; os.chdir(os.environ['HTMD_PSI4_WORKDIR']). oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', 'MULLIKEN_CHARGES'). with open('psi4out.xyz', 'w') as f:; f.write('4 ' ); f.write('%.12f\n' % energy); f.write(MOL.save_string_xyz()); ```; We need that the working directory to be not changed after `optimize` (and `energy`) returns as we do some analysis and write a few files in general (in this case just `psi4out.xyz`). So, we have an ugly hack to fix it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-357208169:1000,energy,energy,1000,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-357208169,6,['energy'],['energy']
Energy Efficiency,"Hi @loriab, I was just wondering if there are any updates on this issue please? I'm not sure how easy it would be to revert to behaviour before PR #2127? - at this point we had fully functioning access to both MBIS charges and atomic volumes. The calculation of the free atom volumes does not seem like a key feature to me (they can be easily tabulated). Thanks for your help.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272#issuecomment-925810175:215,charge,charges,215,https://psicode.org,https://github.com/psi4/psi4/issues/2272#issuecomment-925810175,1,['charge'],['charges']
Energy Efficiency,"Hi @loriab,. I promise I will find a consolidation way to reduce the source code as much as possible when I find a free time to work on it. Presently, I am more focused on the implementation and adding some new features to DFOCC. Even If we suppose that there are some redundant codes in DFOCC, it is a not big problem. It may just take a few more minutes of building time and a slightly additional storage. Further, I think the relatively large body of DFOCC w.r.t. some other modules is understandable since DFOCC includes many post-HF methods (standard and OO) including energies and gradients, and most of them are implemented for RHF and UHF refs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/382#issuecomment-221381893:58,reduce,reduce,58,https://psicode.org,https://github.com/psi4/psi4/pull/382#issuecomment-221381893,1,['reduce'],['reduce']
Energy Efficiency,"Hi @susilehtola, I was looking around the Fedora packaging site to see if there was a download counter. Didn't find one but did notice a few details from your build scripts that could be updated:. * http://pkgs.fedoraproject.org/cgit/rpms/psi4.git/tree/psi4.spec#n45 actually need Py >= 2.7, as I'm not holding back from dictionary comprehensions; * http://pkgs.fedoraproject.org/cgit/rpms/psi4.git/tree/psi4.spec#n19 more simply, `psi4/psi4`, though github re-directs; * http://pkgs.fedoraproject.org/cgit/rpms/psi4.git/tree/psi4.spec#n107 It's on by default anyway, so no change, but wrong variable https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L99; * http://pkgs.fedoraproject.org/cgit/rpms/psi4.git/tree/psi4.spec#n109 not sure if this is still working. May need to be `-DLAPACK_LIBRARIES=...`. Is there actually a monitor that you know of for Fedora package downloads? We like to track them for grant reviews.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631#issuecomment-284125806:829,monitor,monitor,829,https://psicode.org,https://github.com/psi4/psi4/issues/631#issuecomment-284125806,2,['monitor'],['monitor']
Energy Efficiency,"Hi @susilehtola, I've been following Libxc v5.1 https://gitlab.com/libxc/libxc/-/issues/186 with interest. When I compiled this branch (after rebase; including your fixes from the spring, thanks!) in late December against the the Libxc 5.0 branch, I got about the same Psi4 test results as recorded above -- lots of `Matrix::power: C_DSYEV failed`. However, when I compile this branch against the new Libxc 5.1 hotfix branch, I don't even get that far. After disabling OpenMP, I get segfaults (dft-psivar):; ```; (gdb) bt; #0 0x00007ffff78351d7 in raise () from /lib64/libc.so.6; #1 0x00007ffff78368c8 in abort () from /lib64/libc.so.6; #2 0x00007ffff782e146 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007ffff782e1f2 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffed70db12 in xc_mix_func (func=func@entry=0x555556ca7500, np=np@entry=255, rho=rho@entry=0x555556e575c0, sigma=sigma@entry=0x555556ccda80, lapl=lapl@entry=0x0, tau=tau@entry=0x0, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, vlapl=0x0, vtau=0x0, v2rho2=0x0, v2rhosigma=0x0, v2rholapl=0x0, v2rhotau=0x0, v2sigma2=0x0, ; v2sigmalapl=0x0, v2sigmatau=0x0, v2lapl2=0x0, v2lapltau=0x0, v2tau2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rho2lapl=0x0, v3rho2tau=0x0, v3rhosigma2=0x0, v3rhosigmalapl=0x0, v3rhosigmatau=0x0, v3rholapl2=0x0, v3rholapltau=0x0, v3rhotau2=0x0, v3sigma3=0x0, v3sigma2lapl=0x0, v3sigma2tau=0x0, v3sigmalapl2=0x0, v3sigmalapltau=0x0, v3sigmatau2=0x0, ; v3lapl3=0x0, v3lapl2tau=0x0, v3lapltau2=0x0, v3tau3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho3lapl=0x0, v4rho3tau=0x0, v4rho2sigma2=0x0, v4rho2sigmalapl=0x0, v4rho2sigmatau=0x0, v4rho2lapl2=0x0, v4rho2lapltau=0x0, v4rho2tau2=0x0, v4rhosigma3=0x0, v4rhosigma2lapl=0x0, v4rhosigma2tau=0x0, v4rhosigmalapl2=0x0, v4rhosigmalapltau=0x0, ; v4rhosigmatau2=0x0, v4rholapl3=0x0, v4rholapl2tau=0x0, v4rholapltau2=0x0, v4rhotau3=0x0, v4sigma4=0x0, v4sigma3lapl=0x0, v4sigma3tau=0x0, v4sigma2lapl2=0x0, v4sigma2lapltau=0x0, v4sigma2tau2=0x0, v4sigmala",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754391084:325,power,power,325,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754391084,1,['power'],['power']
Energy Efficiency,"Hi All, . I see that this issue is still open. I was wondering if there is a current work around? I tried some simple experiments to see if it was still producing the incorrect output:; `> psi4 --version`; `1.7`; input file contents:; ```; mol = psi4.geometry(""""""; H 0.000 0.000 0.000; H 0.000 0.000 0.740; Symmetry c1; """"""); psi4.set_options({'basis': 'sto-3g'}); scf_e, wfn = psi4.energy('SCF', return_wfn=True); print(""MO coefficients""); print(wfn.Ca().to_array()); print(""Fock in the AO basis""); print(wfn.Fa_subset(""AO"").to_array()); print(""Fock in the MO basis""); print(wfn.Fa_subset(""MO"").to_array()); ```; this gives the following output:; ```; MO coefficients ; [[ 0.54884228 1.21245192]; [ 0.54884228 -1.21245192]]; Fock in the AO basis; [[-0.36607883 -0.59428702]; [-0.59428702 -0.36607883]]; Fock in the MO basis; [[-1.59408547e+00 8.04278118e-16]; [ 7.39285035e-16 7.76197397e-02]]; ```; and in the output file; ```; Orbital Energies [Eh]; ---------------------; Doubly Occupied: ; 1A -0.578578 ; Virtual: ; 2A 0.670950 ; @DF-RHF Final Energy: -1.11678331788308; ```; the orbital energies in the output file are correct, which should be the diagonal elements of the Fock matrix in the MO basis, but these are different. . I check the AO and MO coefficients produced by two other QM programs (pyscf is below) to see where the inconsistency might be, they both produced the ""correct"" Fock matrix (i.e. the diagnoal elements in the MO basis are the orbital energies) with the following MO coefficients:; pyscf input; ```; import numpy; from pyscf import gto, scf, lo. geometry = '''; H 0.000 0.000 0.000; H 0.000 0.000 0.740; ''' . mol = gto.M(atom=geometry,; basis='STO-3G') ; mf = scf.RHF(mol); mf.kernel(); print(mf.kernel()); Fao = mf.get_fock(); print(""MO coefficients""); print(mf.mo_coeff); print(""Fock in AO basis""); print(Fao); Fmo = mf.mo_coeff.T @ Fao @ mf.mo_coeff; print(""Fock in MO basis""); print(Fmo); ```; ```; converged SCF energy = -1.11675930739643; -1.1167593073964255; MO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699:383,energy,energy,383,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699,2,['energy'],['energy']
Energy Efficiency,"Hi Daniele. This combination is not supported. I think this functionality request is perhaps better aimed at the QCSchema developers (https://github.com/MolSSI/QCSchema/issues). One main issue is the ambiguity of what an extrapolation (or a composite recipe) actually means. Running CBS jobs via QCSchema is not implemented in Psi4, and my personal opinion is that it likely won't be implemented in Psi4 itself anytime soon. What may happen is that someone will take the CBS functionality out of Psi4, adapt it to create ""schema"" jobs for each calculation required in a similar way we do internally in the CBS wrapper, and then combine the individual atomic results to arrive at the composite result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2198#issuecomment-868806792:502,adapt,adapt,502,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868806792,1,['adapt'],['adapt']
Energy Efficiency,"Hi David,. Previously I was saving MOs just after energy computation, before gradients. Now, I move it to end of the code. Hence, presently I am saving MOs when everything is completely finished.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/127#issuecomment-121961115:50,energy,energy,50,https://psicode.org,https://github.com/psi4/psi4/issues/127#issuecomment-121961115,1,['energy'],['energy']
Energy Efficiency,"Hi Jerome,; It was mostly a difficulty in getting the DFT orbital-Hessian vector code accessible in the right places. I had planned on improving that section so it could do mixed input Wavefunctions (RKS, UHF, ROHF, etc). Probably will not get around to it now. . It's also a neat experiment in mixing of high and low level languages in relation to the readability of code. . -Daniel Smith; Sent from my iPhone. . > On May 10, 2017, at 15:34, jgonthier <notifications@github.com> wrote:; > ; > Very impressive work... I'm happy SAPT(DFT) is done. I don't have time to check the details of the equations but I'm confident you did it right. I didn't see any problems after a quick overview of the SAPT code, at least.; > ; > Is there a specific reason why you chose to rewrite the SAPT JK energy terms (electrostatic, exchange, induction) in Python instead of having a new function call on the C++ side like you did for dispersion ?; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698#issuecomment-300648648:787,energy,energy,787,https://psicode.org,https://github.com/psi4/psi4/pull/698#issuecomment-300648648,1,['energy'],['energy']
Energy Efficiency,"Hi Lori,. In one of the functions, ccsd_WabefT2_cd(), I use CD factors for (ab|cd) integrals while for all the other 4-index integrals DF factors are used. In the second function, ccsd_WabefT2(), I use only DF factors for all 4-index integrals. Further, the explicit form of W_abef tensors are different for each functions. Hence, although both functions looks repeating each other, they are not in fact. At the theoretical point of view, there are significant differences between them. Hence, I prefer to keep them separate. However, it is possible to merge them. But in that case I will need if-else blocks at several places. Of course, I create common functions if I need something repeatedly. However, if I see theoretically significant difference between two functions, then I prefer separate functions. For example, instead of merged CCD and CCSD codes, I prefer to keep them separate, which looks me better organised. Alternatively, it is possible to merge all MP2, MP3, MP2.5, LCCD, and CCD into CCSD code with many if-else blocks or switch-case blocks. For each different method creating different functions appears to me more systematic and better organised. . I agree with you about avoiding repetitive codes for the sake of maintenance and build time. Presently, I am busy with CCSD(T) gradients. When I get some free time I will try to reduce repetitive codes if there are any, except for the similarities between high-order and lower-order methods, such as CCSD and MP3. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/382#issuecomment-220426701:1349,reduce,reduce,1349,https://psicode.org,https://github.com/psi4/psi4/pull/382#issuecomment-220426701,1,['reduce'],['reduce']
Energy Efficiency,"Hi Lori,. Let us start with your first question for the HF molecule. I run your job, and it terminates ""normally"". Since it is a gradient job I do not simply grab integrals from SCF, but I compute both JKFIT and RI basis DF integrals. Hence, it does not matter to start with the conventional integrals the df-mp2 code proceeds. However, the gradient is not correct because the MO coefficients are from conventional SCF, but it should be from DF-SCF. I think in the case df-mp2 gradients, if user set the conventional SCF, then we should throw an error. Alternatively we may change the reference to DF-SCF and throw a warning for user to explain what we did. Both solutions are okay for me. DFOCC uses frozen cores properly in energy and gradients. I did not add the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients. However, OCC does not use frozen cores in the energy and gradients. In case of OCC the problem is that you need to define different MO class with libtrans, which is not obvious how to do it. I know it is possible now. Andy explained it for me. As a result, there is no plan for OCC module. However, frozen virtuals will be added to DFOCC. In fact, I am waiting for RC1 release, then I will implement add it to Psi4. For the final question, your reference gradient is wrong (mp2tot_vals). This is a very good example how 3-point numeric gradients are unreliable for challenging systems. I reproduce problem with your input. However, if I use ""points 5"", all numeric gradient computations give the same result with the analytic gradients. I also run the same job with gausssian 09 with analytic gradients, which gives the same result with our analytic gradient. Here is the G09 result:. ---. Center Atomic Forces (Hartrees/Bohr); Number Number X Y Z. ---. ```; 1 1 0.000000000 0.000000000 -0.002819339; 2 9 0.000000000 0.000000000 0.002819339; ```. ---. and our analytic gradients:. -Total gradient:; Atom X Y Z; ------ ----------------- ----------------- ---------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192875912:726,energy,energy,726,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192875912,4,['energy'],['energy']
Energy Efficiency,"Hi Lori,. Thank you very much for your help. I have updated my tensor class. Further, I have added delte-MP2 corrections to the energy of the method, hence it is saved to PsiVar now. I think, you may add it public repo now. However, when try to make a push I got the following error:. remote: Permission to loriab/psi4.git denied to bozkaya.; fatal: unable to access 'https://github.com/loriab/psi4.git/': The requested URL returned error: 403. As I understand you should allow me to push my changes. Let me know if we need anything else. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1390#issuecomment-446552988:128,energy,energy,128,https://psicode.org,https://github.com/psi4/psi4/pull/1390#issuecomment-446552988,1,['energy'],['energy']
Energy Efficiency,"Hi Luca,. Yes, Sebastian is right, freezing molecular orbitals unfortunately does not allow you to reduce the number of atomic orbital integrals to compute. That's because every atomic orbital integral can contribute to a molecular orbital integral, unless special tricks are used. Such tricks are not really trivial and require some significant work to utilize. David",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/98#issuecomment-122110515:99,reduce,reduce,99,https://psicode.org,https://github.com/psi4/psi4/issues/98#issuecomment-122110515,1,['reduce'],['reduce']
Energy Efficiency,"Hi Rolling,. Thank you very much for the explanation. I have calculated number of perturbed geometries assuming 3-point formulas are used for the Hessian. Therefore the calculated number of 930 appeared to me too large. However, considering the formula used for off-diagonal elements, it is no more a 3-point formula. . For efficient computation of frequencies we need to implement mode=sow for findif of gradients, which would dramatically decrease the cost of frequencies. @loriab @psi-rking",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/145#issuecomment-122027995:324,efficient,efficient,324,https://psicode.org,https://github.com/psi4/psi4/issues/145#issuecomment-122027995,1,['efficient'],['efficient']
Energy Efficiency,"Hi Susi, I made a new PR to fix the underlying SAD issue. However, READ casting between symmetries will need to wait for Psi4 1.2 as its fixed there. Changing the multiplicity/charge is trickier as its not clear the priority order for occupations (read/guess/eigenvalue ordering). Please note that [this](https://github.com/psi4/psi4/issues/483) ticket attempts to address these issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/586#issuecomment-275673604:176,charge,charge,176,https://psicode.org,https://github.com/psi4/psi4/issues/586#issuecomment-275673604,2,['charge'],['charge']
Energy Efficiency,"Hi Susi,. Yes, SCF will always complete at least one iteration. This is mostly due to the fact that `guess read` may pass in junk orbitals and it is not considered a ""real"" iteration, hence `iteration 0`. You can accomplish what you want with the following:. ```; scf_e, scf_wfn = energy('bp86', return_wfn=True); energy('casscf', ref_wfn=scf_wfn); ```. Here, we completely bypass SCF and go directly into the `CASSCF` procedure with the `BP86` orbitals. This will work with any reference, including smaller CAS spaces or a MP2 natural orbital procedure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/556#issuecomment-271011656:281,energy,energy,281,https://psicode.org,https://github.com/psi4/psi4/issues/556#issuecomment-271011656,2,['energy'],['energy']
Energy Efficiency,"Hi Vladimir,. Thank you for your interest for our OO codes. . In fact, I am working on df-ocepa implementation now. This week I will leave the city for a conference and then I will join a workshop camp for our chemistry olympiad students, I am teaching physical chemistry for chemistry olympiad team. All these will take a two-weeks period. Then, I can finish and release it. I guess a few weeks later the code will be ready for public release. Also note that I will prefer the ""orbital-optimized linearized coupled-cluster doubles"" as the name of new code because cepa is mixed up with other cepa variants. Hence, the new code will be called by energy('df-olccd'). You may follow the psi4public for the new release. Alternatively, I can inform you when it has been released if you provide me your e-mail address. Best regards,; Ugur.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/185#issuecomment-152814498:646,energy,energy,646,https://psicode.org,https://github.com/psi4/psi4/issues/185#issuecomment-152814498,1,['energy'],['energy']
Energy Efficiency,"Hi Yi,. Thanks for your work and the comments. I've been discussing some with Jonathon, and I think if you could do the below, that will clarify all the scaling factor and testing aspects of the PR, so we can move on to the I/O optimization and routing logic parts. Please let me know of any concerns. * accept the various GH suggestions clarifying the scaling scheme changes (only if you agree with them, of course). Feel free to make the changes locally, rather than through the GH interface, if that makes the git operations easier.; * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; ```; #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. DHF = -0.01189736 #TEST; Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:961,energy,energy,961,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,2,['energy'],['energy']
Energy Efficiency,"Hi everyone,. I'm on 1.4 and have cherry-picked in the changes from 9163cbd08865d26129cfbaf5c302fc14f870f30f. I'm building from source, as may be relevant to the MKL issues listed in #2283 I'm building with mkl/2019.0.117 (and stuck here for a bit because of my need for MKL_DEBUG_CPU_TYPE to continue to _work_). In addition, I have gcc/9.2.0 and icc/2020.2-108 going in my build env, with the C and CXX and Fortran compilers set to the intel compilers in my cmake config options. I'm running calculations with wB97M-V and was noticing the same issues @jminuse was. After cherry-picking and recompiling the issue persists. Adding `set wcombine false`, as suggested by @andysim makes the issue go away. . Without `set wcombine false`:; ```...; ==> Integral Setup <==; ; DFHelper Memory: AOs need 4.329 GiB; user supplied 4.329 GiB. Using in-core AOs.; ...; ==> Iterations <==; ; Total Energy Delta E RMS |[F,P]|; ; @DF-RKS iter SAD: -306.90903258181044 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -308.38044687527724 -1.47141e+00 1.27547e-03 DIIS; @DF-RKS iter 2: -308.40241691478502 -2.19700e-02 1.31335e-03 DIIS; @DF-RKS iter 3: -308.53663731037796 -1.34220e-01 4.92966e-04 DIIS; @DF-RKS iter 4: -308.55582354785412 -1.91862e-02 1.78690e-04 DIIS; @DF-RKS iter 5: -308.55841981379780 -2.59627e-03 4.24843e-05 DIIS; @DF-RKS iter 6: -308.55870799442886 -2.88181e-04 2.96248e-05 DIIS; @DF-RKS iter 7: -308.55881660865606 -1.08614e-04 1.50957e-05 DIIS; @DF-RKS iter 8: -308.55887443471090 -5.78261e-05 8.58740e-06 DIIS; @DF-RKS iter 9: -308.55891429039167 -3.98557e-05 5.23007e-06 DIIS ; @DF-RKS iter 10: -308.55893438187678 -2.00915e-05 3.97102e-06 DIIS ; @DF-RKS iter 11: -308.55897076821287 -3.63863e-05 3.09810e-06 DIIS ; @DF-RKS iter 12: -308.55899251437626 -2.17462e-05 1.29222e-06 DIIS ; @DF-RKS iter 13: -308.55899611302931 -3.59865e-06 5.63064e-07 DIIS ; @DF-RKS iter 14: -308.55899645885273 -3.45823e-07 2.29741e-07 DIIS ; Energy and wave function converged.; ```. And with `set wcombine false`:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182:885,Energy,Energy,885,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182,1,['Energy'],['Energy']
Energy Efficiency,"Hi there, thanks a lot for including me on this. :) . Transition state optimization is implemented, but we have not tested it extensively against other codes. It does work quite well for in-house applications containing 50+ atoms. I'm very interested to see how you run these optimizations directly in Psi4. It should be a lot more efficient than calling Psi4 repeatedly on the command line. Also happy to provide examples of constrained optimization. Let me know if you need any.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1813#issuecomment-615052462:332,efficient,efficient,332,https://psicode.org,https://github.com/psi4/psi4/pull/1813#issuecomment-615052462,1,['efficient'],['efficient']
Energy Efficiency,"Hi, I'm new with Psi4 so my problem could be a little naive, I'm dealing with a similar issue than @autolife , when I try to run the energy calculation of a silver containing molecule, I get stuck with basis set error (STO-3G). In the following lines I have pasted a simplified input.in and the error message. . Thanks in advance ; Matias . ---. molecule {; 1 1; Ag 0.37900000 -2.54600000 8.09100000; }. set basis sto-3g; energy('df-mp2'); set molden_write true. ## property('df-mp2', properties=['MULLIKEN_CHARGES']). qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT among:; Shell Entries: ['AG']; Basis Sets: ['cc-pvdz-ri', 'def2-qzvpp-jkfit']; File Path: , /home/matias/anaconda/share/psi/basis; Input Blocks:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/105#issuecomment-144729559:133,energy,energy,133,https://psicode.org,https://github.com/psi4/psi4/issues/105#issuecomment-144729559,4,['energy'],['energy']
Energy Efficiency,"Hi, Lori. I've written and re-written a response to this out of concern for the definition of the correlation energy, but ultimately I've decided that the existing standard is reasonable (if not perfect, but I guess nothing is in this case). I also agree with your tightening of convergence criteria and the improvement of the docs, which look correct to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708#issuecomment-1232380915:110,energy,energy,110,https://psicode.org,https://github.com/psi4/psi4/pull/2708#issuecomment-1232380915,1,['energy'],['energy']
Energy Efficiency,"Hi, thanks for the quick answer. Could be: as I was starting MOM within very few iterations, the impact of the guess may have been decisive. However, changing the guess (specifically from sad to read, taking the orbitals from the previous RHF calculation) did not work. What apparently fixes the issue, independently of the guess, was increasing the number of SCF iterations before activating MOM. So I don't really know what is it. . Also note that, while my inputs may seem very strange (and, quite possibly, messy), the HF/UHF case is the most simple one. Converging these states with large basis sets in DFT is a true pain, and often requires a lot of toying around). As an additional note, the energy that the program was giving with that output is exactly 9.3609016111309238, the nuclear repulsion energy. So, for whatever reason, the electronic energy is 0 in that state.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692#issuecomment-518487956:699,energy,energy,699,https://psicode.org,https://github.com/psi4/psi4/issues/1692#issuecomment-518487956,6,['energy'],['energy']
Energy Efficiency,"Hi,. I suspect that this problem is related to the definition of your basis set. The `basis` block in your input file is part of psi4's special syntax to define [custom, mixed basis sets](https://psicode.org/psi4manual/1.5.0/basissets.html#mixing-basis-sets):; ```; basis {; assign def2-SVP; }; ```. I can run your inputs successfully if I swap out that `basis` block for the standard basis syntax:; ```; set {; basis def2-SVP; }; ```. Here's the SCF output from the second input, which starts the SCF from the serialized orbitals:; ```; ==> Iterations <== . Total Energy Delta E RMS |[F,P]|. @DF-RKS iter 0: -270.15381570481316 -2.70154e+02 1.44676e-07 ; @DF-RKS iter 1: -270.15381570483822 -2.50679e-11 1.66794e-07 DIIS; Energy and wave function converged.; ```. This fix should be sufficient if all of your calculations require standard, pre-defined basis sets. If you do need to use custom, mixed basis sets, we'll need to investigate this error further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2571#issuecomment-1120477445:565,Energy,Energy,565,https://psicode.org,https://github.com/psi4/psi4/issues/2571#issuecomment-1120477445,2,['Energy'],['Energy']
Energy Efficiency,"Hi,; Sorry about the accidental break of features. I can fix this next week but for now trajectory information can be accessed like this. `E, history = psi4.optimize('hf/6-31G', molecule=h2o_suboptimal, return_history=True)`. This is what history looks like; ```; history = {; 'energy': [step.E for step in opt_object.history.steps],; 'gradient': [step.cart_grad for step in opt_object.history.steps],; 'coordinates': [step.geom for step in opt_object.history.steps],; }; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3074#issuecomment-1806363687:278,energy,energy,278,https://psicode.org,https://github.com/psi4/psi4/issues/3074#issuecomment-1806363687,1,['energy'],['energy']
Energy Efficiency,"Hm, this is a bit odd. The failing function (`free_atom_volumes(wfn)`) really shouldn't be called since you're only requesting the charges. I've created a PR to fix this, in addition to fixing the larger issue with computing MBIS volume ratios via scf_properties. Interestingly, this code fails in your case since you pass a wavefunction to oeprop that doesn't have 'CURRENT ENERGY' as a set variable. My PR doesn't address that, though I could help out if you also want to compute the volume ratios.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299#issuecomment-984168833:131,charge,charges,131,https://psicode.org,https://github.com/psi4/psi4/issues/2299#issuecomment-984168833,2,"['ENERGY', 'charge']","['ENERGY', 'charges']"
Energy Efficiency,"Hmm, I can reproduce this using just `energy(""mp2/cc-pvtz"", bsse_type=""cp"")`. However, I don't think the issue here is the same as for SAPT (where the number of frozen core orbitals for a dimer was not the sum of the frozen core orbitals for monomers): here we freeze 7 orbitals on NaCN (2+2+10 el), 2 orbitals on F2 (2+2 el), and 9 on the dimer. . The problem is of course freezing those 10 electrons on Na. Currently the only way around that is to use `freeze_core -2`, which only freezes 1 orbital in NaCN and 1 orbital in the dimer, or do the calculations separately (with `NUM_FROZEN_DOCC 3` for NaCN and `5` for the dimer), as we have no way of specifying per-monomer numbers of frozen orbitals, yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2012#issuecomment-960513679:38,energy,energy,38,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-960513679,1,['energy'],['energy']
Energy Efficiency,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/937#issuecomment-376531582:224,energy,energy,224,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582,4,['energy'],['energy']
Energy Efficiency,"Hmm, looks like I missed this option. Ill create a patch for it. For now you can do the following:. ``` python; e, wfn = energy('detci', return_wfn=True); wfn.get_opdm(-1, -1, ""SUM"", False).print_out(); wfn.get_tpdm(""SUM"", False).print_out(); ```. OPDM signature is as follows:. ```; /**!; * Obtains the OPDM <Iroot| Epq |Jroot> from the ciwave object. If Jroot is; * negative then Iroot == Jroot, if both roots are -1 then the ""special"" CI; * OPDM is returned.; * @param Iroot Left root; * @param Jroot Right root; * @param spin Selects which spin to return: A, B, or SUM; * @param full_space If false return only the active OPDM else return full OPDM; * @return OPDM or TDM shared matrix; **/; SharedMatrix get_opdm(int Iroot=-1, int Jroot=-1, const std::string& spin=""SUM"",; bool full_space=false);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/477#issuecomment-251968634:121,energy,energy,121,https://psicode.org,https://github.com/psi4/psi4/issues/477#issuecomment-251968634,1,['energy'],['energy']
Energy Efficiency,"Hmm, might want to just print the alias when you call energy to see what is printed out. For the other two functionals we popped them out of the functional list as we do not have dispersion terms from them I think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-370256118:54,energy,energy,54,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370256118,1,['energy'],['energy']
Energy Efficiency,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379446318:79,energy,energy,79,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318,3,['energy'],"['energy', 'energy-mod']"
Energy Efficiency,"Hmm, well thats interesting. Would you mind running the boroxine test case with the DF-MP2 module and post the result? Best way to access this module is to simply request 'energy('MP2')`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/408#issuecomment-225929051:172,energy,energy,172,https://psicode.org,https://github.com/psi4/psi4/issues/408#issuecomment-225929051,2,['energy'],['energy']
Energy Efficiency,"Hmmm. The fnocc2 can be explained by the following diff.... ```; -energy('g2'); -refg2 = -76.332048016380 #TEST; -refgibbs = -76.349644827450 #TEST; +energy('g2',dertype=1); +refg2 = -76.332048079709 #TEST; +refgibbs = -76.349644891507 #TEST; ```. that was part of my last set of commits. I updated the reference values to reflect that I'd switched to analytic Hessians. Then when I committed it, I realized that analytic Hessians require angular momentum beyond what Travis can handle, so I switched back to finite differences but forgot to roll back the reference values. Feel free to revert the reference values, and that'll be fine. The other two problems appear to be a seg fault, so I'll try to check out your changes and see if I can reproduce. Sorry for the hassle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235102762:66,energy,energy,66,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235102762,2,['energy'],['energy']
Energy Efficiency,"How about something like this:. - Perform SCF; - Check instability; - If unstable, rotate in the direction of the most unstable vector, according to some user-specified magnitude then...; - Compute the deviation of the new SCF energy from the 2nd order Taylor prediction, as well as the new SCF gradient; - If the 2nd order Taylor prediction was accurate enough (within some user-specified tolerance), and the magnitude of the gradient is within a comfortable range (another pair of parameters sadly...), then start SOSCF which should hopefully start going downhill.; - If the gradient is too low, increase the rotation magnitude, if too large decrease it. Recompute the new SCF energy and gradient, repeat the checks above.; - If the 2nd order Taylor prediction was inaccurate, decrease rotation magnitude. Recompute the new SCF energy and gradient, repeat the checks above.; - If the 2nd order Taylor prediction was inaccurate, **and** the gradient is too low, accept the orbital rotation, recompute the orbital Hessian at the new location (which is no longer exactly a saddle point), and repeat the entire follow process, until we find a point we can start SOSCF from. This could of course get quite expensive if a lot of Hessian recomputes are required, and relies on SOSCF not climbing back up to the saddle point, but to me it sounds easier to implement. With that said, I cannot help but feel like we are trying to reinvent a wheel. Surely, one would think that other people have already spent a lot of time thinking about the best ways to climb down from saddle points.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045#issuecomment-1706817277:227,energy,energy,227,https://psicode.org,https://github.com/psi4/psi4/issues/3045#issuecomment-1706817277,3,['energy'],['energy']
Energy Efficiency,"How are you able to tell that it does not converge? I ran the input you posted and It was able to converge fine. . You should see a section like this in the output file showing the EOM code working away at the root. ; ```; Symmetry of ground state: Ag; Symmetry of excited state: Ag; Symmetry of right eigenvector: Ag; Seeking states with multiplicity of 1; Obtaining initial guess from singles-singles block of Hbar...Done. Iter=1 L=1 Root EOM Energy Delta E Res. Norm Conv?; 1 0.4128588902 4.13e-01 3.16e-01 N; Iter=2 L=2 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3340136980 -7.88e-02 5.54e-02 N; Iter=3 L=3 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3311169492 -2.90e-03 2.75e-02 N; Iter=4 L=4 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3303034550 -8.13e-04 1.53e-02 N; Iter=5 L=5 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299847862 -3.19e-04 9.33e-03 N; Iter=6 L=6 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299158588 -6.89e-05 4.43e-03 N; Iter=7 L=7 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299119405 -3.92e-06 1.74e-03 N; Iter=8 L=8 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299103467 -1.59e-06 6.71e-04 N; Iter=9 L=9 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299072934 -3.05e-06 3.17e-04 N; Iter=10 L=10 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299064524 -8.41e-07 1.45e-04 N; Iter=11 L=11 Root EOM Energy Delta E Res. Norm Conv?; 1 0.3299063854 -6.69e-08 9.39e-05 Y; Collapsing to only 1 vector(s). Procedure converged for 1 root(s).; Energy written to CC_INFO:Etot -231.2454217333; States per irrep written to CC_INFO.; EOM CCSD R0 for root 0 = -0.03232771150. Final Energetic Summary for Converged Roots of Irrep Ag; Excitation Energy Total Energy; (eV) (cm^-1) (au) (au); EOM State 1 8.977 72406.1 0.3299063854 -231.245421733323; ```. Summary at the end of the file also shows:; ```; 	 Excitation Energy OS RS RS Einstein A; 	State (eV) (cm^-1) (nm) (au) (l,au) (v,au) (s^-1); 	 1 Ag 8.977 72406.1 138.1 0.329906 0.0000 0.0000 0.0000 0.000000E+00; ```. If yo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/603#issuecomment-278675637:445,Energy,Energy,445,https://psicode.org,https://github.com/psi4/psi4/issues/603#issuecomment-278675637,7,['Energy'],['Energy']
Energy Efficiency,"How much leeway do I have to break the old sow/reap code? It would simplify things for me if I could abstract the contents of the loop where we compute the energy derivative at the displacement into its own function. Writing that becomes simpler if I can just remove or comment out the now-useless sow/reap code. With this function, it becomes simple to loop over every displacement in our displacement dictionary and only then compute for the reference geometry, which will be in a separate part of the metadata, per Andy's suggestion today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1148#issuecomment-426850441:156,energy,energy,156,https://psicode.org,https://github.com/psi4/psi4/issues/1148#issuecomment-426850441,2,['energy'],['energy']
Energy Efficiency,How much work would be involved in switching from use of long-range exchange to short-range exchange which can be screened more efficiently?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1499#issuecomment-497381460:128,efficient,efficiently,128,https://psicode.org,https://github.com/psi4/psi4/pull/1499#issuecomment-497381460,1,['efficient'],['efficiently']
Energy Efficiency,"However, now my test run crashes with the message below. Is it trying to write a file in a directory where I don't have permissions or so?. Traceback (most recent call last):; File ""/home/apps/psi/psi4conda/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 860, in select_ccsd_t_; return func(name, **kwargs); File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2197, in run_ccenergy; core.cctransort(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::rw(unsigned int, char*, psi::psio_address, unsigned long, int); psi::psio_write(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1557#issuecomment-467172255:392,energy,energy,392,https://psicode.org,https://github.com/psi4/psi4/issues/1557#issuecomment-467172255,2,['energy'],['energy']
Energy Efficiency,"Huh, never mind the jobname bit then. I was changing various things so I must have been mistaken on that point. Ah, in tutorial.rst, there's a sentence below. That `sec:install_III_7` link is to a long-deceased file. Please replace that link with one to the ""7."" on the wiki page or anywhere else you think best covers the subject. ```; ""For your convenience, the above example can be found in :srcsample:`tu1-h2o-energy`. You can run it if you wish. Once |PSIfour| is in your path (see the :ref:`User Configuration <sec:install_III_7>` section""; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/361#issuecomment-212422557:414,energy,energy,414,https://psicode.org,https://github.com/psi4/psi4/pull/361#issuecomment-212422557,1,['energy'],['energy']
Energy Efficiency,"I *think* this'll do it, but my memory can be very bad.. ```; scf_e, scf_wfn = energy('bp86', guess_wfn=scf_wfn, return_wfn=True); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/612#issuecomment-278548121:79,energy,energy,79,https://psicode.org,https://github.com/psi4/psi4/issues/612#issuecomment-278548121,1,['energy'],['energy']
Energy Efficiency,"I _suspect_ I've found the bug. The culprits are lines like [these](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/t2_2nd_general.cc#L197-L203). I'm going to give a simplified presentation of the theory to explain why this particular bug caused T2 convergence problems but no other obvious problems:; In OMP3 theory, you write a Lagrangian energy functional, which is the OMP2 Lagrangian energy functional plus additional terms. In OMP2.5, you multiply those new terms by a factor of 1/2. The terms enforcing the first order amplitude constraint are all in the OMP2 part of the Lagrangian, and the terms enforcing the second order amplitude constraint are all in the additional terms of the Lagrangian. Now, the OMP2.5 in `occ` is the OMP3 implementation _except_; (1) additional terms not containing second order amplitudes are explicitly halved, and; (2) additional terms containing second order amplitudes are implicitly halved by halving the second order T2 amplitudes. Let's imagine we got the exactly right second order T2 amplitudes. We then halve them, per step 2 above. On the next iteration, of course we're going to find our second order amplitudes are off!. I've made the changes on a local branch. OMP3 tests all pass, but `omp2p5-grad2` has changed in the fifth decimal place, which is enough to cause a failure. This could indicate a problem with my changes, or that there was error in the test gradients because the second order amplitudes were not well converged. While a finite difference test should resolve this, I can't converge the relevant OMP equations in the current Psi implementation sufficiently tightly to test... I'm going to hack out a Psi4Numpy implementation to settle the matter. In the meantime, obligatory ping of @bozkaya in case I've missed something.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1808#issuecomment-583900866:352,energy,energy,352,https://psicode.org,https://github.com/psi4/psi4/issues/1808#issuecomment-583900866,4,['energy'],['energy']
Energy Efficiency,"I agree that option B is the best. The effect of the fix will be very minor. This can be easily tested by comparing to DCT code with conventional integrals (and we have done this in the past). Also, current version of the code should recover the exact DCT energy and gradient when using a very large auxiliary basis set.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1579#issuecomment-474901373:256,energy,energy,256,https://psicode.org,https://github.com/psi4/psi4/issues/1579#issuecomment-474901373,1,['energy'],['energy']
Energy Efficiency,"I agree that with no charges the function that I changed should not be called. I am running the benchmark on a shared cluster, so the differences in the speedup with no charges reflect the uncertainty in the benchmark. Although the pairs of columns with and without charges are run on the same node in the same job. I ran the benchmark again using `schedule(dynamic)` to directly compare to `schedule(guided)` copied from my last comment. Cores | Guided, no charges | Guided, with charges | Dynamic, no charges | Dynamic, with charges; ---- | ---- | ---- | ---- | ----; 1 | 1.00 | 1.00 | 1.00 | 1.00; 2 | 1.67 | 1.29 | 1.60 | 1.26; 4 | 2.72 | 2.18 | 2.66 | 2.07; 8 | 3.92 | 3.57 | 3.74 | 3.40; 16 | 4.87 | 5.04 | 4.68 | 5.06; 32 | 5.80 | 7.21 | 5.11 | 7.16. It looks like `dynamic` is slightly lower speedup than `guided`, but the two results are probably indistinguishable given the precision of my benchmark. This might also depend on the system and basis set used. The heaviest atom in my system is an oxygen with a jun-cc-pVDZ basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1946#issuecomment-656907868:21,charge,charges,21,https://psicode.org,https://github.com/psi4/psi4/pull/1946#issuecomment-656907868,18,"['charge', 'schedul']","['charges', 'schedule']"
Energy Efficiency,"I agree with @andysim --- Rollin's bug was only uncovered with debug flags; turned on, so it makes sense to retain at least one debug build. On Thu, Feb 11, 2016 at 8:56 AM, Andy Simmonett notifications@github.com; wrote:. > Thanks, @jgonthier https://github.com/jgonthier. Given that the Travis; > CI tests run every time somebody submits or merges a PR, we're going to be; > running that test a lot. If we don't see the problem again, it was probably; > just a strange artifact of the invalid read that was non-deterministic. If; > we keep seeing it after you have fixed that read, we probably just need to; > reduce the optimization level for that one routine. Either way, thanks for; > checking it.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/pull/237#issuecomment-182875337.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182877975:612,reduce,reduce,612,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182877975,1,['reduce'],['reduce']
Energy Efficiency,"I agree with Holger about Psithon vs PsiAPI: work primarily in PsiAPI, but translate an input file to Psithon to show you _can_. Lori's topic list is a good one. Explicitly mention how to get orbitals and how to get variables (like the correlation energy) off the wavefunction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2339#issuecomment-957650298:248,energy,energy,248,https://psicode.org,https://github.com/psi4/psi4/issues/2339#issuecomment-957650298,1,['energy'],['energy']
Energy Efficiency,"I agree with all of the above, especially a sanity check on the number of points provided and the use of the minimum as a guess. One very minor correction: the ""bottom of the well"" dissociation energy `De` is the difference between the minimized energy and the dissociated products. The zero-point corrected value (which is what's really measured in experiments, because the molecule cannot reach the bottom of the well), is `D0` and comes from subtracting the `ZPVE(nu)` value reported in the dictionary from `De`. For the record, that ZPVE is `0.5 we - 0.25 wexe`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483629512:194,energy,energy,194,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483629512,2,['energy'],['energy']
Energy Efficiency,"I agree with others that scheme 1 is preferable (fewer brackets than scheme; 2), and that ""module"" is clearer than ""local"". Also agree we need to plan ahead to simplifying options handling in general. On Thu, Nov 10, 2016 at 9:07 PM, Daniel Smith notifications@github.com; wrote:. > I was thinking a head a bit where we would be able to kill off globals or; > at least provide a way to reduce them. I was hopeful that this scheme would; > be able to fill that roll as well to prevent duplication.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/511#issuecomment-259862684, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9Qdho874ynQJnwqQU-HSnHhpY_hwN5ks5q883MgaJpZM4Ku0ap; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/511#issuecomment-259863279:386,reduce,reduce,386,https://psicode.org,https://github.com/psi4/psi4/pull/511#issuecomment-259863279,2,['reduce'],['reduce']
Energy Efficiency,"I agree with the point that the code should go through and report zeros, so; we can do database stuff, etc. I think the thermo code can easily be fixed for this (in fact Brandon has a; new version that has already been tested for atoms). Looks like the first; failure we're hitting is in finite differences. @psi-rking should give; that some thought. David. On Thu, Mar 31, 2016 at 11:31 PM, drhaney notifications@github.com wrote:. > Mac's Beer & Wine confirms that they will happily reserve gift cards for; > you at the register, and you developers need to do better if you want that; > beer.; > ; > Usually, a QC app 'fails' gracefully on atomic systems.; > By 'fail', I mean that it should: _handle stupid requests gracefully._; > ; > In practice, the app returns ZPE, Ethermal, Hthermal = 0.0,0.0,0.0, and a; > reasonable total entropy 30 < S <40 cal/mol-K. Granted, Stotal = Strans and; > may be of little value. The user adds in some Boltzmann kT multiples to; > internal E,H as needed.; > ; > Total energies and enthalpies of atoms are needed for calculating; > molecular enthalpies of formation by the atomization method. I want this; > because I'm writing composite method modules for Psi4 with the goal of; > replicating Gaussian and GAMESS results.; > ; > It may be invidious to point out that Gaussian, GAMESS, and Nwchem are all; > well-behaved on the atomic cases, but those applications are why I'm here.; > [rant on egregious software licenses and general dislike of Fortran; > redacted]; > ; > Next up: CCSD(T) and the H2 molecule, MP2 correlation energy of the; > hydrogen atom. (joke!); > Thanks to all.; > -drh; > ; > —; > You are receiving this because you commented.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332#issuecomment-204230882",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204388708:1566,energy,energy,1566,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204388708,1,['energy'],['energy']
Energy Efficiency,"I agree, may as well test. Here's a slight extension of your original problem input. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. def unaug_focal(func, label, **kwargs):; kwargs['scf_basis'] = kwargs.get('scf_basis', 'cc-pVQZ'); kwargs['scf_scheme'] = kwargs.get('scf_scheme', driver_cbs.xtpl_highest_1). kwargs['corl_wfn'] = kwargs.get('corl_wfn', 'mp2'); kwargs['corl_basis'] = kwargs.get('corl_basis', 'cc-pV[TQ]Z'); kwargs['corl_scheme'] = kwargs.get('corl_scheme', driver_cbs.corl_xtpl_helgaker_2). kwargs['delta_wfn'] = kwargs.get('delta_wfn', 'ccsd(t)'); kwargs['delta_wfn_lesser'] = kwargs.get('delta_wfn_lesser', 'mp2'); kwargs['delta_basis'] = kwargs.get('delta_basis', 'cc-pV[dT]Z'); kwargs['delta_scheme'] = kwargs.get('delta_scheme', driver_cbs.corl_xtpl_helgaker_2). if label == 'custom_function':; label = 'Unaug Focal'; return driver_cbs.cbs(func, label, **kwargs). ans = 0.0131014 #TEST; E_func = energy(unaug_focal, bsse_type=""nocp""); E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(ans, E_method_basis, 6, ""IE mtd/bas"") #TEST; compare_values(ans, E_cbs, 6, ""IE cbs"") #TEST; compare_values(ans, E_func, 6, ""IE func"") #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1119#issuecomment-410490928:1007,energy,energy,1007,https://psicode.org,https://github.com/psi4/psi4/pull/1119#issuecomment-410490928,3,['energy'],['energy']
Energy Efficiency,"I agree. Largely reorg and infrastructure. https://github.com/PCMSolver/pcmsolver/blob/v1.2.0/CHANGELOG.md. Can Psi4 hit the Green's function changes, @robertodr?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/988#issuecomment-385086354:125,Green,Green,125,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385086354,1,['Green'],['Green']
Energy Efficiency,"I also like scheme 1, and `module_options` over `local_options` is a great idea. . > As a note we are looking into ways to override global options. For example, the following could be a scheme that would accomplish this. Don't module level options already override global options? In a standard input file doing this:. ``` python; # molecule stuff; set ccenergy print 1; set globals print 3; energy('ccsd'); ```. Would have print=2 for the scf and print=1 for ccsd. Is that not the case when you do it with python? Like:. ``` python; # molecule stuff; psi4.core.set_local_option(""ccenergy"", ""print"", 1); psi4.core.set_global_option(""print"",3); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/511#issuecomment-259776780:392,energy,energy,392,https://psicode.org,https://github.com/psi4/psi4/pull/511#issuecomment-259776780,1,['energy'],['energy']
Energy Efficiency,I also noticed like an hour ago that running energy('cisd') triggers for some reason a frozen natural orbital calculation. I don't think this should be happening..?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339397438:45,energy,energy,45,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339397438,1,['energy'],['energy']
Energy Efficiency,I also ran a full test suite; nothing DFT related fails; ```; 	102 - cubeprop (Failed); 	103 - cubeprop-frontier (Failed); 	368 - cubeprop-esp (Failed); 	385 - psi4numpy-cphf (Failed); 	386 - psi4numpy-dfmp2 (Failed); 	387 - psi4numpy-rhf (Failed); 	388 - psi4numpy-rhf-gradient (Failed); 	389 - psi4numpy-rhf-hessian (Failed); 	390 - psi4numpy-fci (Failed); 	392 - python-energy (Failed); 	393 - python-curve (Failed); 	394 - python-pubchem (Failed); 	395 - python-mints9 (Failed); 	396 - python-mints2 (Failed); 	397 - python-cc54 (Failed); 	398 - python-3-index-transforms (Failed); 	399 - python-vibanalysis (Failed); 	400 - python-mints13 (Failed); 	401 - python-memdfjk (Failed); 	402 - json-v11-energy (Failed); 	403 - json-v11-gradient (Failed); 	404 - json-schema-1-energy (Failed); 	405 - json-schema-1-ghost (Failed); 	406 - json-schema-1-orient (Failed); 	407 - json-schema-1-throws (Failed); 	408 - json-schema-1-gradient (Failed); 	409 - json-schema-1-properties (Failed); 	469 - chemps2-scf-n2 (Failed); 	470 - chemps2-ci-h2o (Failed); 	471 - chemps2-caspt2-n2 (Failed); 	472 - chemps2-natural-orbital (Failed); 	473 - chemps2-caspt2-small (Failed); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1260#issuecomment-424435249:373,energy,energy,373,https://psicode.org,https://github.com/psi4/psi4/pull/1260#issuecomment-424435249,3,['energy'],['energy']
Energy Efficiency,"I am a bit struggling with the `component` keyword, if it is not 'dft'. Does the following work as I think it does?; ```; # only extrapolate PT2 part?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""dh""}]). # only ""extrapolate"" D3 part? It is doing a 2-step then or taking the highest energy?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""disp""}]). # Excluding PT2 part from the extrapolation?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""fctl""}]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345:152,energy,energy,152,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345,4,['energy'],['energy']
Energy Efficiency,"I am looking to update the failing dft test where absolute energies are tested. Looking for opinions and advice:. options:; * A) reduce the comparison thresholds, where necessary. Down to 5 or 6 (from 7 or even higher); * B) make new reference values using the new BS radii. Perhaps cleanest test history about the origin of the numbers and best for gradients; * C) a mixture of both. these `ctest -L dft` fail on my machine:; 157 - dft-grad-lr1 (Failed); 159 - dft-grad-lr3 (Failed); 167 - dft-grad-meta (Failed); 169 - dft-grad1 (Failed); 170 - dft-grad2 (Failed); 171 - dft-psivar (Failed); 173 - dft1 (Failed); 174 - dft-vv10 (Failed); 178 - dft-omega (Failed); 390 - dft-custom-mgga (Failed); 423 - dftd3-grad (Failed); 431 - pcmsolver-dft (Failed)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494012739:129,reduce,reduce,129,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494012739,1,['reduce'],['reduce']
Energy Efficiency,"I am only doing DFT for now Susi, thanks for the tip about those basis sets. . I've determined that the bug was definitely introduced in the libint2 PR (#1721). Prior to that PR, `INTS_TOLERANCE` worked as expected: a value of 1e-12 led to a minor speed up and a negligible change in the energy. I further narrowed the problem down to the `engine_precision` parameter passed to the libint2 engine:. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/eri.cc#L182. If I instead set `engine_precision` to `max_precision`, the SCF calculation proceeds normally. This suggests that the current value of `engine_precision` is too loose. Does anyone know more about what this parameter is, and where the current formula comes from? I assume the `-4` is for the four indexes of an ERI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2114#issuecomment-782463778:288,energy,energy,288,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-782463778,1,['energy'],['energy']
Energy Efficiency,"I am reviewing a paper related to some calculations on transition metal complexes, and I noticed a pretty significant difference in the convergence for these systems. With the fix, I get decent convergence; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1560.62324919175876 -1.56062e+03 0.00000e+00 ; @DF-UKS iter 1: -1504.03705732702224 5.65862e+01 3.11225e-02 ADIIS/DIIS; @DF-UKS iter 2: -1487.30385546810771 1.67332e+01 4.19089e-02 ADIIS/DIIS; @DF-UKS iter 3: -1595.07318567437824 -1.07769e+02 1.91720e-02 ADIIS/DIIS; @DF-UKS iter 4: -1564.30445668282618 3.07687e+01 3.31275e-02 ADIIS/DIIS; @DF-UKS iter 5: -1603.11290614082509 -3.88084e+01 1.87126e-02 ADIIS/DIIS; @DF-UKS iter 6: -1602.92895467184917 1.83951e-01 1.71826e-02 ADIIS/DIIS; @DF-UKS iter 7: -1614.51158717592830 -1.15826e+01 1.03141e-02 ADIIS/DIIS; @DF-UKS iter 8: -1616.83699931720344 -2.32541e+00 6.19589e-03 ADIIS/DIIS; @DF-UKS iter 9: -1616.50013867709094 3.36861e-01 6.18683e-03 ADIIS/DIIS; @DF-UKS iter 10: -1617.89286983906686 -1.39273e+00 3.54362e-03 ADIIS/DIIS; @DF-UKS iter 11: -1618.25105941096376 -3.58190e-01 1.44948e-03 ADIIS/DIIS; @DF-UKS iter 12: -1618.30666617824772 -5.56068e-02 8.16936e-04 ADIIS/DIIS; @DF-UKS iter 13: -1618.32906595120630 -2.23998e-02 3.05210e-04 ADIIS/DIIS; @DF-UKS iter 14: -1618.33209488701596 -3.02894e-03 1.11579e-04 ADIIS/DIIS; @DF-UKS iter 15: -1618.33246925032131 -3.74363e-04 5.16022e-05 DIIS; @DF-UKS iter 16: -1618.33255204306215 -8.27927e-05 2.40611e-05 DIIS; @DF-UKS iter 17: -1618.33257421168014 -2.21686e-05 6.92474e-06 DIIS; @DF-UKS iter 18: -1618.33257596491853 -1.75324e-06 3.51398e-06 DIIS; @DF-UKS iter 19: -1618.33257648667177 -5.21753e-07 1.67910e-06 DIIS; @DF-UKS iter 20: -1618.33257663986774 -1.53196e-07 9.10475e-07 DIIS; Energy and wave function converged.; ```; while the original code is just not getting anywhere; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -1617.72517858542346 -1.61773e+03 0.00000e+00 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473:238,Energy,Energy,238,https://psicode.org,https://github.com/psi4/psi4/issues/3137#issuecomment-1968754473,1,['Energy'],['Energy']
Energy Efficiency,"I appreciate the `E` vs. `ENERGY` reasoning, but I think I still favor the latter. Text in the output file shows that it was written by a dozen coders, while the psivars have some unifying properties, including spelling out energy. We can just patch it later, if you'd rather not bother.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253958928:26,ENERGY,ENERGY,26,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253958928,2,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"I believe this PR fixes the bug in #976 correctly, without adverse side effects (famous last words). Does the overall charge (from the charge/multiplicity entries) affect `Z` values of the component atoms? What happens when one would - perhaps foolishly - try to do a ""frozen core"" `Li^2+` calculation?. However, I am wondering whether our approach to core freezing is perhaps a bit simplistic: a point was raised on the forums that one might want to be able to automatically detect when the valence shell is empty (eg. alkali metal cations), and then perhaps unfreeze the previous shell. Similarly, some other QM packages allow freezing up to `N-th` previous rare gas shell (the current behaviour is `N=1`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/978#issuecomment-385869940:118,charge,charge,118,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385869940,4,['charge'],['charge']
Energy Efficiency,I bet this is a problem with all minimal basis sets like STO-3G and STO-6G. Maybe something has changed in the SCF loop and the final energy is not stored if the density did not change in the first SCF iteration?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2760#issuecomment-1295073395:134,energy,energy,134,https://psicode.org,https://github.com/psi4/psi4/issues/2760#issuecomment-1295073395,1,['energy'],['energy']
Energy Efficiency,I can believe it. Good idea. I think one can just check the procedures dictionary. ```; >>> 'b3lyp-d3bj' in psi4.driver.procedures['energy']; True; >>> 'asdf-d3bj' in psi4.driver.procedures['energy']; False; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/996#issuecomment-385788395:132,energy,energy,132,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385788395,2,['energy'],['energy']
Energy Efficiency,"I can confirm this issue. The code seg faults only when calling gradient(df-mp2). If I run energy(dfmp2), it seems to work fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/119#issuecomment-130327172:91,energy,energy,91,https://psicode.org,https://github.com/psi4/psi4/issues/119#issuecomment-130327172,1,['energy'],['energy']
Energy Efficiency,"I can only strongly recommend to use a build system. I'm involved with [Easybuild](https://hpcugent.github.io/easybuild/) which has support for psi4. Building psi4 with the GCC 5 is reduced to a one line command: it will build everything, starting from binutils and gcc. It only requires a non-ancient version of gcc to be present (I think, no lower than 3.0 or so).; With the help of modules, you can easily support multiple versions of compilers (and software) Our HPC systems currently has 5 version of GCC available (4.6-5.1) and 11 versions of intel compiler (11-2015.1).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105170511:182,reduce,reduced,182,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105170511,1,['reduce'],['reduced']
Energy Efficiency,"I can reproduce this on master.; ```; ==> X2C Options <==. Computational Basis: CC-PVDZ-DECON; X2C Basis: CC-PVDZ-DECON; The X2C Hamiltonian will be computed in the X2C Basis. The 1-norm of |H_X2C - H_Dirac| is: 1040988.405696207308. WARNING: The X2C and Dirac Hamiltonians have substatially different eigenvalues!; This is probably caused by the recontraction of the basis set.; ```; The energy is indeed plain wrong:; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 1: 483.09851658637217 4.83099e+02 6.47211e-01 DIIS; @DF-RHF iter 2: 48.89367873325060 -4.34205e+02 2.53817e-03 DIIS; @DF-RHF iter 3: 48.74097828423334 -1.52700e-01 5.96653e-04 DIIS; @DF-RHF iter 4: 48.72809517290153 -1.28831e-02 1.39212e-04 DIIS; @DF-RHF iter 5: 48.72728746065854 -8.07712e-04 2.56404e-05 DIIS; @DF-RHF iter 6: 48.72725943229844 -2.80284e-05 2.44921e-06 DIIS; @DF-RHF iter 7: 48.72725920400116 -2.28297e-07 3.81928e-07 DIIS; Energy and wave function converged.; ```; but it would be good to have a correct reference value...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1908#issuecomment-634507089:389,energy,energy,389,https://psicode.org,https://github.com/psi4/psi4/issues/1908#issuecomment-634507089,3,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"I checked all the optimization tests. I saw no major problems. A few of the cases now converge a bit faster. . opt-lindep-change/input.dat could be updated to the current energy after 3 steps, but this is not essential as we don't fully optimize this case. for opt10: we've changed basis sets, which is the reason for the different energy in the new output.ref. For some of the older cases, the testing criterion should be tightened. Specifically for ; opt1, opt1-fd, opt4, and opt5. The default SCF algorithm changed from PK->DF, and these output's are older. So I expect someone simply reduced the checking to only 3 decimals to maintain a PASS. We should tighten this up and be able to get 6 decimals in the energy - at least 5 - in a full optimization, at least. Note for tests such as opt 2, pk is specified and 6 decimals are checked already.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-197012335:171,energy,energy,171,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-197012335,8,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"I checked your calculation just for fun with a two-week old snapshot. I get; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter SAD: -1.10951830992328 -1.10952e+00 0.00000e+00 ; @RHF iter 1: -1.54125526228531 -4.31737e-01 0.00000e+00 DIIS; @RHF iter 2: -1.54125526228531 0.00000e+00 0.00000e+00 DIIS; Energy and wave function converged.; ```; which is the same solution as you reported with 1.3.2, only it converges in 2 iterations instead of 8. `guess huckel` and `guess core` also converge in 2 iterations, and they don't need the extra Fock build at the beginning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1878#issuecomment-623943795:108,Energy,Energy,108,https://psicode.org,https://github.com/psi4/psi4/issues/1878#issuecomment-623943795,2,['Energy'],['Energy']
Energy Efficiency,"I compiled psi4, got coffee, and cmake decided it was time to recompile from scratch in case someone ninja edited my build. Cmake always has your back. . -Daniel Smith; Sent from my iPhone. . > On Apr 18, 2016, at 19:16, Lori A. Burns notifications@github.com wrote:; > ; > It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!; > ; > Who dares to decouple libint from our build system such that it could become a detectable ExternalProject_Add CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/355#issuecomment-211638331:613,green,green,613,https://psicode.org,https://github.com/psi4/psi4/issues/355#issuecomment-211638331,2,"['energy', 'green']","['energy', 'green']"
Energy Efficiency,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364678447:145,ENERGY,ENERGY,145,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447,1,['ENERGY'],['ENERGY']
Energy Efficiency,"I couldn't pull up the old psi4/psi4private#14 that @loriab mentioned, but; does CC have a follow_root equivalent? Can you optimize the 3rd EOM-CCSD; root? There seems to be a CC3_FOLLOW_ROOT (CCEOM) option, that is not; really documented (documentation doesn't explain what this does). Maybe; @lothian can shed some light on this. David. On Wed, Nov 16, 2016 at 10:58 AM, Lori A. Burns notifications@github.com; wrote:. > ## _@loriab_ commented on this pull request.; > ; > In psi4/share/psi4/fsapt/fsaptdiff.py; > https://github.com/psi4/psi4/pull/519:; > ; > > ```; > > printOrder2(stuffA['order2'], stuffA['fragkeys']); > > ```; > > - print ' => Reduced Analysis <=\n'; > > - print(' => Reduced Analysis <=\n'); > > printOrder2(stuffA['order2r'], stuffA['fragkeysr']); > ; > @amjames https://github.com/amjames , yeah, specifying the trio of; > INTERP, LIBS, and HEADERS is the only surefire way I know to get fully; > consistent python.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/519, or mute the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdsQnxkGJc8o-ke-GfW4Qg-6yWExXks5q-ygKgaJpZM4KzjCV; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/519#issuecomment-260985515:650,Reduce,Reduced,650,https://psicode.org,https://github.com/psi4/psi4/pull/519#issuecomment-260985515,2,['Reduce'],['Reduced']
Energy Efficiency,"I couldn't reproduce the results using the def2-SVP basis, so I ran the same computation as in #1596 but with the 6-31G basis (all other parameters being the same). I attach Q-Chem output file.; [BODIPY.txt](https://github.com/psi4/psi4/files/3073222/BODIPY.txt). Here's the summary of ADC(2) results from Q-Chem (can't quite figure out how to format this on GitHub):; --------------------------------------------------------------------------------; HF Summary ; --------------------------------------------------------------------------------; Energy: -906.6356657873 a.u.; Dip. moment [a.u.]: [ 3.494726, -0.033111, -1.462926]; Total dipole [Debye]: 9.629954; <r^2> [a.u.]: [2923.854114, 1346.264718, 630.542572]; Total <r^2> [a.u.]: 4900.661404; --------------------------------------------------------------------------------. --------------------------------------------------------------------------------; MP(2) Summary ; --------------------------------------------------------------------------------; Energy contribution: -1.8309391560 a.u.; Total energy: -908.4666049433 a.u.; Dip. moment [a.u.]: [ 3.265989, -0.052169, -1.229851]; Total dipole [Debye]: 8.871367; <r^2> [a.u.]: [2923.192179, 1346.473546, 629.676198]; Total <r^2> [a.u.]: 4899.341924; --------------------------------------------------------------------------------; Starting Davidson ... ; --------------------------------------------------------------------------------; It NVec Conv Avg. Norm Max. Norm Conv. states Remark; --------------------------------------------------------------------------------; 2 0 3.605e-01 5.138e-01 0.1878 n n Guess.; 1 4 0 1.105e-01 1.726e-01 0.0174 n n ; 2 6 0 3.198e-02 5.191e-02 0.0066 n n ; 3 8 0 1.563e-02 2.479e-02 0.0049 n n ; 4 10 0 9.895e-03 1.453e-02 0.0045 n n ; 5 12 0 6.530e-03 1.034e-02 0.0043 n n ; 6 14 0 5.263e-03 8.300e-03 0.0043 n n ; 7 16 0 5.542e-03 1.031e-02 0.0042 n n ; 8 18 0 3.255e-02 6.506e-02 0.0042 n n ; 9 20 0 1.320e-02 2.638e-02 0.0042 n n ; 10 4 0 9.744e-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190:546,Energy,Energy,546,https://psicode.org,https://github.com/psi4/psi4/pull/1599#issuecomment-482557190,2,['Energy'],['Energy']
Energy Efficiency,"I couldn’t say concretely, but some other programs will switch to an appropriate reference for open-shell. For psi4, it would have to be rhf/rks because we don’t have roks. This would be convenient at times, for instance, running databases of mixed closed/open shell. Propositions to be considered:. (i) Keeping reference in one place, that is, as a keyword. Consequences: retire rhf/uhf/rohf & rscf/uscf/roscf. (ii) If molecule is open-shell _and_ no reference has been specified, switch to uhf. This could be tricky b/c we’re not set up to do this driver-side. Also, there’d still be no way to use r/ro, as appropriate, in a series of molecules w/o explicitly setting reference. Lori. > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com wrote:; > ; > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > That sounds ok to me (then reference just has to be defined properly).; > ; > What about DFT, do we define functional properly and do energy('dft'), etc.?; > ; > David; > ; > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Fixed by 6f6d3aa; > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > though I rather think now that defining hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > energy() was a bad idea (by me) a few years ago (except for ""hf"" itself).; > > Nevertheless, as this ticket points out, having defined these names only; > > for energy() confounds the driver logic. These convenience names are now in; > > place for gradient() and property().; > > ; > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > prop() if others concur with my present assessment.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/103#issuecomment-109846967.; > > ; > > —; > > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/103#issuecomment-110021718.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110183382:2407,energy,energy,2407,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110183382,3,['energy'],['energy']
Energy Efficiency,I definitely see screening for the potential on the surface in other programs. Involving a point-charge approximation of the integral I think.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1280#issuecomment-438821342:97,charge,charge,97,https://psicode.org,https://github.com/psi4/psi4/issues/1280#issuecomment-438821342,1,['charge'],['charge']
Energy Efficiency,"I did some comparison against G09 with and without FC for the Kr-OCS system. The total and correlation energy for the non-FC calculation agrees reasonably well:; ```; G09 vs Psi4; E_tot: -973.44895912 vs -973.44870301; E_corr: -0.9107877120 vs -0.9106736313; ```; while for the FC calculation there is a difference:; ```; G09 vs Psi4; E_tot: -973.33875833 vs -973.37470156; E_corr: -0.8005869194 vs -0.8366721825; ```; This difference seems to be coming mainly from the same-spin parts. When I calculate the Kr atom only, psi4 results do not differ whether I use MP2 with or without frozen core; in Gaussian, the full core correlation is `-0.283`, while FC-correlation is only `-0.242` Eh. I believe Gaussian freezes 4 electron pairs (3s + 3p) in addition to the 10 electrons substituted by the ECP (1s + 2s + 2p).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/976#issuecomment-383722121:103,energy,energy,103,https://psicode.org,https://github.com/psi4/psi4/issues/976#issuecomment-383722121,1,['energy'],['energy']
Energy Efficiency,"I did some testing with both files. When loading them into molden (version 5.1), the program prints the Mulliken charges on screen. The results are odd:. molden file from ORCA:; N 1.3673; H 0.0711; H 0.2191; H 0.3448; Sum of Mulliken Charges: 2.0024. molden file from PSI4:; N 1.3673; H 0.0711; H 0.2191; H 0.3448; Sum of Mulliken Charges: 2.0024. Obviously, both are wrong. Apparently, the D orbitals have very little influence on the Mulliken charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60#issuecomment-53036550:113,charge,charges,113,https://psicode.org,https://github.com/psi4/psi4/issues/60#issuecomment-53036550,4,"['Charge', 'charge']","['Charges', 'charges']"
Energy Efficiency,"I didn't think of that, @loriab. These Hessians come in peace (although they could well impart the occasional seg fault). I was within epsilon of having the code done last week (literally; I screwed up some orbital energy scaling term somehow) so I came very close to beating `1.0`. Still, this code is almost useless until we get DF and KS terms in there, so no sense in hurrying it into a new release version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-230548237:215,energy,energy,215,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-230548237,1,['energy'],['energy']
Energy Efficiency,"I do agree on most counts. Although, I think its worth pointing out that properties through OEProp are quite trivial; however, any other properties are going require linear response in some way or another which divorces itself quite radically from standard `energy` calls.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/286#issuecomment-189700565:258,energy,energy,258,https://psicode.org,https://github.com/psi4/psi4/pull/286#issuecomment-189700565,1,['energy'],['energy']
Energy Efficiency,"I do not have the latest revision. However, with the revision I have (Psi4 0.3.431) I removed ""set mp2_type cd"" and use energy('cd-mp2'), then I get . CD-MP2 Correlation Energy (a.u.) : -0.05840983042460. Hence, with my version it appears to be okay. @loriab @CDSherrill",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183508678:120,energy,energy,120,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183508678,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"I don't get it, I ran another geom opt using B3LYP/6-31G* with the last coordinates of the previous attempt, and it converged 1st iteration. ```; **** Optimization is complete! (in 1 steps) ****. ==> Optimization Summary <==. Measures of convergence in internal coordinates in au.; --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -1520.121971894730 -1520.121971894730 0.00006927 0.00001834 0.00081821 0.00021391 ~; --------------------------------------------------------------------------------------------------------------- ~; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-957945866:408,Energy,Energy,408,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-957945866,1,['Energy'],['Energy']
Energy Efficiency,"I don't know how you are reading in the Hessian here, since I don't know how to automatically read files like ""hooh.21221.hess"" now that we have pid's in the name. (BTW, it appears the current psi4 test cases actually use an empirical Hessian.). These jobs are failing because the ""Point 1"" on the IRC is being judged 'converged' immediately before a gradient is even run. (The logic in the code is messy, since the optimizer doesn't actually call the gradient.) So optking needs to do displacements from the TS (where the gradient is zero) but return a not-converged signal to the python optimize. This usually works. I tried the following:. ```; set {; g_convergence gau_verytight; basis dzp; opt_type irc; cart_hess_read true; hessian_write true; }. hessian('scf', dertype=1); h2o2.reset_point_group('c2'); energy = optimize('scf'). ```; and everything worked fine. The problem in my testing is not indeterminism. There is something about the calculation setup that is causing optking not to compute the gradient after the first irc_step(). Perhaps @avcopan could figure out what is going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-346373530:810,energy,energy,810,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-346373530,1,['energy'],['energy']
Energy Efficiency,"I don't see any wB97X-D3/def2-TZVP energies from Psi4 1.4.1 in your data, just wB97X-D/def2-SVP. . Looking at the data you have from Psi4 1.4.1, the wB97X-D/def2-SVP energies relative to the minimum energy conformer for each molecule are similar to the relative energies from ORCA. Though some conformers have significant differences for the relative energy from ORCA vs from Psi4, most differences are around 1 kcal/mol or less. I would expect similar deviations between wB97X-D/def2-SVP and wB97X-D/def2-TZVP results that were both computed using the same software. The energy is sensitive to the quality of the basis set. Using a different dispersion correction than the 'reference' ORCA energies doesn't help either. The differences compound with different implementations of various algorithms between different software packages. For molecules with conformers that are all close in energy, these deviations will bring the r<sup>2</sup> way down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-974333804:199,energy,energy,199,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-974333804,4,['energy'],['energy']
Energy Efficiency,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:156,energy,energy,156,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959,8,['energy'],['energy']
Energy Efficiency,"I don't understand what you're asking. What do you mean by ""my psi4 does not reflect the methods that comes with it"", and how does that lead to ""I can't calculate the potential energy""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2191721109:177,energy,energy,177,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2191721109,1,['energy'],['energy']
Energy Efficiency,"I don't want to take more of your time.; I tried the input that you sent me and the calculation ends with the following error. ---. PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 23, in <module>; File ""/home/matias/anaconda/share/psi/python/driver.py"", line 637, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/matias/anaconda/share/psi/python/proc.py"", line 582, in run_mp2; run_conv_omp2(name, **kwargs); File ""/home/matias/anaconda/share/psi/python/proc.py"", line 538, in run_conv_omp2; psi4.occ(); RuntimeError: PSIO Error. ---. In the input you used some keywords that i'm not familiar with, so i have to study the manual a little more, to understand the error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/105#issuecomment-144750805:395,energy,energy,395,https://psicode.org,https://github.com/psi4/psi4/issues/105#issuecomment-144750805,2,['energy'],['energy']
Energy Efficiency,"I dont have access to that paper at the moment, but a few notes for you:; - If you need to tweak functionals (@susilehtola this is a good example) please checkout [this](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/dft_funcs/hyb_superfuncs.py#L230) example. - For VV10 you can specify it via the python interface:; ```python; def build_myvv10_superfunctional(name, npoints, deriv, restricted):; sup = core.SuperFunctional.blank(); sup.set_name('HF+VV10'); sup.set_x_alpha(1.0). # Set VV10 parameters. If these are changed we assume you want VV10.; sup.vv10_b(...); sup.vv10_c(...). return sup. func_call = energy('SCF', dft_functional= build_myvv10_superfunctional); ```. The DFT code is likely the most class/inheritance/convoluted C++ code we have besides perhaps integrals. So probably not a great place to start in :). . - Post-SCF only VV10 is a good idea and just a matter of code logic. We need a flag somewhere that computes [this](https://github.com/psi4/psi4/blob/f03a896a2d70eac47137cf471dda4805e483586d/psi4/src/psi4/libfock/v.cc#L213) at the end of a SCF computation. The SCF iterations are in a bit of a state of flux due to the python porting; however, this should be pretty easy once merged as we have access to that Py-side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/870#issuecomment-347998008:626,energy,energy,626,https://psicode.org,https://github.com/psi4/psi4/issues/870#issuecomment-347998008,1,['energy'],['energy']
Energy Efficiency,"I echo Daniel on using the Wavefunction.variables map for storage of the pcm energy. Eventually, Wfn.variables will be primary and P::e dropped, but for now, make them mirror. https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/pcmsolver.rst seems a good place for all Psi4+PCMSolver documentation. And maybe mention on the CC page that CC+PCM is available if PCMSolver enabled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/683#issuecomment-296845920:77,energy,energy,77,https://psicode.org,https://github.com/psi4/psi4/pull/683#issuecomment-296845920,1,['energy'],['energy']
Energy Efficiency,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:138,energy,energy,138,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258,4,['energy'],['energy']
Energy Efficiency,"I find it troubling that on my computer the nuclear repulsion energy is ""inf"":. ```; Running in c1 symmetry. Rotational constants: A = 0.00468 B = 0.00339 C = 0.00276 [cm^-1]; Rotational constants: A = 140.36411 B = 101.76200 C = 82.71015 [MHz]; Nuclear repulsion = inf; ```. Looking at your input I see duplicated atoms. I've modified my local copy of Psi4 to report the duplicated atoms:. ```; ERROR: Atom 51 near to atom 26.; ERROR: Atom 52 near to atom 27.; ERROR: Atom 53 near to atom 28.; ERROR: Atom 54 near to atom 29.; ERROR: Atom 55 near to atom 30.; ERROR: Atom 56 near to atom 31.; ERROR: Atom 57 near to atom 32.; ERROR: Atom 58 near to atom 33.; ERROR: Atom 59 near to atom 34.; ERROR: Atom 60 near to atom 35.; ERROR: Atom 61 near to atom 36.; ERROR: Atom 62 near to atom 37.; ERROR: Atom 63 near to atom 38.; ERROR: Atom 64 near to atom 39.; ERROR: Atom 65 near to atom 40.; ERROR: Atom 66 near to atom 41.; ERROR: Atom 67 near to atom 42.; ERROR: Atom 68 near to atom 43.; ERROR: Atom 69 near to atom 44.; ERROR: Atom 70 near to atom 45.; ERROR: Atom 71 near to atom 46.; ERROR: Atom 72 near to atom 47.; ERROR: Atom 73 near to atom 48.; ERROR: Atom 74 near to atom 49.; ERROR: Atom 75 near to atom 50.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/158#issuecomment-129556718:62,energy,energy,62,https://psicode.org,https://github.com/psi4/psi4/issues/158#issuecomment-129556718,1,['energy'],['energy']
Energy Efficiency,"I forgot a rather important detail - when DFOCC says it is running all further computations in C1 symmetry, it does not just mean that spin-adapted orbitals won't be used. It even creates a C1 clone of the molecule. The `symmetrize_gradient` call symmetrizes to the C1 symmetry of the clone, not the symmetry of the molecule that went into the `gradient` call. As long as that symmetry-less molecule clone is used internally, I don't see how a fix for the issue would be possible.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504#issuecomment-459012061:140,adapt,adapted,140,https://psicode.org,https://github.com/psi4/psi4/issues/1504#issuecomment-459012061,1,['adapt'],['adapted']
Energy Efficiency,"I gave this a try (using Psi4 1.9.1) and noticed that the energy converged to a state ~20 hartrees below the def2-TZVP result. I think the def2-TZVP is the ""correct"" state as it converges to this state in vacuum and with PCMSolver using def2-TZVPPD, as well as using ddX with def2-TZVPP. . I tried changing the guess to Huckel which seems to have resolved the issue for this particular case. I also tried changing the convergence algorithm (e.g. using damping, not using ADIIS, etc), as well as other guesses, but only the Huckel guess was able to converge to the same state as the def2-TZVP. . I would think that the specific solution isn't necessarily transferrable to all other systems, but that fiddling with the convergence/guess settings may help in general. Result:; ```; MBIS Charges: (a.u.); Center Symbol Z Pop. Charge; 1 C 6 6.139025 -0.139025; 2 C 6 6.133511 -0.133511; 3 C 6 6.122876 -0.122876; 4 C 6 6.070789 -0.070789; 5 C 6 6.122873 -0.122873; 6 C 6 6.133418 -0.133418; 7 I 25 25.053866 -0.053866; 8 H 1 0.850991 0.149009; 9 H 1 0.849569 0.150431; 10 H 1 0.836862 0.163138; 11 H 1 0.836785 0.163215; 12 H 1 0.849450 0.150550; ```. Input:; ```; molecule test {; 0 1; C -2.770566610000 0.138041700000 0.070178320000; C -1.574766790000 -2.182402580000 0.041630990000; C 1.033304570000 -2.323434390000 -0.024422900000; C 2.435037490000 -0.121299970000 -0.061679550000; C 1.259017560000 2.209348470000 -0.033641890000; C -1.350150920000 2.328080550000 0.032456990000; I 6.389923580000 -0.318582790000 -0.161855610000; H -4.794725900000 0.238941070000 0.121450260000; H -2.664958600000 -3.891956620000 0.070604800000; H 1.951364020000 -4.127647160000 -0.046322210000; H 2.351710440000 3.913369620000 -0.062674850000; H -2.265188840000 4.137542080000 0.054275640000; units bohr; no_com; no_reorient; }. set {; basis def2-TZVPPD; ddx true; ddx_model pcm; ddx_solvent_epsilon 4.0; guess huckel; }. energy('pbe0'); properties('pbe0',properties= [""mbis_charges"",""quadrupole"",""mulliken_charges"",""d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230:58,energy,energy,58,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2349712230,3,"['Charge', 'energy']","['Charge', 'Charges', 'energy']"
Energy Efficiency,"I had a long day of travel back from the conference, and used the ensuing boredom as an excuse to code up the DF second derivatives. The code is not completely terrible, and gives correct answers. We need an efficient out of core code eventually, but what do you think about adding it to this PR?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-231902272:208,efficient,efficient,208,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-231902272,1,['efficient'],['efficient']
Energy Efficiency,"I had another look and I believe the problem is, that in a `ptype == ""gradient""` calculation, we first do a normal energy calculation (where . ```jobrec['qcvars']['CURRENT ENERGY'] = copy.deepcopy(jobrec['qcvars']['DISPERSION CORRECTION ENERGY'])```. might be the correct thing to do), and then we do a gradient, where i don't think it is...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1470#issuecomment-459121633:115,energy,energy,115,https://psicode.org,https://github.com/psi4/psi4/pull/1470#issuecomment-459121633,3,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"I had looked into the integer overflow issues in the DF code with MP3 as an example several months ago. The negative memory values reported are of course integral overflows and one can fix the printing of memory requirements by changing the int to a type that holds larger integers. But the actual problem happens later when, if I understand correctly, an array index becomes bigger than 2,147,483,647. . In my DF-MP3 test calculation this happened in the main loop in mp3_WabefT2. . Memory for I, Vs, Va, Ts, and Ta was successfully allocated, but then the quantity a * navirA * nQ became too large. I forced it to long or long-long, so the product could be evaluated (and printed printed out) as 2148655392 (as opposed to -2146311904 with int) but this positive value ""anavirAnQ3"" was illegal for the subsequent contraction. I->contract(false, true, navirA * nb, navirA, nQ, K, K, 0, anavirAnQ3, 1.0, 0.0);. So, it is the array index, and not the array value, that is bigger than the 32-bit integer. And our math libraries index arrays with the 32-bit integer type! . I tried to compile Psi against MKL and OpenBLAS with 64-bit index arrays (the ILP64 interface) but the resulting program was not stable. So, if my thinking is correct, I am afraid we do not have an easy fix as long as Psi4 expects math libraries with 32-bit integer indices. I can share some debug code (modified dfocc.h, df_ref.cc, tei_grad_corr.cc, df_corr.cc, ref_grad.cc, and mp3_W_intr.cc with some long int and printf statements) and sample outputs if anybody thinks this is helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561544849:534,allocate,allocated,534,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561544849,1,['allocate'],['allocated']
Energy Efficiency,"I had put this together as I was building v1.4, so may as well share here. ### `psi4`. project | req'd | linux | osx | win | noarch | lang; -----|-----|-----|-----|-----|-----|-----; libint2 | yes | psi4 | psi4 | psi4 | | C++; libxc | yes | psi4 | psi4 | c-f | | C; gau2grid | yes | psi4 | psi4 | c-f | | C; qcelemental | yes | | | | psi4 copied from c-f | Py; qcengine | yes | | | | psi4 copied from c-f | Py; ambit | no | psi4 | psi4 | --- | | C++; chemps2 | no | psi4 | psi4 | --- | | C++; dftd3 | no | psi4 | psi4 | psi4 | | Fortran; dkh | no | psi4 | psi4 | --- | | Fortran; gcp | no | psi4 | psi4 | psi4 | | Fortran; gdma | no | psi4 | psi4 | --- | | Fortran; pcmsolver | no | psi4 | psi4 | --- | | C++, Fortran; simint | no | psi4 | psi4 | --- | | C++. * not req'd means present in Linux conda package but not required for a minimal conda package; * gcp should switch to mctc-gcp already on c-f for L but needs a MKL build; * gdma is a little behind in releases b/c psi actually uses a home-adapted library instead of the executable; * pcmsolver latest (v1.3, I think) can't work with psi4 after core-developer of both gave a medium-effort try. But there's a slight problem with previous release v1.2, too, so psi4 uses an unpublished v1.2.1.1 (or something like that). a patch in the conda-recipe from v1.2.1 upstream is probably the better sol'n; * simint is peculiar in that you need to choose a target instruction set at compile time. usual psi default may not be general enough for c-f. ### `psi4-rt`. project | req'd | linux | osx | win | noarch | lang; -----|-----|-----|-----|-----|-----|-----; libtensorlight | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; adcc | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; fockci | no | | | | psi4 | Py; mp2d | no | psi4 | psi4 | --- | | C++; openfermion | no | | | | psi4 | Py; openfermionpsi4 | no | | | | psi4 | Py; pycppe | no | psi4 | psi4 | --- | | C++; pylibefp | no | psi4 | psi4 | --- | | C++; libef",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900:998,adapt,adapted,998,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900,1,['adapt'],['adapted']
Energy Efficiency,"I had the same issue when I tested cdomp2-2. Here's the list of all my failed tests:; 76:cdomp2-2; 123:dfmp2-grad2; 125:dfmp2-grad4; 127:dfomp2-2; 129:dfomp2-4; 131:dfomp2-grad2; 303:stability2. I am using Ubuntu 14.04 with ATLAS for BLAS and LAPACK. Update:; After I changed to Intel MKL, the only failed case in tests is 303:stability2. Because it's just a value off, I just ignore it and continue installing. > ## Output:; > ; > Nuclear repulsion energy..........................................PASSED; > Reference energy..................................................PASSED; > Stability eigenvalues with symmetry: computed value (0.094068) does not match (0.0940977919192).; > Check your output file for reporting of the matrices.; > An error has occurred python-side. Traceback (most recent call last):; > ; > File ""<string>"", line 58, in <module>; > ; > File ""/home/mrabsence/Downloads/soft/psi4/share/python/p4util/util.py"", line 209, in compare_matrices; > raise TestComparisonError(""\n""); > ; > TestComparisonError: ; > ; > Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); > <end of output>; > Test time = 1.80 sec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-223730550:450,energy,energy,450,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-223730550,2,['energy'],['energy']
Energy Efficiency,"I have a patch written -- I can see that `initialize_lebedev` actually gets called, and when I inspect `lebedev_mapping_`'s values at a breakpoint, things look reasonable. ...I also see no changes in the energy anywhere. In fact, I don't see any evidence of any use of `order_` at all, except in one printing function. Is this intentional? . Anyway, PR incoming. I am OK not understanding the mysteries of `order_`, as long as I no longer get 1/1000 hangs when trying to run large workflows.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735#issuecomment-1267820055:204,energy,energy,204,https://psicode.org,https://github.com/psi4/psi4/issues/2735#issuecomment-1267820055,1,['energy'],['energy']
Energy Efficiency,"I have fixed the code that connects the initial, separated fragments in; optking. The CH3F case now runs fine. The code was very much in error. I; will submit the correction whenever the main psi4 trunk runs again. At the; moment, the python there seems broken. On Sun, Mar 13, 2016 at 2:52 PM, Rollin King rking@bethel.edu wrote:. > The current code detected 4 different fragments for the extended CH3F.; > Then it tried to connect them. It really should have been able to do so.; > I don't see why it didn't work, and I'm looking for a bug.; > ; > On Sun, Mar 13, 2016 at 2:00 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Certainly the flexibility of the optimizer oughtn't be reduced. In the; > > absence of fixed/frozen keywords or user supplied/edited intco (do you need; > > a keyword to signal do-read-intco instead of accepting any it finds?), it's; > > probably reasonable to assume a full optimization is desired. Maybe grep; > > '~' needs to catch a gradient.rms(), too, next to the optking-active rms; > > gradient.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/310#issuecomment-196021110.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196087369:696,reduce,reduced,696,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196087369,1,['reduce'],['reduced']
Energy Efficiency,"I have retested this atop a Libint2-based branch, and all's well. cores | old, no charges | old, with charges | PR, no charges | PR, with charges; ---- | ---- | ---- | ---- | ----; 1 | 344 | 600 | 351 | 479; 6 | 117 | 386 | 114 | 160. ```; memory 20 gb. molecule {; 0 1; N 0.9350155 -0.0279801 -0.3788916; C 1.6739638 -0.0357766 0.7424316; C 3.0747955 -0.0094480 0.5994562; C 3.5646109 0.0195446 -0.7059872; N 2.8531510 0.0258031 -1.8409596; C 1.5490760 0.0012569 -1.5808009; N 4.0885824 -0.0054429 1.5289786; C 5.1829921 0.0253971 0.7872176; N 4.9294871 0.0412404 -0.5567274; N 1.0716177 -0.0765366 1.9391390; H 0.8794435 0.0050260 -2.4315709; H 6.1882591 0.0375542 1.1738824; H 5.6035368 0.0648755 -1.3036811; H 0.0586915 -0.0423765 2.0039181; H 1.6443796 -0.0347395 2.7619159; --; 0 1; N -3.9211729 -0.0009646 -1.5163659; C -4.6136833 0.0169051 -0.3336520; C -3.9917387 0.0219348 0.8663338; C -2.5361367 0.0074651 0.8766724; N -1.9256484 -0.0110593 -0.3638948; C -2.5395897 -0.0149474 -1.5962357; C -4.7106131 0.0413373 2.1738637; O -1.8674730 0.0112093 1.9120833; O -1.9416783 -0.0291878 -2.6573783; H -4.4017172 -0.0036078 -2.4004924; H -0.8838255 -0.0216168 -0.3784269; H -5.6909220 0.0269347 -0.4227183; H -4.4439282 -0.8302573 2.7695655; H -4.4267056 0.9186178 2.7530256; H -5.7883971 0.0505530 2.0247280; units angstrom; }. Chrgfield = QMMM(). for i in range(25):; for j in range(25):; Chrgfield.extern.addCharge(-0.834, i * 3.0 + 1.649232019048, 0.0, j * 3.0 + -2.356023604706); Chrgfield.extern.addCharge( 0.417, i * 3.0 + 0.544757019107, 0.0, j * 3.0 + -3.799961446760); Chrgfield.extern.addCharge( 0.417, i * 3.0 + 0.544757019107, 0.0, j * 3.0 + -0.912085762652). psi4.set_global_option_python('EXTERN', Chrgfield.extern). energy(""sapt0/jun-cc-pvdz""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1946#issuecomment-765017796:82,charge,charges,82,https://psicode.org,https://github.com/psi4/psi4/pull/1946#issuecomment-765017796,5,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"I have seen this before (for this exact system) - the SAD guess converges; to the correct root, but Core does not. Not really much more to it than; that. -Rob. On Wed, Jan 13, 2016 at 11:33 PM, Roberto Di Remigio <; notifications@github.com> wrote:. > Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+; > gives very different energies.; > The following input with the core guess gives a total energy of; > -75.5488580481183476; > ; > memory 250 mb; > molecule h2o {; > symmetry c1; > 1 2; > O 0.0000000000 0.0000000000 -0.2249058930; > H 1.4523499293 0.0000000000 0.8996235720; > H -1.4523499293 0.0000000000 0.8996235720; > units bohr; > no_reorient; > no_com; > }; > ; > set {; > basis cc-pVDZ; > scf_type direct; > guess core; > reference uhf; > e_convergence 7; > d_convergence 7; > }; > ; > energy_scf1 = energy('scf'); > ; > while this input with the SAD guess gives a total energy of; > -75.6330881795159655; > ; > memory 250 mb; > molecule h2o {; > symmetry c1; > 1 2; > O 0.0000000000 0.0000000000 -0.2249058930; > H 1.4523499293 0.0000000000 0.8996235720; > H -1.4523499293 0.0000000000 0.8996235720; > units bohr; > no_reorient; > no_com; > }; > ; > set {; > basis cc-pVDZ; > scf_type direct; > guess sad; > reference uhf; > e_convergence 7; > d_convergence 7; > }; > ; > energy_scf1 = energy('scf'); > ; > Of course, the initial guess has always a huge impact on the calculation,; > but is the reported difference reasonable for a system as small as H2O+?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/211.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/211#issuecomment-171564200:413,energy,energy,413,https://psicode.org,https://github.com/psi4/psi4/issues/211#issuecomment-171564200,4,['energy'],['energy']
Energy Efficiency,"I just refactored my code to reduce code duplicity (Ran all C-Tests, still passed). I changed the build_JK function by adding two boolean switches that determine whether to build J and/or K. So the function header is now; `build_JK(ints, D, J, K, do_J, do_K)`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-977378952:29,reduce,reduce,29,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-977378952,1,['reduce'],['reduce']
Energy Efficiency,"I just removed opt10 from all ctest labels. Its still present, but will not run unless you specifically request it. It looks like the reference opt10 ran in about 45 minutes on 8 threads. @psi-rking If you are just testing angular dependancies can you reduce this to something like 6-31G?. Edit: Whoops, misread timing data. > On Feb 15, 2016, at 9:27 AM, Justin Turney notifications@github.com wrote:; > ; > Yeah, we should have that mechanism to leave it as a longertest. Maybe that's what @dgasmith https://github.com/dgasmith has already done.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/253#issuecomment-184228286.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-184233000:252,reduce,reduce,252,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-184233000,1,['reduce'],['reduce']
Energy Efficiency,"I keep hearing about this ""problem"" also elsewhere, but the fact is that the regular grid for cube files is ill fitted for integrating the density of steep regions (e.g. at the nuclei). ; python-based integrator for testing: https://gist.github.com/hokru/71c61f5afb2e5921b5b4955fed70f5db. cubes were made for visualization not for further analysis, iirc. Does chargemol only work with cube files?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-433074513:360,charge,chargemol,360,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-433074513,1,['charge'],['chargemol']
Energy Efficiency,"I know next to nothing about nbody, I just did a quick keyword search to see if there is anything optking could set and didn't find anything. I'll also confess to not entirely following the thread so this could be completely unhelpful. optking gave up all non schema communication so in order for us to ""easily"" set `return_total_data` it would either need to be:. 1. A keyword we / the user can set in an `AtomicInput`; 2. An optional parameter in `psi4.run_qcschema()` - optking would likely force the user to use the `optking -> psi4` path instead of the `optking -> qcengine -> psi4` path to make sure this gets set correctly. Otherwise optking would either need to:; 1. go back to making gradient calls directly - at least if needed; 2. Make the user go through `psi4.optimize()` where `gradient(..., bsse_type=[args])` might get called explicitly - I don't know what is envisioned for this. I would hope a user would figure out that the energy is several orders of magnitude off, but regardless of the solution, the optimizer could certainly do a sanity check of the energy after the first step. I don't think an IE is ever going to be large enough to be mistaken for the total electronic energy. Optking could check the magnitude of the energy, direct the user to the correct way of performing the optimization and quit so as not to waste computer time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-870050704:943,energy,energy,943,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-870050704,4,['energy'],['energy']
Energy Efficiency,"I leave most of the environment variable stuff for PSI4 in the hands of conda. I have a modified/compiled version of PSI4 on just one of my machines, but PSI4 crashes on all of them for one electron properties. I saw the crash while I was running a testing script, so I know that it printed correct results for HF, PBE0, gradient, and PBE0+point-charges calculations. The only test of mine that failed involved recovering charges from a QM calculation. ```; [input file]. set_num_threads(8); memory 256 mb; set reference rhf; set basis 6-31G*; set guess sad; set scf_type df. psi4_io.set_specific_path(32,'./'); psi4_io.set_specific_retention(32,True); psi4_io.set_specific_path(180,'./'); psi4_io.set_specific_retention(180,True). molecule LICHM_0 {; 0 1; O 0.87273600000000 0.00000000000000 -1.2467539999999; H 0.28827300000000 0.00000000000000 -2.0108530000000; H 0.28827300000000 0.00000000000000 -0.4826550000000; symmetry c1; no_reorient; no_com; }. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1.3062266666666,-0.6489658001839,0.00000001660701,1.10730418839000); Chrgfield.extern.addCharge(0.35180666666666,-0.7534241883900,-0.0000000536004,1.26252019981607); Chrgfield.extern.addCharge(0.86636000000000,-0.7788030060160,0.13229430272998,1.13268305579077); Chrgfield.extern.addCharge(-1.3062266666666,-0.9086401998160,-0.0000000166070,1.15806181160999); Chrgfield.extern.addCharge(0.10176666666666,-0.8041818116099,0.00000005360047,1.00284580018392); Chrgfield.extern.addCharge(0.86636000000000,-0.7788029939839,-0.1322943027299,1.13268294420922); Chrgfield.extern.addCharge(0.51284666666666,-0.7965191998160,0.76409898339298,1.73166981160999); Chrgfield.extern.addCharge(-1.7440911751517,-0.6778443974775,0.64528811991560,1.64918444879139); Chrgfield.extern.addCharge(0.85696271562354,-0.6894742127334,0.82228626070531,1.58968679653742); Chrgfield.extern.addCharge(0.51284666666666,-0.5368448001839,0.76409901660701,1.68091218839000); Chrgfield.extern.addCharge(-0.5989622639259,-0.65551960",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:346,charge,charges,346,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,2,['charge'],['charges']
Energy Efficiency,"I looked into this yesterday. On my laptop when I disable DKH, I still obtain a large total energy difference:. ```; @ROHF Final Energy: -1262.91530042362160; @ROHF Final Energy: -1259.00365041946634; ```. I emailed one of the issue reporters directly and waiting to hear a response. At least with my compilation (master/debug) it doesn't appear to be a DKH issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/899#issuecomment-360224837:92,energy,energy,92,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360224837,3,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"I made a little progress and briefly want to summarise` briefly:. - `ADC(2)` is denoted as `adc` inside the Psi4 source code. This does not really make sense to me, since there are now plenty of more ADC methods, so I renamed it to `adc(2)`. `adc` now no longer exists as a method.; - I'm a bit confused about the `mtd_type`. If I get it right, neither the builtin (nor adcc) supports anything but `CONV`(entional) ERIs. But I might be wrong about the builtin code. I copied the value from `MP_TYPE`, since after all the energies returned by the `energy(adcN)` calls are `MP(N)` energies (ADC(n) is constructed for excited states building on top of an MP(n) ground state)). Still, one could introduce `ADC_TYPE` ... you're call.; - I have not registered `run_adcc` for MP(2) and MP(3), but I could because we can compute these energies (and a few properties), too. Not sure that's worth the effort, however.; - For determining frozen core and frozen virtual orbital count I used `Wavefunction.frzcpi` and `Wavefunction.frzvpi`, but it feels a bit strange to do it this way. Is there a better method?; - I added quite a couple of extra options. Is the only way to register them, to add them to the `C++` `read_options.cc`?; - adcc prints by default to `sys.stdout`, but can be easily redirected such that all output goes to another python stream. Psi4 wants to print via `core.print_out`, which takes only a string, so I'm forced to redirect a python stream to a text string. That could become messy unless there's a better option on the Psi4 end. Again thanks for your help :smile:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-548144326:547,energy,energy,547,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-548144326,1,['energy'],['energy']
Energy Efficiency,"I made a pass at the docs, very minimal. Not sure how extensive it should be. @maxscheurer the pe-tdscf test for RHF does not pass on my mac with cppe via pip. Excitation energy number 3 is off, rest is fine. No idea why, right now. ```; !----------------------------------------------------------------------------------!; ! !; ! PE OSCILLATOR STRENGTH: computed value does not match to atol=1e-05. !; ! Expected: !; ! [0.000004406911 0.000089321058 0.432081257 0.113168661 0.0190262828 ] !; ! Observed: !; ! [0.000004444431 0.000089181257 0.432105919683 0.113174232326 0.019027243438] !; ! Difference (passed elements are zeroed): !; ! [0.000000000000e+00 0.000000000000e+00 2.466268274193e-05 0.000000000000e+00 !; ! 0.000000000000e+00] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253:171,energy,energy,171,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253,1,['energy'],['energy']
Energy Efficiency,"I mean, a correlation coefficient of 0.62 is ridiculous. The calculations really should be nearly identical. Are you sure the molecular charges and multiplicities are set correctly?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-968768906:136,charge,charges,136,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-968768906,1,['charge'],['charges']
Energy Efficiency,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364643141:112,ENERGY,ENERGY,112,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141,5,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"I ran `sapt1` on an s390x box now and compared the output to `output.ref` and one thing is weird:. ```; - Geometry (in Bohr), charge = 0, multiplicity = 1:; + Geometry (in Bohr), charge = 0, multiplicity = 2:; ```. Nothing else much stands out besides `output.ref` being from an older version so having some other strings here and there. When SAPT would start. ```; - SAPT0 ; - Ed Hohenstein; - 6 June 2009; ```; I immediately get the backtrace:; ```; +Traceback (most recent call last):; + File ""/usr/bin/psi4"", line 269, in <module>; + exec(content); + File ""<string>"", line 53, in <module>; + File ""/usr/lib/s390x-linux-gnu/psi4/driver/driver.py"", line 492, in energy; + wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); + File ""/usr/lib/s390x-linux-gnu/psi4/driver/procrouting/proc.py"", line 3438, in run_sapt; + e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn); +; +RuntimeError: ; +Fatal Error: Laplace Quadrature requested for (E_HUMO - E_LOMO)/(E_LUMO-E_HOMO) > 7.0 * 10^12, quadratures are not designed for this range.; ```. I checked and adding `DENOMINATOR_ALGORITHM CHOLESKY` to `input.dat` makes the test pass:. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. I'll try to step through the code first before I start recompiling with the patches you suggested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451695207:126,charge,charge,126,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451695207,5,"['Energy', 'charge', 'energy']","['Energy', 'charge', 'energy']"
Energy Efficiency,"I really like @dgasmith's proposal for dictionary passing of options, i.e.,. ``` python; opt = {'SCF_TYPE':'DF', ...}; psi4.energy('scf', molecule=mol, options=opt); ```. I think this really supports the interactive Psi4 that has only been possible post-inversion, which folks (including myself) will be excited about. I like scheme 1 for the same reason -- conceivably, you could have . ``` python; scf_opt1 = {'SCF_TYPE':'DF'}; scf_opt2 = {'SCF_TYPE':'DF','DIIS_MAX_VECS':8}. psi4.energy('scf', molecule=mol, options=scf_opt, module_options={'SCF':scf_opt1}); ```. where even the `module_options` could be interchanged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/511#issuecomment-259857520:124,energy,energy,124,https://psicode.org,https://github.com/psi4/psi4/pull/511#issuecomment-259857520,2,['energy'],['energy']
Energy Efficiency,"I recall that the restriction arises from an assumption I made about storage requirements. I think I was assuming that o^4 and o^3v arrays could be stored in a block of memory the size of t2, but I can’t be sure without looking through the code a bit. I’m not sure how difficult it would be to remove this restriction, but I will look into it. > On Oct 25, 2017, at 3:44 PM, David Sherrill <notifications@github.com> wrote:; > ; > Well, yes, he relative sizes would effect efficiency of contraction order,; > but I don't see why they would make the code not working at all... I; > suppose this restriction is in there somewhere but I don't see why.; > ; > On Oct 25, 2017 3:40 PM, ""Susi Lehtola"" <notifications@github.com> wrote:; > ; > @CDSherrill <https://github.com/cdsherrill> @edeprince3; > <https://github.com/edeprince3> could it be that that nvirt > ndocc is an; > assumption that's made in the contraction order? If nvirt < ndocc then it; > might be more efficient to contract first over the occupied orbitals?; > ; > —; > You are receiving this because you were mentioned.; > ; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/828#issuecomment-339447402>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdui004ARGwSkbS7HK_Zd_43SDnHZks5sv466gaJpZM4QGSFE>; > .; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/828#issuecomment-339448378>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGmYfMcECV7ZQzR0tDtg_pRqgv-OTks5sv4-MgaJpZM4QGSFE>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339458114:964,efficient,efficient,964,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339458114,1,['efficient'],['efficient']
Energy Efficiency,"I reduced the active space of the `dmrg-caspt2-n2` testcase (see http://anonscm.debian.org/viewvc/debichem/unstable/psi4/debian/patches/relax_dmrg_caspt2_test.patch?view=markup), and (now?) some architectures show slightly different results, e.g. powerpc:. ```; DMRG-SCF Energy...................................................PASSED; DMRG-CASPT2 Energy: computed value (-107.5036885) does not match (-107.5036855) to 6 decimal places.; ```. See https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=powerpc&ver=1%3A1.0~rc-2&stamp=1464563141 for the full log. This also happened on arm64, i386 (x86-32) and ppc64. The differences are quite small, but mentioning here nevertheless.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222506368:2,reduce,reduced,2,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222506368,5,"['Energy', 'power', 'reduce']","['Energy', 'powerpc', 'reduced']"
Energy Efficiency,"I see the same issue with Psi4 installed on Ubuntu 16.04.1 LTS, compiled with gcc 5.4.0. It is also using ATLAS for BLAS/LAPACK, and my build is a debug build. The following test cases fail:; 77 - cdomp2-2 (Failed); 125 - dfmp2-grad2 (Failed); 127 - dfmp2-grad4 (Failed); 129 - dfomp2-2 (Failed); 131 - dfomp2-4 (Failed); 133 - dfomp2-grad2 (Failed). I'll update as I switch to another BLAS/LAPACK.; Other test cases fail but they might be related to different problems:; 188 - mints9 (Failed); 268 - pywrap-checkrun-rhf (Failed); 269 - pywrap-checkrun-rohf (Failed); 270 - pywrap-checkrun-uhf (Failed); 314 - fsapt1 (Timeout); 321 - python-energy (Failed); 322 - python-curve (Failed); 323 - python-pubchem (Failed); 324 - json-energy (Failed); 325 - json-gradient (Failed)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-277545780:641,energy,energy,641,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-277545780,2,['energy'],['energy']
Energy Efficiency,"I see three different questions here:; 1. Is it possible to carry out MRCI in Psi?; 2. Can we get an error message better than a segfault, or for this not to segfault?; 3. Does the energy error indicate you've landed on the wrong electronic state? If so, how do you land on the right one?. My thoughts:. 1. Reading that paper, it looks like Sherrill and Piecuch did (as you suspected), a two-step computation. First, they did a CASSCF computation. Then they used the orbitals from that computation to do a RASCI computation. Then they fed those orbitals into a RAS computation to do their MRCI. That said, I cannot figure out what keywords they might have used to specify the right excitation levels. None of the keywords in the manual level.; 2. I would expect that the program should be able to accept orbitals this way. Unless another developer more experienced in detci sees otherwise, this looks to me a like a bug. I'll give some time for them to comment before investigating further myself.; 3. Just to be clear, do you have any reason to think that you landed on the C electronic state? If not, you may have landed on a different electronic state entirely. I recommend you look at the section of your SCF computation marked ""Final Occupation by Irrep"". Is that consistent with your desired electronic state? Is there any other low-lying electronic state that occupation could match?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-634602517:181,energy,energy,181,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-634602517,2,['energy'],['energy']
Energy Efficiency,"I see your results, too. What's the overall intent of the `num_frozen_docc` here? Are you wanting plain frozen core or is this preparation for something more complex? Note that we did address frozen core in sapt fairly recently, https://github.com/psi4/psi4/pull/2271, and that solution in itself is making use of `num_frozen_docc`. When I switch your first line to `set freeze_core true`, water is reasonable again. ```; > grep -e ""Final E"" lizsapt2.out ; @DF-RHF Final Energy: -272.35982173084625; @DF-RHF Final Energy: -196.32485863378869; @DF-RHF Final Energy: -76.03485411063548; @DF-RHF Final Energy: -272.35997062909757; @DF-RHF Final Energy: -196.32485863377360; @DF-RHF Final Energy: -76.03485447822362; ```. In SAPT, frozen-core will influence a delta-MP2 correction (irrelevant here) and possibly (I'm not sure if there are conditions) dispersion https://github.com/psi4/psi4/blob/master/tests/sapt10/input.dat#L59-L63 since those are mp2-like terms. You're right that HF energies themselves should be indifferent. Without experimenting much, I venture that the presence of the sapt fc correction and all the wfn passing w/i sapt is causing the bad QC. Possibly `num_frozen_docc` should be disabled for SAPT, if newly fixed `freeze_core=True` works for you. Or else `num_frozen_docc` needs a separate fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1207141235:471,Energy,Energy,471,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1207141235,6,['Energy'],['Energy']
Energy Efficiency,"I suspect that in several of these, the problem is that the downstream; codes need the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:636,energy,energy,636,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['energy'],['energy']
Energy Efficiency,"I suspect we just never got around to adapting the higher order codes. But; maybe @tparker36 has numerical evidence that it's not as big a deal as we; thought?. On Wednesday, March 16, 2016, Lori A. Burns notifications@github.com; wrote:. > Hmm, so either; > - the case of running higher-order SAPT on heavy atoms was never; > considered, in which case the DF_BASIS_ELST code needs copying over; > - the heavy atom failure mode doesn't appear in higher-order SAPT b/c; > higher-order terms compensate or because the larger basis-sets targeted do; > their job (RI > JK for higher-zeta basis sets). Actually, this may have; > been what @tparker36 https://github.com/tparker36 was recalling.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/317#issuecomment-197550795",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/317#issuecomment-197551790:38,adapt,adapting,38,https://psicode.org,https://github.com/psi4/psi4/issues/317#issuecomment-197551790,1,['adapt'],['adapting']
Energy Efficiency,"I tend to agree that turning off the projection in that case is the most sensible. The fock matrix projection in ORCA seems to 'work' in the sense that it convergences to the same result as the default guess (PModel) in some fewer iterations. The guess energy is quite far off, though. General robustness is thus questionable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1972#issuecomment-664961848:253,energy,energy,253,https://psicode.org,https://github.com/psi4/psi4/issues/1972#issuecomment-664961848,1,['energy'],['energy']
Energy Efficiency,"I think I didn't convey what I meant here. . The earlier problem I reported in this issue was that the Ethane LDA energies were not matching, which got resolved by using the correct functional. But I had stated there that the energies only matched up to 6 decimal places. Later on with your and @JonathonMisiewicz 's advice I posted a new script comparing the energies for a different molecule (Decane) with the two programs. There I stated that the energy difference was 35 uH. And then as a side note, I have mentioned that for a smaller Ethane molecule, however, the difference is only 1e-11 H **_using the same script_**. . Edit: Ahh, I didn't notice your edited reply. Yes, I just changed the system. Currently, for my needs the difference in energies is acceptable. But I would definitely keep investigating more systems or different functionals.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1488616136:450,energy,energy,450,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1488616136,1,['energy'],['energy']
Energy Efficiency,I think I found out what is going on. Both ORCA and PSI4 are indeed writing the wrong contraction coefficients. I've done the same computation with Gaussian. Then I loaded the Gaussian log file into molden and wrote out a molden file. That one can be loaded back as an input for molden and it gives the right Mulliken charges:. N 0.0380; H -0.2742; H 0.0121; H 0.2242; Sum of Mulliken Charges: 0.0001. It seems that the the molden format uses exactly the same normalization conventions of Gaussian. (Gaussian prints the same contraction coefficients in the log file when the gfinput option is used.) These number seem to follow the same conventions as the Gaussian94 basis set format. (See the EMSL database for some examples.). I've update the archive file:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. Now it also contains the Gaussian calculation and the molden file made with molden.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60#issuecomment-53039792:318,charge,charges,318,https://psicode.org,https://github.com/psi4/psi4/issues/60#issuecomment-53039792,2,"['Charge', 'charge']","['Charges', 'charges']"
Energy Efficiency,I think I got it in the new PR I am working on right now (#1770). Here are the X2C energies w and w/o the field. I think the difference looks similar to DKH. ```; x2c_0.out: Total Energy = -2.8613053511779594; x2c_p.out: Total Energy = -2.8679759489083452; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1758#issuecomment-566550950:180,Energy,Energy,180,https://psicode.org,https://github.com/psi4/psi4/issues/1758#issuecomment-566550950,2,['Energy'],['Energy']
Energy Efficiency,I think charge comes first among the arguments. https://github.com/psi4/psi4/blob/master/tests/extern1/input.dat#L24 Your input possibly interpreted as no charge.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1757#issuecomment-557979152:8,charge,charge,8,https://psicode.org,https://github.com/psi4/psi4/issues/1757#issuecomment-557979152,2,['charge'],['charge']
Energy Efficiency,"I think in terms of trying not to interrupt a high throughput scenario that we should still return an error in the `OptimizationResult` and set `""success"": ""false""` to warn the user that trying to grab something from `""return_result""` won't work. If we're giving json output back, optking failing shouldn't result in an error being returned to the user. They should be able to keep going naturally. If they try to check `'return_result'` though without checking for success they'd likely get a `NoneType` error or something which could kill whatever scripts they're running. The question in my mind is whether we should actually run a simple energy calc at the requested level of theory an place the `AtomicResult` in the `""trajectory""` so that they have some results to work with.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2971#issuecomment-1570349119:642,energy,energy,642,https://psicode.org,https://github.com/psi4/psi4/issues/2971#issuecomment-1570349119,2,['energy'],['energy']
Energy Efficiency,"I think it's a bad interaction between mixed-cart/zmat + counterpoise. The below triggers it, but it's fine w/o cp or with pure zmat frags. ```; molecule {; He 0 0 0; He 1 0 0; He 2 0 0; --; He 1 2.0 2 90.0 3 176.0; }. basis {; assign He def2-tzvpp; }. energy(""mp2"", bsse_type=""cp""); ```. A bug, but probably one to be warded off rather than hunted down?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325#issuecomment-434799053:253,energy,energy,253,https://psicode.org,https://github.com/psi4/psi4/issues/1325#issuecomment-434799053,1,['energy'],['energy']
Energy Efficiency,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:767,energy,energy,767,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544,1,['energy'],['energy']
Energy Efficiency,"I think that should be sufficient, the differences are nominal enough. On this note can you quantify the energy differences (both absolute and relative) so that we can mention this in the release notes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494793194:105,energy,energy,105,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494793194,1,['energy'],['energy']
Energy Efficiency,"I think the ADC(2) code has some special corrections it can apply, but I; would have thought that those were turned off by default... On Wed, Jun 6, 2018 at 3:52 PM Alexander Sokolov <notifications@github.com>; wrote:. > Hi everyone,; >; > I was testing the ADC(2) code in Psi4 on small molecules and noticed that; > the results I obtained were significantly different from Q-Chem. The SCF; > and MP2 energies match very well.; >; > For N2 (r = 1.2 A) with cc-pVDZ basis, here's a summary of the energies; > for the 8 lowest-lying singlet states from Q-Chem 4.4.1 compared to Psi4; > 1.1:; >; > Q-Chem 4.4.1:; > MP2 ground-state energy: -109.2579498247; > Excitation energy: 8.385211 eV; > Excitation energy: 8.385211 eV; > Excitation energy: 8.832813 eV; > Excitation energy: 9.441957 eV; > Excitation energy: 9.441957 eV; > Excitation energy: 13.868446 eV; > Excitation energy: 13.868446 eV; > Excitation energy: 14.791430 eV; >; > Psi4 1.1:; > MP2 ground-state energy: -109.25794982519506; > -> 1 A state : 0.3113289 (a.u.), 8.4716885 (eV); > -> 2 A state : 0.3113289 (a.u.), 8.4716885 (eV); > -> 3 A state : 0.3343892 (a.u.), 9.0991916 (eV); > -> 4 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 5 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 6 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 7 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 8 A state : 0.5127312 (a.u.), 13.9521243 (eV); >; > The Q-Chem energies agree with my standalone code. For N2 with STO-3G; > basis I simply get zero excitation energies with Psi4:; >; > ==> ADC(2) Computation <==; >; > -> 1 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.3864160 (a.u.), 10.5149136 (eV); > ┆ ┆ Occ Vir Coefficient; > ---------------------------------------------; >; > Converged in 2 iteration.; > Squared norm of the S component: 1.0000000; > The S vector is rotated up to 90.000 (deg.); > #WARNING: Strongly rotated from the CIS state!; >; > -> 2 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918:629,energy,energy,629,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918,20,['energy'],['energy']
Energy Efficiency,"I think there might be advantages to modifying nuclear charges (e.g. to compute interactions with point charges, nuclear-nuclear repulsion, etc.) Perhaps we could have an effective or ecp nuclear charge stored for each atom.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681#issuecomment-295538468:55,charge,charges,55,https://psicode.org,https://github.com/psi4/psi4/pull/681#issuecomment-295538468,3,['charge'],"['charge', 'charges']"
Energy Efficiency,"I think this is causing jobs to die on long-running remote servers:. ```; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); ^^^^^^^^^^^^^^^^^^^^^^^^; File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 193, in scf_initialize; self.initialize_jk(self.memory_jk_, jk=jk); File ""/app/.pixi/envs/default/lib/python3.12/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 128, in initialize_jk; jk.initialize(); MemoryError: std::bad_alloc; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123:170,energy,energy,170,https://psicode.org,https://github.com/psi4/psi4/issues/3207#issuecomment-2442428123,2,['energy'],['energy']
Energy Efficiency,"I think you're confusing NR-root finding algorithms with instability following. Your answer makes sense only in the context of a different problem. In the instability following problem, we start at a saddle point and compute both a negative eigenvalue of the orbital Hessian and the corresponding eigenvector. The eigenvector gives us the search direction. In the search direction, an orbital instability analysis alone gives us a second-order Taylor expansion of the energy that is in the shape of a parabola. We are starting at its _maximum_ (because the eigenvalue is negative), and it possesses no minimum. The eigenvalue magnitude gives us the parabola steepness, but neither I nor Psi4 have any idea how to use that information to give us a step size. Hence the need for a user-supplied step length at present. The proposal here is that we use the energy and gradient information at another point along the line to fit the third and potentially fourth terms of the Taylor expansion, so we get a function that has a chance of having a minimum.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045#issuecomment-1706714963:468,energy,energy,468,https://psicode.org,https://github.com/psi4/psi4/issues/3045#issuecomment-1706714963,2,['energy'],['energy']
Energy Efficiency,"I threw a +1 behind lori's comments about checking the SCF energy in the test, but otherwise. LGTM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-265447202:59,energy,energy,59,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-265447202,1,['energy'],['energy']
Energy Efficiency,"I tried freezing the cartesian coordinates of the dihedral atoms and it seems to work. The optimization converged within 10 iterations. I also used `consecutive_backsteps = 2`. However, since the bonds and angles can't relax, the energy of the converged structure is higher. I'll try your approach of first optimizing with a lower level of theory. . ```; frozen_string = """"""; 4 xyz; 10 xyz; 11 xyz; 6 xyz; """"""; set optking { opt_coordinates = cartesian; frozen_cartesian = $frozen_string; consecutive_backsteps = 2; geom_maxiter = 250; print_trajectory_xyz_file = True }. optimize('MP2/aug-cc-PVTZ'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344630452:230,energy,energy,230,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344630452,1,['energy'],['energy']
Energy Efficiency,"I tried this; ```python; psi4.set_options({""REFERENCE"": ""uhf"", ; ""guess"": ""SADNO"",; ""e_convergence"": 12,; ""basis"": ""cc-pvdz"",; ""guess_mix "": True,; }); ```; and got this; ```; ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities' Natural Orbitals via on-the-fly atomic UHF (doi:10.1021/acs.jctc.8b01089). -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 1 1 1 0; -------------------------------------------------------; Total 10 10 1 1 1 0; -------------------------------------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -0.82625214180248 -8.26252e-01 1.90467e-03 DIIS; @DF-UHF iter 2: -0.82648067782379 -2.28536e-04 2.30464e-04 DIIS; @DF-UHF iter 3: -0.82648407824247 -3.40042e-06 4.94088e-07 DIIS; @DF-UHF iter 4: -0.82648407827432 -3.18503e-11 3.29102e-08 DIIS; @DF-UHF iter 5: -0.82648407827446 -1.41664e-13 5.92889e-13 DIIS; ```; There seems no mixing operation and the resulting energy is different compared with GWH:; ```; ==> Pre-Iterations <==. SCF Guess: Generalized Wolfsberg-Helmholtz. Mixing alpha HOMO/LUMO orbitals (1,2). -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 1 1 1 0; -------------------------------------------------------; Total 10 10 1 1 1 0; -------------------------------------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -0.99581369630316 -9.95814e-01 5.27581e-03 DIIS; @DF-UHF iter 2: -0.99858566020747 -2.77196e-03 9.67632e-04 DIIS; @DF-UHF iter 3: -0.99871839991550 -1.32740e-04 1.28446e-04 DIIS; @DF-UHF iter 4: -0.99872134564656 -2.94573e-06 6.44177e-06 DIIS; @DF-UHF iter 5: -0.99872135071512 -5.06856e-09 1.24087e-06 DIIS; @DF-UHF iter 6: -0.99872135104152 -3.26405e-10 1.50846e-07 DIIS; @DF-UHF iter 7: -0.99872135104495 -3.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2410#issuecomment-1016645676:653,Energy,Energy,653,https://psicode.org,https://github.com/psi4/psi4/issues/2410#issuecomment-1016645676,1,['Energy'],['Energy']
Energy Efficiency,"I understand, but my logic in that case was that the Psi vars would appear exactly like the associated quantity in the output file, just to decrease possible confusion arising form all these different quantities.; If you'd prefer to have `ENERGY` spelled out for homogeneity reasons in the Psi vars, just let me know and I'll make the change, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253120506:239,ENERGY,ENERGY,239,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253120506,1,['ENERGY'],['ENERGY']
Energy Efficiency,I updated the `energy` function docstring to include the boolean option of write_orbitals,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190#issuecomment-873261074:15,energy,energy,15,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-873261074,1,['energy'],['energy']
Energy Efficiency,"I uploaded my code, psi4 running log and result analysis to google drive: https://drive.google.com/file/d/1yifEuHhVXDsQh30toR0C69HzhE8rYqpn/view?usp=sharing. > ""I mean, a correlation coefficient of 0.62 is ridiculous. The calculations really should be nearly identical. Are you sure the molecular charges and multiplicities are set correctly?"". Conformer benchmark provides the charge of each molecule, multiplicity is set to 1 by default. (Psi4-Test/main.py line 63) ; @PeterKraus . > ""Set d_convergence. The default is 1e-6. You could set it to smaller numbers and see if the correlation improves. If you set it too low, the equations may not converge. You will see this problem if you try to set it below 1e-12, but you will probably see it at a larger number."". I tried to set d_convergence to 1e-7, but the calculation results are the same as the results of d_convergence=1e-6. The file I uploaded contains the running logs of both. (Psi4-Test/psi4_energy.csv, Psi4-Test/psi4_energy_tight.csv, Psi4-Test/conformer_benchmark/psi4_log); @JonathonMisiewicz . > ""I've only skimmed paper associated with the benchmarking data, but it looks like they used wB97X-D3/def2-TZVP, not wB97X-D/def2-SVP. They only refer to wB97X-D once, and use wB97X-D3 everywhere else. In section 4.2, they say that only B3LYP-D3BJ and PBE-D3BJ were selected to be tested with def2-SVP."". The file I uploaded contains the calculation results of wB97X-D3/def2-TZVP and wB97X-D/def2-SVP. (Psi4-Test/psi4_energy.csv, Psi4-Test/psi4_energy_tight.csv, Psi4-Test/conformer_benchmark/psi4_log); @ajs99778 . > ""Are you able to reproduce the benchmark energy for any conformer using wB97X-D/def2-SVP or wB97X-D3/def2-TZVP in ORCA 4.0.1? "" ""Also, ORCA 4.0.1 is several years old. I don't know if ORCA had any bug fixes/changes over the years that would impact their results, but you might want to compare to ORCA 5.0.1 energies as well."". Unfortunately, I don’t have ORCA license, so I can’t use ORCA.; @ajs99778",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-973862383:297,charge,charges,297,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-973862383,3,"['charge', 'energy']","['charge', 'charges', 'energy']"
Energy Efficiency,"I was able to get the CHNO molecule to converge to something reasonable with pbe0/def2-TZVPPD/pcm by setting `dft_bs_radius_alpha 5.0`. Doing this with the I-containing molecule works partly, but I found that I was only able to get reasonable MBIS charges when switching to the LRC functional wb97x/def2-TZVPPD/pcm. Simply adding d3bj onto pbe0 did not seem to work. I was also able to reproduce the issue with multiple DFT methods; HF seemed ""stable"" other than some convergence issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343:248,charge,charges,248,https://psicode.org,https://github.com/psi4/psi4/issues/3135#issuecomment-2407274343,1,['charge'],['charges']
