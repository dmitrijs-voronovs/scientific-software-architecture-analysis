quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'll make sure the ._ files don't appear. (Grumble.) I've changed to the LD_LIBRARY_PATH as described above. Can you try ""rm ._*"" and then see if it works? I can also send you a 2.2 release candidate tar if you like. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793255,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm actually going to remove this file for now -- it needs updating anyway to work with C++ streams. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786081:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786081,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm bumping this to a higher priority. Do we match the InChI test set now?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm converting this to a feature request. I think Noel's comment is useful, but this is going to take some work. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm going to mark this as closed pending further comment from the submitter. If no comment is heard within 14 days, this will be closed as ""Works for Me"" (and others). If you have problems installing, please let us know on the mailing lists. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780372:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780372,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this ""Pending"" based on Tim's fix. Noel, if this is still a problem, please comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780945:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780945,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this ""pending"" further comment from the submitter. I believe this has been fixed in the 2.2. development. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780836:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780836,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed -- the obgen / OBBuilder tools are in great shape. There are certainly issues remaining, but we should take those up as new bug reports. This feature request is closed as finished by Tim. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed -- this is confirmed to be fixed in 2.2.0b4 and SVN trunk. Chris Morley contributed the fixes. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780419:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780419,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed then. I can't pin my finger on the fix, but several changes went into PDB chains. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed, as it duplicates the next example. I'll make more comments there. Open Babel does not support the disconnected SMARTS form:; http://openbabel.sourceforge.net/wiki/SMARTS. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed. As Chris mentioned, it's easier to handle this via e-mail, rather than reporting a bug for any error you find. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed. It would be more trouble than it's worth. It might be better to take the SWIG-generated files out of the SVN repository, but for now, there's no great reason to do this splitting. Worth revisiting in the 3.0 effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this to be closed in 2 weeks if there aren't any further comments. As far as I can tell, most if not all of these requests have been addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm re-opening this issue, as discussed on the mailing list. I think this is not a quick fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780669:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780669,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. If someone wants to implement code to override the C library, please do. That's a better solution. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. If there aren't any further comments by the original submitter, I will close this in 2 weeks. For one, there are too many issues in one bug report. These really need to be tracked separately. (For example, PDBXML is something that should be requested in the file format request tracker, not listed as a bug here.). If you can give some specific examples of PDB files that exhibit this behavior, please let us know. As far as molecules with more than 2^16 atoms, that's a limitation in the 2.0.x releases and has been lifted in the 2.1 development betas. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. In cases like this, it's extremely helpful to have an example file. However, my guess is that you're using MOPAC 2007? If so, I suggest trying the recent 2.1 beta snapshot (2.1.0b7) which contains a fix for this:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=494609. If you're not using MOPAC 2007, please add an example file to this bug report so we can debug more completely?. Thanks very much!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Is this now a bug we can close? Or is this the master bug report for issues with VS2008? In the latter case, I will keep it open until you report success. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781169,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Is this now fixed? I'm going to mark this as ""pending,"" since I understand that SVN trunk now fixes this. Noel, if it's still a problem, please post a comment as to what needs fixing and we'll reopen the bug. Otherwise, this should close within 2 weeks as fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I don't have problems saving to CML. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I think this should have been resolved with the fixes to ReadString and ReadFile. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. It's possible, although somewhat unlikely that it's a PPC-only binary. However, the binaries were compiled on PowerPC under Tiger. I'm not sure if libxml2 was Universal on Tiger PPC systems. I will upload a binary package of 2.2.0b5 snapshot which should be completely universal. If you'd like to try that out, I would greatly appreciate knowing if it solves the problem. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780735:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780735,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Judging from the mailing list and the current SVN trunk code, this has been fixed. I'm marking this ""pending"" further comment, otherwise it will close in 2 weeks as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Judging from the mailing list, this is now resolved, correct? I'm marking this bug as ""pending"" further comment from Noel or Nick. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781057:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781057,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Marcus, this seems like a good request for 3.0, correct?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. No, this isn't a good MOL2 file. There aren't any atom types. I'm not sure why we don't have a default oxygen type for this kind of behavior, but any native Mol2 file (or one from Open Babel) will have C.ar or C.3, etc. in the final column. This should now be fixed in the 2.1 release branch for 2.1.1, SVN revision 1989 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Not surprisingly, switching the call depth from 20 to 8 (and eliminating the duplicate calls to CheckAromaticity) creates a *huge* speed improvement. Running on a C80 cage:; recursion depth 20: 3m 13.4s; recursion depth 8: 5.2 s (!!). Looking at the code, this has existed from the original Open Eye code. I don't see the purpose of a 20-atom aromatic cycle. It seems reasonable to set this to something smaller. I'll e-mail the list.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. OK, there's not a great way to deal with this -- many people want residue information in the mol2 file. In your case, you want to insure it just has ligands. So there's now a new flag for mol2 format -xl which will just cast out any residue information, e.g. babel babel_test.sdf -xl babel_test.mol2. This is now in the SVN trunk (revision 1890 or later) and I'd be happy to send you a patch. It will obviously also be in the 2.1 release when it comes out shortly. I'm marking this ""pending"" further comment from you. If there isn't any within 2 weeks, this will close automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. OK, this will now be fixed in SVN -- the BFS will also take a starting atom index. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810913:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810913,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. One solution would be to change the logic which adds the newline filter. Right now, it checks if the input format is XML or binary. I guess that it can also check to see if it's a ""database"" output format (e.g., fastsearch). The downside is that input with ""incorrect"" line endings won't work in the fastsearch format (imagine indexing a set of MDL files with DOS line endings). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715,2,"['Log', 'log']","['Logged', 'logic']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Part of the effort to finalize 2.2 is a merger of the CAN and SMI formats for output. The SMI will use the newer (and less buggy) canonical output, but will not assign canonical ordering. This should finally solve this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Please file another bug about the Makefile.PL that's a separate issue. If you want to help, please run Valgrind with the tests. I can reproduce this with other computers. What version of SWIG are you using?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780270:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780270,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report, it was good to know that newline was affecting other formats too. This seems to be fixed with Chris's new lineend.h code. Update to revision 1751 or later. I'm marking this closed, pending further comment. Otherwise, it will close within 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report. This will now be fixed in 2.2.0b7 and future versions!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the heads-up. I've added man pages to the 2.2.0b4 snapshot and these will be in future releases. I'll also make sure this is updated for the new tools in 2.2. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780445:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780445,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the patch! It's now in SVN trunk, revision 2311 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/735#issuecomment-281780540:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/735#issuecomment-281780540,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the patch, this is now in the SVN trunk for OB-2.2. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779770:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779770,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the report! That's now fixed in the SVN trunk for 2.2 (revision 2611 or later). I can send you a patch if you like. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/746#issuecomment-281780777:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/746#issuecomment-281780777,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the suggestions! I'm glad to know that obprop is getting some use. This is now fixed in the SVN trunk, revision 1889 and later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks so much, this is now going into the SVN trunk for 2.2. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/784#issuecomment-281793296:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/784#issuecomment-281793296,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Noel O'Boyle, this should now be fixed -- these formats will not be compiled unless Boost or GCC4 is available. I'm marking this closed pending confirmation from Rajarshi. If no comment is made within 2 weeks, we'll assume it's properly fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780201:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780201,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Patrick Spendrin, Christian Ehrlicher and the KDE/Win32 and KDE-Edu folks, The 2.2 version has CMake build scripts which work on UNIX and Windows platforms. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch for adding PSA, logP, and MR to the code. This is now fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch, conformer searching exists and is robust in the 2.2 SVN trunk. This feature request is marked closed as being fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks. This is fixed in the SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781088:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781088,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The 45 degree rule comes from PDB and other files, where multiple atoms appear to indicate possible crystallography errors. I'm open to a broader suggestion of the angle issue... You're certainly correct about the current code. It should remove short bonds, say less than 30 degrees, and then check for long bond issues. What do you think?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/745#issuecomment-281780763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/745#issuecomment-281780763,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. The bug is actually already fixed in SVN trunk (revision 2329) along with a new test in the aromatic set. http://openbabel.svn.sourceforge.net/viewvc/openbabel?view=rev&revision=2329. Thanks for the bug report and the analysis. It's an important fix. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/742#issuecomment-281780683:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/742#issuecomment-281780683,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The decision to use ""openbabel-2.0.pc"" was unfortunate, although it did match use from libraries like GNOME, etc. For version 3, we will no doubt use openbabel-3.pc instead. There's little we can fix at this point, aside from adding symlinks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The error with the SVN snapshot was unrelated, but I appreciate the freelocale bug report too. This appears to be widespread, so I changed the implementation. Please let me know if the SVN trunk fixes your OB_HASH_BOND problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The issue is that the phmodel code isn't run unless you've set AutomaticFormalCharge -- but SMILES have manually-defined formal charges. To make a conservative change, I've enabled this to work only for SMILES for now. This should be fixed in SVN trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779848:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779848,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There is now a Mac binary for 2.2.0b6. Please try this -- if it does not work, please post a comment here. Otherwise I'm marking this bug as fixed, ""Pending"" any clarification from you. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There were some issues with the Sybyl atom type ""Lp"" which have been resolved in SVN (revision 1824 or later). I don't know if this is your problem. Certainly if I run the uncompressed file through Babel, I get 85 molecules converted. So I'd wonder if it's some sort of error in pybel?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There's no such thing as a ""c4"" type in Sybyl. However, I do appreciate knowing about the partial charge field in HIN. This is now fixed in the SVN development trunk, and part of the 2.2.0b5 snapshot and future releases. If you're willing to build from source code, I can certainly supply a patch. Thanks very much!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/748#issuecomment-281780814:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/748#issuecomment-281780814,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. These are already preserved via OBPairData, but they do not output in the PDB file yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This appears to work now. I tried running the code and ""print len(mols)"" gave 85. I'm marking this closed. If you still seem to have problems with Pybel, let's create a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This has been fixed in the SVN trunk based on changes contributed by Steve. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/700#issuecomment-281779901:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/700#issuecomment-281779901,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed, I'm marking this closed. The current SVN trunk (revision 1800) certainly fixes this and will be incorporated into version 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has now been fixed in the development SVN trunk for 2.1.0b7 (and of course 2.1 in general), as of revision 1838 or later. Thanks to Chris for solving the implicit valence for Si.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate as Noel mentioned. I'm marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate bug report of 1720529. This bug is fixed in the 2.1.x branch and will be in the 2.1.1 upcoming release. The patch is found here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of 1272942. I'm closing this one. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497#issuecomment-281810932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497#issuecomment-281810932,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of PR#1823363 and is fixed in the SVN development code for 2.2. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/753#issuecomment-281780896:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/753#issuecomment-281780896,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of the file format request PR#1764738; http://sourceforge.net/tracker/index.php?func=detail&aid=1764738&group_id=40728&atid=447448. Since this really belongs in format requests, I'm marking this closed as a duplicate. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate report and has been fixed in the 2.1 SVN code. The 2.1.1 release will come out shortly. In the meantime, I suggest trying the 2.1.1 snapshot:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. I can confirm that these SMILES translate perfectly in the 2.1.1 development code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a known bug in the snapshot which will be fixed in the 2.2.0b3 snapshot. Thanks very much,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780240:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780240,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a pretty old release, but many of the Mac packages will check to see if you already have Open Babel installed. In your case, you did. The Mac packages also don't include source, so I suggest either downloading the tarball or looking at the web interface: http://openbabel.svn.sourceforge.net/. I'm marking this closed as ""Work for Me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/722#issuecomment-281780301:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/722#issuecomment-281780301,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a strange bug. If I run the SMILES -> SMILES conversion:. echo ""C[Si](C)C"" | tools/babel -ismi -osmi; C[Si](C)C. If I add hydrogens:; echo ""C[Si](C)C"" | tools/babel -h -ismi -osmi; [CH3][Si]([CH3])[CH3]. We'll have to carefully check the implicit valence for Si. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780665:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780665,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a strange case -- one of the displacement vectors is <0, 0 , 0>. I'm decreasing the priority on this one. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/757#issuecomment-281780992:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/757#issuecomment-281780992,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1663779. We call SSSR too frequently, and these calls are extremely slow and costly on fullerene-type structures. Ring and aromaticity perception need to avoid SSSR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1784204. It is fixed in SVN trunk, revision 2576 or later. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781023:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781023,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is currently supported via the descriptor framework in 2.2. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is currently underway, thanks to Tim Vandermeersch in the SVN trunk for 2.1. The tools/obgen program doesn't solve everything, but it does include a fair amount of linear and small ring compounds. Tim has also added code for MM2 molecular mechanics evaluation. See SVN revision e.g., 1682 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN revision 2500 or later for 2.2.0b6. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780881:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780881,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk (revision 2286 or later). Thanks very much!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780477,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk -- which uses the canonical SMILES output for SMILES. I'm marking this closed pending further comment from Rajarshi. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk, revision 2576 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the 2.1 branch and will be included in the 2.1.1 release -- a new ""-o"" flag was added to obminimize. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the latest SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721#issuecomment-281780286:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721#issuecomment-281780286,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the latest SVN. You evidently were trying to compile from the 2007-11-15 snapshot, which did not include builder.h. (This is, in fact, the very definition of snapshots -- they essentially are test releases to make sure the release process works.). The next snapshot, on 2007-12-01 will include builder.h. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779820:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779820,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed now. . I'm marking this pending further comment from Chris. Otherwise, it will close as being fixed in 2 weeks automatically.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is more of a feature suggestion... Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810854:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810854,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now be fixed in the current SVN trunk (revision 1867 or later) for 2.1.0b7 and later releases. It certainly takes a *long* time in some cases to convert these files, since the molecules are huge. But it does complete. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now duplicated by #1617838. Since that has a bit more information, I'm closing this as a duplicate. Please file any comments, debugging info, etc. in that bug entry. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in SVN revision 2573 or later. As suggested by Chris, there is a parameter to control whether newlines are turned into spaces. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781128:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781128,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in SVN trunk, set for OB-2.2.0b6 and later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch and will be included in the upcoming 2.1.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch for 2.1.1, as of SVN revision 1997 or later. I'm marking this ""pending"" any further comment from Noel. Unless he comments that the bug still exists, this report will be auto-closed as being fixed in 14 days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.2 SVN trunk and will be part of the development documentation when we re-generate it. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the SVN trunk (revision 2329 or later). A new molecule (c1[cH][cH]ccc1) is being added to the aromatic test to ensure this bug does not regress. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/740#issuecomment-281780661:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/740#issuecomment-281780661,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the SVN trunk for OB-2.2. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the Subversion 2.1 branch, revision 1904 or later. Thanks for the report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the development SVN trunk, 1837 or later. The fix will go into 2.1.0b7 and of course 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now possible using SetCurrentConformer. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1494#issuecomment-281810874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1494#issuecomment-281810874,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is present in pretty much every quantum chemistry file format as well: GAMESS, MPQC, MOPAC... I believe I fixed all of them by adding in a test if the molecule has 0 atoms -- in these formats, that's invalid, so the format will return false. This is now fixed in the 2.1 branch, as of revision 1999 or later and will appear in the 2.1.1 release shortly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is strange. It doesn't even call MDLFormat::ReadMolecule() in this case. So I'm not sure what part of OBConversion is getting called. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781117:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781117,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is supported via the descriptor framework in 2.2. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This isn't a bug, the code is working as designed. The flag indicates whether or not the total charge has been explicitly set. This draws a distinction between a total charge that Open Babel perceives, which assumes that all the formal charges are set correctly (not always true) -- and a total charge set by the user or by code (e.g., some file formats). If you'd like to discuss the behavior, the best place is the openbabel-devel mailing list. As for this bug report, I'm closing it as ""Works for Me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/714#issuecomment-281780142:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/714#issuecomment-281780142,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This isn't a bug. The flag is used *ONLY* if the total charge is set explicitly. We need to separate between a total charge we calculate -- which might be correct if all the atomic formal charges are set correctly, and a total charge which is defined by the user or the code (e.g., some file formats). So the code is correct as-is. If you'd like to discuss this, the proper place is on the openbabel-devel mailing list. I'm marking this bug closed with a resolution of ""Works for Me.""; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/713#issuecomment-281780134:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/713#issuecomment-281780134,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This looks OK to be from trunk. I'm marking this closed pending further comment from the submitter -- the aromaticity looks good as assigned in Avogadro right now. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779935:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779935,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This looks a bit more general, actually. I'm attaching two more 3D chiral files which also appear to drop chiral info. SMILES (0D) and 2D files appear to retain chirality, but does the canonical SMILES code drop 3D chiral information?. -Geoff; File Added: A.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This now builds:; http://koji.fedoraproject.org/koji/getfile?taskID=693470&name=build.log. I'm marking this particular bug (building) closed. Obviously, if there are further problems with the Fedora builds, we should address those in other bug report threads. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780581:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780581,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This now does not crash, although CDXML still does not support reaction conversion. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This seems to be fixed with recent changes. I'm going to mark this particular bug closed. If more InChI stereo bugs crop up, we should create new bugs and fix them as needed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the SVN trunk, revision 1891. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the current SVN trunk, revision 1829 or later. I'm marking this 'pending' any further comments by Craig. Otherwise, it will close as being fixed in 2 weeks automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved at this point. Please try the SVN trunk, revision 1765 or later. The change sets the recursion depth cutoff to 14, based on discussion with Henry Rzepa. I'm marking this as fixed. Without further comment in the next two weeks, it will be automatically closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved by PR#2557 with internal locale settings in Open Babel. I'm marking this bug as fixed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be available in SVN trunk. I'm marking this pending approval commentary from Noel. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810908,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk revision 2509 or later. Can you confirm?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780264:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780264,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk thanks to Tim. I'm marking this ""pending"" further comment. If you can, please try the SVN trunk command-line and let us know the status of this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779845:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779845,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the SVN code -- the chemdrawcdx code now returns false if it's called and we're at the end of the file. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780038:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780038,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the SVN trunk, revision 1863 or later. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the development code (SVN trunk, revision 2578 or later) and will be in both 2.2.0b7 and 2.2.0. Thanks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now, in fact, be fixed in SVN trunk, revision 2577 or later (I hope). I'm a little worried because it seems like Noel's previous commit did not ""stick."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781281:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781281,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This took some time to diagnose. It appears that the ConnectTheDots() was deleting existing bonds. I've modified the 2.2 trunk, which appears to fix this problem. I'm marking this fixed pending further comments. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This was discussed on the mailing list. Problem 1 is fixed, and Item 2 isn't a bug. I'm marking this closed as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780061:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780061,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This was fixed thanks to the contributed patch, but never closed. Use SVN trunk, revision 1583 or later). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This works for me -- I get ""C"" as the output from ""[CH4]"". Can you get me some sort of crash backtrace?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793121:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793121,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This works just fine with the 2.2 development code in SVN. I would be happy to send you a source snapshot if you wish. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780651:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780651,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Tim could you look at this? I think the suggestion is a good one -- provide physiological protonation for the amino acids into phmodel.txt. If you need suggestions about how to use phmodel, please let me know. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Unlike Craig, it looks to me like the problem is in typer.cpp. Using GDB, I see a long track of calls to OBAromaticTyper::TraverseCycle(); (specifically line 460). This starts out with a recursion depth of 18, which is why it takes a long time. The problem seems to be from the call to CheckAromaticity with a depth of 20. (from typer.cpp line 421). I'm not sure why there's a need for the larger recursion depth. There's a previous call to check for 5-6 membered aromatic rings. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Well, I've fixed *this* bug, but the patch creates other problems. So it'll take a bit more work to fix completely. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. While I agree that consistency is a good aim, I'm going to move this to ""Feature Requests"" rather than an explicit bug. I believe the difference is simply that the two files came from different sources and Chris attempted to retain the formatting for merging in future revisions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Without the original file, this is absolutely impossible to debug. I'm marking this ""pending"" further comment from the original submitter. If none is made in the next 2 weeks, this issue will close. (There's already been over a week since the original submission and my reply.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Works for me with SVN trunk. Can you try with a recent snapshot?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, this is fixed in the 2.2 code. I'm marking this closed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793321:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793321,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Your report doesn't help us diagnose the problem much. I can guess that you're trying to install from source, and you're using autoconf.; * What platform are you using?; * What compiler are you using?; * What exactly is the error you receive?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793345:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793345,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Actually the Makefile *is* removed prior to release -- the scripts/ Makefile runs a ""distclean,"" so the Ruby makefile is, indeed gone. False alarm,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Chris later went on to implement this in the 2.2 descriptor / filter framework. This is now closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Closing this. (Tim, you can certainly do this too -- just make sure to set the appropriate options under ""Status"" and ""Resolution.""). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Craig fixed this himself, although he evidently forgot to close the bug report. This is fixed in the current SVN trunk, revision 1808 or later. For the reported bug, -ocan now supplies:; O/N=C(\C)/C(=N\O)\C NSC 9. Which is, in fact, correct by my reckoning. (Neither Daylight depict or ChemDraw accepts this SMILES.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. File Added: 9.pdb. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. File Added: log2.txt. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Fixed, as of revision 1807. This includes some code to correct for a variety of mis-typed Sybyl atom types, particularly from the MMFF94 file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337,4,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm closing this -- it's possible to do, but not high on anyone's interest list when there are actual builder programs like Avogadro with copy/paste, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm not concerned with ""correctly minimizing."" I'm looking at the strange behavior between step 45 and 46. It seems to pick up OK after that point. Yes, I'm using the current SVN and default options to obminimize:. tools/obminimize 9.gpr; tools/obminimize -n 47 9.gpr. In step 46, the g1g1 of atom 9 is small (0.025), so g2g1 explodes to 13.5, while everything else is around 1 or less. I'm wondering if we need a trust radius on the line search -- i.e., never make such a huge step like that. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Interesting. Further debugging implies that this is a problem with Mol2 and XML formats. SDF, PDB, XYZ... these formats work correctly. So perhaps it's an issue with seekg(). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Isn't it possible to have some solution in Pybel itself -- a closefile method?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Isotopes are now handled correctly.; I don't agree with the CH4 expectation -- there are 4 explicit hydrogen atoms, so there should be 4 matches. OB is correct here. One remaining issue.; False 3 4 [!c] c1c(C)c(N)c[nH]1. Again, the H is explicit, so it matches here. This should be resolved now in SVN trunk, so I'm marking this closed pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/771#issuecomment-281781263:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/771#issuecomment-281781263,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Linking seems to work now. In the future, I suggest killing all object files with ""make clean; make"". -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Perfect! Thanks for the suggestion. Revision 1868 seems to fix everything. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Point group symmetry has now been added to the SVN trunk for 2.2. Space group code has also been added (although not space group recognition). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. The code isn't pretty, but it does copy OBChiralData now. (I'd try a subroutine to clean things up, but it would need to be passed a lot of parameters. Unfortunately from OBGenericData, it's impossible to get a 'parent.'). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This appears to have been fixed with the latest SVN trunk and the new OBFFLog() function. I'm marking this ""pending"" further comments (e.g., from Tim). Otherwise it will close automatically in 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This bug is fixed on the SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This has already been accomplished by Chris Morley for the 2.2 code. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the SVN trunk -- the new code checks to make sure the energy is converged below a certain threshold (e.g., 1e-6 as the default) and will not take any further steps. I'm marking this as ""pending"" any further comment (e.g., from Tim). If not, it will automatically close in 2 weeks as fixed. -Geoff . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the current SVN trunk, including inclusion of the new residue.cpp test. The problem was reusing bitmasks for storing visit information. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed, at least for random.pdb and the selection of PDB files here. It would be a good idea to run the PDB parser over 400-500 random PDB entries and make sure the atom types come back correctly.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in SVN revision 2497 or later. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/734#issuecomment-281780522:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/734#issuecomment-281780522,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the SVN trunk. (I can't remember which change fixed this particular bug.). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the current SVN trunk.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the latest SVN revision. Update to r 1758 or later. The force field code is improving steadily, thanks to Tim Vandermeersch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now fixed in the SVN branch for 2.1, revision 1977 or later. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. As far as I can tell, the Cmake files are completely up-to-date in the SVN trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/730#issuecomment-281780468:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/730#issuecomment-281780468,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. The partial charges are tagged as coming from Gasteiger or Mulliken. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now incorporated into SVN trunk, so I am closing this feature request. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1496#issuecomment-281810930:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1496#issuecomment-281810930,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is really a feature request. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is, in fact, an issue with seekg. The zipstream code doesn't properly handle seekg -- the bug also exists in 2.0.x. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This should be fixed in SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/769#issuecomment-281781211:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/769#issuecomment-281781211,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in SVN trunk, revision 2637 or later. Noel, can you confirm the fix?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed, as of SVN revision 1787 and later. The bug was largely discovered during development and debugging of Avogadro. I'm marking this ""pending"" in case there's need to comment and re-open the bug. Otherwise it will close in 2 weeks as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This turned out to be a duplicate of PR#1727333 and is fixed in SVN trunk and 2.1 branch. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Well, the patch in SVN trunk, revision 1880 seems to solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. While this isn't in obgrep, filter support is in babel (in the 2.2 snapshots). This is a duplicate of the request for a title filter, which is now implemented thanks to Chris Morley. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=25678; Originator: YES. OK, thioamides are apparently N.am too... or used by at least one other program too... :(. I'm happy if this stays closed as invalid. Original comment by: @egonw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/807#issuecomment-281793652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/807#issuecomment-281793652,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=25678; Originator: YES. Sorry, for not browsing the list!. This was on Linux. Original comment by: @egonw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793614:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793614,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=28668; Originator: YES. It works also with v2.0.2 on other OS as Debian Etch (I'm using native OB 2.0.2 from Debian Etch).; I've compiled OB 2.1.1 on Debian and it works fine. I've submitted a bug report to Debian. I'm sorry, I did not have time to look in more details this bug, as I wanted to release Mychem today. It would be fine if someone using Debian Etch could test the file conversion. Original comment by: @Pansanel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=349408. Yes, doing. babel test.sdf.gz test.smi . works fine. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=349408. You're correct in that the code is probably stopping when it; reaches a molecule it can't parse - if I print out the count; of heavy atoms, I only get values for 30 molecules. I tried the code you suggested and it runs to completion.; Surprisingly, it did not hang on the 49th molecule. Also in my initial report I mentioned that there were 6824; total SMILES - that should be 6284. So it is failing on 16; SMILES; I've listed the offending SMILES below:. b1ccccc1; b1occc1; b1ooccc1; c1cc[bi]cc1; c1ccc(cc1)c5c(c2ccccc2)c(c3ccccc3)[si](c5(c4ccccc4))(C)C; c1ccc(cc1)c6c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c6(c5ccccc5))C; c1ccc(cc1)c7c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c5ccccc5)c7(c6ccccc6); c1ccc(cc1)[ge]2(cccc2)(c3ccccc3)(c4ccccc4)(c5ccccc5)(c6ccccc6)c7ccccc7; c1cc[ge]cc1; c1cc[sb](cc1)(C)(C)C; c1cc[si]c1; c1cc[sn]cc1; c1cc[te]c1; NCCCC[si]1cccc1; o1o[si]1; [Rf]. I realize that some of them are probably chemically wrong (I; don't think Si or Sn are aromatic) but it would be useful if; the molecule was constructed and some sort of warning was; available/produced. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=349408; Originator: YES. File Added: melanocortin-2007-17-16.cdx. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=349408; Originator: YES. This works for me - the bug can be closed. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. I will try with 2.1.* and get back to you.; As for the input file, I use what's in test/cmltest/. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Just for the record, I use gcc version 3.3.5 (propolice). Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Seems reasonnable, thanks. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=542993; Originator: YES. openbabel-2.1.0b4 compiiles and work fine.; It does not core dump anymore :); But this is beta software and I'd rather use the latest stable release so I need to know where this error is coming from. Original comment by: ajacoutot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=54358. Hi Tharun, . I'm also not familiar with the standards of the OpenBabel; system. I'm just following the discussions relevant for the; CDK project. ; So I will not be able to help with respect to OpenBabel; peculiarities. ; But if you need help with the algorithm itself, I can at; least explain in detail what I did for CDK. Cheers, Chris. Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=54358. Is anyone aware of the publications on which this extension; could be based? Well-informed circles expressed to me their; well-founded opinion that only very little has been; published on the Gasteiger PI charges and that this little; documentation is not sufficient to repeat the work. Original comment by: steinbeck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. Here are the numbers from readelf (.toc1 size, all numbers in hexadecimal, the maximum is 0x10000=65536 bytes = 0x2000=8192 entries per compilation unit):; * Python:; obcore: 8a68; obconversion: 2be8; obtemplate: 2ad0; (This is only a total of 0xe120? I also applied your SWIG flag optimizations for Python, so maybe that's where the bytes were saved? In any case, we're far away from the maximum now for each of those.); * Perl: eb50; (This one is getting dangerously close to the maximum, though this is with the old SWIG flags from beta 5.); * Ruby: c170. We aren't currently building the Java and C# bindings, so I don't have numbers for those. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. I can't speak for Debian and their m68k timeout problem, but ppc64 builds fine now (I backported the patch from SVN to b5):; http://koji.fedoraproject.org/koji/buildinfo?buildID=51921. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. Unfortunately no, our build system will only let us know if we exceed the size of that .toc1 table, and we can't get the object files out of our build system. Maybe I can get some relevant information by using tools like readelf on the .so files, but I'm not sure. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780572,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=573515; Originator: NO. Would putting the templates into both obcore and obconversion rather than in its own obtemplates help? The obcore/obconversion split should be enough to keep it below the limit. Original comment by: kevinkofler,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780576:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780576,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=598602. I don't know if there may be some other problem, but I usually need to ; do:; sudo make install; to give the install permission to put files where they belong. HTH, ; Tim . Original comment by: tmgregg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=677371; Originator: YES. Cygwin; gcc-3.4.4 with libtool-2.2; no error, just an immediate segfault. Could you give me some guidance into how to diagnose the problem?. Original comment by: yselkowitz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=684210. >Because of KDE's huge size I guess all scripts OB2 would ; >need are already done. That was supposed to be: Because KDE is now 100% converted ; and works I am sure that every issue OB2.1 has is now ; solved (because KDE triggered the same issue in one of its ; 5 millions lines of code ;-). Original comment by: @cniehaus,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. My code is... void KalziumGLWidget::prepareMoleculeData(); {; // translate the molecule so that center has coords ; 0,0,0; m_molecule->Center();. m_molecule is:; /**; * The molecule which is displayed; */; OpenBabel::OBMol* m_molecule;. This worked in OB2.0.1 and does not work in 2.1.x. The std::map<> I am talking about is here:. OBBase* OBMol::DoTransformations(const ; std::map<std::string, std::string>* pOptions). I never used the DoTransformations code, as I said: My ; code worked in OB 2.0, but Chris mentioned it. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Well, I am all for this change but please make it optional ; first because there are always issues when you switch the ; buildsystem. The Scribus folks also switched to CMake and ; did the transition in something like a weekend!; CMake will release 2.4.3 which would be a very good ; release to start porting. For KDE Alex Neundorf wrote a ; Makefile.am-2-CMake script which does about 90% of the ; conversion. ; Because of KDE's huge size I guess all scripts OB2 would ; need are already done. And of course, because KDE is a ; major package you can be sure that the next round of ; distributions will all contain CMake 2.4.x (KDE requires ; 2.4.1 right now, but soon 2.4.3).; But hey, CMake is contributing binaries for Linux, Windows ; and Mac, so that shouldn't be a big problem anyway. ; CMake's documentation is exellent and the developers are ; very very helpfull. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Well, I am using OpenBabel's cpp-API, not the command-line; tool, that is causing your confusion. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. I had a similar error two. I want an excepption to be thrown. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. My lab at UCI and I might be able help out here if the project ; programers want some help. Let me know. sswamida@uci.edu. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. pos is defined as an unsigned int and compared to; string::npos whose value is -1. Defining pos as size_t fixes; this crash. As I could not find how to attach a file to the; bug, I just copy the patch here:. Index: src/main.cpp; ===================================================================; --- src/main.cpp (révision 1582); +++ src/main.cpp (copie de travail); @@ -70,7 +70,7 @@; ; //Save name of program without its path (and .exe); string pn(argv[0]);; - unsigned int pos;; + size_t pos;; #ifdef _WIN32; pos = pn.find("".exe"");; if(pos!=string::npos); @@ -270,7 +270,7 @@; OutputFileName = FileList.back();; FileList.pop_back();; }; - ; +; #ifdef _WIN32; //Expand wildcards in input filenames and add to FileList; vector<string> tempFileList(FileList);; @@ -311,7 +311,7 @@; }; else; {; - unsigned int pos = OutputFileName.rfind("".gz"");; + size_t pos = OutputFileName.rfind("".gz"");; if(pos==string::npos); pos = OutputFileName.rfind('.');; else. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. File Added: 1965086.patch. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/758#issuecomment-281780999:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/758#issuecomment-281780999,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. I confirm that bug. Sorry for the inconvenience. Please attribute to myself. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,3,"['Log', 'log']","['Logged', 'logic']"
Testability,"Logged In: YES ; user_id=787122; Originator: NO. IMHO, it is the calling program responsibility to set the correct LC_NUMERIC value when reading/writing files. It is how it worksin many projects. Your code should look like:#include <iostream>; #include <openbabel/mol.h>; #include <locale.h>; int main(int argc, char **argv) {; setlocale(LC_NUMERIC, ""C"");; std::cout << ""Here's how I spell Carbon: ""; << OpenBabel::etab.GetName(6) << std::endl;; setlocale(LC_NUMERIC, """");; return 0;; }. or much better in the general case (C language, in C++, use a std::string):; 	char *old_num_locale = strdup (setlocale (LC_NUMERIC, NULL));; 	setlocale(LC_NUMERIC, ""C"");; 	// Calls to OpenBabel should come there; 	...; 	setlocale(LC_NUMERIC, old_num_locale);; 	free (old_num_locale);. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. Patch applied to both branches. Thanks for it. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Quite strange. When I generate the inchi from GChemPaint (using OpenBabel), I get a third version (see below). 1/C10H14N5O4/c1-5-3-15(10(18)12-9(5)17)8-2-6(13-14-11)7(4-16)19-8/h3,6-8,11,16H,2,4H2,1H3,(H,12,17,18)/t6-,7+,8+/m1/s1. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=787122; Originator: NO. The file contains a data block with no symmetry, just global data. This is probably the issue. I changed the cifformat so that in that case SpaceGroup::Find is not called, and the warning is now gone. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. The issue is that generally transforms are described with no white spaces in cif files, so that I supposed that if there were a space, the string was a list of double values as used in cml. Changing the order of the checks (comma before space) fixes the issue with this file, but might be unsecure. May be an extra argument to SpaceGroup::AddTransform would be a better idea.; Nothing related to Windows/Linux line-endings. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. cdx and cdxml support are still somewhat minimalist. Probably, chirality has not been implemented yet. I'll have a look. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. cdxml format does not support reactions at the moment, but the crash should not occur anyway. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. glib has code that might be copied to OpenBabel, since it is lgpl-v2+, see g_ascii_strtod and g_ascii_dtostr. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. hmm, I missed that there might be some stereochemistry in chemdraw files. I'll try to get it, but already checked that none is given in the samples (some atoms are said symmetric and there is no stereochemistry for the others). So we need to perceive the stereochemistry in OpenBabel. I have no idea how this is feasible. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. it segfaults because com format is write-only. This makes the out format never set, and then the first call to it bugs.; IMHO, OBConversion::FullConvert should not be called if OBConversion::SetInAndOutFormats fails. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: YES. Patch applied to trunk. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/706#issuecomment-281780018:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/706#issuecomment-281780018,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=840863. We apply this special use of ring closure bonds for rapid; string concatenation-based combinatorial library enumeration; (see A. Schüller, G. Schneider, E. Byvatov; SMILIB: Rapid; Assembly of Combinatorial Libraries in SMILES Notation, QSAR; & Combinatorial Science 2003, 22, 719-721.); The obvious advantage of using those ring closures is that; SMILES do only need to be parsed as strings and not as; molecules, which saves a lot of computation time. --Andreas. Original comment by: archvile18",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863; Originator: YES. If you could send me the latest 2.1 beta I'll do the tests again for the nasty set.; My email address is: a.schueller at chemie dot uni-frankfurt dot de. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=850620. Changing to a bug report: an sdf file with no $$$$ between; molecules sounds like a bug to me, rather than a lack of; features. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=850620. I'm still not quite with you here. Your C++ code is not equivalent, as it 'looks before you; leap'. Do you also get a segfault if you (mis)use; map.front() on an empty map?. If so, then I would say that OB should raise an Exception. If not, then, as you say, it's a SWIG error and not worth; tracking down right now (since it only arises in the course; of a misuse of the API). Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Just for comparision, using www.chemistry-development-kit.org... Example 1:; 281.3124 and C13H19N3O4. Example 2:; 275.25327 and C10H8N3OSF3. Example 3:; 277.2597 and C16H10N2O3. Is it possible that you are swapping between using 1amu and; 1.008amu, and that this is causing the difference?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Oh well, I'll keep looking. :-). Adding /usr/local/ to LD_LIBRARY_PATH seems to do the trick; as regards finding the libraries. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Right so. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. So...I should submit the same bug report again but with a; different emphasis?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Thanks for taking my comments on board. Just a few points in; response. (0) I use ""tar zxvf filename.tar.gz"" in linux, and expect a; folder to be created. In Windows, I use 7-zip by; right-clicking on a .zip file to bring up a context menu,; and then clicking ""Extract Here"". Most software; distributions create a new folder to prevent this problem.; (5) Is it possible to automatically select the checkbox if I; choose something from the drop-down menu? Or does this make; sense?. Regarding a crossplatform GUI for OpenBabel, it is; relatively easy to do this in Python (although I am not sure; about the molecular display part), but I'm not sure whether; the Python extensions will be available for windows openbabel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Thanks! It's working now... data.GetValue() returns 122.03677944. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Is there any way I can get more informative segfaults for you?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Turns out that he wasn't using the latest version of; OpenBabel. It works fine with OB2. (Egg on face). You can close this feature request. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Using the HEAD revision. I keep trying to use branches with; CVS but it defeats me every time. I will await SVN (which; makes it easy) or an update to the HEAD. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Well, either that or I can handle it transparently in; pyopenbabel. Maybe the latter is preferable all round?; Whatever you decide. Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (1) On what platform?; (2) Please attach an example file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (Assigning to Geoff ... this is a follow-up from New Orleans ACS meeting). Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (Note to Tobias) My previous comment was addressed to other developers. This is definitely a bug...Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793432:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793432,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. A quick glance at the MOL2 spec (http://www.tripos.com/tripos_resources/fileroot/mol2_format_Dec07.pdf) indicates that OpenBabel should not be creating MOL2 files with blanks after the list of bonds:. ""Lines 8, 15, 28, and 41 in the example are RTIs. They divide the file into 4; sections. A section begins with a RTI and ends at the next RTI or the end of the; file."". Here's the test case: INPUT is MOL; NSC147337 Water vapor; OpenBabel01110809183D. 3 2 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0; 0.9600 0.0000 0.0000 H 0 0 0 0 0; -0.3200 -0.8795 -0.2140 H 0 0 0 0 0; 1 2 1 0 0 0; 1 3 1 0 0 0; M EN; -------- EOF. Output is MOL2:; @<TRIPOS>MOLECULE; NSC147337 Water vapor; 3 2 0 0 0; SMALL; GASTEIGER; Energy = 0. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 0 HOH0 -0.4105; 2 H 0.9600 0.0000 0.0000 H 0 HOH0 0.2052; 3 H -0.3200 -0.8795 -0.2140 H 0 HOH0 0.2052; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1. --------- EOF. The final blank line before the EOF should be removed. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/712#issuecomment-281780104:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/712#issuecomment-281780104,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Actually, I've just realised that I haven't fixed the original bug relating to cmlformat.cpp. The system on which I tested didn't have libxml, so it looks like I need to sort out the XML formats. I'll leave it as pending as this shouldn't be too difficult... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780203:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780203,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. After discussion with Greg, I've reverted back to the original interface file for Python, but this time substantially reduced the number of wrapped methods. Could someone check whether the files compile okay, and if not, how far away are we from success?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780579:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780579,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Attaching configure from David. checking for libxml - version >= 2.6.5... yes (version 2.6.16). Hmmm...so it does have XML. Can I suggest that you download the latest snapshot (""Get latest beta release (01-Mar-08)"" on the install page) and see whether the issue has been resolved since the release of 2.1.1?; File Added: configure.out. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Attaching file from duplicate bug 1884384...; File Added: water-OpenBabel2.1.1.pov. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810853:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810853,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Ballester et al. have filed a patent (http://cisrg.shef.ac.uk/shef2007/talks/ballester.pdf) so come back to us in 10 years or so. :-/. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Confirmed for OB 2.2.0. Note to self: should add a regression test for this. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793517:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793517,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. Correction to bug title...the format is not missing. It just won't read the index. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781055,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Could you be more specific about what exactly is the problem:; (1) How did you run babel?; (2) How did the output differ from the expected output? If you could say exactly what was wrong with the output of babel (e.g. line 5 was THIS but it should be THAT) then it will be easier for us to fix the problem. Thanks,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779934:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779934,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Does conversion from PDB to MOL2 work okay? If so, then the problem is only with the XML formats such as CML. Is libxml installed on your system? (I am not familiar with MacOSX so I cannot help with the specifics). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780731:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780731,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Does this solve it?. http://www.nabble.com/Python-bindings-on-amd64-Linux-tf2574974.html#a7186560. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Duplicate of 1884385. I have moved the attachment to that bug. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/723#issuecomment-281780310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/723#issuecomment-281780310,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Duplicate of bug 1740998. See the solution there...we really should fix this...I'll bump the priority of this bug up as 64 bit platforms are becoming more common... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Excellent bug report. Just to correct something, only the first call is to ReadFile; subsequent calls are to Read. As you point out, the problem is in the C++ code, which has been very difficult to get correct cross platform (i.e. it works on Windows (although this does not exactly correspond to 2.1.1), and worked (last time I checked) on Linux). If you need a workaround in the short time, let me know; there's one or two things you could try... Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780028,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Fixed in SVN trunk r2077. Workaround for the user is to replace; ""import dl""; with; ""import DLFCN as dl"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Fixed in r2293. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780487,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Fixed. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780204:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780204,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. For the record, no problems on Windows with following Python code:. >>> import pybel; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87513999999999; >>> a.OBMol.AddHydrogens(); True; >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87514000000016; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.OBMol.AddHydrogens(False, False); True; >>> a.molwt; 453.87514000000016; >>> a.formula; 'C14H16ClN3O8S2'; >>>. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Geoff - you're going to kick yourself, but I think that the bug fix in r2578 is missing an ""if"" statement before it changes the atom type to C+. Currently, all C.2 are changed in C+. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793519:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793519,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Hmmm...well, the good news is that you've found a second bug! The forcefield code is quite new, but I guess it hasn't been tested with the new GCC4, which apparently is getting very strict. If you want to keep trying, you could download an older snapshot that doesn't contain forcefieldghemical.cpp. In the meanwhile, I'll post on the devel list about the new bug, as fixing compile problems are a priority. But I'll have to leave the original bug to a C++ expert. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. Hydrogens need to be added before the forcefield optimiser is used. (Is the forcefield optimiser being used here?); - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793430:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793430,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I assumed you looked at script/Makefile.in for the build instructions. In fact, the Ruby related lines in Makefile.in deviate from what you have done. To compile the SWIG extensions yourself, you should run configure as follows:; ./configure --enable-maintainer-mode. Then running make in the scripts directory should build the Ruby extension automatically. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I find it difficult to sort out this problem because:; (a) I don't have a dependency chart of OB header files; (b) I don't have access to a ppc64, and so I don't know how much I have to squeeze the file size down. If I can get (a) + (b), then we can make some progress I hope. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I might have been a bit hasty...when I closed the Python interpreter on Windows, it crashed, which is in agreement with your bug report. Next step is to reproduce on Linux, and trace the problem. It's a problem in the core OpenBabel libray rather than the Python. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm afraid not. Regular objects also need to be wrapped in the same interface file. For example, OBConversion returns OBMols and these aren't wrapped. So the current situation is that you can read in molecules from a file, but you can't access any of the methods or attributes of the molecules. I'm going to revert these recent changes (if no-one objects today) except for the changes to the SWIG command line. I would appreciate if someone could then check whether the changes to the command line are enough to allow compilation. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I'm going to add CML support as a test for Pybel. Also, here's a better test case for you guys which shows you where the problem is. It fails on both Linux and Windows:. import os; import openbabel. filename = ""cs2a.cml""; format = ""cml"". obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format; if not os.path.isfile(filename):; raise IOError, ""No such file: '%s'"" % filename. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I've just spent an hour or two trying to figure out this problem myself, and it has also caused several bug reports to date. I suggest sorting this out in configure by adding some extra tests. Here is what I suggest:; (0) The user optionally sets BOOSTDIR. (1) If BOOSTDIR is defined, then add ""-DUSE_BOOST"" to DEFS, and ""-I$(BOOSTDIR)"" to INCLUDES. (2) configure should then try to compile a test program involving ""tr1/whatever"". If it succeeds, it sets a flag HAS_BOOSTLIKE_HEADERS. Otherwise, it prints a warning message saying ""It looks like you don't have the Boost headers so the following formats will not be compiled: chemdrawcdx, etc.. This is probably because you are using GCC3.x and don't have Boost installed. For more information, see http://openbabel.sf.net/Install (Source Code)"". (3) If HAS_BOOSTLIKE_HEADERS is not defined, don't compile any format that relies on the existence of Boost-like headers. (4) Update the documentation appropriately. I will do 4, and I can test 1-->3. (By the way, I note that although ./configure --includedir=whatever correctly sets includedir in the Makefile, the value of includedir does not seem to be incorporated into $INCLUDES.). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200,4,"['Log', 'test']","['Logged', 'test', 'tests']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I've checked the SWIG warnings, and they're fine. It should not have been necessary to run SWIG yourself though. If you do run SWIG, please use he latest point release. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779977:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779977,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. It looks up the working directory, then it searches in the PATH. I'm marking this bug as closed. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793426:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793426,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. It's a regression, and a disappointing one. This bug is a duplicate of 2017902. Are you using OpenBabel on Windows or Linux?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793613:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793613,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Peter, the best place to discuss this is on the openbabel-devel mailing list. There may not be any bug, just problems with how you are building the code. For example, you appear to be using VS2008 instead of VS2005 (as recommended at http://openbabel.org/wiki/Install_%28MSVC%29). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786145:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786145,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Regarding the line:. cml...........FAILED tests 1-6. This indicates that you may not have compiled with CML support. Can you pipe the output of configure into a file and attach it to this bug report. This will let us know whether you are compiling with CML support or not. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Sargis, could you report this problem to DrugBank and include Craig's comment below. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Sorry to hear you're having problems. It would be helpful if you could provide an example (e.g. by attaching an input file). Also, if you could let us know what version of Open Babel you are using. And last but not least, it is always helpful if you provide an email address. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Thanks for reporting this. I have fixed this for the next release. In your own program you can replace self.iter.deref() by self.iter.__ref__(). For general use, in Python2.x/Lib/site-packages/openbabel.py replace:; b = self.iter.deref(); by; b = self.iter.__ref__(). Then you should be able to use:; for angle in openbabel.OBMolAngleIter(myobmol):; print angle. The test file now produces the following output (for head.sdf):; Angles:; 2 0 3; 2 0 4; 2 3 4; 3 2 5; 3 2 8; 3 5 8; 4 2 6; 4 2 9; 4 6 9; 5 3 7; 5 3 10; 5 7 10; 6 4 7; 6 4 11; 6 7 11; 7 1 5; 7 1 6; 7 5 6; 8 3 12; 8 3 13; 8 3 14; 8 12 13; 8 12 14; 8 13 14; Pairs:; 1 2; 1 6; 1 7; 1 8; 1 9; 1 10; 1 11; 1 12; 1 13; 1 14; 1 15; 2 3; 2 4; 2 5; 2 9; 2 10; 2 11; 2 12; 2 13; 2 14; 2 15; 3 8; 3 11; 3 12; 3 13; 3 14; 3 15; 4 7; 4 10; 4 12; 5 6; 5 9; 5 11; 5 13; 5 14; 5 15; 6 10; 6 12; 6 13; 6 14; 6 15; 7 9; 7 11; 7 13; 7 14; 7 15; 8 9; 8 10; 8 13; 8 14; 8 15; 9 10; 9 11; 9 12; 10 11; 10 12; 10 13; 10 14; 10 15; 11 12; 11 13; 11 14; 11 15; 12 13; 12 14; 12 15; Torsions:; 0 2 3 5; 0 2 3 8; 0 2 4 6; 0 2 4 9; 2 3 5 7; 2 3 5 10; 2 3 8 12; 2 3 8 13; 2 3 8 14; 2 4 6 7; 2 4 6 11; 3 2 4 6; 3 2 4 9; 3 5 7 1; 3 5 7 6; 4 2 3 5; 4 2 3 8; 4 6 7 1; 4 6 7 5; 5 3 8 12; 5 3 8 13; 5 3 8 14; 8 3 5 7; 8 3 5 10; 9 4 6 7; 9 4 6 11; 10 5 7 1; 10 5 7 6; 11 6 7 1; 11 6 7 5. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780485:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780485,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. That's great. Looks like it's working. I've updated pybel. r2645. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793251:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793251,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The only remaining difference with the Pybel code is your use of SetInAndOutFormats rather than just SetInFormat. However, this is unlikely to be the problem. Could you confirm whether the problem is specific to the cdx format; that is, does it work for a multimolecule SDF file (see head.sdf in the distribution in the scripts/python/example folder)?. It might be useful if you could attach a specific multimolecule CDX file to this bug report or point me to one on the web, so that I can use it as a test case. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780030:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780030,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The problem isn't with the MOL2 atom typing but rather with the assignment of the internal atom type:. >>> mol = pybel.readstring(""smi"", ""C=CCc1ccccc1OCC(O)CNC(C)C""); >>> mol.atoms[0].type; 'C+'. The internal atom type on reading the SMILES string is incorrect. I'm bumping up the priority and renaming the bug as this is a more general problem. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793518:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793518,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659,5,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. There's too much info already. I'd like to see something like the help system of svn:; svn help; svn help commit. Which equates to:; babel --help (or -H); babel --help formats (or babel -H formats); babel --help SMI; babel --help convert; babel --help filter; and so on, the more the merrier. The only manual users read is probably babel --help, so if it's not in there, it doesn't exist. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. These snapshots don't contain the SWIG wrappers. You need to generate them yourself, with ./configure --enable-maintainer-mode (requires recent version of SWIG). I'm marking this bug as closed (pending). (For a related bug, see 1881688). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. This fix has the effect of reducing the functionality of the bindings - I would say it makes them unusable. As an example illustrating the general problem, OBConversion is in obconversion.py, whereas the templates are in obtemplate.py. This means that any methods of OBConversion returning a std::vector will be unusable in Python, e.g.:. >>> obconv = ob.obconversion.OBConversion(); >>> obconv.GetSupportedInputFormat(); <Swig Object of type 'std::vector<std::string > *' at 0x8166a90>. Of course this can be trivially fixed by copying that template to obconversion.py. However, the problem is more general as it also applies to every method that returns a C++ object. An alternative suggestion is to find out (from the SWIG mailing list) whether most of the std::vector template verbiage can be suppressed (e.g. by editing std_vector.i). That is, when wrapping a std::vector all that's needed is the length and the ability to index it (or so) - there's no need for append and pop methods and so on. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. This is why we ask people to leave their email address. In the absence of any response, I'm marking this bug as ""Works for me"", and ""Pending"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793407,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,5,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Verified with latest pybel release. The problem is reading the MOL2 file, not writing the xyz file. The file looks fine, compared to the sample MOL2 file at http://www.tripos.com/mol2/mol2_format3.html. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Works for me on Windows with latest release of OBPython for 3-methylbutanal taken from:; http://blueobelisk.svn.sourceforge.net/viewvc/*checkout*/blueobelisk/structures/trunk/src/aldehydes/3-methylbutanal.cml. (From the ""Submit a bug report"" page...) A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: moreoutput.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: output.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed by Chris. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907,3,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed in r2711. OBFingerprint::DescribeBits is disabled though. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793412:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793412,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed on trunk. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/795#issuecomment-281793465:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/795#issuecomment-281793465,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Good news first?. The good news is that it's working for BFS (I can access CurrentDepth fine). The other good news is that BFS is really the one we want it to work for (e.g. in the case of circular fingerprints), as the user might terminate the iteration after a certain depth. The bad news is that the BFS iterator in OpenBabel doesn't accept an atom as a starting point (the DFS iterator does though), and so this iterator can't be used for the use cases I imagine. Let me know if you want me to resubmit this feature request under a different title: ""BFS iterator with OBAtom as starting point"" or so. This would really be a killer feature. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I am following this up with the ZINC maintainers. 5% of the MOL2 files in ZINC have four-coordinate Ns of type N.3. This must be an error as Chris says. Either these are of type N.4, or they are N.3 with at most 3 bonds. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I decided to see whether I could figure anything out by using gdb on the core dump:. ~Conversion at obconversion.cpp:268; _wrap_delete_OBConversion at openbabel_python.cpp:37325; ...; PySwigObject_dealloc at openbabel_python.cpp:1550; etc. Line 268 is ""delete pInStream;"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I tested the release candidate you sent me and everything works up to, and including, the Perl ""make test"". Woo hoo!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793258:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793258,3,"['Log', 'test']","['Logged', 'test', 'tested']"
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I think you reverted your original comment, right?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810909:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810909,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I will return to this, once the Makefile.PL problems are sorted out (see separate bug report). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780274:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780274,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm closing this bug, as I believe this is an error in the input, i.e. Garbage-in Garbage-out. Nice use of Frog though :-). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm marking this bug as pending. (1) I've eyeballed the MOL2 conversion and it looks very good, so no problems there. It was all a big red herring due to the issues with BABEL_DATADIR.; (2) Chris seems to have sorted the issues with \r (which appears to be the same as ^M). Great! I love it when a plan comes together. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Looking at the FP2 code, it says ""A molecule structure is analysed to identify linear fragments of length; from one to Max_Fragment_Size = 7 atoms but single atom fragments of C,N,and O are ignored. A fragment is terminated when the atoms form a ring."". This suggests that this is not a bug, but is designed behaviour. I think this is inconsistent with Daylight-type fingerprints, and would recommend that single atom fragments are not ignored. Otherwise, users (including me) are going to be confused... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779779:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779779,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Mol2 files use Sybyl atom types, http://www.tripos.com/mol2/atom_types.html. I have just compared the output of 2.1.0 with the Mol2 file stored in Relibase (which contains curated ligands) for the same protein. According to this comparision, instead of Car, it should be C.ar, similarly for C3 (should be C.3), So2 (should be S.o2), O- (should be O.2). The N3's should be N.3 (if correct), or otherwise N.pl3 (which is how Relibase types them). The O.3 is correctly typed!. It's probable that whoever wrote this code didn't realise how crucial these atom types are for people working with protein data. It's not just a mnemonic; these codes provide information to programs that deal with proteins. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Now (r2482) segfaults after the make3D() (windows):. import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ...Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780941:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780941,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. One remaining error for the same file. *** Open Babel Warning in OpenBabel::SpaceGroup::Find; Unknown space group with incomplete or wrong definition. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780165:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780165,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Please find attached the guilty party. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Same as Bug 1526020 reported by Rajarshi... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Sorry about that Chris. It works for me after reinstalling from the released Pybel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793481:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793481,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. The output now appears to be correct. For the one with five bonds, I get:; CONECT 1 2 3 4 5; CONECT 1 6; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6 1. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. The outputfile will not upload due to the funny characters. I can send it off-list to anyone who wants. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. This works, but I need to add a small bit of code to the interface file to make it easier to access this in the BFSIterator. I will return to close the bug when done. Thanks!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Updated openbabel-python.i in r2644. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810916:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810916,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Yes - I understand where you're coming from. I know it sounds a bit backward, but I think that sticking to the Daylight-type fingerprint with all its problems is better than fixing it. Mainly because of expectation and familiarity to chemists. Maybe it would make sense to split this type of fingerprint into two: one that's Daylight-type, and another that's optimised for indexing (e.g. most significant bits come first, or something). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779784:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779784,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Yes - babel failed...not on all PDB files, but some. When I get time I'll download the PDB and verify that it can parse (without segfaulting at least) all of the files. Marking this bug closed... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=851435; Originator: NO. I would have thought that I should be able to call a library function and expect it to work no matter what the system locale is. When would the current behaviour ever be correct? I don't think file formats are localised in the sense that the numeric delimiters are changed are they? Having users of the OpenBabel library manually set the locale to ""C"" and then reset it back to the original after the call looks very much like a workaround to me. I have possibly misunderstood your reasoning but I think that we should aim to fix this as it appears to me to be a bug. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This could also be a naming issue - not all of the format files are named using the same convention. The CMake build scripts just use the name of the source file whereas the auto* stuff seems to tack on format on the end of the library name. Try cleaning out /usr/local/lib/openbabel/ before installing the CMake built stuff - could be stale files. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780978,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=851435; Originator: YES. It is pretty much any CML file I can lay my hands on - I will dig some out. It does appear to be some kind of bug in the atoi function though. I added the line 'cout << ""OBBond order: "" << bo << ""("" << ord << "")"" << endl;' to the cmlformat file and ord is randomly 18 on my system when bo is 1. I will see if I can spot why this is the case and what the best fix might be. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781074:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781074,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: YES. It was quite a simple fix after all - hopefully this change hasn't broken anything. All tests should be protected in this way. I have also patched Gentoo's openbabel ebuild for beta5. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=851435; Originator: YES. This is fixed in commit 2504. C functions such as atoi, strtol etc all require null terminated char* arrays. This was working most of the time as the function continued until it found a zero. The offending code was the const char bo = value[0]; which was then passed to atoi later if the bond order was numeric. The same kind of bug could happen anywhere where similar code is in place and is tough to spot as it depends on the memory layout of the platform etc. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781080:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781080,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=888972. The kekulize function only change the bond order of aromatic ; bonds. There is nothing to kekulize in a sulfate. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=888972. The kekulize part is OK now. The remaining problems such ; as assignment of double bonds where they should be single ; is not a problem of the kekulize function. It is a problem of the ; PerceiveBondeOrder function. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221,1,['Log'],['Logged']
Testability,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:182,log,log,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536,2,['log'],['log']
Testability,"Looks fine to me. However, if you depend on any functionality, it's no harm to write a test case to ensure that it keeps working as expected. Just a note that obfunctions.h is a placeholder for the final location of these methods, which is something we need to think about. Just for my own interest, how are you using these functions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346314725:87,test,test,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346314725,1,['test'],['test']
Testability,"Looks good on linux. Closing. For the record, my test case is len(list(pybel.readfile(""cml"", ""3d.head.2.cml""))). The answer should be 2, and that's what I'm getting both on Linux (tested b1 snapshot) and on Windows (tested SVN). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662:49,test,test,49,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662,3,['test'],"['test', 'tested']"
Testability,"Looks good to me at first glance (I haven't tested). . Although, what do you think about only doing this for pybel? i.e. instead change `openbabel.py` to `openbabel/__init__.py`, so the existing `import openbabel` continues to work as before. That should break less existing code (but there may be other downsides I haven't thought of?). By the way, if you make the change as you currently have it, wouldn't you also need to change the imports within `pybel.py` itself (currently `import openbabel as ob`)? Either to a relative import (`from . import openbabel`) or absolute (`from openbabel import openbabel`).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469715112:44,test,tested,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469715112,1,['test'],['tested']
Testability,"Looks good to me, we'll just need to change the test itself. Thanks Noel!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-398899654:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-398899654,1,['test'],['test']
Testability,"Looks good. WriteString and ReadString unfortunately are historically 2nd class citizens compared to Convert(). My only query is regarding ""I didn't know if people called Write() multiple times with the same output file object"". This is how one writes out an SDF or SMI file, for example (see the code in pybel.Outputfile.write). Will this still work fine? I'm not sure if a multimol CML file works right now, but that'd be another testcase to consider.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455169506:432,test,testcase,432,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455169506,1,['test'],['testcase']
Testability,"Looks legit. When you say the test passes for you, are you matching the appveyor build (i.e. same OS and compiler version)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122254174:30,test,test,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122254174,1,['test'],['test']
Testability,Lowercase second element letter in PDB and test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1631:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1631,1,['test'],['test']
Testability,"MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:3831,test,test,3831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,Make unit tests from #262 actually run,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/264:10,test,tests,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/264,1,['test'],['tests']
Testability,Marked closed. It cannot be tested as we don't have the original input file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/849#issuecomment-281794363:28,test,tested,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/849#issuecomment-281794363,1,['test'],['tested']
Testability,"Maybe I am wrong, my speculation however is you would like to define by yourself which program should display the .svg generated Openbabel when running the GUI. I think the developers' choice for a web browser like Firefox was that these programs capable to display the .svg as an image rather than a text typically already are installed. Running Linux Debian 11 bullseye (branch testing) comprising both OpenBabel (version 3.1.0) as well as the graphical editor [Inkscape](https://inkscape.org/) (version 1.0.2) I use successfully the «display only» program of the later, `inkview` to inspect a single .svg by. `inkview example.svg &`. or to browse through a collection of .svg in a folder by. `inkview *.svg &`. As mentioned earlier [here](https://gitlab.com/inkscape/inbox/-/issues/3712#note_422339579), this works well for .svg generated by RDKit, but equally for .svg by OpenBabel. (For comparison, I attach reference data by both below.) Thus, if running `obgui` in Linux, I would welcome if it were possible to set a pointer like `/usr/bin/inkview %s` when instructing OpenBabel about which viewer to use. There are other programs to display .svg visually, too. Examples include [irfanview](https://www.irfanview.com/) if extended by the optional plugin; or [Xnview](https://www.xnview.com/en/xnviewmp/), and `display` of [ImageMagick](https://imagemagick.org/script/index.php). However, these often rasterize the display of the image; by consequence, the benefits scaling a vector image (crisp representation) may be lost. [RDKit_example_svg.zip](https://github.com/openbabel/openbabel/files/6056583/RDKit_example_svg.zip); [babel_test.zip](https://github.com/openbabel/openbabel/files/6056584/babel_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625:380,test,testing,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625,1,['test'],['testing']
Testability,"Maybe one of the CMakeLists.txt is not entirely correct and the coulombtest should only be compiled for the tests. Alternatively, the integrals are not always compiled in because they are compiled conditionally only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401598075:108,test,tests,108,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401598075,1,['test'],['tests']
Testability,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:270,test,test,270,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858,1,['test'],['test']
Testability,Mine most definitely shows the unit cell tests:; ```; Start 180: test_unitcell_1; 180/199 Test #180: test_unitcell_1 .................. Passed 0.01 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034679:41,test,tests,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034679,2,"['Test', 'test']","['Test', 'tests']"
Testability,"Minor correction. You're right - I was wrong. Turns out that not having BABEL_LIBDIR set is different from setting it to the empty string. Anyway, I'll send you a PR to update this PR that incorporates @afonari's Python test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-397534434:220,test,test,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-397534434,1,['test'],['test']
Testability,My only suggestion would be to test for list of residue names/ids instead of just number of them. Other than that LGTM.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811#issuecomment-381079592:31,test,test,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811#issuecomment-381079592,1,['test'],['test']
Testability,"My openbabel on mingw is statically linked, so my tests are not really indicative. I'm not sure; it's even possible to have a dynamically linked openbabel on mingw. Anyhow, I moved libopenbabel.* and libinchi.*; to /usr/local/lib - everything still works.; In my opinion lib*.a should be in /usr/local/lib while lib*.dll should be together with the executables. At least this seems to be the way with the other packages. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797941:50,test,tests,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797941,1,['test'],['tests']
Testability,My preference is to keep the tests independent files rather than an archive. Otherwise it will be a pain for people to modify/extend the test sets - every small change will require updating the tarball.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846:29,test,tests,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846,2,['test'],"['test', 'tests']"
Testability,My test file still fails with trunk. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802258:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802258,1,['test'],['test']
Testability,"ND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4231,test,test,4231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbabel']"
Testability,"NG_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7075,test,test,7075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"NPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATAD",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:6648,test,test,6648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testsym']"
Testability,"N\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; unichemformat.cpp; turbomoleformat.cpp; tinkerformat.cpp; shelxformat.cpp; qchemformat.cpp; PQSformat.cpp; pcmodelformat.cpp; nwchemformat.cpp; msmsformat.cpp; msiformat.cpp; mpqcformat.cpp; mpdformat.cpp; mopacformat.cpp; moldenformat.cpp; mmodformat.cpp; Generating Code...; Compiling...; mmcifformat.cpp; jaguarformat.cpp; hinformat.cpp; gromos96format.cpp; ghemicalformat.cpp; gausszmatformat.cpp; gaussformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:6092,log,log,6092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"Name: Kevin Drew; Email: kdrew@nyu.edu; Version: openbabel-2.3.0; OS: Mac and Linux. I noticed a small change in torsion angle degrees when I input gzmat formatted files (internal coordinates). I only notice it with torsion angles of 0.0 (d5 and d6 in sample) and 180.0 (d9 in sample). The roundtrip conversion returns values of 0.03 (rather than 0.0) and 179.97 (rather than 180.0) respectively. ; --command--; obabel -i ""gzmat"" sample.gzmat -O output.gzmat; --command--. The problem seems to be related to the boundary conditions of an acos call in the vectorAngle function in math/vector3.cpp. I have increased the precision of boundary condition tests at lines 211 and 214 of math/vector3.cpp on my local copy and it seems to produce the desired results.; -snip-; 211 if (dp < -0.99999999999999); 212 return 180.0; 213 ; 214 if (dp > 0.99999999999999); 215 return 0.0; -snip-. I am not sure if this is the best way to fix this and I am not sure if this fixes all cases. Also, it seems like the vectorAngle function is deemed deprecated by comments in the code but is still being called by the CalcTorsionAngle function in math/vector3.cpp. . Please let me know if you need any more information. Thank you for your time,. Kevin Drew. Reported by: ksdrew",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1096:650,test,tests,650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1096,1,['test'],['tests']
Testability,"Name: Thanh Truong; Email: Thanh.Truong@Utah.edu. OpenBabel 2.2 on Linux . The attached test.mol2 file can be used with OBoptimize without any problem. However, when we used OBrotamer with test.mol2 to generate a random conformer then OPoptimize cannot read the file generated by Obrotamer. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/802:88,test,test,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/802,2,['test'],['test']
Testability,Need to separate out larger test set,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048,1,['test'],['test']
Testability,"Needs unit tests, but supported for MMFF94, GAFF, and Ghemical; force fields. Enables minimization and energy evaluation with; decreased electrostatic components (e.g., set epsilon to 500); or dielectric of different solvents.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2022:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2022,1,['test'],['tests']
Testability,New test passes:; ``` Start 26: test_carspacegroup_1; 25/178 Test #26: test_carspacegroup_1 ............. Passed 0.10 sec; Start 27: test_carspacegroup_2; 26/178 Test #27: test_carspacegroup_2 ............. Passed 0.53 sec; Start 28: test_carspacegroup_3; 27/178 Test #28: test_carspacegroup_3 ............. Passed 0.53 sec; Start 29: test_carspacegroup_4; 28/178 Test #29: test_carspacegroup_4 ............. Passed 0.53 sec; Start 30: test_cifspacegroup_1; 29/178 Test #30: test_cifspacegroup_1 ............. Passed 0.53 sec; Start 31: test_cifspacegroup_2; 30/178 Test #31: test_cifspacegroup_2 ............. Passed 0.54 sec; Start 32: test_cifspacegroup_3; 31/178 Test #32: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 33: test_cifspacegroup_4; 32/178 Test #33: test_cifspacegroup_4 ............. Passed 0.54 sec; Start 34: test_cifspacegroup_5; 33/178 Test #34: test_cifspacegroup_5 ............. Passed 0.53 sec; Start 35: test_cifspacegroup_6; 34/178 Test #35: test_cifspacegroup_6 ............. Passed 0.53 sec; Start 36: test_cifspacegroup_7; 35/178 Test #36: test_cifspacegroup_7 ............. Passed 0.54 sec; Start 37: test_cifspacegroup_8; 36/178 Test #37: test_cifspacegroup_8 ............. Passed 0.58 sec; Start 38: test_cifspacegroup_9; 37/178 Test #38: test_cifspacegroup_9 ............. Passed 0.52 sec; Start 39: test_cifspacegroup_10; 38/178 Test #39: test_cifspacegroup_10 ............ Passed 0.53 sec; Start 40: test_cifspacegroup_11; 39/178 Test #40: test_cifspacegroup_11 ............ Passed 0.52 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1799#issuecomment-374300276:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1799#issuecomment-374300276,16,"['Test', 'test']","['Test', 'test']"
Testability,New tests run and pass:; ``` ; Start 34: test_cifspacegroup_5; 33/164 Test #34: test_cifspacegroup_5 ............. Passed 0.63 sec; Start 35: test_cifspacegroup_6; 34/164 Test #35: test_cifspacegroup_6 ............. Passed 0.70 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-294180325:4,test,tests,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-294180325,3,"['Test', 'test']","['Test', 'tests']"
Testability,Nice bisect. @fredrikw presumably the lookup logic is incorrect in your commit.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288:45,log,logic,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288,1,['log'],['logic']
Testability,"Nice testcase. I'll sort it out. On Tue, 2 Oct 2018 at 01:39, Ben Bucior <notifications@github.com> wrote:. > Some OBChemTsfm transformations, especially on radicals, can result in; > unexpected implicit hydrogen counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:5,test,testcase,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,2,['test'],['testcase']
Testability,No test file provided.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1103#issuecomment-304998640:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1103#issuecomment-304998640,1,['test'],['test']
Testability,"No test file provided. C60 works fine now, also with #1576. Marking as ""works for me"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-305693497:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-305693497,1,['test'],['test']
Testability,"No, I'm on linux. The test passes, but when I run it through valgrind there are all sorts of errors. I get the same errors even without the fix. I'll look into it a little. Might be interesting to run at least a subset of the tests through valgrind as part of the autovalidation process..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122260606:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122260606,2,['test'],"['test', 'tests']"
Testability,"Noel, I think certainly the Molfile / SMILES bugs should be fixed with the stereo code. Should we make this bug into a new testcase?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570:123,test,testcase,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570,1,['test'],['testcase']
Testability,"Not sure if this is OpenBabel's or RDkit's fault. I was converting some molecules from mol2 to mol using OpenBabel 2.3.1, then doing some other things on them with RDkit.; But there are some molecules that RDkit won't parse after the conversion. I attach a test case, with a molecule from ZINC. If I download the SDF from ZINC, RDkit parses it happily, but if I convert from mol2 to SDF or mol, the result won't be read by RDkit. So it looks like a conversion problem (I may be wrong). Thank you,. Adrià ; <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1169:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1169,1,['test'],['test']
Testability,"Note that some time after filing this bug, I had to compile Open Babel from trunk including generating the Java bindings on Windows. At that time, there was also a problem as discussed in [1]. Maybe that problem is also supposed to be fixed now? For now, I will stop the testing, but thanks for working on this!. [1] https://sourceforge.net/mailarchive/forum.php?thread_name=BANLkTik%3Dnv-R%2BfnSCiaC%2BH4Wd_jBE8HZgg%40mail.gmail.com&forum_name=openbabel-discuss. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800546:271,test,testing,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800546,1,['test'],['testing']
Testability,Note to self: fails on testbabel.py on the PDBQT test.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-396025404:23,test,testbabel,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-396025404,2,['test'],"['test', 'testbabel']"
Testability,"Note to self: the breaking change was https://github.com/openbabel/openbabel/commit/4094c68b87415889150377bd9dc419398ac78d8b#diff-d8fc0ac3a34a3eb74df28348ca3d0100 which ironically was a change to add support for reactions. It's a pretty major change unfortunately, but at least shows that the problem is not in OBConversion (for example). For the moment, I'll just fix the failing test. But I'll come back to this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411376906:381,test,test,381,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411376906,1,['test'],['test']
Testability,"Note: this pull request is on top of #1576, and should not be merged before that. 1. Removed calls to SetType() from the SMILES parser, as well as from OBAtom::SetIsotope; 2. Changed ParseSimple and ParseComplex to (each) use a single switch statement, rather than a test for isupper() first of all; 3. In ParseComplex, parse the isotopes more efficiently and tighten up their handling when reading/writing. The test cases I wrote flushed out a few issues which I fixed:; 1. Parse 'new' elements (based on those present in elements.txt); 2. Parse aromatic [te] and [bH]. In passing, I removed the warnings about ""Illegal aromatic element"". We handle these elements without trouble (by analogy with C, N or O), and I think they might cause a user to simply uppercase the element in the SMILES, which would not be correct.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1589:267,test,test,267,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1589,2,['test'],['test']
Testability,"Nothing appears to be working, in fact. obabel cannot find the formats. I think I'd like to add a test for this to the Travis builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/310#issuecomment-225457544:98,test,test,98,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/310#issuecomment-225457544,1,['test'],['test']
Testability,"Numbered R groups (e.g. R1, R2) are currently handled like other atom aliases without special handling. However, to be interpreted as true R groups they need to be stored in an M RGP section. This code allows these sections to be read and written. Note to self: I should document how to set these through the API. (I intend to write a test case or two for this code, so maybe don't merge until then unless the release is imminent)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329:335,test,test,335,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329,1,['test'],['test']
Testability,OB version: 2.1.1. Converting the attached SDF file to SMILES produces the following output:. $ babel -isdf DB03043.sdf -osmi. NC(Cc1c[nH]c2[se]ccc12)C(O)=O SDF file of DB03043; 1 molecule converted; 13 audit log messages. Which in a strict sense is wrong according to the openSMILES specification as non-aromatic atoms start with uppercase characters. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711:209,log,log,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711,1,['log'],['log']
Testability,OBForceFieldGhemical Unit Test. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203:26,Test,Test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203,1,['Test'],['Test']
Testability,OK I left the package name as 'openbabel' and updated the README to explain more clearly that this is just the python bindings along with a link to the main Open Babel site. Here's what it will look like (on the test PyPI site): https://testpypi.python.org/pypi/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494:212,test,test,212,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494,4,['test'],"['test', 'testpypi']"
Testability,"OK, I finished a first draft of a patch. It seems to work fine for the supplied test molecule, but it would be good to test on other molecules as well - especially on molecules with a number of vibrations which is not a factor of 6 so the last block will not be filled completely. Also, I am not sure about possible scaling factors, e.g. I think Gaussian scales normal mode displacements according to the mode's reduced mass, while other quantum chemistry packages print out normalized eigenvectors and not the mass-weighted normal modes. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/869#issuecomment-281794920:80,test,test,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/869#issuecomment-281794920,2,['test'],['test']
Testability,"OK, found the source of the failing pcjson-test. There was a bug in that format, fixed in #2596. However, this test was not updated to match. I will add a PR for that...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025,2,['test'],['test']
Testability,"OK, so I created a PR for my proposed change above (with corrected spelling for xprstdio_create). It seems to work in my testing at least.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996#issuecomment-2014629169:121,test,testing,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996#issuecomment-2014629169,1,['test'],['testing']
Testability,"OK, so, if I implement what I proposed earlier (--dump-logP-per-HA [filename]),; will it be integrated?; Given that filename will be of a new format (the one that I was printing on stdout).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39693877:55,log,logP-per-HA,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39693877,1,['log'],['logP-per-HA']
Testability,"OS: Windows 7, 64 bit, OB 2.3.1. a) Minor, and affect the help file and the extraction of first file. The ChEMBLdb current version (11) is > 2 GB, and the extraction method for Windows in not working anymore (a shortcut might be using the type command, output to file and break immediately, then the output file can be opened by even notepad). b) Major, affect the usage. ; Testing the similarity search, and followed the suggested way in help, I have encountered the following problems:. b.1.) using command babel:. L:\pgm\openbabel>babel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; ==============================; *** Open Babel Error in OpenBabel::VF2Mapper::MapGeneric; time limit exceeded... output file length=0, and babel seems to hang up working, prompt has not been back. b.2) It is recommended to use obabel instead of babel.; typing obabel (recommended) instead of babel I got the following message . L:\pgm\openbabel>obabel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; Missing or unknown output file or format spec or possibly a misplaced option.; Options, other than -i -o -O -m, must come after the input files. Open Babel 2.3.1 -- Oct 9 2011 -- 17:57:01; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]. Try -H option for more information. Reported by: jlaszlo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1148:374,Test,Testing,374,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1148,1,['Test'],['Testing']
Testability,"OTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:8155,test,test,8155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"OUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_D",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9099,test,test,9099,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testfastsearch']"
Testability,"Oh, I see why I used maeparser's master: v1.2.2 (the latest) did not yet include the flag to disable the unit tests... Other than that, it is fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552493628:110,test,tests,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552493628,1,['test'],['tests']
Testability,"Ok, I have managed to find the `AddOption` method, where I can set extra options. My example python code looks as follows:. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('xyz', 'inchi'); # extra -xa flag to produce the inchi log; obConversion.AddOption('a', obConversion.OUTOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'xyz coords....'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```; The code above works, where the inchi aux info is also returned thanks to passing the `-xa` flag. However, the code below, where I requested a 3D coordinates generation via `gen3D` option does not work. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('inchi', 'xyz'); obConversion.AddOption('gen3D', obConversion.GENOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'InChI=1S/C2H6O/c1-2-3/h3H,2H2,1H3'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```. I would be grateful for any help.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510:264,log,log,264,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510,1,['log'],['log']
Testability,"Ok, I just tested the *SAME* code with mol-files and it works. So the bug has to be in the CML-parsing. The complete diff is this:. - obconversion.SetInFormat(""cml"");; + obconversion.SetInFormat(""mol"");; ; QDir directory(""data"");; - QStringList filelist = directory.entryList( QStringList(""*.cml"") );; + QStringList filelist = directory.entryList( QStringList(""*.mol"") );. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797977:11,test,tested,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797977,1,['test'],['tested']
Testability,"Ok, check this out. Let me know.; I tested using:. ```; ./bin/babel 9015328.cif test.pdb; ./bin/babel test.pdb test1.cif; ./bin/babel 9015328.cif test2.cif; diff test1.cif test2.cif ; 3c3; < _chemical_name_common 'test.pdb'; ---; > _chemical_name_common 'Wassonite'; 57,60c57,60; < Ti0 Ti 0.00000 0.00000 0.50002 1.000; < Ti1 Ti 0.00000 0.00000 0.37800 1.000; < S2 S 0.00000 0.00000 0.00000 1.000; < S3 S 0.00000 0.00000 0.22601 1.000; ---; > Ti1 Ti 0.00000 0.00000 0.50000 1.000; > Ti2 Ti 0.00000 0.00000 0.37800 1.000; > S1 S 0.00000 0.00000 0.00000 1.000; > S2 S 0.00000 0.00000 0.22600 1.000; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/252#issuecomment-178181409:36,test,tested,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/252#issuecomment-178181409,4,['test'],"['test', 'tested']"
Testability,"Okay, I tried out something new. I noticed that the top part of CMakeLists.txt and formats.cmake are almost identical. To avoid having people re-write the formats that they add into both (and consequently avoid the problem of people forgetting to do so), I copied over the top portion of CMakeLists.txt to formats.cmake, and now static and dynamic builds both include formats.cmake. There were different instructions for shared vs static builds for only a few formats. For Inchi, I just wrapped the part that was in the shared build with a ""if(BUILD_SHARED)"" and the static part in the ""elseif(WITH_STATIC_INCHI)"" section. For LIBXML2, they were identical, so I just made sure that it runs when the proper conditions are set. For GenBankFormat, that one was only built statically (this is because it uses a function from the fasta format, and it can't build dynamically because it doesn't link to it). So I just wrapped it in ""if(NOT BUILD_SHARED)"". What do you think?. I tested this for both dynamic and shared builds, and I was able to convert formats just fine with the resulting obabel executables (I tried cml, inchi, and xyz for both).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270:972,test,tested,972,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270,1,['test'],['tested']
Testability,"Okay, sounds like the heuristic will help here. > 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures. I'll certainly take a look - there's probably also:. 4. Check the residue => bond order templates, which are ancient. I coded up something for Avogadro that downloads the LigandExpo SD files. I noticed that the Open Babel [`resdata.txt`](https://github.com/openbabel/openbabel/blob/master/data/resdata.txt) has some non-standard residues (presumably from MD simulations):; - ARZ (not the ARZ in Ligand Expo); - ASH (ditto); - CYX (looks like a modified CYS); - GLZ; - HED (But the OB resdata has double bonds for some reason - LigandExpo gives OH groups) ; - HID (some form of HIS); - HIE (ditto); - HIP (ditto); - LYZ (but this isn't 5-hydroxylysine, since only one OH); - PSE (somehow an amino acid); - PSM (also); - PTM; - PTY (similar to PTM). So while I have you here... are any of these commonly used in modern MD programs? If so, can you point me to some PDB or SD files with the authoritative atom names and bond orders?. If a residue name matches the template (e.g., ALA or HIS), bond orders will be assigned from `resdata.txt` for example for HIS:; ```; BOND NE2 CE1 2; BOND CE1 ND1 1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310:63,log,logic,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310,1,['log'],['logic']
Testability,"On 28/07/15 17:20, baoilleach wrote:. > Can you email me a test file and associated command-line. I've tried a; > few files, but nothing I have seems to trigger the code.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738.; > ; > obtherm butane-g4.log.gz; > should do the trick. ## . David van der Spoel, Ph.D., Professor of Biology; Dept. of Cell & Molec. Biol., Uppsala University.; Box 596, 75124 Uppsala, Sweden. Phone: +46184714205.; spoel@xray.bmc.uu.se http://folding.bmc.uu.se",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873222:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873222,2,"['log', 'test']","['log', 'test']"
Testability,"On Fri, Aug 7, 2015 at 12:17 PM, Geoff Hutchison notifications@github.com; wrote:. > > The git head builds and installs a program ""obtautomer"", but the program; > > doesn't work.; > > ; > > obtautomer -c foo.smi; > > ; > > obtautomer: symbol lookup error: obtautomer: undefined symbol:; > > _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE; > ; > Works just fine for me - indeed there's test/tautomertest.cpp that; > exercises this code:. How does that test code get run? Is it part of 'make test' from the build; directory or does it have to be run a different way? I didn't see it; getting exercised by 'make test', and the test/README didn't explain how to; run it manually. Thanks,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128900181:383,test,test,383,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128900181,5,['test'],['test']
Testability,"On Linux Cinnamon 17.3, with g++ 4.8.4, the build fails with:. ```; -- Checking available shared pointer...; -- Could NOT find Boost; CMake Error at CMakeLists.txt:346 (message):; Boost is required to compile OpenBabel with GCC 3.x. -- Configuring incomplete, errors occurred!; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeError.log"".; noel@noel-VirtualBox ~/openbabel/build $ which g++; /usr/bin/g++; noel@noel-VirtualBox ~/openbabel/build $ g++ --version; g++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4; Copyright (C) 2013 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; For the moment, I'm going to install boost, but it shouldn't be necessary, as far as I know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1774:338,log,log,338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1774,2,['log'],['log']
Testability,"On Mon, Aug 3, 2015 at 8:02 AM, John May notifications@github.com wrote:. > I think (not tested),; > ; > https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176; > ; > is the problem as this makes the hashing asymetric (trailing bond order)?; > The rotation to find the max ring hash (in DoRings()) is then different; > depending on which way round you traverse the path. In the case here, the missing (or extra) fingerprint bit is not part of a; ring-fingerprint (there is a ring, but the closure of the ring is not part; of the fingerprint path. The 7th atom closes back to the 2nd one, not back; to the 1st one), so I don't think that that alone can be the answer. Also,; if the rotation algorithm was broken, I think that would lead much less; subtle problems than this one seems to be. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227:89,test,tested,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227,1,['test'],['tested']
Testability,"On a set of about 300 local test cases, I get no NaN messages in the logs with current svn; so this is probably now fixed. Original comment by: twomack-gphl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796781:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796781,2,"['log', 'test']","['logs', 'test']"
Testability,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1322:195,test,test,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322,2,['test'],['test']
Testability,"On pc Debian x86-64 with master sources updated today, I tried to reproduce the original pb.; Here what I got:; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.smi -ofs`; `This will prepare an index of ../../bugs/ten.smi and may take some time...`; `It contains 10 molecules`; ` It took 0.077262 seconds`; `6 molecules converted`; `5 audit log messages `; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.fs -ifs `-sNc2nc(c1ccccc1)nc3ccccc23' out.smi`; `1 candidates from fingerprint search phase`; `1 molecule converted`; `12 audit log messages `; So I don't reproduce the pb.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823:362,log,log,362,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823,2,['log'],['log']
Testability,"On the trunk (after I check in my latest), Perl bindings are identical to Python, and compile and install fine. However... make test gives:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0,; 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok; t/bond.............ok; t/conversion.......ok 3/9*** glibc detected *** double free or corruption (!prev; ): 0x082721c8 ***; t/conversion.......dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/data.............ok; t/format...........ok 1/3*** glibc detected *** double free or corruption (!prev; ): 0x0820a048 ***; t/format...........dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/internalcoord....ok; t/mol..............ok; t/residue..........ok; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 0 6 9 0 0.00% ??; t/format.t 0 6 3 0 0.00% ??; Failed 2/8 test scripts, 75.00% okay. 0/35 subtests failed, 100.00% okay.; make: *** [test_dynamic] Error 255. The main error (or at least one of them) is that the following code gives an error:; ============= ; #!/usr/bin/perl. use Chemistry::OpenBabel;. my $obConversion = new Chemistry::OpenBabel::OBConversion;. Noel; ========= Error message ; *** glibc detected *** double free or corruption (!prev): 0x081cb360 ***; Aborted. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720,5,"['Test', 'test']","['Test', 'test']"
Testability,"One more idea with this. Instead of containing imolecule.min.js with openbabel itself, we could install from the internet when the function is first used. Basically:. ```; if not installed:; get from openbabel/imolecule; cp imolecule.min.js notebook_install_directory; ```. It avoids the mess of having to figure out where to put this file, and still enables local usage after at least one remote use. If this is a better idea, I can revert `pybel/__init__.py` to `pybel.py`, delete `imolecule.min.js`, and change the pybel logic to accommodate this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652:524,log,logic,524,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652,1,['log'],['logic']
Testability,"Open Babel reads this SDF file just like Biovia Draw (I just tested with 2019 version). That is, there is an implicit hydrogen on the central nitrogen. In the other words, the error is in the original file - we read it correctly. . Again, where did this file come from? The link you provided has an SDF file with ""M CHG 2 21 1 22 -1"", which would have given the correct number of hydrogens. The file at the top of the bug report is missing this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-490233675:61,test,tested,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-490233675,1,['test'],['tested']
Testability,Open Babel test crashes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,1,['test'],['test']
Testability,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1106:146,log,log,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106,2,['log'],['log']
Testability,"Open Babel version = 2.2.0 on opensuse 11.0. [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C can makes openbabel segfault:; babel -i ""smi"" 9626.smi -o ""mol"" - ; Segmentation fault. this smiles was generated from mol:; babel -i ""mol"" 9626.mol -o ""smi"" -; [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C 10102; 1 molecule converted; 29 audit log messages. see files attached.. openbabel also segfaults when just reading it:; babel -i ""smi"" 9626.smi -o ""smi"" -; Segmentation fault. I hope this helps... Leszek . Reported by: leszekrupnicki",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/839:334,log,log,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/839,1,['log'],['log']
Testability,"Open Babel version: current; Operating system and version: linux or macos (tested both) . Looking at the following smiles: O1C23C4=C(C=C12)C1=COC(=C4OC3)C1. ![#1 (2)](https://github.com/openbabel/openbabel/assets/78424742/05122416-e1eb-464e-a770-81413af58e63). I would expect to see a SSSR containing 5 subcycles, which is what is seen, however the subcycles generated for each OBRing* shows some weird behaviour. . running the following code on the Mol object : . ```c; unsigned int rc = 0;; FOR_RINGS_OF_MOL(r,mol){; obring = &(*r);; fprintf(stderr,""%d [ "",rc++);; for(unsigned int i=0;i<obring->Size();i++){; ratom = mol->GetAtom(obring->_path[i]);; fprintf(stderr,""%d "",ratom->GetIdx());; }; fprintf(stderr,""]\n"");; }; ```. gives the following output: . ```; 0 [ 6 1 2 ]; 1 [ 3 4 5 6 2 ]; 2 [ 12 11 3 2 13 ]; 3 [ 7 8 9 10 14 ]; 4 [ 3 4 5 6 1 2 ]; ```. Looking at ring (3), we see atom indexes that are not shared with any other subcycle in the list? which would be impossible if the subcycles are generated as i would expect? To confirm, the method in RDKit does not show this behaviour: . ```python ; mol = rdkit.Chem.MolFromSmiles('O1C23C4=C(C=C12)C1=COC(=C4OC3)C1'); for sequence in rdmolops.GetSymmSSSR(mol):; for i in sequence:; print(f""{i} "", end=''); print(); ```; yields. ```; [ 0 1 5 ]; [ 4 3 2 1 5 ]; [ 7 6 13 9 8 ]; [ 11 10 2 1 12 ]; [ 13 6 3 2 10 9 ]; ```. Where overlap is seen for all the atoms across the ring set. . Happy to attempt a fix on this but some direction would be appreciated (if in fact this is a true bug, and not my misunderstanding). I believe its due to the 3 cycle, as for the majority of cases i see the correct overlaps.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641:75,test,tested,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641,1,['test'],['tested']
Testability,"OpenBabel is having problems when parsing SDF files from DrugBank. Steps to reproduce:. Download SDF from DrugBank:; http://www.drugbank.ca/sdf_set/nutra_drugs.sdf. Run babel or use corresponding function from the lib:; > babel -isdf nutra_drugs.sdf -opdb ethanol.pdb; 0 molecules converted; 2 audit log messages. Discovery Studio (DS) Visualizer, for instance, has no problem parsing SDF files from DrugBank. I'm hoping that someone can fix this before I did down into the source code. Reported by: sarkiss",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760:300,log,log,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760,1,['log'],['log']
Testability,"OpenBabel offers the Fenske-Hall Z-Matrix only among the *output* formats ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/Fenske-Hall_Z-Matrix_format.html?highlight=fenske#fenske-hall-z-matrix-format-fh)). Thus, if you use OpenBabel by its GUI, you will find its entry among the formats of the right hand pull down menu. In addition to the GUI, you equally may run OpenBabel from from the CLI / terminal / cmd.exe. Departing from the SMILES string of benzene, for example, you may issue `obabel -:'c1ccccc1' --gen3d -ofh` to generate the following output:; ---- 8>< ---- begin output. 12; C 1; C 1 1.395; C 2 1.395 1 120.000; C 3 1.395 2 120.015 1 359.8; C 4 1.395 3 119.982 2 0.1; C 5 1.395 4 120.000 3 0.1; H 1 1.087 2 119.999 3 180.1; H 2 1.087 1 119.997 3 180.0; H 3 1.087 2 119.998 1 179.8; H 4 1.087 3 120.015 2 180.1; H 5 1.087 4 119.990 3 180.1; H 6 1.087 5 119.998 4 179.8; ---- 8>< ---- end output. for example in Linux Debian 11 (bullseye, branch testing) with OpenBabel 3.1.0. Using the same installation, as expected, the command `obabel -ixyz benzene.xyz -ofh -O benzene.txt` converts a .xyz file into a permanent record output, too. The .zip attached below documents the successful conversion. [fenske_conversion.zip](https://github.com/openbabel/openbabel/files/6045570/fenske_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2331#issuecomment-786188031:979,test,testing,979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331#issuecomment-786188031,1,['test'],['testing']
Testability,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:359,test,test,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203,2,['test'],['test']
Testability,"Openbabel 2.2.3 ( Aug 18 2009 -- 16:21:20) on Windows XP, GUI and command line:. Output to CML Version 1 has the following bug:. Output of coordinate value elements are in a ""floatg"" element, that does not exist in CML, it should be ""float"". Probably an error; cause by inproper string handling, the element name ""string"" just before ""float"" leaks a ""g"" ?!. Example:. <molecule xmlns=""http://www.xml-cml.org/dtd/cml_1_0_1.dtd"" id=""Oct-1-ene"">; <atomArray>; <atom id=""a1"">; <string builtin=""elementType"">C</string>; <floatg builtin=""x3"">4.206433</floatg>; ______^_______________________^____. Example input that yields this error:. >babel.exe -icml oct-1-ene.cml -ocml test.cml -x1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/937:668,test,test,668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/937,1,['test'],['test']
Testability,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1307:16,test,testsuite,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307,4,['test'],"['test', 'tests', 'testsuite']"
Testability,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:172,Log,Log,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,5,['Log'],['Log']
Testability,Otherwise test build fails if Python interpreter is not found or is; unset.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/247:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/247,1,['test'],['test']
Testability,"Otherwise the formats won't initialize correctly. (See issue #1922). This commit includes a new test program which checks WriteString() and WriteFile() for most of the supported formats. Without this patch, several of them will fail, and saving to FPS format will segfault. I wasn't sure if it would be better to put the code into OBConversion::Write(OBBase* pOb, ostream* pos) so that if pos is not NULL, ie, when `SetOutStream(pos, false)` is called, then the index would reset. I decided against it because I didn't know if people called Write() multiple times with the same output file object, so wouldn't want a reset each time. There also seems to be a problem with pushInput()/popInput() since those only track the ostream. They should also track and restore the index, yes? That's outside the scope of this patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923,1,['test'],['test']
Testability,PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2866,test,test,2866,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,PDB file and Python code for testing purposes. Original comment by: kirkd,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/928#issuecomment-281795701:29,test,testing,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/928#issuecomment-281795701,1,['test'],['testing']
Testability,"PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; u",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5648,log,log,5648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"PHP bindings work. I'll think about adding testing procedure, although it will be a bit complicated. Since PHP5.3+ it doesn't allow loading of dynamic extensions, and location of php.ini differs from distro to distro.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618:43,test,testing,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618,1,['test'],['testing']
Testability,"PL; Location: [edited]; Requires: ; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I compute fingerprints using ECFP4, If I compute the same fingerprint for a compound many times, the result should always be identical, and the resulting tanimoto similarity = 1 for the same structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; If too many fingerprints are computed, the results become arbitrary: the same smile returns many different values. ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1) create the following script, which computes the fingerprint for ""CCCCCCCCCC"" 300 times:; ```python3; import openbabel as ob; from pybel import Fingerprint. fingerprinter = ob.OBFingerprint.FindFingerprint(""ECFP4""); #fingerprinter = ob.OBFingerprint.FindFingerprint(""FP4""); smiles_parser = ob.OBConversion(); smiles_parser.SetInFormat(""smi""). def fp(smiles):; """"""; compute and return the fingerprint from a SMILES; """"""; mol = ob.OBMol(); smiles_parser.ReadString(mol, smiles); fp = ob.vectorUnsignedInt(); fingerprinter.GetFingerprint(mol, fp); return fp. for entry in [""C""*10] *300:; print(Fingerprint(fp(entry)).bits); ```; 2) run it to count the number of different results:; ```shell; python test_ob_ecfp4.py | sort | uniq | wc -l; # result for me is 18; ```. Please note that:; - if we use e.g. FP4 (or others) the results are always reliable; - if the list is small enough (more or less between 5 and 10?) the result is always the same and becomes reliable somehow. Please let me know if you need additional details. I can contribute a python test if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1886:3091,test,test,3091,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1886,1,['test'],['test']
Testability,"Parsing molden files on Linux seems to fail: benzonitrile on Debian Wheezy (using openbabel 2.3.1+dfsg-4, but Ubuntu has the same package). % obabel -imolden benzonitrile.molf -osmi; C.C.C.C.[H].[H]	. I get the same result on Windows XP if I use the GUI (v2.3.1 or v2.3.2) but using openbabel from python (still on WinXP, same computer, same openbabel install and an up-to-date pythonxy distro), the files are parsed correctly (bindings v1.7/GUI v2.3.1). On OS X, with openbabel v2.3.0 I obtain the correct result:. % obabel benzonitrile.molf -osmi; c1(ccccc1)C#N. I attach the benzonitrile file I have used for testing but can assure you that I tested other files: always OK on OS X or from python on windows; always wrong with obabel GUI on windows and under linux. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/860](https://sourceforge.net/p/openbabel/bugs/860)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1240:612,test,testing,612,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1240,2,['test'],"['tested', 'testing']"
Testability,"Periodically we run into the problem where openbabel can't find the plugin directory. Instead of generating a useful error message, you usually get something like ""cannot open file"" and you spend a certain amount of time trying to figure out what is wrong with the file. Once you realize the problem, you spend a certain amount of time figuring out what the necessary environment variable (BABEL_LIBDIR) is. . This pull request will output a useful error message describing the problem and the fix when plugins can't be found. I've also included a test script, but am hoping someone else can figure out how to hook it into cmake (and possibly document the process).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826:548,test,test,548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826,1,['test'],['test']
Testability,"Perl ""make test"" fails",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/677:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/677,1,['test'],['test']
Testability,"Phooey, must be something in the MMFF94 code. The charge test tells me it might be electrostatic contributions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797142:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797142,1,['test'],['test']
Testability,"Platform:; openbabel-1.100.2; Linux darwin 2.6.10-1.9_FC2 #1 Thu Jan 13 17:54:57 EST; 2005 i686 i686 i386 GNU/Linux. [philip@darwin]$ /usr/local/bin/obgrep; '([#6]).([O&X1&-][O&X2])' test.smi; 0 40; Assert at File mol.cpp Line 689; Segmentation fault. If the input is invalid I would expect to see; ""Requested Atom Out of Range"" . Any suggestions?. Philip. Reported by: pgr94",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443:183,test,test,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443,2,"['Assert', 'test']","['Assert', 'test']"
Testability,Please close: #259 . Added tests. It seems it works now correctly.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/265:27,test,tests,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/265,1,['test'],['tests']
Testability,"Please compare the above structure with the [pubchem 2D structure](https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure), showing, in green, a H which 'protrudes towards the camera'. The same H is depicted as 'protruding' above the ring with the NCH3 group in [the wikipedia entry](https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png). The Pubchem 3D shows the hydrogen in more detail. My point is that obabel's depiction of this molecule with the flags I used provides an image structure where this H 'protrudes' below the molecule, but in line with a C-C bond in the ring it is a member of, so you have both lines running in the same direction, one on top of the other, and although this may structurally possible, for the purposes of depicting the structure, it is less clear than the two references included above. Now this may be because I'm using obabel incorrectly, and if so, totally cool. But although I'm new to the notion of implicit and explicit hydrogens in the context of cheminformatics and 2D structure depictions, the flags I have used have hidden all the implicit hydrogens, but not the case H in point which appears to be nonetheless plotted, but in a way which is confusing, and irrespective, I was urged to log this as a bug by Geoff, so assumed it was therefore a bug. Therefore, I'm hoping that either; 1. Someone with authority admits this is a bug; 2. Someone suitably knowledgeable informs me I'm using the wrong flags (and hopefully graciously corrects me) and obabel produces the same structure but with this H sticking out on its own or; 3. Someone suitably knowledgeable informs me that this is a feature of obabel, and irrespective of the flags, I will not be able to plot this H in such a way that it 'sticks out' without being plotted over another bond in which case, I can close this issue and use a different tool for those structures I have to plot where I find this anomaly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084:1302,log,log,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084,2,['log'],['log']
Testability,Please consider adding a testsuite for python bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2549:25,test,testsuite,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549,1,['test'],['testsuite']
Testability,"Please use sources from trunk, it was fixed (at least for Python). I'm not sure other bindings are affected by this issue, because they are handled by separate logic. Original comment by: @annulen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1076#issuecomment-281800014:160,log,logic,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076#issuecomment-281800014,1,['log'],['logic']
Testability,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:284,test,testing,284,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716,4,['test'],"['test', 'testing']"
Testability,"Previously the following were parsed (copied and pasted from the tests) - now they are rejected as invalid:; ```; ""[CH2++2]"",; ""[C+-+-]"",; ""[C+2+]""; ""[CH2--2]"",; ""[C-+-+]"",; ""[C-2-]""; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2132:65,test,tests,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2132,1,['test'],['tests']
Testability,"Previously, the code that identified ring atoms and bonds did not (un)set the flags of non-ring atoms. This meant that no matter the value of the molecule's ring perception flag, once a ring atom, always a ring atom. The included test case used to fail - it shows that even after deleting an atom from benzene, every atom thinks it's still in a ring. Part of the problem may have been that there was no way through the public API to reset ring information, so I've had to add the relevant function to OBAtom/OBBond.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1856:230,test,test,230,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1856,1,['test'],['test']
Testability,Problem cannot be reproduced with Gaussian 16 B. It seems the formatted checkpoint file created is more extensive and contains dipole moments. This might be a bug in Gaussian 09 (re-tested with rev. E).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1730#issuecomment-425932966:182,test,tested,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1730#issuecomment-425932966,1,['test'],['tested']
Testability,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:481,test,tested,481,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,8,"['Log', 'log', 'test']","['Log', 'log', 'test', 'tested']"
Testability,Procedure for adding regression tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165:32,test,tests,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165,1,['test'],['tests']
Testability,"RKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4587,test,test,4587,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,Reading Exact Polairzability from Gaussian log file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1751:43,log,log,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1751,1,['log'],['log']
Testability,Reading MDL mol files via STDIN fails if the molecule has no title. This fails to create a molecule in the second step:. > echo CCC | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; 0 molecules converted. While this works fine:. > echo CCC foo | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; CCC foo; 1 molecule converted; 13 audit log messages. As does this:. > echo CCC | babel -ismi -ocml | babel -icml -osmi; 1 molecule converted; 19 audit log messages; CCC; 1 molecule converted; 13 audit log messages. Reported by: sea36,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765:204,log,log,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765,5,['log'],['log']
Testability,Reading different types of atomic partial charges from Gaussian log file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1742:64,log,log,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1742,1,['log'],['log']
Testability,Reading g03 log files misses spin multiplicity,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:12,log,log,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,1,['log'],['log']
Testability,"Reading in avogadro/testfiles/methane.nwo with revision 3047 of the openbabel-2-2-x branch results in every vibration being doubled, there are 18 frequencies instead of 9. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/899:20,test,testfiles,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/899,1,['test'],['testfiles']
Testability,"Reading through, @ghutchis asked for a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514170701:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514170701,1,['test'],['test']
Testability,"Reapplying #1952, which I subsequently reverted in #1960 as there was a test failure on master which I think is now fixed (#1966).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1967:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1967,1,['test'],['test']
Testability,"Redoing some unit tests with SWIG, will make a pull request on success",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582,1,['test'],['tests']
Testability,"Regarding a testcase, something in testbindings.py like (note: untested):; ```; def test1768:; mol = next(pybel.readstring(""gamout"", os.path.join(testfiles, ""testfile.gamout.gz""))).OBMol; self.assertEqual(22, mol.NumAtoms()); ```; or if you prefer C++, a similar test in regressions.cpp.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378001491:12,test,testcase,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378001491,6,"['assert', 'test']","['assertEqual', 'test', 'testbindings', 'testcase', 'testfile', 'testfiles']"
Testability,Rel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home dire,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1664,test,test,1664,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:408,log,logging,408,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['log'],['logging']
Testability,Reopening as r4453 causes pytest_kekule to fail...; http://my.cdash.org/testDetails.php?test=7299516&build=228235. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1129#issuecomment-281800957:72,test,testDetails,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1129#issuecomment-281800957,2,['test'],"['test', 'testDetails']"
Testability,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/185:20,log,logic,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185,1,['log'],['logic']
Testability,"Replaced:. ```; atom->SetVector(atom->GetX() * cell_a, atom->GetY() * cell_b, atom->GetZ() * cell_c);; ```. with:. ```; atom->SetVector(pCell->FractionalToCartesian(atom->GetVector()));; ```. The old logic fails on non-cubic unit cells. Before on left, after on right. ![output](https://cloud.githubusercontent.com/assets/1449833/3989685/fd6c2f54-28bd-11e4-8755-15c5e208b800.png). The other edits are whitespace - just my vim autoremoving tabs.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/88:200,log,logic,200,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/88,1,['log'],['logic']
Testability,"Replaces #80. Decided on a new pull request to clean up the commit history. Changes:; - `imolecule.min.js` uses version in openbabel/contributed - no build changes to openbabel.; - On first run, attempts to grab `imolecule.min.js` from internet and install in `~/.ipython/nbextensions`. Enables subsequent local usage if successful, falls back to remote library otherwise.; - Notebooks now statically render in e.g. nbviewer ([example](http://nbviewer.ipython.org/github/patrickfuller/nbviewer-test/blob/master/openbabel_test.ipynb)).; - Uses IPython's require.js to significantly lower memory usage for multiple molecules in one notebook.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/90:494,test,test,494,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/90,1,['test'],['test']
Testability,"Reported by: W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; ; Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------; ; This is a single record, with multiple ""$$$$"" in places where they are *not* record terminators. All simple string search methods with awk or similar tools which simply look for the $$$$ line will fail on this. Never assume that such records do not exist. I *have* seen $$$$ in SD data lines before. While Babel is smart enough to read and output the first records from an SD input file with repeated records as above (almost) correctly, its skip function seems to have less brainpower and gets confused. It simply silently quits without any message. It is not possible to output records starting after first record from above repeated multi-record test file or after encountering such as record anywhere in the skipped part. A bad thing if something like this happens in the middle of your 500Mb file where you cannot edit. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627:926,test,test,926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627,1,['test'],['test']
Testability,Resolve ImportError with make test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2378:30,test,test,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378,1,['test'],['test']
Testability,Result of babel.exe test/files/forcefield.sdf -osmi on Win. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797140:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797140,1,['test'],['test']
Testability,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2405:127,test,test,127,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405,7,"['log', 'test']","['logic', 'test', 'tests']"
Testability,Reverted r5002 in r5004 as it causes tests to fail. Need to revisit. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1207#issuecomment-281802703:37,test,tests,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1207#issuecomment-281802703,1,['test'],['tests']
Testability,Reverts openbabel/openbabel#1870 as it appears to cause a test failure with clang,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1880:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1880,1,['test'],['test']
Testability,"Rewording your post, you identified a detail *to improve* OpenBabel, didn't you?. Well in this case, I suggest to 1) check out a current snap shot of OpenBabel as a fork in your repositories, 2) enter the adjustments in question, and 3) file for a pull request. The third step triggers a large number of automatic tests to check the then (automatically) built executable if your changes accidentally broke some functionality, or not. It takes about 15--30 mn only to let these tests run in the background.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921:314,test,tests,314,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921,2,['test'],['tests']
Testability,Right but `-h` can come **before** the input files and it works. As in the examples I gave above and below again:. But these are all fine:; ```; obabel -ipdb -opdb -h -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -ipdb -h -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -h -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236655670:170,test,test,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236655670,3,['test'],['test']
Testability,"Right now, floating point matrix code is handled by internal code and code ported from Eigen. When libblas and ATLAS are detected, the code should use this instead. This offers two advantages:; * BLAS and ATLAS are thoroughly tested and debugged.; * BLAS and ATLAS are highly tuned, vectorized, and multithreaded on many platforms, improving performance. Granted, performance is only a small component of Open Babel, but this wouldn't hurt. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/116"":https://sourceforge.net/p/openbabel/feature-requests/116",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485:226,test,tested,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485,1,['test'],['tested']
Testability,"Roger suggests instead -march=native which applies all of the relevant machine-specific optimisations (e.g. SSE4.2 might help Eigen) and so there would be no need to test for popcount. Using the -S option (show assembly) on a test program would allow us to see whether this works. Obviously, we would still need the possibility to turn off this functionality for people cross-compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105852813:166,test,test,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105852813,2,['test'],['test']
Testability,Rotor tests fail,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325,1,['test'],['tests']
Testability,"Rotor tests fail on ppc architecture, because the checks for the expected value don't take into account the modulus. The attached patch should fix the issue. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/945](https://sourceforge.net/p/openbabel/bugs/945)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325,1,['test'],['tests']
Testability,"Ruby Makefile doesn't generate properly:; The ""-flat_namespace"" is added even on non-darwin platform and causes the build to fail. See [1] for the build output and search for ""flat_namespace"" (tested on Fedora 17 and Rawhide). Openbabel version: 2.3.1; Ruby version: 1.9.3.p0; Fedora 17/Rawhide, both x86_64 and i386; GCC 4.7.0. Regards and thanks for your help!; Bohuslav ""Slavek"" Kabrda. [1] http://koji.fedoraproject.org/koji/getfile?taskID=3837717&name=build.log. Reported by: bkabrda",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1158:193,test,tested,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1158,2,"['log', 'test']","['log', 'tested']"
Testability,"Run ./configure; make That will properly build libopenbabel.dylib on Mac (or, presumably cross-compile for iPhone). Don't copy the babelconfig.h file from Windows -- Windows is not a POSIX-compliant operating system, so there are many workarounds. iPhone and Mac are UNIX-based systems and everything will be smooth. A quick Google search for configure script iPhone gave me these links:; http://pseudogreen.org/blog/iphone/; http://pseudogreen.org/bzr/sandbox/iphone/build_for_iphoneos. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373:453,sandbox,sandbox,453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373,1,['sandbox'],['sandbox']
Testability,"Running the test invalidsmiles causes a double call to free (i.e., attempting to free already free'd memory). This may be due to closing an already closed stream (e.g., in obconversion.cpp). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624,1,['test'],['test']
Testability,"S(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BAB",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17053,test,test,17053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbindings']"
Testability,SMILES test database. Original comment by: vitalingo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793871:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793871,1,['test'],['test']
Testability,"SSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:14772,test,test,14772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbindings']"
Testability,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12477,test,test,12477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:10316,test,test,10316,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,SSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3176,Log,Log,3176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"See below (Bash shell). The output, cmake.log is attached. tar -xf openbabel-2.3.0.tar.gz --gunzip; cd openbabel-2.3.0/src; cmake -DCMAKE_INSTALL_PREFIX=../openbabel >cmake.log 2>&1. Operating system: CentOS 5.4; Open babel version: 2.3.0 official stable release; cmake version: 2.8.3 (Identical results obtained with cmake version 2.6.4 as well.). Joel Dockray; bsjpd@leeds.ac.uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1072:42,log,log,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072,2,['log'],['log']
Testability,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176:145,test,tests,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176,4,['test'],"['test', 'tests']"
Testability,"See the sample below. If you uncomment make_angles() after or before adding all the bonds the set of internal coordinates the iterator returns is different. . Edit: The following behavior explains why I wasn't getting all the angle ICs before since I was calling the angle iterator between adding all the bonds. However, I still don't get any added torsion ICs even after adding both bonds. . `. 	import pybel as pb; 	import openbabel as ob . 	filepath=""tests/SiH2H2.xyz""; 	mol=pb.readfile(""xyz"",filepath).next(); 	; 	def make_bonds(mol):; 	 nbonds=0; 	 bonds=[]; 	 bondd=[]; 	 ; 	 # => bond iter returns the bond object not tuple; 	 for bond in ob.OBMolBondIter(mol.OBMol):; 	 nbonds+=1; 	 a=bond.GetBeginAtomIdx()-1; 	 b=bond.GetEndAtomIdx()-1; 	 if a>b:; 	 bonds.append((a,b)); 	 else:; 	 bonds.append((b,a)); 	 bondd.append(bond.GetLength()) ; 	 print "" number of bonds is %i"" %nbonds; 	 print "" printing bonds""; 	 for n,bond in enumerate(bonds):; 	 print "" %s: %1.2f"" %(bond, bondd[n]); 	; 	def make_angles(mol):; 	 nangles=0; 	 angles=[]; 	 anglev=[]; 	 # => angle iter returns tuple; 	 for angle in ob.OBMolAngleIter(mol.OBMol):; 	 nangles+=1; 	 angles.append(angle); 	 anglev.append(get_angle(mol,angle[0],angle[1],angle[2])); 	 print "" number of angles is %i"" %nangles; 	 print "" printing angles""; 	 for n,angle in enumerate(angles):; 	 print "" %s: %1.2f"" %(angle, anglev[n]); 	; 	def get_angle(mol,i,j,k):; 	 a=mol.OBMol.GetAtom(i+1); 	 b=mol.OBMol.GetAtom(j+1); 	 c=mol.OBMol.GetAtom(k+1); 	 return mol.OBMol.GetAngle(b,a,c) #a is the vertex #in degrees; 	; 	print("" before adding bond1""); 	make_bonds(mol); 	#make_angles(mol) #=> uncomment here this produces a 'bug'!!!!; 	; 	print("" adding bond1""); 	bond1=(3, 0); 	isOkay = mol.OBMol.AddBond(bond1[0]+1,bond1[1]+1,1); 	; 	print "" Bond added okay? %r"" % isOkay; 	; 	print("" after adding bond1""); 	make_bonds(mol); 	#make_angles(mol) #=> uncomment here this produces a 'bug'!!!!; 	; 	; 	bond2=(2, 0); 	; 	isOkay = mol.OBMol.AddBond(bond2[0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1901#issuecomment-431152478:454,test,tests,454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1901#issuecomment-431152478,1,['test'],['tests']
Testability,"See, that's my point. I don't have anything even close to that. Can you zip your source directory and post it for me? There is literally nothing in `test/CMakeFiles.txt` that would match `unittest`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-617225311:149,test,test,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-617225311,1,['test'],['test']
Testability,"Should I make a provisional patch in conda recipe to fix this issue for 2.4.1? I will try to reproduce it on linux, but I can only test it on Travis since I dont have a Mac at hand.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1802#issuecomment-375430660:131,test,test,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1802#issuecomment-375430660,1,['test'],['test']
Testability,Should fix #1900 while keeping #1851 running.; A bit hacky though since the mcdlutil routines are hard to penetrate... If the original contributors have a better solution I'm all ears!; I also added tests for both #1851 and #1900,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1902:199,test,tests,199,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1902,1,['test'],['tests']
Testability,"Since I don't have a Fedora binary, I can't test it. OTOH, it works on Mac and Windows, so I'd suggest this is a Fedora packaging issue. I'm marking this ""pending"" further comment from the poster. Without further comment, it will close in 14 days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1039#issuecomment-281797731:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1039#issuecomment-281797731,1,['test'],['test']
Testability,"Since this would be relevant for 3.2, and we can't guarantee canonicalization across feature changes, I think we're okay wrt backwards compatibility of canonicalization. I would regenerate the result files as far as the tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722:220,test,tests,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722,1,['test'],['tests']
Testability,SizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/soft,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1736,test,test,1736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,Small addition to pybel and testing of the new gitted openbabel!,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2:28,test,testing,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2,1,['test'],['testing']
Testability,So I think this is safe to close @ghutchis but perhaps you can tell me (us) how to add this particular file for example to the unit tests? :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979:132,test,tests,132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979,1,['test'],['tests']
Testability,"So far, I used MOPAC's `.out` files for a conversion to, e.g., a `.pdb`; however, your suggestion to access the more compact `.arc` files instead of the former rises the question if your interest is for the coordinates, or / and (which?) of the parameters should be understood by openbabel. May you detail which ones are of interest for you?. One of the differences between the output files, beside the representation of the geometries (e.g., presence / absence of an atom number count), is `.arc`'s entry `HEAT OF FORMATION` which equates `.out`'s entry `FINAL HEAT OF FORMATION`. To ease your discussion with the developers, I add an archive including a MOPAC `.mop` input, as well as `.out` and `.arc` output files of a recent computation of mine. The equally present `.pdb` was generated on the fly by. `obabel -imopout comp434+_1-0.out -opdb -O probe.pdb`. with an installation of open babel (3.1.0) as offered in the repositories of Linux Debian 10 / branch «testing». [test_conversion.zip](https://github.com/openbabel/openbabel/files/5012332/test_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045:965,test,testing,965,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045,1,['test'],['testing']
Testability,So many errors on make test in openbabel 3.1.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593,1,['test'],['test']
Testability,So testing for very short bond lengths should do it...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957802:3,test,testing,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957802,1,['test'],['testing']
Testability,"Some OBChemTsfm transformations, especially on radicals, can result in unexpected implicit hydrogen counts since PR#1576. I wrote up an example failure in the first commit of this PR, where assigning a charge of -1 to an atom can give it 255 implicit hydrogens under certain conditions. I suspect the underlying cause is unsigned integer arithmetic in phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives an unsigned int--if the difference would be negative, then the result is wrapped back to `UINT_MAX`, e.g. printing `(j->second - old_bond_order)` gives 4294967295 instead of -1. Then there's some truncation to fit in the unsigned char. But even if the overall expression gives the right answer most of the time, I think it would be clearer to be more explicit about the math, which would fix special cases like this bug. How should we adjust the line(s) of code in phmodel.cpp? We could explicitly typecast everything to a signed int then ensure that there are at least zero implicit hydrogens, but that seems verbose. @baoilleach Please feel free to directly commit on my PR if you have any ideas. Of course we'll need to update the test case with the correct answer as well (not H255).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895:1162,test,test,1162,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895,1,['test'],['test']
Testability,"Some follow-ups:; * Running the following command in a conda-environment (Python 3.9) on Windows similarly give a logP of 0 and in addition prints out an error.; ```; obabel -ismi -:""CC(N)C1=CC2=C(C=C1)C=NC=C2"" -osmi --append logP; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; CC(N)c1cc2c(cc1)cncc2 0; 1 molecule converted; ```; * On my regular install (conda environment in wsl2-ubuntu) I get logP 2.95. So it seems like the problem is the GroupContrib file on the windows-conda.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372#issuecomment-850391464:114,log,logP,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372#issuecomment-850391464,3,['log'],['logP']
Testability,Some properties (e.g. implicitvalence) are no longer available.; Also added index as a property and a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2293:102,test,test,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2293,1,['test'],['test']
Testability,Some test molecules with charge / radical centres. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801573:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801573,1,['test'],['test']
Testability,Some tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:5,test,tests,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,1,['test'],['tests']
Testability,"Sorry I should have provided a description. It's the ""degrees[atom_idx] = 0;"" that was missing before. Some of the elements in degrees were not being initialized, and further down I was testing the values.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350031187:186,test,testing,186,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350031187,1,['test'],['testing']
Testability,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:100,test,test,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,6,"['Test', 'log', 'test']","['Test', 'log', 'test', 'tests']"
Testability,Still buggy in openbabel 3.1.1 with ORCA 5.0.1 output files (tested under Windows 10). Trying to force continuation after errors or specifying the number of structures (= number of optimization steps in the output) have no effects.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144:61,test,tested,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144,1,['test'],['tested']
Testability,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:169,TEST,TEST,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,7,['TEST'],['TEST']
Testability,Strange that it didn't get exercised before - I think it fell through the cracks in Noel's efforts to make the tests run faster.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128913406:111,test,tests,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128913406,1,['test'],['tests']
Testability,"Support compiling only bindings against system libopenbabel. So far I have implemented it for Python, Perl and Ruby bindings. The rest of them can receive analogous treatment, but I will need someone to test them.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28:203,test,test,203,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28,1,['test'],['test']
Testability,"Sure! Added an example that fails. Demonstrated by four vector3 in the XY plane (third coordinate = 0.). I.e. the dihedral angle is then 180 degree. CalcTorsionAngle angle gives 179.974 as output. ; This test will fail in the current version of OB, but not here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29945557:204,test,test,204,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29945557,1,['test'],['test']
Testability,Sure! I want to use Openbabel to test whether a smile molecule ('CCC1=C(SC2=C1SC3=C2N(CC)C4=C3C5=NSN=C5C6=C4N(CC)C7=C6SC8=C7SC(/C=C9C(C%10=C(C\9=C(C#N)/C#N)C=C(F)C(F)=C%10)=O)=C8CC)/C=C%11C(C%12=CC(F)=C(C=C%12C\%11=C(C#N)/C#N)F)=O') is symmetric. But I don't know how to do it with python API. What I want to know is that can you show an example to use openbabel to test the smile. Thank you for your help!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838,2,['test'],['test']
Testability,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,2,['test'],['test']
Testability,"Sure. Looks fine. Seems to be getting complicated though. BTW, have you or Joshua tested on Linux?. Incidentally, the name of the project on PyPI conflicts with Open Babel itself. Why not call it openbabel-python like the Linux distros do.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33208895:82,test,tested,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33208895,1,['test'],['tested']
Testability,"Sybyl mol2 files with incorrect cases in atom types cause problems. For example: S.O2 vs. S.o2, or Cl vs. CL. The latter (CL and BR) are in the MMFF94 test set at http://www.ccl.net/cca/data/MMFF94/. The import code needs to be modified to correct for case problems. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/611:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/611,1,['test'],['test']
Testability,SyntaxError: (unicode error) 'unicodeescape' in test/testdistgeom.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,2,['test'],"['test', 'testdistgeom']"
Testability,"TH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4202,test,test,4202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbabel']"
Testability,TRP test file. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441,1,['test'],['test']
Testability,"Take two, incl. fix for failing regression tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/168:43,test,tests,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/168,1,['test'],['tests']
Testability,Test 1 unittest not run,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161,1,['Test'],['Test']
Testability,Test SD file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726,1,['Test'],['Test']
Testability,Test case fail because of syntax error in testdistgeom.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2578:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2578,2,"['Test', 'test']","['Test', 'testdistgeom']"
Testability,Test case from ChEMBL. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166#issuecomment-281801552:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166#issuecomment-281801552,1,['Test'],['Test']
Testability,Test case:; obabel -:CS(=O)(=O)C -opdb; Before:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 2 ***_Bug or almost bug**_*; CONECT 3 2; CONECT 4 2; CONECT 5 2; After:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 3 2; CONECT 4 2; CONECT 5 2. Note to self: Where is that patch (from Astex) for multiple bonds in CONECT records that I applied years ago? Something's up.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/56:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/56,1,['Test'],['Test']
Testability,"Test case; >obabel -:""CCCC(=O)(O)"" -omol2 | obabel -imol2 -osmi; CCCC(O)O *****. The problem is that the two 'aromatic' bonds to the oxygens are not interpreted correctly on reading. Given that CCCC(=O)[O-] gives exactly the same MOL2 file (according to Open Babel), it may be incorrect to have the bonds 'ar' in the first place for the COOH case. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1040:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1040,1,['Test'],['Test']
Testability,Test code for converting CML to CML. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794022:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794022,1,['Test'],['Test']
Testability,Test fail during build of OpenBabel 2.4.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250,1,['Test'],['Test']
Testability,Test file is:; [618085.sdf.txt](https://github.com/openbabel/openbabel/files/1049894/618085.sdf.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166#issuecomment-305999900:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166#issuecomment-305999900,1,['Test'],['Test']
Testability,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. The SDF entry with name starting 2c2t_39B comes from the PDB Ligand Expo and represents disorder in the structue using B atoms. This structure appears to be read correctly by OpenBabel (and Avogadro), but when writing to an SDF, OpenBabel segfaults. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/989:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/989,1,['Test'],['Test']
Testability,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. Using latest SVN, I have a segfault with:; babel all-sdf.sdf --filter ""title=1str*"" tmp.sdf. No segfault with:; babel all-sdf.sdf --filter ""title='1str*'"" tmp.sdf. Separate issue: the first command seems to match all ligands, rather than just those starting with 1str. Either the docs or the code is wrong. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/987:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987,1,['Test'],['Test']
Testability,"Test file:; obabel -:CC -osdf --property key value --gen3d -O bug.sdf. obabel bug.sdf --append key -otxt; gives the correct answer:; value. obabel bug.sdf -aP --append key -otxt; just gives a blank with ""0 molecules converted"". If the molecule has a title, then it works. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1120:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1120,1,['Test'],['Test']
Testability,Test for decaying to P1 (pull request #261),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/267:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/267,1,['Test'],['Test']
Testability,Test if an atom has been retrieved before calling SetPartialCharge; + test if the number of atoms expected by Mulliken paragraph corresponds; to the number of atoms retrieved in the previous Standard Nuclear Orientation paragraph,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1820:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1820,2,"['Test', 'test']","['Test', 'test']"
Testability,Test molecule (ionized chlorobenzoyl). Original comment by: *anonymous,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801563:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801563,1,['Test'],['Test']
Testability,Test molecule. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491,1,['Test'],['Test']
Testability,Test stuck at test_automorphism_10,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,1,['Test'],['Test']
Testability,"Tested with valgrind, see https://github.com/openbabel/openbabel/pull/2220.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2225:0,Test,Tested,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2225,1,['Test'],['Tested']
Testability,Testfile: http://pyrx.scripps.edu/SI/2010/2GDZ.pdb. obabel 2GDZ.pdb -o tmp.pdb # takes 1 second; obabel 2GDZ.pdb -o tmp.pdbqt # takes forever (I killed it after a few minutes). ?. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1083:0,Test,Testfile,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1083,1,['Test'],['Testfile']
Testability,Testing this PR will fail until the OB code is fixed to deal with charges during bond order assignment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642:0,Test,Testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642,1,['Test'],['Testing']
Testability,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:419,log,logN,419,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,2,['log'],['logN']
Testability,"Thank you for merging. ; Would you please review #1753 as well? It is also related to reading Gaussian log files. . Thank you,. Mohammad. > On Mar 16, 2018, at 6:39 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > Thanks - sorry for the long review process on this one.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1752#issuecomment-373790306>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJFpr73Kh1tq2fCUiTWkZxaOrooa7ks5te_jjgaJpZM4RbbIO>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373791891:103,log,log,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373791891,1,['log'],['log']
Testability,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:169,test,test,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309,1,['test'],['test']
Testability,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:382,test,test,382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793,6,['test'],['test']
Testability,"Thank you! Much appreciated to have more roundtrip tests. IIRC, there was a long debate about the whole CONECT thing and I believe the decision was that Open Babel shouldn't output bond order via CONECT by default (i.e., non-standard files). I *thought* that the PDB writer was supposed to have an option to do that, but I don't see it in the code (e.g., -xb = write bond orders).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514284808:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514284808,1,['test'],['tests']
Testability,"Thank you. I've had half-written email about this bug for a few weeks now, but since I didn't know what the patch was intended to do, I wasn't sure how to describe the problem. I've tested that this fixes it my issue, and it does.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/141#issuecomment-94322013:182,test,tested,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141#issuecomment-94322013,1,['test'],['tested']
Testability,Thanks - can you add the Python code as a unit test? This way it doesn't happen again...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338194417:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338194417,1,['test'],['test']
Testability,"Thanks for all the testing, but this is the correct behaviour. I wrote it up in the docs (point 2 near the bottom):; http://readthedocs.org/docs/open-babel/en/latest/WritePlugins/AddNewDescriptor.html#add-a-new-group-contribution-descriptor. It means that you need to put the most specific SMARTS string first. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1164#issuecomment-281801520:19,test,testing,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164#issuecomment-281801520,1,['test'],['testing']
Testability,"Thanks for comment! Actually part of problems are described [different ECFP2 values for the same molecule](https://github.com/openbabel/openbabel/issues/1557#issue-218369553) here. Thats the actual reason why I could not recreate a fingerprint.; I also tested different BigEndian to LowEndian conversions. For whom it may interest, I came to to this code:. `; private void LoadFingerprint(); {; Func<uint, uint> Big2Little = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; Array.Reverse(bytes, 0, bytes.Length);; return BitConverter.ToUInt32(bytes, 0);; };; Func<uint, uint> Big2Little2 = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; return (uint)((bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3]);; };; Func<uint, uint> Big2Little3 = (uint x) =>; {; return (x & 0x000000FF) << 24 |; (x & 0x0000FF00) << 8 |; (x & 0x00FF0000) >> 8 |; (x & 0xFF000000) >> 24;; };. bool isLittleEndian = BitConverter.IsLittleEndian;; const string formatter = ""{0,10}\t{1,10}\t{2,10}\t{3,10}\t{4,10}\t{5,10}""; ;; Debug.WriteLine(formatter, ""i"", ""file"", ""cmp"", ""B2L cmp"", ""parsed"", ""B2L parsed"");; Debug.WriteLine(formatter, Enumerable.Range(1, 6).Select(x => ""--------"").ToArray());. //Debug.WriteLine(""{0:X8}"", big2litte1);. string KeggSmiles = ""[C@H]1(n2c3c(nc2)c(ncn3)N)[C@@H]([C@@H]([C@H](O1)COP(=O)(OP(=O)(OC[C@H]1O[C@H]([C@@H]([C@@H]1O)O)N1C=C(CC=C1)C(=O)N)O)O)O)OP(=O)(O)O"";; string KeggECFP2 = @""f5137cdc f5137cdc f08b4928 e9e5be3f e9e5be3f e9e5be3f ; e99821a1 dfe49bdf dfe49bdf d6e0861f d6e0861f cef9a4bc ; cb69fe08 c885380c c6d3b3eb c38b3152 c38b3152 c36fb784 ; be842c9d bdb9a034 bd1c43c3 ac8924de ab904d16 aa139040 ; a795d505 9ce64676 96ad281d 7ef444f9 7ef444f9 7ef444f9 ; 7ef444f9 7be0ee02 79e96c34 782c4b73 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 69a2560a 69a2560a 69a2560a 69a2560a 636f8f6a 5faf488d ; 5faf488d 5faf488d 5d2209c6 5a9bc9d5 5888721b 5645f44d ; 54125a1f 53362b63 5299f401 4e8b69b6 4c4118f4 4b1ef6fb ; 4a7b5d42 4a7b5d42 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:253,test,tested,253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['test'],['tested']
Testability,Thanks for commenting @baoilleach :). As long as the functions are exposed (or there is another clever way to easily calculate what I need) then I see no problem with where things are stored in the C++ API. I used to use the `GetImplicitValence()` method on atoms in combination with `GetValence()` to figure out whether or not an atom needed to be given a hydrogen. Such a situation can arise if one needed to cut (in openbabel technically remove) a bond between a QM region and MM region with FragIt. I found an old blogpost of mine on the subject from almost 6 years ago (http://pythonchem.blogspot.dk/2012/01/adding-hydrogen-atoms-is-no-mean-feat.html) which explains it with a slightly different angle. The code I used has barely changed. The updated code (see https://github.com/FragIt/fragit-main/blob/develop/src/qmmm.py#L139) needs to know how many bonds really would like to be present and the following code apparently satisfies my testcases. Hope that explains how I used the old (and new) functionality.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770:943,test,testcases,943,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770,1,['test'],['testcases']
Testability,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995,5,['test'],['test']
Testability,"Thanks for pointing out that common Open Babel idiom. I had forgotten it. My patched doesn't touch Write(), only WriteString() and WriteFile(). Trying it out now I see that there is a problem. Here's my test code:; ```; >>> import pybel; >>> f = pybel.Outputfile(""cml"", ""spam.cml""); >>> f.write(pybel.readstring(""smi"", ""C"")); >>> f.write(pybel.readstring(""smi"", ""O"")); >>> f.close(); ```; On a version of Open Babel without my patch, the output is:; ```; <molecule>; <atomArray>; <atom id=""a1"" elementType=""C""/>; </atomArray>; </molecule>; <molecule>; <atomArray>; <atom id=""a1"" elementType=""O""/>; </atomArray>; </molecule>; ```; On a version of Open Babel with my patch, the output is:; ```; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""4""/>; </atomArray>; </molecule>; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O"" hydrogenCount=""2""/>; </atomArray>; </molecule>; ```; This is because pybel uses WriteFile() to open the file (which sets Index to 1), then calls Write() to re-use the already open file (keeping the Index at 1). This tells me two things: the CML format isn't designed to store multiple molecules, and Write() needs to increment the Index. I don't know how to handle the CML problem. I do know how to fix Write(). I'll update the patch accordingly, and add some test cases with of multi-record output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455193987:203,test,test,203,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455193987,2,['test'],['test']
Testability,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:492,log,logging,492,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843,2,['log'],['logging']
Testability,"Thanks for the hint to use `echo` to pipe a SMILES string to OpenBabel. So far, I used a syntax like. `obabel -:""c1ccccc1"" --gen3d -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:411,test,testing,411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['test'],['testing']
Testability,"Thanks so much, I've incorporated this into SVN trunk. It passes all unit tests, and I definitely agree with the motivation of the new code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/941#issuecomment-281795879:74,test,tests,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/941#issuecomment-281795879,1,['test'],['tests']
Testability,"Thanks to your detailed analysis, I fixed the bug and added a unit test to the 2.2.x branch for the upcoming v2.2.2. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/905#issuecomment-281795416:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/905#issuecomment-281795416,1,['test'],['test']
Testability,"Thanks. Can you put that information either in a comment in the code, or add a test case (or both!).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1663#issuecomment-336140232:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1663#issuecomment-336140232,1,['test'],['test']
Testability,"Thanks. I haven't tested the C# bindings in a while, so this was a good incentive to make sure they worked.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/47#issuecomment-31610404:18,test,tested,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/47#issuecomment-31610404,1,['test'],['tested']
Testability,Thanks. It's not the default because it hasn't received the same level of testing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-204206897:74,test,testing,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-204206897,1,['test'],['testing']
Testability,"Thanks. The fix makes sense - can you add a unit test. Otherwise, I'm sure this will creep back again.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-560179781:49,test,test,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-560179781,1,['test'],['test']
Testability,Thanks. Would you consider including a test case? Our test suite is run automatically and will let us know if a future commit would break your code.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-374848126:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-374848126,2,['test'],['test']
Testability,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/7:478,test,testing,478,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7,2,['test'],['testing']
Testability,"That's great - thanks for checking. The OBConformerSearch stuff is all available now (just checked with the OB231 release on Windows). The README is completely out of date. I'll probably just delete it and update the main docs, as we can only maintain one set of docs. Regarding the LD_LIBRARY_PATH, other options are available: http://www.chilkatsoft.com/java-loadLibrary-MacOSX.asp. I haven't tested these though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548:395,test,tested,395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548,1,['test'],['tested']
Testability,"That's great, especially the speedup for the title. I think this will be widely used. Will test as soon as possible. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/987#issuecomment-281796672:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987#issuecomment-281796672,1,['test'],['test']
Testability,That's strange... looks like it makes one of the tests seg fault.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/320#issuecomment-230034998:49,test,tests,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/320#issuecomment-230034998,1,['test'],['tests']
Testability,"That's the test cases done unless you can see something I'm missing. For the most part the new code is just special-casing the instance where an atom alias is Rn, where n is an integer. The existing code had several ways of entering such aliases - hence the multiple test cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329#issuecomment-234390535:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329#issuecomment-234390535,2,['test'],['test']
Testability,"The % notation only supports up to 99 ring closures. I have an example of a SMILES string from RDKit that goes beyond this (included in the tests). An extension to this is the %(...) notation which could in theory support any arbitrary number. I've implemented this with support for up to 5 digits. I'm also in the process of proposing this change to RDKit. I can't see any downside to supporting this notation on reading. On writing, the only alternative is to refuse to write the SMILES. I've also tightened up the parsing of the normal % notation. The existing code accepted non-digits. (Apologies for the small number of unrelated white-space changes - my editor seems to be doing this without asking.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677:140,test,tests,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677,1,['test'],['tests']
Testability,"The 'funny' thing is that my code does the same thing with many files (a for-loop) and when I am running my code 10 times it crashes at different molecules each time. So perhaps it is a racecondition or something. . My testfiles are taken from chem-file.sf.net (I copied them for testing):. http://gitorious.org/molecules/molecules/trees/master/data. My code is:. bool fileworks = obconversion.ReadFile(&mol, fullFileName);; if (fileworks){; qDebug() << ""Opened molecule "" << mol.GetTitle();; QString formula = QString::fromStdString( mol.GetFormula() );; }. See this link for reference:; http://gitorious.org/molecules/molecules/blobs/master/mainwindow.cpp#line35. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797971:219,test,testfiles,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797971,2,['test'],"['testfiles', 'testing']"
Testability,The 'smi' output format doesn't canonicalize the SMILES.; 'can' should be used instead. echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 34 audit log messages. echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 1 info messages 33 audit log messages. Original comment by: georgetu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662:208,log,log,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662,2,['log'],['log']
Testability,"The InChI code (in src/formats/inchi) should really be spun out into a ; separate library to facilitate packaging (e.g., Debian, Fedora Core...). Right now, the code is compiled every time, even if it's already installed ; on your system. This is slow for users (e.g., upgrading from 2.0.0 to ; 2.0.1) and developers. A useful fix would be:; * Check if libinchi is installed (e.g., with pkg-config and configure tests ; for libinchi).; If installed, don't bother re-compiling; * If not installed, compile src/formats/inchi and install for users. Right now, I don't think the library is widely-deployed, so Open Babel ; should still include a copy of the sources. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524:412,test,tests,412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524,1,['test'],['tests']
Testability,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:500,test,test,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,['test'],['test']
Testability,"The MSVC tests work fine for me, so I'm going to mute them on appveyor and then trigger a rebuild.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305856729:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305856729,1,['test'],['tests']
Testability,"The Open Babel code needs thorough testing. To begin; with, the following tests are absolutely needed:. * file translation (Peter's roundtrip scripts need to; be ported to UNIX shell script or Perl to allow testing; on more platforms); * hydrogen addition (e.g. SMILES strings before and; after addition); * SMARTS testing (already exists); * ring perception testing (already exists); * atom typing tests (i.e. from Ghemical or other format; with typed-bonds, but no atom types); * bond typing tests (i.e. from XYZ or other format). Other tests are needed, but these would be a beginning; on formal testing procedures. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/19"":https://sourceforge.net/p/openbabel/feature-requests/19",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388:35,test,testing,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388,9,['test'],"['testing', 'tests']"
Testability,"The Open Babel command-line executable does not ; generate error messages or generates messages like ; ""Assert at File <directory>/src/mol.cpp Line nnn"" when ; I feed it with invalid input files and then it ; generates an empty output file. This behaviour is ; trouble-prone speciallyl when open babel is used by ; other software. Reported by: thiagohp. Original Ticket: ""openbabel/feature-requests/63"":https://sourceforge.net/p/openbabel/feature-requests/63",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1432:104,Assert,Assert,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432,1,['Assert'],['Assert']
Testability,"The PDB format is described at:; http://www.wwpdb.org/documentation/format23/sect10.html. If one atom forms more than 4 bonds, a second CONECT record should be used:; """"""; # If more than four fields are required for non-hydrogen and nonsalt-bridge bonds, a second CONECT record with the same atom serial number in columns 7 - 11 will be used. ; """""". Currently OB leaves out the CONECT record for any atom with more than 4 bonds. Test case:; import openbabel, pybel. mol = openbabel.OBMol(); for i in range(6):; atom = mol.NewAtom(); atom.SetAtomicNum(6). mol.AddBond(1,2,1); mol.AddBond(1,3,1); mol.AddBond(1,4,1); mol.AddBond(1,5,1). print ""...with four bonds""; print ""\n"".join([x for x in pybel.Molecule(mol).write(""pdb"").split(""\n"") if x.find(""CONECT"")>=0]). mol.AddBond(1,6,1). print ""...with five bonds""; print ""\n"".join([x for x in pybel.Molecule(mol).write(""pdb"").split(""\n"") if x.find(""CONECT"")>=0]). Output:; ...with four bonds; CONECT 1 2 3 4 5; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6; ...with five bonds; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6 1. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640:429,Test,Test,429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640,1,['Test'],['Test']
Testability,The Python tests are failing under Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1910:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1910,1,['test'],['tests']
Testability,"The Ruby extensions for Open Babel fail to compile under Mac OS X 10.5.1 Leopard. The system is a Core2Duo MacBook Pro (2.2 GHz Santa Rosa chipset). Steps to reproduce:. Source for OpenBabel-2.1.1 was downloaded from the SourceForge site. OpenBabel was compiled with:; > ./configure; > make; > sudo make install. SWIG files were generated from scratch (using the openbabel-ruby.i definitions) and the Ruby extconf.rb script was run as follows (from the scripts/ruby directiory):. > swig -ruby -autorename -c++ -I../../include -o openbabel_ruby.cpp ../openbabel-ruby.i; > ARCHFLAGS=""-arch i386"" ruby extconf.rb; > make. Results:. See attached log files. SWIG throws a number of warnings, but generates openbabel.cpp regardless. Ruby's mkmf doesn't complain, however the bundle creation step during compilation appears to not recognize any OpenBabel library symbols. Reported by: jballanc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704:642,log,log,642,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704,1,['log'],['log']
Testability,The Travis-CImake test with RUN_CTEST='true' fails for me even without the patch.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206470018:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206470018,1,['test'],['test']
Testability,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:236,test,testing,236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,3,['test'],"['test', 'testing']"
Testability,"The `__enter__` and `__exit__` methods were added to the `pybel.Outputfile` class, making it compatible with python's `with` statement. The testing script was also modified. Example:; ```python; with self.toolkit.Outputfile(""sdf"", ""testoutput.txt"") as outputfile:; for mol in self.head:; outputfile.write(mol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1971:140,test,testing,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1971,2,['test'],"['testing', 'testoutput']"
Testability,The appveyor test failure is not mine. The appveyor output appears to indicate a problem in the appveyor environment (can't find zlib). Is this a known issue?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218#issuecomment-628668492:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218#issuecomment-628668492,1,['test'],['test']
Testability,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2041:4,assert,assertion,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041,2,"['assert', 'test']","['assertion', 'test']"
Testability,"The attached PDB test file (generated by OB-2.0, no less) generates Xx ; unknown dummy atoms in translation. The same thing happens with a selection of PDB files, e.g.; 1MBN; 2DHB; 3CYT; 6ADH; 7HVP. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570,1,['test'],['test']
Testability,"The attached file (from the PDB ligand download) has some missing bonds and so is interpreted by OB as containing multiple radicals. When written out and read back in again, an error occurs as the M RAD line is too long. Tested with 2.2.3 (I know that Craig has made some changes since). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934:221,Test,Tested,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934,1,['Test'],['Tested']
Testability,The babel data dir is specified by conda at ``BABEL_DATADIR=C:\Users\...\anaconda3\envs\...\share\openbabel`` and there is a `rigid-fragments.txt`. I have problems getting the binaries plus pip installed for 3.1.1. So I can not test this at the moment.; But I have installed the `OpenBabel-3.1.1-x64.exe` and in ``C:\Users\...\AppData\Roaming\OpenBabel-3.1.1\data`` there is also a `rigid-fragments.txt`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547:228,test,test,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547,1,['test'],['test']
Testability,"The biomolecule chain/residue perception functions fail frequently. In the ; process of building up unit tests (i.e., SMARTS and XYZ coordinates => ; PDB), the following tests fail:. * All single residue (amino acids or nucleic); * All dipeptides attempted; * PDB entries (selections from the molecule of the month archive); 1ACC; 1HNY; 1MBN; 1UBQ; 2DHB; 3CLN; 3CYT; 3KIN; 4INS; 6ADH; 7HVP. In fact, chain perception was not observed to work correctly in any test. ; The attached test program illustrates this. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/571:105,test,tests,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571,4,['test'],"['test', 'tests']"
Testability,"The build directory is hard-coded into the library. WHY?!?; I tried -DLIB_INSTALL_DIR=lib64 and it set the rpath to; /home/building/science/openbable-2.4.1/.....; I tried -DLIB_INSTALL_DIR=/usr/lib64 and it set the rpath to /usr/usr/lib64; (yes, two usr's).; PLUS, the path to the modules is hard-coded into the library and therefore; it can never find the modules. obabel -i mol test.mol -o inchi -Otest.out; obabel: cannot read input format!; Open Babel 2.4.1 -- Feb 17 2018 -- 03:41:23; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information. This build system is crap. Why don't you provide a gnu autoconf build system?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1781:380,test,test,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1781,1,['test'],['test']
Testability,The code (and test) is heavily inspired by the corresponding code for cdx format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2421:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2421,1,['test'],['test']
Testability,"The code looks fine. I think it's worth testing against ChemDraw and ChemDoodle import/export of Molfiles, but that can come later.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1626#issuecomment-328150184:40,test,testing,40,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1626#issuecomment-328150184,1,['test'],['testing']
Testability,"The coding style is fine -- we don't have a formal requirement. Most function names have initial capitals, but this is not rigorously enforced. (Some cleanup of coding style is underway for Open Babel 3.0.). I think the patch is generally good. The only problem is that if the element field is missing, it throws up a warning and can't set the atomic number. I think if the element field is missing (e.g., non-standard or just OLD files) it throw a warning and should use the previous (possibly buggy) logic. I've seen too many non-standard and old PDB files, which is why the code has a lot of patches. So if you can restore the old logic for missing element columns, I'll apply immediately. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794237:502,log,logic,502,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794237,2,['log'],['logic']
Testability,The commit looks fine - looks like there are some Windows compiler errors though:; https://ci.appveyor.com/project/baoilleach/openbabel/builds/26342761/messages; > 'vcnts' : unknown size test\addhtest.cpp 44 test_runner; > expected constant expression test\addhtest.cpp 44 ; > cannot allocate an array of constant size 0 test\addhtest.cpp 44,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517824911:187,test,test,187,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517824911,3,['test'],['test']
Testability,"The constructor was not initializing _ptr to null, and this is what was; used to test the validity of the iterator. This caused iteration over a; ringless molecule (e.g. empty) to sometimes fail (segfault or infinite; loop). But not always.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2295:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2295,1,['test'],['test']
Testability,"The current SVN trunk fails ""make check"" on Cygwin for; some but not all tests:. src/babel -H; ... many formats. make check results: ; [Sorry, can't copy/paste to this window]; aromatic.... ok; ... [everything ok]; smarts .... dubious; Test returned status 0 (wstat 134, 0x86); unitcell .... dubious; Test returned status 0 (wstat 134, 0x86); after all the subtests completed successfully; cml ... skipped - CML format not loaded; test-set ... skipped - roundtrip test set not found. Checking both smarts and unitcell, these dump core. I'm; now recompiling with CXXFLAGS=""-g"" to see if I can get; a backtrace. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/544:73,test,tests,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544,5,"['Test', 'test']","['Test', 'test', 'test-set', 'tests']"
Testability,"The current SVN trunk for logp_psa fails ""make check"" including the following:. # Unit tests for OBLogP and OBPSA ; 1..7; ok 1; ok 2 # 1.4008; not ok 3 # 20.23; ok 4 # 2.5815; ok 5 # 0; ok 6 # 2.0264; not ok 7 # 12.03. Note that 3 and 7 are considerably off from their expected values (29.46, 29.1). Perhaps the PSA code has some issue or missing group contribution?. I'd be glad to automate this test over a wider range of molecules, if desired. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623:87,test,tests,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623,2,['test'],"['test', 'tests']"
Testability,"The current Subversion trunk crashes on the attached PubChem .xml file ; (but works fine when told what it is using -ipc or renaming to .pc). Crash log:; 52 if(pConv->GetOutFormat()->GetType() == pDefault-; >GetType()). pDefault is NULL. Backtrace:; #0 0x0673e1c0 in OpenBabel::XMLFormat::ReadChemObject ; (this=0x674957c, pConv=0xbfffebdc) at xmlformat.cpp:52; #1 0x010559ec in OpenBabel::OBConversion::Convert (this=0xbfffebdc) ; at obconversion.cpp:499; #2 0x01057a1c in OpenBabel::OBConversion::Convert (this=0xbfffebdc, ; is=0xbfffe550, os=0xbfffe000) at obconversion.cpp:443; #3 0x010599d0 in OpenBabel::OBConversion::FullConvert ; (this=0xbfffebdc, FileList=@0xbfffeba0, OutputFileName=@0xbfffebb8, ; OutputFileList=@0xbfffebac) at obconversion.cpp:1167; #4 0x00004e34 in main (argc=3, argv=0xbffff07c) at main.cpp:326. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575:148,log,log,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575,1,['log'],['log']
Testability,"The current code will always form aromatic rings first, so it has no chance of the structure you present. On the other hand, we're currently working on a new bond typing approach in my group, so if you don't mind, I'm going to add your molecule to the test set.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2255#issuecomment-655845834:252,test,test,252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2255#issuecomment-655845834,1,['test'],['test']
Testability,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1115:30,log,logP,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115,5,['log'],"['logP', 'logp']"
Testability,"The example ; ""Conversion from a SMI file in STDIN to a Mol2 file written to STDOUT:""; in [https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples); is not working in the version 2.4.1. Also other conversions to STDOUT are not working; For example:; `obabel water.xyz -osmi `; should print out:; ```; O water.xyz; 1 molecule converted; ```. Where `water.xyz` file is:; ```; 3. O 1.05178 -0.02305 -0.06389; H 2.01967 0.01563 -0.08957; H 0.77293 0.75008 -0.57719; ```. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1604:1206,test,test,1206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1604,1,['test'],['test']
Testability,"The example of the file prior the change can be found in nwchems QA tests. [ch4_zts.out](https://gist.github.com/xomachine/36f01755627c29829b86a3347c445513#file-ch4_zts-old-out-L405)([ch4_zts.out at the nwchem repository](https://raw.githubusercontent.com/jeffhammond/nwchem/master/QA/tests/ch4_zts/ch4_zts.out)); After the change, nwchem produces files like [this](https://gist.github.com/xomachine/bd1334f865ef519a26f3a55fc262cfb7#file-ch4_zts-new-out-L405).; To keep nwchem parser compatible with both of version I just removed '@' part of the zts calculation pattern. Latest commits should solve another problem introduced with https://github.com/jeffhammond/nwchem/commit/76d2b8c465fd291883f3b8533ccda0686193bb8b . The equal sign now is truncated from 'Bead number = X' pattern after adding 'zts' to the start for the string. (Line 147440 in [new ch4_zts.out](https://gist.github.com/xomachine/bd1334f865ef519a26f3a55fc262cfb7) and 178025 in [old ch4_zts.out](https://gist.github.com/xomachine/36f01755627c29829b86a3347c445513)). I'm not sure how to write the test for that case. Including outputs mentioned above to the repository probably is not a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338429345:68,test,tests,68,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338429345,3,['test'],"['test', 'tests']"
Testability,"The ffmmff94 test has always failed on MSVC. It also fails on the Kitware buildbot (not sure if always). Both at the same point, the energy value for bucky ball, test 17. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013,2,['test'],['test']
Testability,"The first leak is fixed, the second is still in place.; Tested with latest trunk version (4012). I found the 'delete pLineEndBuf;' in the destructor commented out. If I uncomment it all leaks are gone for my testcases (most are for-loops with heavy OBConversion instantiation and ReadString usage.); I didnt look through all the OBConversion code, there might be cases where a delete of the pLineEndBuf in destructor segfaults, but for a simple OBConversion instantiation and ReadString usage the issue remains. Original comment by: runz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566:56,Test,Tested,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566,3,"['Test', 'test']","['Tested', 'testcases']"
Testability,"The following MOL2. @<TRIPOS>MOLECULE; *****; 7 6 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.1429 -0.6767 0.0535 C.2 1 LIG1 0.3530; 2 O -0.9980 -1.0170 -0.3558 O.co2 1 LIG1 -0.7467; 3 O -3.0085 0.0671 -0.4866 O.co2 1 LIG1 -0.7467; 4 C -2.5397 -1.2501 1.4028 C.3 1 LIG1 0.0375; 5 H -2.0729 -2.2270 1.5616 H 1 LIG1 0.0343; 6 H -3.6248 -1.3762 1.4674 H 1 LIG1 0.0343; 7 H -2.2155 -0.5708 2.1965 H 1 LIG1 0.0343; @<TRIPOS>BOND; 1 1 2 ar; 2 1 3 ar; 3 1 4 1; 4 4 5 1; 5 4 6 1; 6 4 7 1. in a code like. ###############################; import openbabel as ob. conv = ob.OBConversion(); conv.SetInAndOutFormats('mol2', 'mol2'). mol = ob.OBMol(). conv.ReadFile(mol, 'mols/aa.mol2'). print mol.GetTotalCharge(). conv.WriteFile(mol, 'test.mol2'); ################################. will print 0 instead of the expected -1 charge. Reported by: psxjp. Original Ticket: [openbabel/bugs/904](https://sourceforge.net/p/openbabel/bugs/904)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1284:727,test,test,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1284,1,['test'],['test']
Testability,"The following Python code renames the first residue in a PDB; file. The renaming works except that OpenBabel appends a '1',; obviously the residue number, to the new name in the mol2 output. Openbabel should not arbitrarily change a user's naming choices. import pybel. mol = pybel.readfile('pdb', 'test.pdb').next(). obmol = mol.OBMol; res1 = obmol.GetResidue(0); res1.SetName('FOOBAR') # appends '1' to 'FOOBAR'. mol.write('mol2', 'test.mol2', overwrite = True). Reported by: psxjp. Original Ticket: [openbabel/bugs/903](https://sourceforge.net/p/openbabel/bugs/903)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1283:299,test,test,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1283,2,['test'],['test']
Testability,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025:607,Log,Log,607,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025,5,['Log'],['Log']
Testability,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1249:603,test,test,603,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249,3,['test'],['test']
Testability,"The following aromatic SMILES is not converted corectly into its kekule form:. c12-c3c(cc(N)cc3)Cc1cccc2. Open Babel generated info messages during smi->sdf and smi->smi conversions:. babel ---errorlevel 2 -h -ismi c12-c3c(cc(N)cc3)Cc1cccc2.smi -osmi; c12-c3c(cc(N)cc3)Cc1; cccc2-ob.smi; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Information in OpenBabel::OBMol::start_kekulize; Kekulize Error for molecule. 1 molecule converted; 2 info messages 44 audit log messages. The obtained output is a structure different than the original one, represented in the aromatic smiles c12-c3c(cc(N)cc3)Cc1cccc2:. C12=C3C(=CC(=CC3)N)CC1C=CC=C2. Is Open Babel behaving as expected in this particular case? . Reported by: vedina",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866:614,log,log,614,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866,1,['log'],['log']
Testability,"The following code segfaults when run on the attached; gzipped SD file. It runs fine when the uncompressed SD; file is used. from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf.gz""); while notatend:; print obmol.GetMolWt(); print obmol.NumAtoms(); obmol = OBMol(); notatend = obconversion.Read(obmol). On running this code the output I get is:. 560.6309496; 70; Segmentation fault. My configuration is:. openbabel-2.0.2b1-20060701; Python 2.4; SWIG 1.3.29; Ubuntu Dapper. Reported by: @rajarshi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562:271,test,test,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562,1,['test'],['test']
Testability,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222:56,test,tested,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222,1,['test'],['tested']
Testability,"The following two SMILES represent the exact same; molecule. One has its aromaticity corrupted by; OpenBabel, while the other is interpreted correctly:. c1ccccc1n1cccc1c1ccccc1; c1cc(c2ccccc2)n(c2ccccc2)c1. Feeding these two SMILES into ""babel -i smi -o smi"" yields:. c1c(cccc1)n1c(ccc1)c1ccccc1; C1C[N](C(C1)=C1CCCCC1)=C1CCCCC1; 2 molecules converted. I tested this with both the ""stable"" 2.0 release and; with the current development version (svn revision: 1380). Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538:355,test,tested,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538,1,['test'],['tested']
Testability,The formatting is messed up of your mol file so I can't test it directly (you should attach it next time). It seems to work fine for me with the current version of OB. My guess is that you are using an old version.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2209#issuecomment-625766365:56,test,test,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2209#issuecomment-625766365,1,['test'],['test']
Testability,"The gradient test was failing randomly as calling GetGradient() appears to just return random numbers (different values each time). This fixes it by ensuring that Energy() is called first. This may be a problem in the underlying C++, but for now, this sorts it out.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1966:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1966,1,['test'],['test']
Testability,"The install prefix shouldn't have any effect. What I'll do is try a few more experiments (e.g. CMake 2.6, etc.) to see if I can trigger the test failures. If nothing works, I'll mark the bug as ""closed"" as there's nothing else we can do right now... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797800:140,test,test,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797800,1,['test'],['test']
Testability,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1076:894,test,tested,894,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076,1,['test'],['tested']
Testability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:19,test,tests,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,2,['test'],['tests']
Testability,"The latest version is 2.3.1? I installed 2.3.1. ; Could you send me a link?. Yujie Tian. > On Mar 10, 2015, at 5:03 AM, baoilleach notifications@github.com wrote:; > ; > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:675,Log,Log,675,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,"['Log', 'test']","['Log', 'test']"
Testability,"The manpages were crafted from inspecting the source, Git log and/or by experimenting with their usage.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1678#issuecomment-339709689:58,log,log,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1678#issuecomment-339709689,1,['log'],['log']
Testability,"The mm3format.cpp code is essentially unimplemented, appears to ; crash frequently in roundtrip testing, and does not properly ; implement the MM3 format. This format code should either be removed or fixed. As it stands, it's ; misleading. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461:96,test,testing,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461,1,['test'],['testing']
Testability,"The new 2.1 function OBMol::NewBond() appears to cause crashes when used. It's not clear how it differs from the existing AddBond() call, which works fine. I'm adding a new unit test for this bug and will debug. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608:178,test,test,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608,1,['test'],['test']
Testability,"The new test/formula.cpp checks OBMol::GetFormula(), ; OBMol::GetMolWt() and OBMol::GetExactMass(). These *should* be the same before and after OBMol::AddHydrogens(). For example:. cout << obmol.GetMolWt() << endl; // calculates molecular weight ; inc. implicit hydrogens. obmol.AddHydrogens(); // should make implicit hydrogens into ; explicit ones. cout << obmol.GetMolWt() << endl; // should be the same as before. Instead, while the calculated *formulas* are correct, I get things like:. CCOC(CNC(=O)NC(=O)c1cccnc1)OCC; 281.138 // before hydrogen addition; 281.157 // after hydrogen addition. FC(F)(F)C/1=NNC(=O)\C1=C/NCc2cccs2; 275.034 // before hydrogen addition; 275.187 // after hydrogen addition. Cn1ccc2nc3oc4ccccc4c(=O)c3cc2c1=O; 278.069 // before; 278.183 // after. All of the masses seem correct before hydrogen addition. I have not ; checked the complete list of formulas or masses by hand yet. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534,1,['test'],['test']
Testability,The origin of the error was fixed in r4328 and Chris has made a new release. The test program compiles fine. Marking as closed... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1046#issuecomment-281797825:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1046#issuecomment-281797825,1,['test'],['test']
Testability,"The patch replaces some calls to IsNear with IsNear_mod, but adds a new function IsNear. That code doesn't compile, 'unknown symbol IsNear_mod' or something like that. I think you've meant the new function to be called IsNear_mod and renamed it when I've tested your patch. Original comment by: kick_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804562:255,test,tested,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804562,1,['test'],['tested']
Testability,"The problem isn't with the OBDotNet.dll. It's with openbabel_csharp.dll. If; I were you, I would search my computer for all instances of this file and; consider which is being found when you run your application. On Mon, 28 Oct 2019 at 13:52, xjjius <notifications@github.com> wrote:. > Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0; > directory. The C# code was built successfully. But l got the the error; > message above when I try to run it. In the 2.4.1 version, the same code; > runs perfectly..; >; > I have also tried the the Java binding using the same method in; > openbabel-3.0.0. It worked will.; >; > A simple test code:; >; > class Program; > {; > static void Main(string[] args); > {; > string molFile = ""N(CNC1)CC1"";; > OBConversion conv = new OBConversion();; > conv.SetInFormat(""smi"");; > OBMol mol = new OBMol();; > conv.ReadString(mol, molFile);; > int numberAtoms = (int)mol.NumAtoms();; >; > for (int i = 1; i <= numberAtoms; i++); > {; > OBAtom atom = mol.GetAtom(i);; > string label = atom.GetAtomType();; > uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); >; > Console.WriteLine($""{label} : {hetero}"");; > }; >; > Console.ReadLine();; > }; > }; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2068?email_source=notifications&email_token=AAALCGPTRYKWOTDHRQMP6Y3QQ3VBXA5CNFSM4JFP3FMKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECM6E7I#issuecomment-546955901>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGJGSAN5UJSSOUWLKWLQQ3VBXANCNFSM4JFP3FMA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525:645,test,test,645,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525,2,['test'],['test']
Testability,"The provision of multiple SMILES including an optional title as in the example by the documentation indeed was new for me; I did not spot this when `openbabel` transitioned to `obabel` years ago. On discovery with your initial question, I noticed the criterion `'title=*C'` will yield .true. for any title if upper case `C` is the last character. On the other hand, the input with an additional `*` trailing `C`; ```bash; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C*'; ```; yields; ```; CC	CC; CC	4C; CC	CCC; 3 molecules converted; ```; By similar token,; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh*""'; ```; processes all four entries,; ```; CO	oh; CO	aoh; CO	oaoh; CO	ohaoh; 4 molecules converted; ```; Inspired by this observation, I briefly thought about discerning the second entry, on one hand, and the third and fourth, on the other. At least with the installation available to me (version 3.1.1 as provided by Linux Debian 12/bookworm (branch testing)), a regex-based filter like either one of ; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh""' # check a; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh*""' # check b; ```; was not successful. So far, I'm not sure about this, so my question to you: based on how *you* use OpenBabel, do you think a regex-based search in the titles would be a useful addition to OpenBabel?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965:1015,test,testing,1015,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965,1,['test'],['testing']
Testability,The reason I didn’t bother with a test is because the result still isn’t right (those hydrogens shouldn’t be added).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489288414:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489288414,1,['test'],['test']
Testability,The stack array kLeast_rho_fix is initiated as an array with; MAX_LAYERS entries. It was used as a pointer in statements to; test whether the pointer is NULL. The clang compiler did not; like this and therefore an alternative test for MAX_LAYERS>0; is used.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2074:125,test,test,125,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074,2,['test'],['test']
Testability,"The stereo objects are correctly updated (with OBStereo::ImplicitRef) when the hydrogens are removed. However, the InChI format did not handle this correctly. The first 2 examples are actually a special case. The molecules are not stereogenic because there are two implicit neighbors. These should be (explicitly) ignored, similarly how C\[C@](C)(C)C would be handled. For tetrahedral stereochemistry the inchi format could only handle implicit refs if these were the first or second atom in the smiles string. This was easily extended to the general case. Fix with regression tests (pull request created): https://github.com/timvdm/openbabel/tree/issue2111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357:577,test,tests,577,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357,1,['test'],['tests']
Testability,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:634,test,test,634,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743,5,['test'],['test']
Testability,"The structure of the file is correct. The problem is the connectivity of; the atoms. In the lmp file that I previously attached, some H atoms are; bonded with each other, instead of being bonded to C atoms.; The connectivity in the PDB file is correct. On Fri, Jan 29, 2016 at 7:49 PM, Geoff Hutchison <ghutchis@users.sf.net>; wrote:. > Can you be a bit more specific about ""not properly generated?"" I don't use; > LAMMPS much, so I'm not sure what you might want the lammps file to look; > like. Do you have an example of a LAMMPS file with bonding information?; > ------------------------------; >; > * [bugs:#972] <http://sourceforge.net/p/openbabel/bugs/972/> Bug; > generation of bonds lmpdat*; >; > *Status:* open; > *Group:* 2.3.x; > *Labels:* Lammps; > *Created:* Thu Jan 21, 2016 10:57 AM UTC by Sebastian ECHEVERRI RESTREPO; > *Last Updated:* Thu Jan 21, 2016 10:57 AM UTC; > *Owner:* nobody; > *Attachments:*; >; > - test.lmpdat; > <https://sourceforge.net/p/openbabel/bugs/972/attachment/test.lmpdat>; > (1.9 kB; application/octet-stream); > - test.pdb; > <https://sourceforge.net/p/openbabel/bugs/972/attachment/test.pdb>; > (1.5 kB; application/x-aportisdoc); >; > Dear developpers,; >; > I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24; >; > I have found a bug in the generations of lammps data files.; >; > I am converting a PDB file to a lmpdat file using the command; > babel -i pdb test.pdb -o lmpdat test.lmpdat; >; > Although the generation of the atoms is done correctly, the bonds are not; > properly generated.; >; > Attached you will find the input and output files.; >; > Regards,; > Sebastián; > ------------------------------; >; > Sent from sourceforge.net because you indicated interest in; > https://sourceforge.net/p/openbabel/bugs/972/; >; > To unsubscribe from further messages, please visit; > https://sourceforge.net/auth/subscriptions/; >. -- ; Sebastian Echeverri Restrepo; http://tinyurl.com/sebastianecheverrir. Original comment by: sebas-n1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1351#issuecomment-281804923:928,test,test,928,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351#issuecomment-281804923,6,['test'],['test']
Testability,The symmetry code has recently been rewritten. Support for 0D MDL files has been implemented. I will add this particular molecule as a test example. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/897#issuecomment-281795325:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/897#issuecomment-281795325,1,['test'],['test']
Testability,The test failure is supposed to be caused by the difference between SMILES generate from the predicted molecule (https://github.com/openbabel/openbabel/blob/18b5248b4aca14a5c9f224df08520cc4819dbcbf/src/distgeom.cpp#L918) and SMILES generated from SDF made by obabel. I'm not sure why such a difference exists.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242,1,['test'],['test']
Testability,"The test passes fine on Linux. I'm going to mark this as closed, pending further comment. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797866:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797866,1,['test'],['test']
Testability,"The thing that confuses me is that [cmake sets this to be true](https://cmake.org/cmake/help/v3.0/prop_tgt/POSITION_INDEPENDENT_CODE.html) when build_type is SHARED , which it is here. This is why [Fedora's build logs](https://kojipkgs.fedoraproject.org//packages/openbabel/2.4.1/5.fc26/data/logs/x86_64/build.log) already have -fPIC and work fine. And builds on my ubuntu system use -fPIC and work fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995189:213,log,logs,213,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995189,3,['log'],"['log', 'logs']"
Testability,"The wx-widgets test is called and stored in the Makefile even when the wx-gui is not enabled. This results in a build failure on Gentoo Linux. The wx-config command should never be called if the GUI hasn't been enabled. config.status: executing include/openbabel/babelconfig.h commands; Makefile:162: *** missing separator. Stop.; *; * ERROR: sci-chemistry/openbabel-2.2.0_beta5 failed.; * Call stack:; * ebuild.sh, line 49: Called src_compile; * environment, line 2104: Called die; * The specific snippet of code:; * emake || die ""emake failed""; * The die message:; * emake failed. Reported by: @cryos",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764,1,['test'],['test']
Testability,"There are additional WIndows-specific build test failures related to the; Builder. On Tue, 29 Oct 2019 at 08:47, Eisuke Kawashima <notifications@github.com>; wrote:. > My machine is Debian 10.1, so probably this issue is specific to windows; > (is #2041 <https://github.com/openbabel/openbabel/issues/2041> related?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2069?email_source=notifications&email_token=AAALCGNS2N62RGMFFP2ISADQQ72CVA5CNFSM4JGEEOYKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECPWFKI#issuecomment-547316393>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGI52KPUFK35C2NAKRLQQ72CVANCNFSM4JGEEOYA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2069#issuecomment-547349969:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2069#issuecomment-547349969,1,['test'],['test']
Testability,"There are at least two solutions to resolve the issue reported. Either. - with file `test.smi` you present, provide the instruction in a *different sequence*, i.e. `obabel -ismi test.smi -osmi --separate`. because `-ismi` instructs OpenBabel the (then in the *following* defined) input file consists of content of the .smi syntax. This instruction actually works regardless if the file in question actually possesses the file extension `.smi`, or not. .or. - if you like to stay on the command line and don't want to create a `.smi` file in advance, type. `obabel -:'[Na].[Cl]' -osmi --separate`. to provide the SMILES string directly. *Caveat:* The instruction will fail if there is a space between the colon and the leading quote sign. If you want, you may enclose the SMILES string with double quotes. `obabel -:""[Na].[Cl]"" -osmi --separate`. to generate the same output. And yes, `-osmi` and `-oSMI` seem to be functionally equivalent to each other, too. As checked (OpenBabel 3.1.1, provided by the repositories of Linux Debian 11 / bullseye, branch testing), both approaches yield the result you anticipate:; ```; [Na]	#1; [Cl]	#2; 2 molecules converted ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154,3,['test'],"['test', 'testing']"
Testability,There are two rules in bondtyp.txt that I don't understand the; justification of and I don't see how they can be correct when you take; into account that they are applied before aromaticity is perceived so; I've removed them. I have included a test case from a PDB ligand that fails one of these; rules. If there is a good reason to leave these in then we may need to call; AssignFunctionalGroupBonds after pass 5 of PerceiveBondOrders so; aromaticity is set or figure some otherway to narrow the rules to not; apply in inappropriate cases.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2384:244,test,test,244,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2384,1,['test'],['test']
Testability,"There is a bug in the current version with OBMolAtomBFSIter in Python bindings. ; The Python3 code like . for atom, depth in OBMolAtomBFSIter(mol, 1):. results in an error. Traceback (most recent call last):; File ""./test.py"", line 17, in <module>; for atom, depth in OBMolAtomBFSIter(mol, 1):; TypeError: 'OBAtom' object is not iterable. This behavior can be checked with a script from https://baoilleach.blogspot.ru/2008/07/calculate-circular-fingerprints-with.html . The problem may be fixed by addition of `__next__ = next` in the code of the `class OBIterWithDepth(OBIter)` in `scripts/openbabel-python.i` lines 410 - 421. https://github.com/openbabel/openbabel/blob/6bfa4234df4e6744fec858b9e562d419848e6985/scripts/openbabel-python.i#L422",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1636:217,test,test,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1636,1,['test'],['test']
Testability,"There is a failing clang test on the master now. I think it might have been this. I am unable to reproduce it, for the moment due to a lack of a Mac. Am trying with Linux. We'll see.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1870#issuecomment-411653219:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1870#issuecomment-411653219,1,['test'],['test']
Testability,"There is a live ebuild in science overlay, you can install latest development version using that. Though there is a bug currently which prevents installation of Python bindings for the live version because of the issue with sandbox, which I don't know how to resolve (have reported it on bugzilla).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484:224,sandbox,sandbox,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484,1,['sandbox'],['sandbox']
Testability,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:305,test,test,305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615,2,['test'],['test']
Testability,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481,4,['test'],"['test', 'testbindings', 'tests']"
Testability,There were missed path changes in some places. Fix tests for BINDINGS_ONLY build (OB_MODULE_PATH override is necessary to point to system installation of OB).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1977:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1977,1,['test'],['tests']
Testability,"There's a test now... still don't like what hydrogens are added, but they at least don't have crazy bond lengths.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514655654:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514655654,1,['test'],['test']
Testability,"There's interest in revisiting the roundtrip testing, e.g., #2008 - I suspect there's a need to create a separate repository for a larger subset of testing, including SMILES, SDF/Mol, PDB, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048:45,test,testing,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048,2,['test'],['testing']
Testability,"These changes add two new formats: [ChemDoodle JSON](http://web.chemdoodle.com/docs/chemdoodle-json-format) and [PubChem JSON](http://pubchem.ncbi.nlm.nih.gov/pug_rest/PUG_REST.html). Both formats depend on [JsonCpp](http://jsoncpp.sourceforge.net), a public domain JSON reader and writer library for C++. This has been added as a single amalgamated file to the project, so it is not required as an external dependency. I'm not sure how to provide unit tests and/or example files, but I can do so if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/14:453,test,tests,453,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/14,1,['test'],['tests']
Testability,"These should be fixed now, so please give master a test. I'm going to check if we can add an Appveyor MinGW build for testing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/282#issuecomment-198028838:51,test,test,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282#issuecomment-198028838,2,['test'],"['test', 'testing']"
Testability,This branch contains updated versions of the tests that are all contained in a single executable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/11:45,test,tests,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/11,1,['test'],['tests']
Testability,"This bug also affects the methane.g03 testfile of Avogadro. The problem is the new code to read the Standard orientation instead of the input orientation. It goes through the file looking for the second occurance of ""orientation"". However, if the ""nosym"" keyword had been supplied, only the input orientation is printed. The while loop then runs till EOF - at which point the following rewind will no longer work (the abstract stream object is gone?), the stream pointer is still at ""-1"" and the subsequent parsing fails. I have changed this now so that the orientation keyword is read every time and if the string ""Symmetry turned off by external request."" is found, only the first orientation is read. It has to be parsed directly as the input orientation is printed before the ""Symmetry turned off"" string, and then all we would have for parsing would be that latter string. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801415:38,test,testfile,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801415,1,['test'],['testfile']
Testability,"This bug was discovered while testing out the new iterators. The old iterator marcos used iterators that had an operator bool() which implicitly converts into unsigned long. Instead of using the atom's id, a boolean value was used for IsCis/IsTrans.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2634:30,test,testing,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2634,1,['test'],['testing']
Testability,This change add support for converting Jaguar input files to other formats. i.e. it adds READ support for Jaguar input files. I didn't know how to update the tests for this feature. Please let me know how to do this if needed. Thanks.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/336:158,test,tests,158,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/336,1,['test'],['tests']
Testability,This change should fix #2428 by checking for the PNG format header using an `unsigned char`. Also added a regression test that tries to read SMILES data encoded in a png file.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430,1,['test'],['test']
Testability,"This change will build _openbabel.so in scripts/python/openbabel instead; of the default build/lib. This is necessary because openbabel.py tries; to import _openbabel like this:. if __package__ or ""."" in __name__:; from . import _openbabel; else:; import _openbabel. This results in a circular import error when running make test (the; first branch of the if is triggered). This code appears to be generated by; SWIG with no obvious way to change it to catch the ImportError and call; import _openbabel instead. Note the PYTHONPATH is set to include; build/lib, but it doesn't matter because SWIG is forcing the import to; happen in scripts/python/openbabel. I'm not sure why this hasn't been a problem in the past, perhaps there's; been a change in SWIG. This is with SWIG 4.0.1 and cmake 3.18.6. I think the best solution is to move all the files that are being built; in /scripts to the build directory rather than polluting the src tree; with them, but this would require changing all the bindings and I'm not; up for building and testing every binding.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2378:325,test,test,325,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378,2,['test'],"['test', 'testing']"
Testability,"This code doesn't compile on our test systems. See under ""All checks have failed"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/330#issuecomment-281664974:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/330#issuecomment-281664974,1,['test'],['test']
Testability,This could well have been fixed by revision 4836 (which is post 2.3.1). I have reproduced the problem with the cclib test file but I don't have trunk binaries around right now. I am building a binary with that revision now and will check. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802256:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802256,1,['test'],['test']
Testability,"This could work too (both py2 and py3 compatible):; ```; import subprocess; import os. def test():; libdir_var = 'BABEL_LIBDIR'; libdir_val = os.environ.pop(libdir_var, None). msg = subprocess.check_output('echo ""CCC"" | ./bin/obabel -ismi -ocan', shell=True, stderr=subprocess.STDOUT, universal_newlines=True); assert 'cannot read input format!' in msg. if libdir_val:; os.environ[libdir_var] = libdir_val. test(). ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384325285:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384325285,3,"['assert', 'test']","['assert', 'test']"
Testability,"This does not happen with the current SVN -- I think there were a few stereo bugs with obgen a few months ago. Can you confirm it now works for you? To ensure the bug does not re-occur, I have added it to the test set. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796779:209,test,test,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796779,1,['test'],['test']
Testability,"This doesn't fix the underlying problem, it just hides it. There is a; logical error in the calling code. On 24 July 2018 at 22:25, Julien Nabet <notifications@github.com> wrote:. > Would the attached patch be ok? (At least I don't reproduce the problem); > Or it should be less naive than this?; > patch.txt <https://github.com/openbabel/openbabel/files/2225501/patch.txt>; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1866#issuecomment-407557333>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeczUmn80E3akxNwwpHyBPppX13nks5uJ5C6gaJpZM4VBMsG>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1866#issuecomment-407718564:71,log,logical,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1866#issuecomment-407718564,1,['log'],['logical']
Testability,"This don't believe this is an Open Babel bug. I don't know what version of Cairo you're using or whether you have the appropriate devel packages for that. The errors in the log above are:. ```; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; ```. I'd suggest you run `ccmake .` in your build directory and clear out the lines for:; ```; CAIRO_INCLUDE_DIR ; CAIRO_LIBRARY ; ```. By unsetting them, you'll build a version of Open Babel without Cairo (PNG) support, but I can guarantee it will build. Otherwise, you'll need to sort out the libcairo errors.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437:173,log,log,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437,2,['log'],['log']
Testability,This fixes a logic error in OBBuilder which led to nondeterministic behavior for some groups (e.g. carboxylate).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/236:13,log,logic,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/236,1,['log'],['logic']
Testability,"This format is named svgbs, but this is really a svg file. This PR is for test and review. It has only been tested with the dioxin file. Up to now there are some known limitations:; - How to handle wobbly bonds and ring bonds (I don't have any clue what this means); - The conversion of a file containing more than one molecule will fail (not tested). It brings more complexity, because that would imply keeping the svg definitions and saving everything in a memstream until the very end. That would spill svg related code.; - The tool does not allow two filters to have the same name. But the name is used as the file extension. Thus, we can not use svg for this new format. This is a proposed fix for #193",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202,3,['test'],"['test', 'tested']"
Testability,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:82,test,tests,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,10,"['Test', 'log', 'test']","['Test', 'log', 'test', 'tests']"
Testability,"This is a ""master"" bug, to consolidate several otherwise duplicate reports. [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]; C2C=CC=CC=2; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O. These are all tested in the ""smartsparse"" test. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/971:210,test,tested,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/971,2,['test'],"['test', 'tested']"
Testability,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2380:460,test,test,460,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380,1,['test'],['test']
Testability,"This is a bug reported by Madeleine Walz on the openbabel-devel list. Given a file format without bond orders, the bond orders for azete were not being correctly inferred. Madeleine reported the bug with Gaussian input, but has been strangely resistent to providing actual example files so the test is with xyz. The issue is PerceiveBondOrders uses bond angles to estimate; hybridization states and azete has a 90 degree angle (so the N; hybridization is set to zero and double bonds aren't made where they; should). The fix is a pretty narrow check that probably doesn't generalize to any other molecules. Regression test included.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2379:294,test,test,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2379,2,['test'],['test']
Testability,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/54:284,test,tested,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54,3,"['Test', 'test']","['Test', 'test', 'tested']"
Testability,This is a fix for #305. The test file provided by the OP is included as a regression.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/308:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/308,1,['test'],['test']
Testability,"This is a follow-on from the work on implicit hydrogens. In the end no changes were made to the data structures used to store information, but the handling of the existing file formats has been tweaked. Storing undervalent atoms in MOL files now uses the valence field, rather than M RAD. M RAD is only used if a spin has been specified. Now reading undervalent atoms from SMILES does not set the spin (it did previously). For depiction, changes were needed to ensure that radical dots were depicted in the same situations as before (by testing for either spin or undervalence).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1626:537,test,testing,537,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1626,1,['test'],['testing']
Testability,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010:782,test,testing,782,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010,2,['test'],"['test', 'testing']"
Testability,This is an updated pull request for #1656 that fixes the test failures when it was merged after #1640.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1661:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1661,1,['test'],['test']
Testability,This is apparently because the avogadro testfile is doubled for some reason - there are two identical copies of the same data in methane.nwo. Thus closing this report. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/899#issuecomment-281795342:40,test,testfile,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/899#issuecomment-281795342,1,['test'],['testfile']
Testability,"This is certainly a bug (we need more testcases) but while it is true that the original code did handle ""CL"" and ""Chlorine"" among other synonyms, I decided during the rewrite that the GetAtomicNum should just contain the atomic symbol 'Cl'. This function should do one job and do it well. In other words, I'd prefer not to change a core function for the sake of a particular format, and instead just lower-case the 2nd letter before lookup.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974:38,test,testcases,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974,1,['test'],['testcases']
Testability,"This is currently in progress: turn the current website & documentation ; into a wiki. A test wiki has been installed and the current ""skin"" for Open Babel and ; the individual web pages are slowly being converted. Initial experience is ; good -- this should make life easier for everyone soon. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/71"":https://sourceforge.net/p/openbabel/feature-requests/71",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1440:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440,1,['test'],['test']
Testability,"This is finally fixed with some cis/trans stereo changes made by Noel. The code is in the latest 2.3 snapshot. Noel, we should add some InChI <-> SMILES test cases using Python to make sure this doesn't regress. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793819:153,test,test,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793819,1,['test'],['test']
Testability,"This is fixed in the development version. Current release:; obtautomer test.smi gives ""C[NH+]c1ccccc1"". Dev version:; obtautomer test.smi gives ""C[NH2+]c1ccccc1""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1692#issuecomment-344923752:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1692#issuecomment-344923752,2,['test'],['test']
Testability,This is fixed. I'm adding these SMILES to the coordinate generation unit test.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2146#issuecomment-625389216:73,test,test,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146#issuecomment-625389216,1,['test'],['test']
Testability,"This is from Craig James (migrated from PR#1445453. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546:394,test,test,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546,1,['test'],['test']
Testability,"This is how you use OBGraphSym.GetSymmetry:; ```python; from openbabel import openbabel; mol = openbabel.OBMol(); conv = openbabel.OBConversion(); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); conv.SetInFormat('smi'); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); gsym = openbabel.OBGraphSym(mol); symmetry = openbabel.vectorUnsignedInt(); print(gsym.GetSymmetry(symmetry)); print(list(symmetry)); ```; The above will yield the following output:; ```; 19; [4, 10, 19, 10, 11, 14, 8, 17, 15, 9, 6, 16, 7, 13, 2, 5, 12, 18, 3, 1]; ```; I do believe that since the number of atoms in the SMILES and the number of symmetry classes (19) is the same that the molecule doesn't have any symmetry. But note that this is graph symmetries on an atom level. It doesn't mean that the entire molecule is symmetric even if you have symmetries in the graph. So I would advise you to test on several examples to find how to do it best. For the symmetric molecule `CCc(c1)cccc1CC` I get the following:; ```; >>> conv.ReadString(mol, 'CCc(c1)cccc1CC'); True; >>> gsym = openbabel.OBGraphSym(mol); >>> gsym.GetSymmetry(symmetry); 6; >>> list(symmetry); [1, 3, 6, 5, 4, 2, 4, 6, 3, 1]; ```; While `FC(F)(F)c1cc(C)ccc1` will give:; ```; >>> gsym.GetSymmetry(symmetry); 9; >>> mol.NumAtoms(); 11; >>> list(symmetry); [2, 9, 2, 2, 8, 6, 7, 1, 4, 3, 5]; ```; i.e. the three F atoms are symmetric but not the molecule as a whole...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165:899,test,test,899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165,1,['test'],['test']
Testability,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064:935,test,test,935,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064,1,['test'],['test']
Testability,This is now a test case (in test/mol) and works fine. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795786:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795786,2,['test'],['test']
Testability,"This is now fixed in SVN 2-2-x branch, as of revision 3057. I will be making a 2.2.2b3 release, which will have the fix, if you'd like to test it. Thanks to Noel for the bug fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290:138,test,test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290,1,['test'],['test']
Testability,"This is now fixed, and the SMILES are in the kekule python test. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796269:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796269,1,['test'],['test']
Testability,"This is probably the same problem you just logged in 3075063. . The main reason I stalled is that it involves making a decision on the semantics of this notation, and not just fixing a bug. Anyhow, time to grab the bull by the horns, as we say here... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/991#issuecomment-281796762:43,log,logged,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/991#issuecomment-281796762,1,['log'],['logged']
Testability,"This is related to https://github.com/openbabel/enhancement-proposals/pull/7. I only made the change for SMILES and InChI, as MOL needs more thought. The change was simple in the end and didn't require any API changes. A one line change in the relevant readers. It was figuring out why test cases failed that took the time. A number of bugs were fixed in the course of getting the test suite back to working:; - if a molecule didn't have hybridisation perceived, OBBuilder did not work correctly.; - OBAtom:: and Bond:IsAromatic() did not always trigger reperception, even where the OBMol flag was unset. I've changed this behavior, as I think it's unexpected.; - vector3::randomUnitVector() created a static OBRandom but set the seed using system time each time it was called. This meant that the same 'random' vector was returned during a period of 1s. Meanwhile, the OBBuilder is looping around for 1 second trying to find a suitable vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1696:286,test,test,286,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1696,2,['test'],['test']
Testability,This is to test OB:s capacity to generate correct bond orders by comparing reading a correct SDF file to a Gaussian log file. More tests can be added later.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385,3,"['log', 'test']","['log', 'test', 'tests']"
Testability,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:42,test,tests,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340,5,"['Test', 'assert', 'test']","['Test', 'assertRaises', 'testRFformaterror', 'testpybel', 'tests']"
Testability,This makes sense to me - a more consistent API and includes a test case.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299#issuecomment-786040880:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299#issuecomment-786040880,1,['test'],['test']
Testability,"This may be a little off topic but why does it matter where I add the `-h` parameter in the command line tool? If I put it at the end before the input file it just hangs, but anywhere else it works. Version: Open Babel 3.1.0 installed with Homebrew. This hangs:; ```; obabel -ipdb -opdb -O test.pdb -h /path/to/imatinib.correct.CONECT.pdb; ```. But these are all fine:; ```; obabel -ipdb -opdb -h -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -ipdb -h -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -h -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; ```. Even putting `-h` at the very end works:; ```; obabel -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb -h; ```. Sounds like a `getopt` issue?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236469720:290,test,test,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236469720,5,['test'],['test']
Testability,"This merge request is to fix CDXML inverted y-axis discussed in [PR1777](https://github.com/openbabel/openbabel/pull/1777).; The `Molfile` coordinate system: increase Y, move up.; The `Cdxml` coordinate system: increase Y, move down.; Two systems define opposite Y-axis directions, and result in an inverse during conversion. Meanwhile, Chemdraw doesn't auto-center the structure, and I add logic to make sure the structure showed in the field-of-view. If the structure position is in a negative region, it hides. I pick 15 molecules with stereochemisty, and convert them from `mol` to `cdxml` with this PR.; The `compare.docx` in the zip file shows the conversion is good, and no inverse occures.; [openbabel_cdxml_inverse_updated.zip](https://github.com/openbabel/openbabel/files/1967324/openbabel_cdxml_inverse_updated.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831:391,log,logic,391,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831,1,['log'],['logic']
Testability,"This problem doesn't only manifest on `arm64` or `ppc64le`, I'm seeing the exact same test failure on Intel Haswell and AMD Rome (zen2). I've worked around this by applying the following patch, under the assumption that this is OK to do (strictly comparing floating-point values doesn't seem like a good approach to me in general):. ```diff; --- openbabel-openbabel-3-1-1/test/testobconv_writers.py.orig	2022-01-12 20:12:01.480069896 +0100; +++ openbabel-openbabel-3-1-1/test/testobconv_writers.py	2022-01-12 20:12:12.180174159 +0100; @@ -2876,7 +2876,7 @@; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102012; + -1.4648575597102014; ],; ""y"": [; 1.5846,; @@ -2891,7 +2891,7 @@; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102012; + -1.4648575597102014; ],; ""style"": {; ""annotation"": [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246#issuecomment-1011407598:86,test,test,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246#issuecomment-1011407598,3,['test'],['test']
Testability,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966:1241,log,log,1241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966,2,['log'],['log']
Testability,This provides a new tool that extracts thermochemistry (Delta H formation etc.) from a Gaussian log file. The patch also provides the necessary reference data from a large set of calculations and experiments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200:96,log,log,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200,1,['log'],['log']
Testability,"This really should have a test, e.g., in test/testbabel.py.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-387875127:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-387875127,3,['test'],"['test', 'testbabel']"
Testability,"This relates to reading the correct change and spin multiplicity when importing a Gaussian log file (.g03). The current implementation looks for the a line containing ""Symbolic Z-matrix:"" then reads the 3rd and 6th tokens from the next line, which usually says ""Charge = # Multiplicty = #"". Some log files do not contain the words ""Symbolic Z-matrix"", but follow a different format, such as:. Cartesian coordinates read from the checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. or. Redundant internal coordinates taken from checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. Molecules read from these log files end up with no charge or spin multiplicity set. Instead of looking for the line after ""Symbolic Z-matrix"", is there any harm in just looking for the line containing ""Multiplicity ="" ?. (The latter seems to work for all my files). Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:91,log,log,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,3,['log'],['log']
Testability,"This script fails:; ```; import pybel; mymol=pybel.readstring('smi','CCOC(=O)C'); mymol.addh(); mymol.make3D(); print mymol.write(format='mol2'); ```; ```; Traceback (most recent call last):; File ""x.py"", line 3, in <module>; mymol=pybel.readstring('smi','CCOC(=O)C') ; File ""/usr/local/lib/python2.7/site-packages/pybel.py"", line 199, in readstring; raise ValueError(""%s is not a recognised Open Babel format"" % format); ValueError: smi is not a recognised Open Babel format; ```. But when queried, it says that ```smi``` is supported:; ```; import pybel; print sorted(pybel.informats); ```; ```; ['CONFIG', 'CONTCAR', 'CONTFF', 'HISTORY', 'MDFF', 'POSCAR', 'POSFF', 'VASP', 'abinit', 'acesout', 'acr', 'adfout', 'alc', 'aoforce', 'arc', 'axsf', 'bgf', 'box', 'bs', 'c09out', 'c3d1', 'c3d2', 'caccrt', 'can', 'car', 'castep', 'ccc', 'cdjson', 'cdx', 'cdxml', 'cif', 'ck', 'cml', 'cmlr', 'crk2d', 'crk3d', 'ct', 'cub', 'cube', 'dallog', 'dalmol', 'dat', 'dmol', 'dx', 'ent', 'exyz', 'fa', 'fasta', 'fch', 'fchk', 'fck', 'feat', 'fhiaims', 'fract', 'fs', 'fsa', 'g03', 'g09', 'g92', 'g94', 'g98', 'gal', 'gam', 'gamess', 'gamin', 'gamout', 'got', 'gpr', 'gro', 'gukin', 'gukout', 'gzmat', 'hin', 'inchi', 'inp', 'ins', 'jin', 'jout', 'log', 'lpmd', 'mcdl', 'mcif', 'mdl', 'ml2', 'mmcif', 'mmd', 'mmod', 'mol', 'mol2', 'mold', 'molden', 'molf', 'moo', 'mop', 'mopcrt', 'mopin', 'mopout', 'mpc', 'mpo', 'mpqc', 'mrv', 'msi', 'nwo', 'orca', 'out', 'outmol', 'output', 'pc', 'pcjson', 'pcm', 'pdb', 'pdbqt', 'png', 'pos', 'pqr', 'pqs', 'prep', 'pwscf', 'qcout', 'res', 'rsmi', 'rxn', 'sd', 'sdf', 'siesta', 'smi', 'smiles', 'smy', 'sy2', 't41', 'tdd', 'text', 'therm', 'tmol', 'txt', 'txyz', 'unixyz', 'vmol', 'xml', 'xsf', 'xyz', 'yob']; ```. Downstream FreeBSD bug report: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=194599. Version 2.4.1 on FreeBSD 11.2 installed from the port.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1898:1234,log,log,1234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1898,1,['log'],['log']
Testability,"This seems to be still broken as of v3.1.1 on arm64 architecture:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```; Test `testTemplates` of `test/testbindings.py` also fails on arm64. Should I open a separate issue, or can this be reused?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1851#issuecomment-940089499:285,Test,Test,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1851#issuecomment-940089499,4,"['Test', 'test']","['Test', 'test', 'testTemplates', 'testbindings']"
Testability,"This seems to happen in ConnectTheDots, see below when running with --errorlevel 4, within valgrind. Kekulize is called 126 times, and EndModify complains about being called once too many.. Vincent. valgrind babel ---errorlevel 4 Open_babel_crash.cif Open_babel_crash.xyz . *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule Crystallographic Information File ; ============================== ; *** Open Babel Audit Log in ConnectTheDots ; Ran OpenBabel::ConnectTheDots ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize . [SNIP: call to Kekulize a total number of 126 times]. ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence ; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Debugging Message in EndModify ; _mod is negative - EndModify() called too many times ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format ; 1 molecule converted . Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168:295,Log,Log,295,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168,9,['Log'],['Log']
Testability,This took a while. Kekule analysis is tricky. This is now fixed in the 2.2.x branch for 2.2.2 and a unit test has been added to smilesmatch. The big problem is the assignment of single/double bonds has trouble with the biphenyl core -- it expects rings or fused rings. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794874:105,test,test,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794874,1,['test'],['test']
Testability,"This was likely a bug before, but is more obvious now. The ""chains ; parser"" feature, which attempts to deduce residues and peptide chains ; *ONLY* works without any attached hydrogens. The attached test file ""test.gpr"" is a Ghemical file with a random amino ; acid chain and hydrogens added. test-noH.mol2 is a Mol2 file from babel 2.0 with proper residue/chain ; perception after hydrogens were deleted. test-withH.mol2 is a Mol2 without hydrogen deletion. No residues were ; found. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515:199,test,test,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515,4,['test'],"['test', 'test-noH', 'test-withH']"
Testability,This was more of a 'testing the GitHub action system' patch more than anything else.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2163#issuecomment-611498548:20,test,testing,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2163#issuecomment-611498548,1,['test'],['testing']
Testability,"This was reported on the list by Bjoern Gruening. Here's a test case in Python, using the attached test.mol:; mol = pybel.readfile(""mol"", ""test.mol"").next().OBMol; bond = mol.GetBond(1, 28); mol.DeleteBond(bond); mol.Separate() # Segfault. Note that test.mol is a 2D structure with very short bond length. This shouldn't affect mol.Separate() though, right?. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851,4,['test'],['test']
Testability,This works in OB-3.0 with my testing with the fragment-based generator updates.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2061#issuecomment-552119010:29,test,testing,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2061#issuecomment-552119010,1,['test'],['testing']
Testability,"This works using OB 2.3 trunk (finally!). I'm marking this closed, and adding it as a test case. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/705#issuecomment-281779990:86,test,test,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/705#issuecomment-281779990,1,['test'],['test']
Testability,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:234,test,testing,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850,1,['test'],['testing']
Testability,"Those files don't provide the information I'm looking for. Could you; provide the output that appears on the screen when you run cmake? For; example, in a clean build directory, something like ""cmake ../openbabelsrc; |& tee cmake.out"". On 23 January 2018 at 20:56, Basil Miturich <notifications@github.com>; wrote:. > Yes, I did, so here are the logs: https://gist.github.com/bazitur/; > 7bebdb03456beec290f77db682b6d28a; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUzzY4d9Eu610Vlx7jttW4hKK6ySks5tNkdkgaJpZM4RqM1E>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359937298:346,log,logs,346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359937298,1,['log'],['logs']
Testability,"ThrowError was taking a total of 1.9% of the time for smi->smi. This was mainly attributed to three log messages, all audits. I've added an 'if' statement to check the logger's output level before throwing the error. I think it would make sense for this to be an idiom throughout the library.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:100,log,log,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,2,['log'],"['log', 'logger']"
Testability,"To create a test file use: ; obabel -:C1C(CC)C1 --gen2d -h -O testfile.mol. If we generate the aliases, the ethyl will be replaced. However, none of its hydrogens are, resulting in an incorrect molecular structure (with lots of disconnected hydrogen radicals!):. obabel testfile.mol -omol --genalias -xA. OpenBabel03151210282D. 14 11 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -0.8660 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.8660 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.7566 -0.7566 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.5335 -1.1430 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.4266 -2.4010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -2.9360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -1.8310 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.3660 -3.4360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -2.9010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.2769 1.0335 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 4 1 0 0 0 0; 1 2 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 13 1 0 0 0 0; 4 14 1 0 0 0 0; A 3; Et; M END; 1 molecule converted. Note that there is a somewhat related problem with expanding aliases (should the hydrogens be added or not?), but I don't think this really matters that much. The user can always explicitly request new hydrogens. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1161:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1161,3,['test'],"['test', 'testfile']"
Testability,"To emphasize, you've indicated that tests pass without `-march=native` and also pass on other chipsets. That seems like a weird optimizer / compiler bug, not a fault in Open Babel. AFAIK, there's no chipset-dependent code in our codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317:36,test,tests,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317,1,['test'],['tests']
Testability,"To further clarify the change, I'll add some before/after pics... Before:; ![test_wedge_before](https://user-images.githubusercontent.com/86855/26872833-3dba859e-4b78-11e7-80c6-d2e1deab0905.png). After:; ![testwedge](https://user-images.githubusercontent.com/86855/26872767-003be000-4b78-11e7-8d51-082920db33de.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582#issuecomment-306748302:206,test,testwedge,206,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582#issuecomment-306748302,1,['test'],['testwedge']
Testability,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:797,test,tested,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131,2,['test'],['tested']
Testability,"To really use the potentials of OpenBabel, the INSTALL and README files are important reads, otherwise people will miss big parts of the installation e.g. the bindings and depictions. If there should be an install script, I think it should at least ask for a few common installation options. Also, I've never had make test not fail. At all my attempts, at least test_ffgaff_1 fails so then the install script won't install anything anyway with no clear indication. (With no clear indication, I mean something in the lines of ""Test(s) failed so OpenBabel will not be installed, to force installation, type 'sudo make install'"").",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682:318,test,test,318,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682,3,"['Test', 'test']","['Test', 'test']"
Testability,"To test whether a double bond is implicitly cis (and thus requires no stereobond symbols), the original code used SSSR based ring perception. In fact, it always triggered it, even where the bond was not in a ring. Doh!. The replacement code does not use the SSSR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715,1,['test'],['test']
Testability,"Travis is simply intended to guard against test failures. To actually deal with them, you need to reproduce the failure locally. There is more info on running the tests at: https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. This describes how to run an individual test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,Travis use Swig 2.0.x ([log](https://travis-ci.org/openbabel/openbabel/jobs/145775600#L254)) and all tests pass. Defining arbitrary variable should not mess with anything (unless it is not meant for anything else). I may try building OB with Swig 3.0.7 which is just before that feature was used if you think it will help.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055:24,log,log,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055,2,"['log', 'test']","['log', 'tests']"
Testability,"Try a more recent version of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake W",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:479,Log,Log,479,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,"['Log', 'test']","['Log', 'test']"
Testability,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:822,test,test,822,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293,2,['test'],['test']
Testability,"Trying out the new ""obmm"" tool, and running a CG step yields a fast crash. The ""logos"" variable is never initialized, so the code attempts to write to a NULL stream. While this can be fixed with modifications to obmm, I worry that there's no guarantee that the stream pointer will be set. (i.e., there's no exposed constructor). So this can occur easily in even well-meaning client code. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606:80,log,logos,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606,1,['log'],['logos']
Testability,"Trying to strip properties from an SDF, we've come across a change in behaviour between Open Babel 2.3.0 and 2.3.1/2.3.2 where Babel >2.3.1 seems not to read or output the valences correctly and results in output SDFs with many radical atoms defined. Deleting or adding Hs has no effect, if we output SMILES then the SMILES also contain atoms with non-standard valences, e.g. converting babel -isdf my_sdf.sdf -osdf my_new_sdf.sdf returns an SDF with ; M RAD 8 7 3 8 2 9 2 10 2 11 2 12 2 13 2 14 2; The corresponding SMILES:; O=C1N(C=NC=NC1)C2=CC=CC=C2 (from the SDF properties); O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1 (from Babel GUI); So, we have tested this on:; Linux, Mac 2.3.0 - we obtain a SDF / SMILES with the molecule we expect; Windows GUI or command line 2.3.1, 2.3.2, Mac - we obtain the radical representation, i.e. SDF with M RAD lines for each molecules and smiles with [c] and similar as above. The SMILES via Windows GUI did change slightly between 2.3.1 (O=C1N(c2ccccc2)[C]=N[C]=N[C]1) and 2.3.2 (O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1), but the M RAD line in the SDF was the same.; The input SDF (attached) was generated via MetFrag command line using the CDK to output structures retrieved from ChemSpider. A difference in the SDF is that the 6th column after the atom letter in the input SDF contains the valences, this is not in the output SDF from Babel - for 2.3.0 or >=2.3.1.; I am not 100 % sure if this a problem with our SDF, or a bug? If the former, please let us know! . Reported by: schymane. Original Ticket: [openbabel/bugs/931](https://sourceforge.net/p/openbabel/bugs/931)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1311:650,test,tested,650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1311,1,['test'],['tested']
Testability,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:17,test,tests,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209,4,['test'],"['test', 'tests']"
Testability,Two problems:; (1) Handling of chiral N in SMILES reader (writer too?) not working.; (2) Handling of chrial N in CML writer (probably writer too) not working. Here's the test case: [N@@](C1)(C2)C(C2)CC1. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796861:170,test,test,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796861,1,['test'],['test']
Testability,"Unexpected cross of binding when generating chemical structures from smiles. I had difficulties opening exported .mol file using Compound Discoverer 3.3 SP3, which may or may not be related to this issue. `obabel -:""N(=NF)F"" -O ""test.svg""`. or. `obabel -:""N(=NF)F"" -O ""Dinitrogen_difluoride.mol"" --gen2D`. EDIT: This appears to also be the case in pubchems 2D viewer. Is this made using openbabel or am I missing something? See: https://pubchem.ncbi.nlm.nih.gov/compound/139594. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Mac OS Sonoma 14.2 (23C64). ## Expected Behavior; F-N=N-F. ## Actual Behavior; F-NXN-F or see attached image.; ![test](https://github.com/openbabel/openbabel/assets/47218002/0e82373e-41ae-4125-84d0-3b114875a9a1)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699:229,test,test,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699,2,['test'],['test']
Testability,"Use obabel instead of babel, which is deprecated. The handling of option parameters is much better and many of the current formats and ops rely on this. (It is also safer and has SMILES input built in.) Your example would be:; ./bin/obabel -:CC -O test.png -xp 300. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522:248,test,test,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522,1,['test'],['test']
Testability,Use partial metrization and damped stereochemical corrections. This is still incomplete - causes some test failures.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253:102,test,test,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253,1,['test'],['test']
Testability,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/35:100,test,tests,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35,1,['test'],['tests']
Testability,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1151:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151,8,"['log', 'test']","['log', 'test']"
Testability,Using test.smi. c1ccccc1C=Cc2ccccc2	stilbene; c1ccccc1\C=C\c2ccccc2 trans Stilbene; c1ccccc1\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. obgrep -n 'cC=Cc' '/Users/user1/Desktop/test.smi'. gives . stilbene; trans Stilbene; cis Stilbene. obgrep -n 'c\C=C/c' '/Users/user1/Desktop/test.smi'; or ; obgrep -n 'c\C=C\c' '/Users/user1/Desktop/test.smi'. gives no results. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447,4,['test'],['test']
Testability,Using the -i option with output type SVG results in a segfault. Without -i works perfectly. babel -ixyz test.xyz -osvg -i; Segmentation fault: 11. Affects current production release and nightly build. Reported by: *anonymous. Original Ticket: [openbabel/bugs/834](https://sourceforge.net/p/openbabel/bugs/834),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1214:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214,1,['test'],['test']
Testability,"Using the SourceForge Compile farm for testing, I noted; a failure on the matrix algebra test:. bash-2.03$ uname -a; SunOS usf-cf-sparc-solaris-2 5.8 Generic_108528-17; sun4u sparc SUNW,Ultra-60. Reading specs from; /opt/sfw/lib/gcc-lib/sparc-sun-solaris2.8/2.95.2/specs; gcc version 2.95.2 19991024 (release). Testing Matrix Algebra...; Matrix eigenvector test failed, wrong eigenvalues computed.; ERROR: ***MATRIX test failed***. There were no other error messages from this build. Let; me know if you need more information. (Everyone with a; SF.net account can access and use the Compile Farm.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409:39,test,testing,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409,5,"['Test', 'test']","['Testing', 'test', 'testing']"
Testability,"Using this branch to change the runner for automated testing on babel, updating the python version in hopes to resolve the security checks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2592:53,test,testing,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2592,1,['test'],['testing']
Testability,V2000 test file. Original comment by: @ergo70,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/981#issuecomment-281796578:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/981#issuecomment-281796578,1,['test'],['test']
Testability,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171:196,test,test,196,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171,4,['test'],"['test', 'testing']"
Testability,"Very little of the internal code uses the new OBMessageHandler and ; OBError classes. Much of the code uses combinations of ThrowError ; and cerr, and thus inconsitencies can occur frequently. The code needs to be switched *CONSISTENTLY* to the new error ; logging classes. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/478:257,log,logging,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478,1,['log'],['logging']
Testability,"WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7031,test,test,7031,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,We should have a unit test for parsing SMARTS -- including everything on these two pages:; http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672,1,['test'],['test']
Testability,"We should kekulize hypervalent N and S, especially as we write out the first one, and the second one occurs in SMILES strings generated by another toolkit. This is a minor tidy-up based on the SMILES reading benchmark I put together.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1787:208,benchmark,benchmark,208,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1787,1,['benchmark'],['benchmark']
Testability,"We should minimize dumping to std::cerr in production code. If needed, there's the error log, but this can just get removed. Thanks!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383383710:89,log,log,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383383710,1,['log'],['log']
Testability,We should try to get rid of all compiler warning such that we can require this of all new code as well.; % grep -c warning make.log ; 85; It does seem doable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1862:128,log,log,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1862,1,['log'],['log']
Testability,"Weirdly enough, the smartstest is ok when I run it locally. I cannot find a good reason for that. I also get more changes than expected in the formalcharge test results file so something is up with that as well... I'll need to look more at this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206:156,test,test,156,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206,1,['test'],['test']
Testability,"Well, I don't think spglib has the transforms. I don't know completely how it works, but I know it detects symmetry in the crystal and then assigns a space group based off the symmetry. The transforms are usually used for generating a crystal with symmetry (like filling a unit cell). I was using Bilbao to find the transforms. For example, for space group 210, here is one: http://www.cryst.ehu.es/cgi-bin/cryst/programs/nph-getgen?what=text&gnum=210. However, it is somewhat tricky to do. Bilbao only has the space groups organized as the 230 fundamental space group numbers. In Open Babel and spglib, though, we have the space groups organized as 530 hall numbers (several of which are just a different representation of the same space group, which is why there are extra). In some cases, there is only one Hall number that matches an international number, so that is easy to pair. other cases may not be, though. For the tests I did, I was filling a unit cell with Avogadro using the Open Babel transforms, and then I was just detecting the space group with spglib to make sure the right space group was being detected. Anyways, I think it'd be better if we found somewhere else to get the transforms from so it'd be less complicated. I just don't know where yet...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983:925,test,tests,925,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983,1,['test'],['tests']
Testability,"Well, in that case, can you provide a link to (or attach) a particular test file for which your code fails? I can at least check that ReadFile works for me with the latest code. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797970:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797970,1,['test'],['test']
Testability,"Well, you're adding a new type of test (a shell-based one) so it'll take slightly more work than just adding another Python script.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-383619641:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-383619641,1,['test'],['test']
Testability,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:415,test,test,415,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,4,['test'],"['test', 'tests']"
Testability,"What I'm trying to do is read in an arbitrary number of xyz files (thousands) each representing the reactants of a reaction. Then I have atom indices of the atoms that are involved in each reaction and I'm trying to generate a vector representation of each of those atoms using things like atomic #, # of connections, hybridization, and similar information of atoms it's bonded to. Then I aggregate the vector representations of the atoms involved in each reaction into a vector representation of each reaction as a whole. Then I use those reaction vector representations as data in a machine learning pipeline. Thanks @baoilleach, I tried keeping a reference to each reactants Molecule in my Reaction class (which I had been planning on doing anyway but hadn't remembered and hadn't needed to use yet) and that seems to keep all of the Atom instances valid at least in my initial tests involving what hadn't worked previously. Destroying all atoms owned by a Molecule in the Molecule's destructor seems like reasonable design but is that documented anywhere? If not should it be added somewhere (by me or someone else)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423:881,test,tests,881,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423,2,['test'],['tests']
Testability,What changed so much with the `tests/CMakeLists.txt` file?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051:31,test,tests,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051,1,['test'],['tests']
Testability,"What is the Tanimoto coefficient of two molecules that have no bits set? The answer should be 0. This can occur where you are comparing two molecules that don't have any functional groups, e.g. using FP3. In the Python interface (Windows) I get an answer of ""-1.#IND"" which is a new one on me. I guess it means division by zero error. Here's a test case:. >>> import pybel; >>> mols = [pybel.readstring(""smi"", x) for x in ['CCCC', 'CCCN']]; >>> fps = [x.calcfp(""FP3"") for x in mols]; >>> fps[0] | fps[1]; -1.#IND. Here's a page that suggests that this results from a variable not being initialised:; http://www.thescripts.com/forum/thread62988.html. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/648:344,test,test,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648,1,['test'],['test']
Testability,What on earth is invoking FindSSSR on reading? :) I will try disabling those calls with a flag and benchmark it against ZINC,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193298054:99,benchmark,benchmark,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193298054,1,['benchmark'],['benchmark']
Testability,"What version of CMake are you using? The CMakeLists.txt file definitely sets up environment variables for ""make test"", so I'm curious if you have an older version of CMake or something. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792,1,['test'],['test']
Testability,"When I build the openbabel in the docker, I got the following errors:; ````; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; [ 99%] Linking CXX executable ../bin/test_runner; /usr/local/lib/clang/11.0.0/lib/linux/libclang_rt.asan-x86_64.a(asan_linux.cpp.o): In function `__asan::AsanDoesNotSupportStaticLinkage()':; /src/llvm-project/compiler-rt/lib/asan/asan_linux.cpp:87: undefined reference to `_DYNAMIC'; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); test/CMakeFiles/test_runner.dir/build.make:1736: recipe for target 'bin/test_runner' failed; make[2]: *** [bin/test_runner] Error 1; CMakeFiles/Makefile2:1179: recipe for target 'test/CMakeFiles/test_runner.dir/all' failed; make[1]: *** [test/CMakeFiles/test_runner.dir/all] Error 2; Makefile:138: recipe for target 'all' failed; make: *** [all] Error 2; ````. However when I build openbabel locally, I didn't get errors. Do you know the reasons?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135#issuecomment-631752076:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135#issuecomment-631752076,4,['test'],['test']
Testability,"When _not_ running BeginModify & EndModify on molecules, AddHydrogens segfaults when it is called. It's related to the conformer data, specifically the call to SetConformer(0). Reproducing:. // test AddHydrogens; OBMol testMolH;; OBAtom *testAtom = testMolH.NewAtom();; testAtom->SetVector(0.5f, 0.5f, 0.5f);; testAtom->SetAtomicNum(6);; testMolH.AddHydrogens();; if (testMolH.NumAtoms() == 5) {; cout << ""ok 9"" << endl;;; } else {; cout << ""not ok 9"" << endl;;; }. Fixing: Uncomment BeginModify and EndModify. I am adding both versions to the unit testing for mol.cpp. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607:194,test,test,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607,9,['test'],"['test', 'testAtom', 'testMolH', 'testing']"
Testability,"When a test fails, it would be nice to see the test output, especially for those cases where I'm having trouble reproducing the test failure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1959:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1959,3,['test'],['test']
Testability,"When an index is prepared from the attached smiles file (with CRLF line endings):; babel 4mols.smi -ofs ; and searched; babel 4mols.fs -sC#N -osmi; The correct response, which occurs newlinebuf is disabled by giving SmilesFormat a READBINARY flag, is: . 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; Clc1ccccc1C=C(C#N)C#N 542; 2 molecules converted; 41 audit log messages. With newlinebuf active for SmilesFormat. 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; 1 molecule converted; 41 audit log messages. This was on Windows XP. The behaviour is the same if 4mols.smi has just LF endings.; ; Fastsearch uses seek positions in the smiles file and I suspect newlinebuf has interfered with these. I'll look further when I have time later in the week. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585:393,log,log,393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585,2,['log'],['log']
Testability,"When building 2.2.0 b4, perl bindings fail to build with gcc-4.3 on ppc64. Fedora buildsystem task can be viewed here:; http://koji.fedoraproject.org/koji/taskinfo?taskID=484772. Full build.log attached. Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736:190,log,log,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736,1,['log'],['log']
Testability,"When converting a small-molecule CIF file to mmCIF, the resulting mmCIF is missing many mandatory values in the atom_site table. The mandatory items are documented for the atom_site category in the current mmCIF documentation, https://mmcif.wwpdb.org/dictionaries/mmcif_pdbx_v50.dic/Categories/atom_site.html. The mandatory fields are those that are annotated with exclamation point inside a circle: auth_asym_id, label_alt_id, label_asym_id, label_atom_id, label_comp_id, label_entity_id, label_seq_id, and type_symbol. Of those, Open Babel only populates the type_symbol value. In practice, auth_asym_id is not required. Reasonable default values for the other missing values are:; label_alt_id .; label_asym_id A; label_comp_id UNL; label_entity_id ?; label_seq_id . label_atom_id should be unique for every atom -- if it is present, just reuse the atom_site_label value from the small-molecule CIF file (https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Iatom_site_label.html). Otherwise, number them, eg., C1, C2, etc. A test file is https://github.com/openbabel/openbabel/blob/master/scripts/python/examples/hashizume.cif",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545:1036,test,test,1036,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545,1,['test'],['test']
Testability,"When doing a force field minimization of a molecule with Open Babel 2.4.1 the optimization continues till the completion of number of steps specified. A convergence criteria given is ignored.; Reason is that the OBForceField functions e.g. ConjugateGradientsTakeNSteps, SteepestDescentTakeNSteps, SteepestDescent etc. all do not return FALSE (or return) if convergence criterion has been reached.; The parameter econv seems to be ignored in all functions. Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; This bug was not present in Open Babel 2.3.2. see also:; https://sourceforge.net/p/openbabel/mailman/message/35400728/. Reported by: yodah134. Original Ticket: [openbabel/bugs/987](https://sourceforge.net/p/openbabel/bugs/987)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1366:456,Test,Tested,456,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1366,1,['Test'],['Tested']
Testability,When doing some round tripping testing in OpenBabel 2.3.0 I came across the following cases where hydrogen was erroneously added to atoms with explicitly no hydrogen in the conversion from SMILES to InChI. Group 1/2 metals and In/Sn/Sb/Tl/Pb/Bi/Po/At. e.g. [Li] -->InChI=1S/Li.H instead of InChI=1S/Li; [Bi] --> InChI=1S/Bi.3H instead of InChI=1S/Bi. Possibly relatedly [BiH4] gives InChI=1S/Bi.5H instead of InChI=1S/Bi.4H. Reported by: dan2097,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1078:31,test,testing,31,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1078,1,['test'],['testing']
Testability,"When generating ring systems (and this includes coordination metal-containing rings) the current code uses a database of existing fragments. It's a large database, but compounds outside the database will either fail or generate poor structures. I'm currently working on an alternate coordinate generation routine (using distance geometry) for metals and other fall-back cases. If you can upload a few structures, I will definitely use them for testing. I anticipate having some code available in a few weeks time. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1200#issuecomment-281802121:444,test,testing,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1200#issuecomment-281802121,1,['test'],['testing']
Testability,"When outputting files in MDL MOL format, ""M CHG"" records are not generated for charged atoms, instead the charge is stored in the atom block. This causes problems if any ""M RAD"" records are present, as the standard says that in this case all charges read from atom blocks should be ignored, and only charges read from ""M CHG"" records should be considered. The standard seems to suggest that atom block charges are semi-deprecated anyway, and ""M CHG"" records are preferred. I have attached a trivial test SMILES file that should reproduce the bug when converted to MDL MOL format. I am running OpenBabel version 2.1.1 on Linux. My email address is p.mortenson@astex-therapeutics.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679:499,test,test,499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679,1,['test'],['test']
Testability,"When reading a .cdx with negative charges, the charges get an unsigned number. ; For example, converting a given .cdx containing two charged atoms into the mol format, atom no.8's charge is set to 255 instead of being -1. ; Hence, I see: ; M CHG 2 4 1 8 255; instead of : ; M CHG 2 4 1 8 -1. I have modified the file chemdrawcdx.cpp as below to fix this when the condition cdxr.GetLen()==1 is True. However, I was not able to test the code found in the else statement since I never meet this case. . ```; case kCDXProp_Atom_Charge:; if(cdxr.GetLen()==1) ; charge = (int)((char)cdxr.data().get());; else; READ_INT32(cdxr.data(), charge);; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338:426,test,test,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338,1,['test'],['test']
Testability,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:858,test,test,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['test'],['test']
Testability,"When rendering molecules in obabel, Pt is so light colored is is almost invisible. Tested on 2.3.2 and 2.3.3dev. N\[Pt\](N)(Cl)Cl. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/924](https://sourceforge.net/p/openbabel/bugs/924)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1304:83,Test,Tested,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1304,1,['Test'],['Tested']
Testability,"When run with Python 3.6, test/testdistgeom.py fails with a SyntaxError; about a malformed character escape. This arises from a failure to escape; literal backslash characters in single-quoted SMILES strings (several; occurrences). Python 2 accepts this and does the right things with it,; but Python 3 rejects it. Fixes #2217",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218,2,['test'],"['test', 'testdistgeom']"
Testability,"When running a forcefield conjugate on a molecule, if any two atoms are on top of each other this results in a divide by 0 and a 'nan' for results. This should be fixed before release. Attached is some testing code for this situation. You will see the segfault. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629:202,test,testing,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629,1,['test'],['testing']
Testability,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008:327,log,log,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008,3,['log'],['log']
Testability,"When the attached file is processed with babel, e.g. converted to SMILES, the aromaticity of one of the benzene is lost and the ring is converted to a cyclohexane:; babel test.mol2 -osmi; C(=O)(OCc1ccccc1)NC(C(NCP(OC(C(O)O)CC1CCCCC1)(O)O)=O)C 8cpa_ligand_001; 1 molecule converted; 2 info messages 12 audit log messages . The compound contains two benzene rings, one is changed. Paul W. Elsinhorst suggested a workaround:; Just a workaround,. do it like this: babel -imol2 test.mol2 -opdb | babel -ipdb -osmi. Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759:171,test,test,171,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759,3,"['log', 'test']","['log', 'test']"
Testability,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2076:180,log,logs,180,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076,2,['log'],['logs']
Testability,"While I agree there's a deeper underlying problem, this isn't lipstick either - it's basic defensive programming. I'd love to turn the test file into an actual unit test (e.g., checking if there's an atom v. close to the origin). @baoilleach and I agree that we'd like all PR to include regression tests and this seems like an important one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489287920:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489287920,3,['test'],"['test', 'tests']"
Testability,"While following the example at https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation, noticed that the `mol.draw()` step fails on importing of `Tkinter` in Python 3.7. The module was renamed to `tkinter` in Python 3+ versions, and the `six` library supports the proper handling of the change: https://six.readthedocs.io/#module-six.moves (thanks to @tacaswell for the reference). I added `six` as the install requirement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157:108,test,test-the-installation,108,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157,1,['test'],['test-the-installation']
Testability,"While not necessarily meaningful for the computation in NWChem (*vide infra*), I created an input file for NWChem with [gabedit](http://gabedit.sourceforge.net/), `methane.com`. Past running; ```; nwchem methane.com > methane.nwout; ```; to collect NWChem's results, the subsequent conversion by OpenBabel with; ```; obabel -inwo methane.nwout -oxyz -O methane.xyz; ```; did not yield an error by OpenBabel. (One may argue that 1.18 A for single-bond C-H bond length is a bit too long, of course.). Setup: NWChem 7.0.2, OpenBabel 3.1.1, both as provided by the repositories of Linux Debian 11/bullseye, branch testing. [testcase_methane.zip](https://github.com/openbabel/openbabel/files/6975327/testcase_methane.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-897593003:610,test,testing,610,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-897593003,1,['test'],['testing']
Testability,"Why @dkoes did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552078074:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552078074,1,['test'],['test']
Testability,"Why are you using the -C option? Without it everything seems to be working. On the other hand, I don't see why it wouldn't work with the option so it is probably still a bug. (btw, the command could look cleaner written as `obabel Conformer3D_CID_60961.sdf -O test.png -C` file formats are gathered from file suffix and options should come after the files)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195#issuecomment-624547262:260,test,test,260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195#issuecomment-624547262,1,['test'],['test']
Testability,Why don't you send a pull request and I can test it here on my machine.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-311285452:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-311285452,1,['test'],['test']
Testability,"Will do. On Wed, 14 Mar 2018, 17:26 David Koes, <notifications@github.com> wrote:. > master is not generating correct atom types when outputting pdbqt files.; > This is because the pdbqt writer works on copies (possibly fragments) of; > the original molecule. The copies have their perception flags reset. By; > default, nonpolar hydrogens are removed when outputting pdbqt files. When; > the aromaticity flags are recomputed on the molecule with the deleted; > hydrogens, atoms that should be aromatic are not marked as such.; >; > Note that this is a regression from 2.4. My suspicion is that there is a; > difference in how the new aromatic typer is dealing with molecules with; > deleted hydrogens. I would appreciate it if @baoilleach; > <https://github.com/baoilleach> could take a look.; >; > I think this fix is good in addition to any fixes that may be made to the; > aromatic typer as it will prevent an unnecessary recomputation of; > aromaticity, but would appreciate feedback. A test case is provided; > (without the fix the phenyl ring of the tyrosine is not marked aromatic).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1790; > Commit Summary; >; > - fix bug with pdbqt atom typing; > - pdbqt testcase; >; > File Changes; >; > - *M* src/formats/pdbqtformat.cpp; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-0> (6); > - *M* test/testbabel.py; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-1> (66); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1790.patch; > - https://github.com/openbabel/openbabel/pull/1790.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1790>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGX4j8B-DR0oprbp0HUfAan5t-v-1ks5teVLCgaJpZM4Sq25L>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606:992,test,test,992,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606,8,['test'],"['test', 'testbabel', 'testcase']"
Testability,"Will test the latest revision on branch. Just FMI here, is this simply a case of a malformed input file or is it a bug in OB?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389,2,['test'],['test']
Testability,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219:713,test,tested,713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219,1,['test'],['tested']
Testability,"With Open Babel as currently provided in Linux Debian 10 (release 3.1.0), I copy-pasted you test data into `IN.smi` and run the instruction you mention, i.e., `obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest`. Contrary to your report, I did not observe any error report at all. I then read the `.sdf` in an old instance of Jmol (14.6.4_2016.11.05), the viewer recognized the presence of four models. It was possible to display them one by one (on Jmol's console, this requires an input in pattern of `load ""OUT.sdf"" 1`) and the geometries do not look terribly skewed either. Equally, there was no problem to import the `.sdf`import into [DataWarrior](http://openmolecules.org/datawarrior/index.html) (version 5.2.1, 2020) to write a `.dwar` file either. It looks like the problem does not occur (any more) in a (more) recent version of Open Babel. [3D_generation.zip](https://github.com/openbabel/openbabel/files/5673497/3D_generation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924:92,test,test,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924,1,['test'],['test']
Testability,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:538,Log,Log,538,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,5,['Log'],['Log']
Testability,"With current 11-molecule test suite, the following bugs; are obvious:. 417.cml: lots of kekulization errors; 417.cml c3d1, c3d2, mmads errors with typing &quot;O.co2&quot;. 1hvc.pdb: c3d1, c3d2, mmads errors with typing &quot;N&quot;. buckyball.xyz: lots of kekulization errors. Segfaults; 1hvc.pdb -&gt; bin -&gt; pdb; 1hvc.pdb -&gt; mol -&gt; pdb (assert 0 349); 1hvc.pdb -&gt; smi -&gt; pdb (1hvc.smi is empty); 1hvc.pdb -&gt; fix. table.xyz -&gt; smi -&gt; xyz (table.smi is empty); table.xyz -&gt; cacint; table.xyz -&gt; fix. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410,2,"['assert', 'test']","['assert', 'test']"
Testability,"With master sources updated today, I don't reproduce this and got this:; Traceback (most recent call last):; File ""test.py"", line 5, in <module>; m = mols.next(); StopIteration; Perhaps it's thank to fix of #1607? Indeed, I had reproduce the segfault on #1607 and with the fix, I got now the same result.; Of course, it may be completely unrelated.; Anyone to give it a try?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-381323372:115,test,test,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-381323372,1,['test'],['test']
Testability,"With openbabel 3.1.0 as provided in Linux Debian 11 / bullseye (branch testing) and your .pdb I performed the default protonation, i.e. `obabel -ipdb ligand_1.pdb -h -opdb add_h.pdb`. The newly written .pdb lists all atoms including the label `4CO`, too. Contrasting to the original file submitted, the new .pdb has an additional trailing column about the atom type. For most of the protonation suggested, chemically speaking (number of protons added, spatial arrangement vs. C, N, O), the results look plausible. The protonation of the phosphates _may_ be different. In the export of the protonated structure as .svg, the P=O in the terminal monophosphate is represented differently, than the P=O in the diphosphates. Possibly this is influenced on the P-O bond lengths determined. For a test, I reduced the information available in the .pdb about the protonated ligand to a SMILES string and let the structure recreate; the then displayed structure recreated from the SMILES does look plausible. Maybe this result already is good enough for your work. Maybe further evidence about the protonation at the terminal phosphate is important for you -- I don't know? Attached below, a .zip archive about the processing of the data so far. [ligand_1_revision.zip](https://github.com/openbabel/openbabel/files/6055089/ligand_1_revision.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422:71,test,testing,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422,2,['test'],"['test', 'testing']"
Testability,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:1507,test,testjul,1507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,2,['test'],['testjul']
Testability,"With the most recent Open Babel version 2.4.1, xyz files containing heteroaromatics are not converted to mol files correctly in some cases. Taking triazine as an example, the following sequence of commands leads to different results in versions 2.3.2 and 2.4.1, respectively:. obabel -:""n1cncnc1"" -O test.xyz --gen3d; obabel -ixyz test.xyz -omol. In version 2.3.2, the mol output is correct, whereas in version 2.4.1, a wrong radical structure is generated, ending in ""M RAD 1 6 2; M END"". Reported by: mdbu. Original Ticket: [openbabel/bugs/981](https://sourceforge.net/p/openbabel/bugs/981)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1360:300,test,test,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1360,2,['test'],['test']
Testability,"With this ```x.smi``` file: ```O=C(O)CCCCC``` I run this command:; ```; obabel -i smi x.smi -o xyz -O x1.xyz --gen3d; ```. The produced outputs are a little bit different with every run:; ```; $ diff x1.xyz x2.xyz ; 3,22c3,22; < O 2.80897 0.95953 -0.55185; < C 2.31033 -0.02262 -0.02710; < O 0.97006 -0.19149 0.06313; < C 3.07414 -1.17334 0.58772; < C 4.58550 -0.97549 0.48201; < C 5.34900 -2.14439 1.10655; < C 6.86037 -1.94108 0.99792; < C 7.62678 -3.09920 1.61670; < H 0.70739 -1.02022 0.50592; < H 2.78449 -2.09272 0.06679; < H 2.78449 -1.25134 1.64155; < H 4.87040 -0.04029 0.98021; < H 4.87040 -0.86979 -0.57232; < H 5.06672 -3.07791 0.60475; < H 5.06672 -2.24615 2.16150; < H 7.14793 -1.01060 1.50124; < H 7.14793 -1.84227 -0.05533; < H 7.38728 -3.20534 2.67958; < H 8.70461 -2.93105 1.52686; < H 7.38728 -4.04175 1.11413; ---; > O 2.79827 0.94419 -0.78732; > C 2.30225 0.05508 -0.11491; > O 0.96238 -0.10012 0.00253; > C 3.06876 -0.98420 0.67100; > C 4.57978 -0.80310 0.53395; > C 5.34512 -1.85925 1.33266; > C 6.85617 -1.67396 1.19240; > C 7.62428 -2.72048 1.98393; > H 0.70195 -0.85007 0.56965; > H 2.78027 -1.97412 0.30044; > H 2.78035 -0.89719 1.72445; > H 4.86364 0.19878 0.87975; > H 4.86359 -0.86301 -0.52423; > H 5.06357 -2.86003 0.98314; > H 5.06370 -1.79534 2.39085; > H 7.14294 -0.67605 1.54402; > H 7.14291 -1.74056 0.13642; > H 7.38553 -2.65956 3.05050; > H 8.70190 -2.56728 1.86813; > H 7.38557 -3.73020 1.63495; ```. The actual molecules are the same, typical ```RMSD``` differences are ```0.00190```, ```0.00102```, ```0.00067```. OpenBabel should never use random numbers to randomize molecules, because this is bad for testing frameworks that expect repeatability.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934:1645,test,testing,1645,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934,1,['test'],['testing']
Testability,"With this patch, MOL files now read in atom class information (3rd from final column in atom block) by default, and write it out if the ""-xa"" option is specified. This is the same as with the SMILES format. Test case roundtripping SMI->MOL->SMI:; obabel -:[CH4:1] -omol -xa | obabel -imol -osmi -xa; [CH4:1]",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/57:207,Test,Test,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/57,1,['Test'],['Test']
Testability,"With this patch:; diff --git a/src/formats/textformat.cpp b/src/formats/textformat.cpp; index dacc572e..e5a7a982 100644; --- a/src/formats/textformat.cpp; +++ b/src/formats/textformat.cpp; @@ -59,6 +59,8 @@ public:; {; //It's really text, not a molecule.; OBText* pText = dynamic_cast<OBText*>(pOb);; + if (!pText); + return false;; string fileText(istreambuf_iterator<char>(*pConv->GetInStream()), istreambuf_iterator<char>());; pText->SetText(fileText);; return !fileText.empty();. I get this:; Traceback (most recent call last):; File ""test.py"", line 4, in <module>; drug_3d = pybel.readfile(""text"", ""/home/julien/projects/openbabel/jul/drug.txt"").next(); StopIteration. Would it be ok?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380680778:539,test,test,539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380680778,1,['test'],['test']
Testability,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028,4,['test'],"['test', 'testing']"
Testability,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:339,test,test,339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,2,['test'],['test']
Testability,Working on this. Is due to a logic error introduced when distgeom was added. Just testing the patch now...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/305#issuecomment-225238898:29,log,logic,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/305#issuecomment-225238898,2,"['log', 'test']","['logic', 'testing']"
Testability,"Works fine on 64-bit Windows. Strangely though, only 2 molecules are converted either with 32-bit or 64-bit:. C:\Tools\openbabel\trunk\windows-vc2008\build64\Release>babel ten.smi -ofs; This will prepare an index of ten.smi and may take some time...; It contains 10 molecules; It took 0 seconds; 2 molecules converted; 31 audit log messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335:328,log,log,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335,1,['log'],['log']
Testability,"Works for me. Can you uninstall everything to do with OpenBabel (Python modules, GUIs, etc.), and download and reinstall the GUI, and repeat the conversion (I just did this myself). Could you take a screenshot and attach it to this bug? (If it doesn't attach, send an email to baoilleach@gmail.com and I'll attach it). If you want to monitor this bug, you should create an a/c on sourceforge, log in and click monitor at the top of this page. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/838#issuecomment-281794191:393,log,log,393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/838#issuecomment-281794191,1,['log'],['log']
Testability,"Works just fine for me - indeed there's test/tautomertest.cpp that exercises this code:; [ghutchis@Alumina] tools: obtautomer -c triazole.smi ; c1cnn[n]1 . [ghutchis@Alumina] openbabel: git grep CanonicalTautomer; doc/openbabel.tags: <name>CanonicalTautomer</name>; doc/openbabel.tags: <name>CanonicalTautomer</name>; doc/openbabel.tags: <name>CanonicalTautomer</name>; include/openbabel/tautomer.h: void OBAPI CanonicalTautomer(OBMol *mol);; src/tautomer.cpp: void CanonicalTautomer(OBMol *mol); test/tautomertest.cpp:void testCanonicalTautomers(const std::string &smiles); test/tautomertest.cpp: CanonicalTautomer(&mol2);; test/tautomertest.cpp: testCanonicalTautomers(""Nc1nc2ncnc2c([nH]1)O"");; tools/obtautomer.cpp: CanonicalTautomer(&mol);",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128799026:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128799026,6,['test'],"['test', 'testCanonicalTautomers']"
Testability,"Would it be possible to add a slightly expanded documentation string, and a testfile/testcase? Also, doesn't a CMakeLists.txt need to updated somewhere?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1904#issuecomment-434634644:76,test,testfile,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1904#issuecomment-434634644,2,['test'],"['testcase', 'testfile']"
Testability,"Wow. Okay, digging into the code some more shows that the CML output *never* worked for Write(). The relevant code is the end of the code block:. ```; bool OBConversion::Write(OBBase* pOb, ostream* pos); {; if(pos) SetOutStream(pos, false);. if(!pOutFormat || !pOutput) return false;. SetOneObjectOnly(); //So that IsLast() returns true, which is important for XML formats; ```. The problem is that SetOneObjectOnly() sets m_IsLast to true, which means it cannot be used to write multiple objects (with a header/footer) correctly. The CML writer has:; ```; //If more than one molecule to be output, write <cml> at start and </cml> at end.; if(!_pxmlConv->IsLast()); {; xmlTextWriterStartElementNS(writer(), prefix, C_CML, uri);; uri=NULL;; }; ```; but that test for IsLast() returns m_IsLast which is true, so the !-inversion makes it false, so that branch is not taken. To make things worse, the footer can only be written if IsLast() is set, which must be done for the last molecule. This means Write() cannot be called until you know if it will be the last molecule to write, and manual users must specify that flag. That is, I see what you mean by ""second-class citizen."" The fundamental problem is that format API doesn't have header/footer generation as an independent task from writing a molecule, so there needs to be a way for the write to know if a molecule is the first or last molecule. It *appears* that the right solution is to:. - remove SetOneObjectOnly() from Write; - document the full Write API so people know when to SetLast(); - update pybel so it delays the last Write() until the close(), which is when it knows if the previous molecule really is the last molecule. A simple implementation of the last will either break code which expects that it's possible to modify outputfile.write(mol) after writing the molecule (which it can't because the outputfile hasn't yet written it), or require a copy. A more complex one might default to making a copy, with a flag to enable non-co",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991:757,test,test,757,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991,2,['test'],['test']
Testability,Wrong Gaussian Log --> XYZ conversion (with CounterPoise),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105:15,Log,Log,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105,1,['Log'],['Log']
Testability,Wrong enegy values when converting Gaussian .log files to .xyz files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2636:45,log,log,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2636,1,['log'],['log']
Testability,X object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53654,test,test,53654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,XX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52734,test,test,52734,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,XX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Make,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2983,test,test,2983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"Yeah, I know ther are no tests, I did this on my Windows machine at work and I'm not in complete agreement with the build system... I'll try to add a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make sure that all atoms have unique x- and y-positions (that is the real problem, the long bonds are just a symptom). Before the change I get the molfile (notice the coordinates for the last three atoms):; ; OpenBabel09241813522D; ; 7 4 0 0 0 0 0 0 0 0999 V2000; 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END. After the change I got:. ```; OpenBabel09241813522D. 7 4 0 0 0 0 0 0 0 0999 V2000; 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463:25,test,tests,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463,4,['test'],"['test', 'tests']"
Testability,"Yeah, I understand it's not the root cause, but having fixed umpteen of these kinds of bugs, I'd really, *really* appreciate having a new unit test of some sort to make sure this lipstick doesn't come back.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514214170:143,test,test,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514214170,1,['test'],['test']
Testability,"Yes - to clarify, it's not read correctly. In fact, it causes a segfault (array out of bounds) when run thru the debugger on Windows. I'm leaving the test file here to help someone fix the bug. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802250:150,test,test,150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802250,1,['test'],['test']
Testability,Yes it looks fine. On both `master` and `mdlextension` I get the same 1 test fail:. ```; 100/134 Test #100: test_ffgaff_1 ....................***Failed Error regular expression found in output. Regex=[not ok] 1.03 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22385686:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22385686,2,"['Test', 'test']","['Test', 'test']"
Testability,"Yes, I did, so here are the logs: https://gist.github.com/bazitur/7bebdb03456beec290f77db682b6d28a",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500:28,log,logs,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500,1,['log'],['logs']
Testability,"Yes, as of commit a345105b28173eb7da14ecd1e5beebe94140c6d7 this bug also occurs with the git master. I confirmed the crash under strace to make sure it was loading the latest built-from-source shared libraries rather than the version packaged by Ubuntu. I built this software under Ubuntu 14.04 64 bit. This is how I built it:. ```; sudo apt-get install swig. mkdir -p /opt/science/openbabel/src; cd /opt/science/openbabel/src; wget http://bitbucket.org/eigen/eigen/get/3.2.4.tar.bz2; tar xjvf 3.2.4.tar.bz2; git clone https://github.com/openbabel/openbabel.git; cd openbabel; mkdir build; cd build. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/science/openbabel -DEIGEN3_INCLUDE_DIR=/opt/science/openbabel/src/eigen-eigen-10219c95fe65; make -j 4; make test; make install; ```. All tests passed when I ran make test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284:780,test,test,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284,3,['test'],"['test', 'tests']"
Testability,"Yes, as the open-source continuation of OpenSolaris it still identifies as SunOS and defines __sun.; Likely this change will also fix Oracle Solaris, but I haven't tested that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2187#issuecomment-622973050:164,test,tested,164,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2187#issuecomment-622973050,1,['test'],['tested']
Testability,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:348,test,test,348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,3,"['log', 'test']","['log', 'test']"
Testability,"Yes, that is exactly the issue. How am I supposed to sort and compare torsions if the pathing is stochastic and not systematic? Surely, it should start at atom 1 and proceed logically to 2, then 3, and so forth? . I'm coding in Linux, as I have no experience coding in Python, and having to write a code to flip all those fields and compare would be a pain for something that shouldn't be a problem to begin with.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528:174,log,logically,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528,1,['log'],['logically']
Testability,"Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0 directory. The C# code was built successfully. But l got the the error message above when I try to run it. In the 2.4.1 version, the same code runs perfectly.. I have also tried the the Java binding using the same method in openbabel-3.0.0. It worked will. . The test code. class Program; {; static void Main(string[] args); {; string molFile = ""N(CNC1)CC1"";; OBConversion conv = new OBConversion();; conv.SetInFormat(""smi"");; OBMol mol = new OBMol();; conv.ReadString(mol, molFile);; int numberAtoms = (int)mol.NumAtoms();; for (int i = 1; i <= numberAtoms; i++); {; OBAtom atom = mol.GetAtom(i);; string label = atom.GetAtomType();; uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); Console.WriteLine($""{label} : {hetero}"");; }; Console.ReadLine();; }; }",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546955901:331,test,test,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546955901,1,['test'],['test']
Testability,"You can see from Travis that ""make test"" works just fine, e.g.; https://travis-ci.org/openbabel/openbabel/builds/587511901",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046#issuecomment-534708275:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046#issuecomment-534708275,1,['test'],['test']
Testability,You can test with :; babel -ipdb dipep.pdb -opdb dipep2.pdb . Original comment by: lleell00,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794235:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794235,1,['test'],['test']
Testability,"You could have used mol.draw(show=False, update=True). On 24 January 2018 at 16:55, eloyfelix <notifications@github.com> wrote:. > I wanted to generate molfile with 2d coordinates from SMILES and I was not; > able to do it in a nice way using pybel.; >; > The only option I had was doing something like this:; >; > from pybel import _operations; > _operations['gen2D'].Do(mol.OBMol); >; > I think that would be nicer to have a mol.make2D() function.; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1765; > Commit Summary; >; > - add Molecule.make2D function; >; > File Changes; >; > - *M* scripts/python/examples/testpybel.py; > <https://github.com/openbabel/openbabel/pull/1765/files#diff-0> (10); > - *M* scripts/python/pybel.py; > <https://github.com/openbabel/openbabel/pull/1765/files#diff-1> (9); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1765.patch; > - https://github.com/openbabel/openbabel/pull/1765.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1765>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGffFz0nimlVTkAJpdNLWHlhhnAm5ks5tN2B8gaJpZM4RrlB8>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360206959:716,test,testpybel,716,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360206959,1,['test'],['testpybel']
Testability,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:205,test,test,205,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,1,['test'],['test']
Testability,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:71,test,tested,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035,2,"['log', 'test']","['log', 'tested']"
Testability,"You will have to provide more information. For example, how do you do the substructure search? . Also, you should provide the input and query as files or as strings. We cannot test your examples if they are just pictures in a PDF. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795539:176,test,test,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795539,1,['test'],['test']
Testability,"You'll need to regenerate the aromaticity test to pass Travis. More importantly, there was some discussion about making sure we had ""flavors"" of aromaticity models - that is, there would be an OBDaylightAromaticityTyper and an OBXYZ AromaticityTyper, etc. Does that seem like a reasonable goal? I'm fine if we say this is step one in that direction and other aromaticity models will be implemented as needed in the future.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329307775:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329307775,1,['test'],['test']
Testability,Your recent changes should take care of what this was trying to fix... when I get some time I'll try and stress test your changes.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-282090277:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-282090277,1,['test'],['test']
Testability,"You’re welcome to make whatever changes you think are necessary, as long as all the tests get included eventually using the standard install procedure. IMO, it’s really really really important to have a suite of tests that _don’t_ fail to avoid unknown regressions. This is a sampling of pdb ligands, which is highly representative of what many people use openbabel for. I’m curious how you are getting such poor times. I just did a clean checkout and the times seem quite reasonable (<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:84,test,tests,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,2,['test'],['tests']
Testability,[ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53112,test,test,53112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"[ Version affected/tested ]; Open Babel 2.0.2. [ Overview ]; When protonating with molecules with more than ~30k; atoms, the output becomes incorrect with (1) only; hydrogen atoms being output, and (2) a small number; (down to 4) of hydrogen atoms output being output. [ Details ]; The number of input atoms required to trigger the bug; varies with the molecule (however the driver might be; the number of output atoms). For example, a (slightly; processed) version of 2bo8 executes correctly when; 31076 lines/atoms are in the input file: 131072; lines/atoms are output. When 31077 lines/atoms are in; the input file, 4 lines/atoms are output. The switch; over for 1jrp is at 30850 lines, with 131074 lines of; output decreasing to 8 lines. Using ---errorlevel 5 does not reveal any errors. [ Command line ]; f=2bo8; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdb.cut -oPDB $f.pdbh. (the datafile required to reproduce this bug is 400kB; bz2 compressed - please contact me if you would like me; to send it to you). Reported by: tadpole_leg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568:19,test,tested,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568,1,['test'],['tested']
Testability,[bennion1@czvnc2 ATBJOBS]$ /usr/gapps/bbs/TOSS-3/bin/obabel -igamess 317358/1/qm.out -osdf -O test; Segmentation fault (core dumped); Setting errorlevel doesn’t seem to produce any extra data.; [qm.txt](https://github.com/openbabel/openbabel/files/3561172/qm.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2020#issuecomment-526710639:94,test,test,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2020#issuecomment-526710639,1,['test'],['test']
Testability,[test-reaction-map.zip](https://github.com/openbabel/openbabel/files/1538600/test-reaction-map.zip). This PR attempt to fix the following bug:. OpenBabel get Segfault while reading CDX contains such a reaction map like this: A -> B -> C (I expect to get the 2 reactions from the output: A->B and B->C). I include a simple CDX to test for this case (please rename it from `.zip` to `.cdx`).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1720:1,test,test-reaction-map,1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1720,3,['test'],"['test', 'test-reaction-map']"
Testability,[test.zip](https://github.com/openbabel/openbabel/files/6621072/test.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001:1,test,test,1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001,2,['test'],['test']
Testability,"[x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 ; Operating system and version: Fedora 34. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. OpenBabel should correctly (de)protonate the following molecules or leave them untouched:. ![inputs](https://user-images.githubusercontent.com/1926852/124920501-4acc1a80-dfef-11eb-9ee8-9dbb7b3441a0.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. OpenBabel incorrectly modifies the input molecules and generates invalid SMILES.; <img width=""451"" alt=""outputs"" src=""https://user-images.githubusercontent.com/1926852/124920614-67685280-dfef-11eb-98f3-1b3273b0f25d.png"">. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```bash; #!/usr/bin/env bash. declare -a smiles_list=(; 'O=C1CCC=C2C=COC=C12'; 'COC=CC=O'; 'C1=NNN=N1'; 'CON(=O)=O'; 'COC1=CC(=O)C1=O'; 'ON1CC=NO1'; 'COP(=O)(OC)OC=CC=O'; 'COP1(=O)CCC(C=O)=CO1'; 'COP1(=O)CCCC(C=O)=CO1'; 'O=C1C=CC2C=NOC2=C1'; 'N1NC=NN1'; 'O=C1N=CC=C\C1=C1/ONC=C1'; 'CC1=C\C(ON1)=C1\C=C2C=CC=CC2=NC1=O'; 'O=CC1=C\C(ON1)=C1/C=CC=CC1=O'; 'C1ON2OC3=CNC=C3[C@H]2C=C1'; 'O=CC1=CONC1'; 'N1OO1'; 'COC1=CC(=O)C=CC1=C1C=CC(=O)C=C1OC'; 'COC1=CC(=O)C2=C3C(=CC=C2)C2=CC=CC4=C2C(C(OC)=CC4=O)=C13'; 'ON(=O)=C1C=CC=CC1=O'; 'O=CC1=C(OS(=O)=O)C2=CC=CC=C2S(=O)(=O)N1'; ). for smiles in ""${smiles_list[@]}""; do; output=$(obabel -:""${smiles}"" -ismi -ocan -p7.4 2>/dev/null); echo ""${smiles} -> ${output}""; done; ```. Output:; ```text; O=C1CCC=C2C=COC=C12 -> O=C1CCC=C2C1=C[O-]C=C2 ; COC=CC=O -> C[O-]C=CC=O ; C1=NNN=N1 ->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2397:1669,test,test,1669,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2397,1,['test'],['test']
Testability,"\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:19104,test,test,19104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:22063,test,test,22063,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testexample']"
Testability,"_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9489,test,test,9489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4616,test,test,4616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:16588,test,test,16588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:19211,test,test,19211,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testexample']"
Testability,_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/g,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2393,test,test,2393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54369,test,test,54369,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"`. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2752,test,test-command,2752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['test'],['test-command']
Testability,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:4074,test,test,4074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['test'],['test']
Testability,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299:169,test,tests,169,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299,2,['test'],['tests']
Testability,```; -------------------------------------------------------------------------------; iterators-mol-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:37; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:210,benchmark,benchmark,210,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,2,['benchmark'],['benchmark']
Testability,```; 178/227 Test #178: test_charge_mmff94_1 .............***Failed 0.46 sec; # Testing MMFF94 Charge Model...; Bail out! Cannot load charge model!. Start 179: test_charge_gasteiger_1; 179/227 Test #179: test_charge_gasteiger_1 ..........***Failed 0.45 sec; # Testing GASTEIGER Charge Model...; Bail out! Cannot load charge model!; ```. ## Environment Information; Open Babel version: 3-1-1-178-g2b211d6ac; Operating system and version: FreeBSD 13.2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2604:13,Test,Test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2604,4,['Test'],"['Test', 'Testing']"
Testability,"```; [92/558] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; In member function ‘void OpenBabel::OBMol::ConnectTheDots()’:; cc1plus: warning: ‘void* __builtin_memset(void*, int, long unsigned int)’: specified size 18446744073709551608 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]; ```; The change I've made is to guard against a negative value. I think the compiler is maybe being extra cautious. On the other hand, maybe it's a true logic error in the original code - can you take a quick look @ghutchis.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2211:473,log,logic,473,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2211,1,['log'],['logic']
Testability,`obabel` and InChI/InChIKey logging issues,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:28,log,logging,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,1,['log'],['logging']
Testability,"a test pdb file that fails to convert to cml, zipped to fit. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780729:2,test,test,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780729,1,['test'],['test']
Testability,a) The ECFP implementation was expecting the ``std::vector<int>`` to be treated as a list of hashes whilst the callers were expected it to be a bit set. Whilst return the raw hash values is useful it would require a new API point.; b) Resolves #1651. With these changes the fingerprint scores 76.2% on the Briem Lessel benchmark. . Also looks like the ``Fold()`` function is doing the wrong thing elsewhere too. For example if I generate MACCS keys...; ```; 0000000000021000014416cf1be5b083ad2fef7f1f	204; 0004200000000021418004afa160b00910a1e46a1b	205; 8004040000100200000816cf8d69b847856dfefb19	206; 000000002000002141d034e82b61b08b01230d2d1f	207; 00000000204000840194b1091b73b3e781eb2fff1f	208; ```; and then fold them to say 256 bits... one would expect the output to be padded with trailing zeros; ```; 000000000000300001d204de90699425843952fe1f0000000000000000000000	173; 801480800d580b84e5fc9ded3773d16fd6efeb7f1f0000000000000000000000	174; 000000040000000000000006800c2e84290404d6080000000000000000000000	175; 0000000000000000810002401b510165546fc3ff1f0000000000000000000000	176; 000000002000002001d0169e9b61b16340e3cdfb1f0000000000000000000000	177; 0000000000400084015085871013a7e58deff7df1f0000000000000000000000	178; ```; good... but now 512...; ```; 000004000001002001c4301e9b61bd43cce17deb1f00000000000000000000007373000000000000510000000000000000000000000000000900000006000000	17; 0000000000000001038002461a81a18149a1c5391f00000000000000000000007373000000000000510000000000000024000000000000002400000000000000	18; 0000000000002000800230510000016604dcbafa1f00000000000000000000007373000000000000b10000000000000090460828177f00000000000000000000	19; 0000000000000000004434c80960b1e38963afff1f00000000000000000000007373000000000000210000000000000090be6d000000000098be6d0000000000	20; 000000002000102181d41ecf133192635c6feafd1f00000000000000000000007373000000000000f10100000000000058f86d000000000008fc6e0000000000	21; 0000800008108364600cb1703f59ecafdbbb7fff1f00000000000000000000007373000000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1653:319,benchmark,benchmark,319,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1653,1,['benchmark'],['benchmark']
Testability,"a); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5986,test,test,5986,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"abel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Mojave. ## Expected Behavior; python3 -c 'import openbabel' <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. python3 -c 'import openbabel'; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/local/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; Expected in: flat namespace; in /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; python3 -c 'import openbabel' <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2244:1997,test,test,1997,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2244,1,['test'],['test']
Testability,"abel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:Open Babel 2.4.1 -- Apr 4 2018 -- 09:45:46; Operating system and version:ubuntu 16.04 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current API documentation gives the following details for the function of interest :. void CopyConformer ( double * c,int nconf ) . Copy the conformer nconf into the array c; Warning: Does no checking to see if c is large enough . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; in fact I saw that the opposite was done, the content of the array c is copied into the nconf. the code is; void OBMol::CopyConformer(double *c,int idx); {; // obAssert(!_vconf.empty() && (unsigned)idx < _vconf.size());; memcpy((char*)_vconf[idx],(char*)c,sizeof(double)*3*NumAtoms());; }. <!--- If suggesting a change/improvement, explain the difference from current behavior —>; if I do not make any mistake, I would suggest the new code; void OBMol::CopyConformer(double *c,int idx); {; // obAssert(!_vconf.empty() && (unsigned)idx < _vconf.size());; memcpy((char*)c,(char*)_vconf[idx],sizeof(double)*3*NumAtoms());; }. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1907:2040,test,test,2040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1907,1,['test'],['test']
Testability,"ad of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:8387,test,test,8387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,akeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX obje,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54437,test,test,54437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"allet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phonon plasma png policykit ppds qml qt3support qt4 qt5 readline sdl seccomp semantic-desktop session spell ssl startup-notification svg systemd tcpd tiff truetype udev udisks unicode upower usb vorbis wayland widgets wxwidgets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDON",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:11572,log,logio,11572,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['logio']
Testability,"aluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to su",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:2925,test,test,2925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbabel']"
Testability,"amples where obabel fails. . % obabel mymol.smi -oxyz; 6. O 0.00000 0.00000 0.00000; Br 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; Br 0.00000 0.00000 0.00000. % obabel mymol.smi -osdf; OpenBabel05171709412D. 6 3 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 Br 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 Br 0 5 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 4 5 2 0 0 0 0; M CHG 2 2 1 6 -1; M END; $$$$. -Xianghai Sheng. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1570:2078,test,test,2078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1570,1,['test'],['test']
Testability,"and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2695,log,log,2695,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,another test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/387:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/387,1,['test'],['test']
Testability,"ared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file:/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1169,log,log,1169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"arning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:3569,test,test,3569,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbabel']"
Testability,"ass. ## Errors from failing tests. ```sh; Test project /home/jfkonecn/repos/openbabel/build; Start 212: pytest_babel; 1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 529, in testOBRMS; output, err = run_exec( ""obrms -t 10 %s %s""%(sdffile,sdffile)); File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 56, in run_exec; p = Popen([exe] + broken[1:],; File ""/usr/lib/python3.10/subprocess.py"", line 971, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1863, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: '../bin/obrms'. ----------------------------------------------------------------------; Ran 16 tests in 1.128s. FAILED (errors=1). CMake Error at pytest_babel.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total T",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:1773,test,testOBRMS,1773,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,1,['test'],['testOBRMS']
Testability,"at happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The geometry is converted to `P 1` when the symmetry operations are insufficient, but *no* messages are issued for the full HM symbol:. | `space_group_name_H-M_alt` in input CIF | `_space_group_symop_operation_xyz` in input CIF | error messages | `_space_group_name_H-M_alt` in generated CIF |; |-----------------------------------------|-------------------------------------------------|:-----:|----------------------------------------------|; | `F m -3 m`		(short)	| null		 	| N | `F m 3 m` |; | `F m -3 m`		(short)	| insufficient	| **Y** | `P 1` |; | `F m -3 m`		(short)	| all			| N | `F m 3 m` |; | `F 4/m -3 2/m`	(full)	| null			| N | `F m 3 m` |; | `F 4/m -3 2/m`	(full)	| insufficient	| **N** | `P 1` |; | `F 4/m -3 2/m`	(full)	| all			| N | `F m 3 m` |. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Prepare the following file named as NaCl.cif:. ```; data_NaCl; _cell_length_a 5.6; _cell_length_b 5.6; _cell_length_c 5.6; _cell_angle_alpha 90.0; _cell_angle_beta 90.0; _cell_angle_gamma 90.0; _chemical_name_common NaCl; _space_group_IT_number 225; _space_group_name_H-M_alt 'F m -3 m'; loop_; _space_group_symop_operation_xyz; x,y,z; loop_; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; Na 0.0 0.0 0.0; Na 0.5 0.5 0.0; Na 0.5 0.0 0.5; Na 0.0 0.5 0.5; Cl 0.5 0.0 0.0; Cl 0.0 0.5 0.0; Cl 0.0 0.0 0.5; Cl 0.5 0.5 0.5; ```. Here, `_space_group_symop_operation_xyz` is apparently insufficient. <details>; <summary>all of the operations for Fm-3m</summary>; <pre><code> x,y,z; -x,-y,z; -x,y,-z; x,-y,-z; z,x,y; z,-x,-y; -z,-x,y; -z,x,-y; y,z,x; -y,z,-x; y,-z,-x; -y,-z,x; y,x,-z; -y",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2586:4120,test,test,4120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2586,1,['test'],['test']
Testability,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1901,test,test,1901,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['test'],['test']
Testability,"ated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png>; >; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLXPMPSRSODXRI7SLDULVFO7ANCNFSM4WTZ5RNQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:1907,test,testing,1907,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['test'],['testing']
Testability,"ating system and version: Debian 12.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; openbabel yields SMILES without chirality for [spiro&#x5b;4.4&#x5d;nonatetraene](https://www.chemspider.com/Chemical-Structure.123328.html): `C1=CC2(C=C1)C=CC=C2`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. openbabel thinks the spiro center is chiral: `C1=C[C@]2(C=C1)C=CC=C2`, while it works successfully for spiro[2.2]pentadiene, `C1=CC21C=C2`, spiro[3.3]heptane, `C1CC2(C1)CCC2`, and spiro[4.4]nonane, `C1CCC2(C1)CCCC2`. I checked all of the combinations of (cyclopropane, cyclopropene, cyclopentane, and cyclopentadiene), and found that spiro[2.4]heptatriene is also misclassified as chiral: `C1=C[C@]2(C=C1)C=C2`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" x3=""0"" y3=""0"" z3=""0""/>; <atom id=""a2"" elementType=""C"" x3=""-0.94"" y3=""-1.2"" z3=""0""/>; <atom id=""a3"" elementType=""C"" x3=""-2.258"" y3=""-0.707"" z3=""0""/>; <atom id=""a4"" elementType=""C"" x3=""-2.258"" y3=""0.707"" z3=""0""/>; <atom id=""a5"" elementType=""C"" x3=""-0.94"" y3=""1.2"" z3=""0""/>; <atom id=""a6"" elementType=""C"" x3=""0.94"" y3=""0"" z3=""-1.2""/>; <atom id=""a7"" elementType=""C"" x3=""2.258"" y3=""0"" z3=""-0.707""/>; <atom id=""a8"" elementType=""C"" x3=""2.258"" y3=""0"" z3=""0.707""/>; <atom id=""a9"" elementType=""C"" x3=""0.94"" y3=""0"" z3=""1.2""/>; <atom id=""a10"" elementType=""H"" x3=""-0.650"" y3=""-2.230"" z3=""0""/>; <atom id=""a11"" elementType=""H"" x3=""-3.137"" y3=""-1.316"" z3=""0""/>; <atom id=""a12"" elementType=""H",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674:1677,test,test,1677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674,1,['test'],['test']
Testability,"ation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:7239,test,test,7239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testfastsearch']"
Testability,"ave alternative settings with changed basis and/or shifted origin. Any two settings of the same space group can be transformed into each other by applying a 4x4 transformation matrix. The question is what settings are practical, useful and worth listing in a table. And what are their standard (H-M) names. (There is no problem with interpreting Hall names: they are unambiguous and they encode all the operations in the name). ITfC has a few tables that list spacegroup settings (in Vol. A and B). These tables list different sets of settings, and they may differ between editions of ITfC. The table that is most commonly used in computer programs is in Vol. B. It is the same table that is used by SgInfo and cctbx/sgtbx (and spglib) and it's available here: http://cci.lbl.gov/sginfo/hall_symbols.html. It has 530 entries (3 are duplicate, as @afonari wrote above; different standard names correspond to the same sets of operations). The only thing that differs is that Open Babel recognizes 14 (as @afonari calculated) extra settings. It's probably good, but there is no good reference for naming of these settings.; For example: ""C -4 2 b"" is listed on http://img.chem.ucl.ac.uk/sgp/MEDIUM/117cz1.htm, but not in ITfC. ITfC have a C-centered settings of the same spacegroup (117) named ""C -4 2 g1"". This name is listed in table 1.5.4.4 in Vol.A ch.1.5 (and without any further information), but not in the table with Hall symbols. So I'm not able to tell if ""C -4 2 g1"" from ITfC and ""C -4 2 b"" from Birkbeck collage website refer to the same settings. Regarding shared resources: most of the programs I've seen use either the list of [530 settings][1] or the [syminfo.lib][2] file from CCP4 (or the older version named `symop.lib`).; I guess it's unavoidable that different programs recognize different sets of symbols, as there is no definite list. [1]: http://cci.lbl.gov/sginfo/hall_symbols.html; [2]: http://fg.oisin.rc-harwell.ac.uk/scm/loggerhead/libccp4/trunk/view/head:/data/syminfo.lib",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893:2365,log,loggerhead,2365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893,2,['log'],['loggerhead']
Testability,"avogadro/testfiles/methane.mpo crashes quite a lot in Avogadro if I select some vibrations or try to animate them. Curiously enough, transforming it to molden format and visualizing the resulting vibrations does work fine in Avogadro, so I assume this is a bug in the molpro format code. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/900:9,test,testfiles,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/900,1,['test'],['testfiles']
Testability,"b 3cd9ba8b 3b1ca892 3b1ca892 3a336052 275de761 ; 1c66c562 18eb4a1e 1170108b 1170108b 1170108b 1170108b ; 1170108b 1170108b 1170108b 09639408 094b2d63 026490f7"".Replace(Environment.NewLine, string.Empty);. string EthanolSmiles = ""CCO"";; string EthanolFP2 = @""00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 40000000 ; 00000000 00000000 00000000 00080008 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000"".Replace(Environment.NewLine, string.Empty);. VectorUInt res = new VectorUInt();. var blocks = KeggECFP2.Split(' ').ToList();; blocks.Reverse();; foreach (string block in blocks); {; uint uintValue = uint.Parse(block, System.Globalization.NumberStyles.HexNumber);; //byte[] bb = BitConverter.GetBytes(uintValue);; //Debug.WriteLine(formatter, uintValue, BitConverter.ToString(bb));. //parsed.Add(Big2Little3(uintValue));; res.Add(uintValue);; }. using (OBConversion conv = new OBConversion()); using (OBMol mol = new OBMol()); using (OBFingerprint fp = OBFingerprint.FindFingerprint(""ECFP2"")); using (VectorUInt vec = new VectorUInt()); {; conv.SetInFormat(""smi"");; mol.Clear();; conv.ReadString(mol, KeggSmiles);; fp.GetFingerprint(mol, vec);. System.Collections.Generic.List<uint> cmpFP = new System.Collections.Generic.List<uint>(vec);; //cmpFP.Reverse();. for (int i = 0; i < cmpFP.Count; i++); {; Debug.WriteLine(formatter,; i,; blocks[i].ToUpper(),; BitConverter.ToString(BitConverter.GetBytes(cmpFP[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(cmpFP[i]))).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(res[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(res[i]))).Replace(""-"",string.Empty));; }. byte[] bytes = Converter.ToByteArray(vec);. for (int i = 0; i < vec.Count; i++); {; Debug.Assert(vec[i] == res[i]);; }; }; }; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:4121,Assert,Assert,4121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Assert'],['Assert']
Testability,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:588,log,log,588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['log'],['log']
Testability,"baoilleach: even if I understand the interest of testcases, I'm not very interested in creating some. Fixing a bug is far more motivating.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378018072:49,test,testcases,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378018072,1,['test'],['testcases']
Testability,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1098:2040,log,log,2040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098,1,['log'],['log']
Testability,"bel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Dec 13 2017 -- 10:41:11; Operating system and version: Linux styx 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3 (2017-12-03) x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I would like to have tinker txyz output files with atom types corresponding to a custom force field. ## Actual Behavior. Currently, the MM2 atom types are used. Using write option 3, atom types for the MM3 forcefield can be written. I would like to use SMILE code and the Atom Class informations feature as an atom type for each atom. Below is the OpenSmiles specification for Atom Class: . > An ""atom class"" is an arbitrary integer, a number that has no chemical meaning. It is used by applications to mark atoms in ways that are meaningful only to the application. Multiple atoms may be labeled with the same atom class.; > The atom class is specified after all other properties in square brackets. From Daylight:. > SMILES Atom Expression Grammar:; > atom 		:	SYMBOL; > 			|	[ WEIGHT SYMBOL mods ]; > 			|	[ WEIGHT SYMBOL mods : CLASS ]; > 			;; > mods : mod mods; > 			;; > mod : HCOUNT | CHARGE | CHIRAL; > 			;. Exemple:. Ethanol smile code CCO is written:. `[C:345]([H:34])([H:34])([H:34])[C:234]([H:34])([H:34])[O:67]([H:68])`. where hydrogens have been written explicitly and atom class numbers correspond to some force field types. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1732:2282,test,test,2282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1732,1,['test'],['test']
Testability,"bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6449,test,test,6449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"binchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:22161,test,test,22161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"binchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:24229,test,test,24229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ble' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3333,log,log,3333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,"bu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.08",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2302,log,logP,2302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['log'],['logP']
Testability,"bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Windows 11. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm just trying to convert a SMILES string to an .xyz file using the --gen3d to get an approximate low energy conformation. I expect to get an xyz file with 3d coordinates. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> It generates the xyz file, but I do not get 3D coordinates ( in that the z column is all 0s) showing that no optimization is happening. I get the following output:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. ## Steps to Reproduce; I am using the command 'obabel -:""CCCC"" -O 1.xyz --gen3D -xb -h' in the command line.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. I saw a different thread about someone who added BABEL_DATADIR as an environment variable and fixing a similar problem, but that didn't work for me.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676:2055,test,test,2055,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676,1,['test'],['test']
Testability,c. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3325,Test,Test,3325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"cccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read the SMILES 'by eye', and I don't have access to other internal tools to test the chirality. I detect 'disruption' when the OpenBabel generated key (either 'can' or 'inchi' format) differs depending on if I use the molfile or SMILES string supplied by the vendor; it's possible that the vendor has not done the molfile-to-SMILES mapping properly, and that the chirality differs within the vendor DB. So I am passing judgment on the molecules based on graphical visualization provided by PubChem:. http://pubchem.ncbi.nlm.nih.gov/edit/. ... and whenever I've spot-checked a disruption by this (unwieldy) mechanism, the chirality of the vendor-supplied SMILES matches that of the key generated by OB via the vendor-supplied molfile, but not the OB key made from the vendor-supplied SMILES (I can't be sure that there is not a bug within the PubChem tool, though). In a few cases, converting to InChI seems to demonstrate indisputable lost of stereochemical information. The following",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:2071,test,test,2071,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['test'],['test']
Testability,"ceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1422,Test,Tests,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['Test'],['Tests']
Testability,ceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3274,Log,Log,3274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,check reports failed test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750,1,['test'],['test']
Testability,"ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(203) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; crkformat.cpp; CSRformat.cpp; cssrformat.cpp; dmolformat.cpp; Generating Code...; Compiling...; fastaformat.cpp; fchkformat.cpp; featformat.cpp; fhformat.cpp; freefracformat.cpp; gamessformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applied to unsigned type, result still unsigned; gaussformat.cpp; gausszmatformat.cpp; ghemicalformat.cpp; gromos96format.cpp; hinformat.cpp; jaguarformat.cpp; mmcifformat.cpp; mmodformat.cpp; moldenformat.cpp; mopacformat.cpp; mpdformat.cpp; mpqcformat.cpp; msiformat.cpp; Generating Code...; Compiling...; msmsformat.cpp; nwchemformat.cpp; pcmodelformat.cpp; PQSformat.cpp; qchemformat.cpp; shelxformat.cpp; tinkerformat.cpp; turbomoleformat.cpp; unichemformat.cpp; viewmolformat.cpp; xedformat.cpp; xyzformat.cpp; yasaraformat.cpp; zindoformat.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 2 error(s), 21 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:10962,log,log,10962,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['log'],['log']
Testability,"ck to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5659,test,test,5659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testsym']"
Testability,"clspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::WriteMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?WriteMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ); pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::WriteMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?WriteMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ); pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ); ..\Debug/OBCommonD.obf : fatal error LNK1120: 4 unresolved externals; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 16 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:4622,log,log,4622,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['log'],['log']
Testability,cmake question & make test error,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['test'],['test']
Testability,"cmake version 2.6-patch 4, on Centos 5.3 (2.6.18-164.el5), 64-bit. The environment variables set are those in the INSTALL file:. >Environment Variables; >==================; >Open Babel uses a few environment variables to find things at; >runtime. If Open Babel is installed to the location specified at; >compile time, none of these variables need to be set. >BABEL_LIBDIR - the location of Open Babel format plugins; >BABEL_DATADIR - the location of the data files. Since the standard way to build packages is to run:; make; make test; make install. the programs are not installed to the final destination yet, so it seems that the environment variables need to be set. I set them to the ""data"" and ""src/plugins"" directories under the source root. Original comment by: argenta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794:532,test,test,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794,1,['test'],['test']
Testability,"cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage re",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1887,Test,Test,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"conversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behav",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12962,test,test,12962,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1895>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGZtUPRpAG_YSxBPjVEA0_yp-d5ahks5ugrXKgaJpZM4XDIFZ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:1354,test,test,1354,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,4,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53429,test,test,53429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53507,test,test,53507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53582,test,test,53582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ctions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1790,Test,Test,1790,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"cule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -r` forcefully changes original molecule(s) charges to some values of unknown origin which are numerically close to Gasteiger charges but not equal to those. This behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.1146; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.1146; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.1146; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2320:2586,test,test,2586,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320,1,['test'],['test']
Testability,"d Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Dec 12 2022 -- 05:03:20; Operating system and version: Mac M1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Obabel can convert the format normally. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some elements can not be coverted from gro file to pdb file. I tried some elements like Li, Mg, Be. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This is my `.gro` file content:; ```; GAFF force field; 66; 15EC Li 1 1.802 3.228 1.416 -0.5422 -0.0976 -0.1356; 41EC C 2 1.943 2.749 1.644 0.6229 -0.0702 -0.7896; 41EC C1 3 1.961 2.828 1.772 0.0766 -0.1379 0.1261; 41EC O 4 1.932 2.968 1.738 -0.1870 -0.4902 -0.1177; 41EC C2 5 1.897 2.970 1.604 0.4416 -0.4313 0.3827; 41EC O1 6 1.866 3.069 1.542 -0.2911 0.2250 0.3756; 41EC O2 7 1.885 2.848 1.556 -0.0665 0.1267 -0.4593; 41EC H 8 1.887 2.655 1.652 0.9759 -0.2466 -0.3474; 41EC H1 9 2.042 2.732 1.602 -0.0691 0.5175 -2.7663; 41EC H2 10 2.066 2.813 1.797 0.6073 -0.2252 -1.9787; 41EC H3 11 1.903 2.791 1.859 -2.1307 -0.4792 -1.3989; 44EC C 12 2.035 2.297 2.100 -0.7722 0.0818 0.3746; 44EC C1 13 2.098 2.224 1.975 -0.1648 0.0654 0.1066; 44EC O 14 2.065 2.309 1.863 0.5016 0.5182 -0.4674; 44EC C2 15 1.976 2.403 1.905 0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614:1274,test,test,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614,1,['test'],['test']
Testability,"d evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:12979,test,test,12979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testkekule']"
Testability,"d evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:10687,test,test,10687,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testunique']"
Testability,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['test'],['test']
Testability,"d issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: M1 Mac running Sonoma 14.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Expected `obabel -:""CCO.OCC>>CCC"" -O output.cdxml --gen2D` to turn `>>` into `<arrow />`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The output is instead `output.cdxml:`. ```; <?xml version=""1.0""?>; <!DOCTYPE CDXML; SYSTEM ""http://www.camsoft.com/xml/cdxml.dtd"">; <CDXML BondLength=""30"">; <page>; <fragment>; <n id=""1"" p=""223.923048 90.000000""/>; <n id=""2"" p=""197.942286 105.000000""/>; <n id=""3"" p=""171.961524 90.000000"" Element=""8""/>; <n id=""4"" p=""223.923048 165.000000"" Element=""8""/>; <n id=""5"" p=""197.942286 180.000000""/>; <n id=""6"" p=""171.961524 165.000000""/>; <n id=""7"" p=""141.961524 105.000000""/>; <n id=""8"" p=""115.980762 90.000000""/>; <n id=""9"" p=""90.000000 105.000000""/>; <b B=""1"" E=""2""/>; <b B=""2"" E=""3""/>; <b B=""4"" E=""5""/>; <b B=""5"" E=""6""/>; <b B=""7"" E=""8""/>; <b B=""8"" E=""9""/>; </fragment>; </page>; </CDXML>; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""CCO.OCC>>CCC"" -O output.cdxml --gen2D`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2703:1899,test,test,1899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2703,1,['test'],['test']
Testability,"d/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:15735,test,test,15735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbindings']"
Testability,"df)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html), cf. attached archive) removes this indicator. If `.cdxml` and `.mol (v3000)` of alkenes generated by ChemDraw are used as input, the indicator equally is absent in OpenBabel's output. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```bash; $ obabel -:""CC=CC"" -omol -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D. OpenBabel11122115062D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 4 3 0 0 0; M V30 BEGIN ATOM; M V30 1 C 0 0 0 0; M V30 2 C 0 0 0 0; M V30 3 C 0 0 0 0; M V30 4 C 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 1 1 1 2; M V30 2 2 2 3; M V30 3 1 3 4; M V30 END BOND; M V30 END CTAB; M END; 1 molecule converted; ```. and files within the archive attached. [v3000_extended_stereo.zip](https://github.com/openbabel/openbabel/files/7528092/v3000_extended_stereo.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429:2366,test,test,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429,1,['test'],['test']
Testability,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1988,Test,Test,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"drc@macinchem.fsnet.co.uk. One of the ""bugs"" that came to light from the early beta testers of ; iBabel was the issue of line endings on the Mac. At the moment ; Babel expects UNIX (or DOS?) line endings. I got round the problem ; by adding a PERL script to the import of iBabel to convert Mac line ; endings to UNIX. However it might be better to have Babel support ; Mac line endings at least for import. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/36"":https://sourceforge.net/p/openbabel/feature-requests/36",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406:84,test,testers,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406,1,['test'],['testers']
Testability,e error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4236,test,test,4236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250:1375,Test,Test,1375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"e you missing `System' using directive?; ./VectorVecDouble.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecInt.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecOBVector3.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecUInt.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpAtom.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpBond.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpData.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpInternalCoord.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpRing.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpRotor.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; Compilation failed: 22 error(s), 0 warnings; [100%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; make[2]: *** [/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp] Error 1; make[2]: *** Deleting file `/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp'; make[1]: *** [scripts/CMakeFiles/bindings_csharp.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Linking CXX executable ../bin/test_runner; [100%] Built target test_runner; make: *** [all] Error 2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1857#issuecomment-403115185:3202,test,test,3202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1857#issuecomment-403115185,1,['test'],['test']
Testability,"e#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3406,test,test,3406,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"e#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3735,test,test,3735,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"e#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4065,test,test,4065,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:786,Log,Log,786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,4,['Log'],['Log']
Testability,eFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52584,test,test,52584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"eam. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1942,Test,Tests,1942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['Test'],['Tests']
Testability,"eatformat.cpp; fhformat.cpp; freefracformat.cpp; gamessformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applied to unsigned type, result still unsigned; gaussformat.cpp; gausszmatformat.cpp; ghemicalformat.cpp; gromos96format.cpp; hinformat.cpp; jaguarformat.cpp; mmcifformat.cpp; mmodformat.cpp; moldenformat.cpp; mopacformat.cpp; mpdformat.cpp; mpqcformat.cpp; msiformat.cpp; Generating Code...; Compiling...; msmsformat.cpp; nwchemformat.cpp; pcmodelformat.cpp; PQSformat.cpp; qchemformat.cpp; shelxformat.cpp; tinkerformat.cpp; turbomoleformat.cpp; unichemformat.cpp; viewmolformat.cpp; xedformat.cpp; xyzformat.cpp; yasaraformat.cpp; zindoformat.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\KFReader.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 62 error(s), 23 warning(s); ------ Build started: Project: OBXMLFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; chemkinformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlreactformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rsmiformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/share",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:19592,log,log,19592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['log'],['log']
Testability,"eck boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->GetGenericValueDef(1.0);`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1786,assert,assert,1786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,2,"['assert', 'test']","['assert', 'test']"
Testability,ect test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54651,test,test,54651,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"eel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Aug 30 2020 -- 02:22:45; Operating system and version: Ubuntu 20.20. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. gen3D for two identical structures in one input file (0d or 2d) should yield some 3d structure, where both molecules are placed next to each other. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. When you input two identical structures in one input file (0d or 2d), gen3D superimposes both molecules. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Input for a benzene dimer:. ```bash; $ obabel -:""c1ccccc1.c2ccccc2"" --gen3D -o mol; ```. Openbabel output with the molecules having the identical coordinates:. ```. OpenBabel09082017143D. 24 24 0 0 0 0 0 0 0 0999 V2000; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2278:1527,test,test,1527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2278,1,['test'],['test']
Testability,"ehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /us",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:9846,test,test,9846,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2331:1899,test,test,1899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331,1,['test'],['test']
Testability,"equests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:1413,test,test,1413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,1,['test'],['test']
Testability,"er not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 1 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Gen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3761,log,log,3761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,"ers/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8749,test,test,8749,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,ertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_ru,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52063,test,test,52063,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,es'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeF,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52360,test,test,52360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"es: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458:1280,test,test,1280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458,1,['test'],['test']
Testability,"es?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Python version: 3.6.7; Open Babel version: 2.4.1 ; Operating system and version: Mac OS 10.13.6 (replicated on Ubuntu 16.04 LTS) . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. The formal charge of the attached .mol2 file should be +1. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Pybel reports the charge of this molecule to be 0, whereas RDKit correctly identifies it as having a formal charge of +1. When converted to any other file format by openbabel, the charge information is lost. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The .mol2 file is attached, and the following python snippet reproduces the problem:. ```; import pybel; from rdkit import Chem. # pybel mol2 file; pybel_mol2 = pybel.readfile(""mol2"", ""ligand.mol2"").__next__(); print(pybel_mol2.charge); # RDKit mol2 file; rdkit_mol2 = Chem.MolFromMol2File(""ligand.mol2""); print(Chem.GetFormalCharge(rdkit_mol2)); ```; [ligand.mol2.zip](https://github.com/openbabel/openbabel/files/3158771/ligand.mol2.zip). Thanks! Please let me know if there are any issues with replication, or if there's a simple mistake I'm making with the file reading API.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1982:1564,test,test,1564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1982,1,['test'],['test']
Testability,est_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; Any help would be,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54951,test,test,54951,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"estion about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:2256,test,test,2256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['test'],['test']
Testability,"ests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel)); Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The charged hydrogen atoms are retained or a warning is issued that such constructs are not allowed. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Operations that output SMILES strings silently remove `[H-]` and `[H+]` atoms from constructs like `[H-][Al+3]([H-])[H-]`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Operation:; ```; echo ""[H-][Al+3]([H-])[H-]"" | obabel -i smi -o can; ```; Expected output:; ```; [H-][Al+3]([H-])[H-] or [H][Al]([H])[H] or something similar; ```; Actual output:; ```; [Al+3]; ```. # Additional notes. * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to SDF retains the negatively charged hydrogen atoms.; * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to InChI retains the H atoms, although it does disconnect them and neutralise the overall charge. ; * The charged hydrogen atoms are not removed if they are not bound by other atoms.; * The charged hydrogen atoms are not removed if they are bridging atoms, e.g. canonicalisation of `[Al][H-][Al]` produces `[Al][H-][Al]`.; * I fully understand that the provided example is quite unconventional, thus if it is not supported, it would be",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2625:1416,test,test,1416,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2625,1,['test'],['test']
Testability,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2309:1563,test,tests,1563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309,5,['test'],"['test', 'tests']"
Testability,"ets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDONS=""quota2 psd pknock lscan length2 ipv4options ipset ipp2p iface geoip fuzzy condition tee tarpit sysrq steal rawnat logmark ipmark dhcpmac delude chaos account""; Unset: CC, CPPFLAGS, CTARGET, CXX, EMERGE_DEFAULT_OPTS, INSTALL_MASK, LC_ALL, PORTAGE_BUNZIP2_COMMAND, PORTAGE_COMPRESS, PORTAGE_COMPRESS_FLAGS, PORTAGE_RSYNC_EXTRA_OPTS, USE_PYTHON; ```.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:12692,log,logmark,12692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['logmark']
Testability,"evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17305,test,test,17305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"even with the funcion in obutils.cpp renamed to IsNear_mod as probably intended I get this error on ppc64le:. Start 10: rotor_Test; 10/60 Test #10: rotor_Test .......................***Failed Error regular expression found in output. Regex=[FAIL] 0.07 sec; /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:77: IsNear_mod(fabs(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates())), 180.0, 360.0, 1.0) (FAIL); /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:109: IsNear_mod(fabs(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates())), 180.0, 360.0, 1.0) (FAIL); /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:123: IsNear(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates()), 180.0, 1.0) (FAIL). Original comment by: kick_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804560:138,Test,Test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804560,4,"['Test', 'test']","['Test', 'test']"
Testability,fail to calculate logP using pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372:18,log,logP,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372,1,['log'],['logP']
Testability,ffmmff94 test fails under MSVC and on Kitware buildbot,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013,1,['test'],['test']
Testability,fications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppre,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1271,test,test,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Oct 20 2017 -- 06:42:45; Operating system and version: Darwin box.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Explicit hydrogens on LSD molecule display correctly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; One of the explicit hydrogens, at least on the LSD molecule, prints over the C-C bond 'below' it. This hydrogen protrudes above the molecule, so it is not energetically false I don't think, but for cheminformatics, it looks like a bug. Geoff reckons it is anyway. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Take the LSD .sdf file from pubchem renamed to .txt for github:; [VAYOSLLFUXYJDT-RDTXWAMCSA-N.txt](https://github.com/openbabel/openbabel/files/1426112/VAYOSLLFUXYJDT-RDTXWAMCSA-N.txt). Run this:. obabel VAYOSLLFUXYJDT-RDTXWAMCSA-N.sdf -O VAYOSLLFUXYJDT-RDTXWAMCSA-N.png -d -xp 1025 -xu -xU -xb none -xB black -xd -xm -xt. Look at the resulting image:. ![vayosllfuxyjdt-rdtxwamcsa-n](https://user-images.githubusercontent.com/20246402/32156975-71cc705e-bd38-11e7-9c1a-f70d2f4ab901.png). SDF appear to have better molecule arrangement characteristics than SMILES but using SMILES does not produce this as it doesn't print this hydrogen. Maybe it's not explicit then I guess. My cheminformatics is new.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681:1704,test,test,1704,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681,1,['test'],['test']
Testability,"for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.16"") ; -- Found SWIG: /usr/bin/swig (found version ""3.0.12"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""3.0.12"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (fou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2735,Test,Test,2735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,6,['Test'],['Test']
Testability,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:3618,test,test,3618,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['test'],['test']
Testability,g CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53348,test,test,53348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"g for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /home/syesylevsky/install/openbabel-build; ```. But after that build fails:. ```; [ 69%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp: In member function ‘bool OpenBabel::GAM",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3312,Test,Test,3312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,6,['Test'],['Test']
Testability,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7050,test,test,7050,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7826,test,test,7826,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,gzip-ed test file (in Mol2 format). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804,1,['test'],['test']
Testability,"havior; <!-- Describe the intended output or what you expected to see. -->. There is varying behavior for these formats both when using python and when using the command line.; I would like to see openbabel replicate the export capabilities of ChemDraw. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Command Line Interface:. - When trying to convert cdxml to sdf the formula is brought along with the molecule in the data section, however, no annotations are brought. This makes it impossible to grab the name of the molecule since ChemDraw assigns a number to the ID field of the fragments in the original file. - When trying to convert a cdx to sdf nothing is brought along with the fragment. - When reading the smile from a cdxml file I get a different and incorrect smile than when reading from a cdx file. If you take the cdxml smile you get out and put it back into ChemDraw it produces a molecule with a bunch of valence errors. When taking the cdx smile and putting back into ChemDraw it reproduces the same molecule. Python:. - Cannot read cdx files . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command Line:; 1. Create Chemdraw file; 2. Create Molecule; 3. Annotate the name on the Molecule; 4. Export as cdx file; 5. Export as sdf file; 6. `obabel <input cdxml> -Oobabel_cdxml_sdf.sdf` and compare to chemdraw sdf; 7. `obabel <input cdx> -Oobabel_cdx_sdf.sdf` and compare to chemdraw sdf; 8. `obabel <input cdxml> -osmi -xk -xh` and compare to `obabel <input cdx> -osmi -xk -xh`. Python:; ```; from openbabel import pybel. for mol in pybel.readfile(""cdx"", <input cdx>):; total_molecules += 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2343:2213,test,test,2213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2343,1,['test'],['test']
Testability,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2339:3869,test,test,3869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339,1,['test'],['test']
Testability,"he old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6098,test,test,6098,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testsym']"
Testability,"hello. building from git on linux with gcc:. ----8<----; install:651> uname -sr; Linux 5.0.7; install:652> gcc --version; gcc (GCC) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ---->8----. With current master (6aff822f8d37074eebcd1901628623ea1b97f6ae) I get a; flood of errors like this:. ----8<----; scripts/ruby/openbabel-ruby.cpp:49397 error: 'OBMolRingIter' is not a member of 'OpenBabel'; ---->8----. (build log is too big (~9.8MB) to attach). My previous build (c28c7dc86db1f415c0a60abeb94497d49161ff8d) was; absolutely fine, as always. Is there any problem or am I missing something?. thanks a lot; ciao; -g",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1962:578,log,log,578,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1962,1,['log'],['log']
Testability,"help with this. Both of these changes address long-standing major deficiences of the toolkit. Regarding (1), there have been many bug reports related to implicit hydrogens appearing/disappearing. Furthermore, it is really much simpler to do things this way, and the code will be faster as there will be no continual reperception of hydrogen counts. Previously there were several functions and flags to work-around the existing system such as ForceNoImplH; these all go away now. Regarding (2), the previous approach was (IMO) solving the wrong problem. It is now much simpler and faster. Previously parts of the kekulization infrastructure were spread around several different files (some in SMILES format, some in OBMol, and some in kekulization.cpp) and had several associated trigger functions (e.g. IsKSingle). So what's the downsides? Well, these are major changes and there are still some wrinkles:; 1. The existing radical code was built as an adjustment on top of the old implicit valence code. There are no tests, and so some of this may not work now. I'll be meeting Chris Morley at an RSC meeting in June and will bend his ear.; 2. Smiley Format doesn't read in SMILES correctly. I think this should be removed and the error messages and nice functions merged with the existing SMILES reader.; 3. Since kekulization has been tightened up, we should implement the Daylight aromaticity model as a starting point for SMILES writing. Otherwise we will write out SMILES we cannot kekulize.; 4. I implemented an implicit hydrogen adder based on typical valences (e.g. for PDB) with code from @dan2097. This is likely different from the old one (using IMPVAL values), and may need further tweaking.; 5. I didn't know where to put global functions, e.g. OBKekulize and GetTypicalValences. Consider their current locations placeholders.; 6. Now that I think of it, I scattered around a few TODOs. I should check those... These are the things that I know about. Others may become apparent over time.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576:1265,test,tests,1265,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576,1,['test'],['tests']
Testability,"his warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call St",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:3545,test,test,3545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbabel']"
Testability,http://folding.bmc.uu.se/images/butane-g4.log.gz,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873699:42,log,log,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873699,1,['log'],['log']
Testability,"hyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1423,test,test,1423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['test'],['test']
Testability,"ibdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:14890,test,test,14890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbindings']"
Testability,"ic factor on the crystallisation of desmotropes of irbesartan."" RSC advances 9.9 (2019): 5244-5250.)_. Theoretically, when using the option `-p7.4 `for neutralization, the chemical transformation should be the following:; `c1[nH]nnn1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 1); `c1nnn[nH]1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 4); `c1n[nH]nn1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 2); `c1nn[nH]n1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 3). ## Actual Behavior; Only one SMILES string is correctly matched and converted, the others lead to the wrongly-neutralized structure. These are the SMILES string I get back after running conversion first from SMI to SDF, then SDF to SMI again:; `STARTING | SMI to SDF -p7.4 | SDF to SMI`; `c1[nH]nnn1 | [H]C1=NN=N[N-]1 | c1nnn[n-:1]1` - RIGHT: 1H-Tetrazole (H in position 1); `c1n[nH]nn1 | [H]N1N=NC([H])=[N-]1 | N1N=NC=[N-]1` - WRONG: 2H-Tetrazole (H in position 2), lost aromaticity, wrong valence; `c1nn[nH]n1 | [H]N1N=[N-]C([H])=N1 | N1N=C[N-]=N1` - WRONG: 2H-Tetrazole (H in position 3), lost aromaticity, wrong valence; `c1nnn[nH]1 | [H]N1N=N[N-]=C1[H] | N1C=[N-]N=N1` - WRONG: 1H-Tetrazole (H in position 4), lost aromaticity, wrong valence. If I change the `phmodel.txt ` file with the expected chemical transformations and switch off the original transformations, nothing happens. Even if I enter the corresponding SMARTS pattern, the output of the protonation step is wrong. What I did was to explicitly write all the permutations as SMILES strings for all the isomers of tetrazole. . ## Steps to Reproduce; Attached is the starting SMILES file with the molecules I manually generated to test this behavior as a txt file. The same problem occurs with other versions of OpenBabel (tested: 2.3.1, 2.4.1, and 3.1.1). The problem occurred also on several libraries downloaded as SDF files from different chemical providers. [MANUAL-TETRA.txt](https://github.com/openbabel/openbabel/files/5292364/MANUAL-TETRA.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2284:3341,test,test,3341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2284,2,['test'],"['test', 'tested']"
Testability,igned integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15354,test,test,15354,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"iguration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Micr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:1623,log,log,1623,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"ild/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:19831,test,test,19831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"ild/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Python bindings will be compiled; > Configuring done; > CMake Warning (dev):; > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > set the policy and suppress this warning.; > ; > MACOSX_RPATH is not specified for the following targets:; > ; > inchi; > openbabel; > ; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Generating done; > ; > Need help! Thank you~; > ; > —; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:21246,test,test,21246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testexample']"
Testability,ilding CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/tes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52808,test,test,52808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ils. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > T",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:5489,test,test,5489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testsym']"
Testability,"include/libxml/xmlexports.h: CMake no longer defines _WIN32 under Cygwin. . src/fingerprint.cpp: likely a typo -- ""**CYGWIN32**"" is not defined. test/CMakeLists.txt: need to include ""include(UsePythonTest)"" before using ADD_PYTHON_TEST.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/226:145,test,test,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/226,1,['test'],['test']
Testability,ing CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53270,test,test,53270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ing pybel. I've been using the pybel readfile method to extract geometries from the output files for various quantum chemistry codes. Unfortunately, when looking at the output files, readfile just hung. The problem seems to be that these readers (e.g NWChemOutputFormat::ReadMolecule) never return ""false"". They just trundle through the output looking for the coordinates block and replacing the old molecule with the new one until they hit the end of; the file. Hence if you call the OBConversion ReadFile method on them, you just get the final geometry and a return state of ""true"". Subsequent calls to the OBConversion Read method just return an empty molecule and the reader returns a state of ""true"". Hence the following block of code in pybel:. obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol,filename); while notatend:; yield Molecule(obmol); obmol = ob.OBMol(); notatend = obconversion.Read(obmol). just keeps looping forever. I can get this to work for me by calling NumAtoms() on the returned molecule and breaking if this is None. I've included a block of code below that demonstrates what I mean and have also attached a zipped NWChem output file that I used for testing this.; import sys; import openbabel as ob. filename = 'optim_c6h6.nwo' # NWChem output file; #filename = '3d.head.sdf' # Sample SDF file where the original; method works. obconversion = ob.OBConversion(); format = obconversion.FormatFromExt( filename ). formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format. obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol,filename). i=0; while notatend:. # Need to check natoms or we go on forever.; natoms = obmol.NumAtoms(); if not natoms:; print ""Molecule has no atoms!""; break. atom = obmol.GetFirstAtom(); print ""Got 1st coords "",atom.x(),atom.y(), atom.z(). obmol = ob.OBMol(); notatend = obconversion.Read(obmol); i+=1. print ""Found %s molecules"" % i . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651:1446,test,testing,1446,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651,1,['test'],['testing']
Testability,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2407:1325,test,test,1325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407,4,['test'],['test']
Testability,"ing.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:8491,test,test,8491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testfastsearch']"
Testability,"inite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Debug\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2434,log,log,2434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,3,['log'],['log']
Testability,"input CIF file, python script, error log. Original comment by: stewenner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800788:37,log,log,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800788,1,['log'],['log']
Testability,input test file. Original comment by: lleell00,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794234:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794234,1,['test'],['test']
Testability,"int; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configuring done; -- Generating done; -- Build files have been written to: /home/building/science/openbabel-2.4.1/build. If it's relevant, there is no ""FindWxWidgets.cmake"" in the modules directory:. > ls openbabel-2.4.1/cmake/modules/; FindCairo.cmake FindEigen3.cmake MacroEnsureVersion.cmake; FindEigen2.cmake FindInchi.cmake UsePythonTest.cmake",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1831,Test,Test,1831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,6,['Test'],['Test']
Testability,ir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54225,test,test,54225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1200,test,testing,1200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['test'],['testing']
Testability,"is warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:13345,test,test,13345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testkekule']"
Testability,"is warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:10895,test,test,10895,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testunique']"
Testability,"it; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative dri dts dvd dvdr emboss encode exif fam firefox flac fortran gdbm gif glamor gpm gtk iconv ipv6 jpeg kde kipi kms kwallet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phono",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9621,log,logs,9621,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,3,"['log', 'sandbox']","['logs', 'sandbox']"
Testability,"itValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2x94_x94.sdf; [756](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:757); pdbmol not equal: Could only match 0 of 52 atoms (52); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4395,test,test,4395,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,3,['test'],['test']
Testability,ittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unitt,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1518,test,test,1518,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,ittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1592,test,test,1592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"k-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dnotifications%26email_token%3DAAR3Z7V4NMS3XHAQBSZZSWLQSZXGXA5CNFSM4I27UV4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDUAV6Q%23issuecomment-552078074&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=lOxC%2B1UXZU3nS5d60G0W8VwT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:1801,test,test,1801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['test'],['test']
Testability,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:3062,test,test,3062,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['test'],['test']
Testability,"l include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packaging 22.0; pandas 1.5.2; paramiko 2.12.0; Pillow 9.3.0; pip 22.3; pluggy 1.0.0; psutil 5.9.4; pycparser 2.21; PyGithub 1.57; PyJWT 2.6.0; PyLD 2.0.3; PyNaCl 1.5.0; pyparsing 3.0.9; pytest 7.2.0; python-dateutil 2.8.2; python3-openid 3.2.0; pytz 2022.6; PyYAML 6.0; qwikidata 0.4.2; rdkit-pypi 2022.9.2; requests 2.28.1; requests-cache 0.7.5; requests-oauthlib 1.3.1; scipy 1.9.3; scyjava 1.8.1; setuptools 65.6.3; six 1.16.0; sqlparse 0.4.3; tomli 2.0.1; url-normalize 1.4.3; urllib3 1.26.13; wheel 0.38.1; wrapt 1.14.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:5247,log,logs,5247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['log'],['logs']
Testability,l/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2913,test,test,2913,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"l/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed using `conda install -c openbabel openbabel`); Operating system and version: MacOS 10.12.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Expected SMILES string: `[Li]OC(=O)OCC[O+]1CCOC1=O`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->. Generated SMILES string: `[Li]OC(=O)OC[CH2].C1(=O)OCCO1`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. After copying the structure information into `structure.xyz`, the following code should reproduce the bug. ```; import pybel. mol = next(pybel.readfile('xyz', 'structure.xyz')); smiles = mol.write('smiles').split('\t')[0]; print(smiles); ```. XYZ file contents:; ```; 21; Energy: 46.5530552; Li -1.05918 -6.48375 3.03497; C -3.67179 -3.25569 4.73488; O -2.88169 -4.12988 5.05149; O -3.95901 -6.03517 3.39980; O -4.97821 -3.46526 4.48731; C -5.26948 -5.59870 3.34006; C -5.65864 -4.68124 4.51417; H -5.94439 -6.48245 3.31165; H -5.41690 -5.03354 2.39534; H -6.75045 -4.49118 4.40348; H -5.51590 -5.18271 5.49492; C -3.47339 -6.91364 4.31571; O -2.16776 -7.23753 4.29134; O -3.32406 -1.96706 4.65992; O -4.20346 -7.42376 5.15235; C -4.43330 -1.22706 4.32170; C -5.58838 -2.24603 4.27319; H -4.26286 -0.76996 3.32316; H",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1808:1311,test,test,1311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1808,1,['test'],['test']
Testability,"l/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: ``; Linux mscoc7 5.15.0-58-generic #64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux ; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; ``. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No failed tests. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ```; The following tests FAILED:; 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed); Errors while running CTest; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `tar -xvf openbabel-3.1.1-source.tar.bz2; cd openbabel-3.1.1; mkdir build; cd build/; cmake ..; make -j16; make test; ctest --rerun-failed --output-on-failure`. Full output attached. The `test_rotor` failure sound particularly serious since I want to use the `--gen3D` function. [mscoc7_ob311_failed_tests.txt](https://github.com/openbabel/openbabel/files/10810027/mscoc7_ob311_failed_tests.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2573:1151,test,tests,1151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2573,3,['test'],"['test', 'tests']"
Testability,lWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTA,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1813,test,test,1813,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"lain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file './marvinjs_He_v3000.mol.prb'; The command line used:; ""./inchi-1 ./marvinjs_He_v3000.mol""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. End of file detected after structure #1. ; Finished processing 1 structure: 0 errors, processing time 0:00:00.00; $ cat ./marvinjs_He_v3000.mol.txt ; * Input_File: ""./marvinjs_He_v3000.mol""; Structure: 1; InChI=1S/He; AuxInfo=1/0/N:1/rA:1nHe/rB:/rC:.25,2.375,0;; $ ; $ obabel ./marvinjs_He_v3000.mol -oinchi; InChI=1S/He; 1 molecule converted; ```. The observations are collected with InChI version 1.07.1 published by August 21 ([source](https://github.com/IUPAC-InChI/InChI/releases)), and OpenBabel version 3.1.1/Sep 4 2024 as provided by Linux Debian 13/trixie.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:2711,log,log,2711,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,2,['log'],['log']
Testability,"ld/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:22744,test,test,22744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testexample']"
Testability,ld/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3; -DRUN_SWIG=ON -DBOOST_ROOT=/usr/include/boost169 -DBOOST_LIBRARYDIR=/lib64/boost169/; ```; Not sure if that would make a difference,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1971,test,test,1971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,8,"['Test', 'test']","['Test', 'test']"
Testability,"lds as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version:Debian Buster, glibc ver. 2.28(most recent for Debian), gcc 8.3.0, Boost 1.76.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:1592,test,test,1592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"le://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2804,log,log,2804,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability,les_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1892,Test,Test,1892,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961:247,Test,Test,247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961,3,"['Test', 'test']","['Test', 'tested']"
Testability,"libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:17648,test,test,17648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > );",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:20402,test,test,20402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testexample']"
Testability,"link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2226,test,test,2226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52284,test,test,52284,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or extern",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2157,log,log,2157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,logP contrib per heavy atom,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74:0,log,logP,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74,1,['log'],['logP']
Testability,"ls. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:3199,test,test,3199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbabel']"
Testability,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:11569,test,test,11569,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testkekule']"
Testability,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:9408,test,test,9408,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testunique']"
Testability,"m during working the developmental code on March 1st. I follow the instruction of the CMake (http://openbabel.org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ...........",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1018,Test,Test,1018,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386:1494,test,test,1494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386,5,['test'],['test']
Testability,make stdout writes dependent on verbose flag that allow to turn off logs completely,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2477:68,log,logs,68,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2477,1,['log'],['logs']
Testability,make test fails on some tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044,2,['test'],"['test', 'tests']"
Testability,"make test fails, and can't use pybel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,1,['test'],['test']
Testability,"master is not generating correct atom types when outputting pdbqt files. This is because the pdbqt writer works on copies (possibly fragments) of the original molecule. The copies have their perception flags reset. By default, nonpolar hydrogens are removed when outputting pdbqt files. When the aromaticity flags are recomputed on the molecule with the deleted hydrogens, atoms that should be aromatic are not marked as such. Note that this is a regression from 2.4. My suspicion is that there is a difference in how the new aromatic typer is dealing with molecules with deleted hydrogens. I would appreciate it if @baoilleach could take a look. I think this fix is good in addition to any fixes that may be made to the aromatic typer as it will prevent an unnecessary recomputation of aromaticity, but would appreciate feedback. A test case is provided (without the fix the phenyl ring of the tyrosine is not marked aromatic).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790:833,test,test,833,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790,1,['test'],['test']
Testability,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefine,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17756,test,test,17756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18021,test,test,18021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ment. Same issue here, I have also tried manually specifying the locations by downloading the python part of the repository and running:; python setup.py build_ext -I ""C:\Program Files\OpenBabel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old version and did not fix the problems I was having with the whl I obtained from https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel (s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:1093,test,testenv,1093,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,2,['test'],['testenv']
Testability,"miley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I added the hydroxy groups, but it managed. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)C(C(CC(C)C)CC(C)O)C(CC(C)C)CC(C)C. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)\[C@H\](C(CC(C)C)CC(C)O)C(CC(C)C)CC(C)C. Cheers. ***EDIT; I forgot to mention, that I didn't have time to test --> Parser::disableExceptions(); so I don't know if that would mean you could pass the desired/specified stereochemistry to obabel without removing the stereolabel and then generate the coordinates correctly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:2073,test,testing,2073,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,2,['test'],"['test', 'testing']"
Testability,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2097:1082,Assert,AssertionError,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097,9,"['Assert', 'assert', 'test']","['AssertionError', 'assert', 'test']"
Testability,n2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1077,test,test,1077,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,nTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3470,Log,Log,3470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"nbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; ```; # Name Version Build Channel; openbabel 3.1.1 py310h956b46e_7 conda-forge; ```; Operating system and version:; ```; Distributor ID: ManjaroLinux; Description: Manjaro Linux; Release: 23.0.0; Codename: Uranos; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I was trying to recover bond orders and atom specific formal charges from a XYZ file of a molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It seems only the bond orders are recovered but the charges on the NH3+ and COO- are not written to the output SDF file.; Wondering if there are other functions I need to call for this.; I do not wish to add or remove hydrogen atoms as the molecule should not be modified in any way. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```python; from openbabel import pybel. mol = next(pybel.readfile(format=""xyz"", filename=""structure.xyz"")) # readfile returns an iterator; mol.OBMol.ConnectTheDots() # perceives bonding between atoms; mol.OBMol.PerceiveBondOrders(). mol.write(format=""sdf"", filename=""structure.sdf"", overwrite=True); ```. [structures.zip](https://github.com/openbabel/openbabel/files/12459604/structures.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623:1655,test,test,1655,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623,1,['test'],['test']
Testability,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2268:2038,test,test,2038,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268,1,['test'],['test']
Testability,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1346,log,log,1346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,2,['log'],['log']
Testability,"nclude/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018:2727,log,logs,2727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018,1,['log'],['logs']
Testability,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2192,Test,Test,2192,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,['Test'],['Test']
Testability,ng CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53721,test,test,53721,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ng CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50825,test,test,50825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ng places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1155,test,test,1155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,niqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1801,Test,Test,1801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,nittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1444,test,test,1444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"nt 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-beh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12434,test,test,12434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ntation, not all elements are covered yet. To quote:; > ; > > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter.; > ; > source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html; > ; > Let's say I generate a .gro about diethyl ether by; > ; > ```shell; > $ obabel -:""CCOCC"" -h --gen3d -ogro; > ; > 15; > 1UNL C 1 0.095 -0.007 0.005; > 1UNL C 2 0.247 -0.010 0.002; > 1UNL O 3 0.297 0.089 0.093; > 1UNL C 4 0.439 0.091 0.094; > 1UNL C 5 0.486 0.197 0.191; > 1UNL H 6 0.054 -0.082 -0.063; > 1UNL H 7 0.058 0.092 -0.024; > 1UNL H 8 0.058 -0.027 0.106; > 1UNL H 9 0.283 0.012 -0.099; > 1UNL H 10 0.283 -0.109 0.033; > 1UNL H 11 0.477 0.113 -0.006; > 1UNL H 12 0.477 -0.007 0.126; > 1UNL H 13 0.448 0.296 0.162; > 1UNL H 14 0.595 0.201 0.195; > 1UNL H 15 0.448 0.177 0.292; > 0.00000 0.00000 0.00000; > 1 molecule converted; > ```; > ; > As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields; > ; > ```shell; > $ obabel ether_modified.gro -oxyz; > ==============================; > *** Open Babel Error in Convert; > Convert failed with an exception; > 0 molecules converted; > ```; > ; > equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24).; > ; > [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt) [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt). Thank you~ I understand. May I ask if it will be fixed in the future?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070:1709,test,testing,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070,1,['test'],['testing']
Testability,"o a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:1432,test,test,1432,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['test'],['test']
Testability,"o openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.5.0 (2017-XX-XX) (cloned from github.com); Operating system and version: Ubuntu 16.04.4 LTS; Running Anaconda python 3.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Openbabel imports fine, but Pybel returns a unicode error. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. compiled using:. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON . make & sudo make install all run ok. make test all tests run fine. Output from python below:. Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) ; [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> import pybel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 43, in <module>; descs = _getpluginnames(""descriptors""); File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in _getpluginnames; return [x.split()[0] for x in plugins]; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in <listcomp>; return [x.split()[0] for x in plugins]; UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1805:1588,test,test,1588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1805,2,['test'],"['test', 'tests']"
Testability,"o.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shell; mkdir build; cd build; CC=clang CXX=clang++ cmake -DBOOST_ROOT=path/to/boost -DEIGEN3_INCLUDE_DIR=path/to/eigen/include/eigen3 -DPYTHON_BINDINGS=YES -DRUN_SWIG=YES -DWITH_COORDGEN=YES ..; make; ctest -V; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:25622,test,test,25622,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; Any help would be appreciated. Thanks in advance.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:55022,test,test,55022,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,11,['test'],['test']
Testability,"obabel has no problem creating a .fs file from a .sdf.gz file. However, the search will fail because the .fs file stored the record index in the uncompressed file, while the datastream.seekg() seeks to a position in the compressed file, and the code returns compressed text. As a result, the fastsearch results are essentially useless. What this patch does is:; 1. print a warning message during index creation if the input file is gzip compressed; 2. log an error message and stop during search if the datafile is gzip compressed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1733:452,log,log,452,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1733,1,['log'],['log']
Testability,"obabel test_input.sdf -O test.sdf --append ""cansmi"" # only works with a single molecule",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1603:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1603,1,['test'],['test']
Testability,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:3806,test,test,3806,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,6,"['log', 'test']","['log', 'test']"
Testability,"obgrep reports SMARTS as illegal, but it is actually valid SMARTS:. am@box:~$ obgrep ""F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O"" test.smi; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O; ^. Reported by: maunza",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/959:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/959,1,['test'],['test']
Testability,obgui doesn't crash for me anymore when I try to reproduce the error in #1555. nwchemformat.so doesn't crash my test program anymore either,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1556#issuecomment-290098383:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1556#issuecomment-290098383,1,['test'],['test']
Testability,obprop needs to add non-explicit hydrogens before calculation. see results below. user$ /Downloads/openbabel-2.0.0b2-20050701/tools/obprop /Users/; user/Desktop/test.smi ; name stilbene; mol_weight 168.15; num_rings 2; $$$$; name trans Stilbene; mol_weight 168.15; num_rings 2; $$$$; name cis Stilbene; mol_weight 168.15; num_rings 2; $$$$; name benzene; mol_weight 72.0642; num_rings 1; $$$$. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/455:161,test,test,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/455,1,['test'],['test']
Testability,obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX ob,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50899,test,test,50899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ocs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. This issue is particularly important on multi-user machines as well as for packaging the software for Microsoft SCCM/Intune. This does not pose an issue only in the scenario of single account machines where the account used for regular work is an administrator. ## Step",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:2002,log,log,2002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,2,['log'],['log']
Testability,"ode replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with correct carboxylic atom typing: O.co2 """"""; print ""Atoms count (second pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); </code></pre>; I've tried to dig into the problem a bit more, using the patterns from the phmodel.txt, and they seem to fail to identify the 'COO-' pattern in the mol2 files generated with the previous code.; <pre><code>; # pH model test; import pybel; from sys import argv; """"""patterns from phmodel.txt""""""; pre = 'O=C[OD1-0:1]'; post = 'O=C[O-:1]'; transform = pybel.ob.OBChemTsfm(); success = transform.Init(pre, post); mol = pybel.readfile('mol2', argv[1]).next(); smart = pybel.Smarts(pre); print ""PATTERN FOUND"", smart.findall(mol); transform.Apply(mol.OBMol); mol.write('mol2', 'obpython.mol2', overwrite=1); </code></pre>. Original comment by: @sforli",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:2449,test,test,2449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,2,['test'],['test']
Testability,"oduce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20400,test,test,20400,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"oject: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ========== Build: 1 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. Can the warnings be safely ignored?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:2174,log,log,2174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['log'],['log']
Testability,ok I messed the python binding tests...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1887#issuecomment-420736651:31,test,tests,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1887#issuecomment-420736651,1,['test'],['tests']
Testability,"old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROC",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:3810,test,test,3810,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbabel']"
Testability,"om.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2072,log,log,2072,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,1,['log'],['log']
Testability,"on; Open Babel version: 3.1.0; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Aromatic rings of protein complex molecule correctly identified. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I used ob.OBConversion().ReadFile() to read PDB file (mmCIF format) into mol.; All rings returned by mol.GetSSSR() are labeled as ""non-aromatic"", which is incorrect.; The same procedure on older PDB file format produced the correct results, i.e. some of the rings are labeled as ""aromatic"". So far I have been able to trace the discrepancy to OBAtom.GetImplicitHCount(), so there was probably a bug in the PDB file reading code that didn't correct update the implicit H count. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The following is python code to reproduce this error, biopython is used to retrieve PDB file, which can be done manually. ```; from Bio.PDB import PDBList; from openbabel import openbabel as ob; pdbl = PDBList(); pdb_fname_old = pdbl.retrieve_pdb_file('3BBT', file_format='pdb'); pdb_fname_new = pdbl.retrieve_pdb_file('3BBT') ; ```; #### Build mol object from PDB file of older format. ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('PDB'); mol1 = ob.OBMol(); ob_conv.ReadFile(mol1, pdb_fname_old ); ```; #### Build mol object from PDB file of newer format; ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('mmCIF'); mol2 = ob.OBMol(); ob_conv.ReadFile(mol2, pdb_fname_new ); ```; #### The following results for the two mol object differ, where the first gives correct results, the second returns False ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2440:1774,test,test,1774,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440,1,['test'],['test']
Testability,"openbabel provides working functionality to perform substructure searches using SMARTS. This works well on SMILES files. . openbabel xxx.smi -ocan -s a1aaaa1. This SMARTS query retrieves all molecular structures with aromatic 5-membered ring systems from xxx.smi. Further, openbabel provides working functionality to generate fingerprint indexes to speed up substructure searching by candidate preselection. . openbabel xxx.smi -ofs . This generates the index file xxx.fs. Now, the index file can be used to search quickly:. openbabel xxx.fs -ocan -s C1CCCC1. This SMARTS query retrieves all molecular structures containing a cyclopentane moiety correctly. Apparently, this works. But C1CCCC1 does not only denote a valid SMARTS but also a valid SMILES! . Using a SMARTS that does NOT denote a valid SMILES like the first example (""a"" stands for any aromatic atom of N,C,O,S,Se) does not work and produces an error-message:. openbabel xxx.fs -ocan -s a1aaaa1. gives:. ==============================; *** Open Babel Error in ObtainTarget; Filename of pattern molecule in -S option must have an extension; 0 molecules converted; 1 errors 4 audit log messages . src/formats/fastsearchformat.cpp is suspect to me.; The message is produced in line 488 but a few lines before:. txt=p;; stringstream smarts(txt, stringstream::in);		; OBConversion Convsm(&smarts);; if(!Convsm.SetInFormat(""smi"")) return false;; Convsm.Read(&patternMol);. patternMol.Empty() is true for real SMARTS and false for SMILES. Reported by: vitalingo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819:1144,log,log,1144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819,1,['log'],['log']
Testability,"or reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Te",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1080,Test,Test,1080,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,or: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16955,test,test,16955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1126,Test,Test,1126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"orm of C6H6. The result will be a neuter, uncharged molecule. I speculate this is behind the switch `Add hydrogens (make explicit)` if engaging the GUI of OpenBabel. The toggle `-p` adds protons to a structure deemed suitable for a certain pH value. Note: If not specified further, by an explicit number, `p` corresponds to a pH of 7.4 ([reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=protonate), search section «If you want to add hydrogens appropriate for pH7.4 when doing the conversion the command would be:»). Assuming the basicity of the cyclic amine in your ligand to be somewhere in the range between triethylamine and morpholine, I would be fine if `-p` protonates the amine to yield an ammonium. However, check your input structure about the terminal sulfonic acid. It can't be a group attached to an alkyl chain _and simultaneously_ thrice protonated. What is the origin of your .pdb? With all three S-O distances equal to 1.47 Angstrom, the picture is _more likely_ you started with a deprotonated molecule in first place, than R-SO3H which formally distinguishes between two instances of S=O [shorter bond length between S and O), and one of S-O-H [longer bond length between S and O]. (Compare with the example about p-TsOH, attached below.). Addition: OpenBabel is _one_ popular engine to perform protonations. You may benchmark it in comparison with others in terms of accuracy and rate of processing, e.g. [Dimorphite](https://durrantlab.pitt.edu/dimorphite-dl/), equally from Pitsburgh, which may be used to screen multiple sites potentially subject to protonation in an adjustable range of pH value. If one submits the (still questionable) SMILES string about the above ligand as `OCCN1CCN(CCS(O)(O)O)CC1`, dimorphite-dl suggests the three species ; `OCCN1CC[NH+](CCS(O)(O)O)CC1`	; `OCC[NH+]1CC[NH+](CCS(O)(O)O)CC1`; `OCC[NH+]1CCN(CCS(O)(O)O)CC1`. [test_pTsOH.zip](https://github.com/openbabel/openbabel/files/6074985/test_pTsOH.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896:1684,benchmark,benchmark,1684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896,1,['benchmark'],['benchmark']
Testability,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1087,Test,Test,1087,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,2,"['Test', 'test']","['Test', 'test']"
Testability,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2062:1345,test,test,1345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062,1,['test'],['test']
Testability,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2313:2128,test,test,2128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313,1,['test'],['test']
Testability,"ou added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1104,test,test,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"ou see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElement",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1529,test,test,1529,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2016:1548,test,test,1548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016,4,['test'],['test']
Testability,"overloaded ""="" for OBAtom & OBMol don't test auto assign.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/865:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/865,1,['test'],['test']
Testability,"overloaded operators ""="" for OBAtom and ; OBMol don't test auto-assignation. Index: src/atom.cpp; ===================================================================; --- src/atom.cpp	(revision 2930); +++ src/atom.cpp	(working copy); @@ -149,8 +149,11 @@; //copy atom information; //bond info is not copied here as ptrs may be invalid; {; - _idx = src.GetIdx();; - Duplicate(&src);; + if( this != &src ); + {; + _idx = src.GetIdx();; + Duplicate(&src);; + }; return(*this);; }. Index: src/mol.cpp; ===================================================================; --- src/mol.cpp	(revision 2930); +++ src/mol.cpp	(working copy); @@ -1160,6 +1160,11 @@; //All OBGenericData incl OBRotameterList is copied, CM 2006; //OBChiralData for all atoms copied, TV 2008; {; + if( this == &source ); + {; + return *this;; + }; +; OBMol &src = (OBMol &)source;; vector<OBAtom*>::iterator i;; vector<OBBond*>::iterator j;. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/865:54,test,test,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/865,1,['test'],['test']
Testability,"p:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_impl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5289,test,test,5289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"p; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 5 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3756,log,log,3756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,2,['log'],['log']
Testability,"pen Babel version: 3.1.1 (tested using the x64 installer); Operating system and version: Windows 11 23H2 (OS Build 22631.4037). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:1547,log,logged,1547,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['log'],['logged']
Testability,penBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3372,Log,Log,3372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"penbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/n00002621/.local/share/virtualenvs/WFChemCookbook-hyZchOOL/include -I/opt/local/Library/Frameworks/Python.framework/Versions/3.10/include/python3.10 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; ; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:4690,test,test,4690,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['test'],['test']
Testability,"penbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1075,log,log,1075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['log'],['log']
Testability,"perl tests: Can't call method ""GetMass"" on an undefined value at t/data.t line 21.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:5,test,tests,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['tests']
Testability,"phsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_l",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5550,test,test,5550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"pip install openbabel. Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/; Collecting openbabel; Downloading openbabel-3.1.1.1.tar.gz (82 kB); |████████████████████████████████| 82 kB 1.0 MB/s ; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; ERROR: Command errored out with exit status 1: /usr/bin/python3 -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""'; __file__='""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-b91qplvd/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.8/openbabel Check the logs for full command output. if anyone can update openbabel pypi (https://pypi.org/project/openbabel/) in python it will be helpful for us to do many things. Thanks in advance :)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2556:1292,log,logs,1292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2556,1,['log'],['logs']
Testability,"please excuse me, the two SMILES 1.) and 2.) are wrong.. - but the attached file 'test.smi' contains the correct SMILES. Original comment by: upgrayedd7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1249#issuecomment-281803446:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249#issuecomment-281803446,1,['test'],['test']
Testability,"possible, I recommend the use of of the `.sdf` format for the intermediate step because (in contrast to e.g., `.xyz`) it equally contains what MDL coined as _connection table_ about which (and how) atoms are bound. A) The more verbose approach consists of three distinct instructions to the CLI. This documents each step by a permanent record.; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf -O 2D.sdf`; `obabel -isdf 2D.sdf --gen3d -osdf -O 3D.sdf`; And, because you want to continue with the `.mol2` format; `obabel -isdf 3D.sdf -omol2 -O 3D.mol2`. B) The more condensed approach uses the intermediate output of one of the steps mentioned above as input for the subsequent step. Thus, you start with the SMILES string to form the `.mol2` files without creation of intermediate permanent files. Call OpenBabel with one line of instruction in the pattern of; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf | obabel -isdf --gen3d -osdf | obabel -isdf -omol2 -O 3D_relayed.mol2`. The comparison of the two approaches reveals that coordinates in the `.mol2` files written differ from each other. As shown, e.g. by vimdiff ([an introduction](https://www.tutorialspoint.com/vim/vim_diff.htm), but you may use a difference viewer of your preference), these differences however _do not_ affect the connection tables in the later part of the `.mol2` files:. ![diff_view](https://user-images.githubusercontent.com/19709084/114673269-878cbc00-9cf5-11eb-8cef-6c68f1e53f15.png). Depending on the intended use of the `.mol2`, these differences may not be relevant to you.*) Or, you use them anyway as a _starting point_ for further minimization with one of the force field options in OpenBabel or a third party program. *) Simplified into the `.xyz` format, you may quantify the difference of the geometries, e.g. by a [Kabsch test](https://github.com/charnley/rmsd). [test_run.zip](https://github.com/openbabel/openbabel/files/6309095/test_run.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344:2109,test,test,2109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344,1,['test'],['test']
Testability,ppc64 fedora-devel build log (gzipped). Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780557:25,log,log,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780557,1,['log'],['log']
Testability,pple.CoreFoundation 	0x00007fffac25b514 CFRunLoopRunSpecific + 420; 5 com.apple.AppKit 	0x00007fffa9f3b7d4 _NSEventThread + 205; 6 libsystem_pthread.dylib 	0x00007fffc16d0aab _pthread_body + 180; 7 libsystem_pthread.dylib 	0x00007fffc16d09f7 _pthread_start + 286; 8 libsystem_pthread.dylib 	0x00007fffc16d0221 thread_start + 13. Thread 2:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d0622 _pthread_wqthread + 1023; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 3:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 4:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 5:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 6:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 0 crashed with X86 Thread State (64-bit):; rax: 0xc000000000000000 rbx: 0x00007fc173231660 rcx: 0x00007fc171b36700 rdx: 0x00007fc171bbf810; rdi: 0x00007fc173231660 rsi: 0x00007fff5c66b0a8 rbp: 0x00007fff5c66b160 rsp: 0x00007fff5c66b0e0; r8: 0x0000000000000000 r9: 0x00000000ffffffff r10: 0x0000000000000001 r11: 0x0000000000000001; r12: 0x0000000000000001 r13: 0x00007fc1730ca210 r14: 0x0000000000000003 r15: 0x0000000000000000; rip: 0x000000010367922e rfl: 0x0000000000010206 cr2: 0x0000000103676d48; ; Logical CPU: 0; Error Code: 0x00000000; Trap Number: 13; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:7630,Log,Logical,7630,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,1,['Log'],['Logical']
Testability,probe.dir/obprobe.o; [ 85%] Linking CXX executable ../bin/obrotate; [ 85%] Built target obrotate; Scanning dependencies of target obsym; [ 86%] Building CXX object tools/CMakeFiles/obsym.dir/obsym.o; [ 86%] Linking CXX executable ../bin/obprobe; [ 86%] Built target obprobe; Scanning dependencies of target obminimize; [ 86%] Building CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for targe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50468,test,test,50468,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54156,test,test,54156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"pybel reports it can output copyformat, but it seemingly cannot. In [1]: import pybel. In [2]: pybel.outformats['copy']; Out[2]: 'Copy raw text'. In [3]: mol = pybel.readfile(""sdf"", ""Components-pub_less_than_300MW.sdf.gz"").next(). In [4]: mol.write('copy','test.sdf'); Not a valid output format. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/899](https://sourceforge.net/p/openbabel/bugs/899)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1279:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1279,1,['test'],['test']
Testability,pytest_babel test fails on clean build,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,1,['test'],['test']
Testability,"python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4163,test,test,4163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,pyttest_babel test passes on clean build,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2663:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663,1,['test'],['test']
Testability,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2347:1713,test,tested,1713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347,3,['test'],"['test', 'tested', 'tests']"
Testability,"r is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.5.0 (2017-XX-XX) (cloned from github.com); Operating system and version: Ubuntu 16.04.4 LTS; Running Anaconda python 3.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Openbabel imports fine, but Pybel returns a unicode error. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. compiled using:. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON . make & sudo make install all run ok. make test all tests run fine. Output from python below:. Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) ; [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> import pybel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 43, in <module>; descs = _getpluginnames(""descriptors""); File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in _getpluginnames; return [x.split()[0] for x in plugins]; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in <listcomp>; return [x.split()[0] for x in plug",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1805:1379,test,test,1379,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1805,1,['test'],['test']
Testability,"r is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(conda-forge pre-compiled and self-compiled version); Operating system and version:Manjaro 5.15.12-1(64-bits). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Here are 2 similar example command lines:; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```; Expected output are:; ```txt; CC CC; CC 4C; CC CCC; 3 molecules converted; CO oh; CO aoh; CO oaoh; CO ohaoh; 4 molecules converted; ```; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actual output are:; ```txt; CC 4C; 1 molecule converted; CO oh; CO aoh; CO oaoh; 3 molecules converted; ```; In general,if some target strings start with the same string as the one after the conditions' `*`,these targets will not be conversed,regardless of the existence of quotes around strings.This behavior seems to be a bug. ; The string comparsion with a sufixed `*`,however,works correctly.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2444:2036,test,test,2036,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444,1,['test'],['test']
Testability,r.cpp: AppleDouble encoded Macintosh file; ./data/._aromatic.txt: AppleDouble encoded Macintosh file; ./data/._types.txt: AppleDouble encoded Macintosh file; ./data/._psa.txt: AppleDouble encoded Macintosh file; ./data/._fragments.txt: AppleDouble encoded Macintosh file; ./data/._logp.txt: AppleDouble encoded Macintosh file; ./data/._space-groups.txt: AppleDouble encoded Macintosh file; ./data/._isotope-small.txt: AppleDouble encoded Macintosh file; ./data/._element.txt: AppleDouble encoded Macintosh file; ./data/._SMARTS_InteLigand.txt: AppleDouble encoded Macintosh file; ./data/._isotope.txt: AppleDouble encoded Macintosh file; ./data/._UFF.prm: AppleDouble encoded Macintosh file; ./data/._resdata.txt: AppleDouble encoded Macintosh file; ./data/._torlib.txt: AppleDouble encoded Macintosh file; ./data/._ringtyp.txt: AppleDouble encoded Macintosh file; ./data/._bondtyp.txt: AppleDouble encoded Macintosh file; ./data/._patterns.txt: AppleDouble encoded Macintosh file; ./scripts/._openbabel-java.i: AppleDouble encoded Macintosh file; ./scripts/perl/._Makefile.PL: AppleDouble encoded Macintosh file; ./scripts/._openbabel-perl.i: AppleDouble encoded Macintosh file; ./scripts/._openbabel-ruby.i: AppleDouble encoded Macintosh file; ./._INSTALL: AppleDouble encoded Macintosh file; ./include/openbabel/math/._transform3d.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._matrix3x3.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._vector3.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._spacegroup.h: AppleDouble encoded Macintosh file; ./include/openbabel/._mol.h: AppleDouble encoded Macintosh file; ./include/openbabel/._obiter.h: AppleDouble encoded Macintosh file; ./test/._aromatic.pl: AppleDouble encoded Macintosh file; ./test/files/._aromatics.smi: AppleDouble encoded Macintosh file; ./tools/._babel.cpp: AppleDouble encoded Macintosh file; ./doc/._roundtrip.1: AppleDouble encoded Macintosh file. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259:2588,test,test,2588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259,2,['test'],['test']
Testability,raphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3173,test,test,3173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"raw extra hydrogens. I'm quite sure these hydrogens are not supposed to be drawn. In the attached image, the ""CH"" on carbon monoxide is not numbered; I think this means it's not explicitly represented in the OBMol object, but the SVG writer decides to draw it anyway. In the SVG file, the text comes out as ""CH"" in a single element. I've tried almost all combinations of add/delete, implicit/explicit hydrogens in the input and output options. If I set {""C"":True} in write(), it won't draw the ""CH"" on carbon monoxide - in fact it doesn't draw any atoms to the right of the triple bond, but I do want it to draw ""C"". I could just edit the .svg file manually, but that's probably not the best solution. Generally speaking, all I want is for OpenBabel to draw exactly the same atoms that I gave it! :). In [1]: import pybel; In [2]: mol = pybel.readfile('can', 'can.txt', opt={""h"":True}) ; In [3]: mol.next().write(""svg"", ""can.svg"", opt={""a"":True,""P"":600,""i"":True}, overwrite=True). Thanks,. - Lee-Ping; ```. ```; The H atoms are drawn intentionally. See the docs for the 'a' option:; a draw all carbon atoms; So propane would display as H3C-CH2-CH3. What you want is an additional option that draws the C's but not the H's. I don't have time now to do development, but it should be pretty easy to see where option 'a' is in the C++ code and add a new option to do as you suggest. Perhaps you, or someone else reading this, would like to try this. - Noel; ```. ```; Hi there,. I think I got it to work! I added a “capital X” option to the SVG output format, which sets the “allExplicit” option in OBDepict. This option makes OBDepict ignore the implicit hydrogen count on atoms, so it only draws atoms that explicitly there. Examples attached. I’ve created a pull request and I’ll do a number of tests throughout the day. Please take a look and let me know what you think. - Lee-Ping; ```. ![products](https://cloud.githubusercontent.com/assets/1441560/4423294/c3703532-4593-11e4-83b8-2ce92b052904.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/93#issuecomment-56979153:1970,test,tests,1970,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/93#issuecomment-56979153,1,['test'],['tests']
Testability,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269:1797,test,test,1797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269,1,['test'],['test']
Testability,"re request. ## Environment Information; Open Babel version: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://gi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2438:1738,test,test,1738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438,1,['test'],['test']
Testability,regression tests fail on non-x86 architectures,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,1,['test'],['tests']
Testability,"requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: e7aa0942f6c7733950dcf49e3c8e7f1b56feeea5; Operating system and version: Debian 12.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obconformer generates the most stable conformation of a cyclic compond, e.g. cyclohexane chair; methylcyclohexane chair, where Me is equatorial. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obconformer gives e.g. - cyclohexane: boat → boat, not chair; - methylcyclohexane: axial chair →axial chair, not equatorial chair. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; <molecule id=""cyclohexane-boat"" xmlns=""http://www.xml-cml.org/schema"" xmlns:cml=""http://www.xml-cml.org/dict/cml"" xmlns:units=""http://www.xml-cml.org/units/units"" xmlns:xsd=""http://www.w3c.org/2001/XMLSchema"" xmlns:iupac=""http://www.iupac.org"">; <atomArray>; <atom id=""a1"" elementType=""C"" x3=""1.36396"" y3=""0"" z3=""0.654084"" />; <atom id=""a2"" elementType=""C"" x3=""0.787262"" y3=""-1.26551"" z3=""0"" />; <atom id=""a3"" elementType=""C"" x3=""-0.770966"" y3=""-1.2704"" z3=""0"" />; <atom id=""a4"" elementType=""C"" x3=""-1.35676"" y3=""0"" z3=""0.63574"" />; <atom id=""a5"" elementType=""C"" x3=""-0.769195"" y3=""1.27076"" z3=""0"" />; <atom id=""a6"" elementType=""C"" x3=""0.789101"" y3=""1.26544"" z3=""0"" />; <atom id=""a7"" elementType=""H"" x3=""1.13351"" y3=""0"" z3=""1.7363"" />; <atom id=""a8"" elementType=""H"" x3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2633:1412,test,test,1412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2633,1,['test'],['test']
Testability,"revision 2698, Visual Studio 2008. this is still causing problems:. fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp'. log file attached. should it be taken up on the boost list?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787:137,log,log,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787,1,['log'],['log']
Testability,"rmats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenChemLib`](https://github.com/Actelion/openchemlib) project on GitHub. . [test.dwar.txt](https://github.com/openbabel/openbabel/files/5671704/test.dwar.txt); [idcodes_examples.txt](https://github.com/openbabel/openbabel/files/5671707/idcodes_examples.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:2534,test,tested,2534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,3,['test'],"['test', 'tested']"
Testability,"rning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:13429,test,test,13429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testkekule']"
Testability,"rning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:10964,test,test,10964,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testunique']"
Testability,"ror(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3292,log,log,3292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15620,test,test,15620,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16692,test,test,16692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:2576,log,log,2576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,6,"['log', 'test']","['log', 'test', 'testbindings', 'testsym']"
Testability,"rsion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz); ```. When inputting a radical`xyz` (taking [CH2]C as an example), the generated `obmol` should have an atom with spin multiplicity > 1. Therefore when running the following script,; ```; for obatom in ob.OBMolAtomIter(obmol):; print(obatom.GetSpinMultiplicity()); ```; We should see a 2 in the output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; In version 2.4.1, the behavior is as expected. But after upgrading from 2.4.1 to 3.1.0, I found that all atoms in the generated `obmol` have zero spin multiplicity (from `obatom.GetSpinMultiplicity()`), while the spin multiplicity for the molecule is still correct (from `obmol.GetTotalSpinMultiplicity()`). . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Some example XYZs for you to try:; ```; 4; [CH3]; C 0.005855 0.001990 0.281379; H 1.045523 -0.137365 -0.095125; H -0.625527 -0.822825 -0.092566; H -0.425852 0.958201 -0.093688. 7; [CH2]C; C 0.860801 -0.129576 -0.398801; C -0.613070 0.014747 -0.013112; H 1.239333 -0.933807 0.290165; H 1.359583 0.810233 -0.054703; H -0.881226 1.081339 -0.159005; H -0.785917 -0.222193 1.047743; H -1.179504 -0.620742 -0.712286; ```. And run; ```; from openbabel import openbabel as ob. obconversion = ob.OBConversion(); obconversion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz). print(f'Total Multplicity: {obmol.GetTotalSpinMultiplicity()}'); for obatom in ob.OBMolAtomIter(obmol):; print(f'Atom {obatom.GetAtomicNum()}: {obatom.GetSpinMultiplicity()}'); ```; What I got is; For [CH3]; ```; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2392:2015,test,test,2015,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2392,1,['test'],['test']
Testability,runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54879,test,test,54879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"s and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. Just for notification: recent maeparser change breaks compatibility (schrodinger/maeparser#62). - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 7684a772e6b60e6b37aa70ad05764d526ab9b00c; Operating system and version: Debian 10.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Build is successful. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Build fails. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ rm -rf external/maeparser-master; $ cmake -GNinja -Bbuild .; $ cmake --build build -- src/formats/CMakeFiles/maeformat.dir/maeformat.cpp.o; ../src/formats/maeformat.cpp: In member function ‘virtual bool OpenBabel::MAEFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; ../src/formats/maeformat.cpp:332:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(atom_block->getName(), atom_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::Indexe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2180:1398,test,test,1398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2180,1,['test'],['test']
Testability,s failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21:,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1712,Test,Test,1712,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"s for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.1 / Linux 5.19.0-32. ## Expected Behavior; Hi,; I am looking up the implementation of the improper torsions for GAFF in the file src/forcefields/forcefieldgaff.cpp (the set up is at lines 727-900) and I am a bit puzzled. Maybe I got it wrong, but it seems to me that the implementation consider the second atom ""b"" as the central one, while this should be the third one according to AMBER (see for example [here](http://archive.ambermd.org/201307/0519.html) or [here](https://github.com/openbabel/openbabel/blob/2b211d6acfc0f9e1c6746a984da3483b729aa32b/src/forcefields/forcefieldgaff.cpp#L1160), or it is also evident looking at the parameter file where in lines like:. X -o -c -o 1.1 180.0 2.0 JCC,7,(1986),230; X -X -c -o 10.5 180.0 2.0 JCC,7,(1986),230. the wildcards are there to say that the first and second atom can be anything, but there is never a wildcard on the third one). I have this impression as in this part of the code different swaps are attempted (A-B-C-D -> A-B-D-C -> C-B-D-A), while these should correspond to different angles. I think it is a bug, but maybe I am missing something here...; Paolo; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2577:2199,test,test,2199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2577,1,['test'],['test']
Testability,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:854,Log,Log,854,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,16,['Log'],['Log']
Testability,"s). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be grea",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1417,test,test,1417,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,1,['test'],['test']
Testability,"s. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:12367,test,test,12367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testkekule']"
Testability,"s. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:10075,test,test,10075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testunique']"
Testability,s/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executabl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54803,test,test,54803,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"s://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.3.1; Operating system and version: Ubuntu 18.04.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Reading an `.xyz` file should not affect the behaviour of `ReadString`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Reading an `.xyz` file makes `ReadString` work. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; import openbabel as ob. xyz_string = (; ""3\n\nO -0.0343604951 0.9775395708 0.0076015923\n""; ""H 0.0647664923 0.0205721989 0.0015346341\n""; ""H 0.8717903737 1.3007924048 0.0006931336""; ); ```; Then, if I run this; ```; mol = ob.OBMol(); ob.OBConversion().ReadString(mol, xyz_string); ```; it returns `False`. If I run this; ```; with open(""temp.xyz"", ""w"") as f:; f.write(xyz_string). mol = ob.OBMol(); ob.OBConversion().ReadFile(mol, ""temp.xyz""); ```; it returns True. But what really puzzles me is that if I run; ```; ob_conversion = ob.OBConversion(). with open(""temp.xyz"", ""w"") as f:; f.write(xyz_string). mol = ob.OBMol(); ob_conversion.ReadFile(mol, ""temp.xyz""); ob_conversion.ReadString(mol, xyz_string); ```; then this returns `True` now!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1994:1356,test,test,1356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1994,1,['test'],['test']
Testability,"s?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1328,test,test,1328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['test'],['test']
Testability,"sage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***F",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1405,Test,Test,1405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"sdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In my conda env entering:. `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2147:1401,test,test,1401,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147,3,['test'],['test']
Testability,sdf test file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321,1,['test'],['test']
Testability,sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test ..................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3034,Test,Test,3034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,sed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2838,Test,Test,2838,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"sed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445:1085,test,tested,1085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445,1,['test'],['tested']
Testability,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1744,test,test,1744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,2,['test'],['test']
Testability,signAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2686,Log,Log,2686,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"smart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C424",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2237,log,log,2237,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability,"ssible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:2064,log,log,2064,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"ssues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1; Operating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:955,test,tests,955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['test'],['tests']
Testability,st; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1378,test,test,1378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"st_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:20096,test,test,20096,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:1832,log,log,1832,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,3,['log'],"['log', 'logged']"
Testability,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2544,test,tests,2544,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,5,['test'],"['test', 'tests']"
Testability,"sts.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1309,Test,Tests,1309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['Test'],['Tests']
Testability,"submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1023,test,test,1023,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['test'],['test']
Testability,"sue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:; > ; > `>Test ARFF` `ARFF`; > ; > produces the following SMILES output (either in the output pane or the GUI or in a file) :; > ; > `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`; > ; > However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:; > ; > `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`; > ; > which creates the correct peptide structure when pasted into Marvin Sketch.; > ; > Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:; > ; > `>Test AR` `AR`; > ; > produces the output:; > ; > `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`; > ; > which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :); > ; > ## Steps to Reproduce; > In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:; > ; > `>Test ARFF` `ARFF`; > ; > Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button. Thank you for your careful discovery.; And is it impossible to batch convert the format when the 'Display in firefox' option is enabled?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595:9065,Test,Test,9065,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595,2,['Test'],['Test']
Testability,"sues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel/commit/f495cc6bae6ddd8133a6e78c1655e69611ac8ca6)) ; Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The calculated chemical formula should always include explicitly specified hydrogen atoms. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; SMILES strings that contain hydrogen atoms in brackets together with another atom do not get included into the calculated molecular formula. Examples of such SMILES are provided in the `Steps to Reproduce` section. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command:; ```; echo '[OH2].[OH2]' | obabel -i smi -o can --append formula; ```; Expected output:; ```; O.O	H4O2; ```; Output:; ```; O.O	O2; ```; Additional notes:; * If the input SMILES `[OH2].[OH2]` is instead rewritten as `[H][O][H].[H][O][H]` the formula is correctly calculated as `H4O2`.; * The bug does not seem to manifest if there is only a single molecular entity in the SMILES, e.g. formula for `[OH2]` is correctly calculated as `H2O`. ## Related issues:. This issue might be related to issue #2363.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2624:1545,test,test,1545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624,1,['test'],['test']
Testability,"t ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3067,log,log,3067,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"t (14 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-record-djk7941x\install-record.txt' --single-version-externally-managed --compile --install-headers 'C:\Users\Liu.D.H\anaconda3\envs\common\Include\openbabel' Check the logs for full command output. (common) C:\Users\Liu.D.H>obabel -V; Open Babel 3.1.1 -- May 16 2020 -- 11:57:55. (common) C:\Users\Liu.D.H>; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:5247,log,logs,5247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,2,['log'],['logs']
Testability,"t 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 -",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3705,Test,Test,3705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,t test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54581,test,test,54581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,t/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51903,test,test,51903,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"t; ../../include\openbabel/reaction.h(92) : error C2334: unexpected token(s) preceding '{'; skipping apparent function body; ../../include\openbabel/reaction.h(56) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(56) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(59) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(59) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(62) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(65) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: '_ts' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: '_agent' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: 'sp' : undeclared identifier; ..\..\src\formats\chemdrawcdx.cpp(755) : warning C4065: switch statement contains 'default' but no 'case' labels; ..\..\src\formats\chemdrawcdx.cpp(1087) : warning C4065: switch statement contains 'default' but no 'case' labels; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 61 error(s), 17 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:11863,log,log,11863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['log'],['log']
Testability,"tVec::CountBits which; is now 50x faster. These improvements have knock on effects in; speeding up many of the library's slower operations, such as; OBMol::ContigFragList and OBBond::IsClosure. I would like to submit my changes to svn. they affect bitvec.cpp, .h; residue.cpp, .h and half a dozen minor changes to files that use; OBResidue->Begin/EndAtoms however, these files are not my code, so I; will submit or not as the developer team choose. > I don't believe that the bitvec changes would affect code that uses; > the; > API. No, this looks good. Would you consider helping out a little bit and; adding Doxygen documentation comments to bitvec.h and bitvec.cpp. It's; one of the classes we haven't finished in the 2.0 or 2.1 documentation; and would be greatly appreciated. The basic idea would be to add comments on what every single method in; bitvec.h does. Thanks! Improvements to bitvec will definitely help a range of; functions in the rest of the library.; -Geoff . I have tested the code on Linux gcc v4.1.2, Windows VC8 sp1, and Macintosh gcc v4.0.1 it; compiles and runs successfully with no warnings (-Wall / -W4 -analyze ). Here are the profile timing details:; Profiling; Top 10 Application Exclusive Times Before, After; OpenBabel::EvalAtomExpr 698.826936 690.121976; OpenBabel::OBBond::IsClosure(void) 279.642807 169.510756; OpenBabel::OBBitVec::NextBit(int) 258.648177 13.774759; OpenBabel::DetermineFRJ 232.795392 228.121234; OpenBabel::OBMol::ConnectTheDots(void) 228.119041 237.671913; OpenBabel::OBSSMatch::Match 183.537663 151.428923; OpenBabel::OBMol::ContigFragList 167.962881 68.488272; OpenBabel::OBResidue::GetSerialNum 144.409723 116.851829; OpenBabel::OBAtom::GetResidue(void) 141.741211 124.446245; OpenBabel::OBMol::NextAtom 135.275772 139.024312. OBBitVec, Elapsed Inclusive Time Before, After. OpenBabel::OBBitVec::CountBits(void) 331.374589 5.245531; OpenBabel::OBBitVec::NextBit(int) 289.776188 15.537802; OpenBabel::OBBitVec::operator|=3D(class 22.527727 22",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491:1356,test,tested,1356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491,1,['test'],['tested']
Testability,"tar.bz2 file, H2O_Std can be read via obabel -ig03 H2O_Std.log -ogau, however H2O_NoSym.log can not. Original comment by: dwondrousch",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801412:59,log,log,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801412,2,['log'],['log']
Testability,"tart 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3612,Test,Test,3612,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2900,log,logP,2900,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,2,"['Log', 'log']","['LogP', 'logP']"
Testability,"td::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : . decorated name length exceeded, name was truncated; with; [; . _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Com",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:10896,log,log,10896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"te and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Sid. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Depth=1 which is the query atom should always be singular ID. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; With larger depths (>3) the output contains multiple atoms at depth=1. I could not reproduce it for small molecules even with depth=8. . If the depth is small and we bump the loop break condition to `if current_depth > 5 * depth: break` the bug surfaces at smallest depth=1. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This occurs on larger molecules, although I noticed it on proteins. Here is [one](http://dude.docking.org/targets/xiap/receptor.pdb). I've also tried PDBbinds 10gs protein.; ```; import pybel. pybel.ob.OBIterWithDepth.__next__ = pybel.ob.OBIterWithDepth.next. mol = next(pybel.readfile('pdb', 'pdbbind/v2016/10gs/10gs_protein.pdb')); depth = 4. fp = []; for i in range(len(mol.atoms)):; envs = {}; for atom, current_depth in pybel.ob.OBMolAtomBFSIter(mol.OBMol, i + 1):; if current_depth > depth:; break; if current_depth not in envs:; envs[current_depth] = []; envs[current_depth].append(atom.GetIdx()); ; # catch bug; if current_depth == 1 and len(envs[current_depth]) > 1:; print(""BUG!!!"", i, atom.GetIdx()); #continue; ; fp.append(list(envs.values())); ```. > BUG!!! 982 1; >BUG!!! 985 1; >BUG!!! 1003 1; >BUG!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1639:1568,test,test,1568,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1639,1,['test'],['test']
Testability,"tead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. I (really a program I am using) am trying to delete a ligand from a ""receptor""-ligand complex PDB at the link below. Deleting all these atoms of the ligand screws up the residue names in the binding site because most PDB files do not have the `CONECT` for the actual residues of the protein. When I start deleting the atoms descending from atom number 5269 down to atom 5240 everything is okay however after I deleting `03` from Ribociclib atom number 5239, this messes up both residues 101 and 152 in the binding domain and some of the residues become ""UNK"" and the chain name disappears. There is a way around this I believe if I run an `obabel -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:2375,test,test,2375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['test'],['test']
Testability,"ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1609,Test,Test,1609,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"ters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9486,sandbox,sandbox,9486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['sandbox'],['sandbox']
Testability,test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/387:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/387,1,['test'],['test']
Testability,test coverage reports?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['test'],['test']
Testability,test file of 40k smiles. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393,1,['test'],['test']
Testability,test molecule. Original comment by: dhouston6,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800245:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800245,1,['test'],['test']
Testability,test(python): improvements,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2468:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468,1,['test'],['test']
Testability,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1093:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093,6,['test'],['test']
Testability,testdistgeom.py fails when run with Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217:0,test,testdistgeom,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217,1,['test'],['testdistgeom']
Testability,testing porgram. Original comment by: yongjinxu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/914#issuecomment-281795496:0,test,testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/914#issuecomment-281795496,1,['test'],['testing']
Testability,testing program. Original comment by: yongjinxu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/909#issuecomment-281795438:0,test,testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/909#issuecomment-281795438,1,['test'],['testing']
Testability,testobconv_writers test failure on arm64 and ppc64el,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['test'],['test']
Testability,ther upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2499,test,test,2499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049:258,log,log,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049,4,['log'],['log']
Testability,this failure happens with `-march=native` GCC compiler flags on Skylake and Broadwell CPUs.; all tests pass on Ivybridge.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-599190721:97,test,tests,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-599190721,1,['test'],['tests']
Testability,"this recently burnt me. a simple test:. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osdf --gen3d` # -OH, wrong. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osmi | obabel -ismi --gen3d -osdf` # -O[-], correct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185,2,['test'],['test']
Testability,"this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:5993,test,test,5993,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testsym']"
Testability,"thon /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13333,test,test,13333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"thon /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11041,test,test,11041,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,time error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ..,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4500,test,test,4500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,tion ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3078,Log,Log,3078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"to BigEndian and LowEndian conversions. Essentially, I read each block as a hexadecimal formatted Unsigned integer, do a BigEndian to LowEndian conversion and add the result to a list of `unsigned Integers`. After that loop I reverse the `list<uint>` to generate the `OpenBabel.VectorUInt`. However, while some positions of the generated fingerprint are correct, many positions (without any pattern I can recognize) do not match to a `OpenBabel.VectorUInt` which is directly generated from the identical structure using the OpenBabel.Net library. What am I doing wrong? Can somebody share some code on how to shuffle the bytes?. Thank you very much in advance!; Jan. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023:3297,test,test,3297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023,1,['test'],['test']
Testability,to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runn,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52138,test,test,52138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 20.04.2 LTS. ## Bug; I am trying to produce a mol2 file from xyz including valid atom and bond types. However, openbabel messes up the bonding and produces two Texas carbons. ## Steps to Reproduce; Input file:; ```; 49; 1aof_DHE_B_1; C -3.30400 13.00300 78.18000; C 4.35100 17.99000 81.82100; C 0.26300 15.84100 87.88100; C -5.69900 13.22500 82.98300; N -1.12200 14.81400 80.58000; C -3.25700 11.57200 78.46200; C 5.08200 16.75000 82.11900; C 1.07600 14.64500 87.58800; C -6.84800 13.57900 83.41600; N 1.18700 16.26100 81.70200; C -4.18400 10.68600 77.75900; C 2.35300 19.26300 80.93000; C -1.09500 17.86500 87.15300; C -8.12300 13.05200 82.94500; N -2.32400 14.65900 83.25100; C -3.32600 13.90000 81.15700; C 1.01300 15.26600 79.46800; C 1.91500 17.41700 83.67400; C -1.86000 15.10100 85.62500; C -0.40200 13.89400 77.06600; C -4.67100 13.79900 85.99600; O 3.50700 16.89300 79.16800; O 1.90300 17.99600 86.58800; C -2.29200 14.14200 80.26600; C 1.59200 16.07600 80.40900; C 1.01300 16.96800 84.59700; C -2.66200 14.62200 84.58400; O -4.92100 11.14600 76.87400; O 6.30900 16.81800 82.32700; O 0.73300 13.55100 88.07900; O -9.12500 13.19300 83.66500; C -2.21800 13.74500 78.90700; C 2.79000 16.91600 80.14500; C 1.07300 17.31300 86.03600; C -3.96800 14.03100 84.68800; O -4.19400 9.49400 78.07600; O 4.46200 15.66800 82.15600; O 2.08500 14.75900 86.87200; O -8.15600 12.47700 81.84100; C -0.98200 14.11500 78.42900; C 2.94800 17.83200 81.35500; C -0.11700 16.66200 86.70400; C -4.40300 13.76200 83.41200; C -0.28200 14.76100 79.49100; C 1.98800 17.15800 82.32400; C -0.73700 15.90600 85.52600; C -3.35400 14.09300 82.51700; N -0.05800 16.14700 84.36300; Fe -0.57700 15.48800 82.46900; ```; `obabel -ixyz -omol2 test.xyz -O test.mol2`; ![Capture](https://user-images.githubusercontent.com/7810340/141285342-c17ab1f6-ed93-47fe-a750-88acf4aabd65.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2427:1885,test,test,1885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427,2,['test'],['test']
Testability,"to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn};",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:3502,test,test,3502,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbabel']"
Testability,"to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""sm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2349:1482,test,test,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349,1,['test'],['test']
Testability,"tom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's branch *unstable* (or sid) for about 5 days; if accepted, they then percolate into *testing*.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:2427,test,testing,2427,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,2,['test'],['testing']
Testability,"tput); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:23361,test,test,23361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"treams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command li",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2345,test,test,2345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"tried to generate canonical smiles also? I was having issues with my allenes when converting smiles->to canonical smiles, so that's how I got here. test:; ==============================; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I adde",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:1186,test,testing,1186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['testing']
Testability,"ts/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:11674,test,test,11674,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ttps://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; For it to not crash. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel` crashes if you give it an exported cjson file from Avogadro2 or running Extensions>Open Babel>Optimize Geometry. The message is the following:; ```obabel: /usr/include/rapidjson/document.h:1053: rapidjson::GenericValue<Encoding, Allocator>& rapidjson::GenericValue<Encoding, Allocator>::operator[](const rapidjson::GenericValue<Encoding, SourceAllocator>&) [with SourceAllocator = rapidjson::MemoryPoolAllocator<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]: Assertion `false' failed.; [1] 26929 IOT instruction /home/laura/avo/openchemistry-build/prefix/bin/obabel -icjson -ocjson --noh```. ## Steps to Reproduce; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - press Ctrl+Alt+O. alternatively; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - save it as a cjson file like the one I attached; - run `$PREFIX/bin/obabel -icjson -ocjson --minimize --noh --log --ff UFF < e.cjson`. [e.cjson.txt](https://github.com/openbabel/openbabel/files/12336311/e.cjson.txt); (btw ignore the .txt ending github doesn't let me upload it otherwise)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2619:1451,Assert,Assertion,1451,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619,2,"['Assert', 'log']","['Assertion', 'log']"
Testability,"ually empty, i.e. ```; M V30 BEGIN BOND; M V30 END BOND; ```. 1) One observation is on .sdf (v3000) written by openbabel -- though these can not be processed by the InChI reference executable (version 1.07.1, 64bit, Linux variant), openbabel itself is capable to assign an InChI. For instance. ```shell; $ obabel -:""[He]"" -O obabel_Helium.sdf -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1390,log,log,1390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['log'],['log']
Testability,"uation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_P",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8391,test,test,8391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testfastsearch']"
Testability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17441,test,test,17441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"ude/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12176,test,test,12176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"uestion about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288:1438,test,test,1438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288,1,['test'],['test']
Testability,"ugh), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1588,Test,Test,1588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,ui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52431,test,test,52431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"uild/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:18491,test,test,18491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,uild/test I get:; Start 1: unittest; ```; Could not find executable /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:999,test,test,999,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,uilding CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53195,test,test,53195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15886,test,test,15886,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16149,test,test,16149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: und,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17487,test,test,17487,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../s,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18555,test,test,18555,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-be,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3969,test,test,3969,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,use isinstance to test if filename is bytes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1673:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1673,1,['test'],['test']
Testability,"user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. This issue is particularly important on multi-user machines as well as for packaging the software for Microsoft SCCM/Intune. This does not pose an issue only in the scenario of single account machines where the account used for regular work is an administrator. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download the installer from this GitHub repo's releases section: [OpenBabel-3.1.1-x64.exe](https://github.com/openbabel/openbabel/releases/download/openbabel-3-1-1/OpenBabel-3.1.1-x64.exe); 2. Run the installer, preferably as a non-privileged user; 3. Observe where the aforementioned files and registry values are placed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:3159,test,test,3159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['test'],['test']
Testability,"using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule converted; $ obabel CH4.cml -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. `obabel -:C -o cml --gen3D | obabel -i cml -o inchi -xl` gives the same output.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:1500,test,test,1500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,3,"['log', 'test']","['log', 'test']"
Testability,"uss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Nov 22 2017 -- 15:48:24; Operating system and version: Linux hostname 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect the molecule to have the correct resname (UNL by default) in the output PDB file. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. I see weird resnames in the output file. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; obabel -p 7.4 -i sdf Spongothymidine_1.sdf -o pdb; ```. My output; ```; ATOM 1 C5M T A 1 26.362 58.646 91.209 1.00 0.00 C ; ATOM 2 C5 T A 1 25.922 57.822 90.045 1.00 0.00 C ; ATOM 3 C6 T A 1 24.699 57.300 89.909 1.00 0.00 C ; ATOM 4 N1 T A 1 24.311 56.600 88.785 1.00 0.00 N ; ATOM 5 C1* T A 1 22.945 56.099 88.619 1.00 0.00 C ; ATOM 6 O4* T A 1 22.049 56.831 89.499 1.00 0.00 O ; ATOM 7 C4* T A 1 21.402 55.880 90.357 1.00 0.00 C ; ATOM 8 C5* T A 1 21.209 56.431 91.767 1.00 0.00 C ; ATOM 9 O5* T A 1 20.616 55.451 92.611 1.00 0.00 O ; ATOM 10 C3* T A 1 22.230 54.602 90.335 1.00 0.00 C ; ATOM 11 O3* T A 1 21.417 53.477 90.642 1.00 0.00 O ; ATOM 12 C2* T A 1 22.722 54.594 88.897 1.00 0.00 C ; ATOM 13 O2* T A 1 23.810 53.710 88.674 1.00 0.00 O ; ATOM 14 C2 T A 1 25.178 56.411 87.710 1.00 0.00 C ; ATOM 15 O2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1767:1499,test,test,1499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1767,1,['test'],['test']
Testability,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17727,test,test,17727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"utput or what you expected to see. -->. First of all, thanks for the great software!. I use smile code to define AtomClass value for each atom and want to write it in CML output. For exemple `[N:730]`, should give the following output for the atom field:. `<atom id=""aa730"" elementType=""N""/>`. The atom id is created including a string (aa) and the atom class value (730). The string value is incremented (ab, ac, ...) if other atoms with the same atom class exist in the molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->. Everything is fine if and only if the number of atoms with the same class is smaller than 27. For large molecules, obabel fails and a seg fault is produced. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. I found the problem comes from `src/formats/xml/cmlformat.cpp`. I edited the file `cmlformat.cpp`, subroutine `void CMLFormat::MakeAtomIds(OBMol& mol, vector<string>& atomIDs)` to allow for up to 9999 atoms with the same atom class. The modified source file is attached along with the file mpdtmd3.smi to check everything is fine. . Would it be possible to include this new feature/correction in future versions?. Please, note that I am a fortran programmer (!) not really familiar with cpp... ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. When using obabel 2.4.1 with the command; `obabel -ismi mpdtmc3.smi -ocml`, a segmentation fault occurs with the original version whereas a unique atom id is given for each atom with the correction proposed. [mpdtmc3.smi.zip](https://github.com/openbabel/openbabel/files/1584141/mpdtmc3.smi.zip); [cmlformat.cpp.zip](https://github.com/openbabel/openbabel/files/1584138/cmlformat.cpp.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731:2428,test,test,2428,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731,1,['test'],['test']
Testability,"valuation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5084,test,test,5084,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testsym']"
Testability,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980:201,test,test,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980,1,['test'],['test']
Testability,"vert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1518,Test,Test,1518,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,viors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2139,test,test,2139,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"w evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20217,test,test,20217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 2 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1685,log,log,1685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,2,['log'],['log']
Testability,"warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:6032,test,test,6032,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testsym']"
Testability,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:271,Log,Log,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,9,"['Log', 'log']","['Log', 'log']"
Testability,"wse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\KFReader.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 62 error(s), 23 warning(s); ------ Build started: Project: OBXMLFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; chemkinformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlreactformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rsmiformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rxnformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\chemkinformat.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBXMLFormats\Debug\BuildLog.htm""; OBXMLFormats - 6 error(s), 0 warning(s); ========== Build: 0 succeeded, 2 failed, 12 up-to-date, 4 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:21092,log,log,21092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['log'],['log']
Testability,wx-widgets test called even when wx-gui is not enabled,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764,1,['test'],['test']
Testability,xception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test .....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2648,Test,Test,2648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"yFoahIRszi0hPANaCgYi5IGjFFCpy1DnddzFacFG/GGmsrdOCfFmgAuwTNCPCMwajKlIQVemMCPv7+wjDgDhOEBHStHGCZKOjNxvkG3pFl9LMJbbd5qCInIqi3NeTJOYHQs34XlQEuA34QxE51ihlexEpQ71cDtj4+JgNjwy3PchGUm9Jnwvc7y7Vq2rLq6hTc06fR9hySQOlC1CfID8nKt9W1RMi8qsisti2C3VV7VTrYrHYMzJcewKMtapP751ox/vHRfUTQOntBKB5FmeLiD4iqv9ThIXzSXFwaLBuB9Z875yzfVftW83lcz6KIj84UPKd91XEnJOWR2h874GXgF8BrqF1UOxtBAA6d3E6CNwPfBZ4lXpWtztfULfYvSTo9+7dc7Kvr5AEQWB9hcJ6AFTnVDVR1VngS9R/FbftrQvvkiGgoAXwy81gwQFbgXcA9wI3A9uBooiE9Q3UpitOKbAqIm8K+luCLXrsm2Z2BJq/XNmo1P52AXDeIUyBMeCKRjsAegXYAVUZDcMgVHWu+QuRJEl9LYmXzfu/wThJ/VT4YUQOITIVoauJ+fNmijdL/x/v//poGMN6aAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0wNy0wM1QwODo0NToxOCswMDowMLKMtZkAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMDctMDNUMDg6NDU6MTgrMDA6MDDD0Q0lAAAAAElFTkSuQmCC)).; > ; > ## Actual Behavior; > As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:; > ; > `>Test ARFF` `ARFF`; > ; > produces the following SMILES output (either in the output pane or the GUI or in a file) :; > ; > `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`; > ; > However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:; > ; > `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`; > ; > which creates the correct peptide structure when pasted into Marvin Sketch.; > ; > Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:; > ; > `>Test AR` `AR`; > ; > produces the output:; > ; > `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595:8197,Test,Test,8197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595,1,['Test'],['Test']
Testability,yes that argument could be made 😄. logically sound!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1237638493:35,log,logically,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1237638493,1,['log'],['logically']
Testability,ym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3433,test,test,3433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. run command obabel -icdx 'Example.cdx' -O 'Example.rxn'. use rdkit to visualize Example.rxn within a python shell with; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import Draw; rxn = AllChem.ReactionFromRxnFile('Example.rxn'); k = Draw.ReactionToImage(rxn); k.save('test-Example.png'). [Example.zip](https://github.com/openbabel/openbabel/files/3894075/Example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2099:1712,test,test-Example,1712,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099,3,['test'],"['test', 'test-Example']"
Testability,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:20021,test,test,20021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,3,['test'],"['test', 'testexample']"
Testability,"} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14003,test,test,14003,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testkekule']"
Testability,"} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:11553,test,test,11553,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testunique']"
Usability, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:5252,Clear,Clear,5252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1442,Clear,Clear,1442,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,2,['Clear'],['Clear']
Usability, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1586,Clear,Clear,1586,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1684,simpl,simple,1684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['simpl'],['simple']
Usability," SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:15312,Simpl,Simplify,15312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability," at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:2092,Simpl,Simplify,2092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability," produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4814,Simpl,Simplify,4814,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability," there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:1815,feedback,feedback,1815,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,2,['feedback'],['feedback']
Usability,"""git grep -n 'std::string'|wc -l"" on Openbabel root directory gives 2686; Any idea how to proceed incrementally without breaking the build?. Not related but to simplify mem management+to avoid mem leaks in case of exceptions+just to avoid mem leak errors from SWIG it could be useful to use unique_ptr but it needs C++11. Any roadmap to use C++11 on Openbabel?; I'm not unique_ptr expert and I know that some cases may need shared_ptr which is much more difficult to use for a C++ beginner like me.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202:160,simpl,simplify,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202,2,['simpl'],['simplify']
Usability,"""openbabel -H"" outputs a list of supported formats, but it's not exactly easy to parse: there are lots of other text on top of it, and the fields themselves could be clearer. For example, you could format the list like that:. xyz -- RW -- XYZ cartesian coordinates format. where "" -- "" are separators, the first column is the file format short name, the last is the description, and the second is whether it's read-write (RW), or only read (R) or write (W). Reported by: coudert. Original Ticket: ""openbabel/feature-requests/136"":https://sourceforge.net/p/openbabel/feature-requests/136",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505:166,clear,clearer,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505,1,['clear'],['clearer']
Usability,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:1274,learn,learn,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,2,['learn'],['learn']
Usability,"## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; I have a selection of conformers of the same molecule. I want to collect all of the torsions in one file for comparison purposes. This should be easily done using the report file type. ## Actual Behavior; However, the list of torsions that are generated in this format vary from conformer to conformer, which makes it quite a bit more difficult. . I have attached the reports for three of the conformers for a small molecule to illustrate that the torsion list is different.; [CCB-CH2CN_1.txt](https://github.com/openbabel/openbabel/files/13367470/CCB-CH2CN_1.txt); [CCB-CH2CN_2.txt](https://github.com/openbabel/openbabel/files/13367471/CCB-CH2CN_2.txt); [CCB-CH2CN_3.txt](https://github.com/openbabel/openbabel/files/13367472/CCB-CH2CN_3.txt). ## Steps to Reproduce. I am simply using the basic convert feature to convert Gaussian job log files to report files. Input log files are attached below.; [CCB-CH2CN_1.log](https://github.com/openbabel/openbabel/files/13367504/CCB-CH2CN_1.log); [CCB-CH2CN_2.log](https://github.com/openbabel/openbabel/files/13367505/CCB-CH2CN_2.log); [CCB-CH2CN_3.log](https://github.com/openbabel/openbabel/files/13367506/CCB-CH2CN_3.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644:851,simpl,simply,851,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644,1,['simpl'],['simply']
Usability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux OpenSUSE Tumbleweed. ## Expected Behavior; Correct conversion of g98 format file containing vibrational frequencies to e.g. cjson. ## Actual Behavior; Converting a Gaussian 98 file to `.cjson` or `.molden` both result in the first atom (index 1, g98 seems to start at index 1) being dropped from all the displacements. If the vibrations are viewed with e.g. Avogadro the wrong atoms are animated for each frequency, as the displacements are incorrectly assigned to the atom with an index one higher. ## Steps to Reproduce; Two example files are attached, both produced by frequency calculations with `xtb`. Acetone shows the problem quite clearly because the C=O stretch at ~1700 cm-1 doesn't have a large coefficient on the O any more. The benzene files are primarily to show that the behaviour is systematic; by counting the number of coordinates in the displacement and comparing to the g98 file it is easy to see that again, the displacements for atom 1 have not been read/converted/stored. Since both `.molden` and `.cjson` files are missing the displacements of the first atom, it seems the problem is not in the conversion to the output format but rather the parsing of the input file. [acetone_g98.out.txt](https://github.com/openbabel/openbabel/files/13518791/acetone_g98.out.txt); [acetone.cjson.txt](https://github.com/openbabel/openbabel/files/13518792/acetone.cjson.txt); [acetone.molden.txt](https://github.com/openbabel/openbabel/files/13518793/acetone.molden.txt); [benzene_g98.out.txt](https://github.com/openbabel/openbabel/files/13518794/benzene_g98.out.txt); [benzene.cjson.txt](https://github.com/openbabel/openbabel/files/13518795/benzene.cjson.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2652:730,clear,clearly,730,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652,1,['clear'],['clearly']
Usability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412:732,clear,clear,732,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412,1,['clear'],['clear']
Usability,"$ babel si-extra-h.sdf -o smi; C[SiH](C)C. The attached file has a very simple trimethyl [Si]. When printed as a SMILES, and extra H is added to the [Si] atom. This does not appear to happen in the SDF -- printing the SDF doesn't show any extra atoms. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741:72,simpl,simple,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741,1,['simpl'],['simple']
Usability,"(I've just been looking into this a bit, and I can't see any way to raise the warning I suggested, which is a pity.). As a last argument consider that keeping ``import openbabel`` means that people will try ``import pybel`` and get weird errors if they have pyBEL installed. The choice is between a clear problem for all users (at upgrade time) over a confusing problem for a small number of users (but forever). If the majority prefer the second, then so be it. But I hope everyone who chooses that path will be happy to help users that file issues about this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469873048:299,clear,clear,299,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469873048,2,['clear'],['clear']
Usability,"); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17935,Simpl,Simplify,17935,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. **Describe the solution you'd like**; A clear and concise description of what you want to happen. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here. openbabel==2.4.1. I want to convert .smi to .xyz, then i will achieve some task of prediciiton, so it is strict with the accuracy of 3D coordinate. When i use the openbabel convert .smi to .xyz, then convert .xyz to .smi. But i find the two smiles is differernt. the below is my code, I want to know how to get the better accuracy in .xyz coordinate. Thank you!. .smi->.xyz; ```python; ## Use openbabel to convert SMILES to xyz.; mol = pybel.readstring(""smi"", smiles); mol.localopt(forcefield=""mmff94"", steps=5000); mol.make3D(forcefield='mmff94', steps=100); mol.write(""xyz"", filename=out_name+'_pybel.xyz', overwrite=True); ```. .xyz->.smi. ```python; def MolFormatConversion(input_file:str,output_file:str,input_format=""xyz"",output_format=""smi""):; molecules = readfile(input_format,input_file); output_file_writer = Outputfile(output_format,output_file); for i,molecule in enumerate(molecules):; output_file_writer.write(molecule); output_file_writer.close(); print('%d molecules converted'%(i+1)); ```; This is the right smiles:O=C1[N]C([S])=NC2=NC=CN=C21; ![image](https://user-images.githubusercontent.com/32425458/172286276-53de501c-a049-4c1c-b908-b742bb8c60c2.png); This is convert smiles: O=C1N=[C](=S)N=C2N=CC=N[C]12; ![image](https://user-images.githubusercontent.com/32425458/172286420-71022838-b981-42b9-9415-b471416e4e25.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484,3,['clear'],['clear']
Usability,**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. At the moment vasp format writes coordinates in `Cartesian` only. **Describe the solution you'd like**; A clear and concise description of what you want to happen. Writes `Direct` i.e. fractional coordinates as well. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2564:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2564,3,['clear'],['clear']
Usability,"**Is your feature request related to a problem? Please describe.**; I am trying to use OpenBabel in a 64-bit application (written in C#). Simply including the 32-bit `OBDotNet.dll` obviously causes a crash. **Describe the solution you'd like**; Could OpenBabel provide a 64-bit, i.e., `OBDotNet-x64.dll` as well?. **Describe alternatives you've considered**; Providing a clear build instruction on how to generate an OBDotNet.dll could also be a solution. This can enable us to produce compatible DLLs. . Regarding this, in [this issue/comment](https://github.com/openbabel/openbabel/issues/1347#issuecomment-331784917), it is said that such a 64-bit DLL exists. I have never been able to find this (in a 64-bit Binary Release for OpenBabelGUI). The [latest documentation](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CSharp.html) also claims otherwise. Am I mistaken?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2532:138,Simpl,Simply,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532,2,"['Simpl', 'clear']","['Simply', 'clear']"
Usability,", Windows VC8 sp1, and Macintosh gcc v4.0.1 it; compiles and runs successfully with no warnings (-Wall / -W4 -analyze ). Here are the profile timing details:; Profiling; Top 10 Application Exclusive Times Before, After; OpenBabel::EvalAtomExpr 698.826936 690.121976; OpenBabel::OBBond::IsClosure(void) 279.642807 169.510756; OpenBabel::OBBitVec::NextBit(int) 258.648177 13.774759; OpenBabel::DetermineFRJ 232.795392 228.121234; OpenBabel::OBMol::ConnectTheDots(void) 228.119041 237.671913; OpenBabel::OBSSMatch::Match 183.537663 151.428923; OpenBabel::OBMol::ContigFragList 167.962881 68.488272; OpenBabel::OBResidue::GetSerialNum 144.409723 116.851829; OpenBabel::OBAtom::GetResidue(void) 141.741211 124.446245; OpenBabel::OBMol::NextAtom 135.275772 139.024312. OBBitVec, Elapsed Inclusive Time Before, After. OpenBabel::OBBitVec::CountBits(void) 331.374589 5.245531; OpenBabel::OBBitVec::NextBit(int) 289.776188 15.537802; OpenBabel::OBBitVec::operator|=3D(class 22.527727 22.958838; OpenBabel::OBBitVec::Clear(void) 17.309754 38.937146; *OBRingSearch::RemoveRedundant calls more often; OpenBabel::OBBitVec::operator=3D(class 13.516117 13.361786; OpenBabel::OBBitVec::IsEmpty(void) 13.172408 8.526192; OpenBabel::OBBitVec::Resize(int) 9.163442 0.239190; OpenBabel::OBBitVec::SetBitOn(int) 8.433342 6.604024; OpenBabel::OBBitVec::OBBitVec(void) 4.358699 0.026231; OpenBabel::OBBitVec::ToVecInt(class 4.154683 3.295529; OpenBabel::OBBitVec::OBBitVec(class 1.560059 2.204832 *called 5x as; often OBMol::FindSSSR; OpenBabel::OBBitVec::FromVecInt 0.490307 0.390806 *App Exclusive Time; OpenBabel::OBBitVec::operator&=3D(class 0.108372 0.183811 *called 5x as; often OBMol::FindSSSR. OBResidue->OBAtom, Elapsed Inclusive Time Before, After. OpenBabel::OBResidue::~OBResidue(void) 7.255922 3.532200; OpenBabel::OBResidue::AddAtom(class OpenBabel::OBAtom *) 90.960348; 36.679044; OpenBabel::OBResidue::GetAtomID(class OpenBabel::OBAtom *) 17.294657; 11.365676 *Exclusive Time; OpenBabel::OBResidue::GetNumAt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491:2398,Clear,Clear,2398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491,1,['Clear'],['Clear']
Usability,", ostream* pos); {; if(pos) SetOutStream(pos, false);. if(!pOutFormat || !pOutput) return false;. SetOneObjectOnly(); //So that IsLast() returns true, which is important for XML formats; ```. The problem is that SetOneObjectOnly() sets m_IsLast to true, which means it cannot be used to write multiple objects (with a header/footer) correctly. The CML writer has:; ```; //If more than one molecule to be output, write <cml> at start and </cml> at end.; if(!_pxmlConv->IsLast()); {; xmlTextWriterStartElementNS(writer(), prefix, C_CML, uri);; uri=NULL;; }; ```; but that test for IsLast() returns m_IsLast which is true, so the !-inversion makes it false, so that branch is not taken. To make things worse, the footer can only be written if IsLast() is set, which must be done for the last molecule. This means Write() cannot be called until you know if it will be the last molecule to write, and manual users must specify that flag. That is, I see what you mean by ""second-class citizen."" The fundamental problem is that format API doesn't have header/footer generation as an independent task from writing a molecule, so there needs to be a way for the write to know if a molecule is the first or last molecule. It *appears* that the right solution is to:. - remove SetOneObjectOnly() from Write; - document the full Write API so people know when to SetLast(); - update pybel so it delays the last Write() until the close(), which is when it knows if the previous molecule really is the last molecule. A simple implementation of the last will either break code which expects that it's possible to modify outputfile.write(mol) after writing the molecule (which it can't because the outputfile hasn't yet written it), or require a copy. A more complex one might default to making a copy, with a flag to enable non-copy behavior when the API caller can promise that the molecule object won't be changed. I can look at this some more and improve the patch, but need feedback on which route to prioritize.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991:1691,simpl,simple,1691,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991,4,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"- Gert Thijs <gert.thijs@silicos.com>; - openbabel 2.1.1; - Mac OS X 10.5 on x86_64. I have encountered a problem when using the phmodel that is linked to the type of the input file. I have a simple molecule in both a smiles (test.smi) and a sd file (test.sdf). When I convert them using obabel with the -p option for protonation I get two different results. This is illustrated in the steps below. macbook1:~ gert$ cat test.smi ; C[N+]1=CC=CC=C1	1. macbook1:~ gert$ cat test.sdf; 1; -OEChem-07030811492D. 7 7 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 7 1 0 0 0 0; 2 3 2 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 6 7 2 0 0 0 0; M CHG 1 2 1; M END; $$$$. When using the phmodel to convert the molecule, the positive charge on the nitrogen will be lost when starting from the SD file as an input ; while this is not the case with the smiles input file. . macbook1:~ gert$ obabel -h -p -isdf test.sdf -osmi 2> /dev/null; [CH3][n]1[cH][cH][cH][cH][cH]1	1; macbook1:~ gert$ obabel -h -p -ismi test.smi -osmi 2> /dev/null; [CH3][n+]1[cH][cH][cH][cH][cH]1	1. When only adding hydrogens, there is no difference between the two generated smiles and the nitrogen still has a positive charge. Any idea where this difference might come from? . Many thanks,; Gert Thijs. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785:192,simpl,simple,192,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785,1,['simpl'],['simple']
Usability,"- [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows 10. I am looking for an example on how to pass input or output conversion options while using the `openbabel.OBConversion` object in python? As an example, if I wish to convert `xyz` format to `inchified smiles` string I would simply run the following command in the command line:. ```bat; obabel -ixyz <filePath> -osmi -xI; ````. where `-xI` indicates output options and `I` means produce inchified smiles in this case. Is there a way to pass such flags via the `openbabel.OBConversion` object methods? I could see that there is `SetInOutFormat` method, but couldn't find anything on the extra flags. Another use case is the generation of 2D or 3D coordinates handled by the `--gen2d` and `--gen3d` flags. If setting extra conversion flags in the `openbabel.OBConversion` object is not possible, do we need to do these extra operations manually via other available openbabel classes and methods? If so, could someone please point me to some tutorials?. Many thanks,; Daniel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2390:353,simpl,simply,353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390,1,['simpl'],['simply']
Usability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446:1178,simpl,simply,1178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446,1,['simpl'],['simply']
Usability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364:604,clear,clear,604,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364,2,['clear'],['clear']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I tried to generate a SMILE string departing from the PDB file in attachment, but the program is generating an invalid output. I believe the problem is in the algorithm for aromatic ring perception as I also identified the same problem in other aromatic rings. In the attached example, the program does not identify one of the aromatic rings in the molecule X01 and generates an output containing a simple ring (not aromatic) and a Nitrogen (N04) with two double bonds. I also tested the same procedure in an older Open Babel version (2.3.2) and surprisingly the output generated was correct. Thus, I believe the bug was introduced in some of the newest versions. Outputs:; Version 2.4.1 (error): [N]1=C(N=C(NC=1)N)c1c(ccc(c1)C#N)O; Version 2.3.2 (ok): n1c(nc(nc1)N)c1c(ccc(c1)C#N)O. [error.txt](https://github.com/openbabel/openbabel/files/2757278/error.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920:601,simpl,simple,601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux. I found a possible issue with the function MatchesSMARTS() available at OBAtom when dealing with cyclic/symmetric molecules. A simple example is the molecule ""NC(=O)CCC1O[Mg]O1"". If I search for a pattern like ""[OX2][C;X4,X3][OX2]"" the result I got was False, but of course the pattern exists. Then, I took a look at the file atom.cpp and I observed that MatchesSMARTS() is using the function GetUMapList() from OBSmartsPattern. The problem here is that GetUMapList() returns only unique matched patterns, so when we have cyclic/symmetric molecules, not all patterns are returned, but only one of them. As a consequence, the first atom of the unique list may not correspond to the target atom, so the pattern above works only for one of the Oxygens. To solve this problem, I made my own function to match patterns by using GetMapList(). So, it returns all possible patterns, which means I can find all oxygens. Therefore, I think you guys may update the function MatchesSMARTS by exchanging GetUMapList by GetMapList. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2131:302,simpl,simple,302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2131,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:698,simpl,simple,698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:987,learn,learn,987,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,1,['learn'],['learn']
Usability,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2350:379,simpl,simply,379,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350,1,['simpl'],['simply']
Usability,"-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:2380,Simpl,Simplify,2380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"-h does not add hydrogens. It converts from implicit to explicit. These are; representations of the same molecule. On Wed, 11 Nov 2020, 04:48 Andrew S. Rosen, <notifications@github.com>; wrote:. > I can confirm this is an issue. A simple way to reproduce this is obabel; > -:""C[CH2]"" -O out.smi -h. It outputs the implicit version.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKM3PCVWYSUZJ3RRC3SPIJTNANCNFSM4PSXZXCA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266#issuecomment-726279899:231,simpl,simple,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266#issuecomment-726279899,2,['simpl'],['simple']
Usability,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2593,learn,learn-github-actions,2593,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['learn'],['learn-github-actions']
Usability,"/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20627,Simpl,Simplify,20627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2443:1082,clear,clear,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443,1,['clear'],['clear']
Usability,"3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->Get",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1247,Simpl,Simple,1247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,1,['Simpl'],['Simple']
Usability,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:999,Clear,Clear,999,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability,"7 AM UTC; Owner: Noel O'Boyle; Hi guys---; I am in the process of incorporating some 'automatic' 3D-pharmacophore ; perception code into one of my programs. Nearly all works---except for the ; perception of ring atoms ---in the manner illustrated in the sample code below ; ---which mimics your example in the OBRing class description.; So I am puzzled --because this 'used to work for me'. Indeed it did back at ; OpenBabel 2.3.0 or so.; At this point when I compile and debug I wind up with a seg fault that traces to ; one of the OpenBabel ring iterators:; Specifically:; normal_iterator(const _Iterator& i) : _M_current(__i) { }; The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in gnu_cxx::normal_iterator > >::normal_iterator ; (this=0x7fffffffc580, i=@0x0) at ; /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686. (gdb) ; Trouble shooting I went back to the simplest example mimicking the snippet of ; example code in your OBRing class description ---; This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2; Thank you for the gift of OpenBabel ---saves me time and effort each an every ; day.; Danni; ___SAMPLECODE____; include ; include ; include mol.h>; include obconversion.h>; include ring.h>; using namespace std;; using namespace OpenBabel;; // Include Open Babel classes for OBMol and OBConversion int main(int ; argc,char **argv) { // Read from STDIN (cin) and Write to STDOUT (cout) ifstream ; fin; fin.open(""c6h6.smi"",ios::in); OpenBabel::OBConversion conv(&fin,&cout); ; if(conv.SetInAndOutFormats(""SMI"",""CAN"")) { OBMol mol; if(conv.Read(&mol)) { ; conv.Write(&mol); . //cout << ""WE ARE ABOVE "" << endl;; vector vr;; vr = mol.GetSSSR();; vector::iterator i;; vector::iterator j;; vector rlist = (vector)mol.GetData(""RingList"");; for ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282:2753,simpl,simplest,2753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282,2,['simpl'],['simplest']
Usability,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266:2089,clear,clear,2089,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266,1,['clear'],['clear']
Usability,":; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4843,Simpl,Simplify,4843,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"; ++i); Intensities.push_back(atof(vs[i].c_str()));. ifs.getline(buffer, BUFF_SIZE); // column labels or Raman intensity; if(strstr(buffer, ""Raman Activ"")) {; ifs.getline(buffer, BUFF_SIZE); // Depolar (P); ifs.getline(buffer, BUFF_SIZE); // Depolar (U); ifs.getline(buffer, BUFF_SIZE); // column labels; }; ifs.getline(buffer, BUFF_SIZE); // actual displacement data; tokenize(vs, buffer);; vector<vector3> vib1, vib2, vib3;; double x, y, z;; while(vs.size() >= 5) {; for (unsigned int i = 2; i < vs.size()-2; i += 3) {; x = atof(vs[i].c_str());; y = atof(vs[i+1].c_str());; z = atof(vs[i+2].c_str());; ```. In the files that `xtb` produces, the frequencies block has the following line headers:; ```; ...; 25 26 27; a a a ; Frequencies -- 3067.8451 3071.3773 3071.6466; Red. masses -- 1.7262 1.7831 1.7831; Frc consts -- 0.0000 0.0000 0.0000; IR Inten -- 0.0120 0.0352 0.0363; Raman Activ -- 0.0000 0.0000 0.0000; Depolar -- 0.0000 0.0000 0.0000; Atom AN X Y Z X Y Z X Y Z; 1 6 -0.09 0.05 -0.00 0.13 -0.07 0.00 0.02 -0.02 0.00; 2 6 0.09 0.05 0.00 -0.04 -0.03 -0.00 -0.12 -0.08 -0.00; ...; ```. i.e. with only a *single* ""Depolar"" line between ""Raman Activ"" and the column labels, whereas openbabel expects two and therefore throws away one line too many. Since the code is checking for specific strings anyway, it is presumably a simple change to get it to only throw away lines up until it finds one saying, for example, ""Atom AN""?. I tried to do a Freq calculation with Gaussian itself to see if `xtb` is formatting its Gaussian-style output files incorrectly, but the output only contained the headers:. ```; 1 2 3; A A A; Frequencies -- 31.0435 139.3587 381.0536; Red. masses -- 1.0167 1.1325 2.1534; Frc consts -- 0.0006 0.0130 0.1842; IR Inten -- 0.0000 0.2046 1.0684; Atom AN X Y Z X Y Z X Y Z; ```. which is the other case accounted for in the openbabel code. So it is not clear whether Gaussian itself would always produce two ""Depolar"" lines (`Depolar (P)` and `Depolar (U)`) or just one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748:1950,simpl,simple,1950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14705,Simpl,Simplify,14705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:12240,Simpl,Simplify,12240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"<!--; --> I'm trying to run a pretty simple conversion of a text file to pdb. I'm running my program on python 2.7 in a conda virtual environment on MacOSx, but I'm getting an error code. . My code:; `import pybel`; `drug_3d = pybel.readfile(""text"", ""/Users/myname/Documents/drug.txt"")`; `drug_3d_output = pybel.Outputfile(""pbd"", ""/Users/myname/Documents/drug.pdb"")`; `drug_3d_output.write(drug_3d)`; `drug_3d_output.close()`. I get this error code:; ""Traceback (most recent call last):; File ""/Users/myname/Documents/myprogram.py"", line 20, in <module>; drug_3d_output.write(drug_3d); File ""/Users/myname/miniconda2/envs/myenv/lib/python2.7/site-packages/pybel.py"", line 272, in write; self.obConversion.WriteFile(molecule.OBMol, self.filename); AttributeError: 'generator' object has no attribute 'OBMol'. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Most recent on conda; Operating system and version: MacOSx Sierra. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> Error; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> ; [drug.txt](https://github.com/openbabel/openbabel/files/1182056/drug.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607:37,simpl,simple,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607,1,['simpl'],['simple']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2142:1168,simpl,simply,1168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142,1,['simpl'],['simply']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04. `OBSmartsPattern` does not match itself for some SMARTS.; The simplest example was `[c]1ccc[c]c1`. ```; $ echo '[c]1ccc[c]c1' | obgrep -c '[c]1ccc[c]c1'; 0; ```. I know there are limitations in the current implementation ([Wiki](https://openbabel.org/wiki/SMARTS)), but this does not seem to be reported.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2025:830,simpl,simplest,830,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2025,1,['simpl'],['simplest']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2071:943,clear,clear,943,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071,1,['clear'],['clear']
Usability,"> -DPYTHON_BINDINGS=OFF -DRUN_SWIG=OFF. With you method, just as I've told in another thread, the pip install will use the older version of openbabel, instead of the latest version found on the pypi:. ```; $ pip install openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); |████████████████████████████████| 81kB 6.4MB/s ; Installing collected packages: openbabel; Running setup.py install for openbabel ... /^canceled; ```. I want to install the python binding shipped in the source-code and compile by me. Regards",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597536872:285,simpl,simple,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597536872,2,['simpl'],['simple']
Usability,"> ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9775,Simpl,Simplify,9775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"> @SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?; > ; > There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g.; > ; > ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYzc4OTFlNjU0YjVlOTliZTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.nhOUXKuy8hcbouX0LRQNsbF8gEC3SBWDhE8oVVoNst8) [ ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079:47,clear,clear,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079,2,['clear'],['clear']
Usability,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:834,simpl,simply,834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792,4,['simpl'],"['simple', 'simply']"
Usability,"> @schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:; > ; > ```shell; > $ obabel -imol carbene_complex.mol.txt -O na.png; > ==============================; > *** Open Babel Warning in ReadMolecule; > WARNING: Problem interpreting the valence field of an atom; > The valence field specifies a valence 2 that is; > less than the observed explicit valence 3. @nbehrnd Well, the carbene carbon atoms are indeed another problematic case - the ""standard valence"" of 2 had to be set here because otherwise, the hydrogen count was too high by 3 not 1 (as you also observed with the Jmol picture). That of course is at conflict with the Lewis formula (and molfile) which features 3 bonds, two C-N and one C-Pt. The main problem seems to be that bonds which do not arise from combination of ""radical fragments"" like A* and B* -> A-B but Lewis acid/base pairs or otherwise not in line with the ""octet rule"" are not treated very well by most cheminformatics approaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760:81,clear,clearly,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760,2,['clear'],['clearly']
Usability,"> Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up. Possible but unlikely, I can't think of any sane Sp3 that would exhibit this. However definitely not possible in SMILES since both would be ""implicit"". Remember that Daylight doesn't lone pairs at all, e.g. ``C[S@](=O)CC`` will have stereo stripped.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572578114:225,clear,clear,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572578114,2,['clear'],['clear']
Usability,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:162,clear,clear,162,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,2,['clear'],['clear']
Usability,"> Checkout `OBResidue`. Thanks @dkoes! I've been able to identify `GetInsertionCode()` already, but not the other three attributes. Sorry I should have stated that initially to be more clear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050:185,clear,clear,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050,2,['clear'],['clear']
Usability,"> On Aug 21, 2017, at 9:07 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request.; > ; > . I think this patch only includes the changes related to obthermo. . https://github.com/openbabel/openbabel/pull/1598 <https://github.com/openbabel/openbabel/pull/1598>. > Please create a completely new branch for each change and use git cherry-pick to grab only the specific changes you want, e.g.; > ; > https://guides.github.com/introduction/flow/ <https://guides.github.com/introduction/flow/>; > I'm sorry to be picky, but I'd like to merge the obthermo changes and not the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.); > ; > . I am happy to discuss it. ; Please let me know how the code need to change, then I will do it. Because, it will be very useful to extract different charges from the Gaussian output. . Cheers,; Mohammad; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJNaXfKr9_X5SpRkRNtkUAwCAf2RSks5sadVogaJpZM4OVlnh>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547:531,guid,guides,531,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547,4,['guid'],['guides']
Usability,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1437,guid,guidance,1437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834,2,['guid'],['guidance']
Usability,"> The changes in povrayformat.cpp seem unrelated to the topic of the patch or am I missing something?. `std::bind1st` returns `std::binder1st`, both of which are deprecated and removed in C++17 (http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm). BTW the change was incorrect and now fixed. Let's simply use `std::remove`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2001#issuecomment-554062630:313,simpl,simply,313,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2001#issuecomment-554062630,2,['simpl'],['simply']
Usability,"> What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx?. I'm not sure ... but I had that file [since 2014](https://github.com/aminophen/chemobabel/tree/71b8511ae44f981122747c22366a1c985d1a11c9/doc/chemobabel/draw) (when I was a student). At that time ... * I had ChemBioDraw 12 on mac OS X 10.7.5 Lion,; * and I also had [ACD/ChemSketch Freeware 12.0](https://www.acdlabs.com/resources/free-chemistry-software-apps/chemsketch-freeware/) on Windows 7. but I don't clearly remember which I actually used to *draw* ATP.cdx. OTOH, I clearly remember that I *opened* that file with both of those software/machine to see the same molecule. FYI, OpenBabel 2.3.1 on the same machine generated with `$ obabel ATP.cdx -O ATP.svg` the following:. <img width=""400"" alt=""atpcdx-obmac231"" src=""https://user-images.githubusercontent.com/9957466/190418125-c90d4611-f09c-4720-b032-5f84ed08b204.png"">. (here no charge on oxygen, but seems reasonable!)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1248122524:491,clear,clearly,491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1248122524,4,['clear'],['clearly']
Usability,> baoilleach: Usually its good to have one feature or fix per pull request. To be clear: should I split the patch in this case?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/287#issuecomment-201436910:82,clear,clear,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287#issuecomment-201436910,2,['clear'],['clear']
Usability,@Artoria2e5 Thank you for your feedback.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2002#issuecomment-519079923:31,feedback,feedback,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2002#issuecomment-519079923,2,['feedback'],['feedback']
Usability,"@SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?. There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g. ![b818330a-f12](https://github.com/openbabel/openbabel/assets/19709084/e28f7ec1-763f-4f26-b91f-7b815ea9d3d0). (Mark A. Spackman and Dylan Jayatilaka, [CrystEngComm](https://doi.org/10.1039/1466-8033/1999), 2009, 11, 19-32). for which an .obj file (for the surface) and .mtl file (for the color) is an acceptable format for 3D printing. (Though .obj files can contain color information, and .vrml files are an other acceptable data container format.). ----. Else, do you want to generate a 3D print with either a single molecule on a plinth?. ![single_mol](https://github.com/openbabel/openbabel/assets/19709084/21839e69-0656-4e26-960f-3e3eeae330da). Or a crystal packing of a unit cell?. ![cell](https://github.com/openbabel/openbabel/assets/19709084/33686a20-33bc-4a2e-a377-6a61733f0b04). [concretization.zip](https://github.com/openbabel/openbabel/files/14538450/concretization.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373:45,clear,clear,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373,2,['clear'],['clear']
Usability,"@UnixJunkie On an Ubuntu machine, you can fetch the sources for the Debian experimental package by doing:; `dget http://deb.debian.org/debian/pool/main/o/openbabel/openbabel_2.4.1-1.dsc`; You can then build locally, and create a PPA if desired. @baoilleach https://launchpad.net/openbabel appears to be a project in Launchpad's Bazaar VCS, I have no idea if it is possible to transfer ownership. You could trying asking a question 'for Launchpad itself' at https://answers.launchpad.net/launchpad. I'm not sure if having an openbabel project on Launchpad has any advantages over simply publishing a PPA from your own Launchpad account. You could base it on the version from Debian experimental, as above. https://launchpad.net/ubuntu/+source/openbabel is the source package for the versions available from the Ubuntu repositories. If a new version is uploaded to Debian unstable within the next 5 months or so, it will automatically be pulled into the 18.04 LTS development version. Once there, it can be backported to 16.04 LTS (or 17.10, etc.) by following the request for backports process: https://wiki.ubuntu.com/UbuntuBackports",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338159207:579,simpl,simply,579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338159207,2,['simpl'],['simply']
Usability,"@Yannlefrancois To retain the hydrogens regardless if bound to (N,O,P,S) or C you can use `-h` as a *format modifier*. For the purpose of illustration, consider the example of diethyl ether (SMILES string `CCOCC`) either by simple addition of hydrogen atoms (`-h`). ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.991 -0.912 -0.912 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 3; ATOM 2 C UNL 1 0.979 0.074 -0.061 0.00 0.00 +0.000 C ; ATOM 3 C UNL 1 2.494 0.101 -0.038 0.00 0.00 +0.000 C ; ENDBRANCH 1 3; BRANCH 1 4; ATOM 4 C UNL 1 4.417 -0.929 -0.927 0.00 0.00 +0.000 C ; ATOM 5 C UNL 1 4.889 -2.020 -1.868 0.00 0.00 +0.000 C ; ENDBRANCH 1 4; TORSDOF 2; 1 molecule converted; ```. or one with the addition of hydrogen atoms (`-h`) and retaining them all explicit (`-xh`) in the new record to write:. ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt -xh; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.955 -0.517 1.197 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 2; ATOM 2 C UNL 1 2.459 0.089 0.004 0.00 0.00 +0.000 C ; ATOM 3 H UNL 1 2.818 1.123 -0.060 0.00 0.00 +0.000 HD; ATOM 4 H UNL 1 2.818 -0.469 -0.869 0.00 0.00 +0.000 HD; BRANCH 2 5; ATOM 5 C UNL 1 0.943 0.075 0.031 0.00 0.00 +0.000 C ; ATOM 6 H UNL 1 0.535 0.534 -0.873 0.00 0.00 +0.000 HD; ATOM 7 H UNL 1 0.566 0.619 0.904 0.00 0.00 +0.000 HD; ATOM 8 H UNL 1 0.566 -0.950 0.107 0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252:224,simpl,simple,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252,2,['simpl'],['simple']
Usability,"@apaydinemre Perhaps there is an accidental typo by you, because (obabel 3.1.1 as provided by Linux Debian 13/trixie) once provides the information, i.e. about the less likely ligand of pyridine and `partialcharge`. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharge Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.003 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.020 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.110 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 -0.263 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.110 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.020 A ; TER ; 1 molecule converted; ```. while using the plural `partialcharges` *does not*, i.e. `q` are all zero. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharges Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.000 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.000 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.000 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 +0.000 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.000 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.000 A ; TER ; 1 molecule converted; ```. ----. For future reference: you can share input/output structure data as e.g., .pdb and .pdbqt files wrapped in a .zip archive attached which then is a file format the issue reports on GitHub know to process. Else (e.g., for a brief section of a data file, a snippet of code), as a (fenced) *code block* enclosed by a leading and a trailing line of three back ticks/accent graves (cf. [ref](https://learnxinyminutes.com/docs/markdown/)). If you opt-in for the alternative indentation by four spaces, this then has to be applied (i.e., added) to retain an empty line in the source code represented as such.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132:1793,learn,learnxinyminutes,1793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132,2,['learn'],['learnxinyminutes']
Usability,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:875,learn,learn,875,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['learn'],['learn']
Usability,"@baoilleach - do you know if there's a guide to adding templates for the depiction code? It probably won't help in this case, but adding some additional heterocycles seems like a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1577#issuecomment-305909721:39,guid,guide,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1577#issuecomment-305909721,2,['guid'],['guide']
Usability,"@baoilleach : Thank you for your feedback, I added the modified test",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619:33,feedback,feedback,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619,2,['feedback'],['feedback']
Usability,"@baoilleach I'm inclined to merge this. We can add clear documentation in the installation instructions, but I think for most use, it's preferable to have portable binaries than perfect speed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306:51,clear,clear,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306,2,['clear'],['clear']
Usability,"@baoilleach Thank you very much, this is helpful at this point. I agree about the `[C, CR5]` simplification, it may have been a remnant of earlier queries when I was trying to be more specific on which atoms I am after. Regarding:; > OB matches the all-atom structure whereas the PDB file is often missing bonds and bond orders, so these must be inferred. I am not sure I fully understand what it means (?) but I may have come across this already, see if this is relevant:. Right after this ticket, I wrote my own matcher for the structure I am after, which is a simple recursive matcher starting on the N. If the N matches, it unrolls its bonds and tries to match the C, unrolls its bonds....and so on. In the end, if there is a match starting from an N, all the matching atoms are returned. Again, 1GCN matches just fine, but 6QWY fails. But now, since I am in complete control of the matching process, I traced each match level and realised that the graph is taking a ""detour"". The main chain proceeds uninterrupted (that is, there are `OBBond` s describing the `NCC(=O)`, **EXCEPT** in some residues. Here is an example:. <img src=""https://user-images.githubusercontent.com/1336337/78659371-5cda7d00-78c3-11ea-943c-c08a2afaf570.png"" width=""200""/>. Notice residue 16, Nam->C3->C2, Residue 17, Nam->C3 and then the C3-C2 bond is only described from the C2 end. After realising this, I decided to first create the implied graph and then run the matcher on the graph. *Is this what you mean by implied bonds further above?* (Please see edit). Regarding the version being old, I understand, will try to compile from the latest, this is the version that Ubuntu has in its repositories by the way. **EDIT:**. I think I see what the problem is here, that was not the best part of the graph to demonstrate the ""problem"" with. Granted, some bonds are described ""asymmetrically"" (so, the information exists only in one way but not the other, as implied by `OBBond`). But in addition to this, the molecule app",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498:93,simpl,simplification,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498,4,['simpl'],"['simple', 'simplification']"
Usability,"@baoilleach Thanks for the feedback. This PR is only fix the direction of `WedgedHashBond`.; It is an error, and our chemists complain it. This is nothing to do with coordinate inversion, since the coordinate inversion applies to all stereo and non-stereo molecules. As to the coordinate inversion, although it makes the graph change, molecules are still valid and the same.; I would like to create another PR to remove this inversion, because it is a different topic from my viewpoint. What do you think?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-378145038:27,feedback,feedback,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-378145038,2,['feedback'],['feedback']
Usability,"@baoilleach: the set of space group is indeed fixed -- there are 230 3D space groups.; *The* reference for the names of the space groups is International Tables for Crystallography.; But while it is clear what are the names and operations of the standard settings for each space groups, and of popular alternative settings, it may not be so clear for some obscure settings. To clarify: for many space groups you can have alternative settings with changed basis and/or shifted origin. Any two settings of the same space group can be transformed into each other by applying a 4x4 transformation matrix. The question is what settings are practical, useful and worth listing in a table. And what are their standard (H-M) names. (There is no problem with interpreting Hall names: they are unambiguous and they encode all the operations in the name). ITfC has a few tables that list spacegroup settings (in Vol. A and B). These tables list different sets of settings, and they may differ between editions of ITfC. The table that is most commonly used in computer programs is in Vol. B. It is the same table that is used by SgInfo and cctbx/sgtbx (and spglib) and it's available here: http://cci.lbl.gov/sginfo/hall_symbols.html. It has 530 entries (3 are duplicate, as @afonari wrote above; different standard names correspond to the same sets of operations). The only thing that differs is that Open Babel recognizes 14 (as @afonari calculated) extra settings. It's probably good, but there is no good reference for naming of these settings.; For example: ""C -4 2 b"" is listed on http://img.chem.ucl.ac.uk/sgp/MEDIUM/117cz1.htm, but not in ITfC. ITfC have a C-centered settings of the same spacegroup (117) named ""C -4 2 g1"". This name is listed in table 1.5.4.4 in Vol.A ch.1.5 (and without any further information), but not in the table with Hall symbols. So I'm not able to tell if ""C -4 2 g1"" from ITfC and ""C -4 2 b"" from Birkbeck collage website refer to the same settings. Regarding shared resources",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893:199,clear,clear,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893,4,['clear'],['clear']
Usability,@byte-for-byte it is indeed usable. I have built from the branch in that pull request and everything works as expected.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-1197382498:28,usab,usable,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-1197382498,2,['usab'],['usable']
Usability,"@cowsandmilk That is a nice counter example. It's clear that this will cause some bug reports, but there's no way around it apart from flagging it up in the docs, and perhaps also at the end of the configuration (I think Avogadro does a great job of summarising the configuration after running cmake). @jeffjanes: I don't think that's possible. I think we should just optimise for the architecture at build time, with an option to override it (which we flag up in the configuration summary somehow).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983:50,clear,clear,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983,2,['clear'],['clear']
Usability,"@dkoes Can you make the changes that @cryos suggests regarding OpenBabel3_LIBRARIES and undo the edit to openbabel-python.i. As a matter of interest, how is this used by the consuming project? I can add something to the docs.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558719846:88,undo,undo,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558719846,2,['undo'],['undo']
Usability,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:819,Guid,Guide,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['Guid'],['Guide']
Usability,"@ghutchis,; Thanks for your reply and apologies for the delayed response. The version of libcairo2 I have installed 1.15.10-2. Can I ask what you mean by ""clear out "". Should I be commenting the lines out?. Thanks,; Anu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-393924416:155,clear,clear,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-393924416,2,['clear'],['clear']
Usability,@ghutchis: thank you for your feedback.; I changed usage and modified the algo to search the -a and shift values after it to parse values more easily.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1835#issuecomment-395535782:30,feedback,feedback,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1835#issuecomment-395535782,2,['feedback'],['feedback']
Usability,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:300,learn,learnxinyminutes,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642,4,['learn'],['learnxinyminutes']
Usability,"@johnmay has taken a look and come to a similar conclusion. It's missing the atom test, probably as the first line of matchCandidate. More problematic is that the built-in test is fairly simplistic and is not strictly speaking testing isomorphism exactly. Still, it'll be better than the current. I'll make the change and test it against @johnmay's VF2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723:187,simpl,simplistic,187,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723,2,['simpl'],['simplistic']
Usability,"@kalinni Separate thought: perhaps your workflow does not require the addition; of the complete set of hydrogens either; in a separate conversation I learned; the (ligand) molecules submitted to /in silico/ docking carry hydrogens on; hydrogen donors like -OH, -NH2, but lack hydrogens on the alkyl skeleton.; (But I'm not a user of vina, either.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178:150,learn,learned,150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178,2,['learn'],['learned']
Usability,"@merkys; > Are you positive that Open Babel adheres to CIP rules in its SMILES output?. While I recall an instance where OpenBabel reported stereogenic; centres as such (possibly in the documentation) including a scrutiny; if substitutents' priorities around a centre ascend/descend by turn to; the left/to the right, I simply forgot if there is an optional flag; for the /visual export/ of the structure as a .svg (or .png) to add; both. + the label of the atom indices, .and.; + (E)/(Z), (R)/(S), (P)/(M) next to the atom/bond. in question which would facilitate such a cross-check. I however; associate these optional decorations with e.g., RDKit and CDKDepict. Because the quick `obabel -L svg` only depicts a selection of options; OpenBabel offers, I welcome your input here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276:320,simpl,simply,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276,2,['simpl'],['simply']
Usability,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:266,guid,guides,266,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,2,['guid'],['guides']
Usability,"@nbehrnd . Furthermore, Brecher makes an argument for explicit hydrogen atoms on all ligand atoms directly coordinated (bonded) to a metal center:. ""Bonds representing coordination from one atom to a single other atom should be represented as normal plain single bonds. Any hydrogen atoms bonded to the atoms at either end of such a coordination bond must be shown clearly, even if that produces a diagram where some atoms appear to have non-standard valences, such as a nitrogen atom with four attached bonds."". This is particularly important for example with ammine (NH3) ligands, where most software mis-represents cisplatin as [PtCl2(NH2)2] instead of [PtCl2(NH3)2] without explicit hydrogens, since they do not recognize the use of the free electron pair on the ammonia ligands for bonding, which does along with increase of ""valence"" on N from 3 to 4 and try to maintain the ""standard valence"" of N as 3 by removing one H to NH2 instead of NH3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524:365,clear,clearly,365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524,2,['clear'],['clearly']
Usability,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:102,simpl,simpler,102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675,2,['simpl'],['simpler']
Usability,"@schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:. ```shell; $ obabel -imol carbene_complex.mol.txt -O na.png; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 4. 1 molecule converted; norwid@debian:~/Desktop$ obabel -imol carbene_complex.mol.txt -O check.sdf; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valenc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825:79,clear,clearly,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825,2,['clear'],['clearly']
Usability,"A better test case is simply:. >>> import pybel; >>> mol = pybel.ob.OBMol(); >>> pybel.Molecule(mol).write(""inchi""). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785:22,simpl,simply,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785,2,['simpl'],['simply']
Usability,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1015:585,simpl,simply,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015,1,['simpl'],['simply']
Usability,A simple check before appending residue id to residue name. It checks if the exact number is not already at the end of residue name string. Fixes #1819,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1828:2,simpl,simple,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1828,1,['simpl'],['simple']
Usability,"Actually, the reproduction steps above rely on the error raised in #2363. In most cases, simple calling `.addh()` or `.removeh()` should not change the output formula (since it will always list all hydrogens explicitly). However, if the user does other modifications to the molecule, the issue still exists. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC""); >>> mol.formula; 'C2H6O'; >>> mol.OBMol.BeginModify(); >>> mol.OBMol.GetAtomById(1).SetAtomicNum(16); >>> mol.OBMol.EndModify(); >>> mol.formula # Does not recalculate since attr(""Formula"") already exists; 'C2H6O'; >>> mol.OBMol.GetSpacedFormula(1, """") # forces the recalculation; 'C2H6S'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364#issuecomment-828733464:89,simpl,simple,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364#issuecomment-828733464,2,['simpl'],['simple']
Usability,Added two new options to the PDBQT writing code:; -h to preserve hydrogens ; -n to preserve atom and residue naming; These are useful to simplify the integration of Vina/autodock with other tools.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/147:137,simpl,simplify,137,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/147,1,['simpl'],['simplify']
Usability,"After a bit more digging, I can see that it's simply that there are no SMARTS rules in phmodel.txt that match the structure. Looks like Babel's protonation function has the following limitations:; - a limited SMARTS ruleset, giving poor matching and accuracy; - code in phmodel.cpp only able to remove Hs, relying on input or 'addHydrogens' to provide a fully protonated structure. Is that a reasonable assessment of affairs?. Cheers,. Matt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/162#issuecomment-97606018:46,simpl,simply,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/162#issuecomment-97606018,2,['simpl'],['simply']
Usability,"After reading the docs, I realise that in the Python interface all global variables are stuck into openbabel.cvar somehow, but dir(openbabel.cvar) doesn't work. However, accessing openbabel.cvar.obErrorLog works fine, e.g.:. >>> dir(openbabel.cvar.obErrorLog); ['ClearLog', 'GetAuditMessageCount', 'GetDebugMessageCount', 'GetErrorMessageCou; nt', 'GetInfoMessageCount', 'GetMaxLogEntries', 'GetMessageSummary', 'GetMessage; sOfLevel', 'GetOutputLevel', 'GetOutputStream', 'GetWarningMessageCount', 'SetMa; xLogEntries', 'SetOutputLevel', 'SetOutputStream', 'StartErrorWrap', 'StartLoggi; ng', 'StopErrorWrap', 'StopLogging', 'ThrowError', '__class__', '__del__', '__de; lattr__', '__dict__', '__doc__', '__getattr__', '__getattribute__', '__hash__',; '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',; '__setattr__', '__str__', '__swig_destroy__', '__swig_getmethods__', '__swig_set; methods__', '__weakref__', 'this']; >>> pybel.ob.cvar.obErrorLog.StopLogging(). It's possible to rename cvar to something more catchy - I vote for 'globals' (see section 30.3.3). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169:263,Clear,ClearLog,263,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169,1,['Clear'],['ClearLog']
Usability,"Agreed 110% - it should be fine. But I don't see the harm in turning on -fPIC if there's an issue with CMake. I see this patch as a workaround, since there's clearly an issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995714:158,clear,clearly,158,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995714,2,['clear'],['clearly']
Usability,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:405,guid,guide,405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956,2,['guid'],['guide']
Usability,Ah right - it conflicted with #1728. It seemed a simple fix so I used Github's merge conflict tool to fix it. Hopefully it works...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1727#issuecomment-354355339:49,simpl,simple,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1727#issuecomment-354355339,2,['simpl'],['simple']
Usability,"All is clear for now, except for the OBPointGroup::IdentifyPointGroup, which should be added to *.cpp file to create a symbol _ZN9OpenBabel12OBPointGroup18IdentifyPointGroupEv in the shared library. Original comment by: andrey-moscow",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800983:7,clear,clear,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800983,2,['clear'],['clear']
Usability,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:1606,simpl,simple-input-file-scf-geometry-optimization,1606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,2,['simpl'],['simple-input-file-scf-geometry-optimization']
Usability,"Although existing in my smi and fs prepared with 2.3.0, I cannot search for isonitriles. Error was also in 2.2.x. I get:. 0 candidates from fingerprint search phase; Segmentation fault. A simple database might look like this. [C-]#[N+]CCCC(SC[N+]#[C-])SC[N+]#[C-] 1,1-bis(isocyanomethylthio)-4isocyanobutane; CCC(C)(C)[N+]#[C-] 1,1-Dimethylpropylisonitril; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)ethane; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)_ethane; CCCCCCCCCCCCCCCCC([N+]#[C-])C[N+]#[C-] 1,2-diisocyano-octadecane. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1066:188,simpl,simple,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1066,1,['simpl'],['simple']
Usability,"And just to be clear, RDKit doesn't (yet) have this extension. However, it does generate SMILES that require it. Both OB and RDKit will write %100 at the moment in this situation (if it ever occurs), which is incorrect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339630672:15,clear,clear,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339630672,2,['clear'],['clear']
Usability,Another Git skill learned. The only issue is that the commit date was used from the first one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42#issuecomment-29452960:18,learn,learned,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42#issuecomment-29452960,2,['learn'],['learned']
Usability,"Apologies - yes, you're right. I hadn't previously viewed it. We clearly bail out at a certain ring size.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1858#issuecomment-402517016:65,clear,clearly,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1858#issuecomment-402517016,2,['clear'],['clearly']
Usability,"Apologies! learning how SWIG works so i've refactored this commit, i've also updated the test to be stricter on the SMILES; ordering. . valgrind test - no leaks. # Wiswesser Reader Release Notes. The following are sections from Elbert G. Smiths rule book that were used to create; the wln reader. Note that not all chapters are listed here, only the ones where compound; types were introduced. ## Rules fully supported; * Unbranched and Branched Chains; * Systematic Contractions; * Organic Salts; * Benzene Derivatives; * Multisubstituted Benzene Rings; * Benzene Rings in Branching Chains; * Monocyclic Rings; * Bicyclic Rings; * Polycyclic Rings; * Perifused Rings; * Chains of Rings other than Benzene; * Sprio Rings; * Bicyclic Bridged Rings; * Rings with Pseudo Bridges; * Ring Structures with Crossed Bonds and Unbranched Bridges; * Rings of Rings Contraction; * Metallocenes and Catanenes ; * Chelete Compounds; * Ionic Charges, Free Radicals and Isotopes. ## Rules unsupported. * Multipliers; * Ring Contractions and Multipliers; * All Special Problems Rules",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2591:11,learn,learning,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2591,1,['learn'],['learning']
Usability,"As a workaround, could I simply remove the faulty rigid fragments from the rigid-fragments.txt files and get a working (albeit slower) OpenBabel installation?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Geoff Hutchison <notifications@github.com>; Sent: Wednesday, March 25, 2020 3:16:21 PM; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Van Dam, Hubertus <hvandam@bnl.gov>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HUXXSDRYBF3LRQG2MTRJJKALANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103:25,simpl,simply,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103,2,['simpl'],['simply']
Usability,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:503,simpl,simple,503,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,2,['simpl'],['simple']
Usability,"As described at https://github.com/openbabel/enhancement-proposals/blob/master/reactions-as-obmols/reaction-handling.md. I still have some reaction formats left but I'd like to get in a PR now, and get some feedback, as all the tests pass, and the rest will be a bit of a slog. SMILES, RINCHI and RXN all support reactions via OBMols now. I've added an OBReactionFacade class to simplify things. In short, reactions are supported via three attributes, a flag on an OBMol, and two OBPairInteger data objects on an OBAtom, ""rxncomp"" and ""rxnrole"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1836:207,feedback,feedback,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1836,2,"['feedback', 'simpl']","['feedback', 'simplify']"
Usability,"As much as I'd like to fix inchi errors, they made it quite clear they don't want people messing with their code 🙄 I don't believe they've accepted any patches to 1.0.x, but hopefully there will be an open period to comment / question 2.0.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2074#issuecomment-620679340:60,clear,clear,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074#issuecomment-620679340,2,['clear'],['clear']
Usability,"As simple as in title. I was thinking of implementing other GENOPTIONS, like -f, -l in pybel. I think it would be better and more user-friendly when pybel.readfile() would have explicit arguments: pybel.readfile(....., first=None, last=None). Ideas?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/126:3,simpl,simple,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/126,2,"['simpl', 'user-friendly']","['simple', 'user-friendly']"
Usability,"At present it is impossible to change the forcefield from MMFF94, so we cannot perform obconformer on some systems, e.g., borane. In this PR I simply add forcefield as the last argument—use it if passed, otherwise defaulted to MMFF94.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604:143,simpl,simply,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604,2,['simpl'],['simply']
Usability,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:33,clear,clear,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533,2,['clear'],['clear']
Usability,"Being able to control the appearance at display time, for instance via CSS, is a nice idea and plays to the strengths of SVG. But it would be tricky to implement immediately because the code for the depiction of molecules is shared with other formats (e.g. PNG) and by the time it gets SVG specific it is just lines and letters (rather than atoms and bonds) being handled. Additional (virtual) functions in the depiction code with different effects for SVG, PNG, etc I think would be necessary. An alternative available now if the OBMol was being handled in C++ or a scripting language, is to color individual atoms and bonds by attaching an OBPairData object:. OBPairData* dp = new OBPairData;; dp->SetAttribute(""color"");; dp->SetValue(""green"");; pAtom->SetData(dp);; ; I think the Python code would be analogous, but Pybel has no simplified form. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1530#issuecomment-281811244:832,simpl,simplified,832,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1530#issuecomment-281811244,2,['simpl'],['simplified']
Usability,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:19,clear,clearly,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422,2,['clear'],['clearly']
Usability,"Better still would be to store the 'vector3' of coordinates from the first atom in a variable, and then call its distSq method to get the squared distance to the vector3 of the second atom. Also, while we are micro-optimising :-), you could replace your std::min with a basic ""if (newdist < mindist_so_far) mindist_so_dar = newdist;"". Using std::min does a comparison and then an assignment. The simpler ""if statement"" only does the assignment sometimes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466:396,simpl,simpler,396,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466,2,['simpl'],['simpler']
Usability,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:465,simpl,simply,465,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840,2,['simpl'],['simply']
Usability,Canon failure for very simple case of two ions,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166:23,simpl,simple,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166,2,['simpl'],['simple']
Usability,Clear ImplicitHydrogens on multi-fragment cdxml documents.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2697:0,Clear,Clear,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2697,1,['Clear'],['Clear']
Usability,Clear the ifs stream flags in the outformat reader.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/5:0,Clear,Clear,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/5,1,['Clear'],['Clear']
Usability,"Cmake 3.0.0 gives the following warning when compiling Open Babel on OS X:. ```; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. openbabel; ```. To suppress the warning, policy CMP0042 needs to be set to `OLD` or `NEW` in CMakeLists.txt. This commit simply sets CMP0042 to `OLD`, to continue the pre-3.0 behaviour. From reading the cmake documentation, it looks like setting the policy to `NEW` _should_ be fine, because CMakeLists.txt defines `CMAKE_INSTALL_NAME_DIR`, which acts as a manual override to any of the changes in default behaviour caused by the new policy. However, I think sticking with `OLD` for now would be best to maintain backwards compatibility with older versions of Cmake (just like what is already done with CMP0005). More details here:. http://www.cmake.org/cmake/help/v3.0/policy/CMP0042.html; http://www.cmake.org/Wiki/CMake_RPATH_handling; http://www.cmake.org/Wiki/CMake/Policies; http://www.cmake.org/cmake/help/v3.0/prop_tgt/INSTALL_NAME_DIR.html; http://www.cmake.org/cmake/help/v3.0/prop_tgt/MACOSX_RPATH.html",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/85:475,simpl,simply,475,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/85,1,['simpl'],['simply']
Usability,"Confirmed. The two SMILES strings can be interconverted by swapping the order of two substituents (the amine and the amide) while changing the @ to @@, and thus they are identical (remember that swapping substituents inverts chirality). The error appears to be introduced in writing the CAN smiles string. The Clockwise or Anticlockwiseness in the original SMILES string should have been converted to an absolute configuration, and then converted back to Clockwise or Anticlockwise in the CAN smiles. Simply retaining the @ or @@ is incorrect as it is dependent on the order of substituents which is different. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626:501,Simpl,Simply,501,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626,1,['Simpl'],['Simply']
Usability,"Conversion from a Q-Chem z-matrix shows clear problems; on some molecules (likely from a torsional change). The; resulting structure is not anything like the XYZ; cartesian coordinates immediately before the z-matrix. A new test should be created to test the; internal-&gt;cartesian and cartesian-&gt;internal conversion; routines. Ideally, these should be self-consistent, at; least in the internal coordinates presented. Further; testing of this sort may elucidate where the problem; exists. -Geoff. (I also need to post a few test structures which show; this bug.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430:40,clear,clear,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430,1,['clear'],['clear']
Usability,"Currently the documentation (from bond.cpp) for bond orders says:. ""The bond order (i.e., 1 = single, 2 = double... 5 = aromatic)"". The numbers ""1"", ""2"", ... ""5"" should be defined as constants:. #define SINGLE_BOND 1; #define DOUBLE_BOND 2; ...; #define AROMATIC_BOND 5. Also the documentation does not specify clearly the connection between order=5 and flag=OB_AROMATIC_BOND... That leads to misuse of the API, e.g.:. Incorrect: mol.AddBond(atomX, atomY, 1, OB_AROMATIC_BOND); // will not mark atoms as aromatic; Correct: mol.AddBond(atomX, atomY, 5); // why 5???. Suggestion:. Define additional function AddAromaticBond() with same arguments as AddBond() and eliminate order=5. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1136:311,clear,clearly,311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1136,1,['clear'],['clearly']
Usability,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1522:542,simpl,simplify,542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522,1,['simpl'],['simplify']
Usability,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2014:101,learn,learning,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014,1,['learn'],['learning']
Usability,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:233,simpl,simply,233,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,2,['simpl'],['simply']
Usability,"Dear Sir,; Thank you very much for answering and helping me. ; recently, several chemoinformatic tools has been developed to either cluster existing reactions using molecular fingerprint and machinery learning techniques, or produce new reactions for a set of molecules using the concept of generalized reaction rules. these methods are dependant on molecular fingerprints or mol files. as far as I know, the concept of aromaticity is only available in canonical SMILES structure not in molecular fingerprint or mol file. so when we convert an aromatic SMILES to these kind of molecular descriptor, we only consider one tautomer out of all possible structures. that is why I was looking for a function to produce all valence tautomers. I could generate kekule forms by writing the following c++ function:. pair<string,string> getKekulizedSmiles(const vector<string>& newVector, int i); {; string canSmiles;; string kekSmiles;; OBMol mol;; OBConversion conv;; canSmiles = newVector[i];; if (! conv.SetInAndOutFormats(""smi"", ""smi"")); {; cout<<""Formats not available\n"";; }; conv.ReadString(&mol,canSmiles);; conv.SetOptions(""xC"", OBConversion::OUTOPTIONS);; conv.SetOptions(""xk"", OBConversion::OUTOPTIONS);; kekSmiles = conv.WriteString(&mol, true);; return {canSmiles, kekSmiles};; }. though, I still don't know what does '-xk' do. :)). Thanks,; Kiana,",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1840#issuecomment-395316679:201,learn,learning,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1840#issuecomment-395316679,2,['learn'],['learning']
Usability,"Dear sir:. I am an undergraduate student from Dalian University of Technology,China.Our team is working on a program ,we appriciate applying with MMFF94 force field in order to optimize the conformation of; molecule.But unhappy , we are obsessed on the Stretch Bend term,we can't make this term achieve to convergence all the time by Steepest-Descending; Algorithm .we reference to the derivative expression of openbable 2.2.0,but we were defeated again and again,so we appeal for your aid .We appreciate your suggestion on this derivative or any other guidance on solving this energy term.We're looking forward to your reply.; Thanks very much!; Best wishes!; . Sincerely,; Fang Bai. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/828:553,guid,guidance,553,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/828,1,['guid'],['guidance']
Usability,"Discussion on the 'openbabel-discuss' mailing list asked how to get the text id; of an OBAtom; the current approach requires getting the atom's residue to call; OBResidue::GetAtomID(OBAtom*) and passing in the atom's pointer. To simplify; this use case, OBAtom::GetAtomID() is added by this patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1544:229,simpl,simplify,229,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1544,1,['simpl'],['simplify']
Usability,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:957,simpl,simplicity,957,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828,2,['simpl'],['simplicity']
Usability,"Do you want to add a command-line switch to set the seed? This seems like it's a fairly simple way tweak the randomness (e.g., for unit tests).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685:88,simpl,simple,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685,2,['simpl'],['simple']
Usability,"Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:19064,Simpl,Simplify,19064,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"Error reading simple CIF file generated with VESTA with space group ""P 1""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:14,simpl,simple,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,2,['simpl'],['simple']
Usability,"Error: Unable to find 'openbabel\graphsym.h'; openbabel\openbabel-python.i(353) : Error: Unable to find 'openbabel\isomorphism.h'; openbabel\openbabel-python.i(354) : Error: Unable to find 'openbabel\query.h'; openbabel\openbabel-python.i(355) : Error: Unable to find 'openbabel\canon.h'; openbabel\openbabel-python.i(357) : Error: Unable to find 'openbabel\stereo\stereo.h'; openbabel\openbabel-python.i(361) : Error: Unable to find 'openbabel\rotor.h'; openbabel\openbabel-python.i(363) : Error: Unable to find 'openbabel\rotamer.h'; openbabel\openbabel-python.i(364) : Error: Unable to find 'openbabel\spectrophore.h'; openbabel\openbabel-python.i(435) : Error: Unable to find 'openbabel\obiter.h'; openbabel\stereo.i(1) : Error: Unable to find 'openbabel\stereo\tetranonplanar.h'; openbabel\stereo.i(2) : Error: Unable to find 'openbabel\stereo\tetraplanar.h'; openbabel\stereo.i(3) : Error: Unable to find 'openbabel\stereo\tetrahedral.h'; openbabel\stereo.i(4) : Error: Unable to find 'openbabel\stereo\cistrans.h'; openbabel\stereo.i(5) : Error: Unable to find 'openbabel\stereo\squareplanar.h'; openbabel\stereo.i(6) : Error: Unable to find 'openbabel\stereo\bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]. note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. × Encountered error while trying to install package.; ╰─> openbabel. note: This is an issue with the package mentioned above, not pip.; hint: See above for output from the failure.; ```. Installing the source and providing the directories to them doesn't change anything either and it's trying to look in a Linux path for these files. It's not clear what's going on, why is it trying to compile it if binaries are already installed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197:7382,clear,clear,7382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197,2,['clear'],['clear']
Usability,ExtensionTable cleared,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395:15,clear,cleared,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395,2,['clear'],['cleared']
Usability,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1454,simpl,simply,1454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243,2,['simpl'],['simply']
Usability,"Fair enough.; On 15 Mar 2016 2:32 p.m., ""Geoff Hutchison"" notifications@github.com; wrote:. > @baoilleach https://github.com/baoilleach I'm inclined to merge this.; > We can add clear documentation in the installation instructions, but I; > think for most use, it's preferable to have portable binaries than perfect; > speed.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub:; > https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242:178,clear,clear,178,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242,2,['clear'],['clear']
Usability,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:101,simpl,simpler,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574,2,['simpl'],['simpler']
Usability,"Fix for #1731. Changes how atom class information is used in CML. CML doesn't itself provide a way to do this, so we hack it into the atomid. The existing code used a complex method, perhaps because of a belief that the atomid had to be letters followed by a number. Checking the CML spec, this doesn't appear to be the case. It just should be alphanumeric (or also underscore and minus), and unique within the molecule. Given that, there's a very simple alternative; just append _ATOMCLASS to the end of the existing atomid. So what was ""a3"" for atom number 3, now might be a3_4 if that atom had atom class 4.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1746:448,simpl,simple,448,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1746,1,['simpl'],['simple']
Usability,"Fix issue with protonating charged ARG; ; OB was placing a third H on NH1 using a random bond vector. The; AssignBonds, which is suppose to match known protein residue bonding; patterns, was not working because atom names were not stripped of; whitespace. Also, the original pattern in resdata.txt does not match the; convention of the double bond going to NH1 (it has NH2). Then, even if; AssignBonds sets the right bond order, the; PerceivedBonds fragment matching code undoes it, so refined the bond; typer patterns.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504:472,undo,undoes,472,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504,1,['undo'],['undoes']
Usability,Fixed! Now should work in revision 2906 or later. This bug with automatically close unless there's feedback from Noel. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794392:99,feedback,feedback,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794392,2,['feedback'],['feedback']
Usability,"For a molecule with no bond, or no atoms, the various iterators spend a fraction of a second allocating a visit array from 0 to -1 which is 2**32 or so. This effect can be observed for:; obabel -:C -omol; as it visibly pauses after writing the header. The fix is simply to remove the no-op ""return"" to the start of the iterator ctors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1610:219,pause,pauses,219,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1610,2,"['pause', 'simpl']","['pauses', 'simply']"
Usability,"For quite some time, the program no longer is called from the CLI by `openbabel`, but by `obabel`. Surprisingly, calling `obabel -H` still suggested the old form e.g., the call `openbabel -L` to learn about the formats Open Babel is aware. This PR addresses the issue in this ""inner documentation"" of the program.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2307:195,learn,learn,195,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2307,1,['learn'],['learn']
Usability,"For some time, I have intended to remove GetGenericValueDef() from the Open Babel API. This is a convenience function that should never have been added as the user can simply handle this at their end with a function in their own code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448524812:168,simpl,simply,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448524812,2,['simpl'],['simply']
Usability,"From Andrew Dalke:. OBAtom.HtoMethtyl() can dump code to stderr. v3: < -0.28, 0, 0 > v4: < -0.28, 0, 0 >. This is quite clearly a bit of debugging code which; wasn't removed:. cerr << ""v3: "" << v3 << "" v4: "" << v4 << endl;. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056:120,clear,clearly,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056,1,['clear'],['clearly']
Usability,"From Miguel Quiros Olozabal:. Nevertheless, these atoms with more bonds than ""standard organic"" are; still not well represented in many cases. The compulsory brackets that; should be used are usually absent: for example, carbon with more than; four bonds or boron with more than three should be [C] or [B], simply C; or B is not correct. Also the H atoms bonded to such atoms must be; always explicitly indicated. Another example of this is coordinated; water, that should be [M]([OH2])... and, instead of this, appears; usually as [M](O)... (this means coordinated hydroxyl, not coordinated; water). Phosphorus in coordinated phosphines is another example of; usually missing brackets. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/841:307,simpl,simply,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/841,1,['simpl'],['simply']
Usability,"From Miguel Quiros Olozabal:; - When an atom as O, N or S is bonded to a metal and also forms a double; bond to a carbon and thus should be represented as [M]([X]=C...), the; bond is transformed into simple to keep ""standard valency"" of atom X and; this introduces more inaccuracies, for example is quite frequent to find; something like [M](X[C]...), a false trivalent carbon. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/844:200,simpl,simple,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/844,1,['simpl'],['simple']
Usability,"From: Ian Mason; irm2204@yahoo.co.uk; Hi. I'm trying to use OpenBabel to convert reaction files to RXN format. My OS is Windows 2000SP4. If I use the Windows GUI I get an Unhandled Exception error, if I use the command line I get a C++ Runtime Error (and an empty RXN file is produced). No other information is given. It doesn't seem to matter what the inoput format is - I've tried with CDXML and with CML. I have attached a simple CDXML file to use as an input file. Set the output format to RXN and click convert and you will see the error. It will convert it successfully to pretty much any other compatible format, including CML. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691:426,simpl,simple,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691,1,['simpl'],['simple']
Usability,"Gotcha. I'll tell you what - with this info, I'll put together the test; with the testfiles from the original bug report. - Noel. On Mon, 24 Sep 2018 at 13:27, fredrikw <notifications@github.com> wrote:. > Yeah, I know ther are no tests, I did this on my Windows machine at work; > and I'm not in complete agreement with the build system... I'll try to add; > a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make; > sure that all atoms have unique x- and y-positions (that is the real; > problem, the long bonds are just a symptom). Before the change I get the; > molfile (notice the coordinates for the last three atoms):; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > After the change I got:; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUgwxlZxsfb83ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968:378,simpl,simple,378,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968,2,['simpl'],['simple']
Usability,"Great. The ultimate problem is that the openbabel GUI supports either boolean options (uses a checkbox) or options with parameters (uses a textbox), but not a combination of the two. So the GUI right now cannot provide the user a way to choose the three combinations (no ""xw"", ""xw"" with no text, ""xw"" with text). But rather than change the GUI, it's clearer to the user if you just add another option. Regarding (2), it's up to you - I'm not familiar with the use cases. Here is my suggestion:; - no option: default order (presumably this is the order of atoms in the input molecule); - -xw : Sort atoms by atomic number; - -xy 'Al': Al first, then default order; - -xw -xy 'Al': Al first, then sort atoms by atomic number",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/188#issuecomment-225157627:350,clear,clearer,350,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/188#issuecomment-225157627,2,['clear'],['clearer']
Usability,"Great. Your comment is noted and I don't think there is any such documentation.; One more thing to add to the list. If you want to take a stab at it; yourself, it would be much appreciated. On Thu, 13 Sep 2018 at 08:30, Semen Yesylevskyy <notifications@github.com>; wrote:. > This solved the problem, thanks a lot!; > However, I have to admit that this is not intuitive at all. Is there any; > chapter of documentation which describes all the magic, which happens when; > new molecule is constructed?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVCqj5gnS1Em4dSzFTaAE-Joqi9rks5uagmhgaJpZM4WgOWp>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420931906:360,intuit,intuitive,360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420931906,2,['intuit'],['intuitive']
Usability,Haha...nice! Never heard about the term Texas Carbon. ;) Thanks for clearing things up for me!; I guess this issue can be marked as question and closed now if nobody has any other questions about writing SMARTS correctly.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/274#issuecomment-193777076:68,clear,clearing,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274#issuecomment-193777076,2,['clear'],['clearing']
Usability,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:390,guid,guided,390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,1,['guid'],['guided']
Usability,"Hello!. I am calculating energies of subsets of proteins using the OBForceField::AddIntraGroup() functionality. I've discovered that, unexpectedly, pairwise electrostatic and VDW energies are not calculated. Because GetNumElectrostaticPairs() and GetNumVDWPairs() return 0, I believe these interaction pairs are either getting cleared or are not being set in the first place. A fix or workaround would be greatly appreciated. I wrote a small program to demonstrate the problem on PDB-format proteins, selecting the backbone atoms as the intragroup:. - - -. $ obexample minimized.pdb ; ->Energy(false): 699.005; ->E_Bond(false): 26.092; ->E_Angle(false): 66.944; ->E_Torsion(false): 605.969; ->E_OOP(false): 0; ->E_Electrostatic(false): 0; ->E_VDW(false): 0; ->GetNumElectrostaticPairs(): 0; ->GetNumVDWPairs(): 0. - - -. Below is the source code used to produce the above:. - - -. #ifdef WIN32; #define USING_OBDLL; #endif; #include <openbabel/babelconfig.h>; #include <openbabel/base.h>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/forcefield.h>; #ifndef _MSC_VER; #include <unistd.h>; #endif. using namespace std;; using namespace OpenBabel;. string AtomID(OBAtom *atom); {; const OBResidue *residue = atom->GetResidue();; if(residue == NULL) return """";; return residue->GetAtomID(atom);; }. int main(int argc, char **argv); {; // Read in a molecule from argv[1]; OBConversion conversion;; OBFormat *format = conversion.FormatFromExt(argv[1]);; conversion.SetInFormat(format);; ifstream infile(argv[1]);; conversion.SetInStream(&infile);; OBMol molecule;; conversion.Read(&molecule);. // Create a backbone bitmask; OBBitVec backbone(molecule.NumAtoms()+1);; for(size_t i = 1; i < molecule.NumAtoms()+1; ++i); {; OBAtom *a = molecule.GetAtom(i);; if(AtomID(a) == "" N "") { backbone.SetBitOn(i); }; if(AtomID(a) == "" CA "") { backbone.SetBitOn(i); }; if(AtomID(a) == "" C "") { backbone.SetBitOn(i); }; }. // Setup intragroup forcefield; OBForceField *forcefield(O",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1561:327,clear,cleared,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1561,1,['clear'],['cleared']
Usability,"Hello, . I would like to apply in my python script the next function of openbabel to determine the aromaticity: ""Applying a model involves creating an instance of OBAromaticTyper(), and calling AssignAromaticFlags() passing an OBMol as a parameter."". However, after trying to find a clear example, it has been impossible to understand why the output is empty. Here, I copy a simple code that I am using:. > #### Reading the molecule; > mol = pybel.readstring(""smi"", ""CCC(C1)CCC2[n+]1CCC3C2[nH]C4C3CCCC4""); > #### Checking the aromaticity; > [int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]; > #### Adding the aromatic flags; > molmod = openbabel.OBAromaticTyper().AssignAromaticFlags(mol.OBMol). molmod is an empty object while I expected the molecule with aromatic flags. ; What I am doing wrong? . Thank you so much for your help and time!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508:283,clear,clear,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:1291,simpl,simply,1291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337,2,['simpl'],['simply']
Usability,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257:964,guid,guidance,964,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257,1,['guid'],['guidance']
Usability,"Hello,. I discovered the following when i converted some SYBYL; MOL2 files to PDB format:. Excerpt from PDB file:. ATOM 9306 XX UNK 1 5.358 -30.465 37.754; 1.00 0.00; ATOM 9307 XX UNK 1 4.363 -30.911 37.578; 1.00 0.00; ATOM 9695 XX UNK 1 1.781 -27.681 31.783; 1.00 0.00; ATOM 9696 XX UNK 1 1.543 -26.779 31.193; 1.00 0.00; ATOM 10000 H UNK 1 -1.600 -11.612 27.818; 1.00 0.00; ATOM 10001 H UNK 1 -1.108 -10.156 26.898; 1.00 0.00; ATOM 10002 H UNK 1 -2.242 -11.325 26.157; 1.00 0.00. this should state clear what happens, doesn't it?. Thank You,. Kristian Rother; kristian.r@gmx.de. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/408:500,clear,clear,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/408,1,['clear'],['clear']
Usability,"Hello,. Thank you for your response. I am not using homebrew. I am using an; anaconda install of python and all packages are contained within that; install. I used conda-forge to install openbabel v3.1.0 and subsequently; pybel. The error output I sent was from Windows v2004 and I sent that one; because MACOS just said ""segmentation fault"". I figured the Windows output; was a little more useful. Both were generated from the same script. Both; scripts included:; from openbabel import openbabel; from openbabel import pybel; However, there is information I didn't include. These errors come about; after compiling with pyinstaller but the program works before compiling. I; didn't include this information originally because I can reproduce the; errors with the interpreter and simple code. Best,; Mike. On Thu, Apr 15, 2021 at 9:29 PM schluta ***@***.***> wrote:. > I'm guessing that being on mac you installed with homebrew. If that is not; > the case ignore the rest of this.; >; > If so you need to make sure your anaconda python knows about the package.; > You can make your python aware of the other package with something like; > below. You should amend the path below for where homebrew installs packages; > for you. Note that where the packages get symlinked to is fine, like below; > for me.; >; > I want to stress that it is not really recommended to use packages across; > separate python installs. At the very least you should make sure that the; > versions of python are the same.; >; > import syssys.path.append('/usr/local/lib/python3.9/site-packages')from openbabel import openbabelfrom openbabel import pybel; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2357#issuecomment-820843139>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AOVMFGOKTVPSMSDX5MCKQSDTI6HILANCNFSM43AM3UFA>; > .; >. -- ; ______________________________; Dr. Micha",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882:781,simpl,simple,781,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882,2,['simpl'],['simple']
Usability,"Hello,. for a learning algorithm I create SMARTS directly from the SMILES.; In some cases I get the following error message,. *** Open Babel Error in SMARTSError; SMARTS Error:; C2C=CC=CC=2. Whenever there is a bond before the closing ringbond marker Open Babel fails to parse the SMARTS.; If I convert ""C2C=CC=CC=2"" as SMILES to an OBMol, the SMILES parser creates no errors. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/904:14,learn,learning,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/904,1,['learn'],['learning']
Usability,"Here is an implementation of OBMol::CopySubstructure. It copies a substructure of a molecule to another one, and has a bunch of optional parameters that hopefully cover every possible use case (or at least, make it possible for the user to do so). OBMol::NextFragment() already had some of this code; I've taken it out and expanded it, and now NextFragment() just calls this new function. This is needed to implement reactions as OBMols - e.g. if someone wants reagent 1. Also, we really should have it in any case - I've missed it before, and it's not the sort of thing that's simple for the user to throw together. One use case is that it simplifies work with matched pairs, where you are chopping up molecules.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811:578,simpl,simple,578,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811,2,['simpl'],"['simple', 'simplifies']"
Usability,"Here's a simpler example, benzene:; ```; obabel -:C1=CC=CC=C1 -sC1=CC=CC=C1 -osmi; # no match; obabel -:C1=CC=CC=C1 -sc1ccccc1 -osmi; # match; obabel -:C1=CC=CC=C1 -s[#6]1=[#6][#6]=[#6][#6]=[#6]1 -osmi; # no match; ```; I'll chat with others at work about whether this is working as intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306062094:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306062094,2,['simpl'],['simpler']
Usability,Here's a simpler example. Cn1c(C)c(C)n2c1nc1c2c(=O)n(C)c(=O)n1C. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796268:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796268,2,['simpl'],['simpler']
Usability,Here's a simpler test case presumably stemming from the same problem:. <pre>; >obabel -:O[C@@H](C)N -oinchi | obabel -iinchi -osmi -h; C1[C@H](N)(O)[H]1; </pre>,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971,2,['simpl'],['simpler']
Usability,"Here's some code to perform a weighted rotor search. It segfaulted on the first SMILES string I tried. ////////////////////////////////////////////////. int main(int argc,char *argv[]); {; OBForceField* pFF = OBForceField::FindForceField(""MMFF94"");; if (!pFF); {; cout << ""Bail out! Can't find forcefield!"" << endl;; system(""pause"");; return -1;; }; OBOp* pOp = OBOp::FindType(""Gen3D"");; if (!pOp); {; cout << ""Bail out! Can't find Gen3D!"" << endl;; system(""pause"");; return -1;; }. string SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:325,pause,pause,325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,5,['pause'],['pause']
Usability,"Hey Noel,. Hope all is well!. The connection to the H is implicit here, not explicit, isn't it? And I don't think the radical thing is having any effect. Take the following three molecules:. CC(=O)N; CC(=O)[NH]; CC(=O)[NH2]. the query [ND1] matches all of these molecules in Daylight, but only the first in OB. Equally the query [Nh2] (N with 2 implicit H's) matches the first and third molecules in Daylight, but only the first in OB. I agree OB is internally consistent here, it's just not agreeing with Daylight, which is what's giving me headaches as I try to port some old code. Here's the relevant bit from the SMILES manual:. <begin>. 3.4.1 Hydrogens; Hydrogen atoms do not normally need to be specified when writing SMILES for most organic structures. The presence of hydrogens may be specified in three ways: . Implicitly.....for atoms specified without brackets, from normal valence assumptions. Explicitly by count.....inside brackets, by the hydrogen count supplied; zero if unspecified. As explicit atoms.....as [H] atoms. <end>. So while I agree they've not made it very clear, my reading of the second point is that if you specify the H count inside the brackets, you've explicitly specified the implicit H count!. What fun cheminformatics can be!. P. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802030:1085,clear,clear,1085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802030,2,['clear'],['clear']
Usability,"Hey guys, my pypi id is sswamida. If you give me yours, I can add you to the openbabel project on pypi. (and mcs07 does not appear to be a pypi user). As far as naming the package, it seems that there are really two issues at play.; 1. We want to be clear in our google searches, so people don't get mislead to think the pypi page is openbabel proper.; 2. We also want to follow python pypi conventions. For reason #2, it is ideal to call the package ""openbabel"", for reason #1 we might want to call it ""openbabel-python"". . As a compromise, I recommend calling it ""openbabel"" but improving the readme to include a link to openbabel proper website. The readme file will be included on the website, and any users that find it will be immediately redirected to the main website if desired. If we go with this option, I need to add some of you as maintainers/owners of the pypi openbabel project so you can push updates there. What do you guys think?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33240755:250,clear,clear,250,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33240755,2,['clear'],['clear']
Usability,"Hi @cmanion. Thanks for these fixes, additions. It's a good idea to put commits addressing separate issues in different pull requests / branches so that they can be easily reviewed separately. For more info, see https://guides.github.com/introduction/flow/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1608#issuecomment-319610744:220,guid,guides,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1608#issuecomment-319610744,2,['guid'],['guides']
Usability,"Hi @fredrikw , thanks for the hint regarding `otool -l`. Interestingly, I wasn't able to find any `LC_RPATH` commands in the dylib images, even if `otool -L` shows that libs are linked with `@rpath` definition. In my case this affects libcairo, which is linked as `@rpath/./libcairo.2.dylib`. Of course, without an `@rpath` defined the lib can't be found and hence not loaded (leading to loss of functionality, for which I actually wanted to create another issue). Does this qualify as a bug in the build/linking process?. I guess a user wanting to compile openbabel with python bindings from source on OSX, using non-system python (like anaconda), now only has the option to manually fix library paths using `otool -L`. I wonder whether it's possible to do this during the build process. For example, if e.g. `-DPYTHON_LIBRARY` or `-DCAIRO_LIBRARY` are set, the linker could be instructed to use the provided path name instead of the install_name to link the library (maybe after checking if the install_name is valid). Alternatively, one could post-process the various libraries using `install_name_tool` to fix the path of dynamically linked objects. Clearly, the first option is more elegant.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037:1154,Clear,Clearly,1154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037,1,['Clear'],['Clearly']
Usability,"Hi @timvdm, apart from a logical error in my own code (which I need to think about), the OB code still had trouble with the following pairs:. ```; *=Nc1[nH]cc2-c(c1)c1ccccc1n2,*=Nc1ncc2c(c1)c1ccccc1[nH]2; *=Nc1ccc(cc1)NC(Nc1ccccc1)=S,*=Nc1ccc(cc1)N=C(Nc1ccccc1)S; *=Nc1cccc(c1)NC(N*)=S,*=Nc1cccc(c1)NC(=N*)S; *=Nc1ccc(cc1)NC(=N*)S,*=Nc1ccc(cc1)NC(N*)=S; ```; It also had trouble with protonated nitrogens, which hopefully is a simple atom-typing issue:; ```; *N=CC(c1[nH]ncn1)=CN=[N+](c1ccccc1)*,*N=CC(c1n[nH]cn1)=CN=[N+](c1ccccc1)*; *NC(c1ccc[n+](c1)*)=O,*N=C(c1ccc[n+](c1)*)O; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059:427,simpl,simple,427,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059,2,['simpl'],['simple']
Usability,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:487,simpl,simply,487,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,2,['simpl'],['simply']
Usability,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/926:60,simpl,simply,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2134:909,simpl,simply,909,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134,1,['simpl'],['simply']
Usability,"Hi guys, i'm trying to follow this papeline on git hub: ; https://github.com/seanharr11/phytebyte. When i arrive to point four this is the result : . % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (60) SSL certificate problem: certificate has expired; More details here: https://curl.se/docs/sslcerts.html. curl failed to verify the legitimacy of the server and therefore could not; establish a secure connection to it. To learn more about this situation and; how to fix it, please visit the web page mentioned above. How can i resolve it ? i don't want to use the site without protection.... . Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:530,learn,learn,530,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,1,['learn'],['learn']
Usability,Hi please can anyone guide me on how to pip install openbabel in a virtual environment on a ubuntu system. I keep getting the same error mentioned in this issue. I am trying to do this with a python 3.10 virtual environment on ubuntu 22.04,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554:21,guid,guide,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554,2,['guid'],['guide']
Usability,"Hi there,. I have a problem with the bs format (ball-and-stick for use by the xbs code). Open Babel (when converting from xyz) outputs something like this:. #Set no. 17 (Final); 70; C 8.8148 -0.9294 -0.1838 2 5 18; C 9.4460 -0.0258 -1.1217 3 6 1; C 8.4029 0.7228 -1.8030 9 4 2; C 7.1295 0.2884 -1.2796 3 12 5; C 7.3839 -0.7293 -0.2737 4 1 15; C 10.6458 0.6065 -0.7784 2 7 20; C 10.8451 2.0056 -1.0869 8 6 23; C 9.8437 2.7253 -1.7385 9 30 7; C 8.6071 2.0768 -2.1060 10 3 8. But this doesn't correspond to the bs file format, which is defined here:; https://manpages.ubuntu.com/manpages/xenial/man1/xbs.1.html. and looks like this:. In a simple case, a file ch4.bs could look like this:. atom C 0.000 0.000 0.000; atom H 1.155 1.155 1.155; atom H -1.155 -1.155 1.155; atom H 1.155 -1.155 -1.155; atom H -1.155 1.155 -1.155. spec C 1.000 0.7; spec H 0.700 1.00. bonds C C 0.000 4.000 0.109 1.00; bonds C H 0.000 3.400 0.109 1.00; bonds H H 0.000 2.800 0.109 1.00. This sets the coordinates in the format; atom species x y z; and how to draw each atomic species, in the format; spec name radius color; and how to draw bonds, in the format bonds name1 name2 min-length max-length radius color. Any help much appreciated!. Many thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576:636,simpl,simple,636,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576,1,['simpl'],['simple']
Usability,"Hi there,. I tried to convert a Tyrosine from PDB to MOL by adding hydrogens at pH 7. I observed that one hydrogen is always added to the tyrosine hydroxyl at a given position (let's call it 'A') when there is only this residue in the PDB file. However, when the PDB file contains other residues and a ligand near the tyrosine, the hydrogen is always placed at another position (let's call it 'B'). At this position, the hydrogen points out to the ligand oxygen, which would favor a hydrogen bond. The same would not happen with the hydrogen placed at position A. However, when I tried to convert the entire PDB file, the hydrogen position at the hydroxyl changed to position A again. So, I wonder what may be happening with the hydrogen addition under the hoods. I thought the hydrogen placement would be biased by potential hydrogen bonds when I converted that given tyrosine with nearby residues and ligands. But I got a different result when I used the entire PDB file. Note that the nearby residues/ligands are a subset of the entire PDB, so I think the conversion shouldn't have changed. . So, I wonder if Open Babel considers local pH or nearby charges and hydrogens to properly define the hydrogens. I tried to find some posts or issues at this repo to learn more about how hydrogens are placed by Open Babel, but I couldn't find any clues explaining why this unexpected situation happened. Would you have any ideas? Does Open Babel consider local pH, nearby atoms, charges, and hydrogen bonds to properly define hydrogen placement?. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2542:1261,learn,learn,1261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2542,1,['learn'],['learn']
Usability,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/242:494,simpl,simple,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242,1,['simpl'],['simple']
Usability,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2308:306,simpl,simple,306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308,2,['simpl'],"['simple', 'simply']"
Usability,"Hi, thank you I have succeed installed the 2.3.9, but there is another problem that I can not use pybel in python after install that. Maybe cause the wrong cmake arrgs I made, or others. Any suggestion and guide for installing pybel?; Thanks~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78367179:206,guid,guide,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78367179,2,['guid'],['guide']
Usability,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1316:234,simpl,simplest,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316,1,['simpl'],['simplest']
Usability,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/965:474,simpl,simple,474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965,1,['simpl'],['simple']
Usability,"Hi,. I've installed OpenBabel 3.1.1 as per the documentation using the Windows installer downloaded from this repo. I can't seem to find the files that the docs seem to indicate should be installed in /Program Files/OpenBabel-3.1.1/. openbabel-3.dll is there, but the lib for linking is missing, as are the header files. I've pulled the header files from the repo and created a babelconfig.h from examples I found (it was missing in the source I pulled down). I'm using cmake in VS 2022 and I get the expected errors when linking fails, e.g.:. error LNK2019: unresolved external symbol ""public: __cdecl OpenBabel::OBMol::OBMol(void)"" (??0OBMol@OpenBabel@@QEAA@XZ) referenced in function ""private: bool __cdecl Application::initSphereInstances(void)"" (?initSphereInstances@Application@@AEAA_NXZ); error LNK2019: unresolved external symbol ""public: virtual __cdecl OpenBabel::OBMol::~OBMol(void)"" (??1OBMol@OpenBabel@@UEAA@XZ) referenced in function ""private: bool __cdecl Application::initSphereInstances(void)"" (?initSphereInstances@Application@@AEAA_NXZ); . I'm sure I'm missing something simple; it's been a while since I've used c++/cmake, so I'm a bit rusty. Any help or advice will be greatly appreciated!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2716:1090,simpl,simple,1090,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2716,1,['simpl'],['simple']
Usability,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/994:298,clear,clearing,298,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994,3,"['Clear', 'clear']","['ClearBond', 'clearing']"
Usability,"Hi,. When I load with the OpenBabel library the attached ; molecule (.cml) file, it sometimes says that the ; bonds have order 18 or 28. The problem doesn't happen everytime (perhaps 50% of ; times). When it happens, it is followed several ; seconds later by a segfault, though I don't know if ; it happens in our own program -Kalzium) or in the OB ; libraries themselves. With other (simpler) .cml files, the problem doesn't ; happen at all. As you can see in the attached .cml file, the bonds ; in that molecule only have order 1 or 2. Perhaps we're stupid and the probem lies in the way ; we use OB to load the molecule file?. Here are relevant parts of the Kalzium code:. code for loading the .cml file:. ---------. OpenBabel::OBMol* OpenBabel2Wrapper::readMolecule( ; const QString& filename ); {; 	OpenBabel::OBConversion Conv;; 	OpenBabel::OBFormat *inFormat = NULL;. 	//the OB2 Molecule; 	OpenBabel::OBMol *mol = new OpenBabel::OBMol;; 	std::ifstream inFileStream( ; filename.toLatin1() );; 	if ( !inFileStream ) {; 		QMessageBox::warning( 0, ; i18n( ""Problem while opening the file"" ),; 				i18n( ""Cannot open ; the specified file."" ) );; 		return 0;; 	}. 	//find out which format the file has...; 	inFormat = Conv.FormatFromExt( ; filename.toLatin1() );; 	Conv.SetInAndOutFormats( inFormat,inFormat );; 	Conv.Read( mol, &inFileStream );. 	kDebug() << QString::fromLatin1( ; mol->GetFormula().c_str() ) << "" (Weight: "" << ; mol->GetMolWt() << "", Title: ""<< mol->GetTitle() ; << "")"" << endl;. 	return mol;; }. --------. Code for determining the order of bonds:. --------. 	int order;; 	if( bond->IsSingle() ) order = 1;; 	else if( bond->IsDouble() ) order = 2;; 	else if( bond->IsTriple() ) order = 3;; 	else; 	{; 		order = bond->GetBondOrder();; 		if( order > 12 ) // probably a bogus ; molecule file!; 			// according to the ; element.txt file in OB,; 			// no element can have more ; than 12 bonds; 		{; 			order = 1;; 			kDebug()<<""Umm, some bond ; pretends to have ""; 				""order ""<<bond->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/561:385,simpl,simpler,385,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561,1,['simpl'],['simpler']
Usability,"Hi,; I would also be very interested in the suggested solution to provide the env var OB_RANDOM_SEED. I this change usable at all at this point?; thanks",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-908044690:116,usab,usable,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-908044690,2,['usab'],['usable']
Usability,"Hi,; I would need you to be a bit more specific. Are you experiencing a different problem now? You did not find the molecules responsible for the ""could not setup force field"" error? It is a lot better if you keep the different problems in different issues, if nothing else to help people arriving to the issues in the future.; So, using the ""-e"" flag, could you find out which molecules gave the original error?; Regarding the ""distortion"", please create a new issue, and be specific as to how you notice the distortion, be clear on what is the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101:525,clear,clear,525,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101,2,['clear'],['clear']
Usability,"Hi. I like to distinguish between Carboxylic acids and ; Carboxylic esters: . Based on ; http://www.daylight.com/support/faq/smarts_examples.fa; q.html#META. the SMARTS for Carboxylic acid (with proton) (-oic acid, ; COOH) should be [CX3](=O)[OX2H1]. With this code I get for lMatches = 0. // start sample code	; OBSmartsPattern* sp = new OBSmartsPattern; ; std::istringstream is(""CC(=O)O"");; OBMol mol(SMI,MOL2);; vector<vector<int> >	mlist;; long lMatches = -1;. if (sp->Init(""[CX3](=O)[OX2H1]"")); {; mol.Clear();; OBFileFormat::ReadMolecule(is, mol);; if (! mol.Empty()) ; {; sp->Match(mol);; mlist = sp->GetMapList();; lMatches = mlist.size();; } ; } ; // end sample code	. If I change ; if (sp->Init(""[CX3](=O)[OX2H1]"")); to; if (sp->Init(""[CX3](=O)[OX1]"")); I get for lMatches = 1. For this test I used Microsoft Visual Studio.net 2003 ; C++ Compiler. I had no problem with the sample ; application smartstest. . Thank you for your work!! . Best regards. Ivo; silvestri@isitech.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456:507,Clear,Clear,507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456,1,['Clear'],['Clear']
Usability,"Hydrogens in MOL/SDF files are handled inconsistently when written as SMILES. The attached SDF file has three records, all simple methane, but two instances have a deuterium atom, and the third has a simple hydrogen atom. These should all three produce a correct SMILES for methane, but the third one instead produces ""[CH]"", which is just plain wrong. $ babel ~/tmp/babel_bug.sdf -o smi; C[2H] deuteromethane; C[2H] deuteromethane; [CH] plain methane. The interpretation in the SMILES writer seems to be, ""If any explicit hydrogens are present, then ALL hydrogens for this heavy atom are fully specified."" But this can't be correct, because it means that deuterium and tritium are an exception. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743:123,simpl,simple,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743,2,['simpl'],['simple']
Usability,"I agree - if one file and no symlinks are possible, that would be simplest.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/137#issuecomment-90202917:66,simpl,simplest,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/137#issuecomment-90202917,2,['simpl'],['simplest']
Usability,"I also see only 2 molecules converted on 32bit Windows (with the development code). But the problem is data dependent and intermittent. Apparently irrelevant changes during debugging can make the problem go away and the read position in the input file apparently moves erratically. So an over-writing or alignment problem looks probable. The header is binary but its interpretation in C++ makes assumptions about how a C++ struct is laid out - clearly not a good idea. I have in the past written a version with the header in ASCII but did not proceed because correcting another bug seemed to solve the problem. . It seems likely that the bug is a more general I/O on the header and not confined to 64bit systems. I'll try revising the header reading and writing code. In the longer term I would like fastsearch files to be portable binary in Andrew Dalke's FPB format, if it ever comes to fruition. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337:444,clear,clearly,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337,2,['clear'],['clearly']
Usability,"I am also facing this issue. EDIT:; ### **Installation Guide Ubuntu 20.04**; Since I spent 4+ hours getting this to install, I thought I would write a small guide to save anyone else time. I am installing on Ubuntu 20.04, Python 3.6 with a miniconda3 environment for Jupyter. I am sure this will also be applicable to Ubuntu 18. Before starting:; ```!conda install -c anaconda swig --yes```; 1. Download openbabel-3.1.1-source.tar.bz2 and extract; 2. cd openbabel-3.1.1; 3. Use the following cmake command: ``` cmake ../openbabel-3.1.1 -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=~/miniconda3 -DPYTHON_INCLUDE_DIR=~/miniconda3/include/python3.6m -DCMAKE_LIBRARY_PATH=~/miniconda3/lib -DSWIG_DIR=~/miniconda3/share/swig/4.0.2/ -DSWIG_EXECUTABLE=~/miniconda3/bin/swig -DPYTHON_LIBRARY=~/miniconda3/lib/libpython3.6m.so -DCMAKE_BUILD_TYPE=DEBUG ```; 4. ```make -j8``` (or however many cores you have); 5. sudo make install",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2271#issuecomment-790051759:55,Guid,Guide,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271#issuecomment-790051759,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"I am aware of the pybel package that has nothing to do with openbabel. I have not installed that pybel package. I have only installed openbabel from conda-forge. Openbabel from conda-forge comes with the correct pybel. . The program I’m writing works when launching with Python in the conda environment. When I compile with pyinstaller in the same conda environment and then start the binary (again in the same environment) I get the error I posted. Mike. Sent from my iPhone. > On Apr 16, 2021, at 9:24 PM, schluta ***@***.***> wrote:; > ; > ﻿; > I am not familiar with the conda forge package so I do not know how much help I will be.; > ; > When you say you installed openbabel and subsequently pybel do you mean this?; > If so then that package is unrelated. The pybel module you want is included in the openbabel package (If installing manually its usually just a flag to include the python bindings). You could verify you have pybel by going to the openbabel install location and looking for the pybel.py script. I think I saw somewhere that having both pybel modules caused problems for some people.; > ; > I'm having trouble understanding when you say ""these errors come about after compiling with pyinstaller but the program works before compiling"" you then say ""but I can reproduce the errors with the interpreter and simple code""; so does the script work on its own or not?; > ; > If you can find pybel once and it works, then that suggests to me that whenever it is not you might be using a different virtual environment where it is not installed. Do you know if the pyinstaller is running in the same virtual environment that your conda is using?; > ; > You saying it is not working for Windows or MacOS seems to suggest there may be an issue with the conda-forge repo/install process. However, you say that it works sometimes? So I am not sure.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821762664:1328,simpl,simple,1328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821762664,2,['simpl'],['simple']
Usability,"I am faced with a set of strange SMART query failures across different molecules and I wonder if I am encountering something like [this](https://github.com/openbabel/openbabel/issues/1034) or it is a new bug entirely (?). Specifically, I am trying to match just the atoms of the backbone with: `[NH0,NH1,NH2,NR5]~[C,CR5]-[CX3](=O)`. (That is a Nitrogen at the start of a chain (NH2), a Nitrogen somewhere along the chain (NH0, NH1), a Nitrogen on the ring of a PROline aminoacid, followed by a carbon (or carbon of a PROline aminoacid, followed by the final carbon of the main chain atoms). I have two molecules that I am trying this query on, a simple one (1GCN) and a more complex one (6QWY). This query matches ALL residues on 1GCN but skips residues 63,72,83,84 (**zero based index used here**) . The residues that are there are CYS, ARG, LEU, SER. So, it is not even the same residue it skips. When I am quering the atoms of the residues that are skipped (and I would expect that the query would have picked up), they are not any different than others that have produced a positive match. Their **types** are still ""Nam, C3, C2, O2"". Am I missing something here or could this be some sort of a bug?. ** Environment Information:**. Open Babel version: 2.3.2; Operating system and version: Linux (Ubuntu 18.04)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156:646,simpl,simple,646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156,1,['simpl'],['simple']
Usability,I am facing a similar issue with `xyz` format. The OpenBabel GUI doesn't include `xyz` in the ----INPUT FORMAT---- list. . I simply downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. . I'm not sure how to troubleshoot this. Any ideas?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1722#issuecomment-872355598:125,simpl,simply,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1722#issuecomment-872355598,2,['simpl'],['simply']
Usability,"I am not familiar with the conda forge package so I do not know how much help I will be. When you say you installed openbabel and subsequently pybel do you mean [this](https://anaconda.org/bioconda/pybel)?; If so then that package is unrelated. The pybel module you want is included in the openbabel package (If installing manually its usually just a flag to include the python bindings). You could verify you have pybel by going to the openbabel install location and looking for the pybel.py script. I think I saw somewhere that having both pybel modules caused problems for some people. I'm having trouble understanding when you say ""these errors come about after compiling with pyinstaller but the program works before compiling"" you then say ""but I can reproduce the errors with the interpreter and simple code""; so does the script work on its own or not?. If you can find pybel once and it works, then that suggests to me that whenever it is not you might be using a different virtual environment where it is not installed. Do you know if the pyinstaller is running in the same virtual environment that your conda is using?. You saying it is not working for Windows or MacOS seems to suggest there may be an issue with the conda-forge repo/install process. However, you say that it works sometimes? So I am not sure.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821743959:803,simpl,simple,803,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821743959,2,['simpl'],['simple']
Usability,"I am trying to automate a reaction scheme with molecular fragments. So, I have two fragments in one smiles string i.e. CCCCO.CCCC(=O) I would like to connect them with an integer so that I can get an ester i.e. CCCCO%11.CCCC(%11)(=O) Reusing digits is not possible here. I would like to automate this for more than 100 connections. i'd like to increment the number of connections as I make them. In certain applications, not having more than 100 is problematic with the systems I consider. Maybe there is another way to do this, but the simplest right now (with my existing code and thought process) would be to have more than 2 digits available for these kinds of connections. Any suggestions? And thanks for the super-quick reply. Original comment by: sgarturo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811237:537,simpl,simplest,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811237,2,['simpl'],['simplest']
Usability,"I am trying to output CML corresponding to the resonance form of carbon monoxide, [C]=O; As it is not necessarily clear whether hydrogen are implicit or explicit I have added hydrogenCount=""0"" to the carbon to say explicitly that the carbon has no hydrogens. OpenBabel however appears to ignore hydrogenCount=""0"" implicitly adding two hydrogens. On a related note OpenBabel's handling of CML's hydrogenCount attribute when explicit hydrogen are present is technically wrong.; If you have an atom with hydrogenCount=""2"" and one explicit hydrogen the number of hydrogens bonded tor the atom should according to the CML spec still actually be 2 , not 3. Taken from http://cml.sourceforge.net/schema/cmlCore/HTMLDOCS/cmlCore.pdf :; ""hydrogenCount[el.atom.hydrogenCount]; The total number of hydrogen atoms bonded to an atom.; The total number of hydrogen atoms bonded to an atom, whether explicitly included; as atoms or not. It is an error to have hydrogen count less than the explicit hydrogen; count. There is no default value and no assumptions about hydrogen Count can be; made if it is not given."". I have attached a zip file with a CML file demonstrating both cases. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/990:114,clear,clear,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/990,1,['clear'],['clear']
Usability,"I am using Open Babel 2.4.0 and I got the same errors. . 1. I was doing a very similar task, splitting a multi-model PDB file into n PDB files ""model-n.pdb"". The first line in ""model-1.pdb"" is ""MODEL 1"", but it does not have a ""ENDMDL"" keyword. The rest of the output PDB files do not have the MODEL/ENDMDL keywords. . 2. I also tried to split the multi-model PDB file into SDF files. For the 2nd to nth output SDF files, the end of the file looks like this: . > ```; > M END; > > <ODEL>; > 46; > ; > $$$$; > ```. Where ""ODEL"" should be ""MODEL"". . 3. I tried to read the multiple-model PDB file and write multiple-model PDB simply by ""obabel <input-multi-model.pdb> -O <output-multi-model.pdb>"". In the output file, the ""MODEL"" line is duplicated for the first structure: . > ```; > MODEL 1; > MODEL 1; > COMPND input.pdb; > AUTHOR GENERATED BY OPEN BABEL 2.4.0; > ATOM 1 C1 UNL d 1 -12.057 -47.098 31.474 1.00 0.00 C; > ```. I feel there might be a minor issue with reading/writing lines with the ""MODEL"" keyword. The rest of the output file looks fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1986#issuecomment-892383570:624,simpl,simply,624,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1986#issuecomment-892383570,2,['simpl'],['simply']
Usability,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1160:1422,clear,clear,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160,1,['clear'],['clear']
Usability,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159:133,simpl,simply,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159,1,['simpl'],['simply']
Usability,"I appreciate your fast reply. As far as writing my own bond perception code, I track bonds using distance cutoffs during simulation and from there I build contact matrices. So I essentially know what the topology of each molecule is, but I still preferred to use SMILES strings as there are many tools for visualization. Do you know if it is possible for me to instead somehow pass my system's contact matrix to openbabel and have it generate the SMILES string? Or am I simply better off building my own visualization tools for my tracked contact matrices?. Thank you for the help!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1808#issuecomment-377671090:470,simpl,simply,470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1808#issuecomment-377671090,2,['simpl'],['simply']
Usability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:154,feedback,feedback,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,2,['feedback'],['feedback']
Usability,"I bumped in this bug report while trying to understand why I couldn't generate the proper protonation state even for simple molecules. I've tried to identify the source of the problem with the version I'm using, v2.3.2 (Ubuntu).; I hope I'm not missing something trivial in my tests... ; Hopefully it can be useful to debugging, I apologize for the long post (and the horrible formatting... blame Markdown).; I've tried the test case Noel reported, and while the charge issue seems to be fixed, protonation state and atom typing are still wrong. Besides, I found the following behavior to be rather puzzling:; <pre><code>obabel -:""OC(=O)c1ccccc1"" -omol2 --gen3D -p 7.4 -O obabel_firstpass.mol2; obabel -imol2 obabel_firstpass.mol2 -omol2 -p 7.4 -O obabel_secondpass.mol2; </code></pre>The molecule obabel_secondpass.mol2 has correct typing and charge (~-1).; The following code replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.Cor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:117,simpl,simple,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,2,['simpl'],['simple']
Usability,"I can confirm this is an issue. A simple way to reproduce this is `obabel -:""C[CH2]"" -O out.smi -h`. It outputs the implicit version.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141:34,simpl,simple,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141,2,['simpl'],['simple']
Usability,"I clear the comments, but leave reference to VASP module in the license header. MDFF is not my program, so it is difficult to me to say the reason of having new format.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/91#issuecomment-54785881:2,clear,clear,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/91#issuecomment-54785881,2,['clear'],['clear']
Usability,"I confirm that it works this way :). However do you plan to fix the bug itself in the near future? In other words, when and how could I be informed that fixed and stable code is available?. In the mean time, I don't mind designing a special-case in my pipeline, but it would make life much simpler to consider those peptides like any other... . In the meantime, thanks for this little ""hack"" avoiding the problem :). Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285:290,simpl,simpler,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285,2,['simpl'],['simpler']
Usability,"I don't think the install location is a big deal but moving to a package; would be a major (API) change. But isn't there a middle ground, e.g. a; directory for pybelassets or so?. I don't know how significant is ""breaks webGL for IPython <2.0."" - the OB; philosophy has been to provide backwards compatability as much as possible. On 6 June 2014 10:49, Matt Swain notifications@github.com wrote:. > One option to keep this more contained could be to change pybel from a; > module to a package — i.e. a directory called ""pybel"" that contains an; > _init_.py file. Then you can add supplementary files or subdirectories; > like ""static"" or ""js"" without polluting the main python site-packages; > directory.; > ; > In terms of the python code, it would be possible to keep the change; > transparent to the user. You could just put it all the code in _init_.py,; > or separate it out into multiple python files and use imports in _init_.py; > to define the interface.; > ; > The downside to this would be that you lose the simplicity of just having; > pybel as a single file. But with imolecule.min.js being added anyway,; > having a pybel directory containing everything might be better than having; > disparate files.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-45352532:1019,simpl,simplicity,1019,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-45352532,2,['simpl'],['simplicity']
Usability,"I don't think we're going to fix this easily. My suggestion is that people either need to do what you advise (add formats/*.o) or try Cmake. If that's OK with you, I'm going to mark this as closed. I'd love to have better support with Cygwin and MinGW, but we don't seem to get much feedback. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780072:283,feedback,feedback,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780072,2,['feedback'],['feedback']
Usability,"I downloaded and compiled open babel 2.1.1 on Apr 4 and the check utility returned the messages in the attached file. The program ran OK with some simple SMILES, sdf, and mol2 examples. I'm using RHEL 4 (2.6.9-67.0.7.ELsmp) on an HP xw4600 workstation. Thanks,; David Moreland; davemoreland@idscbiotechnetwork.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750:147,simpl,simple,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750,1,['simpl'],['simple']
Usability,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:80,Clear,Clear,80,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['Clear'],['Clear']
Usability,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:10,simpl,simple,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659,2,['simpl'],['simple']
Usability,"I get a segmentation fault when computing SMILES after deleting an atom from a simple molecule. I am using openbabel 2.3.2, python 2.7. import openbabel; obc = openbabel.OBConversion(); obc.SetInAndOutFormats('smi', 'smi'); mol = openbabel.OBMol(); obc.ReadString(mol, 'CC1=C(C)C(C(=C(N1)C)C)C'); mol.DeleteAtom(mol.GetAtom(1)); obc.WriteString(mol); ---Segmentation fault-------. My current workaround is to delete the bonds to the atom I want to delete, then split the components. . Reported by: mtrsky. Original Ticket: [openbabel/bugs/857](https://sourceforge.net/p/openbabel/bugs/857)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1237:79,simpl,simple,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1237,1,['simpl'],['simple']
Usability,"I got a ""grid not read"" error when trying to read a .cube file as from obprobe program. could it be something wrong with the OBConversion? Please help. OBConversion conv1;; OBFormat *format_grid_in = conv1.FormatFromExt("".cube"");; OBFormat *format_grid_out = conv1.FormatFromExt("".cube"");; ifstream ifs1;; ifs1.open(""954_site_37_0.000000.cube"");. OBMol mol;; mol.Clear();. if (!conv1.Read(&mol, &ifs1)){; cerr<<""grid not read\n"";; exit(-1);; }; OBGridData* gd;; gd = (OpenBabel::OBGridData*)mol.GetData(24);. Reported by: yongjinxu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/826:363,Clear,Clear,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/826,1,['Clear'],['Clear']
Usability,"I had some plans for eliminating GetSSSR - can you find me some of the call-tree for those? What is calling FindSmallestRing?. There's a fairly simple strategy to find ring closures - you do a bounded breadth-first search from a particular atom. If you haven't found your way back to the atom after X bonds, then you're probably not in a ring. The catch is for big macrocycles, but after discussion with a few people:; - X = 14 should be sufficient for real aromatics; - X = 20 should be more than sufficient for most cases",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347043185:144,simpl,simple,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347043185,2,['simpl'],['simple']
Usability,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1330:737,clear,cleared,737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330,1,['clear'],['cleared']
Usability,"I have a sdf file containing 31000 ligands from a database called CMNPD; ![Screenshot 2024-08-22 115041](https://github.com/user-attachments/assets/c5b43fb4-2d99-4b06-8a20-13e798209b1a); . I want to perform energy minimization of the ligands before proceeding for virtual screening.; I am using Open babel on linux terminal to do so. The command I used is, ; obminimize -ff MMFF94 -sd CMNPD-export.sdf > target.sdf. Which ran successfully a while, but exited once an error was encountered, . ""**S E T T I N G U P C A L C U L A T I O N S. SETTING UP BOND CALCULATIONS...; COULD NOT FIND PARAMETERS FOR BOND 1-4 (IDX)...; obminimize: could not setup force field**."". Can you please guide me how to solve the issue? Or what could've gone wrong?; Is there any way to skip the problematic molecules for which force field cannot be generated?; Also, how can I determine up to which molecule the command ran successfully?. Thanks in advance.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719:680,guid,guide,680,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719,1,['guid'],['guide']
Usability,"I have also hit into this issue while I was looking at 3D structures of nerve gases and insecticides. Here is a simpler example, using the SMILES of methamidophos:. obabel -:""O=P(OC)(SC)N"" -omol --gen3d -h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1883#issuecomment-424259443:112,simpl,simpler,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1883#issuecomment-424259443,2,['simpl'],['simpler']
Usability,"I have an sdf file with 3D structures, some of which have carbon ; atoms with undefined stereochemistry (""3"" for atom stereo parity ; in the atom block). However, upon conversion to smiles strings ; these atoms are treated as if they had a defined stereo chemistry, ; resulting in the corresponding atoms [C@H] or [C@@H]. This is ; especially troublesome, since there are other stereocenters ; present in the molecules which *are* defined (so no simple ; removal of ""@""s possible). ; Got the same results with versions 1.100.2 and 2.0.0b5. Christian Laggner. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484:446,simpl,simple,446,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484,1,['simpl'],['simple']
Usability,I have been having trouble converting z-matrices to XYZ or other formats. I have included a simple example which does not work. This file converts properly in babel-1.6. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808:92,simpl,simple,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808,1,['simpl'],['simple']
Usability,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:1268,Clear,Clear,1268,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['Clear'],['Clear']
Usability,"I have compiled openbabel-2.3.0 from source on my linux box (Debian wheezy) following the instructions on you website and can confirm that the molecular coordinates from my g98 file are parsed correctly with 2.3.0. That is, I have compiled openbabel on the exact same computer with the exact same config that was crashing with openbabel 2.3.1. It clearly appears that I uncovered a regression. By the way, you library does exactly what I need with a nice API so that I am very interested in seeing it fixed!. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204:347,clear,clearly,347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204,2,['clear'],['clearly']
Usability,"I have obtained the attached CIF file for Prussian Blue directly from the journal website PR Bueno, et al., J. Phys. Chem. C, 2008, 111(34), 13264-71. The IUCr CIF test site confirms that both its basic and full structural information are without error. However, when I attempt a conversion under Windows 2003 using the most current OpenBabel 2.2.0 (converting to CIF - in order to use the simplest conversion - or anything else for that matter), I get the following report: ; =============================; *** Open Babel Warning in OpenBabel::CIFFormat::ReadMolecule; Problems reading a CIF file: no structure found !; 0 molecules converted; ============================; I am no expert in CIF - could someone advise how to correct the file? Why is Babel having a problem?; ; I actually wish to put the structure into Jmol, which also rejects the CIF file with ""Error reading file at line 5: String index out of range: -31 .... type mol"". LesG. lesg@users.sourceforge.net. . Reported by: lesg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/814:390,simpl,simplest,390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/814,1,['simpl'],['simplest']
Usability,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:153,simpl,simple,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572,2,['simpl'],['simple']
Usability,"I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. ```shell; (common) C:\Users\Liu.D.H>pip install -U openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Using cached https://pypi.tuna.tsinghua.edu.cn/packages/9d/3f/f08f5d1422d74ed0e1e612870b343bfcc26313bdf9efec9165c3ea4b3ae2/openbabel-3.1.1.1.tar.gz (82 kB); Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Command errored out with exit status 1:; command: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' bdist_wheel -d 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-wheel-k092nuj6'; cwd: C:\Users\Liu.D.H\AppData\Local\Temp\pip-install-ngq7bdyo\openbabel\; Complete output (15 lines):; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:251,simpl,simple,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,2,['simpl'],['simple']
Usability,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:18,simpl,simply,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935,2,['simpl'],['simply']
Usability,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:444,simpl,simpler,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380,2,['simpl'],['simpler']
Usability,"I know a little about C++ programming but almost nothing about chemistry (level high school only), would it be possible to have a simple example with corresponding 2 expected result depending on ""-c"" presence?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388568261:130,simpl,simple,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388568261,2,['simpl'],['simple']
Usability,"I like the two-pass approach, since it's simpler. Is this something we can revisit -- I think it addresses a few other bugs on here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169:41,simpl,simpler,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169,2,['simpl'],['simpler']
Usability,"I managed to fix the memory issues in my local working copy of the trunk. OBMol::Clear() now completes fine too. Here is the output of diff:. ~~~~~~~~~; Index: src/formats/xtcformat.cpp; ===================================================================; --- src/formats/xtcformat.cpp	(revision 5041); +++ src/formats/xtcformat.cpp	(working copy); @@ -184,11 +184,10 @@; ; // Convert positions from single to double precision and convert from; // nm to A; - std::vector<double> confs;; - confs.resize(natoms * 3);; + double* confs=new double [natoms * 3];; for (int i=0; i < natoms * 3; ++i) // unroll??; - confs[i] = static_cast<double>(10.0 * floatCoord.at(i));; -; +	 confs[i] = static_cast<double>(10.0 * floatCoord.at(i));; + ; vconf.push_back(&confs[0]);; }; ~~~~~~~~~. I don't have the permissions to commit this though. Original comment by: zetadin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339#issuecomment-281804860:81,Clear,Clear,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339#issuecomment-281804860,1,['Clear'],['Clear']
Usability,"I mean that at the moment users cannot control the seed of PRNG, which leads to irreproducible results. . ---. I believe this can be simplified into the following CML file:. ```xml; <?xml version=""1.0""?>; <cml xmlns=""http://www.xml-cml.org/schema"">; <name>ethylene</name>; <molecule>; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""0.0""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""1.3""/>; </atomArray>; <bondArray>; <bond id=""b1"" atomRefs2=""a1 a2"" order=""2""/>; </bondArray>; </molecule>; </cml>; ```. Here the carbon atoms are aligned on the *z*-axis.; The *z* coordinates of the added hydrogens (e.g., `obabel C2H4.cml -o xyz -h`) seem to be reproducible, but *x* and *y* are not. For acetylene, the coordinates of H are deterministic, independently of rotation.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942:133,simpl,simplified,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942,2,['simpl'],['simplified']
Usability,"I partially agree. I see your point about not relying on perceived data once you've made a modification. (Although even there ... what, exactly, invalidates perceived data? It's not clear at all.). On the other hand, getting a segfault for code that looks perfectly reasonable is always bad. Was it reasonable for me to guess that doing a SMARTS match for ""[Fe]"" was going to use the (invalidated) LSSR to recompute the aromaticity of every atom? It cost me a couple days to track this down. (The real code was much more complex than the example posted above ... the atom.Delete() was far, far removed in both time and space from the pattern.Match() call.). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803484:182,clear,clear,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803484,2,['clear'],['clear']
Usability,I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. Please let me know if for some reason this is not acceptable and what I can do to fix it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898:29,simpl,simpler,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898,2,['simpl'],['simpler']
Usability,"I released Open Babel 2.0 in 2005, and v3.0 was released in 2019. That's 14 years of API compatibility. One reason I *intentionally* added the version number to the pkg-config file was to signal a strong backwards-incompatible change. One should not just make a simple patch to switch a pkg-config arrangement. My guess is that whenever 4.0 comes out, the 100 projects (or whatever) will similarly need to make updates - and possibly significant ones. I don't have a problem with switching to `openbabel.pc` but frankly you, or any other package maintainer shouldn't just assume that projects will be compatible with another major version change by tinkering with the `pkg-config` or cmake files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415:262,simpl,simple,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415,2,['simpl'],['simple']
Usability,"I see no problem moving to (signed) int unless we can find an example of a string being used here. It's an API change, but we're in the process of making several at the moment, so now's the time and it sounds like it's necessary. We should make sure to add a test case to make it clear that this is the desired behaviour. By the way, in your Python, you might prefer to use the triple quote ("""""") for multi-line strings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121:280,clear,clear,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121,2,['clear'],['clear']
Usability,"I should add that it seems to work with ASCII for whatever reason. (Or maybe it just shows a collection of molecules as well? I can't tell because it's ASCII). I think this would be a very useful addition. My use case is automatically converting markdown files with embedded reaction SMILES into HTML (which means converting the SMILES strings to images). I had to go with RDKit instead for this application, but I love OpenBabel's simplicity. I would be very happy to migrate if this ever gets fixed. OpenBabel works very well for single molecules. (Additionally, using reaction SMARTS like RDKit does is arguably even better as it allows for R groups and searching over reactions using R groups). If you could tell me what the relevant classes / files would be I could take a look and see if I can get it fixed and submit a PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2306#issuecomment-736733682:432,simpl,simplicity,432,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2306#issuecomment-736733682,2,['simpl'],['simplicity']
Usability,I simply don't know enough about the details of the canonical numbering to debug this myself. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/833#issuecomment-281794102:2,simpl,simply,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/833#issuecomment-281794102,2,['simpl'],['simply']
Usability,"I started to convert your `.sdf` test files into `.pdb` by `obabel -isdf <ligand_name>.sdf -opdb -O <ligand_name>.pdb` with Open Babel (version 3.1.0 in Linux Debian, I suggest you check if you equally may update to this) and displayed them pairwise in an elder installation of Jmol (14.6.4_2016.11.05). Only the conversion about `PEMETREXED_1.sdb` yielded a reasonable display of the `.pdb` with different atom colors for C, H, N, O. You know that Open Babel may read and write `.sdf` and `.pdb` files. I knew there are multiple ways an `.xyz` or a `.pdb` file may be written and occasionally -- just for the sake of consistency -- I use Open Babel to «correct» these prior to further processing. Thanks to your test files, I learn that this apparently equally is the case for `.sdf` files and I thus issued conversions in pattern of `obabel -isdf NATEGLINIDE_1.sdf -osdf -O NATEGLINIDE_1_rewritten.sdf` for both `NATEGLINIDE` and `PEMETREXED`, and then converted these by e.g., `obabel -isdf NATEGLINIDE_1_rewritten.sdf -opdb NATEGLINIDE_1_rewritten.pdb`. The visualizations by Jmol then look considerably better. Could such an edit equally be helpful for you?. The obvious question is about the difference between the original and the modified `.sdf` files. According to a difference view with `vimdiff` (an extension of the vim editor) or [meld](http://meldmerge.org/) (version 3.20.2) is that both the number of columns in the upper part of the connectivity table increase, as well as the connectivities are in part defined differently. Archive `format_problem.zip` contains the files mentioned and some screen photos taken along to address the issue. [format_problem.zip](https://github.com/openbabel/openbabel/files/5673926/format_problem.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516:727,learn,learn,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516,2,['learn'],['learn']
Usability,"I started with the middle one: c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1. It has one undefined tetrahedral stereocenter. Conversion to InChI gave:; #0 :Wrong 0D stereo descriptor(s): #1; Omitted undefined stereo. I was setting the parity of the center to INCHI_PARITY_UNKNOWN. The docs aren't very clear. I also tried INCHI_PARITY_NONE. Same error. In the end, I've changed the code to not create a tetrahedral stereocenter at all, if the stereochemistry isn't specified. With this change, conversion gives:. #0 :Omitted undefined stereo. I don't think it produce a warning about this if it doesn't let you specify that it is unspecified. :-). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/945#issuecomment-281796050:296,clear,clear,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/945#issuecomment-281796050,2,['clear'],['clear']
Usability,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:77,feedback,feedback,77,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706,2,['feedback'],['feedback']
Usability,I think it's more basic than this: the molecule is simply deleted.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077:51,simpl,simply,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077,2,['simpl'],['simply']
Usability,"I think the main plan would be to add `coordgen` as an optional compile and when available, it's used in preference to the `mcdlutil.cpp` code. The main hook is in `ops/gen2d.cpp` right now, which simply calls `generateDiagram()`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2015#issuecomment-522060171:197,simpl,simply,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2015#issuecomment-522060171,2,['simpl'],['simply']
Usability,"I think we're pretty clear up-front that SystematicRotorSearch does exactly what it says - systematically generate all possible rotamers. Even for a small molecule, this is exponential, roughly 3^n for n rotatable bonds. I'm not sure I'd suggest it for anything beyond 8-10 rotatable bonds. (We've done it, but yes, it takes a lot of memory.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170:21,clear,clear,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170,2,['clear'],['clear']
Usability,"I think you outline a need for a fast search ""server"" tool. Basically, you'd load the index and then be able to send searches to it. There's probably some minimal syntax with a ""reload"" to reload the index and ""terminate"" to quit the process. It can be much simpler than obabel because it's single-purpose.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469:258,simpl,simpler,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469,2,['simpl'],['simpler']
Usability,"I think you should rethink your approach a bit. You will not be able to properly do a force field minimization with a fragment. Better to add a dummy atom or something if that is what you are after. Or create the 3D structure with hydrogens and then replace the proper hydrogens. Since you seem to be working in python, there should be no need to go via the xyz file, you have all the coordinates on the molecule object so use that.; I would do something like:; 1. Create molecule from SMILES, possibly with attachment points as deuteriums or similar.; 2. Create 3D structure, probably a simple --gen3D would suffice since you are going to add substituents that would change the 3D-structure anyway.; 3. Add your attachments; 4. Optionally, minimize the resulting structure. This is a rather common procedure, so you should be able to find plenty of example codes by googling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371:588,simpl,simple,588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371,2,['simpl'],['simple']
Usability,"I tried to compile the Python bindings according to [the guidance](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). The compilation was completed, but no Python binding was generated:. ```shell; sudo apt -y build-dep openbabel; git clone https://github.com/openbabel/openbabel.git openbabel.git && cd openbabel.git; mkdir build && cd $_; cmake .. -DBUILD_GUI=ON -DPYTHON_BINDINGS=ON; make -j 44; sudo make install; export PYTHONPATH=/usr/local/lib:$PYTHONPATH; ```; Then I checked as follows:. ```shell; werner@X10DAi:~$ python; Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ImportError: cannot import name 'openbabel' from 'openbabel' (unknown location); >>> . werner@X10DAi:~$ sudo find /usr/local -name ""pybel*""; werner@X10DAi:~$ ; ```; How to fix this problem?. Regards,; Zhao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673:57,guid,guidance,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673,1,['guid'],['guidance']
Usability,I use debian. The cmake command I simple copied from the cmake site of yours.; cmake -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel ~/src/openbabel; I also tried using =/home/$USR$/build/openbabel; but even in the new repository 4514 the same error message keeps coming back. Original comment by: *anonymous,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800641:34,simpl,simple,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800641,2,['simpl'],['simple']
Usability,"I use the perl module of OpenBabel 2.0.2 and I; experiment the problem of memory leak when I work with; sdf files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I; have created an object of this class, the result is; that it leaves data in memory after closing the; subprogram. And if I don't use this class, the memory; after calling the subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Reported by: oligoelemento",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565:1410,Clear,Clear,1410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565,2,['Clear'],['Clear']
Usability,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:564,Undo,Undo,564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['Undo'],['Undo']
Usability,"I was actually just looking at it. While I agree that the depiction looks better, with something like this, I always check stereochemistry from ChemDraw:; From mol:; ![screen shot 2018-02-20 at 4 29 06 pm](https://user-images.githubusercontent.com/41128/36450223-33941bee-165b-11e8-93aa-e021e45636b4.png). Current code (clearly weird, but 'S'):; ![screen shot 2018-02-20 at 4 29 30 pm](https://user-images.githubusercontent.com/41128/36450238-4115e18a-165b-11e8-9923-a434424a091a.png). Your patch:; ![screen shot 2018-02-20 at 4 30 06 pm](https://user-images.githubusercontent.com/41128/36450272-57e70ccc-165b-11e8-83ed-fa638111bb0d.png). Now, I agree that the way the wedge is drawn is just plain wrong. And it seems like there's an inversion in the coordinate scheme. But I'm not going to merge this unless you can convince me that your code is producing the correct stereochemistry.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367126965:320,clear,clearly,320,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367126965,2,['clear'],['clearly']
Usability,"I was having some problems with the sklearn package and even reported an issue in their github:; https://github.com/scikit-learn/scikit-learn/issues/10196. Later we found out that the source of the problem was actually importing pybel, when I installed the `pip` version of openbabel.; If I install openbabel with `conda install -c openbabel openbabel` everything works properly. I'm not sure what's the problem, but it seems like a problem on the openbabel side (specifically de `pip` version).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702:123,learn,learn,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702,2,['learn'],['learn']
Usability,"I was looking at the fold code.. I think the problem is that you're folding to *larger* bit sizes, not *smaller* which was the intent of folding. That's clearly undefined behavior. Patch coming..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335045077:153,clear,clearly,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335045077,2,['clear'],['clearly']
Usability,"I was pretty sure that was the case, but just checking. We already have one; crazy function where GetTorsionAngle is radians and SetTorsionAngle is; degrees. Just to keep you on your toes. On 5 December 2013 20:25, andersx notifications@github.com wrote:. > No, the old code converts to degrees by getting an angle from the; > vectorAngle function (which returns in degrees).; > ; > I wrote it this way to make it clear that the return value is in degrees.; > (the vectorAngle function uses this notation as well); > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/49#issuecomment-29934291; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934851:414,clear,clear,414,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934851,2,['clear'],['clear']
Usability,"I would probably suggest 3 for now. Clearly I should have added a bool return value for the method - and I'm happy to add to the ABI for the v3.1 release. Otherwise, I think the patch looks great - and clearly handling ~17k molecules with limited issues is a profound step forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611150310:36,Clear,Clearly,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611150310,3,"['Clear', 'clear']","['Clearly', 'clearly']"
Usability,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1285,clear,clear,1285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389,2,['clear'],['clear']
Usability,"I'd be a bit happier if the comments were fixed so it wasn't quite so clear this came from the VASP format (e.g., references to POSCAR). Is there a reason for a new file format for your program?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/91#issuecomment-54498465:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/91#issuecomment-54498465,2,['clear'],['clear']
Usability,"I'd like to see more output options with Obgen. It's a really handy tool for me but I feel I am limited by the formatting of the output... ; - Whenever I use obgen to convert SMILES strings --> .sdf files; I notice that the the automatically generated ID for the smiles string is not completely unique. I run a script directing obgen to process 100 files at a time in 200 parallel sessions - as a result if all sessions start at the same time I see block repeats of the same ID e.g. 'OpenBabel08061310513D' ; I would love to see a simple implementation of a unique ID generator - or perhaps even a way to read in names. . Energy minimization steps and other forcefield parameters would also be nice to specify asides from default settings. The sdf output file is not correctly formatted, the molecule data sections contain a space at the start of the file, which makes it uninterpretable for consistent conversion to other file formats. I spend most of my time editing dodgy output files with lengthy and inelegant sed/awk/perl commands. Reported by: mattycoze. Original Ticket: [openbabel/feature-requests/167](https://sourceforge.net/p/openbabel/feature-requests/167)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1535:531,simpl,simple,531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1535,1,['simpl'],['simple']
Usability,"I'll take down the other page so. On 28 January 2014 10:57, Matt Swain notifications@github.com wrote:. > OK I left the package name as 'openbabel' and updated the README to; > explain more clearly that this is just the python bindings along with a; > link to the main Open Babel site.; > ; > Here's what it will look like (on the test PyPI site):; > https://testpypi.python.org/pypi/openbabel; > ; > ## ; > ; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/65#issuecomment-33468494; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586:190,clear,clearly,190,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586,2,['clear'],['clearly']
Usability,I'm OK with this merge. Any complaints for this version. It seems like a clear step forward over the current code.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-24183132:73,clear,clear,73,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-24183132,2,['clear'],['clear']
Usability,"I'm closing this - please try to submit pull requests from a branch:; https://guides.github.com/introduction/flow/. When you're making a pull request from your master (like here), I can't isolate the changes for this particular change. I *think* they're all in #1739, correct?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1597#issuecomment-354309128:78,guid,guides,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1597#issuecomment-354309128,2,['guid'],['guides']
Usability,"I'm closing this. The best (simple) option on Mac is to install Anaconda, then `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1503#issuecomment-625455088:28,simpl,simple,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1503#issuecomment-625455088,2,['simpl'],['simple']
Usability,"I'm encountering a problem involving the OBMol::StripSalts() method. I've included some code and an example input file to describe the problem:. File 'inp.smi' is the molecule input file. This file contains only one line describing the smiles of an input molecule composed of two disconnected fragments (therefore the dot):. CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O TIM|OVS2573256. This smiles describes a molecule composed of two disconnected fragments, of which the first (the largest fragment) does not contain a ring, while the second does. The code itself is given here:. OBConversion conv;; conv.SetInFormat(conv.FormatFromExt(""/Users/hans/Temp/inp.smi""));; OBMol* m = new OBMol();; m->Clear();; (void) conv.ReadFile(m, ""/Users/hans/Temp/inp.smi"");; m->StripSalts();; std::vector<OpenBabel::OBRing*> r(m->GetSSSR());; int s(0);; unsigned int nrings(r.size());; for (unsigned int i = 0; i < nrings; ++i); {; if (r[i]->IsAromatic()) s += +0.2244435;; }; exit(0);. When running this program, I'm getting a segmentation fault. Removing the OBMol::StripSalts() method resolves the problem, as well as modifying the input file by removing either the first of second fragment (it works fine on either of these). Analysing the problems has shown that the OBMol::StripSalts() method is correctly removing the smallest fragment (the second part of the input smiles, and which contains a ring), keeping only the first part which contains no rings. However, it seems that the OBMol::GetSSSR() method, which is called on the following line, still detects the presence of rings, and this is not correct. As a consequence, the program crashes when calling the OBRing::IsAromatic() method, since the OBRing pointer is pointing to a ring that does not exists anymore... Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776:684,Clear,Clear,684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776,1,['Clear'],['Clear']
Usability,"I'm glad I can help. For more information on the problem and a snippet which reproduces de bug, check the issue I posted in the scikit-learn GitHub.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347869795:135,learn,learn,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347869795,2,['learn'],['learn']
Usability,"I'm using OpenBabel to perfrom substructure search in my own library. For this I'm converting my molecular structures (stored in Selection class) to OBMol using the following code:; ```; void Selection::to_obmol(OpenBabel::OBMol &mol) const; {; mol.Clear();. map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<size();++i){; auto& at = atom(i);. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(at.element_number);; oba->SetPartialCharge(at.charge);; oba->SetVector(10.0*x(i),10.0*y(i),10.0*z(i));. // Create new residue if needed; if(reslist.count(at.resid)==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(at.resid);; obr->SetChain(at.chain);; reslist[at.resid] = obr;; }. reslist[at.resid]->AddAtom(oba);; reslist[at.resid]->SetAtomID(oba,at.name);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();; ; mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }; ```. Obtained OBMol seems to be correct and consistent - it is written normally to files, reports correct number of bonds, etc. However when I'm trying to use it in substructure search it fails:; ```. void Selection::find_mapping(const Selection sel); {; OpenBabel::OBMol src,sample;; to_obmol(src);; ; //------------------------------; // (1) Variant with conversion ; sel.to_obmol(sample);; //------------------------------. //------------------------------; // (2) Variant with reading the file directly; OpenBabel::OBConversion conv;; conv.ReadFile(&sample,""sample.pdb"");; //------------------------------. OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""found "" << maps.size() << "" mappings"" << std::endl;. delete mapper;; delete query;; }. ```. If variant (2) is ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884:249,Clear,Clear,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884,1,['Clear'],['Clear']
Usability,"I've been thinkking about your last comment for a while. This a difference between Python and C++. In Python, nothing is destroyed so long as you kept a reference. In C++, everything is typically destroyed once the container is destroyed (this is the typical design decision or else memory leaks will be common). So I think this behaviour is not unexpected once you accept that the Python bindings are simply wrappers around a C++ library.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317240956:402,simpl,simply,402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317240956,2,['simpl'],['simply']
Usability,"I've just installed the mac binary version 2.1.1, and so far all attempts to run the program generate a set of LoadFormatFiles errors. I've tried several files, going from cml to pdb or pdb to cml, and I've tried both direct command-line invocation and running via iBabel. This might be an installer problem, a system config problem, or simple user error. os version: osX 10.4.11; python version: 2.3.5; babel version: 2.1.1 via mac binary installer pkg. typical error message (this one from iBabel, but command-line is the same). computer:~ me$ /usr/local/bin/babel -icml '/Users/me/Documents/web_downloads/1UD0.pdb' -ocml '/Users/me/Desktop/outputfile.cml' ; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cdxmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlreactlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/pubchem.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/xmlformat.so did not load properly; babel: cannot read input format!. Am attaching a typical pdb file that fails to convert. Reported by: eingersoll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744:337,simpl,simple,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744,1,['simpl'],['simple']
Usability,"I've just updated the Java bindings to be equivalent with the Python bindings, but I get the following errors. I've tried changing the %import to %include in openbabel-java.i but it just swaps one set of errors for another and I simply don't understand the problem in the first place:. $ javac *.java; OBMol.java:569: cannot find symbol; symbol : class OBBitVec; location: class OBMol; public void FindLargestFragment(OBBitVec frag) {; ^; OBRing.java:43: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public void set_pathset(OBBitVec value) {; ^; OBRing.java:47: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public OBBitVec get_pathset() {; ^; OBRing.java:59: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public OBRing(vectorInt path, OBBitVec set) {; ^; OBMolRingIter.java:64: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; public void set_pathset(OBBitVec value) {; ^; OBMolRingIter.java:68: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; public OBBitVec get_pathset() {; ^; OBResidueData.java:63: cannot find symbol; symbol : class OBBitVec; location: class OBResidueData; public boolean AssignBonds(OBMol arg0, OBBitVec arg1) {; ^; OBSmartsPattern.java:99: cannot find symbol; symbol : class OBBitVec; location: class OBSmartsPattern; public boolean RestrictedMatch(OBMol mol, OBBitVec bv, boolean single) {; ^; OBSmartsPattern.java:103: cannot find symbol; symbol : class OBBitVec; location: class OBSmartsPattern; public boolean RestrictedMatch(OBMol mol, OBBitVec bv) {; ^; OBUnitCell.java:60: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; public void SetSpaceGroup(SpaceGroup sg) {; ^; OBUnitCell.java:104: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; public SpaceGroup GetSpaceGroup() {; ^; OBUnitCell.java:125: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; public matrix3x3 G",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:229,simpl,simply,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['simpl'],['simply']
Usability,"If ""folding"" is requested for fingerprints from smaller to larger; bit sizes, simply extend the vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658:78,simpl,simply,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658,1,['simpl'],['simply']
Usability,"If I were you @dkoes, I would undo the last commit and rebase the branch on master.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-530862051:30,undo,undo,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-530862051,2,['undo'],['undo']
Usability,"If PkgConfig is not available then we cannot find Cairo, but this should; fail gracefully so that systems without Cario can simply disbale options.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/6:124,simpl,simply,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/6,1,['simpl'],['simply']
Usability,"If an SD File contains a <NAME> field with more than one line, OpenBabel produces invalid SD Files and SMILES files on output. The attached SDF (""methane.sdf"") has such a name. Test it as:. babel methane.sdf -o sdf; babel methane.sdf -o smi. It's not clear whether this should be considered a bug in the output modules, or the input module, and it boils down to the question: Is a name allowed to have multiple lines? If ""yes"", then the bug is in the output modules. If ""no"", then the input SDF reader should reject, or better yet, ignore multi-line names. Multi-line names are typically due to the 80-character restriction on line length in an SDF; very long names have to be broken into two lines. My suggestion is to allow them on input. On output, suppress any name that has multiple lines. You can write it in the SDF body, but not in the SDF header part. You have to drop it altogether for SMILES. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766:251,clear,clear,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766,1,['clear'],['clear']
Usability,"If the atom currently being visited in a path through the atoms can; both close a ring back to the first atom, and can also proceed; to a different atom, and the bond enumerator returns the closing; bond first, then the other path was omitted. That is because after; the path was marked as closed and the ring added to the fingerprint; bit set, the closure is not cleared. When the next bond is visited,; the path is not added because it still appears to be closed. In order for the bit to be missed altogether, this problem must; occur in both directions along the path, so the situation is somewhat; rare. See bug #206",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/223:364,clear,cleared,364,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/223,1,['clear'],['cleared']
Usability,"If you check the spec, you'll see that it's not a bug. That's simply how the format works. Marked as pending. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1002#issuecomment-281796972:62,simpl,simply,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1002#issuecomment-281796972,2,['simpl'],['simply']
Usability,"If you start with a simple molecule, e.g. methane, or ethane, or water, you will only set a small number of bits. These should help you to work it out. Note that for most applications the exact order of bits is not important (e.g. calculating Tanimoto similarities), so long as you don't mix bit vectors with different orders.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-531505526:20,simpl,simple,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-531505526,2,['simpl'],['simple']
Usability,"If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request. Please create a completely new branch for *each* change and use `git cherry-pick` to grab only the specific changes you want, e.g. https://guides.github.com/introduction/flow/. I'm sorry to be picky, but I'd like to merge the obthermo changes and *not* the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612:260,guid,guides,260,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612,2,['guid'],['guides']
Usability,"In mol2format.cpp line 46:; return ""http://www.tripos.com/custResources/mol2Files/"";. URL is now invalid due to Tripos changing their; website. The following 2 URLs now point to the; specification, pdf and HTML page respectivley. http://www.tripos.com/data/support/mol2.pdf; http://www.tripos.com/index.php?family=modules,SimplePage,,,&page=sup_mol2&s=0. Reported by: nickengland",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/468:322,Simpl,SimplePage,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468,1,['Simpl'],['SimplePage']
Usability,"In my opinion it looks much clearer .make2D() than .draw(show=False, update=True). ; It should be more efficient(I didn't time it) as there is much more code and checks in the draw function.; So I would add it :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360256427:28,clear,clearer,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360256427,2,['clear'],['clearer']
Usability,"In slide 4 of https://www.slideshare.net/NextMoveSoftware/building-on-sand-standard-inchis-on-nonstandard-molfiles, @johnmay shows that Open Babel is not reading the ""atomic mass delta"" in Mol files correctly. This value is one way of specifying the isotopic mass. . The correct way to read this is whatever BioVIA draw is doing. Presumably @johnmay has already fixed this in CDK (?) and we can steal, I mean study and learn from, his approach.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1769:419,learn,learn,419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1769,1,['learn'],['learn']
Usability,"In the VASP format, frequency parsing was done until tokenization; returned less than two elements. However, the list of displacements may; be closed with a section such as the following:. ```; Finite differences POTIM= 2.000000000000000E-002; LATTYP: Found a simple tetragonal cell.; ALAT = 12.7378929000; C/A-ratio = 2.5701183985. Lattice vectors:; ```. that would not break from the frequency-parsing loop and keep parsing; nonexisting data, eventually leading to a crash. Instead of breaking the loop on 'less than two tokens', we check whether; the header contains one of `f/i=` or `f`, if it does not, we break; the loop.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/101:260,simpl,simple,260,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/101,1,['simpl'],['simple']
Usability,"In this highly simplified case, I would expect the output to be just one line, C=COC=C, both with and without the -c flag. In the general case, the line returned with the -c option must be a member of the set of lines which are returned without the -c option. Also, your prior patch has gotten mangled by the markdown. Is the only change to reverse the sense of the 'if' test? If so, doing that causes the 'make test' test suite to fail, but without a useful error message.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506:15,simpl,simplified,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506,2,['simpl'],['simplified']
Usability,Is BitGrid usable ? hbtypes.txt is missing for test. lshyamal AT yahoo DOT com. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423:11,usab,usable,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423,1,['usab'],['usable']
Usability,"Is `bind` necessary at all? It seems that what it is used for the criteria in `std::replace_if` is simply equality. In such case, `std::replace` can be used in place of `std::replace_if`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2001#issuecomment-850394706:99,simpl,simply,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2001#issuecomment-850394706,2,['simpl'],['simply']
Usability,"Is it time to think about making Eigen a requirement? We get a lot of bug; reports from people who don't have it and are wondering why they are; missing certain features. Alternatively we could beef up the output of; Cmake to make it clear at the very end what's been found and the; consequences. On 3 March 2016 at 05:50, Geoff Hutchison notifications@github.com wrote:. > ---; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/openbabel/openbabel/pull/271; > Commit Summary; > - Only use distance geometry method if EIGEN is available. Fixes #270.; > ; > File Changes; > - _M_ src/ops/gen3d.cpp; > https://github.com/openbabel/openbabel/pull/271/files#diff-0 (4); > ; > Patch Links:; > - https://github.com/openbabel/openbabel/pull/271.patch; > - https://github.com/openbabel/openbabel/pull/271.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/271.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/271#issuecomment-191649847:234,clear,clear,234,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/271#issuecomment-191649847,2,['clear'],['clear']
Usability,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:149,simpl,simply,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723,2,['simpl'],['simply']
Usability,"It appears the root error is:. ```; 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; 8701>(compiler file 'msc1.cpp', line 1411); 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; 8721>Please choose the Technical Support command on the Visual C++ ; 8731> Help menu, or open the Technical Support help file for more information; 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; ```. I'm not sure much can be done when the error message is that the compiler cannot handle the file. The best advice is probably to just have it target python 3.5-3.7 and drop python 2.7 support, which will cause condo-forge to use Visual Studio 14.0 (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135:294,simpl,simplifying,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135,2,['simpl'],['simplifying']
Usability,"It is expected that packagers will make their own arrangements. It's trivial for them (a copy command). Builders will need to add the directory to PYTHONPATH, etc. Design decisions take place in the open on openbabel-devel. If you look back through the archive, as well as bug reports on the bindings especially related to new versions of MacOS, it will hopefully be clear why we made this choice. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802860:367,clear,clear,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802860,2,['clear'],['clear']
Usability,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:154,Guid,Guide,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766,1,['Guid'],['Guide']
Usability,"It turns out that the part of the InChI writer that handles the stereo assumes that AtomIds are simply AtomIdxs-1, but this is not true in general, and can lead to an incorrect stereo layer. The fix is to properly convert from AtomIds to AtomIdxs. Although this only affects 11 molecules in ChEMBL when converting straight from SMI to InChI (and so wouldn't have been noticed before), it was already causing my second RInChI test case to fail (a test case taken from the RInChI docs). My guess is that it must be copying the molecule when generating the shared pointer, thus rearranging either the Ids or Idxs. To be honest, I'm not 100% convinced that we need AtomIds - I must talk to Tim about this sometime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1652:96,simpl,simply,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1652,1,['simpl'],['simply']
Usability,"It's a bug (nothing should break the build), but without further feedback or the ability to reproduce, we'll have to mark as closed for now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2033#issuecomment-542647090:65,feedback,feedback,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033#issuecomment-542647090,2,['feedback'],['feedback']
Usability,"It's a bug, but a documentation bug. The function does not do what it says it does. It simply checks to see whether one of a limited number of atom types in the molecule returns true when asked are they chiral. . In short, this function should be removed unless someone writes code to work out whether a molecule is chiral.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1809#issuecomment-380783583:87,simpl,simply,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1809#issuecomment-380783583,2,['simpl'],['simply']
Usability,"It's a subtle point, but I disagree that we are interpreting the SMILES differently - we both read the same molecule. The real culprit here is any operation that's sensitive to explicit vs. implicit Hs, such as the use of this Dn notation. Anything like this is sensitive to the treatment of Hs by a particular toolkit, and I think is just a bad idea from the get go. To be honest I'm not a SMARTS guru, so...; (1) Could you spell out a specific example where D is useful, like the primary amine?; (2) I'll post something on my blog to get some feedback from people who may actually know what they are talking about. Regarding the X/v bug, I wouldn't hold my breath. That code is quite complex, and we are currently preparing for a release. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802038:545,feedback,feedback,545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802038,2,['feedback'],['feedback']
Usability,"It's just an oversight. We would welcome support for it. It appears to be clearly documented at:; https://www.chemaxon.com/marvin-archive/5_3_0/marvin/help/formats/mrv-doc.html. If you need any help or guidance, let us know here or on the openbabel-devel list.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1685#issuecomment-343106604:74,clear,clearly,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1685#issuecomment-343106604,4,"['clear', 'guid']","['clearly', 'guidance']"
Usability,It's still not clear why you can't reuse digits. In your example CCCCO%11.CCCC(%11)(=O) you could reuse %11 after this point. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811239:15,clear,clear,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811239,2,['clear'],['clear']
Usability,"Ive been converting pdb structures for use in autodock vina using obabel. . I get this error in autodock vina ; Parse error on line 2444 in file ""receptor_4.pdbqt"": Unknown or inappropriate tag. when I check this line it says ROOT. Out of curiosity I tried just deleting that line and it immediately flags up the following lines instead. The format of the file appears correct and when I used obabel to convert small molecules from the smiles the system has no issue with it. this is the ; line I used for the conversion ; obabel receptor_3.pdb -O receptor_4.pdbqt -h -gen3D . I have tried lots of variations and using different structures etc. but always the same issue. Ive also tried using the online version of obabel and when I select add hydrogens and generate 3D co ordinates it simply gives a blank output. When I don't include this it works but because there aren't 3D co ordinates it can't be used . attached here is the output. I am sure it's some silly mistake but I can't see it . [receptor_5.txt](https://github.com/openbabel/openbabel/files/13950454/receptor_5.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2665:786,simpl,simply,786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665,1,['simpl'],['simply']
Usability,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:61,simpl,simple,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,1,['simpl'],['simple']
Usability,Just a simple addition of documentation for the SVG format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/210:7,simpl,simple,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/210,1,['simpl'],['simple']
Usability,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:556,simpl,simply,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,2,['simpl'],['simply']
Usability,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:307,clear,clear,307,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,1,['clear'],['clear']
Usability,Just looking at this now in the context of the 3.0.1 release. I see a couple of TODOs in there based on memory allocation and pointers. Do you need/want feedback on these?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-623063416:153,feedback,feedback,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-623063416,2,['feedback'],['feedback']
Usability,"Just make it clear that it's not confidential, but that they can email the lead developer confidentially if they want. I don't think you need to provide an email address - they'll figure it out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653:13,clear,clear,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653,2,['clear'],['clear']
Usability,"Just to add my 2c to the discussion on atom typing. My recommendation would be to avoid SMARTS and do the atom typing in code. It will be faster, but I think also clearer and less prone to errors. You can find examples of both approaches in the Open Babel codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015:163,clear,clearer,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015,2,['clear'],['clearer']
Usability,"Just to note that [C,CR5] simplifies to C and that OB 2.3.2 is quite old so I'd definitely try a newer version. That said, I'd guess that the problem is with the structures, or OB's perception thereof, not with the SMARTS matcher. OB matches the all-atom structure whereas the PDB file is often missing bonds and bond orders, so these must be inferred. If you convert the structure to a MOL file and look at the bonds and bond orders, there must be something messed up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610006374:26,simpl,simplifies,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610006374,2,['simpl'],['simplifies']
Usability,"Keeping on the investigation, I displayed good() on the stream and as expected the second one returns 0 (so not good).; Then I displayed:; eof => 0 in both cases so ok; bad => 0 in both cases so ok; fail => 1 in the second time; This patch prevents the pb but it seems we enter an endless loop (I stopped after 6000 iterations):; `diff --git a/src/formats/chemdrawcdx.cpp b/src/formats/chemdrawcdx.cpp; index f6538cc1..e7eb591a 100644; --- a/src/formats/chemdrawcdx.cpp; +++ b/src/formats/chemdrawcdx.cpp; @@ -715,6 +715,8 @@ stringstream& CDXReader::data(); CDXReader::CDXReader(std::istream& is) : ifs(is), depth(0); {; //ReadHeader; + ifs.clear();; + ifs.seekg(0);; char buffer[kCDX_HeaderStringLen+1];; ifs.read(buffer,kCDX_HeaderStringLen);; buffer[kCDX_HeaderStringLen] = '\0';; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1690#issuecomment-381359620:642,clear,clear,642,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1690#issuecomment-381359620,2,['clear'],['clear']
Usability,"Let me explain (but not excuse) what's happening here. We have some code to short circuit InChI to InChIKey conversion. Basically on reading an InChI (and only an InChI), the InChI is stored as an attribute of the molecule. Any subsequent requests for the InChI just use this stored value rather than recalculating it. Without this short circuit, the conversion would be done by reading an InChI into an OBMol, converting the OBMol into an InChI and then subsequently into an InChIKey. The problem is that this might give a different result (as reading an InChI doesn't always sufficiently preserve the original structure). Modifying the molecule in-between clearly invalidates the InChI, but we don't have a mechanism internally to intercept modifications, so this is left to the user. If you ""print(inchi.data)"" you will see the offending data item. Deleting this (""del inchi.data['inchi']"") removes the cached value. In general I don't like automagic stuff like this, as it breaks code in complicated and unexpected ways. We could give up on accurate InChI->InChIKey conversion, or only cache the value if the user specifies an option. On a separate note, can I ask why you are reading an InChI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403:658,clear,clearly,658,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403,2,['clear'],['clearly']
Usability,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:1380,Clear,Clear,1380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406,1,['Clear'],['Clear']
Usability,"Logged In: NO . The resolution was simply ""nothing to fix"". At the time I felt strongly they should be identical to Daylight. Now I realise this isn't so important. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788:35,simpl,simply,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788,2,['simpl'],['simply']
Usability,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:253,guid,guidelines,253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870,2,['guid'],['guidelines']
Usability,"Logged In: NO . diff -ur openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp openbabel-2.2.0b4/src/formats/mopacformat.cpp; --- openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp	2008-05-28 10:32:53.000000000 +0400; +++ openbabel-2.2.0b4/src/formats/mopacformat.cpp	2008-05-30 01:16:37.000000000 +0400; @@ -80,7 +80,7 @@; mol.BeginModify();; while	(ifs.getline(buffer,BUFF_SIZE)); {; - if(strstr(buffer,""CARTESIAN COORDINATES"") != NULL); + if(strstr(buffer,"" CARTESIAN COORDINATES"") != NULL); {; // mol.EndModify();; mol.Clear();. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087:524,Clear,Clear,524,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1102637; Originator: YES. The good news: You already have man-pages for obminimize, obenergy and obrotamer in your SVN. The bad news: You don't ship nor install them :) They are not part of man_MANS in doc/Makefile.am. The fix is pretty simple and I attach it. However, a man-page for rountrip is missing and it would be nice, if you could ship one.; File Added: 1900675_patch.diff. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444:262,simpl,simple,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:824,Clear,Clear,824,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2145 in trunk.; It needed another flag on OBAtom to require implicit Hs even if there are explicit H. It is set for simple, non-aromatic SMILES atoms. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931:184,simpl,simple,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:135,simpl,simplifying,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758,2,['simpl'],['simplifying']
Usability,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:175,simpl,simplified,175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285,2,['simpl'],['simplified']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:249,feedback,feedback,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121,2,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:540,simpl,simpler,540,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717,2,['simpl'],['simpler']
Usability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:497,clear,clear,497,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:146,simpl,simple,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:285,Clear,Clear,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,2,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1444119; Originator: NO. This SD File from DrugBank is not valid. It's not a problem with OpenBabel. Last time I downloaded data from DrugBank, I had the same problem: The first line of many of the MOL records is simply missing. In this instance, look at each $$$$ line. Immediately following it, there are only two header lines, followed by the COUNTS line. A proper SD File has three lines. Two lines are illegal, and OpenBabel is correct to reject it. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039:238,simpl,simply,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:679,clear,clear,679,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:182,clear,clearly,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:194,simpl,simply,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152,2,['simpl'],['simply']
Usability,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:148,GUID,GUIDE,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028,1,['GUID'],['GUIDE']
Usability,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:559,Clear,Clear,559,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,4,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:46,simpl,simplified,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,2,['simpl'],['simplified']
Usability,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:381,undo,undocumented,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925,2,['undo'],['undocumented']
Usability,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:90,clear,clearly,90,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:176,Clear,Clearly,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397,1,['Clear'],['Clearly']
Usability,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:57,feedback,feedback,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403,4,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:597,simpl,simplify,597,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,2,['simpl'],['simplify']
Usability,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:113,simpl,simple,113,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:409,clear,clear,409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149,2,['clear'],['clear']
Usability,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:153,feedback,feedback,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806,2,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:513,clear,clear,513,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:96,simpl,simply,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:89,simpl,simple,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:185,simpl,simple,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:543,simpl,simply,543,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:46,clear,clearly,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:103,Clear,ClearBond,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290,1,['Clear'],['ClearBond']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. Hmm. I wonder if this is just limited to PDB format... But this is relatively easy to fix (it's now in SVN trunk, revision 2613 or later). // Clear all virtual bond data; vector<OBGenericData*> vbonds = mol.GetAllData(OBGenericDataType::VirtualBondData);; mol.DeleteData(vbonds);. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207:190,Clear,Clear,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:86,clear,clearly,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:263,clear,clearly,263,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:202,clear,clearly,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:204,simpl,simply,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:52,simpl,simple,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:291,simpl,simply,291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:83,simpl,simply,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. While I agree that consistency is a good aim, I'm going to move this to ""Feature Requests"" rather than an explicit bug. I believe the difference is simply that the two files came from different sources and Chris attempted to retain the formatting for merging in future revisions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941:196,simpl,simply,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:135,guid,guide,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495,2,['guid'],['guide']
Usability,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:201,simpl,simply,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:93,simpl,simple,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:54,simpl,simple,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=677371; Originator: YES. Cygwin; gcc-3.4.4 with libtool-2.2; no error, just an immediate segfault. Could you give me some guidance into how to diagnose the problem?. Original comment by: yselkowitz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349:147,guid,guidance,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349,2,['guid'],['guidance']
Usability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:431,learn,learn,431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,2,['learn'],['learn']
Usability,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:163,simpl,simply,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:660,simpl,simple,660,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:157,Clear,Clear,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962,3,"['Clear', 'clear']","['Clear', 'cleared']"
Usability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:272,clear,clearly,272,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,2,['clear'],['clearly']
Usability,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:42,simpl,simplier,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254,2,['simpl'],['simplier']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:389,simpl,simply,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:77,simpl,simply,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:317,clear,clearly,317,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:119,simpl,simple,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:357,simpl,simply,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:254,simpl,simply,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:104,simpl,simply,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:522,pause,pause,522,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896,4,"['pause', 'simpl']","['pause', 'simply']"
Usability,Logged In: YES ; user_id=851435; Originator: YES. It was quite a simple fix after all - hopefully this change hasn't broken anything. All tests should be protected in this way. I have also patched Gentoo's openbabel ebuild for beta5. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113:65,simpl,simple,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113,2,['simpl'],['simple']
Usability,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:204,clear,clear,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536,2,['clear'],['clear']
Usability,"Maybe some awesome docs on the topic would be useful? Still up for the; sprint?. On 18 May 2017 at 16:40, Geoff Hutchison <notifications@github.com> wrote:. > To do this, we'd have to implement the AM1 semiempirical quantum method,; > which seems impractical.; >; > At the moment, there are several charge models implemented:; >; > - eem Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Bultinck B3LYP/6-31G*/MPA; > - eem2015ba Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/AIM; > - eem2015bm Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/MPA; > - eem2015bn Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/NPA; > - eqeq Assign EQEq (charge equilibration) partial charges.; > - fromfile Assign charges from file containing {'atom-name', charge}; > pairs; > - gasteiger Assign Gasteiger-Marsili sigma partial charges; > - mmff94 Assign MMFF94 partial charges; > - none Clear all partial charges; > - qeq Assign QEq (charge equilibration) partial charges (Rappe and; > Goddard, 1991); > - qtpie Assign QTPIE (charge transfer, polarization and equilibration); > partial charges (Chen and Martinez, 2007); >; > There are actually quite a few EEM methods implemented.; >; > I'd be willing to implement the BCC part of AM1-BCC - as in, you can parse; > an AM1 calculation from MOPAC and generate AM1-BCC charges.; >; > But I think there are better models out there. (eem2015* are very good; > IMHO); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUCrxqRO6-l8sYPAG4V4C5NGAuCKks5r7GZjgaJpZM4NeuYI>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302472555:1053,Clear,Clear,1053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302472555,1,['Clear'],['Clear']
Usability,"Might be better to await PR #2152 to simplify merge handling, or include this change there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2159#issuecomment-610272736:37,simpl,simplify,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2159#issuecomment-610272736,2,['simpl'],['simplify']
Usability,"My enviroment: Win 7, Obabel 2.3.1, Feb 27 2012 (dev. version); I was playing around, and I have noticed that radicals with a parent aromatic molecule, simply don't work.; If I abstract a H atom from an aromatic structure, the SMILES still rapresent the parent molecule.; I don't know how often that happens; I tried to abstract an H from benzene, pirrole, pyridin, furan: it never worked. See attched examples. This probelm seems to involve only the smile canonization: I tried to convert one of the furan radical into png, gaussian and mol file and it works fine in all the occasions. obabel WorngRadicals.txt -ismi -ocan. Samuele. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1168:152,simpl,simply,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1168,1,['simpl'],['simply']
Usability,"Nice ;). ---. Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2015-08-17 19:22 GMT+02:00 Jean-Noël Avila notifications@github.com:. > I think it's more basic than this: the molecule is simply deleted.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895705:209,simpl,simply,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895705,2,['simpl'],['simply']
Usability,"Nice testcase. I'll sort it out. On Tue, 2 Oct 2018 at 01:39, Ben Bucior <notifications@github.com> wrote:. > Some OBChemTsfm transformations, especially on radicals, can result in; > unexpected implicit hydrogen counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:899,clear,clearer,899,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,2,['clear'],['clearer']
Usability,"No - it's a bug, and looks pretty serious. The isomorphism should be of the labeled graph. Here's a simpler example:. ```; import pybel; ob = pybel.ob. smi = ""Cc1onc(C)c1""; mol = pybel.readstring(""smi"", smi). query = ob.CompileMoleculeQuery(mol.OBMol); mapper = ob.OBIsomorphismMapper.GetInstance(query); isomorph = ob.vpairUIntUInt(); mapper.MapFirst(mol.OBMol, isomorph); data = [isomorph[i] for i in range(len(isomorph))]; print(data); ```; giving...; ```; [(0, 5), (1, 4), (2, 3), (3, 2), (4, 1), (5, 0), (6, 6)]; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467172380:100,simpl,simpler,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467172380,2,['simpl'],['simpler']
Usability,"No, I simply need to find the time to clean up the draft at https://openbabel.github.io/ and replace the wiki.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495:6,simpl,simply,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495,2,['simpl'],['simply']
Usability,"No, the old code converts to degrees by getting an angle from the vectorAngle function (which returns in degrees). . I wrote it this way to make it clear that the return value is in degrees. (the vectorAngle function uses this notation as well)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934291:148,clear,clear,148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934291,2,['clear'],['clear']
Usability,"Noel, I can work with you to re-implement the SMARTS -- if you can help me learn the double-bond stereo code in the trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663:75,learn,learn,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663,2,['learn'],['learn']
Usability,"Not everybody deals with cmake, and not everybody wants to learn about is peculiarities.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/300#issuecomment-216895774:59,learn,learn,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/300#issuecomment-216895774,2,['learn'],['learn']
Usability,"Note: this pull request is on top of #1576, and should not be merged before that. 1. Removed calls to SetType() from the SMILES parser, as well as from OBAtom::SetIsotope; 2. Changed ParseSimple and ParseComplex to (each) use a single switch statement, rather than a test for isupper() first of all; 3. In ParseComplex, parse the isotopes more efficiently and tighten up their handling when reading/writing. The test cases I wrote flushed out a few issues which I fixed:; 1. Parse 'new' elements (based on those present in elements.txt); 2. Parse aromatic [te] and [bH]. In passing, I removed the warnings about ""Illegal aromatic element"". We handle these elements without trouble (by analogy with C, N or O), and I think they might cause a user to simply uppercase the element in the SMILES, which would not be correct.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1589:749,simpl,simply,749,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1589,1,['simpl'],['simply']
Usability,"Now I'm more confused: if setup.py is not to be used, then why bother pushing fixes for it?. Anyway, without any changes at all, the current 2.3.2 build/install leaves its python products (openbabel.py, pybel.py, _openbabel.so) in /usr/lib or /usr/lib64. Clearly they shouldn't stay there. Is it expected that builders & packagers will make their own arrangements to install them to the correct location, or have I missed something?. Original comment by: cwilling",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802859:255,Clear,Clearly,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802859,1,['Clear'],['Clearly']
Usability,"O)])]; ```; But for 'CH-acidic_strong' it is:; ```; [CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])]; ```; According to 'SMARTS_InteLigand.txt' they should be the same, but they are not. And that's why I got very confused. To my understanding, the 'CH-acidic' SMARTS means:; A C-atom with a total of 4 connections, that must not have 0 hydrogens attached and that must be bound to another C-atom of some kind (`[#6]`) that is not bound to P=O, S=O or N(~O)~O. On the other hand, the 'CH-acidic_strong' SMARTS means:; A C-atom with a total of 4 connections, that must not have 0 hydrogens attached and that must be a C-atom of some kind that is not bound to P=O, S=O or N(~O)~O. So, in 'CH-acidic' the CX4 is bound to another C-atom (`[#6]`) and in 'CH-acidic_strong' CX4 itself must not be bound to P=O...; At least, that is how I understood it. It might very much be possible that I just don't understand it correctly. And in that case, I would be very very happy, if anyone could explain my mistake to me. ; Because the reason why I even mention it is, that when I use the 'CH-acidic_strong' SMARTS as is, I can find the substructure in the molecule described by the SMILES; ```; 'S(c1c(C(C)(C)C)cc(CO)c(C)c1)C1C(=O)O[C@@](C(C)C)(CCc2ccc(N)cc2)CC1=O' ; (see picture down below). ; ```; But when I exchange the first part of the SMARTS string with the one of 'CH-acidic', I don't get a hit in the molecule any longer. . And I just don't understand why. And I also don't know, which SMARTS is correct. ; I feel like, if I don't understand these SMARTS strings correctly, I don't understand the SMARTS syntax correctly in general. I hope, someone can help me out with this problem and please forgive me, if I just did a very simple or obvious mistake. I am doing my very best to teach this stuff to myself, since I need it for my work, but don't have anyone to ask about it. . Thanks a lot!. ![molecule_hit](https://github.com/openbabel/openbabel/assets/138202958/40cc5d1d-1831-484f-9209-35049b2aef57)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607:3780,simpl,simple,3780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607,1,['simpl'],['simple']
Usability,"OBConversion::m_IsLast is set to true in the constructor and can't be changed. OBConversion::SetLast(bool) is clearly needed:. SetLast(bool IsLast) {m_IsLast = IsLast;}. So that it vould be possible to use (with n molecules to save):; cons.SetLast(false);; for (i=1; i<n; i++); {; conv.SetOutputIndex(i);; conv.Write(mol[i-1], pos);; }; conv.SetLast(true);; conv.SetOutput(n);; conv.Write(mol[n-1], pos);. Reported by: jbrefort",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/596:110,clear,clearly,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/596,1,['clear'],['clearly']
Usability,OK I left the package name as 'openbabel' and updated the README to explain more clearly that this is just the python bindings along with a link to the main Open Babel site. Here's what it will look like (on the test PyPI site): https://testpypi.python.org/pypi/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494:81,clear,clearly,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494,2,['clear'],['clearly']
Usability,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:372,simpl,simply,372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043,10,"['clear', 'learn', 'simpl']","['clearly', 'learn', 'simple', 'simply']"
Usability,"OK, no worries I can wait until tomorrow. I just wondered if there was something simple I could do, but this sounds like it would be more complicated than that. -----------------------------------------------------------------------------------------------------; Hubertus van Dam, 631-344-6020, hvandam@bnl.gov<mailto:hvandam@bnl.gov>; Brookhaven National Laboratory. From: Geoff Hutchison <notifications@github.com>; Reply-To: openbabel/openbabel <reply@reply.github.com>; Date: Friday, March 27, 2020 at 10:26; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: ""Van Dam, Hubertus"" <hvandam@bnl.gov>, Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). I'll have a patch later today - there's an index / table of contents for faster access. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HXOQA2SW2DZWDXSI5DRJSZPXANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119:81,simpl,simple,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119,2,['simpl'],['simple']
Usability,"OK, thanks for the feedback. I'll try to do it very soon.; I'm asking for feedback because I get really annoyed if I code something; then it is not accepted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39694266:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39694266,4,['feedback'],['feedback']
Usability,Oh bugger. The merge pulled in more than the simple fix I was trying to send. I obviously screwed up somewhere.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-528169779:45,simpl,simple,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-528169779,2,['simpl'],['simple']
Usability,"Oh, thank you so much. It was a simple typo :D",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848:32,simpl,simple,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848,2,['simpl'],['simple']
Usability,"Okay, this isn't a valid fix. There is no simple fix. If the istream belongs to the user, you have no way of knowing if it has been deallocated or not by the time you get to the OBConversion destructor (if they were both declared as local variables, for instance, and go out of scope at the same time). It it is still valid, then the rdbuf needs to be replaced before deallocating pLineEndBuf. It is no longer valid, you can't do this. The correct solution is to install all filtering on top of the user provided stream. This could be done relatively easily as a general framework that would apply to the zlib filters (which I'm guessing, from looking at the code, also leak memory). I'd be willing to take the time to implement this, but would be much more enthusiastic about it if I could use the boost iostreams libraries. Is this acceptable?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122:42,simpl,simple,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122,2,['simpl'],['simple']
Usability,"One option to keep this more contained could be to change pybel from a module to a package — i.e. a directory called ""pybel"" that contains an `__init__.py` file. Then you can add supplementary files or subdirectories like ""static"" or ""js"" without polluting the main python site-packages directory. In terms of the python code, it would be possible to keep the change transparent to the user. You could just put it all the code in `__init__.py`, or separate it out into multiple python files and use imports in `__init__.py` to define the interface. The downside to this would be that you lose the simplicity of just having pybel as a single file. But with `imolecule.min.js` being added anyway, having a pybel directory containing everything might be better than having disparate files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158:597,simpl,simplicity,597,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158,2,['simpl'],['simplicity']
Usability,"One slowdown in the current 2.0 code is the delay to load all file format ; modules. A possible solution is to allow fine-grained loading of modules. For ; example, some modules are required by all code, and some code (like the ; help/usage commands) need to load all modules. But a simple conversion:. babel -ixyz 'foo.xyz' -opdb 'foo.pdb'. This could only load a few modules (i.e., any required modules, ; xyzformat, and pdbformat). I suspect that as the number of formats increases over time, this will be a ; useful performance boost to load formats only as required. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/65"":https://sourceforge.net/p/openbabel/feature-requests/65",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434:283,simpl,simple,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434,1,['simpl'],['simple']
Usability,"Only the first molecule can be read from multimolecule files on Windows (no problems on Linux). Further attempts to read molecules (using OBConversion::Read) return False (indicating EOF). No segfault occurs; multimolecule files simply behave like single molecule files. It appears that is due to changes in file handling introduced in December of last year (not included in OBPython 1.0 which was based on SVN r1650, patched with r1655, r1656, r1677 and r1680). Here is the typical usage from Python:. obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename); while notatend:; yield Molecule(obmol); obmol = openbabel.OBMol(); notatend = obconversion.Read(obmol). Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/644:229,simpl,simply,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/644,1,['simpl'],['simply']
Usability,"Oops -- you're right, I missed a couple. I've pushed r4600 which should clear these up. The PointGroup function has been fixed, too. Original comment by: @dlonie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800982:72,clear,clear,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800982,2,['clear'],['clear']
Usability,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1302:80,usab,usable,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302,1,['usab'],['usable']
Usability,"OpenBabel version 2.2.3; CentOS Linux version 4.6 (kernel 2.6.9-67.0.22.ELsmp). Paul Mortenson; p.mortenson@astex-therapeutics.com. Maybe I've misunderstood the purpose of this function, but OBMol::SetCoordinates doesn't do what I expected it to! I expected to supply a coordinate vector as a double*, and have the molecule's current coordinates (for the current conformer) set to these values. However, instead the function copies the molecule's current coordinates into my supplied double*. The problem (if this is indeed incorrect behaviour) is in line 3077 of mol.cpp:. memcpy((char*)c,(char*)_c,sizeof(double)*3*NumAtoms());. should be. memcpy((char*)_c,(char*)c,sizeof(double)*3*NumAtoms());. i.e. copy from the supplied coordinates to the molecule, not the other way around. Apologies if I've got the wrong end of the stick here, though if that is the case I might argue that the documentation isn't crystal clear!. Keep up the good work, guys. Cheers,; Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/978:915,clear,clear,915,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/978,1,['clear'],['clear']
Usability,Openbabel fails to create usable png image of adenosine,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195:26,usab,usable,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195,2,['usab'],['usable']
Usability,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/158](https://sourceforge.net/p/openbabel/feature-requests/158)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1527:483,learn,learn,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1527,1,['learn'],['learn']
Usability,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/159](https://sourceforge.net/p/openbabel/feature-requests/159)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1528:483,learn,learn,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1528,1,['learn'],['learn']
Usability,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:333,Clear,Clear,333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,4,['Clear'],['Clear']
Usability,"Or try EIGEN2 instead. I think both are supported, but the CMAKE; environment variable is different. On Fri, 22 Feb 2019 at 13:49, David Hall <notifications@github.com> wrote:. > It appears the root error is:; >; > 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; > 8701>(compiler file 'msc1.cpp', line 1411); > 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; > 8721>Please choose the Technical Support command on the Visual C++; > 8731> Help menu, or open the Technical Support help file for more information; > 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; >; > I'm not sure much can be done when the error message is that the compiler; > cannot handle the file.; >; > The best advice is probably to just have it target python 3.5-3.7 and drop; > python 2.7 support, which will cause condo-forge to use Visual Studio 14.0; > (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGQWf1XGtO8-yDR2XrEPV_BHKUEoxks5vP_VwgaJpZM4bJldO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459:477,simpl,simplifying,477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459,2,['simpl'],['simplifying']
Usability,"Perhaps I wasn't clear enough that it hangs for everything I've tried. For example, even converting this very simple water geometry hangs:. geom.xyz; ---. 3. 8 0 0 0; 1 .97 0 0; 1 -0.1741 .95296 0; ---. Original comment by: @jiahao",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800750:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800750,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Please compare the above structure with the [pubchem 2D structure](https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure), showing, in green, a H which 'protrudes towards the camera'. The same H is depicted as 'protruding' above the ring with the NCH3 group in [the wikipedia entry](https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png). The Pubchem 3D shows the hydrogen in more detail. My point is that obabel's depiction of this molecule with the flags I used provides an image structure where this H 'protrudes' below the molecule, but in line with a C-C bond in the ring it is a member of, so you have both lines running in the same direction, one on top of the other, and although this may structurally possible, for the purposes of depicting the structure, it is less clear than the two references included above. Now this may be because I'm using obabel incorrectly, and if so, totally cool. But although I'm new to the notion of implicit and explicit hydrogens in the context of cheminformatics and 2D structure depictions, the flags I have used have hidden all the implicit hydrogens, but not the case H in point which appears to be nonetheless plotted, but in a way which is confusing, and irrespective, I was urged to log this as a bug by Geoff, so assumed it was therefore a bug. Therefore, I'm hoping that either; 1. Someone with authority admits this is a bug; 2. Someone suitably knowledgeable informs me I'm using the wrong flags (and hopefully graciously corrects me) and obabel produces the same structure but with this H sticking out on its own or; 3. Someone suitably knowledgeable informs me that this is a feature of obabel, and irrespective of the flags, I will not be able to plot this H in such a way that it 'sticks out' without being plotted over another bond in which case, I can close this issue and use a different tool for those structures I have to plot where I find this anomaly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084:847,clear,clear,847,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084,2,['clear'],['clear']
Usability,"Please don't merge without discussion. These are not fixes as implied; by the title, but changes. On 22 October 2013 01:56, David Hall notifications@github.com wrote:. > This involves two commits that:; > 1. install the python files into site-packages corresponding to the python; > used, rather than next to the libraries. eg; > /usr/lib64/python2.7/site-packages instead of /usr/lib64; > 2. CMake's PythonLibs and PythonInterp can find different versions of; > python. In my case, I had python3.2 and python2.7 installed. the; > PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs; > found the devel files for Python3 . This clearly did not work very well.; > Now, I search for the python first, then restrict the libraries found based; > on the version of the python interpreter.; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/Acpharis/openbabel cmake_python; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/openbabel/openbabel/pull/33; > ; > Commit Summary; > ; > install python libraries in python site-packages directory instead of; > /usr/lib; > Use Python Library version of the found Python Interpreter; > ; > File Changes; > ; > M scripts/CMakeLists.txt (26); > ; > Patch Links:; > ; > https://github.com/openbabel/openbabel/pull/33.patch; > https://github.com/openbabel/openbabel/pull/33.diff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/33#issuecomment-26786633:650,clear,clearly,650,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33#issuecomment-26786633,2,['clear'],['clearly']
Usability,Possible conflict with scikit-learn in pip version of pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702:30,learn,learn,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702,2,['learn'],['learn']
Usability,"Posted from the CCL e-mail list:. Sent to CCL by: ""Phil Hultin"". I also find that OpenBabel 2.0 for Windows does not run properly. In the; GUI version it simply fails to convert anything, but when run from the; command line I get ""iconv.dll not found"" just as Zhao Yuan reported. The; library iconv.dll is not present in the zip archive downloaded from; sourceforge. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/497:154,simpl,simply,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/497,1,['simpl'],['simply']
Usability,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:114,clear,clearer,114,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,2,['clear'],['clearer']
Usability,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:439,Simpl,Simple,439,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,7,"['Clear', 'Simpl']","['Clear', 'Simple']"
Usability,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:701,clear,clear,701,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489,2,['clear'],['clear']
Usability,Re-enable vector.clear() to allow wrapped std::vectors to be reused,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,2,['clear'],['clear']
Usability,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:181,learn,learning,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912,6,"['feedback', 'guid', 'learn']","['feedback', 'guidance', 'learning']"
Usability,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:152,feedback,feedback,152,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907,2,['feedback'],['feedback']
Usability,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/185:33,simpl,simple,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185,1,['simpl'],['simple']
Usability,"Reported by: W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; ; Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------; ; This is a single record, with multiple ""$$$$"" in places where they are *not* record terminators. All simple string search methods with awk or similar tools which simply look for the $$$$ line will fail on this. Never assume that such records do not exist. I *have* seen $$$$ in SD data lines before. While Babel is smart enough to read and output the first records from an SD input file with repeated records as above (almost) correctly, its skip function seems to have less brainpower and gets confused. It simply silently quits without any message. It is not possible to output records starting after first record from above repeated multi-record test file or after encountering such as record anywhere in the skipped part. A bad thing if something like this happens in the middle of your 500Mb file where you cannot edit. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627:378,simpl,simple,378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627,3,['simpl'],"['simple', 'simply']"
Usability,"Reported by:; W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; . Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------. While on superficial inspection the Babel output looks correct when run on the first records, a closer look shows that critical information has been lost. Babel needs to read records into its internal datastructure before output via conversion.However, its Molfile parser is rather simple and supports few of the more advanced Molfile encoding conventions. In this case, Babel silently drops the critical H0 designator flag (plus a second flag) which lets a Molfile reader distinguish between metal Au and AuH3 with implicit H. So after the pass through Babel, the compound has changed, without any notification, from metal Au to AuH3. That can be a problem. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/628:558,simpl,simple,558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/628,1,['simpl'],['simple']
Usability,"Reverted + put changes into a new commit, mainly because of the `openbabel-python.cpp` bloat. > Can you revert the portion of the PEP-compliance commit to return the docstrings for outformats, informats, etc.? Docstrings are part of the documentation. Done, but I've never seen this pattern before. I'm curious to learn more - is SWIG recognizing variable docstrings?. > Is your idea that the JS files be installed beside pybel.py?. Yes, I put them in a `js` folder. They could instead be linked to a remote URL, but then 3D rendering would be dependent on an internet connection. > The toggle could be done as RDKit does, just have a pybel global attribute with a default value which the user can assign to, e.g. pybel.ipython_whatever = True. Done. It's `pybel.ipython_3d`, and it defaults to False. I think 2D is more useful than 3D in common use cases. ![screenshot from 2013-12-09 09 09 34](https://f.cloud.github.com/assets/1449833/1706053/d2ebffa4-60e8-11e3-9526-be9603b1cc19.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558:314,learn,learn,314,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558,2,['learn'],['learn']
Usability,"SMARTS match is wrong for SMARTS containing cis/trans double bonds. Examples:. $ echo 'C\C=C/C' | obgrep 'C\C=C/C'; C\C=C/C; $ echo 'C/C=C\C' | obgrep 'C\C=C/C'; C/C=C\C; $ echo 'C/C=C/C' | obgrep 'C/C=C/C'; C/C=C/C; $ echo 'C\C=C\C' | obgrep 'C/C=C/C'; (no output). The last example ""C\C=C\C"" is the exact same trans configuration as the second-to-last one, so it should match ""C/C=C/C"", but it doesn't. You simply can't use SMARTS if it contains '/' or '\' because it frequently gives the wrong answer. Reported by: @cjames53. Original Ticket: ""openbabel/feature-requests/110"":https://sourceforge.net/p/openbabel/feature-requests/110",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479:409,simpl,simply,409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479,1,['simpl'],['simply']
Usability,SMILES parsing failure for a simple case,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1570:29,simpl,simple,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1570,2,['simpl'],['simple']
Usability,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1537:500,simpl,simple,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537,1,['simpl'],['simple']
Usability,Seeking guidance for GSoC 2021,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:8,guid,guidance,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,2,['guid'],['guidance']
Usability,"Send me an e-mail and let's talk. There are already several SMILES output options: https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html. It's not clear to me exactly what you're trying to accomplish. For example usually people start with a SMILES or similar for the initial 3D geometry. So usually the question is ""how do I make sure the bonds are assigned properly from this 3D geometry"" - since the first step in your process is not 100% guaranteed. So please send me an e-mail and we can discuss.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480:168,clear,clear,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480,2,['clear'],['clear']
Usability,Simple ReadFile program leaks memory,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370:0,Simpl,Simple,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370,1,['Simpl'],['Simple']
Usability,Simplify user installation by creating build directory upfront,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1614:0,Simpl,Simplify,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1614,1,['Simpl'],['Simplify']
Usability,Simplify/fix behavior of OBAtom::GetResidue so that it behaves like other lazy properties,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849:0,Simpl,Simplify,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849,1,['Simpl'],['Simplify']
Usability,"Some OBChemTsfm transformations, especially on radicals, can result in unexpected implicit hydrogen counts since PR#1576. I wrote up an example failure in the first commit of this PR, where assigning a charge of -1 to an atom can give it 255 implicit hydrogens under certain conditions. I suspect the underlying cause is unsigned integer arithmetic in phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives an unsigned int--if the difference would be negative, then the result is wrapped back to `UINT_MAX`, e.g. printing `(j->second - old_bond_order)` gives 4294967295 instead of -1. Then there's some truncation to fit in the unsigned char. But even if the overall expression gives the right answer most of the time, I think it would be clearer to be more explicit about the math, which would fix special cases like this bug. How should we adjust the line(s) of code in phmodel.cpp? We could explicitly typecast everything to a signed int then ensure that there are at least zero implicit hydrogens, but that seems verbose. @baoilleach Please feel free to directly commit on my PR if you have any ideas. Of course we'll need to update the test case with the correct answer as well (not H255).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895:760,clear,clearer,760,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895,1,['clear'],['clearer']
Usability,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:1339,learn,learn,1339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,8,['learn'],['learn']
Usability,Sorry for reopening this issue. I just found some new problem related to protonation and I think it's good to post here.; Here I have a ligand called EFE and I tried to protonated it with Openbabel. The structure is simple but the result is wrong I guess. I wondered in which scenario this would happen since I also have many successful ligand cases with Openbabel.; The command I used were:; `obabel -ipdb 1.pdb -h -opdb -O 2.pdb` or `obabel -ipdb 1.pdb -opdb -O 2.pdb --p 7.0` or in python with Pybel.; Input and output files are attached.; [EFE.zip](https://github.com/openbabel/openbabel/files/6073586/EFE.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789420813:216,simpl,simple,216,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789420813,2,['simpl'],['simple']
Usability,"Sorry to keep adding to this, but I've been trying to think of other ways to run these queries, and I've come across something else. Taking the same three molecules from below, if I use the query [Nv2] (N with total bond order of 2), then none of them match in OB, whereas the second one (i.e. the radical) does in Daylight. I think that is less ambiguous - OB is simply wrong here, isn't it?. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802034:364,simpl,simply,364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802034,2,['simpl'],['simply']
Usability,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/927:148,simpl,simply,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:26,simpl,simple,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,2,['simpl'],['simple']
Usability,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1531:101,simpl,simple,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531,1,['simpl'],['simple']
Usability,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:191,learn,learned,191,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,2,['learn'],['learned']
Usability,"Taking in account that in any case i need to use development version since kekulization doesn't work on released version, I need to do some statements.; I knew that the major issue is the use of old version, it was the reason i put the cdk version for the two software. This could be simple to solve if you consider only an aromaticity model right.; Since you know that it depends of the degree of generalization you want to keep (tautomerism mesomerism, etc.) it could be more accurate to have the possibility to choose wich model you want to apply. I keep the same example (theobromine):; ![image](https://user-images.githubusercontent.com/335108/44911717-1a84ad80-ad28-11e8-9ac1-ed5ef924bb21.png); I've depicted the smiles with marvinsketch. The first is the kekulized form, the second the basic aromaticity model form, the third the general aromaticity model (daylight like- in this case doesn't take in account external double bonds) form.; You can see that both structure are right depending on the model you want to save.; If you use kekulized form every software ill accept the molecule but you will not know how it has interpreted your molecule. In other words, it seems that you have solved the problem, but then is more difficult to address some issues and understand some results.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417647690:284,simpl,simple,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417647690,2,['simpl'],['simple']
Usability,"Thank you for the code. I replaced it and it didn't work either. I'm afraid for the command I execute, system doesn't search in the folder where CMakeLists.txt exists, hence the persistence of the problem. To make it more clear, here is the output:; ```; File ""/home/lale/anaconda3/lib/python3.7/site-packages/openbabel.py"", line 6, in <module>; import DLFCN as dl; ModuleNotFoundError: No module named 'DLFCN'. ```; To overcome the problem arising from this Python library bindings, should I install again (using the code you provided) all over or go change the py script?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1947#issuecomment-469659496:222,clear,clear,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1947#issuecomment-469659496,2,['clear'],['clear']
Usability,"Thank you for the feedback. 1. Conflicts resolved; 2. One challenge I ran into was that some of the existing code wasn't declared as const. I can restore const to OBBond::GetLength if some of the other methods are declared as const. Before making a commit, does this [example change](https://github.com/openbabel/openbabel/files/2104595/fix_const.patch.txt) look reasonable, or are there other concerns about API compatibility, etc?; 3. I think I understand. I don't recall anything seeing anything context-specific in OBUnitCell, but keeping track of the molecule anyway probably wouldn't hurt. The line I was looking at is `newmol.SetData(parent_uc->Clone(NULL));` (in `OBMol::CopySubstructure`), so I think the relevant OBMol would be `&newmol`. Making sure the UFF code is PBC-compatible sounds like a great feature. I will work on that after porting some more PBC features from my research code (such as different formats than CIF) to another PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-397496387:18,feedback,feedback,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-397496387,2,['feedback'],['feedback']
Usability,"Thank you for the pointers.; I will take a look into these options. To not complicate things more than needed, I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. What do you think?. This is implemented in this PR:; https://github.com/openbabel/openbabel/pull/2580. Please let me know if for some reason this is not acceptable and what I can do to fix it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527:140,simpl,simpler,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527,2,['simpl'],['simpler']
Usability,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:77,simpl,simple,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909,2,['simpl'],['simple']
Usability,"Thank you for your feedback, I could reproduce the segfault.; Here's the bt attached.; [bt.txt](https://github.com/openbabel/openbabel/files/1911057/bt.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1331#issuecomment-381359945:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1331#issuecomment-381359945,2,['feedback'],['feedback']
Usability,"Thank you for your feedback, I submitted this patch:; https://github.com/openbabel/openbabel/pull/1825",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383395888:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383395888,2,['feedback'],['feedback']
Usability,Thank you for your feedback. I'd like to help you wirh debugging. What can I do?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1792#issuecomment-373878948:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1792#issuecomment-373878948,2,['feedback'],['feedback']
Usability,Thank you ghutchis for your feedback. I submitted this pull request https://github.com/openbabel/openbabel/pull/1815,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380898031:28,feedback,feedback,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380898031,2,['feedback'],['feedback']
Usability,"Thank you so much for looking into my problem!; I tried `obabel -ipdb ligand_1.pdb -h -opdb -O add_h.pdb` in my environment and it results as you described. It kept the original atom label and the residue name. While, there are still 2 problems about this:; 1. The `--p ph` flag and the python usage `mol.OBMol.AddHydrogens(False, True, ph)` still do not keep atom label and residue name, which the ph will make big difference on the result. In my result with ph=7.0, the phosphates are all deprotonated and openbabel gives a good formal charge along with the connectivity. ; 2. Even in the way that keeps atom label and residue name, there's no different name for newly added Hydrogens. I looked into the naming rule of tleap in Amber and it is just simply adding element count after the element name. Like this:; ```; HETATM 59 H UNL 1 66.036 57.777 14.518 1.00 0.00 H ; HETATM 60 H1 UNL 1 69.447 60.888 17.041 1.00 0.00 H ; HETATM 61 H2 UNL 1 67.790 60.750 17.415 1.00 0.00 H ; HETATM 62 H3 UNL 1 72.206 58.616 13.563 1.00 0.00 H ; ```. I actually fixed my problem by writing a function in my workflow to fix the openbabel generated file (just count the element and give them new amber readable names.) ; Also I found some potential problems of the protonation function:; 1. The protonation will be plausible only when I start from a raw PDB without H and connectivity. Weird H will be added if you start from a protonated PDB (like ligand_1_aH.pdb), or remove H first with openbabel and then add H. . Thanks again for the help!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787437807:751,simpl,simply,751,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787437807,2,['simpl'],['simply']
Usability,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:178,simpl,simplify,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793,2,['simpl'],['simplify']
Usability,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:410,simpl,simple,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778,2,['simpl'],['simple']
Usability,"Thanks a lot, got it. See the following for the detail steps:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build && cd build; # The pyenv-based virtubalenv used by me to do the job:; $ pyenv shell hpc; # Must use -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON, otherwise will meet errors and ; # the scripts/python/__init__.py won't be created:; $ cmake -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DBUILD_GUI=ON ..; $ make -j24; # This will install the python binding into /usr/local/lib, let me hack it for installing it into the user's ; # currently activated virtualenv:; $ sudo make install. # Now install the python binding into the currently activated virtualenv:; $ cd scripts/python; # The following files must be put into the openbabel directory:; $ cp ../stereo.i ../openbabel-python.i openbabel/; # Finally, run any of the following commands will do the trick:; $ pip install -e .; or; $ pip install; or; $ python setup.py install; ```. Say, for using the following command, see the output obtained by me:; ; ```; $ pip install -e .; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Obtaining file:///home/werner/Public/hpc/tools/openbabel.git/scripts/python; Installing collected packages: openbabel; Attempting uninstall: openbabel; Found existing installation: openbabel 3.0.0; Uninstalling openbabel-3.0.0:; Successfully uninstalled openbabel-3.0.0; Running setup.py develop for openbabel; Successfully installed openbabel; ```. PS. I love anaconda/miniconda also, but still want to do the job by cpython. The conda-based workflow seems have the following shortcommings:. - Ofter too slow for running the SAT solver to find the requirements' packages list for the environment.; - Maybe problematic for mixing the usage of pip and conda to install packages, say for this problem:; https://github.com/conda/conda/issues/9752; - All of the packages are per-compiled. Regards",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597689294:1180,simpl,simple,1180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597689294,2,['simpl'],['simple']
Usability,Thanks again for catching these. r4603 should clear the last bit up. Original comment by: @dlonie,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800984:46,clear,clear,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800984,2,['clear'],['clear']
Usability,Thanks for fast feedback. I'll try this shortly!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674421361:16,feedback,feedback,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674421361,2,['feedback'],['feedback']
Usability,"Thanks for looking into this Tim. My own feeling is that there are two separate issues here:. 1. Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up.; 2. Should RemoveHydrogens() suppress hydrogens involved in cis/trans stereo? I think the answer to this is no. One of the invariants of the toolkit should be that suppressing and expanding hydrogens should not change any information. Note that (1) and (2) are separate issues. I've changed the SMILES reader so that stereo perception is optional (""-aS""). By default, stereo is just read directly from the SMILES (same behaviour as OEChem and CDK, at least). This improves performance when reading SMILES, and preserves stereo present in the input even where our stereoperception would remove it:; ```; $ obabel -:""C[C@](C)(C)C"" -osmi; C[C@](C)(C)C	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396:320,clear,clear,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396,2,['clear'],['clear']
Usability,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943:72,guid,guidelines,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943,52,['guid'],['guidelines']
Usability,Thanks for suggestion. So there are the changes I have made:. - property name changes; - `heavyvalence` -> `heavydegree`; - `heterovalence` -> `heterodegree`; - `valence` -> `degree`; - old property names will raise `AttributeError` to guide users to use the new property names.; - doc strings are updated,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2005#issuecomment-509888919:236,guid,guide,236,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2005#issuecomment-509888919,2,['guid'],['guide']
Usability,"Thanks for the catch, that's a clear fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2295#issuecomment-720730112:31,clear,clear,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2295#issuecomment-720730112,2,['clear'],['clear']
Usability,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:472,simpl,simple,472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843,2,['simpl'],['simple']
Usability,"Thanks for the quick and kind reply, as well as for updating the guide.; Your help totally fixed the problem 1.; The final goal will be to be able to guess Heat Capacity, Enthalpy and Entropy for C/H/O compunds and for their radicals.; Problem 2 (ensuring that ALL groups are founded) seems to remain open.; I would like to contribute (in my spare time), and start fixing this problem.; I have donloaded and compiled (succesfully) open babel: but it is so big that I got lost before even starting.; Any suggestion on how to start understanding this huge code? Any tutorial I missed? Any help on how to properly ""debug"" to see open babel in action?; Samuele. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801451:65,guid,guide,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801451,2,['guid'],['guide']
Usability,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:169,usab,usable,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306,2,['usab'],['usable']
Usability,"Thanks for the quick responses and your time.; I used an pdb file with up to 20 residues and was surprised about the RAM consumption in contrast to the other methods, but it is clear now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711:177,clear,clear,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711,2,['clear'],['clear']
Usability,"Thanks for your interest! This isn't so much of an issue - we have an e-mail list. A successful project would propose a set of filters / transformations similar (or identical to) the MolVS project for RDKit. I'll post a few links / article that can help you get started (e.g., what is standardization):; * https://depth-first.com/articles/2020/07/27/a-guide-to-molecular-standardization/; * MolVS is an example for RDKit - https://molvs.readthedocs.io/en/latest/guide/intro.html; * PubChem standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-018-0293-8; * ChemSpider standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-015-0072-8. The RDKit code is here:; * https://github.com/rdkit/rdkit/pull/2002; * https://github.com/rdkit/rdkit/blob/master/rdkit/Chem/MolStandardize/standardize.py; * https://github.com/rdkit/UGM_2018/blob/master/Presentations/Leung_GSoC_RDKit-MolVS_Integration.pdf. There are a few more recent articles on tautomers (including use of QM calculations to generate micro-pKa predictions):; * https://pubs.acs.org/doi/10.1021/acs.jcim.0c00232; * https://pubs.acs.org/doi/10.1021/acs.jcim.6b00338; * (InChI v2) https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b01080; * https://cactus.nci.nih.gov/tautomerizer/. As a first step, I'd suggest looking at the code in `src/ops` and submit a pull request for an OBOp that provides warnings for some simple things (e.g., carbon atoms beyond 4 bonds, total formal charge on a molecule isn't neutral, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217:352,guid,guide-to-molecular-standardization,352,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217,6,"['guid', 'simpl']","['guide', 'guide-to-molecular-standardization', 'simple']"
Usability,"Thanks, Noel. I agree that it's probably not a bug, although it does mean you are interpreting SMILES strings differently to Daylight, which may not be what people expect. Do you know how other software handles these H's?. For my original purpose, a better query would be something like [Nv2H1], which is unambiguous (obviously once the other bug has been fixed). Coming from a background where our compounds are (nearly) always stored as SMILES, I'd probably been using the Dn descriptor a little lazily. If you can (almost) guarantee no explicit H's, it's phenomenally useful for generating simple queries for e.g. primary amines, pyridones etc. that are independent of tautomeric / protomeric state. Cheers,; Paul. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802037:593,simpl,simple,593,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802037,2,['simpl'],['simple']
Usability,"Thanks. I'll look into it. Before I do, if you write it out as SMILES, what; do you get?. On Tue, 11 Sep 2018 at 15:09, Semen Yesylevskyy <notifications@github.com>; wrote:. > This is the minimal example allowing to reproduce the problem:; >; > #include <openbabel/mol.h>; > #include <openbabel/isomorphism.h>; > #include ""openbabel/query.h""; > #include ""openbabel/obconversion.h""; >; > using namespace std;; >; > struct MyMol {; > vector<string> name;; > vector<int> element;; > vector<float> charge;; > vector<int> resid;; > vector<char> chain;; > vector<float> x;; > vector<float> y;; > vector<float> z;; > };; >; > // Convert custom molecule to OBMol; > void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); > {; > mol.Clear();; >; > // map of residues; > map<int,OpenBabel::OBResidue*> reslist;; >; > mol.BeginModify();; >; > for(int i=0;i<sel.element.size();++i){; >; > // Create new atom in this mol; > auto oba = mol.NewAtom();; >; > oba->SetAtomicNum(sel.element[i]);; > oba->SetPartialCharge(sel.charge[i]);; > oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);; >; > // Create new residue if needed; > if(reslist.count(sel.resid[i])==0){; > OpenBabel::OBResidue* obr = mol.NewResidue();; > obr->SetNum(sel.resid[i]);; > obr->SetChain(sel.chain[i]);; > reslist[sel.resid[i]] = obr;; > }; >; > reslist[sel.resid[i]]->AddAtom(oba);; > reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; > }; >; > mol.ConnectTheDots();; > // Guess bond orders and aromaticity; > mol.PerceiveBondOrders();; >; > mol.EndModify();; >; > // Need to avoid recomputing partial charges on output; > mol.SetPartialChargesPerceived();; > }; >; > int main(int argc, char** argv); > {; > OpenBabel::OBMol src,sample1,sample2;; > // Read source molecule; > OpenBabel::OBConversion conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:725,Clear,Clear,725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,1,['Clear'],['Clear']
Usability,"Thanks. It's not SWIG but Sphinx (and epydoc, which I use for Cinfony) that recognise this sort of docstring. But you may not have seen it as Python does not recognise it natively (i.e. python.informats.**doc** does not contain it). I'll leave this to Geoff to merge and then play with it a bit. I'll put it on the blog and we can see if we get some feedback on installation problems etc.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30211079:350,feedback,feedback,350,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30211079,2,['feedback'],['feedback']
Usability,Thanks. That's a pretty clear fix.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707:24,clear,clear,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707,2,['clear'],['clear']
Usability,"Thanks. Weird that it passes for me, but clearly wrong.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302160242:41,clear,clearly,41,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302160242,2,['clear'],['clearly']
Usability,"That worked, thank you very much. I didn't realise I had so many OpenBabel versions running on this thing. I'm rather new to command line, so I'll suspect the 'which' command will be very helpful.; I've aliased it to simply 'openbabel' for now, but I'll try and tidy up my system in future and change the default to the OpenBabel version that I want.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444:217,simpl,simply,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444,2,['simpl'],['simply']
Usability,"That's a great idea. I have to meet some deadlines first, but I'll see what I can come up with starting next week. Some of this work would help my own research code, too, so it's a clear win-win.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426827467:181,clear,clear,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426827467,2,['clear'],['clear']
Usability,"That's better, but we need to sort out the caching, which I previously reverted as it had broken existing behaviour around a local install. . If you run ""cmake"" and only afterwards run ""cmake -DCMAKE_INSTALL_PREFIX=whatever"", it will appear to build and install fine, but the rpaths will not be set correctly. I spent quite some time tracking down the origin of this regression. Could you describe what BINDINGS_ONLY is intended to do, as it's undocumented? There must be some way to solve the problem while preserving existing behaviour.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1977#issuecomment-487300310:444,undo,undocumented,444,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1977#issuecomment-487300310,2,['undo'],['undocumented']
Usability,"The API documentation for Get/SetTotalSpinMultiplicity disagree. In one case, 1 is singlet, in the other case, 0 is singlet. The former is correct and appears to be how the Gaussian file writer interprets this value. Here is the API documentation for OBMol:. void SetTotalSpinMultiplicity 	(unsigned int 	 spin) 	. Set the total spin multiplicity of this molecule to spin (i.e., 0 = singlet (default), 1 = doublet, 2 = triplet, etc.) . unsigned int GetTotalSpinMultiplicity 	() 	. Returns:; the total spin on this molecule (i.e., 1 = singlet, 2 = doublet...) . Returns the total spin multiplicity -- if it has not previously been set it is calculated from the atomic spin multiplicity information assuming the high-spin case (i.e. it simply sums the atomic spins, making no attempt to pair spins). However, if you set atomic spins with OBAtom::SetSpinMultiplicity() you really should set the molecular spin with OBMol::SetTotalSpinMultiplicity() . Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/676:734,simpl,simply,734,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/676,1,['simpl'],['simply']
Usability,"The AppVeyor thing is relatively new, but it's clearly a routine fail - since the Windows builds on GitHub are working, I'm going to ignore it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218#issuecomment-629654319:47,clear,clearly,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218#issuecomment-629654319,2,['clear'],['clearly']
Usability,"The Babel 1.6 code has a variety of; undocumented/semidocumented switches. From convert.c:. -version; -v verbose (i.e. debugging output); -spline; -split; -renum X (start with atom X for the Z-matrix); -precip; -push; -nodummy; -m menu mode; -help; -h add hydrogens; -d delete hydrogens (or other type); -center; -charge; -blurb (like help); -bbldef; -align. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/17"":https://sourceforge.net/p/openbabel/feature-requests/17",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386:37,undo,undocumented,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386,1,['undo'],['undocumented']
Usability,"The C# code is automatically generated by SWIG. Like the other language bindings it simply calls the native C++ OpenBabel library. As a result, it can not be used in Silverlight. You might want to check out webel instead, which is running on Silverlight at http://baoilleach.webfactional.com/site_media/webel/ (some functionality is missing at the moment due to maintainence upgrade). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1523#issuecomment-281811216:84,simpl,simply,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1523#issuecomment-281811216,2,['simpl'],['simply']
Usability,"The CVS update from June 22nd fails to compile for me:. mol2format.cpp: In member function `virtual bool ; OpenBabel::MOL2Format::ReadMolecule(OpenBabel::OBBase*, ; OpenBabel::OBConversion*)':; mol2format.cpp:247: error: `ClearBond' undeclared; (first use this function). If I comment out the line 'patom->ClearBond();' then; the system builds, but of course it may not be working; correctly for format conversions... . Other parts of the system appear to function normally. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450:222,Clear,ClearBond,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450,2,['Clear'],['ClearBond']
Usability,"The ConnectTheDots() ""cleanup"" deletes too many bonds when there is a small bond angle. . In pseudocode, the broken bit of the algorithm is:; WHILE (atom exceeds its maximum valence OR smallest bond angle < 45 degrees) { DELETE THE LONGEST BOND }. The documentation does not mention the minimum bond angle rule. I attach an XYZ file for a molecule that I would expect to have bonds angles less than 45 degrees, and for which ConnectTheDots() returns very strange results. I am not sure where the 45 degree constraint comes from, so although simply removing it solves my specific problem, I am nervous suggesting this as the general solution. Perhaps some people like it? (I've not yet found a reference to it though). However, even if consensus is that there should be a >45 degree rule, the current implementation is flawed: if the two shortest bonds from an atom are at 44 degrees to each other, the algorithm deletes all the longer bonds (longest first) before deleting the offending bond, and you end up with only one bond. This is surely not desired. ASCII sketch of expected bonding:; O-O; \ /; Ti; /|\; Cl3. Molecule is described in http://dx.doi.org/10.1021/jp0661950. Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/745:541,simpl,simply,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/745,1,['simpl'],['simply']
Usability,"The DSW and DSP files for VC++ are not usable with ; 1.1000, some files need to be added from the CVS. lshyamal AT yahoo DOT com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/422:39,usab,usable,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/422,1,['usab'],['usable']
Usability,"The OBExtensionTable data (and likely other classes) seems to be cleared when the object is destroyed. If the ASCII files cannot be found by the OBExtensionTable, then the next extension table receives no data at all. The &quot;data headers&quot; should probably be &quot;static const char&quot; rather than just &quot;char&quot; types. (Why would the data be anything other than const?). -Geoff. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395:65,clear,cleared,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395,1,['clear'],['cleared']
Usability,"The ViewMol code is clearly incorrect. The code reads; coordinates in bohr, converts to angstroms internally; and then writes as angstroms. This clearly causes coordinate shifts when converting; to/from this format. (e.g. roundtripping). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/417:20,clear,clearly,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/417,2,['clear'],['clearly']
Usability,"The XTCformat code needs a more graceful mechanism for failing and returning an error. The current code calls exit() which will, of course, kill any application calling libopenbabel. For 2.2.1, this code has been revised to simply call return(), but there must be a better error handling mechanism for this code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/140"":https://sourceforge.net/p/openbabel/feature-requests/140",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1509:224,simpl,simply,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1509,1,['simpl'],['simply']
Usability,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1633,simpl,simply,1633,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,2,['simpl'],['simply']
Usability,"The change I've made is simply to remove the prescan for illegal characters as we shouldn't be scanning over the SMILES string twice. It's enough to do this in the parser. I've moved the warning message into ParseSimple and ParseComplex, but depending on the location of the illegal character, the parser will often just ""return false;"" without any warning message. The day will come when we improve the warning messages across the board, but that's not the focus of this PR, just to reduce the work we're doing.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1716:24,simpl,simply,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1716,1,['simpl'],['simply']
Usability,"The code in `src/elements.cpp` GetAtomicNum() was rewritten to a set of switch statements - clearly many cases with capitalization need to be fixed (e.g., https://github.com/openbabel/openbabel/blob/master/src/elements.cpp#L257)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-798767474:92,clear,clearly,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-798767474,2,['clear'],['clearly']
Usability,"The configure script should detect expat if available; for use with CML and other XML-based file formats.; (These will probably become more widely used soon.). This would greatly simplify the cml.cpp code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/21"":https://sourceforge.net/p/openbabel/feature-requests/21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390:179,simpl,simplify,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390,1,['simpl'],['simplify']
Usability,"The current CVS version of obgrep seems to have uncovered a bug ; in obconversion.h/cpp on UNIX (at least). The code now assigns a default format and stdin/stdout for the ; conversion input/output streams. Everything goes normally until :. // Search for pattern; for (c=0;;); {; mol.Clear();; conv.Read(&mol);; if (mol.Empty()); break;. The conv.Read() causes the program to abort after a failed cast from ; obconversion code. The new obgrep code ""looks"" correct. Since I'm not sure how to debug code in obconversion.* easily, I'm ; currently assigning this to Chris Morley. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445:283,Clear,Clear,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445,1,['Clear'],['Clear']
Usability,"The current Gasteiger charge model in Open Babel is clearly based ; on the old Gasteiger-sigma charges and does not include later ; contributions from that group. The partial charge model should be updated to allow multiple ; algorithms and a more recent Gasteiger-Marsili implementation and ; parameters. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/62"":https://sourceforge.net/p/openbabel/feature-requests/62",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1431:52,clear,clearly,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431,1,['clear'],['clearly']
Usability,"The dot notation in SMARTS is not supported by Open Babel. Hopefully it will be at some point, so I'll mark this as a feature request. Our docs should make this clear, though, so I'll also mark the docs to be fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1612#issuecomment-323314445:161,clear,clear,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1612#issuecomment-323314445,2,['clear'],['clear']
Usability,"The fastsearch method uses fingerprints which describe molecules. This means, as you say, that the target of a fastsearch specified in the -s option has to be a molecule, i.e. SMILES - and SMARTS is not acceptable. I don't see that changing. The documentation and the error message, which is misleading, could do with improvement. I have altered the code in the SVN trunk so that now the error message is now:. Could not make a molecule from a1aaaaa1; This needs to be valid SMILES when using fastsearch.You can use the more versatile SMARTS in a normal substructure search. I've also altered the description of the format to make this clearer. Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793873:636,clear,clearer,636,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793873,2,['clear'],['clearer']
Usability,"The first leak is fixed, the second is still in place.; Tested with latest trunk version (4012). I found the 'delete pLineEndBuf;' in the destructor commented out. If I uncomment it all leaks are gone for my testcases (most are for-loops with heavy OBConversion instantiation and ReadString usage.); I didnt look through all the OBConversion code, there might be cases where a delete of the pLineEndBuf in destructor segfaults, but for a simple OBConversion instantiation and ReadString usage the issue remains. Original comment by: runz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566:438,simpl,simple,438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566,2,['simpl'],['simple']
Usability,"The fix is for a simple string-to-integer function where it was mistakenly coercing a istringstream to a boolean, but MSVC 2013 no longer is happy with this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/174:17,simpl,simple,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/174,1,['simpl'],['simple']
Usability,The following molecule has unspecificied dbl bond stereo but is rendered as cis:. obabel -:ClC=CCl -O tmp.svg. A twisted dbl bond should be used to indicate unknown stereo (never mind the IUPAC guidelines). Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1165:194,guid,guidelines,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1165,1,['guid'],['guidelines']
Usability,"The following simple example code models much more complex situation when OBMol have to be created programmatically from the data stored in the format of other molecular modeling tookit. ; - It reads existing mol2 file to get some data (in real example data come from other toolkit); - It creates empty OBMol and populates it with data; - It writes obtained file back in mol2 format; The problem is that setting partial charges in such OBMol object makes no effect at all - the written file always have zero charges. ```; #include <iostream>; #include <openbabel/obconversion.h>; #include <openbabel/mol.h>; #include <openbabel/atom.h>; #include <openbabel/residue.h>. using namespace std;. int main(int argc,char **argv); {; OpenBabel::OBConversion conv;; OpenBabel::OBMol mol;; conv.ReadFile(&mol, ""mhc-opt.mol2"");; ; OpenBabel::OBMol newmol;; ; OpenBabel::OBResidue obr;; ; FOR_ATOMS_OF_MOL(ba, mol); {; OpenBabel::OBAtom oba;; ; auto n = ba->GetAtomicNum();; oba.SetAtomicNum(n);; ; auto v = ba->GetVector();; oba.SetVector(v);; ; float c = ba->GetPartialCharge();; oba.SetPartialCharge(c);; ; newmol.AddAtom(oba);; ; obr.SetName(""RES"");; obr.SetNum(1);; obr.SetChain('A');; obr.AddAtom(&oba);; obr.SetAtomID(&oba, ba->GetResidue()->GetAtomID(&(*ba))); ; }; newmol.AddResidue(obr);; ; ; FOR_ATOMS_OF_MOL(ba, newmol); {; ba->SetPartialCharge(1.0); // These charges are NOT actually set!; }; ; conv.WriteFile(&newmol,""out.mol2""); // Writes zero charges; ; return 0;; }; ```. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: latest git; Operating system and version: Linux Mint 18.3. ## Expected Behavior; Generated file have to contain charges set programmatically in the code. ## Actual Behavior; Generated file have zero charges regardless of what I set in the code. ## Steps to Reproduce; The code above compiled as:; g++ ob.cpp -I/usr/include/openbabel-2.0/ -L/usr/lib/openbabel/2.4.90/ -lopenbabel -lstdc++ -O3 -",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1817:14,simpl,simple,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1817,1,['simpl'],['simple']
Usability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:28,simpl,simply,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,2,['simpl'],['simply']
Usability,"The new 2.1 function OBMol::NewBond() appears to cause crashes when used. It's not clear how it differs from the existing AddBond() call, which works fine. I'm adding a new unit test for this bug and will debug. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608:83,clear,clear,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608,1,['clear'],['clear']
Usability,"The opening bond-specification of a ring-closure digit; is ignored, resulting in incorrect answers and in; failure to recognize invalid SMARTS. Strictly speaking, bond specs are supposed to go on the; closing ring-digit, e.g. C1CCCCC=1 (and OB parses this; correctly). However, most users will type ""C=1CCCCC1"",; and indeed OpenBabel itself produces MANY SMILES in; this form, resulting in a large fraction of molecules; that don't match their own SMILES strings. Example: C=1CCCCC1 matches cyclohexane, which is wrong.; Instead, the following four should be identical and; should match cyclohexene:. C=1CCCCC1; C1CCCCC=1; C=1CCCCC=1; C1=CCCCC1. Example: C:1CCCCC:1 is valid (but won't match anything). Example: C=1CCCCC#1 is wrong; Example: C-1CCCCC:1 is wrong. The correct rule should be: ; * If either, but not both, ring-digits are preceeded; by a bond spec, then use that bond spec; * If both ring-digits are preceeded by a bond spec,; then the two specs must agree or it is an error. Looking at the current code, parsmart.cpp in the; regious of lines 1445 and 1472, it looks like the; parser is simply discarding a bond spec that was found; before the ""opening"" ring digit. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/548:1101,simpl,simply,1101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548,1,['simpl'],['simply']
Usability,"The original patch is from @rogersayle, which I've restricted a bit. This is is a SMILES extension that is already present in OEChem and RDKit, both undocumented and due to Roger. For at least OEChem, support is present for 1- and 2-digit numbers too. The primary use case is to support new elements where we don't yet have the symbol, but also to read SMILES written by OEChem/RDKit where *they* don't yet have the symbol. My own take is that this seems relatively safe, at least if restricted to 3-digits. As an implementation detail, if an atomic number >255 is specified, the SMILES is rejected with a warning (we use a char for the atomic number).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1997:149,undo,undocumented,149,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1997,1,['undo'],['undocumented']
Usability,The problem is clearly demonstrated on the image in attachment. The Dreading atom types on the right part of the image are correctly assigned by a commercial engine (Materials Studio) witch handle the fragment correctly automatically. The left part of the image shows OB results. OB was not able to identify the resonant bonds on the ionized aromatic cycle = atom types assignment is incorrect. I believe not only Dreading but the other force-fields atom type assignment will be incorrect as well. ![KAXWOV_inocrrect-atom_types](https://github.com/openbabel/openbabel/assets/55315298/e5f1d64f-6f6f-4dcc-8496-dddd567e3eaa),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005:15,clear,clearly,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005,2,['clear'],['clearly']
Usability,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:287,simpl,simply,287,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,2,['simpl'],['simply']
Usability,"The problem isn't with the OBDotNet.dll. It's with openbabel_csharp.dll. If; I were you, I would search my computer for all instances of this file and; consider which is being found when you run your application. On Mon, 28 Oct 2019 at 13:52, xjjius <notifications@github.com> wrote:. > Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0; > directory. The C# code was built successfully. But l got the the error; > message above when I try to run it. In the 2.4.1 version, the same code; > runs perfectly..; >; > I have also tried the the Java binding using the same method in; > openbabel-3.0.0. It worked will.; >; > A simple test code:; >; > class Program; > {; > static void Main(string[] args); > {; > string molFile = ""N(CNC1)CC1"";; > OBConversion conv = new OBConversion();; > conv.SetInFormat(""smi"");; > OBMol mol = new OBMol();; > conv.ReadString(mol, molFile);; > int numberAtoms = (int)mol.NumAtoms();; >; > for (int i = 1; i <= numberAtoms; i++); > {; > OBAtom atom = mol.GetAtom(i);; > string label = atom.GetAtomType();; > uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); >; > Console.WriteLine($""{label} : {hetero}"");; > }; >; > Console.ReadLine();; > }; > }; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2068?email_source=notifications&email_token=AAALCGPTRYKWOTDHRQMP6Y3QQ3VBXA5CNFSM4JFP3FMKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECM6E7I#issuecomment-546955901>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGJGSAN5UJSSOUWLKWLQQ3VBXANCNFSM4JFP3FMA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525:638,simpl,simple,638,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525,2,['simpl'],['simple']
Usability,"The random numbers are *cough* a feature. For me on Windows, I have all; zeros for the first case, and a perfectly fine xyz file in the second.; Could you be more clear on which one crashed?. On 20 November 2017 at 18:16, hlambert17 <notifications@github.com> wrote:. >; > - [x ] I believe this to be a bug with Open Babel; > - This is a feature request; >; > Environment Information; >; > Open Babel version: 2.4.1.; > Operating system and version:; > My OS is; > Distributor ID: Ubuntu; > Description: Ubuntu 16.04.3 LTS; > Release: 16.04; > Codename: xenial; >; > I'm also getting the crash on RedHat; > LSB Version: :core-4.1-amd64:core-4.1-noarch; > Distributor ID: RedHatEnterpriseServer; > Description: Red Hat Enterprise Linux Server release 7.2 (Maipo); > Release: 7.2; > Codename: Maipo; >; > On both distribution, I installed the recommended packages on the; > openbabel website (Cairo, Eigen, SWIG, etc...); > Expected Behavior; >; > I'm trying to obtain the xyz cartesian coordinates for a molecule using; > the following command:; > obabel -:'C(CS(=O)(=O)O)C[As]CCO' -oxyz --gen3D; > or also:; > obabel -:'Cl- <http://CCO>Cl' -oxyz --gen3D; > Actual Behavior; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1694>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVRIzBbTojk1uh0f_yeG1o_inEY0ks5s4cIRgaJpZM4Qkrqi>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694#issuecomment-346045155:163,clear,clear,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694#issuecomment-346045155,2,['clear'],['clear']
Usability,"The real problem was that the hydrogen atoms on the nitrogen atom were not correctly converted when writing out the results from obrotamer. A simple conversion also corrupted the file on output. (The atom ids were ""H 1"" instead of ""H1""). Now fixed in trunk. . Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/802#issuecomment-281793571:142,simpl,simple,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/802#issuecomment-281793571,2,['simpl'],['simple']
Usability,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1282:4,simpl,simple,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282,1,['simpl'],['simple']
Usability,"The simplicity of installation of openbabel is certainly nice, compared to rdkit.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2306#issuecomment-737038156:4,simpl,simplicity,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2306#issuecomment-737038156,2,['simpl'],['simplicity']
Usability,"The solution is much simpler than I've anticipated. There is `SWIG_PYTHON_2_UNICODE` variable that has to be defined to [support unicode in Python 2.x](http://www.swig.org/Doc3.0/Python.html). Although swig has to be at least 3.0.8 to work, which is the case for Anaconda - we should be fine. There shouldn't be any downside to this resolution for earlier versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870:21,simpl,simpler,21,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870,2,['simpl'],['simpler']
Usability,"The switch statement is generated by a Python script in the maintenance; repo (https://github.com/openbabel/maintenance/tree/master/scripts/elements).; A simple change should generate the uppercase versions. On Sat, 20 Mar 2021, 05:06 Aman Kumar, ***@***.***> wrote:. > Can i take this issue? @ghutchis <https://github.com/ghutchis>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2333#issuecomment-803250571>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGN7EHWSDHNDFPILIJDTEQUN3ANCNFSM4ZC3WLVQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803289137:154,simpl,simple,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803289137,2,['simpl'],['simple']
Usability,"The unique IUPAC name according to the nomenclature ; rules of the IUPAC. See for instance: . A Guide to IUPAC Nomenclature of Organic Compounds ; (recommendations 1993). Panico, R.; Powell, W.H. and Richer, J-C.; Blackwell Science, 1993 [ISBN 0-63203-4882] ; Corrections published in Pure Appl. Chem., Vol. 71, No. ; 7, pp.1327-1330, 1999 ; ; http://www.iupac.org/publications/books/author/panico.h; tml. Reported by: lmocbt. Original Ticket: ""openbabel/feature-requests/31"":https://sourceforge.net/p/openbabel/feature-requests/31",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400:96,Guid,Guide,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400,1,['Guid'],['Guide']
Usability,"There are a few example about how to use the OpenBabel Module here: https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonDoc.html. Taking the SMILES example and adapting for .mol2, try using the following as a starting point:; ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""mol2""). mol = openbabel.OBMol(); obConversion.ReadString(mol, ""C1=CC=CS1""); mol.AddHydrogens(); openbabel.OBBuilder().Build(mol) # To get coordinates. # If you just want the string; mol2string = obConversion.WriteString(mol). # To save as a .mol2 file; obConversion.WriteFile(mol, ""out.mol2""); ```. Alternatively, you can use the `pybel` module, which is somewhat simplified:; ```python; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C1=CC=CS1""); mol.addh(); mol.make3D(); mol.write(""mol2"", ""out.mol2""); ```. However, I believe it is much simpler to call the `obabel` executable:; ```sh; obabel -:""C1=CC=CS1"" --gen3D -O out.mol2; ```; which can be called from Python via:; ```python; import os; os.system(""obabel -:\""C1=CC=CS1\"" --gen3D -O out.mol2""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811:727,simpl,simplified,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811,4,['simpl'],"['simpler', 'simplified']"
Usability,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:73,simpl,simple,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615,2,['simpl'],['simple']
Usability,"There's a cascade at the moment with SDF (in particular) - it currently calls SSSR for aromaticity. Anyone who wants to take up the task of aromaticity detection from a breadth-first-search after simple ring detection is welcome. I just haven't had the time. Mol2 has fewer cascaded calls, since aromaticity is defined in the bonds (usually). One of the Google Summer of Code proposed projects is to replace Kekulize with a faster graph-based algorithm.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469:196,simpl,simple,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469,2,['simpl'],['simple']
Usability,"This PR has two changes:; 1. Keep aromaticity in EndModify(); 2. A drive-by removal of code in EndModify() that I recognise as a workaround for the problem fixed in #1724. I know that there's an idea that all lazily perceived flags should be blown away in EndModify(), but I think this is going too far - we should try as far as possible to avoid blowing away information that has been perceived. Here I make a minor change so that aromaticity perception is preserved even when, for example, an atom is deleted (which triggers this code). IMO, this keeps things simpler and more understandable. Aromaticity will only be reperceived when the user directly unsets the aromaticity flag of the OBMol. Until then, they can delete all they want and nothing will change. If the user deletes an atom from benzene and writes it out as SMILES and sees that it is aromatic, they will soon realise what's going on. This is easier to understand than the current situation, where if you want to preserve the aromatic flags then you need to set the molecule as having aromaticity perceived after deleting an atom. To a user, it wouldn't be at all obvious that this is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1847:562,simpl,simpler,562,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1847,1,['simpl'],['simpler']
Usability,"This don't believe this is an Open Babel bug. I don't know what version of Cairo you're using or whether you have the appropriate devel packages for that. The errors in the log above are:. ```; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; ```. I'd suggest you run `ccmake .` in your build directory and clear out the lines for:; ```; CAIRO_INCLUDE_DIR ; CAIRO_LIBRARY ; ```. By unsetting them, you'll build a version of Open Babel without Cairo (PNG) support, but I can guarantee it will build. Otherwise, you'll need to sort out the libcairo errors.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437:550,clear,clear,550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437,2,['clear'],['clear']
Usability,"This fixes #2677 ; CorrectForPH currently clears all perceived attributes through mol.EndModify(). In my change, I check if chains are perceived before hand and in that case sets them as perceived also after since normally the residues and chains shouldn't change through pH-correction.; However, this is a breaking change if someone previously relied on the old behavior. In that case they need to manually reperceive the chains after the call to CorrectForPH (or reset the flag before...).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2678:42,clear,clears,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2678,1,['clear'],['clears']
Usability,"This fixes following issue.; #340; The total spin of the ground state is difficult to calculate, however, my simple patch; is better than apparently wrong total spin.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1563:109,simpl,simple,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1563,1,['simpl'],['simple']
Usability,"This fixes following issue.; https://github.com/openbabel/openbabel/issues/340; The total spin of the ground state is difficult to calculate, however, my simple patch; is better than apparently wrong total spin.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1562:154,simpl,simple,154,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1562,1,['simpl'],['simple']
Usability,"This involves two commits that:; 1. install the python files into site-packages corresponding to the python used, rather than next to the libraries. eg /usr/lib64/python2.7/site-packages instead of /usr/lib64; 2. CMake's PythonLibs and PythonInterp can find different versions of python. In my case, I had python3.2 and python2.7 installed. the PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs found the devel files for Python3 . This clearly did not work very well. Now, I search for the python first, then restrict the libraries found based on the version of the python interpreter.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/33:461,clear,clearly,461,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33,1,['clear'],['clearly']
Usability,"This is a DDL2 dictionary tag ; (symcif: http://oldwww.iucr.org/iucr-top/cif/cifdic_html/2/cif_sym.dic/index.html), which current OB code does not fully support. As Geoff said that tag is not supposed to be computer-readable, so the supplied CIF files are actually incomplete. But the ""_space_group.transform_*"" tags which should be used instead are not handled by openbabel right now (reading them is one thing, but the spacegroup routines would have to take those into account). It would be so much simpler if the files always included the unique Hall symbol, ot the list of transforms... All this being said, the list in spacegroup.txt does include all the origin choices 1 and 2 (e.g. ""P 4/n m m:1"" and ""P 4/n m m:2""). So I have now added a hack in cifformat.cpp, so that when a HM symbol is found an the _space_group.IT_coordinate_system_code is equal to '1' or '2', the HM symbol is appended with ':1' or ':2', which is then correctly interpreted by the spacegroup routines. This is available in SVN head. Since :1 and :2 probably are the most common cases for this tag, this should be helpful. Other values for this tag will generate an appropriate warning. Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801325:501,simpl,simpler,501,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801325,2,['simpl'],['simpler']
Usability,"This is from Craig James (migrated from PR#1445453. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546:164,simpl,simple,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546,1,['simpl'],['simple']
Usability,"This is related to https://github.com/openbabel/enhancement-proposals/pull/7. I only made the change for SMILES and InChI, as MOL needs more thought. The change was simple in the end and didn't require any API changes. A one line change in the relevant readers. It was figuring out why test cases failed that took the time. A number of bugs were fixed in the course of getting the test suite back to working:; - if a molecule didn't have hybridisation perceived, OBBuilder did not work correctly.; - OBAtom:: and Bond:IsAromatic() did not always trigger reperception, even where the OBMol flag was unset. I've changed this behavior, as I think it's unexpected.; - vector3::randomUnitVector() created a static OBRandom but set the seed using system time each time it was called. This meant that the same 'random' vector was returned during a period of 1s. Meanwhile, the OBBuilder is looping around for 1 second trying to find a suitable vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1696:165,simpl,simple,165,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1696,1,['simpl'],['simple']
Usability,"This is the minimal example allowing to reproduce the problem:. ```; #include <openbabel/mol.h>; #include <openbabel/isomorphism.h>; #include ""openbabel/query.h""; #include ""openbabel/obconversion.h"". using namespace std;. struct MyMol {; vector<string> name;; vector<int> element;; vector<float> charge;; vector<int> resid;; vector<char> chain;; vector<float> x;; vector<float> y;; vector<float> z;; };. // Convert custom molecule to OBMol; void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); {; mol.Clear();. // map of residues; map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<sel.element.size();++i){. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(sel.element[i]);; oba->SetPartialCharge(sel.charge[i]);; oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);. // Create new residue if needed; if(reslist.count(sel.resid[i])==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(sel.resid[i]);; obr->SetChain(sel.chain[i]);; reslist[sel.resid[i]] = obr;; }. reslist[sel.resid[i]]->AddAtom(oba);; reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:504,Clear,Clear,504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,1,['Clear'],['Clear']
Usability,"This isn't a bug, but the behaviour is not very clear from the docs. If specified as -s ""O=c1cc[nH]c(=O)n1O"", then the [nH] is interpreted with the SMARTS meaning, i.e. must have exactly one hydrogen attached. If you drop the H, then you hit both. On the other hand, if the molecule is stored in a file query.smi, and you use -s query.smi, then it behaves in the first place as intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1318#issuecomment-356420893:48,clear,clear,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1318#issuecomment-356420893,2,['clear'],['clear']
Usability,This isn't a bug. You need:; `#include <openbabel/babelconfig.h>`. This sets appropriate HAVE_* macros. As far as LBFGS.h - that's clearly a bug - you need to make sure it's an installable header.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2098#issuecomment-559824947:131,clear,clearly,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098#issuecomment-559824947,2,['clear'],['clearly']
Usability,"This pull request is related to issue #1298 on which I have commented. The segfault was caused by line with symmetry of the mode like this one:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; The line was skipped by the program and the following loop did not read atoms correctly. The problem was apparently fixed in master, however fixing it exposes new segfault caused by the fact that `modeCount` variable is defined in line **548** as `unsigned int` and then used to leave the loop in lines **551-591**. At the end of loop there is a line; ```; modeCount = vs.size() - 3;; ```; For an empty vector the result (-3) is incorrectly casted to `unsigned int` and the condition in line **551**; ```; while (modeCount >= 1) {; ```; fails. This has been resolved in lines **554-555** like this:; ```; if (!atom); break; // something is very wrong; ```; My suggestion is to simply declare `modeCount` as `int`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1772:943,simpl,simply,943,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1772,1,['simpl'],['simply']
Usability,"This pull request makes two changes to the Open Babel API:; 1. The count of implicit hydrogens on an atom is stored explicitly.; 2. Kekulization has been rewritten as a perfect matching algorithm rather than dearomatization. Hat-tip to @johnmay for help with this. Both of these changes address long-standing major deficiences of the toolkit. Regarding (1), there have been many bug reports related to implicit hydrogens appearing/disappearing. Furthermore, it is really much simpler to do things this way, and the code will be faster as there will be no continual reperception of hydrogen counts. Previously there were several functions and flags to work-around the existing system such as ForceNoImplH; these all go away now. Regarding (2), the previous approach was (IMO) solving the wrong problem. It is now much simpler and faster. Previously parts of the kekulization infrastructure were spread around several different files (some in SMILES format, some in OBMol, and some in kekulization.cpp) and had several associated trigger functions (e.g. IsKSingle). So what's the downsides? Well, these are major changes and there are still some wrinkles:; 1. The existing radical code was built as an adjustment on top of the old implicit valence code. There are no tests, and so some of this may not work now. I'll be meeting Chris Morley at an RSC meeting in June and will bend his ear.; 2. Smiley Format doesn't read in SMILES correctly. I think this should be removed and the error messages and nice functions merged with the existing SMILES reader.; 3. Since kekulization has been tightened up, we should implement the Daylight aromaticity model as a starting point for SMILES writing. Otherwise we will write out SMILES we cannot kekulize.; 4. I implemented an implicit hydrogen adder based on typical valences (e.g. for PDB) with code from @dan2097. This is likely different from the old one (using IMPVAL values), and may need further tweaking.; 5. I didn't know where to put global functions, ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576:476,simpl,simpler,476,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576,2,['simpl'],['simpler']
Usability,"This solved the problem, thanks a lot!; However, I have to admit that this is not intuitive at all. Is there any chapter of documentation which describes all the magic, which happens when new molecule is constructed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523:82,intuit,intuitive,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523,2,['intuit'],['intuitive']
Usability,"This will undoubtedly need more dependencies installed (C#, etc.) but I'll tackle those as they come up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2183#issuecomment-620689648:10,undo,undoubtedly,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2183#issuecomment-620689648,2,['undo'],['undoubtedly']
Usability,Though I guess we need to improve the docs to make this clear...so both a bug *and* a feature request.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1616#issuecomment-323313988:56,clear,clear,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1616#issuecomment-323313988,2,['clear'],['clear']
Usability,"To be clear, I definitely agree that it's a problem and needs to be fixed. However I'm not familiar with that part of the code. Perhaps Geoff can comment further. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795293:6,clear,clear,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795293,2,['clear'],['clear']
Usability,"To be clear, my thought is to change this patch so it can be used (even if with effort) to generate a valid CML file using the low-level API (as well as the other formats which don't need a header/footer) and keep the existing pybel code valid for the formats which it does support. I don't plan to touch the pybel code with this patch. Some other patch will change it to generate valid CML output, which it doesn't currently do.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455447346:6,clear,clear,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455447346,2,['clear'],['clear']
Usability,"To be honest I kind of agree with you on the whole Dn thing - using queries that rely on explicit vs implicit H's does just sound like a bad idea. Perhaps I shouldn't have waxed quite so lyrical in my previous response. I have been caught out a couple of times even in a SMILES + Daylight environment - deuterated compounds being one example.... To answer your question, if you do make the assumption that all H's are implicit, then a query for a primary amine is as simple as [ND1][CX4], and you can capture both pyridone tautomers with [nD2]c~[OD1]. ""Dn"" becomes a synonym for ""is bonded to n heavy atoms"", which can come in very handy. But to reiterate, on reflection I think this is slightly sloppy querying on my part, and I certainly wouldn't suggest changing the way OB works just so that these queries work as expected. (Though I'd be interested to know how many other people use similar kinds of queries). I do think it would be worth finding out what some of the other major software vendors do with the H descriptor in a SMILES string though, even if this is just a matter of internal representation. To put it another way, if everybody else does it the same way Daylight does, is there a good reason OB is different?. Anyway, thanks for making me think this through a bit more rigorously!. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802039:467,simpl,simple,467,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802039,2,['simpl'],['simple']
Usability,"To clear up the issue, do you still have a problem and use case for converting SMILES to Fasta @shahik? I still think that going that way is not something that we could expect OpenBabel to do so my suggestion is to close this issue.; On the other hand, Fasta to SMILES or any other ""normal chemistry format"" should work, without using -j in my opinion, but that is a different issue and it would be nice with example files from a real scenario. So if you have good examples there @shahik I would suggest creating a new issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827444312:3,clear,clear,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827444312,2,['clear'],['clear']
Usability,"To do this, we'd have to implement the AM1 semiempirical quantum method, which seems impractical. At the moment, there are several charge models implemented:. * eem Assign Electronegativity Equilization Method (EEM) atomic partial charges. Bultinck B3LYP/6-31G*/MPA; * eem2015ba Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/AIM; * eem2015bm Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/MPA; * eem2015bn Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/NPA; * eqeq Assign EQEq (charge equilibration) partial charges.; * fromfile Assign charges from file containing {'atom-name', charge} pairs; * gasteiger Assign Gasteiger-Marsili sigma partial charges; * mmff94 Assign MMFF94 partial charges; * none Clear all partial charges; * qeq Assign QEq (charge equilibration) partial charges (Rappe and Goddard, 1991); * qtpie Assign QTPIE (charge transfer, polarization and equilibration) partial charges (Chen and Martinez, 2007). There are actually quite a few EEM methods implemented. I'd be willing to implement the BCC part of AM1-BCC - as in, you can parse an AM1 calculation from MOPAC and generate AM1-BCC charges. But I think there are better models out there. (eem2015* are very good IMHO)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905:849,Clear,Clear,849,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905,1,['Clear'],['Clear']
Usability,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:20,simpl,simple,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131,4,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"To really use the potentials of OpenBabel, the INSTALL and README files are important reads, otherwise people will miss big parts of the installation e.g. the bindings and depictions. If there should be an install script, I think it should at least ask for a few common installation options. Also, I've never had make test not fail. At all my attempts, at least test_ffgaff_1 fails so then the install script won't install anything anyway with no clear indication. (With no clear indication, I mean something in the lines of ""Test(s) failed so OpenBabel will not be installed, to force installation, type 'sudo make install'"").",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682:447,clear,clear,447,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682,4,['clear'],['clear']
Usability,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:685,clear,clear,685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['clear'],['clear']
Usability,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2109:331,simpl,simple-approach-to,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109,4,['simpl'],"['simple', 'simple-approach-to', 'simply']"
Usability,"Travis is simply intended to guard against test failures. To actually deal with them, you need to reproduce the failure locally. There is more info on running the tests at: https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. This describes how to run an individual test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992:10,simpl,simply,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992,2,['simpl'],['simply']
Usability,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1232,guid,guide,1232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293,2,['guid'],['guide']
Usability,"UNL 3lcs_prot.pdb -c; 1500; ```. So I resort to AWK to extract them separately (attached below), i.e. ```shell; $ awk '{if ($0 ~ /UNK/) print}' 3lcs_prot.pdb > UNK.pdb; $ awk '{if ($0 ~ /UNL/) print}' 3lcs_prot.pdb > UNL.pdb; ```. but their individual display e.g., in Jmol does not look pretty. For a protein structure I anticipate a couple of unbounded / unlinked molecules of water, perhaps one/a few small ligands; but there are bit too many atoms/too large ensembles to feel comfortable here. In addition, (UNK_detail), there are a couple of motifs in the structure with added hydrogens which merit a check. E.g., the cyclopropane -- not that it is impossible, but for its ring strain less likely to be seen in a naturally occurring compound. The same frame equally features a carbon exceeding tetravalence .and. hydrogens seemingly sharing the same position; which is not good, chemically speaking. The small molecules [the report](https://www.rcsb.org/structure/3LCS) mentions as independent from the protein are not clearly visible (yet). So I thought one could split the original file (not yet protonated) into molecules Open Babel recognizes as separate:. ```shell; $ obabel 3lcs.pdb --separate -O fragment.pdb -m; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 142 molecules converted; 142 files output. The first is fragment1.pdb; ```. There are some which are large:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -rn | head; 11135 total; 5517 fragment.pdb; 1422 fragment1.pdb; 894 fragment19.pdb; 832 fragment9.pdb; 502 fragment17.pdb; 468 fragment7.pdb; 274 fragment5.pdb; 224 fragment11.pdb; 200 fragment13.pdb; ```. -- fragment13.pdb includes the/a cyclopropane -- yet quite a number which are small (water), too:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -n | grep ""5 frag"" -c; 122; $ wc -l fragment*.pdb | sort -k 1 -n | head; 5 fragment100.pdb; 5 fragment101.pdb; 5",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024:1363,clear,clearly,1363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024,2,['clear'],['clearly']
Usability,Undocumented Babel 1.6 command-line,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386:0,Undo,Undocumented,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386,1,['Undo'],['Undocumented']
Usability,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/35:493,simpl,simply,493,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35,1,['simpl'],['simply']
Usability,"Wait a second. Wait a second. The penny has just dropped. You are building from the wrong directory. It should be:. tar -xf openbabel-2.3.0.tar.gz --gunzip; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX=../openbabel-install ../openbabel-2.3.0. I understand now why you did this. In our installation instructions we talk about a ""src"" directory. I didn't mean the ""src"" directory in the openbabel tar.gz. I'll update the installation instructions to be more clear. Can you let me know if this works for you... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1072#issuecomment-281799941:463,clear,clear,463,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072#issuecomment-281799941,2,['clear'],['clear']
Usability,"Was all that you wanted to do filter out the error messages? In that case, a simple `obabel check01.smi -ocan -e 2>/dev/null` would do. Or `obabel check01.smi -O result01.can -e` to get the output in a file. I thought you needed to know which input SMILESs that didn't convert properly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812:77,simpl,simple,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812,2,['simpl'],['simple']
Usability,"We don't have documentation of the keys anywhere, which is the important part of being able to use the files to create an actually usable data structure. (IOW schrodinger/maeparser deals with the syntax but not the semantics.). I think this is a good idea, but it is probably on us to first document or perhaps even implement.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1803#issuecomment-375453991:131,usab,usable,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1803#issuecomment-375453991,2,['usab'],['usable']
Usability,"What I'm trying to do is read in an arbitrary number of xyz files (thousands) each representing the reactants of a reaction. Then I have atom indices of the atoms that are involved in each reaction and I'm trying to generate a vector representation of each of those atoms using things like atomic #, # of connections, hybridization, and similar information of atoms it's bonded to. Then I aggregate the vector representations of the atoms involved in each reaction into a vector representation of each reaction as a whole. Then I use those reaction vector representations as data in a machine learning pipeline. Thanks @baoilleach, I tried keeping a reference to each reactants Molecule in my Reaction class (which I had been planning on doing anyway but hadn't remembered and hadn't needed to use yet) and that seems to keep all of the Atom instances valid at least in my initial tests involving what hadn't worked previously. Destroying all atoms owned by a Molecule in the Molecule's destructor seems like reasonable design but is that documented anywhere? If not should it be added somewhere (by me or someone else)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423:593,learn,learning,593,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423,2,['learn'],['learning']
Usability,"What happens is that some minimalist CIF files do not list either the Hall name, or give a list of transforms. So all we have is the HM name, and a separate origin choice. If think I can handle it simply by adding the :1 extension to the HM name - which I added to OB yesterday. I'll just have to take care of removing the "":n"" extension when exporting the HM name for the formats that use it (currently: pdb, cif, mmcif). Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801331:197,simpl,simply,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801331,2,['simpl'],['simply']
Usability,"When reading a file with non-UNIX line-endings, e.g. \r\n from Windows ; files or \r from old classic Mac files, input breaks horribly. In some cases with Windows, the final \n still allows getline() to function ; correctly, but the \r character shows up in titles, etc. With classic Mac files (like the attached sample), the lack of \n characters ; totally breaks file translation. What is needed is a simple translating streambuf class to filter \r\n ; sequences or \r line endings into \n for input. Since almost all of the ; internal code expects UNIX-style line endings, this would be the simplest ; solution. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/557:403,simpl,simple,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557,2,['simpl'],"['simple', 'simplest']"
Usability,"When reading a line beginning with ""ATOM"" or ""HETATM"" in PDB file,; openbabel computes element from atom name field instead of element field. Here some extract of PDB documentation :; ""Therefore the PDB element column or mmCIF type_symbol data item should; be used to determine the element type, rather than using the atom name.""; (April 25, 2007); http://remediation.wwpdb.org/documentation/remediation_overview.pdf; ""Using the justification of the atom name to derive atom type; information is now strongly discouraged."" (June 29, 2007); http://remediation.wwpdb.org/documentation/remediation-impacts.pdf. Source code (ParseAtomRecord function) :; https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk/src/formats/atomrecord.cpp . Patch explanation :; ParseAtomRecord is called when reading PDB file and PQR format because ""[PQR] format is a modification of the PDB format"" ).; In fact PDD and PQR formats are not so identical, for example in HETATM/ATOM lines, element field is mandatory for PDB format while PQR format doesn't mention it.; PDB format:; http://www.wwpdb.org/documentation/format32/sect9.html#ATOM; PQR format:; http://apbs.sourceforge.net/doc/user-guide/index.html#pqr-format. With this patch :; - PDB format and PQR format have each one their own ParseAtomRecord function (atomrecord.cpp is deleted) ; - Callers of ParseAtomRecord take care of returned value; - read/write PDB field charge (column 79-80). Please let me know if you see possible improvements. What is the coding style (code appearance) for openbabel ?. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840:1186,guid,guide,1186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840,1,['guid'],['guide']
Usability,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:833,Clear,Clear,833,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['Clear'],['Clear']
Usability,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008:278,simpl,simple,278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008,1,['simpl'],['simple']
Usability,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2076:980,clear,clear,980,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076,1,['clear'],['clear']
Usability,"While I understand the concept, this would be extremely difficult. Many formats lack coordinates, much less periodic boundary conditions. Is a molecule identical if the coordinates have simply shifted? etc. I'm happy to consider a pull request, but I think you need to carefully consider what ""equals"" means in the context of an OBMol or Pybel Molecule.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155:186,simpl,simply,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155,2,['simpl'],['simply']
Usability,"While it's clearly not a widely used format, I'm hesitant to merge a change that will now fail on old text-based responses. . Shouldn't you check if the response is non-numeric and handle with the existing code and then handle with the new code if it's a number? That seems the best solution, IMHO.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1596#issuecomment-313691663:11,clear,clearly,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1596#issuecomment-313691663,2,['clear'],['clearly']
Usability,"While this is not Open Babel specific, having a CMLDOM; written in C++ would make things much easier and would; obviously ensure direct compliance with the official; CML specifications. It'd also make a dead-simple API for CML documents:. &gt; CMLDocument doc = CMLDocument.createDocument(url);; &gt;; &gt; The DOM (synonymous with document) has methods like:; &gt; CMLMolecule mol = doc.getMolecule(); //; Java usually &quot;getX&quot;; &gt; ; //rather than &quot;GetX&quot;; &gt; CMLAtom atom = mol.getAtom(i);; &gt; Coord2 xy2 = atom.getXY2(); ; &gt;; &gt; The complete Java CMLDOM is available at; cml.sourceforge.net. It is large; &gt; and not thrilling reading but I developed it in; parallel with the OMG's; &gt; initiative on small molecules (Netgenics, ACD and; Pfizer mainly).; &gt; ; &gt; CMLDOM is an API - just as org.w3.dom.*. It is; therefore representable in; &gt; UML (and has been) and so can generate many language; bindings. The; &gt; &quot;correct&quot; way would be to UMLise CMLDOM and export; the classes in C++.; &gt; There is one class for each element (and some; maintenance classes) and; &gt; also 1 interface for each global attribute. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/22"":https://sourceforge.net/p/openbabel/feature-requests/22",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1391:208,simpl,simple,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391,1,['simpl'],['simple']
Usability,"Will do. On Wed, 14 Mar 2018, 17:26 David Koes, <notifications@github.com> wrote:. > master is not generating correct atom types when outputting pdbqt files.; > This is because the pdbqt writer works on copies (possibly fragments) of; > the original molecule. The copies have their perception flags reset. By; > default, nonpolar hydrogens are removed when outputting pdbqt files. When; > the aromaticity flags are recomputed on the molecule with the deleted; > hydrogens, atoms that should be aromatic are not marked as such.; >; > Note that this is a regression from 2.4. My suspicion is that there is a; > difference in how the new aromatic typer is dealing with molecules with; > deleted hydrogens. I would appreciate it if @baoilleach; > <https://github.com/baoilleach> could take a look.; >; > I think this fix is good in addition to any fixes that may be made to the; > aromatic typer as it will prevent an unnecessary recomputation of; > aromaticity, but would appreciate feedback. A test case is provided; > (without the fix the phenyl ring of the tyrosine is not marked aromatic).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1790; > Commit Summary; >; > - fix bug with pdbqt atom typing; > - pdbqt testcase; >; > File Changes; >; > - *M* src/formats/pdbqtformat.cpp; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-0> (6); > - *M* test/testbabel.py; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-1> (66); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1790.patch; > - https://github.com/openbabel/openbabel/pull/1790.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1790>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGX4j8B-DR0oprbp0HUfAan5t-v-1ks5teVLCgaJpZM4Sq25L>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606:980,feedback,feedback,980,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606,2,['feedback'],['feedback']
Usability,"Will test the latest revision on branch. Just FMI here, is this simply a case of a malformed input file or is it a bug in OB?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389:64,simpl,simply,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389,2,['simpl'],['simply']
Usability,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:671,Clear,Clear,671,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,8,['Clear'],['Clear']
Usability,"Without knowing the full specifications of the MOL2 file format it looks like OpenBabel is accepting the aromaticity specified in the infile and hence set the ""AromaticityPerceived"" flag to true which in turn will make IsAromatic to just report the values from the file.; The SMILES reader doesn't ""trust"" the incoming aromaticity designation since different toolkits have different aromaticity models so when you bounce through SMILES, OpenBabel unsets the ""AromaticityPerceived"" which is why IsAromatic finds the aromatic atoms.; So the simplest solution for you is to unset the flag before calling IsAromatic. (I also change the iteration to use pybel's mol.atoms to show a different way of iterate over atoms...); ```python; >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; >>> mol.OBMol.SetAromaticPerceived(False); >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041:539,simpl,simplest,539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041,2,['simpl'],['simplest']
Usability,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:55,simpl,simply,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,2,['simpl'],['simply']
Usability,Wow. The previous code was impressively convoluted. The new code is much clearer.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1797#issuecomment-375130274:73,clear,clearer,73,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1797#issuecomment-375130274,2,['clear'],['clearer']
Usability,"Yeah, I know ther are no tests, I did this on my Windows machine at work and I'm not in complete agreement with the build system... I'll try to add a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make sure that all atoms have unique x- and y-positions (that is the real problem, the long bonds are just a symptom). Before the change I get the molfile (notice the coordinates for the last three atoms):; ; OpenBabel09241813522D; ; 7 4 0 0 0 0 0 0 0 0999 V2000; 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END. After the change I got:. ```; OpenBabel09241813522D. 7 4 0 0 0 0 0 0 0 0999 V2000; 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463:166,simpl,simple,166,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463,2,['simpl'],['simple']
Usability,"Yes - this is working as intended. 'C' matches aliphatic carbon, so won't match benzene whether presented as Kekule or aromatic. Feel free to comment if not clear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306206550:157,clear,clear,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306206550,2,['clear'],['clear']
Usability,"Yes, clearly a ""make install"" target for Travis would be useful - it would have caught this one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1617#issuecomment-323824183:5,clear,clearly,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1617#issuecomment-323824183,2,['clear'],['clearly']
Usability,"Yes, it is not a clear win, but setting things to zero doesn't automatically mask memory errors - they may still segfault and in this case it become easier to debug since the bug is reproducible. I was instigated to put these changes in after tracking down a bug that would have been much easier to find if the memory had been zero alloced. Some of these changes are not slower - for example when the calloc is replacing individually setting each element of the array to zero.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625898046:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625898046,2,['clear'],['clear']
Usability,"You are correct that I must have given the wrong example input to match output. I tried the simplify the input as much as possible to reproduce the problem, and must have used a prior version of the input. However, the output you show has 4 more hydrogens in the first line then the second when passed through obabel again to get the MW. Apparently the problem is not in the output of the tautomer, but rather the reparsing of that output when used as input. It does work correctly with the ismy parser, but not the ismi parser. So the bug is somewhere other than where I thought.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/322#issuecomment-305345111:92,simpl,simplify,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/322#issuecomment-305345111,2,['simpl'],['simplify']
Usability,"You clearly have multiple versions of Python on your system. I don't know what version of Python you're using or what installed `openbabel`. I know that neither the source package, or `conda-forge` would install a _openbabel.cpython-38-darwin.so file, which is clearly from an old binary. I personally recommend using anaconda, which IIRC installs into a separate path, e.g. `/usr/local/anaconda/bin/python`. The `conda-forge` channel is updated within hours of a release:; `conda install -c conda-forge openbabel`. My suggestion for you would be to `rm -rf /usr/local/lib/python3.8/site-packages/openbabel*` - that install is clearly linked to old Open Babel binaries.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2244#issuecomment-636352251:4,clear,clearly,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2244#issuecomment-636352251,6,['clear'],['clearly']
Usability,"You may be correct. It's for exactly this reason that we had an extensive beta period at the release of 3.0 to solicit feedback like this. Changing it now again would be disruptive. When Open Babel 4.0 is being prepared, please raise this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626613645:119,feedback,feedback,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626613645,2,['feedback'],['feedback']
Usability,"Your are right! A user can handle the functionality by himself, that's what I did in my own code to fix the bug. From another side, I think that convenience is important part of any libraries API. Users used to have such functionality: dictionaries in python, boost property tree etc. all of them have get(<default>) methods in API. I hope, that the solution I've proposed can be safe and convenient solution for users of your package (feedback is very welcome).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709:436,feedback,feedback,436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709,2,['feedback'],['feedback']
Usability,"Your right: See the point Noel but I missed this back in February --when I was ; rushing through this. The example on the OBRINGS web page had two successive passages one where it ; assigned; and another where it read in the GetData(""RingList""). I naively (without ; thinking through it) appended these with thinking about . ""RingList"" issue. I subsequently resolved this ----eliminating the GetData(""RingList""). As you suggest elimination the GetData statement. --and merely using . vector<OBRing*> vr;; vr=mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j; for (i=vr.begin(); i !=vr.end();i++); {; for(j= (*i)->_path.begin(); j!=(*i)->_path.end();++); cout << *j << ' ';; cout <<end;; }. Does indeed give you 1 2 3 4 5 6 as the correct ring atom numbers e.g. for ; C6H6.smi as input. Have subsequently incorporated variants of this into pharmacophore point ; perception code. Thanks for your feedback. 'My bad' on this one. Case closed-my error. ________________________________; From: Noel O'Boyle <baoilleach@users.sf.net>; To: [openbabel:bugs] <865@bugs.openbabel.p.re.sf.net>; Sent: Sat, May 11, 2013 3:37:02 AM; Subject: [openbabel:bugs] #865 OBRing: Issue-retrieving atoms in each of the ; smallest set of smallest rings. I don't get why you assign vr, but then use mol.GetData(""RingList"") instead.; But anyway, I believe that the cause of your problem is that ; mol.GetData(""RingList"") returns NULL in the case where there is no such data. ; You forgot to check for NULL before using it in the loop.; Marking as pending....; ________________________________; ; [bugs:#865] OBRing: Issue-retrieving atoms in each of the smallest set of ; smallest rings; Status: pending; Labels: OBRing ; Created: Sun Feb 24, 2013 06:09 PM UTC by Dannil; Last Updated: Sat May 11, 2013 08:57 AM UTC; Owner: Noel O'Boyle; Hi guys---; I am in the process of incorporating some 'automatic' 3D-pharmacophore ; perception code into one of my programs. Nearly all works---except for the ; percept",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282:914,feedback,feedback,914,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282,2,['feedback'],['feedback']
Usability,"[ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As an extra, here's the output when trying to print the InChI from the SMILES input and vice versa). ```; >>> print(inchi.write(""smi"")); c1ccc(c(c1)C(=O)O)[O-]	# looks fine; >>> print(smi.write(""inchi"")); ==============================; *** Open Babel Warning in InChI code; #1 :Prot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288:1649,clear,clear,1649,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288,1,['clear'],['clear']
Usability,[H] has to be treated as a special case. Thank you for the clear exposition of this overlooked edge case. Corrected in r3646 in the trunk code. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/976#issuecomment-281796501:59,clear,clear,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/976#issuecomment-281796501,2,['clear'],['clear']
Usability,[test-reaction-map.zip](https://github.com/openbabel/openbabel/files/1538600/test-reaction-map.zip). This PR attempt to fix the following bug:. OpenBabel get Segfault while reading CDX contains such a reaction map like this: A -> B -> C (I expect to get the 2 reactions from the output: A->B and B->C). I include a simple CDX to test for this case (please rename it from `.zip` to `.cdx`).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1720:315,simpl,simple,315,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1720,1,['simpl'],['simple']
Usability,"]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; // CreateOBMol; to_obmol(mymol,sample2);. // Work with babel molecule; OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""for babel found "" << maps.size() << "" unique mappings"" << std::endl;. // Work with ""custom"" molecule; query = OpenBabel::CompileMoleculeQuery(&sample2);; mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; maps.clear();; mapper->MapAll(&src,maps);; std::cout << ""for custom found "" << maps.size() << "" unique mappings"" << std::endl;. delete mapper;; delete query;. // Write down custom molecule to demonstrate that it is Ok; conv.WriteFile(&sample2,""custom.pdb"");; }. ```. The code outputs:. for babel found 24 unique mappings; for custom found 0 unique mappings. Expected output is 24 in both cases. OpenBabel version is 2.4.90. Here are the PDB files used:; [pdb.zip](https://github.com/openbabel/openbabel/files/2371329/pdb.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:2602,clear,clear,2602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,2,['clear'],['clear']
Usability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13552,Simpl,Simplify,13552,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11260,Simpl,Simplify,11260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:4039,Simpl,Simplify,4039,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299:184,simpl,simple,184,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299,1,['simpl'],['simple']
Usability,"`QChemOutputFormat::ReadMolecule` cannot handle Q-Chem output files that contain fragments. I've included a sample output, though I could also create a simpler one. Reported by: @berquist. Original Ticket: [openbabel/bugs/951](https://sourceforge.net/p/openbabel/bugs/951)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1331:152,simpl,simpler,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1331,1,['simpl'],['simpler']
Usability,"are of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash should be immediately identifiable - the lifetime of the OBConversion object is longer than the lifetime of the input stream passed to it (and the OBConversion destructor crashes trying to flush to the no longer available user-provided stream). It should not be surprising to anyone that leaving a stale pointer to a stream in OBConversion could cause bad things to happen and the fix is easy (call SetInStream(NULL) when done reading the input s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:4617,simpl,simple,4617,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['simpl'],['simple']
Usability,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1862,simpl,simply,1862,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,2,['simpl'],"['simple', 'simply']"
Usability,"atomic weight information leaks over into the atomic symbol in OBSmilesParser::ParseComplex . Here are two reproducibles. >>> mol = pybel.readstring(""smi"", ""[987U]""); >>> mol.atoms[0].OBAtom.GetType(); 'U87'. >>> pybel.readstring(""smi"", ""[1234z]"").write(""smi""); ==============================; *** Open Babel Warning in ParseComplex; Illegal aromatic element z]34. This is because the 'char symbol[7]' is used for isotope parsing then reused for symbol parsing but without properly clearing the field. The solution is to put a memset(symbol, '\0', 7*sizeof(char)) after; isotope = atoi(symbol);. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1080:482,clear,clearing,482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1080,1,['clear'],['clearing']
Usability,"b 3cd9ba8b 3b1ca892 3b1ca892 3a336052 275de761 ; 1c66c562 18eb4a1e 1170108b 1170108b 1170108b 1170108b ; 1170108b 1170108b 1170108b 09639408 094b2d63 026490f7"".Replace(Environment.NewLine, string.Empty);. string EthanolSmiles = ""CCO"";; string EthanolFP2 = @""00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 40000000 ; 00000000 00000000 00000000 00080008 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000"".Replace(Environment.NewLine, string.Empty);. VectorUInt res = new VectorUInt();. var blocks = KeggECFP2.Split(' ').ToList();; blocks.Reverse();; foreach (string block in blocks); {; uint uintValue = uint.Parse(block, System.Globalization.NumberStyles.HexNumber);; //byte[] bb = BitConverter.GetBytes(uintValue);; //Debug.WriteLine(formatter, uintValue, BitConverter.ToString(bb));. //parsed.Add(Big2Little3(uintValue));; res.Add(uintValue);; }. using (OBConversion conv = new OBConversion()); using (OBMol mol = new OBMol()); using (OBFingerprint fp = OBFingerprint.FindFingerprint(""ECFP2"")); using (VectorUInt vec = new VectorUInt()); {; conv.SetInFormat(""smi"");; mol.Clear();; conv.ReadString(mol, KeggSmiles);; fp.GetFingerprint(mol, vec);. System.Collections.Generic.List<uint> cmpFP = new System.Collections.Generic.List<uint>(vec);; //cmpFP.Reverse();. for (int i = 0; i < cmpFP.Count; i++); {; Debug.WriteLine(formatter,; i,; blocks[i].ToUpper(),; BitConverter.ToString(BitConverter.GetBytes(cmpFP[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(cmpFP[i]))).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(res[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(res[i]))).Replace(""-"",string.Empty));; }. byte[] bytes = Converter.ToByteArray(vec);. for (int i = 0; i < vec.Count; i++); {; Debug.Assert(vec[i] == res[i]);; }; }; }; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:3384,Clear,Clear,3384,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Clear'],['Clear']
Usability,"babel creates unreadable mmcif output (syntax problem) for the following fields:. _chemical.entry_id; _chemical_formula.entry_id; _cell.entry_id. In each case a whitespace is missing in the generated mmcif file after the keyword, e.g.; ; ##############; ## CHEMICAL ##; ##############. _chemical.entry_idREDUCED/1AFK_REDUCED.PDB; _chemical.name_common 'reduced/1afk_reduced.pdb'. ######################; ## CHEMICAL FORMULA ##; ######################. _chemical_formula.entry_idREDUCED/1AFK_REDUCED.PDB; _chemical_formula.structural 'C1170H2154N352O574P6S24'. ... ##########; ## CELL ##; ##########. _cell.entry_idREDUCED/1AFK_REDUCED.PDB; _cell.length_a 101.54; ... I'm pretty sure that mmcif requires a whitespace in these cases. The behvior is the same for Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39 (from Avogadro package) as for Open Babel 2.2.1 -- Mar 1 2009 -- 19:20:41 (latest release package from sourceforge). The input pdb file was created from mmcif using babel. (Please note: This is important for me because I want to setup a transformation flow for my mmcif based application using some pdb based transforms and Open Babel. My application parser (Rutgers cifparse-obj-v7.025) reads complete mmcif and doesn't simply ignore those lines as e.g. pymol seems to do.) . Reported by: knollentroll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/911:1226,simpl,simply,1226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/911,1,['simpl'],['simply']
Usability,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:357,simpl,simple,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['simpl'],['simple']
Usability,"bel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:2366,Simpl,Simplify,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"ble for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to force the generation of coordinates even when the current coordinates are zero would be a simple API improvement. This would produce the expected behavior if needed, while maintaining the current, slightly more efficient behavior for the majority of cases where it makes sense.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:3016,simpl,simple,3016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['simpl'],['simple']
Usability,"ce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7302,Simpl,Simplify,7302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"conda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1718,pause,paused,1718,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['pause'],['paused']
Usability,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:2478,feedback,feedback,2478,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['feedback'],['feedback']
Usability,"e post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed through anaconda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1471,learn,learning,1471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['learn'],['learning']
Usability,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1909,Guid,Guide,1909,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Guid'],['Guide']
Usability,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:964,Clear,Clear,964,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,2,['Clear'],['Clear']
Usability,"ers/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely set the full path to the python lib:. ```~~~; install_name_tool -change libpython2.7.dylib /Users/ms/anaconda/lib/libpython2.7.dylib _openbabel.so; ```~~~. With this treatment, the import in anaconda python succeeds without error. I don't know enough about linker directives to really figure out what's going wrong during the build. Is it possible to supply the linker with the full path to the specified python lib?. Reported by: mschmuker. Original Ticket: [openbabel/bugs/916](https://sourceforge.net/p/openbabel/bugs/916)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1296:1698,simpl,simple,1698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296,1,['simpl'],['simple']
Usability,"es produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7258,Simpl,Simplify,7258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"es?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Python version: 3.6.7; Open Babel version: 2.4.1 ; Operating system and version: Mac OS 10.13.6 (replicated on Ubuntu 16.04 LTS) . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. The formal charge of the attached .mol2 file should be +1. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Pybel reports the charge of this molecule to be 0, whereas RDKit correctly identifies it as having a formal charge of +1. When converted to any other file format by openbabel, the charge information is lost. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The .mol2 file is attached, and the following python snippet reproduces the problem:. ```; import pybel; from rdkit import Chem. # pybel mol2 file; pybel_mol2 = pybel.readfile(""mol2"", ""ligand.mol2"").__next__(); print(pybel_mol2.charge); # RDKit mol2 file; rdkit_mol2 = Chem.MolFromMol2File(""ligand.mol2""); print(Chem.GetFormalCharge(rdkit_mol2)); ```; [ligand.mol2.zip](https://github.com/openbabel/openbabel/files/3158771/ligand.mol2.zip). Thanks! Please let me know if there are any issues with replication, or if there's a simple mistake I'm making with the file reading API.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1982:2194,simpl,simple,2194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1982,1,['simpl'],['simple']
Usability,"from the source... need to implement OBSmartsPattern::RestrictedMatch(). (Haven't the faintest what this is supposed to do, but; clearly there are some calls that weren't implemented; in OELib.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394:129,clear,clearly,129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394,1,['clear'],['clearly']
Usability,"g to generate conformation using OBRotamerList and OBRotorList. However, I found 2 problems.; 1. SetFixAtoms did not seem to work for me. Could be my code problem?; 2. the default conformer(which I found later is the conformer 2 in my case) has the first atom X coordinate set to 0. here is my code:. #include <openbabel/babelconfig.h>; #include <openbabel/base.h>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/rotamer.h>; #include <openbabel/rotor.h>; #include <unistd.h>; #include ""tool.h"". using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {. OBBitVec bitvec;; OBConversion conv;; OBFormat *format_out = conv.FindFormat(""sdf"");; OBFormat *format_in = conv.FindFormat(""mol""); ; conv.SetInAndOutFormats(format_in, format_out); . ifstream ifs;; ofstream ofs;; ifs.open(""covalance.mol"");; if (!ifs) {; cerr <<""cannot read input file!"" << endl;; exit (-1);; }. ofs.open(""cf.sdf"");; OBMol mol;; for (int c=1;;c++) {; mol.Clear();; if (!conv.Read(&mol, &ifs)); break;; if (mol.Empty()); break;; flush(cout);; //mol.AddHydrogens();; OpenBabel::OBMolAtomIter atom(mol);; while(atom){; 	 bitvec.SetBitOn(atom->GetIdx());; 	 ++atom;; }; conv.Write(&mol, &cout);; OBRotorList rl;; rl.SetFixAtoms(bitvec);; rl.Setup(mol);; cerr << "" Number of rotors: "" << rl.Size() << endl;; std::vector<int> rotorKey(rl.Size() + 1, 0);; OBRotamerList rotamers;; rotamers.SetBaseCoordinateSets(mol);; rotamers.Setup(mol, rl);		 ; ; 	; OBRotorIterator ri;; OBRotor *rotor = rl.BeginRotor(ri); ; for (int i = 1; i < rl.Size() + 1; ++i, rotor = rl.NextRotor(ri)){ ; 	 rotorKey[i]=rotor->GetResolution().size()-1;; 	 if (rotorKey[i]<0); 		 rotorKey[i]=0;; 	 cout<<rotor->GetResolution().size()<<'\t';; } ; rotamers.AddRotamer(rotorKey);; rotor = rl.BeginRotor(ri);. for (int i = 1; i < rl.Size() + 1; ++i, rotor = rl.NextRotor(ri)){ ; 	 rotorKey[i]=rotor->GetResolution().size()-3;; 	 if (rotorKey[i]<0); 		 rotorKey[i]=0;; 	 cout<<rotor->GetResolution().siz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709:1001,Clear,Clear,1001,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709,1,['Clear'],['Clear']
Usability,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2339:3256,simpl,simple,3256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339,1,['simpl'],['simple']
Usability,"http://www.mdl.com is no longer available.; I found https://docs.chemaxon.com and replace with it, but I'm not sure it is appropriate.; I would appreciate feedback. Also, I updated the url in [`src/formats/exampleformat.cpp`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/src/formats/exampleformat.cpp), but [`XXXFormat`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/src/formats/exampleformat.cpp#L40) is not used in anywhere. Is the file required?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1980:155,feedback,feedback,155,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1980,1,['feedback'],['feedback']
Usability,"ib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17668,Simpl,Simplify,17668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"iew.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)CC = 1111 + 2*111 + 9*11 instead 1111 + 3*11, reffers to (a) and (b) in this list); d - Quaternary carbons are NOT recognized (or multiplyed by 0?); 		(CC(C)(C)C = 12*11 instead of 11111+4*11). It seems to me that explicit H are somehow bothering the SMILES parser that makes somehow the following multiplication: groupFound*nH. 2 - when a group is NOT present in the database, the program keeps working, while it should probably give me an error message ; (if not all the atoms have been visited at least one, the calculation should somehow FAIL or warn me, that not all atoms have been visited). Using the same files I submitted C=CC (result: 0) and C=CCC (result: 3*11): the first three carbons have never been evaluated but still there is a result!. Thank you for your kind attention, I hope I have been clear enough to help.; You are doing a beatyfull job. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159:2809,clear,clear,2809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159,1,['clear'],['clear']
Usability,"include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1880,Simpl,Simplify,1880,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"ings that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same residue type, i.e.; in PDB file 1ASZ every residue type appears multiple times,; but didn't always get the same single/double bond pattern. Best regards,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:1752,clear,clearly,1752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220,2,['clear'],['clearly']
Usability,"it's clear,when you try to convert a molecular to 3D format ，open babel cannot give correct response.; ![stl](https://github.com/openbabel/openbabel/assets/148681573/9f9ae744-c663-4b9e-bd5d-01c757be4d25); ![cif](https://github.com/openbabel/openbabel/assets/148681573/a1040acc-5d1a-4f34-9108-0cc594cd9092)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679:5,clear,clear,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679,1,['clear'],['clear']
Usability,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:3438,learn,learn,3438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['learn'],['learn']
Usability,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119:2210,clear,clearing,2210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119,1,['clear'],['clearing']
Usability,"master is not generating correct atom types when outputting pdbqt files. This is because the pdbqt writer works on copies (possibly fragments) of the original molecule. The copies have their perception flags reset. By default, nonpolar hydrogens are removed when outputting pdbqt files. When the aromaticity flags are recomputed on the molecule with the deleted hydrogens, atoms that should be aromatic are not marked as such. Note that this is a regression from 2.4. My suspicion is that there is a difference in how the new aromatic typer is dealing with molecules with deleted hydrogens. I would appreciate it if @baoilleach could take a look. I think this fix is good in addition to any fixes that may be made to the aromatic typer as it will prevent an unnecessary recomputation of aromaticity, but would appreciate feedback. A test case is provided (without the fix the phenyl ring of the tyrosine is not marked aromatic).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790:821,feedback,feedback,821,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790,1,['feedback'],['feedback']
Usability,"moving isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.inchi -xT /noiso`. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2308:1700,simpl,simply,1700,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308,1,['simpl'],['simply']
Usability,"n conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; > mymol.element = {6, 6, 6, 6, 6, 6};; > mymol.charge = {0, 0, 0, 0, 0, 0};; > mymol.resid = {1, 1, 1, 1, 1, 1};; > mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; > mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; > mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; > mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; > // CreateOBMol; > to_obmol(mymol,sample2);; >; > // Work with babel molecule; > OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; > OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; > OpenBabel::OBIsomorphismMapper::Mappings maps;; > mapper->MapAll(&src,maps);; >; > std::cout << ""for babel found "" << maps.size() << "" unique mappings"" << std::endl;; >; > // Work with ""custom"" molecule; > query = OpenBabel::CompileMoleculeQuery(&sample2);; > mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; > maps.clear();; > mapper->MapAll(&src,maps);; > std::cout << ""for custom found "" << maps.size() << "" unique mappings"" << std::endl;; >; > delete mapper;; > delete query;; >; > // Write down custom molecule to demonstrate that it is Ok; > conv.WriteFile(&sample2,""custom.pdb"");; > }; >; >; > The code outputs:; >; > for babel found 24 unique mappings; > for custom found 0 unique mappings; >; > Expected output is 24 in both cases.; >; > OpenBabel version is 2.4.90.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGdN9ikHgne58CVKLfjHgiqc8V5_7ks5uZ8QxgaJpZM4WgOWp>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:2983,clear,clear,2983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,2,['clear'],['clear']
Usability,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2394:4792,clear,clear,4792,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394,1,['clear'],['clear']
Usability,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:2142,clear,clear,2142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['clear'],['clear']
Usability,"nloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17532,Simpl,Simplify,17532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"o the lack of documentation in the original OpenBabel code. It appears that the notions of ""implicit hydrogens"" and ""implicit valence"" aren't documented, and it seems to be used to mean different things depending on who was writing code, where the molecule came from, and where it's going. * In some cases, the number of hydrogens is assumed to be the ImplicitHydrogen count (regardless of whether there are other explicit hydrogens). * In some cases, if there is at least one explicit hydrogen, the ImplicitHydrogen count is ignored and the total H count is just the explicit hydrogens. * In some cases, the total H count seems to be the implicit count plus the explicit hydrogens. In my humble opinion, the fundamental problem begins here:. void SetImplicitValence(int val); void IncrementImplicitValence(); void DecrementImplicitValence(). In my view, there is no such thing as ""implicit valence"". Valence is a well-defined property of an atom. Worse, the notion of ""implicit valence"" is never clearly documented, leading to different interpretations. On the other hand, for pragmatic reasons, we often choose to leave hydrogens out of our data structures, and have the notion of ""implicit hydrogens"", the number of hydrogens we would have to add to make our data structure match the molecule of interest. But -- and here's the problem -- it's almost impossible to deduce the actual hydrogen count from the valence, because the valence rules are built into different parsers and can be different depending on the parser. The obvious solution is to get rid of ""implicit valence"", and have either ""actual hydrogen count"" or ""actual valence"" on the OBAtom object, to handle cases where an atom is not in its normal valence state, or where the element's valence is not obvious. Once the actual-hydrogen or actual-valence values is defined, the ""implicit valence"" and ""implicit hydrogen"" count functions can be rewritten as derived properties rather than fundamental properties, and ""implicit valence"" f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794888:1325,clear,clearly,1325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794888,2,['clear'],['clearly']
Usability,"of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE ARE ABOVE "" << endl;; vector<OBRin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245:1005,simpl,simplest,1005,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245,1,['simpl'],['simplest']
Usability,"ol:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.142 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 28.637 kJ/mol. TOTAL ENERGY = 913.77844 kJ/mol. 1.mol:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.082 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 40.619 kJ/mol. TOTAL ENERGY = 925.70114 kJ/mol. 2. Feeding SD file 01.sdf:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.142 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 28.637 kJ/mol. TOTAL ENERGY = 913.77844 kJ/mol. E N E R G Y. TOTAL BOND STRETCHING ENERGY = 25051.011 kJ/mol; TOTAL ANGLE BENDING ENERGY = 4739.340 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 30521.391 kJ/mol. TOTAL ENERGY = 60311.74191 kJ/mol. One cleary sees that the result for compound 1 from the SD file is not even close to the one which processing the MOL file of the compound gives (e.g. total energy 925.70114 kJ/mol (MOL) vs. 60311.74191 kJ/mol (SDF). The behaviour is reproducible on both Windows and Linux (OB 2.2.1 and 2.2.3) . . The same is true for obminimize. If I minimize the above compounds (e.g. obminimize -h -c 1e-4 -o mol 0.mol > 0.min.mol), I do get these results:. 0.min.mol:. OpenBabel08070915532D. 21 21 0 0 0 0 0 0 0 0999 V2000; -2.4575 5.8304 0.0019 C 0 0 0 0 0; -1.3334 3.7826 0.0003 C 0 0 0 0 0; -0.0840 1.5542 -0.0001 C 0 0 0 0 0; -1.2704 -0.5623 -0.0000 C 0 0 0 0 0; -2.4873 1.5297 -0.0001 C 0 0 0 0 0; -2.4795 0.1324 -0.0000 C 0 0 0 0 0; -1.2974 2.2633 -0.0001 C 0 0 0 0 0; -0.0744 0.1570 -0.0000 C 0 0 0 0 0; -3.7739 6.5786 -0.0053 C 0 0 0 0 0; 1.1240 2.2511 -0.0000 O 0 0 0 0 0; -1.4212 6.4741 -0.0002 O 0 0 0 0 0; -0.2658 4.3741 0.0007 O 0 0 0 0 0; -2.4936 4.4784 0.0002 O 0 0 0 0 0; -1.2579 -1.6475 0.0000 H 0 0 0 0 0; -3.4377 2.0474 0.0000 H 0 0 0 0 0; -3.4111 -0.4215 0.0000 H 0 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923:1269,clear,cleary,1269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923,1,['clear'],['cleary']
Usability,"openbabel 3.1.1 on both windows and linux. My group and I have had success converting most of our molecules from .xyz to .smi, however when trying to convert oximes like formaldoxime (CH2NOH) or NH2CHNOH, openbabel returns the smiles [CH2][N]O and O[N]C=[NH2], when they should be ON=C and ON=CN respectively. In both cases, there should be a C=N double bond where there is only a CN single bond (and in the second case an additional incorrect C=N double bond). I was wondering if this issue could be fixed or if I could get some knowledge on how your bond prediction system works, like if it bases on atom distance or the number of bonds an atom would/should have etc. As for using alternate file formats, my group is working with VASP files which don't include bond information, so we cannot use something like .mol. We understand the limitations of xyz and the fact the openbabel has to predict the bonds, this case seemed notable however since the bug appeared for a seemingly simple molecule that wasn't a radical or any special case. Attached are the .xyz files for the two molecules I mentioned. Thank you for the help. . [xyzfiles.zip](https://github.com/openbabel/openbabel/files/11681743/xyzfiles.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2594:981,simpl,simple,981,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594,1,['simpl'],['simple']
Usability,"ort_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6668,Simpl,Simplify,6668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2062:1906,clear,clear,1906,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062,1,['clear'],['clear']
Usability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12685,Simpl,Simplify,12685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:10524,Simpl,Simplify,10524,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"ownloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20444,Simpl,Simplify,20444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"pen Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel)); Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The charged hydrogen atoms are retained or a warning is issued that such constructs are not allowed. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Operations that output SMILES strings silently remove `[H-]` and `[H+]` atoms from constructs like `[H-][Al+3]([H-])[H-]`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Operation:; ```; echo ""[H-][Al+3]([H-])[H-]"" | obabel -i smi -o can; ```; Expected output:; ```; [H-][Al+3]([H-])[H-] or [H][Al]([H])[H] or something similar; ```; Actual output:; ```; [Al+3]; ```. # Additional notes. * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to SDF retains the negatively charged hydrogen atoms.; * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to InChI retains the H atoms, although it does disconnect them and neutralise the overall charge. ; * The charged hydrogen atoms are not removed if they are not bound by other atoms.; * The charged hydrogen atoms are not removed if they are bridging atoms, e.g. canonicalisation of `[Al][H-][Al]` produces `[Al][H-][Al]`.; * I fully understand that the provided example is quite unconventional, thus if it is not supported, it would be very useful to get a clear warning/error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2625:2358,clear,clear,2358,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2625,1,['clear'],['clear']
Usability,"pen data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; aligner = self.x = CovalentDockingMaker(**self.alignerArgs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 230, in __init__; self.initResidue(); ^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 273, in initResidue; self.residueProfile(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 298, in residueProfile; self.setResidueParms(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 325, in setResidueParms; resInfo = self._residueParms[self.resType]; ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^; TypeError: unhashable type: 'dict'; ```. To make it simple, should I install Python2.7 and try to run the script with that Python version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:2784,simpl,simple,2784,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472,2,['simpl'],['simple']
Usability,"pip install openbabel. Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/; Collecting openbabel; Downloading openbabel-3.1.1.1.tar.gz (82 kB); |████████████████████████████████| 82 kB 1.0 MB/s ; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; ERROR: Command errored out with exit status 1: /usr/bin/python3 -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""'; __file__='""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-b91qplvd/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.8/openbabel Check the logs for full command output. if anyone can update openbabel pypi (https://pypi.org/project/openbabel/) in python it will be helpful for us to do many things. Thanks in advance :)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2556:60,simpl,simple,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2556,2,['simpl'],['simple']
Usability,"possible, I recommend the use of of the `.sdf` format for the intermediate step because (in contrast to e.g., `.xyz`) it equally contains what MDL coined as _connection table_ about which (and how) atoms are bound. A) The more verbose approach consists of three distinct instructions to the CLI. This documents each step by a permanent record.; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf -O 2D.sdf`; `obabel -isdf 2D.sdf --gen3d -osdf -O 3D.sdf`; And, because you want to continue with the `.mol2` format; `obabel -isdf 3D.sdf -omol2 -O 3D.mol2`. B) The more condensed approach uses the intermediate output of one of the steps mentioned above as input for the subsequent step. Thus, you start with the SMILES string to form the `.mol2` files without creation of intermediate permanent files. Call OpenBabel with one line of instruction in the pattern of; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf | obabel -isdf --gen3d -osdf | obabel -isdf -omol2 -O 3D_relayed.mol2`. The comparison of the two approaches reveals that coordinates in the `.mol2` files written differ from each other. As shown, e.g. by vimdiff ([an introduction](https://www.tutorialspoint.com/vim/vim_diff.htm), but you may use a difference viewer of your preference), these differences however _do not_ affect the connection tables in the later part of the `.mol2` files:. ![diff_view](https://user-images.githubusercontent.com/19709084/114673269-878cbc00-9cf5-11eb-8cef-6c68f1e53f15.png). Depending on the intended use of the `.mol2`, these differences may not be relevant to you.*) Or, you use them anyway as a _starting point_ for further minimization with one of the force field options in OpenBabel or a third party program. *) Simplified into the `.xyz` format, you may quantify the difference of the geometries, e.g. by a [Kabsch test](https://github.com/charnley/rmsd). [test_run.zip](https://github.com/openbabel/openbabel/files/6309095/test_run.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344:2005,Simpl,Simplified,2005,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344,1,['Simpl'],['Simplified']
Usability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14616,Simpl,Simplify,14616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:12166,Simpl,Simplify,12166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"put); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8968,Simpl,Simplify,8968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"rt_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:6194,Simpl,Simplify,6194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:1012,Clear,Clear,1012,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,4,['Clear'],['Clear']
Usability,"s to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1078,simpl,simply,1078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,2,['simpl'],['simply']
Usability,"t_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4382,Simpl,Simplify,4382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1598,guid,guide,1598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,2,['guid'],['guide']
Usability,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1545,learn,learnxinyminutes,1545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,2,['learn'],['learnxinyminutes']
Usability,"this recently burnt me. a simple test:. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osdf --gen3d` # -OH, wrong. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osmi | obabel -ismi --gen3d -osdf` # -O[-], correct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185:26,simpl,simple,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185,2,['simpl'],['simple']
Usability,"tions I would like to add an Extra Point (EP) of Charge to halides (similar to how hydrogens are added to structures). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'Ad",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1293,simpl,simple,1293,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,1,['simpl'],['simple']
Usability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9716,Simpl,Simplify,9716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,use simple cube format for molecules with single grid,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580:4,simpl,simple,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580,2,['simpl'],['simple']
Usability,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:8363,Simpl,Simplify,8363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"v[]); {; OBForceField* pFF = OBForceField::FindForceField(""MMFF94"");; if (!pFF); {; cout << ""Bail out! Can't find forcefield!"" << endl;; system(""pause"");; return -1;; }; OBOp* pOp = OBOp::FindType(""Gen3D"");; if (!pOp); {; cout << ""Bail out! Can't find Gen3D!"" << endl;; system(""pause"");; return -1;; }. string SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::AssignTorVals(OpenBabel::OBMol; & mol={...}) Line 424 C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::Setup(OpenBabel::OBMol &; mol={...}) Line 53 C++; OpenBabelDLLD.d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:1260,pause,pause,1260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,1,['pause'],['pause']
Usability,"varible was being used uninitialized, pretty simple fix.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/32:45,simpl,simple,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/32,1,['simpl'],['simple']
Usability,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980:137,simpl,simple,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980,1,['simpl'],['simple']
Usability,"version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 6.513 -2.996 1.0 88.86 ? 335 GLU A CD 1 P04406 UNP 335 E ; ATOM 2533 O OE1 . GLU A 1 335 ? -20.200 5.869 -3.409 1.0 88.86 ? 335 GLU A OE1 1 P04406 UNP 335 E ; ATOM 2534 O OE2 . GLU A 1 335 ? -22.265 5.907 -2.767 1.0 88.86 ? 335 GLU A OE2 1 P04406 UNP 335 E ; ATOM 2535 O OXT . GLU A 1 335 ? -23.030 10.937 -5.405 1.0 88.86 ? 335 GLU A OXT 1 P04406 UNP 335 E ; HETATM 2536 O O7N ? NAD B 2 336 ? 19.418873 -12.557346 25.040537 1.00 27.94 ? 336 NAD B O7N 1 ? ? ? ? ; HETATM 2537 C C7N ? NAD B 2 336 ? 18.608522 -13.471519 25.032057 1.00 31.53 ? 336",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458:1772,clear,clearly,1772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458,1,['clear'],['clearly']
Usability,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:278,Clear,Clear,278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,10,['Clear'],['Clear']
Usability,"wnloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16310,Simpl,Simplify,16310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"xpected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenCh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:1767,simpl,simplification,1767,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,1,['simpl'],['simplification']
Usability,"y seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are plenty of examples in the `tools` directory... Yes, I am learning how to use the library from the `/tools` directory and from other programs using the library, like Avogadro. Thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:2796,learn,learning,2796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,2,['learn'],['learning']
Usability,"y; In the derivation Wilmer et al. talk about the orbital overlap energy term (or short-ranged damping term), which they define as. <a href=""https://www.codecogs.com/eqnedit.php?latex=E_o(r_{ij})&space;=&space;\sum_m&space;\left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K}&space;\right&space;)^2}&space;\left(\frac{J_{ij}}{K}&space;=&space;\frac{J_{ij}^2r_{ij}}{K^2}&space;-&space;\frac{1}{r_{ij}}&space;\right&space;)&space;\right&space;)"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?E_o(r_{ij})&space;=&space;\sum_m&space;\left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K}&space;\right&space;)^2}&space;\left(\frac{J_{ij}}{K}&space;=&space;\frac{J_{ij}^2r_{ij}}{K^2}&space;-&space;\frac{1}{r_{ij}}&space;\right&space;)&space;\right&space;)"" title=""E_o(r_{ij}) = \sum_m \left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K} \right )^2} \left(\frac{J_{ij}}{K} = \frac{J_{ij}^2r_{ij}}{K^2} - \frac{1}{r_{ij}} \right ) \right )"" /></a>. In the derivation, they make a clear distinction between the diagonal entries of `A`, and the off-diagonal entries. I'll refer to page 9 in the Supporting Info of the original paper, where they define the entries of `A` as:. <a href=""https://www.codecogs.com/eqnedit.php?latex=\frac{K}{2}&space;\left(&space;\alpha_{km}&space;&plus;&space;\beta_{km}&space;&plus;&space;E_o(r_{km})&space;\right&space;)&space;\equiv&space;J_{km}^{PE}"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?\frac{K}{2}&space;\left(&space;\alpha_{km}&space;&plus;&space;\beta_{km}&space;&plus;&space;E_o(r_{km})&space;\right&space;)&space;\equiv&space;J_{km}^{PE}"" title=""\frac{K}{2} \left( \alpha_{km} + \beta_{km} + E_o(r_{km}) \right ) \equiv J_{km}^{PE}"" /></a>. <a href=""https://www.codecogs.com/eqnedit.php?latex=K&space;\left(&space;\alpha^*_{kk}&space;-&space;\frac{1}{\eta\sqrt{\pi}}&space;&plus;&space;\beta^*_{kk}&space;\right&space;)&space;&plus;&space;J_k&space;\equiv&space;J_{kk}^{PE}"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?K&sp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861:2132,clear,clear,2132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861,1,['clear'],['clear']
